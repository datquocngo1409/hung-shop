import { __decorate, __metadata } from 'tslib';
import { NgModule } from '@angular/core';
import { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, Router, RouterModule } from '@angular/router';
import { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';

import * as ɵngcc0 from '@angular/core';
let LoadingBarRouterModule = class LoadingBarRouterModule {
    constructor(router, loader) {
        const ref = loader.useRef('router');
        router.events.subscribe((event) => {
            const navState = this.getCurrentNavigationState(router);
            if (navState && navState.ignoreLoadingBar) {
                return;
            }
            if (event instanceof NavigationStart) {
                ref.start();
            }
            if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {
                ref.complete();
            }
        });
    }
    getCurrentNavigationState(router) {
        // `getCurrentNavigation` only available in angular `7.2`
        const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();
        if (currentNavigation && currentNavigation.extras) {
            return currentNavigation.extras.state;
        }
        return {};
    }
};
LoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LoadingBarRouterModule });
LoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LoadingBarRouterModule_Factory(t) { return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(LoadingBarService)); }, imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule] });
LoadingBarRouterModule.ctorParameters = () => [
    { type: Router },
    { type: LoadingBarService }
];
LoadingBarRouterModule = __decorate([ __metadata("design:paramtypes", [Router, LoadingBarService])
], LoadingBarRouterModule);
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, { imports: function () { return [RouterModule, LoadingBarModule]; }, exports: function () { return [RouterModule, LoadingBarModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{
        type: NgModule,
        args: [{
                imports: [RouterModule, LoadingBarModule],
                exports: [RouterModule, LoadingBarModule]
            }]
    }], function () { return [{ type: Router }, { type: LoadingBarService }]; }, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { LoadingBarRouterModule };

//# sourceMappingURL=ngx-loading-bar-router.js.map