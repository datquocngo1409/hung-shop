{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport HasObservers from '../core/has-observers';\nimport Point from './point';\nimport Size from './size';\n\nvar Rect = /*#__PURE__*/function (_HasObservers) {\n  _inherits(Rect, _HasObservers);\n\n  var _super = _createSuper(Rect);\n\n  function Rect() {\n    var _this;\n\n    var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Point();\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Size();\n\n    _classCallCheck(this, Rect);\n\n    _this = _super.call(this);\n\n    _this.setOrigin(origin);\n\n    _this.setSize(size);\n\n    return _this;\n  }\n\n  _createClass(Rect, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Rect(this.origin.clone(), this.size.clone());\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      return other && other.origin.equals(this.origin) && other.size.equals(this.size);\n    }\n  }, {\n    key: \"setOrigin\",\n    value: function setOrigin(value) {\n      this._observerField(\"origin\", Point.create(value));\n\n      this.geometryChange();\n      return this;\n    }\n  }, {\n    key: \"getOrigin\",\n    value: function getOrigin() {\n      return this.origin;\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(value) {\n      this._observerField(\"size\", Size.create(value));\n\n      this.geometryChange();\n      return this;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.size;\n    }\n  }, {\n    key: \"width\",\n    value: function width() {\n      return this.size.width;\n    }\n  }, {\n    key: \"height\",\n    value: function height() {\n      return this.size.height;\n    }\n  }, {\n    key: \"topLeft\",\n    value: function topLeft() {\n      return this.origin.clone();\n    }\n  }, {\n    key: \"bottomRight\",\n    value: function bottomRight() {\n      return this.origin.clone().translate(this.width(), this.height());\n    }\n  }, {\n    key: \"topRight\",\n    value: function topRight() {\n      return this.origin.clone().translate(this.width(), 0);\n    }\n  }, {\n    key: \"bottomLeft\",\n    value: function bottomLeft() {\n      return this.origin.clone().translate(0, this.height());\n    }\n  }, {\n    key: \"center\",\n    value: function center() {\n      return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox(matrix) {\n      var tl = this.topLeft().transformCopy(matrix);\n      var tr = this.topRight().transformCopy(matrix);\n      var br = this.bottomRight().transformCopy(matrix);\n      var bl = this.bottomLeft().transformCopy(matrix);\n      return Rect.fromPoints(tl, tr, br, bl);\n    }\n  }, {\n    key: \"transformCopy\",\n    value: function transformCopy(m) {\n      return Rect.fromPoints(this.topLeft().transform(m), this.bottomRight().transform(m));\n    }\n  }, {\n    key: \"expand\",\n    value: function expand(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      this.size.width += 2 * x;\n      this.size.height += 2 * y;\n      this.origin.translate(-x, -y);\n      return this;\n    }\n  }, {\n    key: \"expandCopy\",\n    value: function expandCopy(x, y) {\n      return this.clone().expand(x, y);\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point) {\n      var origin = this.origin;\n      var bottomRight = this.bottomRight();\n      return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n    }\n  }, {\n    key: \"_isOnPath\",\n    value: function _isOnPath(point, width) {\n      var rectOuter = this.expandCopy(width, width);\n      var rectInner = this.expandCopy(-width, -width);\n      return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n    }\n  }], [{\n    key: \"fromPoints\",\n    value: function fromPoints() {\n      var topLeft = Point.min.apply(null, arguments);\n      var bottomRight = Point.max.apply(null, arguments);\n      var size = new Size(bottomRight.x - topLeft.x, bottomRight.y - topLeft.y);\n      return new Rect(topLeft, size);\n    }\n  }, {\n    key: \"union\",\n    value: function union(a, b) {\n      return Rect.fromPoints(Point.min(a.topLeft(), b.topLeft()), Point.max(a.bottomRight(), b.bottomRight()));\n    }\n  }, {\n    key: \"intersect\",\n    value: function intersect(a, b) {\n      var rect1 = {\n        left: a.topLeft().x,\n        top: a.topLeft().y,\n        right: a.bottomRight().x,\n        bottom: a.bottomRight().y\n      };\n      var rect2 = {\n        left: b.topLeft().x,\n        top: b.topLeft().y,\n        right: b.bottomRight().x,\n        bottom: b.bottomRight().y\n      };\n\n      if (rect1.left <= rect2.right && rect2.left <= rect1.right && rect1.top <= rect2.bottom && rect2.top <= rect1.bottom) {\n        return Rect.fromPoints(new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)), new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom)));\n      }\n    }\n  }]);\n\n  return Rect;\n}(HasObservers);\n\nexport default Rect;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/geometry/rect.js"],"names":["HasObservers","Point","Size","Rect","origin","size","setOrigin","setSize","clone","other","equals","value","_observerField","create","geometryChange","width","height","translate","matrix","tl","topLeft","transformCopy","tr","topRight","br","bottomRight","bl","bottomLeft","fromPoints","m","transform","x","y","expand","point","rectOuter","expandCopy","rectInner","containsPoint","min","apply","arguments","max","a","b","rect1","left","top","right","bottom","rect2","Math"],"mappings":"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","sourcesContent":["import HasObservers from '../core/has-observers';\nimport Point from './point';\nimport Size from './size';\n\nclass Rect extends HasObservers {\n    constructor(origin = new Point(), size = new Size()) {\n        super();\n\n        this.setOrigin(origin);\n        this.setSize(size);\n    }\n\n    clone() {\n        return new Rect(\n            this.origin.clone(),\n            this.size.clone()\n        );\n    }\n\n    equals(other) {\n        return other &&\n               other.origin.equals(this.origin) &&\n               other.size.equals(this.size);\n    }\n\n    setOrigin(value) {\n        this._observerField(\"origin\", Point.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getOrigin() {\n        return this.origin;\n    }\n\n    setSize(value) {\n        this._observerField(\"size\", Size.create(value));\n        this.geometryChange();\n        return this;\n    }\n\n    getSize() {\n        return this.size;\n    }\n\n    width() {\n        return this.size.width;\n    }\n\n    height() {\n        return this.size.height;\n    }\n\n    topLeft() {\n        return this.origin.clone();\n    }\n\n    bottomRight() {\n        return this.origin.clone().translate(this.width(), this.height());\n    }\n\n    topRight() {\n        return this.origin.clone().translate(this.width(), 0);\n    }\n\n    bottomLeft() {\n        return this.origin.clone().translate(0, this.height());\n    }\n\n    center() {\n        return this.origin.clone().translate(this.width() / 2, this.height() / 2);\n    }\n\n    bbox(matrix) {\n        const tl = this.topLeft().transformCopy(matrix);\n        const tr = this.topRight().transformCopy(matrix);\n        const br = this.bottomRight().transformCopy(matrix);\n        const bl = this.bottomLeft().transformCopy(matrix);\n\n        return Rect.fromPoints(tl, tr, br, bl);\n    }\n\n    transformCopy(m) {\n        return Rect.fromPoints(\n            this.topLeft().transform(m),\n            this.bottomRight().transform(m)\n        );\n    }\n\n    expand(x, y = x) {\n\n        this.size.width += 2 * x;\n        this.size.height += 2 * y;\n\n        this.origin.translate(-x, -y);\n\n        return this;\n    }\n\n    expandCopy(x, y) {\n        return this.clone().expand(x, y);\n    }\n\n    containsPoint(point) {\n        const origin = this.origin;\n        const bottomRight = this.bottomRight();\n        return !(point.x < origin.x || point.y < origin.y || bottomRight.x < point.x || bottomRight.y < point.y);\n    }\n\n    _isOnPath(point, width) {\n        const rectOuter = this.expandCopy(width, width);\n        const rectInner = this.expandCopy(-width, -width);\n\n        return rectOuter.containsPoint(point) && !rectInner.containsPoint(point);\n    }\n\n    static fromPoints() {\n        const topLeft = Point.min.apply(null, arguments);\n        const bottomRight = Point.max.apply(null, arguments);\n        const size = new Size(\n            bottomRight.x - topLeft.x,\n            bottomRight.y - topLeft.y\n        );\n\n        return new Rect(topLeft, size);\n    }\n\n    static union(a, b) {\n        return Rect.fromPoints(\n            Point.min(a.topLeft(), b.topLeft()),\n            Point.max(a.bottomRight(), b.bottomRight())\n        );\n    }\n\n    static intersect(a, b) {\n        const rect1 = {\n            left: a.topLeft().x,\n            top: a.topLeft().y,\n            right: a.bottomRight().x,\n            bottom: a.bottomRight().y\n        };\n\n        const rect2 = {\n            left: b.topLeft().x,\n            top: b.topLeft().y,\n            right: b.bottomRight().x,\n            bottom: b.bottomRight().y\n        };\n\n        if (rect1.left <= rect2.right &&\n            rect2.left <= rect1.right &&\n            rect1.top <= rect2.bottom &&\n            rect2.top <= rect1.bottom) {\n            return Rect.fromPoints(\n                new Point(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),\n                new Point(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))\n            );\n        }\n    }\n}\n\nexport default Rect;\n"]},"metadata":{},"sourceType":"module"}