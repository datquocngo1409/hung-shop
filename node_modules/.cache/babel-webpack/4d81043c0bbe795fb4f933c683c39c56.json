{"ast":null,"code":"import _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Directive, ElementRef, NgZone, Input, Output, NgModule, Renderer2, Injectable, Component } from '@angular/core';\nimport Draggable from '@telerik/kendo-draggable';\nimport { CommonModule } from '@angular/common';\nimport { auditTime } from 'rxjs/operators';\nimport { merge, fromEvent, from } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\n\nvar isDocumentAvailable = function isDocumentAvailable() {\n  return typeof document !== 'undefined';\n};\n\nvar isChanged = function isChanged(propertyName, changes) {\n  var skipFirstChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return typeof changes[propertyName] !== 'undefined' && (!changes[propertyName].isFirstChange() || !skipFirstChange) && changes[propertyName].previousValue !== changes[propertyName].currentValue;\n};\n\nvar anyChanged = function anyChanged(propertyNames, changes) {\n  var skipFirstChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return propertyNames.some(function (name) {\n    return isChanged(name, changes, skipFirstChange);\n  });\n};\n\nvar hasObservers = function hasObservers(emitter) {\n  return emitter && emitter.observers.length > 0;\n};\n\nvar guid = function guid() {\n  var id = \"\";\n\n  for (var i = 0; i < 32; i++) {\n    var random = Math.random() * 16 | 0; // tslint:disable-line:no-bitwise\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      id += \"-\";\n    } // tslint:disable-next-line:no-bitwise\n\n\n    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);\n  }\n\n  return id;\n};\n\nvar DraggableDirective = /*#__PURE__*/function () {\n  function DraggableDirective(element, ngZone) {\n    _classCallCheck(this, DraggableDirective);\n\n    this.element = element;\n    this.ngZone = ngZone;\n    this.enableDrag = true;\n    this.kendoPress = new EventEmitter();\n    this.kendoDrag = new EventEmitter();\n    this.kendoRelease = new EventEmitter();\n  }\n\n  _createClass(DraggableDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.toggleDraggable();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isChanged('enableDrag', changes)) {\n        this.toggleDraggable();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyDraggable();\n    }\n  }, {\n    key: \"toggleDraggable\",\n    value: function toggleDraggable() {\n      var _this = this;\n\n      if (isDocumentAvailable()) {\n        this.destroyDraggable();\n\n        if (this.enableDrag) {\n          this.draggable = new Draggable({\n            drag: function drag(e) {\n              return _this.kendoDrag.next(e);\n            },\n            press: function press(e) {\n              return _this.kendoPress.next(e);\n            },\n            release: function release(e) {\n              return _this.kendoRelease.next(e);\n            }\n          });\n          this.ngZone.runOutsideAngular(function () {\n            return _this.draggable.bindTo(_this.element.nativeElement);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"destroyDraggable\",\n    value: function destroyDraggable() {\n      if (this.draggable) {\n        this.draggable.destroy();\n        this.draggable = null;\n      }\n    }\n  }]);\n\n  return DraggableDirective;\n}();\n\nDraggableDirective.ɵfac = function DraggableDirective_Factory(t) {\n  return new (t || DraggableDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nDraggableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DraggableDirective,\n  selectors: [[\"\", \"kendoDraggable\", \"\"]],\n  inputs: {\n    enableDrag: \"enableDrag\"\n  },\n  outputs: {\n    kendoPress: \"kendoPress\",\n    kendoDrag: \"kendoDrag\",\n    kendoRelease: \"kendoRelease\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nDraggableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nDraggableDirective.propDecorators = {\n  enableDrag: [{\n    type: Input\n  }],\n  kendoPress: [{\n    type: Output\n  }],\n  kendoDrag: [{\n    type: Output\n  }],\n  kendoRelease: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDraggable]'\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }];\n  }, {\n    enableDrag: [{\n      type: Input\n    }],\n    kendoPress: [{\n      type: Output\n    }],\n    kendoDrag: [{\n      type: Output\n    }],\n    kendoRelease: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar DraggableModule = function DraggableModule() {\n  _classCallCheck(this, DraggableModule);\n};\n\nDraggableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DraggableModule\n});\nDraggableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DraggableModule_Factory(t) {\n    return new (t || DraggableModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DraggableModule, {\n    declarations: function declarations() {\n      return [DraggableDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [DraggableDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DraggableModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DraggableDirective],\n      exports: [DraggableDirective],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/* tslint:disable:no-input-rename */\n\n/**\n * @hidden\n */\n\n\nvar EventsOutsideAngularDirective = /*#__PURE__*/function () {\n  function EventsOutsideAngularDirective(element, ngZone, renderer) {\n    _classCallCheck(this, EventsOutsideAngularDirective);\n\n    this.element = element;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.events = {};\n  }\n\n  _createClass(EventsOutsideAngularDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      if (!this.element || !this.element.nativeElement) {\n        return;\n      }\n\n      var events = this.events;\n      this.subscriptions = [];\n      this.ngZone.runOutsideAngular(function () {\n        for (var name in events) {\n          if (events.hasOwnProperty(name)) {\n            _this2.subscriptions.push(_this2.renderer.listen(_this2.element.nativeElement, name, _this2.scope ? events[name].bind(_this2.scope) : events[name]));\n          }\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        for (var idx = 0; idx < this.subscriptions.length; idx++) {\n          this.subscriptions[idx]();\n        }\n\n        this.subscriptions = null;\n      }\n    }\n  }]);\n\n  return EventsOutsideAngularDirective;\n}();\n\nEventsOutsideAngularDirective.ɵfac = function EventsOutsideAngularDirective_Factory(t) {\n  return new (t || EventsOutsideAngularDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nEventsOutsideAngularDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EventsOutsideAngularDirective,\n  selectors: [[\"\", \"kendoEventsOutsideAngular\", \"\"]],\n  inputs: {\n    events: [\"kendoEventsOutsideAngular\", \"events\"],\n    scope: \"scope\"\n  }\n});\n/** @nocollapse */\n\nEventsOutsideAngularDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }];\n};\n\nEventsOutsideAngularDirective.propDecorators = {\n  events: [{\n    type: Input,\n    args: ['kendoEventsOutsideAngular']\n  }],\n  scope: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EventsOutsideAngularDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoEventsOutsideAngular]'\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    events: [{\n      type: Input,\n      args: ['kendoEventsOutsideAngular']\n    }],\n    scope: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar EventsModule = function EventsModule() {\n  _classCallCheck(this, EventsModule);\n};\n\nEventsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: EventsModule\n});\nEventsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function EventsModule_Factory(t) {\n    return new (t || EventsModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(EventsModule, {\n    declarations: [EventsOutsideAngularDirective],\n    exports: [EventsOutsideAngularDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EventsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [EventsOutsideAngularDirective],\n      exports: [EventsOutsideAngularDirective]\n    }]\n  }], null, null);\n})();\n\nvar ResizeService = /*#__PURE__*/function () {\n  function ResizeService(resizeBatchService) {\n    _classCallCheck(this, ResizeService);\n\n    this.resizeBatchService = resizeBatchService;\n    this.resize = new EventEmitter();\n    this.acceptedSize = false;\n    this.state = 0\n    /* Initial */\n    ;\n  }\n\n  _createClass(ResizeService, [{\n    key: \"acceptSize\",\n    value: function acceptSize() {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.measure();\n      this.lastWidth = size.width;\n      this.lastHeight = size.height;\n      this.acceptedSize = true;\n    }\n  }, {\n    key: \"checkChanges\",\n    value: function checkChanges() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      if (this.state === 0\n      /* Initial */\n      ) {\n          this.state = 1\n          /* Initializing */\n          ; // batch initial measure\n\n          this.resizeBatchService.schedule(this, this.init);\n        }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.resizeBatchService.cancel(this);\n    }\n  }, {\n    key: \"checkSize\",\n    value: function checkSize() {\n      if (!this.parentElement) {\n        return;\n      }\n\n      var _this$measure = this.measure(),\n          width = _this$measure.width,\n          height = _this$measure.height;\n\n      var sameSize = width === this.lastWidth && height === this.lastHeight;\n\n      if (sameSize) {\n        return;\n      }\n\n      this.lastWidth = width;\n      this.lastHeight = height;\n      this.acceptedSize = false;\n      this.resize.emit();\n      return true;\n    }\n  }, {\n    key: \"initSize\",\n    value: function initSize() {\n      var size = this.measure();\n      this.lastWidth = size.width;\n      this.lastHeight = size.height;\n    }\n  }, {\n    key: \"measure\",\n    value: function measure() {\n      var width = 0;\n      var height = 0;\n\n      if (this.parentElement) {\n        height = this.parentElement.offsetHeight;\n        width = this.parentElement.offsetWidth;\n      }\n\n      return {\n        height: height,\n        width: width\n      };\n    }\n  }]);\n\n  return ResizeService;\n}(); // tslint:disable:deprecation\n\n\nvar div = function div(style) {\n  var el = document.createElement('div');\n  el.style.cssText = style;\n  return el;\n};\n\nvar computedProp = function computedProp(elem, prop) {\n  return getComputedStyle(elem, null).getPropertyValue(prop);\n};\n\nvar WRAP_STYLE = 'position: absolute; display: block; left: 0; top: 0; right: 0; bottom: 0; z-index: -1;' + 'overflow: hidden; visibility: hidden;';\nvar EXPAND_CHILD_STYLE = 'position: absolute; left: 0; top: 0; transition: 0s;';\nvar SHRINK_CHILD_STYLE = EXPAND_CHILD_STYLE + 'width: 200%; height: 200%;';\n\nvar ResizeCompatService = /*#__PURE__*/function (_ResizeService) {\n  _inherits(ResizeCompatService, _ResizeService);\n\n  var _super = _createSuper(ResizeCompatService);\n\n  function ResizeCompatService(resizeBatchService, element, ngZone) {\n    var _this3;\n\n    _classCallCheck(this, ResizeCompatService);\n\n    _this3 = _super.call(this, resizeBatchService);\n    _this3.element = element;\n    _this3.ngZone = ngZone;\n    return _this3;\n  }\n\n  _createClass(ResizeCompatService, [{\n    key: \"checkChanges\",\n    value: function checkChanges() {\n      if (this.state === 2\n      /* Initialized */\n      ) {\n          if (!this.resizeBatchService.isScheduled(this)) {\n            this.resizeBatchService.schedule(this, this.checkSize);\n          }\n\n          return;\n        }\n\n      _get(_getPrototypeOf(ResizeCompatService.prototype), \"checkChanges\", this).call(this);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(ResizeCompatService.prototype), \"destroy\", this).call(this);\n\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      if (this.expand) {\n        var element = this.element.nativeElement;\n        element.removeChild(this.expand);\n        element.removeChild(this.shrink);\n        this.expand.removeChild(this.expandChild);\n        this.expand = this.expandChild = this.shrink = this.element = null;\n      }\n    }\n  }, {\n    key: \"checkSize\",\n    value: function checkSize() {\n      if (_get(_getPrototypeOf(ResizeCompatService.prototype), \"checkSize\", this).call(this)) {\n        this.reset();\n        return true;\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var parentElement = this.parentElement = this.element.nativeElement.parentElement;\n\n      if (computedProp(parentElement, 'position') === 'static') {\n        parentElement.style.position = 'relative';\n      }\n\n      this.state = 2\n      /* Initialized */\n      ;\n      this.render();\n      this.reset();\n      this.initSize();\n      this.subscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var element = this.element.nativeElement;\n      element.style.cssText = WRAP_STYLE;\n      element.setAttribute('dir', 'ltr');\n      this.expand = div(WRAP_STYLE);\n      this.expandChild = div(EXPAND_CHILD_STYLE);\n      this.expand.appendChild(this.expandChild);\n      element.appendChild(this.expand);\n      this.shrink = div(WRAP_STYLE);\n      var shrinkChild = div(SHRINK_CHILD_STYLE);\n      this.shrink.appendChild(shrinkChild);\n      element.appendChild(this.shrink);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var expandChild = this.expandChild;\n      expandChild.style.width = 100000 + 'px';\n      expandChild.style.height = 100000 + 'px';\n      var expand = this.expand;\n      expand.scrollLeft = 100000;\n      expand.scrollTop = 100000;\n      var shrink = this.shrink;\n      shrink.scrollLeft = 100000;\n      shrink.scrollTop = 100000;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      var _this4 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        _this4.subscription = merge(fromEvent(_this4.shrink, 'scroll'), fromEvent(_this4.expand, 'scroll')).subscribe(function () {\n          _this4.checkSize();\n        });\n      });\n    }\n  }]);\n\n  return ResizeCompatService;\n}(ResizeService);\n\nvar HAS_OBSERVER = typeof ResizeObserver !== 'undefined';\n/**\n * @hidden\n */\n\nvar ResizeObserverService = /*#__PURE__*/function (_ResizeService2) {\n  _inherits(ResizeObserverService, _ResizeService2);\n\n  var _super2 = _createSuper(ResizeObserverService);\n\n  function ResizeObserverService(resizeBatchService, element, ngZone) {\n    var _this5;\n\n    _classCallCheck(this, ResizeObserverService);\n\n    _this5 = _super2.call(this, resizeBatchService);\n    _this5.element = element;\n    _this5.ngZone = ngZone;\n    return _this5;\n  }\n\n  _createClass(ResizeObserverService, [{\n    key: \"destroy\",\n    value: function destroy() {\n      _get(_getPrototypeOf(ResizeObserverService.prototype), \"destroy\", this).call(this);\n\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n\n      this.parentElement = null;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this6 = this;\n\n      this.parentElement = this.element.nativeElement.parentElement;\n      this.initSize();\n      this.state = 2\n      /* Initialized */\n      ;\n      this.ngZone.runOutsideAngular(function () {\n        _this6.resizeObserver = new ResizeObserver(function () {\n          _this6.checkSize();\n        });\n\n        _this6.resizeObserver.observe(_this6.parentElement);\n      });\n    }\n  }], [{\n    key: \"supported\",\n    value: function supported() {\n      return HAS_OBSERVER;\n    }\n  }]);\n\n  return ResizeObserverService;\n}(ResizeService);\n/* tslint:disable:align */\n\n/**\n * @hidden\n */\n\n\nvar ResizeBatchService = /*#__PURE__*/function () {\n  function ResizeBatchService(ngZone) {\n    _classCallCheck(this, ResizeBatchService);\n\n    this.ngZone = ngZone;\n    this.scheduled = [];\n    this.resolvedPromise = Promise.resolve(null);\n    this.flush = this.flush.bind(this);\n  }\n\n  _createClass(ResizeBatchService, [{\n    key: \"schedule\",\n    value: function schedule(instance, method) {\n      var _this7 = this;\n\n      this.scheduled.push({\n        instance: instance,\n        method: method\n      });\n\n      if (!this.subscription) {\n        this.ngZone.runOutsideAngular(function () {\n          _this7.subscription = from(_this7.resolvedPromise).subscribe(_this7.flush);\n        });\n      }\n    }\n  }, {\n    key: \"isScheduled\",\n    value: function isScheduled(instance) {\n      return Boolean(this.scheduled.find(function (item) {\n        return item.instance === instance;\n      }));\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(instance) {\n      var scheduled = this.scheduled;\n      var count = scheduled.length;\n\n      for (var idx = 0; idx < count; idx++) {\n        if (scheduled[idx].instance === instance) {\n          scheduled.splice(idx, 1);\n\n          if (!scheduled.length) {\n            this.unsubscribe();\n          }\n\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n        this.subscription = null;\n      }\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      this.scheduled.forEach(function (item) {\n        item.method.call(item.instance);\n      });\n      this.scheduled = [];\n      this.unsubscribe();\n    }\n  }]);\n\n  return ResizeBatchService;\n}();\n\nResizeBatchService.ɵfac = function ResizeBatchService_Factory(t) {\n  return new (t || ResizeBatchService)(ɵngcc0.ɵɵinject(NgZone));\n};\n\nResizeBatchService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ResizeBatchService,\n  factory: ResizeBatchService.ɵfac\n});\n/** @nocollapse */\n\nResizeBatchService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizeBatchService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }];\n  }, null);\n})();\n/**\n * Emit up to 10 resize events per second by default.\n * Chosen as a compromise between responsiveness and performance.\n */\n\n\nvar DEFAULT_RATE_LIMIT = 10;\n/**\n * Resize Sensor Component\n *\n * Triggers a \"resize\" event whenever the parent DOM element size changes.\n */\n\nvar ResizeSensorComponent = /*#__PURE__*/function () {\n  function ResizeSensorComponent(resizeBatchService, element, ngZone) {\n    var _this8 = this;\n\n    _classCallCheck(this, ResizeSensorComponent);\n\n    /**\n     * The maximum number of resize events to emit per second.\n     *\n     * Defaults to 10.\n     */\n    this.rateLimit = DEFAULT_RATE_LIMIT;\n    /**\n     * Fires when the parent DOM element has been resized.\n     */\n\n    this.resize = new EventEmitter();\n    var serviceType = ResizeObserverService.supported() ? ResizeObserverService : ResizeCompatService;\n    this.resizeService = new serviceType(resizeBatchService, element, ngZone);\n    var throttleTime = 1000 / (this.rateLimit || DEFAULT_RATE_LIMIT);\n    this.subscription = this.resizeService.resize.pipe(auditTime(throttleTime)).subscribe(function () {\n      if (!_this8.resizeService.acceptedSize) {\n        _this8.resize.emit();\n      }\n    });\n  }\n\n  _createClass(ResizeSensorComponent, [{\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      this.resizeService.checkChanges();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscription.unsubscribe();\n      this.resizeService.destroy();\n    }\n  }, {\n    key: \"acceptSize\",\n    value: function acceptSize(size) {\n      this.resizeService.acceptSize(size);\n    }\n  }]);\n\n  return ResizeSensorComponent;\n}();\n\nResizeSensorComponent.ɵfac = function ResizeSensorComponent_Factory(t) {\n  return new (t || ResizeSensorComponent)(ɵngcc0.ɵɵdirectiveInject(ResizeBatchService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nResizeSensorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ResizeSensorComponent,\n  selectors: [[\"kendo-resize-sensor\"]],\n  inputs: {\n    rateLimit: \"rateLimit\"\n  },\n  outputs: {\n    resize: \"resize\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ResizeSensorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nResizeSensorComponent.ctorParameters = function () {\n  return [{\n    type: ResizeBatchService\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nResizeSensorComponent.propDecorators = {\n  rateLimit: [{\n    type: Input\n  }],\n  resize: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizeSensorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-resize-sensor',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: ResizeBatchService\n    }, {\n      type: ElementRef\n    }, {\n      type: NgZone\n    }];\n  }, {\n    rateLimit: [{\n      type: Input\n    }],\n    resize: [{\n      type: Output\n    }]\n  });\n})();\n\nvar COMPONENT_DIRECTIVES = [ResizeSensorComponent];\n/**\n * Resize Sensor module\n */\n\nvar ResizeSensorModule = function ResizeSensorModule() {\n  _classCallCheck(this, ResizeSensorModule);\n};\n\nResizeSensorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ResizeSensorModule\n});\nResizeSensorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ResizeSensorModule_Factory(t) {\n    return new (t || ResizeSensorModule)();\n  },\n  providers: [ResizeBatchService]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ResizeSensorModule, {\n    declarations: [ResizeSensorComponent],\n    exports: [ResizeSensorComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizeSensorModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENT_DIRECTIVES],\n      exports: [COMPONENT_DIRECTIVES],\n      providers: [ResizeBatchService]\n    }]\n  }], null, null);\n})();\n\nvar KendoInput = function KendoInput() {\n  _classCallCheck(this, KendoInput);\n};\n/**\n * Enum with key codes.\n */\n\n\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"Alt\"] = 18] = \"Alt\";\n  Keys[Keys[\"ArrowDown\"] = 40] = \"ArrowDown\";\n  Keys[Keys[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n  Keys[Keys[\"ArrowRight\"] = 39] = \"ArrowRight\";\n  Keys[Keys[\"ArrowUp\"] = 38] = \"ArrowUp\";\n  Keys[Keys[\"Backspace\"] = 8] = \"Backspace\";\n  Keys[Keys[\"Control\"] = 17] = \"Control\";\n  Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n  Keys[Keys[\"Digit0\"] = 48] = \"Digit0\";\n  Keys[Keys[\"Digit1\"] = 49] = \"Digit1\";\n  Keys[Keys[\"Digit2\"] = 50] = \"Digit2\";\n  Keys[Keys[\"Digit3\"] = 51] = \"Digit3\";\n  Keys[Keys[\"Digit4\"] = 52] = \"Digit4\";\n  Keys[Keys[\"Digit5\"] = 53] = \"Digit5\";\n  Keys[Keys[\"Digit6\"] = 54] = \"Digit6\";\n  Keys[Keys[\"Digit7\"] = 55] = \"Digit7\";\n  Keys[Keys[\"Digit8\"] = 56] = \"Digit8\";\n  Keys[Keys[\"Digit9\"] = 57] = \"Digit9\";\n  Keys[Keys[\"End\"] = 35] = \"End\";\n  Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n  Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n  Keys[Keys[\"F1\"] = 112] = \"F1\";\n  Keys[Keys[\"F2\"] = 113] = \"F2\";\n  Keys[Keys[\"F10\"] = 121] = \"F10\";\n  Keys[Keys[\"Home\"] = 36] = \"Home\";\n  Keys[Keys[\"Insert\"] = 45] = \"Insert\";\n  Keys[Keys[\"KeyA\"] = 65] = \"KeyA\";\n  Keys[Keys[\"KeyB\"] = 66] = \"KeyB\";\n  Keys[Keys[\"KeyC\"] = 67] = \"KeyC\";\n  Keys[Keys[\"KeyD\"] = 68] = \"KeyD\";\n  Keys[Keys[\"KeyE\"] = 69] = \"KeyE\";\n  Keys[Keys[\"KeyF\"] = 70] = \"KeyF\";\n  Keys[Keys[\"KeyG\"] = 71] = \"KeyG\";\n  Keys[Keys[\"KeyH\"] = 72] = \"KeyH\";\n  Keys[Keys[\"KeyI\"] = 73] = \"KeyI\";\n  Keys[Keys[\"KeyJ\"] = 74] = \"KeyJ\";\n  Keys[Keys[\"KeyK\"] = 75] = \"KeyK\";\n  Keys[Keys[\"KeyL\"] = 76] = \"KeyL\";\n  Keys[Keys[\"KeyM\"] = 77] = \"KeyM\";\n  Keys[Keys[\"KeyN\"] = 78] = \"KeyN\";\n  Keys[Keys[\"KeyO\"] = 79] = \"KeyO\";\n  Keys[Keys[\"KeyP\"] = 80] = \"KeyP\";\n  Keys[Keys[\"KeyQ\"] = 81] = \"KeyQ\";\n  Keys[Keys[\"KeyR\"] = 82] = \"KeyR\";\n  Keys[Keys[\"KeyS\"] = 83] = \"KeyS\";\n  Keys[Keys[\"KeyT\"] = 84] = \"KeyT\";\n  Keys[Keys[\"KeyU\"] = 85] = \"KeyU\";\n  Keys[Keys[\"KeyV\"] = 86] = \"KeyV\";\n  Keys[Keys[\"KeyW\"] = 87] = \"KeyW\";\n  Keys[Keys[\"KeyX\"] = 88] = \"KeyX\";\n  Keys[Keys[\"KeyY\"] = 89] = \"KeyY\";\n  Keys[Keys[\"KeyZ\"] = 90] = \"KeyZ\";\n  Keys[Keys[\"NumpadDecimal\"] = 110] = \"NumpadDecimal\";\n  Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n  Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n  Keys[Keys[\"Shift\"] = 16] = \"Shift\";\n  Keys[Keys[\"Space\"] = 32] = \"Space\";\n  Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n})(Keys || (Keys = {}));\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ResizeService, DraggableDirective, DraggableModule, EventsOutsideAngularDirective, EventsModule, ResizeSensorComponent, ResizeBatchService, ResizeCompatService, ResizeObserverService, ResizeSensorModule, KendoInput, isDocumentAvailable, isChanged, anyChanged, hasObservers, guid, Keys };","map":{"version":3,"sources":["index.js"],"names":[],"mappings":"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AAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA,KAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,GAAA,IAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,GAAA,IAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,GAAA,CAAA,GAAA,KAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,EAAA,CAAA,GAAA,MAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,EAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,GAAA,QAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,GAAA,OAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACA,CA3DA,EA2DA,IAAA,KAAA,IAAA,GAAA,EAAA,CA3DA;AA6DA;;;;;AAIA,SAAA,aAAA,EAAA,kBAAA,EAAA,eAAA,EAAA,6BAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,IAAA,EAAA,IAAA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Directive, ElementRef, NgZone, Input, Output, NgModule, Renderer2, Injectable, Component } from '@angular/core';\nimport Draggable from '@telerik/kendo-draggable';\nimport { CommonModule } from '@angular/common';\nimport { auditTime } from 'rxjs/operators';\nimport { merge, fromEvent, from } from 'rxjs';\n\nconst isDocumentAvailable = () => typeof document !== 'undefined';\n\nconst isChanged = (propertyName, changes, skipFirstChange = true) => (typeof changes[propertyName] !== 'undefined' &&\n    (!changes[propertyName].isFirstChange() || !skipFirstChange) &&\n    changes[propertyName].previousValue !== changes[propertyName].currentValue);\n\nconst anyChanged = (propertyNames, changes, skipFirstChange = true) => propertyNames.some(name => isChanged(name, changes, skipFirstChange));\n\nconst hasObservers = (emitter) => emitter && emitter.observers.length > 0;\n\nconst guid = () => {\n    let id = \"\";\n    for (let i = 0; i < 32; i++) {\n        const random = Math.random() * 16 | 0; // tslint:disable-line:no-bitwise\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        // tslint:disable-next-line:no-bitwise\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n\nclass DraggableDirective {\n    constructor(element, ngZone) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.enableDrag = true;\n        this.kendoPress = new EventEmitter();\n        this.kendoDrag = new EventEmitter();\n        this.kendoRelease = new EventEmitter();\n    }\n    ngOnInit() {\n        this.toggleDraggable();\n    }\n    ngOnChanges(changes) {\n        if (isChanged('enableDrag', changes)) {\n            this.toggleDraggable();\n        }\n    }\n    ngOnDestroy() {\n        this.destroyDraggable();\n    }\n    toggleDraggable() {\n        if (isDocumentAvailable()) {\n            this.destroyDraggable();\n            if (this.enableDrag) {\n                this.draggable = new Draggable({\n                    drag: (e) => this.kendoDrag.next(e),\n                    press: (e) => this.kendoPress.next(e),\n                    release: (e) => this.kendoRelease.next(e)\n                });\n                this.ngZone.runOutsideAngular(() => this.draggable.bindTo(this.element.nativeElement));\n            }\n        }\n    }\n    destroyDraggable() {\n        if (this.draggable) {\n            this.draggable.destroy();\n            this.draggable = null;\n        }\n    }\n}\nDraggableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDraggable]'\n            },] },\n];\n/** @nocollapse */\nDraggableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nDraggableDirective.propDecorators = {\n    enableDrag: [{ type: Input }],\n    kendoPress: [{ type: Output }],\n    kendoDrag: [{ type: Output }],\n    kendoRelease: [{ type: Output }]\n};\n\n/**\n * @hidden\n */\nclass DraggableModule {\n}\nDraggableModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [DraggableDirective],\n                exports: [DraggableDirective],\n                imports: [CommonModule]\n            },] },\n];\n\n/* tslint:disable:no-input-rename */\n/**\n * @hidden\n */\nclass EventsOutsideAngularDirective {\n    constructor(element, ngZone, renderer) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.events = {};\n    }\n    ngOnInit() {\n        if (!this.element || !this.element.nativeElement) {\n            return;\n        }\n        const events = this.events;\n        this.subscriptions = [];\n        this.ngZone.runOutsideAngular(() => {\n            for (let name in events) {\n                if (events.hasOwnProperty(name)) {\n                    this.subscriptions.push(this.renderer.listen(this.element.nativeElement, name, this.scope ? events[name].bind(this.scope) : events[name]));\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            for (let idx = 0; idx < this.subscriptions.length; idx++) {\n                this.subscriptions[idx]();\n            }\n            this.subscriptions = null;\n        }\n    }\n}\nEventsOutsideAngularDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoEventsOutsideAngular]'\n            },] },\n];\n/** @nocollapse */\nEventsOutsideAngularDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 }\n];\nEventsOutsideAngularDirective.propDecorators = {\n    events: [{ type: Input, args: ['kendoEventsOutsideAngular',] }],\n    scope: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass EventsModule {\n}\nEventsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [EventsOutsideAngularDirective],\n                exports: [EventsOutsideAngularDirective]\n            },] },\n];\n\nclass ResizeService {\n    constructor(resizeBatchService) {\n        this.resizeBatchService = resizeBatchService;\n        this.resize = new EventEmitter();\n        this.acceptedSize = false;\n        this.state = 0 /* Initial */;\n    }\n    acceptSize(size = this.measure()) {\n        this.lastWidth = size.width;\n        this.lastHeight = size.height;\n        this.acceptedSize = true;\n    }\n    checkChanges() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        if (this.state === 0 /* Initial */) {\n            this.state = 1 /* Initializing */;\n            // batch initial measure\n            this.resizeBatchService.schedule(this, this.init);\n        }\n    }\n    destroy() {\n        this.resizeBatchService.cancel(this);\n    }\n    checkSize() {\n        if (!this.parentElement) {\n            return;\n        }\n        const { width, height } = this.measure();\n        const sameSize = width === this.lastWidth && height === this.lastHeight;\n        if (sameSize) {\n            return;\n        }\n        this.lastWidth = width;\n        this.lastHeight = height;\n        this.acceptedSize = false;\n        this.resize.emit();\n        return true;\n    }\n    initSize() {\n        const size = this.measure();\n        this.lastWidth = size.width;\n        this.lastHeight = size.height;\n    }\n    measure() {\n        let width = 0;\n        let height = 0;\n        if (this.parentElement) {\n            height = this.parentElement.offsetHeight;\n            width = this.parentElement.offsetWidth;\n        }\n        return { height, width };\n    }\n}\n\n// tslint:disable:deprecation\nconst div = style => {\n    const el = document.createElement('div');\n    el.style.cssText = style;\n    return el;\n};\nconst computedProp = (elem, prop) => getComputedStyle(elem, null).getPropertyValue(prop);\nconst WRAP_STYLE = 'position: absolute; display: block; left: 0; top: 0; right: 0; bottom: 0; z-index: -1;' +\n    'overflow: hidden; visibility: hidden;';\nconst EXPAND_CHILD_STYLE = 'position: absolute; left: 0; top: 0; transition: 0s;';\nconst SHRINK_CHILD_STYLE = EXPAND_CHILD_STYLE + 'width: 200%; height: 200%;';\nclass ResizeCompatService extends ResizeService {\n    constructor(resizeBatchService, element, ngZone) {\n        super(resizeBatchService);\n        this.element = element;\n        this.ngZone = ngZone;\n    }\n    checkChanges() {\n        if (this.state === 2 /* Initialized */) {\n            if (!this.resizeBatchService.isScheduled(this)) {\n                this.resizeBatchService.schedule(this, this.checkSize);\n            }\n            return;\n        }\n        super.checkChanges();\n    }\n    destroy() {\n        super.destroy();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.expand) {\n            const element = this.element.nativeElement;\n            element.removeChild(this.expand);\n            element.removeChild(this.shrink);\n            this.expand.removeChild(this.expandChild);\n            this.expand = this.expandChild = this.shrink = this.element = null;\n        }\n    }\n    checkSize() {\n        if (super.checkSize()) {\n            this.reset();\n            return true;\n        }\n    }\n    init() {\n        const parentElement = this.parentElement = this.element.nativeElement.parentElement;\n        if (computedProp(parentElement, 'position') === 'static') {\n            parentElement.style.position = 'relative';\n        }\n        this.state = 2 /* Initialized */;\n        this.render();\n        this.reset();\n        this.initSize();\n        this.subscribe();\n    }\n    render() {\n        const element = this.element.nativeElement;\n        element.style.cssText = WRAP_STYLE;\n        element.setAttribute('dir', 'ltr');\n        this.expand = div(WRAP_STYLE);\n        this.expandChild = div(EXPAND_CHILD_STYLE);\n        this.expand.appendChild(this.expandChild);\n        element.appendChild(this.expand);\n        this.shrink = div(WRAP_STYLE);\n        const shrinkChild = div(SHRINK_CHILD_STYLE);\n        this.shrink.appendChild(shrinkChild);\n        element.appendChild(this.shrink);\n    }\n    reset() {\n        const expandChild = this.expandChild;\n        expandChild.style.width = 100000 + 'px';\n        expandChild.style.height = 100000 + 'px';\n        const expand = this.expand;\n        expand.scrollLeft = 100000;\n        expand.scrollTop = 100000;\n        const shrink = this.shrink;\n        shrink.scrollLeft = 100000;\n        shrink.scrollTop = 100000;\n    }\n    subscribe() {\n        this.ngZone.runOutsideAngular(() => {\n            this.subscription = merge(fromEvent(this.shrink, 'scroll'), fromEvent(this.expand, 'scroll'))\n                .subscribe(() => {\n                this.checkSize();\n            });\n        });\n    }\n}\n\nconst HAS_OBSERVER = typeof ResizeObserver !== 'undefined';\n/**\n * @hidden\n */\nclass ResizeObserverService extends ResizeService {\n    constructor(resizeBatchService, element, ngZone) {\n        super(resizeBatchService);\n        this.element = element;\n        this.ngZone = ngZone;\n    }\n    static supported() {\n        return HAS_OBSERVER;\n    }\n    destroy() {\n        super.destroy();\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = null;\n        }\n        this.parentElement = null;\n    }\n    init() {\n        this.parentElement = this.element.nativeElement.parentElement;\n        this.initSize();\n        this.state = 2 /* Initialized */;\n        this.ngZone.runOutsideAngular(() => {\n            this.resizeObserver = new ResizeObserver(() => {\n                this.checkSize();\n            });\n            this.resizeObserver.observe(this.parentElement);\n        });\n    }\n}\n\n/* tslint:disable:align */\n/**\n * @hidden\n */\nclass ResizeBatchService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.scheduled = [];\n        this.resolvedPromise = Promise.resolve(null);\n        this.flush = this.flush.bind(this);\n    }\n    schedule(instance, method) {\n        this.scheduled.push({ instance, method });\n        if (!this.subscription) {\n            this.ngZone.runOutsideAngular(() => {\n                this.subscription = from(this.resolvedPromise)\n                    .subscribe(this.flush);\n            });\n        }\n    }\n    isScheduled(instance) {\n        return Boolean(this.scheduled.find(item => item.instance === instance));\n    }\n    cancel(instance) {\n        const scheduled = this.scheduled;\n        const count = scheduled.length;\n        for (let idx = 0; idx < count; idx++) {\n            if (scheduled[idx].instance === instance) {\n                scheduled.splice(idx, 1);\n                if (!scheduled.length) {\n                    this.unsubscribe();\n                }\n                return;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe();\n    }\n    unsubscribe() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n    flush() {\n        this.scheduled.forEach(item => {\n            item.method.call(item.instance);\n        });\n        this.scheduled = [];\n        this.unsubscribe();\n    }\n}\nResizeBatchService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nResizeBatchService.ctorParameters = () => [\n    { type: NgZone }\n];\n\n/**\n * Emit up to 10 resize events per second by default.\n * Chosen as a compromise between responsiveness and performance.\n */\nconst DEFAULT_RATE_LIMIT = 10;\n/**\n * Resize Sensor Component\n *\n * Triggers a \"resize\" event whenever the parent DOM element size changes.\n */\nclass ResizeSensorComponent {\n    constructor(resizeBatchService, element, ngZone) {\n        /**\n         * The maximum number of resize events to emit per second.\n         *\n         * Defaults to 10.\n         */\n        this.rateLimit = DEFAULT_RATE_LIMIT;\n        /**\n         * Fires when the parent DOM element has been resized.\n         */\n        this.resize = new EventEmitter();\n        const serviceType = ResizeObserverService.supported() ? ResizeObserverService : ResizeCompatService;\n        this.resizeService = new serviceType(resizeBatchService, element, ngZone);\n        const throttleTime = 1000 / (this.rateLimit || DEFAULT_RATE_LIMIT);\n        this.subscription = this.resizeService.resize\n            .pipe(auditTime(throttleTime))\n            .subscribe(() => {\n            if (!this.resizeService.acceptedSize) {\n                this.resize.emit();\n            }\n        });\n    }\n    ngAfterViewChecked() {\n        this.resizeService.checkChanges();\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n        this.resizeService.destroy();\n    }\n    acceptSize(size) {\n        this.resizeService.acceptSize(size);\n    }\n}\nResizeSensorComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-resize-sensor',\n                template: ''\n            },] },\n];\n/** @nocollapse */\nResizeSensorComponent.ctorParameters = () => [\n    { type: ResizeBatchService },\n    { type: ElementRef },\n    { type: NgZone }\n];\nResizeSensorComponent.propDecorators = {\n    rateLimit: [{ type: Input }],\n    resize: [{ type: Output }]\n};\n\nconst COMPONENT_DIRECTIVES = [ResizeSensorComponent];\n/**\n * Resize Sensor module\n */\nclass ResizeSensorModule {\n}\nResizeSensorModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENT_DIRECTIVES],\n                exports: [COMPONENT_DIRECTIVES],\n                providers: [ResizeBatchService]\n            },] },\n];\n\nclass KendoInput {\n}\n\n/**\n * Enum with key codes.\n */\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"Alt\"] = 18] = \"Alt\";\n    Keys[Keys[\"ArrowDown\"] = 40] = \"ArrowDown\";\n    Keys[Keys[\"ArrowLeft\"] = 37] = \"ArrowLeft\";\n    Keys[Keys[\"ArrowRight\"] = 39] = \"ArrowRight\";\n    Keys[Keys[\"ArrowUp\"] = 38] = \"ArrowUp\";\n    Keys[Keys[\"Backspace\"] = 8] = \"Backspace\";\n    Keys[Keys[\"Control\"] = 17] = \"Control\";\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    Keys[Keys[\"Digit0\"] = 48] = \"Digit0\";\n    Keys[Keys[\"Digit1\"] = 49] = \"Digit1\";\n    Keys[Keys[\"Digit2\"] = 50] = \"Digit2\";\n    Keys[Keys[\"Digit3\"] = 51] = \"Digit3\";\n    Keys[Keys[\"Digit4\"] = 52] = \"Digit4\";\n    Keys[Keys[\"Digit5\"] = 53] = \"Digit5\";\n    Keys[Keys[\"Digit6\"] = 54] = \"Digit6\";\n    Keys[Keys[\"Digit7\"] = 55] = \"Digit7\";\n    Keys[Keys[\"Digit8\"] = 56] = \"Digit8\";\n    Keys[Keys[\"Digit9\"] = 57] = \"Digit9\";\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    Keys[Keys[\"Insert\"] = 45] = \"Insert\";\n    Keys[Keys[\"KeyA\"] = 65] = \"KeyA\";\n    Keys[Keys[\"KeyB\"] = 66] = \"KeyB\";\n    Keys[Keys[\"KeyC\"] = 67] = \"KeyC\";\n    Keys[Keys[\"KeyD\"] = 68] = \"KeyD\";\n    Keys[Keys[\"KeyE\"] = 69] = \"KeyE\";\n    Keys[Keys[\"KeyF\"] = 70] = \"KeyF\";\n    Keys[Keys[\"KeyG\"] = 71] = \"KeyG\";\n    Keys[Keys[\"KeyH\"] = 72] = \"KeyH\";\n    Keys[Keys[\"KeyI\"] = 73] = \"KeyI\";\n    Keys[Keys[\"KeyJ\"] = 74] = \"KeyJ\";\n    Keys[Keys[\"KeyK\"] = 75] = \"KeyK\";\n    Keys[Keys[\"KeyL\"] = 76] = \"KeyL\";\n    Keys[Keys[\"KeyM\"] = 77] = \"KeyM\";\n    Keys[Keys[\"KeyN\"] = 78] = \"KeyN\";\n    Keys[Keys[\"KeyO\"] = 79] = \"KeyO\";\n    Keys[Keys[\"KeyP\"] = 80] = \"KeyP\";\n    Keys[Keys[\"KeyQ\"] = 81] = \"KeyQ\";\n    Keys[Keys[\"KeyR\"] = 82] = \"KeyR\";\n    Keys[Keys[\"KeyS\"] = 83] = \"KeyS\";\n    Keys[Keys[\"KeyT\"] = 84] = \"KeyT\";\n    Keys[Keys[\"KeyU\"] = 85] = \"KeyU\";\n    Keys[Keys[\"KeyV\"] = 86] = \"KeyV\";\n    Keys[Keys[\"KeyW\"] = 87] = \"KeyW\";\n    Keys[Keys[\"KeyX\"] = 88] = \"KeyX\";\n    Keys[Keys[\"KeyY\"] = 89] = \"KeyY\";\n    Keys[Keys[\"KeyZ\"] = 90] = \"KeyZ\";\n    Keys[Keys[\"NumpadDecimal\"] = 110] = \"NumpadDecimal\";\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    Keys[Keys[\"Shift\"] = 16] = \"Shift\";\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n})(Keys || (Keys = {}));\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ResizeService, DraggableDirective, DraggableModule, EventsOutsideAngularDirective, EventsModule, ResizeSensorComponent, ResizeBatchService, ResizeCompatService, ResizeObserverService, ResizeSensorModule, KendoInput, isDocumentAvailable, isChanged, anyChanged, hasObservers, guid, Keys };\n"]},"metadata":{},"sourceType":"module"}