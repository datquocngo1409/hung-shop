{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Class from './class';\n\nvar Observable = /*#__PURE__*/function (_Class) {\n  _inherits(Observable, _Class);\n\n  var _super = _createSuper(Observable);\n\n  function Observable() {\n    var _this;\n\n    _classCallCheck(this, Observable);\n\n    _this = _super.call(this);\n    _this._events = {};\n    return _this;\n  }\n\n  _createClass(Observable, [{\n    key: \"bind\",\n    value: function bind(eventName, handlers, one) {\n      var _arguments = arguments,\n          _this2 = this;\n\n      var eventNames = getArray(eventName);\n      var handlersIsFunction = isFunction(handlers);\n      var length = eventNames.length;\n\n      if (handlers === undefined) {\n        for (var field in eventName) {\n          this.bind(field, eventName[field]);\n        }\n\n        return this;\n      }\n\n      var _loop = function _loop(idx) {\n        var eventName = eventNames[idx];\n\n        var _handler = handlersIsFunction ? handlers : handlers[eventName];\n\n        if (_handler) {\n          if (one) {\n            var original = _handler;\n\n            _handler = function handler() {\n              // eslint-disable-line no-loop-func\n              _this2.unbind(eventName, _handler);\n\n              original.apply(_this2, _arguments);\n            };\n\n            _handler.original = original;\n          }\n\n          var events = _this2._events[eventName] = _this2._events[eventName] || [];\n          events.push(_handler);\n        }\n      };\n\n      for (var idx = 0; idx < length; idx++) {\n        _loop(idx);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"one\",\n    value: function one(eventNames, handlers) {\n      return this.bind(eventNames, handlers, true);\n    }\n  }, {\n    key: \"first\",\n    value: function first(eventName, handlers) {\n      var eventNames = getArray(eventName);\n      var handlersIsFunction = isFunction(handlers);\n\n      for (var idx = 0, length = eventNames.length; idx < length; idx++) {\n        var _eventName = eventNames[idx];\n        var handler = handlersIsFunction ? handlers : handlers[_eventName];\n\n        if (handler) {\n          var events = this._events[_eventName] = this._events[_eventName] || [];\n          events.unshift(handler);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"trigger\",\n    value: function trigger(eventName) {\n      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var events = this._events[eventName];\n\n      if (events) {\n        var length = events.length;\n        e.sender = this;\n        e._defaultPrevented = false;\n        e.preventDefault = preventDefault;\n        e.isDefaultPrevented = isDefaultPrevented;\n        events = events.slice();\n\n        for (var idx = 0; idx < length; idx++) {\n          events[idx].call(this, e);\n        }\n\n        return e._defaultPrevented === true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind(eventName, handler) {\n      var events = this._events[eventName];\n\n      if (eventName === undefined) {\n        this._events = {};\n      } else if (events) {\n        if (handler) {\n          for (var idx = events.length - 1; idx >= 0; idx--) {\n            if (events[idx] === handler || events[idx].original === handler) {\n              events.splice(idx, 1);\n            }\n          }\n        } else {\n          this._events[eventName] = [];\n        }\n      }\n\n      return this;\n    }\n  }]);\n\n  return Observable;\n}(Class);\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction getArray(value) {\n  return typeof value === \"string\" ? [value] : value;\n}\n\nfunction preventDefault() {\n  this._defaultPrevented = true;\n}\n\nfunction isDefaultPrevented() {\n  return this._defaultPrevented === true;\n}\n\nexport default Observable;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/common/observable.js"],"names":["Class","Observable","_events","eventName","handlers","one","eventNames","getArray","handlersIsFunction","isFunction","length","undefined","field","bind","idx","handler","original","unbind","apply","arguments","events","push","unshift","e","sender","_defaultPrevented","preventDefault","isDefaultPrevented","slice","call","splice","value"],"mappings":"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","sourcesContent":["import Class from './class';\n\nclass Observable extends Class {\n    constructor() {\n        super();\n\n        this._events = {};\n    }\n\n    bind(eventName, handlers, one) {\n        const eventNames = getArray(eventName);\n        const handlersIsFunction = isFunction(handlers);\n        const length = eventNames.length;\n\n        if (handlers === undefined) {\n            for (let field in eventName) {\n                this.bind(field, eventName[field]);\n            }\n            return this;\n        }\n\n        for (let idx = 0; idx < length; idx++) {\n            const eventName = eventNames[idx];\n\n            let handler = handlersIsFunction ? handlers : handlers[eventName];\n\n            if (handler) {\n                if (one) {\n                    const original = handler;\n                    handler = () => { // eslint-disable-line no-loop-func\n                        this.unbind(eventName, handler);\n                        original.apply(this, arguments);\n                    };\n                    handler.original = original;\n                }\n                let events = this._events[eventName] = this._events[eventName] || [];\n                events.push(handler);\n            }\n        }\n\n        return this;\n    }\n\n    one(eventNames, handlers) {\n        return this.bind(eventNames, handlers, true);\n    }\n\n    first(eventName, handlers) {\n        const eventNames = getArray(eventName);\n        const handlersIsFunction = isFunction(handlers);\n\n        for (let idx = 0, length = eventNames.length; idx < length; idx++) {\n            const eventName = eventNames[idx];\n\n            const handler = handlersIsFunction ? handlers : handlers[eventName];\n\n            if (handler) {\n                const events = this._events[eventName] = this._events[eventName] || [];\n                events.unshift(handler);\n            }\n        }\n\n        return this;\n    }\n\n    trigger(eventName, e = {}) {\n        let events = this._events[eventName];\n\n        if (events) {\n            const length = events.length;\n\n            e.sender = this;\n            e._defaultPrevented = false;\n            e.preventDefault = preventDefault;\n            e.isDefaultPrevented = isDefaultPrevented;\n\n            events = events.slice();\n\n            for (let idx = 0; idx < length; idx++) {\n                events[idx].call(this, e);\n            }\n\n            return e._defaultPrevented === true;\n        }\n\n        return false;\n    }\n\n    unbind(eventName, handler) {\n        const events = this._events[eventName];\n\n        if (eventName === undefined) {\n            this._events = {};\n        } else if (events) {\n            if (handler) {\n                for (let idx = events.length - 1; idx >= 0; idx--) {\n                    if (events[idx] === handler || events[idx].original === handler) {\n                        events.splice(idx, 1);\n                    }\n                }\n            } else {\n                this._events[eventName] = [];\n            }\n        }\n\n        return this;\n    }\n}\n\nfunction isFunction(value) {\n    return typeof value === \"function\";\n}\n\nfunction getArray(value) {\n    return typeof value === \"string\" ? [ value ] : value;\n}\n\nfunction preventDefault() {\n    this._defaultPrevented = true;\n}\n\nfunction isDefaultPrevented() {\n    return this._defaultPrevented === true;\n}\n\nexport default Observable;"]},"metadata":{},"sourceType":"module"}