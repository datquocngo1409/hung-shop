{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Class } from '../common';\nimport { MultiPath } from '../shapes/path';\nimport parsePath from './parse-path';\nvar instance;\n\nvar PathParser = /*#__PURE__*/function (_Class) {\n  _inherits(PathParser, _Class);\n\n  var _super = _createSuper(PathParser);\n\n  function PathParser() {\n    _classCallCheck(this, PathParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PathParser, [{\n    key: \"parse\",\n    value: function parse(str, options) {\n      var multiPath = new MultiPath(options);\n      return parsePath(multiPath, str);\n    }\n  }], [{\n    key: \"current\",\n    get: function get() {\n      if (!instance) {\n        instance = new PathParser();\n      }\n\n      return instance;\n    }\n  }]);\n\n  return PathParser;\n}(Class);\n\nexport default PathParser;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/parsing/path-parser.js"],"names":["Class","MultiPath","parsePath","instance","PathParser","str","options","multiPath"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAEA,IAAIC,QAAJ;;IAEMC,U;;;;;;;;;;;;;0BASIC,G,EAAKC,O,EAAS;AAChB,UAAMC,SAAS,GAAG,IAAIN,SAAJ,CAAcK,OAAd,CAAlB;AACA,aAAOJ,SAAS,CAACK,SAAD,EAAYF,GAAZ,CAAhB;AACH;;;wBAXoB;AACjB,UAAI,CAACF,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAG,IAAIC,UAAJ,EAAX;AACH;;AAED,aAAOD,QAAP;AACH;;;;EAPoBH,K;;AAezB,eAAeI,UAAf","sourcesContent":["import { Class } from '../common';\nimport { MultiPath } from '../shapes/path';\nimport parsePath from './parse-path';\n\nlet instance;\n\nclass PathParser extends Class {\n    static get current() {\n        if (!instance) {\n            instance = new PathParser();\n        }\n\n        return instance;\n    }\n\n    parse(str, options) {\n        const multiPath = new MultiPath(options);\n        return parsePath(multiPath, str);\n    }\n}\n\nexport default PathParser;\n\n"]},"metadata":{},"sourceType":"module"}