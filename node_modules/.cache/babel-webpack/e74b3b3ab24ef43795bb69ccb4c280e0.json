{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Class } from '../common';\n\nvar LRUCache = /*#__PURE__*/function (_Class) {\n  _inherits(LRUCache, _Class);\n\n  var _super = _createSuper(LRUCache);\n\n  function LRUCache(size) {\n    var _this;\n\n    _classCallCheck(this, LRUCache);\n\n    _this = _super.call(this);\n    _this._size = size;\n    _this._length = 0;\n    _this._map = {};\n    return _this;\n  }\n\n  _createClass(LRUCache, [{\n    key: \"put\",\n    value: function put(key, value) {\n      var map = this._map;\n      var entry = {\n        key: key,\n        value: value\n      };\n      map[key] = entry;\n\n      if (!this._head) {\n        this._head = this._tail = entry;\n      } else {\n        this._tail.newer = entry;\n        entry.older = this._tail;\n        this._tail = entry;\n      }\n\n      if (this._length >= this._size) {\n        map[this._head.key] = null;\n        this._head = this._head.newer;\n        this._head.older = null;\n      } else {\n        this._length++;\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var entry = this._map[key];\n\n      if (entry) {\n        if (entry === this._head && entry !== this._tail) {\n          this._head = entry.newer;\n          this._head.older = null;\n        }\n\n        if (entry !== this._tail) {\n          if (entry.older) {\n            entry.older.newer = entry.newer;\n            entry.newer.older = entry.older;\n          }\n\n          entry.older = this._tail;\n          entry.newer = null;\n          this._tail.newer = entry;\n          this._tail = entry;\n        }\n\n        return entry.value;\n      }\n    }\n  }]);\n\n  return LRUCache;\n}(Class);\n\nexport default LRUCache;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/text-metrics/lru-cache.js"],"names":["Class","LRUCache","size","_size","_length","_map","key","value","map","entry","_head","_tail","newer","older"],"mappings":";;;;AAAA,SAASA,KAAT,QAAsB,WAAtB;;IAEMC,Q;;;;;AACF,oBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AACd;AAEA,UAAKC,KAAL,GAAaD,IAAb;AACA,UAAKE,OAAL,GAAe,CAAf;AACA,UAAKC,IAAL,GAAY,EAAZ;AALc;AAMjB;;;;wBAEGC,G,EAAKC,K,EAAO;AACZ,UAAMC,GAAG,GAAG,KAAKH,IAAjB;AACA,UAAMI,KAAK,GAAG;AAAEH,QAAAA,GAAG,EAAEA,GAAP;AAAYC,QAAAA,KAAK,EAAEA;AAAnB,OAAd;AAEAC,MAAAA,GAAG,CAACF,GAAD,CAAH,GAAWG,KAAX;;AAEA,UAAI,CAAC,KAAKC,KAAV,EAAiB;AACb,aAAKA,KAAL,GAAa,KAAKC,KAAL,GAAaF,KAA1B;AACH,OAFD,MAEO;AACH,aAAKE,KAAL,CAAWC,KAAX,GAAmBH,KAAnB;AACAA,QAAAA,KAAK,CAACI,KAAN,GAAc,KAAKF,KAAnB;AACA,aAAKA,KAAL,GAAaF,KAAb;AACH;;AAED,UAAI,KAAKL,OAAL,IAAgB,KAAKD,KAAzB,EAAgC;AAC5BK,QAAAA,GAAG,CAAC,KAAKE,KAAL,CAAWJ,GAAZ,CAAH,GAAsB,IAAtB;AACA,aAAKI,KAAL,GAAa,KAAKA,KAAL,CAAWE,KAAxB;AACA,aAAKF,KAAL,CAAWG,KAAX,GAAmB,IAAnB;AACH,OAJD,MAIO;AACH,aAAKT,OAAL;AACH;AACJ;;;wBAEGE,G,EAAK;AACL,UAAMG,KAAK,GAAG,KAAKJ,IAAL,CAAUC,GAAV,CAAd;;AAEA,UAAIG,KAAJ,EAAW;AACP,YAAIA,KAAK,KAAK,KAAKC,KAAf,IAAwBD,KAAK,KAAK,KAAKE,KAA3C,EAAkD;AAC9C,eAAKD,KAAL,GAAaD,KAAK,CAACG,KAAnB;AACA,eAAKF,KAAL,CAAWG,KAAX,GAAmB,IAAnB;AACH;;AAED,YAAIJ,KAAK,KAAK,KAAKE,KAAnB,EAA0B;AACtB,cAAIF,KAAK,CAACI,KAAV,EAAiB;AACbJ,YAAAA,KAAK,CAACI,KAAN,CAAYD,KAAZ,GAAoBH,KAAK,CAACG,KAA1B;AACAH,YAAAA,KAAK,CAACG,KAAN,CAAYC,KAAZ,GAAoBJ,KAAK,CAACI,KAA1B;AACH;;AAEDJ,UAAAA,KAAK,CAACI,KAAN,GAAc,KAAKF,KAAnB;AACAF,UAAAA,KAAK,CAACG,KAAN,GAAc,IAAd;AAEA,eAAKD,KAAL,CAAWC,KAAX,GAAmBH,KAAnB;AACA,eAAKE,KAAL,GAAaF,KAAb;AACH;;AAED,eAAOA,KAAK,CAACF,KAAb;AACH;AACJ;;;;EAxDkBP,K;;AA2DvB,eAAeC,QAAf","sourcesContent":["import { Class } from '../common';\n\nclass LRUCache extends Class {\n    constructor(size) {\n        super();\n\n        this._size = size;\n        this._length = 0;\n        this._map = {};\n    }\n\n    put(key, value) {\n        const map = this._map;\n        const entry = { key: key, value: value };\n\n        map[key] = entry;\n\n        if (!this._head) {\n            this._head = this._tail = entry;\n        } else {\n            this._tail.newer = entry;\n            entry.older = this._tail;\n            this._tail = entry;\n        }\n\n        if (this._length >= this._size) {\n            map[this._head.key] = null;\n            this._head = this._head.newer;\n            this._head.older = null;\n        } else {\n            this._length++;\n        }\n    }\n\n    get(key) {\n        const entry = this._map[key];\n\n        if (entry) {\n            if (entry === this._head && entry !== this._tail) {\n                this._head = entry.newer;\n                this._head.older = null;\n            }\n\n            if (entry !== this._tail) {\n                if (entry.older) {\n                    entry.older.newer = entry.newer;\n                    entry.newer.older = entry.older;\n                }\n\n                entry.older = this._tail;\n                entry.newer = null;\n\n                this._tail.newer = entry;\n                this._tail = entry;\n            }\n\n            return entry.value;\n        }\n    }\n}\n\nexport default LRUCache;"]},"metadata":{},"sourceType":"module"}