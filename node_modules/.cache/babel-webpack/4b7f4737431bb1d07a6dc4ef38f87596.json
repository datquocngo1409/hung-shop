{"ast":null,"code":"import { timezones } from './timezones';\nimport { formatMessage, NO_TZ_INFO, INVALID_TZ_STRUCTURE } from '../errors'; // tslint:disable:max-line-length\n\n/**\n * A function that loads the information about the provided timezone. The details for the loaded timezone will be available to all functions that are related to the manipulation of the timezone.\n *\n * @param timezoneInfo - The information about the timezone that will be loaded.\n *\n * @example\n * ```ts-no-run\n * loadTimezone({ zones: [...], rules: [...]});\n * ```\n */\n// tslint:enable:max-line-length\n\nexport var loadTimezone = function loadTimezone(tzInfo) {\n  if (!tzInfo) {\n    throw new Error(formatMessage(NO_TZ_INFO, ''));\n  }\n\n  var rules = tzInfo.rules,\n      titles = tzInfo.titles,\n      zones = tzInfo.zones;\n\n  if (rules === undefined || zones === undefined) {\n    throw new Error(INVALID_TZ_STRUCTURE);\n  }\n\n  Object.assign(timezones.rules, rules);\n  Object.assign(timezones.titles, titles || {});\n  Object.assign(timezones.zones, zones);\n};","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-date-math/dist/es2015/tz/load-timezone.js"],"names":["timezones","formatMessage","NO_TZ_INFO","INVALID_TZ_STRUCTURE","loadTimezone","tzInfo","Error","rules","titles","zones","undefined","Object","assign"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,EAAwBC,UAAxB,EAAoCC,oBAApC,QAAgE,WAAhE,C,CACA;;AACA;;;;;;;;;;AAUA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACpC,MAAI,CAACA,MAAL,EAAa;AACT,UAAM,IAAIC,KAAJ,CAAUL,aAAa,CAACC,UAAD,EAAa,EAAb,CAAvB,CAAN;AACH;;AAHmC,MAI5BK,KAJ4B,GAIHF,MAJG,CAI5BE,KAJ4B;AAAA,MAIrBC,MAJqB,GAIHH,MAJG,CAIrBG,MAJqB;AAAA,MAIbC,KAJa,GAIHJ,MAJG,CAIbI,KAJa;;AAKpC,MAAIF,KAAK,KAAKG,SAAV,IAAuBD,KAAK,KAAKC,SAArC,EAAgD;AAC5C,UAAM,IAAIJ,KAAJ,CAAUH,oBAAV,CAAN;AACH;;AACDQ,EAAAA,MAAM,CAACC,MAAP,CAAcZ,SAAS,CAACO,KAAxB,EAA+BA,KAA/B;AACAI,EAAAA,MAAM,CAACC,MAAP,CAAcZ,SAAS,CAACQ,MAAxB,EAAgCA,MAAM,IAAI,EAA1C;AACAG,EAAAA,MAAM,CAACC,MAAP,CAAcZ,SAAS,CAACS,KAAxB,EAA+BA,KAA/B;AACH,CAXM","sourcesContent":["import { timezones } from './timezones';\nimport { formatMessage, NO_TZ_INFO, INVALID_TZ_STRUCTURE } from '../errors';\n// tslint:disable:max-line-length\n/**\n * A function that loads the information about the provided timezone. The details for the loaded timezone will be available to all functions that are related to the manipulation of the timezone.\n *\n * @param timezoneInfo - The information about the timezone that will be loaded.\n *\n * @example\n * ```ts-no-run\n * loadTimezone({ zones: [...], rules: [...]});\n * ```\n */\n// tslint:enable:max-line-length\nexport const loadTimezone = (tzInfo) => {\n    if (!tzInfo) {\n        throw new Error(formatMessage(NO_TZ_INFO, ''));\n    }\n    const { rules, titles, zones } = tzInfo;\n    if (rules === undefined || zones === undefined) {\n        throw new Error(INVALID_TZ_STRUCTURE);\n    }\n    Object.assign(timezones.rules, rules);\n    Object.assign(timezones.titles, titles || {});\n    Object.assign(timezones.zones, zones);\n};\n"]},"metadata":{},"sourceType":"module"}