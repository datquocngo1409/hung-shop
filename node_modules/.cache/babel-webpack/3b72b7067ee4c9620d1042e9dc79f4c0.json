{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Node from './node';\nimport traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\nvar GroupNode = /*#__PURE__*/function (_traversable) {\n  _inherits(GroupNode, _traversable);\n\n  var _super = _createSuper(GroupNode);\n\n  function GroupNode() {\n    _classCallCheck(this, GroupNode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GroupNode, [{\n    key: \"renderTo\",\n    value: function renderTo(ctx) {\n      if (!this.visible()) {\n        return;\n      }\n\n      ctx.save();\n      this.setTransform(ctx);\n      this.setClip(ctx);\n      this.setOpacity(ctx);\n      var childNodes = this.childNodes;\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var child = childNodes[i];\n\n        if (child.visible()) {\n          child.renderTo(ctx);\n        }\n      }\n\n      ctx.restore();\n    }\n  }]);\n\n  return GroupNode;\n}(traversable(Node, \"childNodes\"));\n\nNODE_MAP.Group = GroupNode;\nexport default GroupNode;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/canvas/group-node.js"],"names":["Node","traversable","NODE_MAP","GroupNode","ctx","visible","save","setTransform","setClip","setOpacity","childNodes","i","length","child","renderTo","restore","Group"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;IAGMC,S;;;;;;;;;;;;;6BACOC,G,EAAK;AACV,UAAI,CAAC,KAAKC,OAAL,EAAL,EAAqB;AACjB;AACH;;AAEDD,MAAAA,GAAG,CAACE,IAAJ;AAEA,WAAKC,YAAL,CAAkBH,GAAlB;AACA,WAAKI,OAAL,CAAaJ,GAAb;AACA,WAAKK,UAAL,CAAgBL,GAAhB;AAEA,UAAMM,UAAU,GAAG,KAAKA,UAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,YAAIE,KAAK,GAAGH,UAAU,CAACC,CAAD,CAAtB;;AACA,YAAIE,KAAK,CAACR,OAAN,EAAJ,EAAqB;AACjBQ,UAAAA,KAAK,CAACC,QAAN,CAAeV,GAAf;AACH;AACJ;;AAEDA,MAAAA,GAAG,CAACW,OAAJ;AACH;;;;EArBmBd,WAAW,CAACD,IAAD,EAAO,YAAP,C;;AAwBnCE,QAAQ,CAACc,KAAT,GAAiBb,SAAjB;AAEA,eAAeA,SAAf","sourcesContent":["import Node from './node';\nimport traversable from '../mixins/traversable';\nimport NODE_MAP from './node-map';\n\n\nclass GroupNode extends traversable(Node, \"childNodes\") {\n    renderTo(ctx) {\n        if (!this.visible()) {\n            return;\n        }\n\n        ctx.save();\n\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.setOpacity(ctx);\n\n        const childNodes = this.childNodes;\n        for (let i = 0; i < childNodes.length; i++) {\n            let child = childNodes[i];\n            if (child.visible()) {\n                child.renderTo(ctx);\n            }\n        }\n\n        ctx.restore();\n    }\n}\n\nNODE_MAP.Group = GroupNode;\n\nexport default GroupNode;\n"]},"metadata":{},"sourceType":"module"}