{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport Rect from '../geometry/rect';\nimport toMatrix from '../geometry/to-matrix';\nimport { defined } from '../util';\n\nvar Image = /*#__PURE__*/function (_withGeometry) {\n  _inherits(Image, _withGeometry);\n\n  var _super = _createSuper(Image);\n\n  _createClass(Image, [{\n    key: \"nodeType\",\n    get: function get() {\n      return \"Image\";\n    }\n  }]);\n\n  function Image(src) {\n    var _this;\n\n    var rect = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Rect();\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _classCallCheck(this, Image);\n\n    _this = _super.call(this, options);\n\n    _this.src(src);\n\n    _this.rect(rect);\n\n    return _this;\n  }\n\n  _createClass(Image, [{\n    key: \"src\",\n    value: function src(value) {\n      if (defined(value)) {\n        this.options.set(\"src\", value);\n        return this;\n      }\n\n      return this.options.get(\"src\");\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox(transformation) {\n      var combinedMatrix = toMatrix(this.currentTransform(transformation));\n      return this._rect.bbox(combinedMatrix);\n    }\n  }, {\n    key: \"rawBBox\",\n    value: function rawBBox() {\n      return this._rect.bbox();\n    }\n  }, {\n    key: \"_containsPoint\",\n    value: function _containsPoint(point) {\n      return this._rect.containsPoint(point);\n    }\n  }, {\n    key: \"_hasFill\",\n    value: function _hasFill() {\n      return this.src();\n    }\n  }]);\n\n  return Image;\n}(withGeometry(Element, [\"rect\"]));\n\nexport default Image;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/shapes/image.js"],"names":["withGeometry","Element","Rect","toMatrix","defined","Image","src","rect","options","value","set","get","transformation","combinedMatrix","currentTransform","_rect","bbox","point","containsPoint"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,OAAT,QAAwB,SAAxB;;IAGMC,K;;;;;;;wBACa;AACX,aAAO,OAAP;AACH;;;AAED,iBAAYC,GAAZ,EAAkD;AAAA;;AAAA,QAAjCC,IAAiC,uEAA1B,IAAIL,IAAJ,EAA0B;AAAA,QAAdM,OAAc,uEAAJ,EAAI;;AAAA;;AAC9C,8BAAMA,OAAN;;AAEA,UAAKF,GAAL,CAASA,GAAT;;AACA,UAAKC,IAAL,CAAUA,IAAV;;AAJ8C;AAKjD;;;;wBAEGE,K,EAAO;AACP,UAAIL,OAAO,CAACK,KAAD,CAAX,EAAoB;AAChB,aAAKD,OAAL,CAAaE,GAAb,CAAiB,KAAjB,EAAwBD,KAAxB;AACA,eAAO,IAAP;AACH;;AAED,aAAO,KAAKD,OAAL,CAAaG,GAAb,CAAiB,KAAjB,CAAP;AACH;;;yBAEIC,c,EAAgB;AACjB,UAAMC,cAAc,GAAGV,QAAQ,CAAC,KAAKW,gBAAL,CAAsBF,cAAtB,CAAD,CAA/B;AACA,aAAO,KAAKG,KAAL,CAAWC,IAAX,CAAgBH,cAAhB,CAAP;AACH;;;8BAES;AACN,aAAO,KAAKE,KAAL,CAAWC,IAAX,EAAP;AACH;;;mCAEcC,K,EAAO;AAClB,aAAO,KAAKF,KAAL,CAAWG,aAAX,CAAyBD,KAAzB,CAAP;AACH;;;+BAEU;AACP,aAAO,KAAKX,GAAL,EAAP;AACH;;;;EApCeN,YAAY,CAACC,OAAD,EAAU,CAAE,MAAF,CAAV,C;;AAuChC,eAAeI,KAAf","sourcesContent":["import withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport Rect from '../geometry/rect';\nimport toMatrix from '../geometry/to-matrix';\nimport { defined } from '../util';\n\n\nclass Image extends withGeometry(Element, [ \"rect\" ]) {\n    get nodeType() {\n        return \"Image\";\n    }\n\n    constructor(src, rect = new Rect(), options = {}) {\n        super(options);\n\n        this.src(src);\n        this.rect(rect);\n    }\n\n    src(value) {\n        if (defined(value)) {\n            this.options.set(\"src\", value);\n            return this;\n        }\n\n        return this.options.get(\"src\");\n    }\n\n    bbox(transformation) {\n        const combinedMatrix = toMatrix(this.currentTransform(transformation));\n        return this._rect.bbox(combinedMatrix);\n    }\n\n    rawBBox() {\n        return this._rect.bbox();\n    }\n\n    _containsPoint(point) {\n        return this._rect.containsPoint(point);\n    }\n\n    _hasFill() {\n        return this.src();\n    }\n}\n\nexport default Image;"]},"metadata":{},"sourceType":"module"}