{"ast":null,"code":"import _slicedToArray from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _get from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _ACTIONS, _ACTIONS$, _ACTIONS$2, _ACTIONS$3, _services, _scrollModifiers, _scrollNormalizers, _scrollValidators, _services$;\n\nfunction _templateObject33() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.nowLabel|The label for the Now button in the timeselector component\\u241F08e6a8a51d970609e138950fdd89c5cf201869f3\\u241F7789175884909488647:Select now\"]);\n\n  _templateObject33 = function _templateObject33() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject32() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.now|The Now button text in the timeselector component\\u241F98cba1ae36a7bbe15e1bac1837e07922ec109e7d\\u241F1926162752852226109:Now\"]);\n\n  _templateObject32 = function _templateObject32() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject31() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.cancelLabel|The label for the Cancel button in the timeselector component\\u241F08dfbdfffd662371a6ff4c0b6ed82b9faa48143b\\u241F5738120209397145846:Cancel changes\"]);\n\n  _templateObject31 = function _templateObject31() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject30() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.cancel|The Cancel button text in the timeselector component\\u241F3004d7704ffa6202a3b3925fcea490e486203a3e\\u241F1890188482755567622:Cancel\"]);\n\n  _templateObject30 = function _templateObject30() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject29() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.acceptLabel|The label for the Accept button in the timeselector component\\u241Fb4b1e5ac55f0330f6c4e32b866ae4339ad969978\\u241F3417396278000787211:Set time\"]);\n\n  _templateObject29 = function _templateObject29() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\":kendo.timeselector.accept|The Accept button text in the timeselector component\\u241F801811aa1609e3f173c86baa82cee037f75a215f\\u241F5362895271044573681:Set\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\":kendo.multiviewcalendar.nextButtonTitle|The label for the next button in the Multiview calendar\\u241F3e3a529a242f39d22f841c3bd8045ec75b696b7a\\u241F3994336778698343633:Navigate to next view\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\":kendo.multiviewcalendar.prevButtonTitle|The label for the previous button in the Multiview calendar\\u241Fe783e2af4828224b846fa92148ea1cc52b21bb13\\u241F9101635325676663492:Navigate to previous view\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\":kendo.multiviewcalendar.today|The label for the today button in the calendar header\\u241F063d99483243b27bc8282abfb5f2c76877e1112e\\u241F3892034896682737327:TODAY\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.today|The label for the today button in the calendar header\\u241F7ee30b9ae5918cc544fbd87a4135694397aeefaf\\u241F7904626229769721311:TODAY\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.nowLabel|The label for the Now button in the timepicker component\\u241F52d90641b26b1ce4c011cadf0437ce36c1dac1d5\\u241F5046379108717037514:Select now\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.now|The Now button text in the timepicker component\\u241F7172e7e9a1741f6b63439ec89e498c995cb23b0d\\u241F5497093725885127701:NOW\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.cancelLabel|The label for the Cancel button in the datetimepicker component\\u241Fba26795ab9f4c21d66b17549ba854a96fcdac1f9\\u241F3535986227615756275:Cancel\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.cancel|The Cancel button text in the datetimepicker component\\u241F17ab795d6f7527dd962a309759ca58cb4edd7e52\\u241F5100781969600382158:Cancel\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.acceptLabel|The label for the Accept button in the datetimepicker component\\u241Fcbea4571cca81ad9767a6b29f0287d1f3f6372dc\\u241F4770689705864890748:Set\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.accept|The Accept button text in the datetimepicker component\\u241F4359b59db7ded88e106ada877e744c71b188f8f9\\u241F3915774704336012538:Set\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.toggle|The label for the toggle button in the datetimepicker component\\u241F60296a83f0d3e3d07aaba87c4f8e91b0aca3c22a\\u241F3159207801887264026:Toggle popup\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.timeTabLabel|The label for the Time tab in the datetimepicker popup header\\u241F13bf7e3a1036140119732c6d5952f7a20c22999e\\u241F2577682127494513393:Time tab\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.timeTab|The Time tab text in the datetimepicker popup header\\u241Fe9b2b760a6916040e7520a9a2926d65de175944d\\u241F3807284594201983607:Time\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.dateTabLabel|The label for the Date tab in the datetimepicker popup header\\u241F2a400c9e364a4c6d83ac39b5513c962805db54b2\\u241F1810540079817643910:Date tab\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\":kendo.datetimepicker.dateTab|The Date tab text in the datetimepicker popup header\\u241F5bb17f81ae8dbc109499ce3792afffa6b7cef855\\u241F3360129034450596425:Date\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.toggle|The label for the toggle button in the timepicker component\\u241Ff2c196786ed2d3ecb2369750c36aac9a4053fb30\\u241F6938407659294495526:Toggle time list\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.nowLabel|The label for the Now button in the timepicker component\\u241Fdf1a696f318275aa934e27850920889d494c2740\\u241F371982627910576599:Select now\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.now|The Now button text in the timepicker component\\u241Fbbc99bb74ae75a503bd813aad0c7253d3553e923\\u241F5912507758515138116:Now\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.cancelLabel|The label for the Cancel button in the timepicker component\\u241F2cf6f4ca4470810944b4016c9b6f87943d3390ab\\u241F83621966901491941:Cancel changes\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.cancel|The Cancel button text in the timepicker component\\u241F132eefca16bd41d489b4647724b91e93793603aa\\u241F1086687567255473060:Cancel\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.acceptLabel|The label for the Accept button in the timepicker component\\u241F93c2a9c3aa49f56e452c0aecbaabe3bb33fa4222\\u241F4355879331538595758:Set time\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\":kendo.timepicker.accept|The Accept button text in the timepicker component\\u241F4c3bf42192220c7611c09ece1c5de14855139dd0\\u241F7519663530416240229:Set\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\":kendo.datepicker.toggle|The label for the toggle button in the datepicker component\\u241Ff6c28c2d80dbe993c4b33f4dc4010364f41cc2ae\\u241F4817467473728423164:Toggle calendar\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\":kendo.datepicker.today|The label for the today button in the calendar header\\u241F91a84f2d4871dbe7e90d84865d4a4d83c8ae041e\\u241F1910980355989755624:TODAY\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\":kendo.dateinput.decrement|The label for the **Decrement** button in the DateInput\\u241F0eded761107e6dad120997006a7f915bade9b15c\\u241F6980524091606682769:Decrease value\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\":kendo.dateinput.increment|The label for the **Increment** button in the DateInput\\u241Fa55944f9de69e7cc86b91200fe96f980a947d704\\u241F589112377451589685:Increase value\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\":kendo.calendar.today|The label for the today button in the calendar header\\u241F2df64767cd895a8fabe3e18b94b5b6b6f9e2e3f0\\u241F826701167553276328:TODAY\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Injectable, EventEmitter, Injector, InjectionToken, Component, Inject, ElementRef, Renderer2, NgZone, Input, Output, HostBinding, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, Directive, TemplateRef, isDevMode, forwardRef, Optional, ContentChild, ViewContainerRef, HostListener, ViewChildren, ContentChildren, IterableDiffers, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl } from '@angular/forms';\nimport { LocalizationService, L10N_PREFIX, RTL, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { getDate, isEqual, cloneDate, addDays, addDecades, addCenturies, firstDecadeOfCentury, lastDecadeOfCentury, firstYearOfDecade, createDate, durationInCenturies, addYears, lastYearOfDecade, durationInDecades, addWeeks, addMonths, firstDayOfMonth, lastDayOfMonth, dayOfWeek, durationInMonths, firstMonthOfYear, lastMonthOfYear, durationInYears, weekInYear } from '@progress/kendo-date-math';\nimport { isDocumentAvailable, KendoInput, guid, hasObservers, Keys, EventsModule } from '@progress/kendo-angular-common';\nimport { IntlService, IntlModule } from '@progress/kendo-angular-intl';\nimport { ReplaySubject, Observable, Subject, combineLatest, of, interval, animationFrameScheduler, fromEvent, EMPTY, from, Subscription, BehaviorSubject, merge } from 'rxjs';\nimport { map, scan, takeWhile, tap, filter, debounceTime } from 'rxjs/operators';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { CommonModule } from '@angular/common';\nimport { touchEnabled } from '@progress/kendo-common';\n/**\n * @hidden\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@progress/kendo-angular-common';\nvar _c0 = [\"*\"];\nvar _c1 = [\"list\"];\n\nfunction NavigationComponent_li_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var date_r2 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.service.navigationTitle(date_r2));\n  }\n}\n\nfunction NavigationComponent_li_4_ng_template_3_Template(rf, ctx) {}\n\nvar _c2 = function _c2(a0, a1, a2) {\n  return {\n    $implicit: a0,\n    activeView: a1,\n    date: a2\n  };\n};\n\nfunction NavigationComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtemplate(2, NavigationComponent_li_4_ng_template_2_Template, 1, 1, \"ng-template\", 5);\n    ɵngcc0.ɵɵtemplate(3, NavigationComponent_li_4_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var date_r2 = ctx.$implicit;\n    var index_r3 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"data-date-index\", index_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"k-calendar-navigation-marker\", ctx_r1.service.isRangeStart(date_r2));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.templateRef)(\"ngTemplateOutlet\", ctx_r1.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(7, _c2, ctx_r1.service.navigationTitle(date_r2), ctx_r1.activeViewValue, date_r2));\n  }\n}\n\nvar _c3 = function _c3(a0) {\n  return {\n    click: a0\n  };\n};\n\nfunction ViewListComponent_table_1_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var name_r5 = ctx.$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r4.colWidth, \"%\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(name_r5);\n  }\n}\n\nfunction ViewListComponent_table_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"table\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"thead\");\n    ɵngcc0.ɵɵelementStart(2, \"tr\");\n    ɵngcc0.ɵɵtemplate(3, ViewListComponent_table_1_th_3_Template, 2, 3, \"th\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.weekNames);\n  }\n}\n\nfunction ViewListComponent_col_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n}\n\nfunction ViewListComponent_tbody_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tbody\", 8);\n    ɵngcc0.ɵɵlistener(\"change\", function ViewListComponent_tbody_7_Template_tbody_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleDateChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var date_r7 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeView\", ctx_r3.activeView)(\"isActive\", ctx_r3.isActive)(\"min\", ctx_r3.min)(\"max\", ctx_r3.max)(\"cellUID\", ctx_r3.cellUID)(\"focusedDate\", ctx_r3.focusedDate)(\"selectedDate\", ctx_r3.value)(\"weekNumber\", ctx_r3.weekNumber)(\"templateRef\", ctx_r3.cellTemplateRef)(\"weekNumberTemplateRef\", ctx_r3.weekNumberTemplateRef)(\"viewDate\", date_r7);\n  }\n}\n\nfunction CalendarComponent_kendo_calendar_navigation_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-calendar-navigation\", 4);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function CalendarComponent_kendo_calendar_navigation_2_Template_kendo_calendar_navigation_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.handleNavigation($event);\n    })(\"pageChange\", function CalendarComponent_kendo_calendar_navigation_2_Template_kendo_calendar_navigation_pageChange_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onPageChange();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeView\", ctx_r0.activeViewEnum)(\"focusedDate\", ctx_r0.focusedDate)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"templateRef\", ctx_r0.navigationItemTemplate == null ? null : ctx_r0.navigationItemTemplate.templateRef);\n  }\n}\n\nvar _c6 = [\"dateInput\"];\nvar _c7 = [\"wrap\"];\n\nfunction DateInputComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 7);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function DateInputComponent_span_6_Template_span_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\", 8);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function DateInputComponent_span_6_Template_span_mousedown_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.arrowDirection = ctx_r5.arrow.Up;\n    })(\"mouseleave\", function DateInputComponent_span_6_Template_span_mouseleave_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.arrowDirection = ctx_r6.arrow.None;\n    })(\"click\", function DateInputComponent_span_6_Template_span_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.handleButtonClick(1);\n    });\n    ɵngcc0.ɵɵelement(2, \"span\", 9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"span\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function DateInputComponent_span_6_Template_span_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleButtonClick(-1);\n    })(\"mousedown\", function DateInputComponent_span_6_Template_span_mousedown_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.arrowDirection = ctx_r9.arrow.Down;\n    })(\"mouseleave\", function DateInputComponent_span_6_Template_span_mouseleave_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.arrowDirection = ctx_r10.arrow.None;\n    });\n    ɵngcc0.ɵɵelement(4, \"span\", 11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx_r2.arrowDirection === ctx_r2.arrow.Up);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r2.localization.get(\"increment\"));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.localization.get(\"increment\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx_r2.arrowDirection === ctx_r2.arrow.Down);\n    ɵngcc0.ɵɵproperty(\"title\", ctx_r2.localization.get(\"decrement\"));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.localization.get(\"decrement\"));\n  }\n}\n\nvar _c12 = function _c12(a0, a1, a2, a3, a4, a5, a6) {\n  return {\n    click: a0,\n    focus: a1,\n    mousedown: a2,\n    touchstart: a3,\n    dragstart: a4,\n    drop: a5,\n    blur: a6\n  };\n};\n\nvar _c13 = [\"container\"];\nvar _c14 = [\"popupTemplate\"];\nvar _c15 = [\"wrapper\"];\n\nfunction DatePickerComponent_ng_template_10_ng_template_3_Template(rf, ctx) {}\n\nvar _c20 = function _c20(a0) {\n  return {\n    keydown: a0\n  };\n};\n\nfunction DatePickerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-calendar\", 10, 11);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function DatePickerComponent_ng_template_10_Template_kendo_calendar_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.handleChange(ctx_r7.mergeTime($event));\n    });\n    ɵngcc0.ɵɵelement(2, \"kendo-calendar-messages\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, DatePickerComponent_ng_template_10_ng_template_3_Template, 0, 0, \"ng-template\");\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"min\", ctx_r4.min)(\"max\", ctx_r4.max)(\"navigation\", ctx_r4.navigation)(\"activeView\", ctx_r4.activeView)(\"bottomView\", ctx_r4.bottomView)(\"topView\", ctx_r4.topView)(\"weekNumber\", ctx_r4.weekNumber)(\"cellTemplate\", ctx_r4.cellTemplate)(\"monthCellTemplate\", ctx_r4.monthCellTemplate)(\"yearCellTemplate\", ctx_r4.yearCellTemplate)(\"decadeCellTemplate\", ctx_r4.decadeCellTemplate)(\"centuryCellTemplate\", ctx_r4.centuryCellTemplate)(\"weekNumberTemplate\", ctx_r4.weekNumberTemplate)(\"headerTitleTemplate\", ctx_r4.headerTitleTemplate)(\"navigationItemTemplate\", ctx_r4.navigationItemTemplate)(\"focusedDate\", ctx_r4.focusedDate)(\"value\", ctx_r4.value)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(21, _c20, ctx_r4.handleKeydown))(\"scope\", ctx_r4)(\"disabledDates\", ctx_r4.disabledDates);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"today\", ctx_r4.localization.get(\"today\"));\n  }\n}\n\nvar _c21 = function _c21(a0, a1) {\n  return {\n    click: a0,\n    mousedown: a1\n  };\n};\n\nvar _c36 = function _c36(a0, a1) {\n  return {\n    keydown: a0,\n    mousedown: a1\n  };\n};\n\nfunction TimePickerComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-timeselector\", 10, 11);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function TimePickerComponent_ng_template_8_Template_kendo_timeselector_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.handleChange($event);\n    })(\"valueReject\", function TimePickerComponent_ng_template_8_Template_kendo_timeselector_valueReject_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleReject();\n    });\n    ɵngcc0.ɵɵelement(2, \"kendo-timeselector-messages\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"cancelButton\", ctx_r3.cancelButton)(\"nowButton\", ctx_r3.nowButton)(\"format\", ctx_r3.format)(\"min\", ctx_r3.min)(\"max\", ctx_r3.max)(\"steps\", ctx_r3.steps)(\"value\", ctx_r3.value)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(15, _c36, ctx_r3.handleKeydown, ctx_r3.handleMousedown))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"acceptLabel\", ctx_r3.localization.get(\"acceptLabel\"))(\"accept\", ctx_r3.localization.get(\"accept\"))(\"cancelLabel\", ctx_r3.localization.get(\"cancelLabel\"))(\"cancel\", ctx_r3.localization.get(\"cancel\"))(\"nowLabel\", ctx_r3.localization.get(\"nowLabel\"))(\"now\", ctx_r3.localization.get(\"now\"));\n  }\n}\n\nfunction DateTimePickerComponent_ng_template_10_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 26);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(5, _c3, ctx_r5.handleCancel))(\"scope\", ctx_r5);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r5.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r5.localization.get(\"cancelLabel\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r5.localization.get(\"cancel\"), \" \");\n  }\n}\n\nvar _c61 = function _c61(a0, a1) {\n  return {\n    mousedown: a0,\n    keydown: a1\n  };\n};\n\nvar _c62 = function _c62(a0, a1) {\n  return {\n    focusin: a0,\n    focusout: a1\n  };\n};\n\nvar _c63 = function _c63(a0, a1) {\n  return {\n    click: a0,\n    keydown: a1\n  };\n};\n\nvar _c64 = function _c64(a0) {\n  return {\n    transitionend: a0\n  };\n};\n\nvar _c65 = function _c65(a0, a1, a2) {\n  return {\n    keydown: a0,\n    focusin: a1,\n    focusout: a2\n  };\n};\n\nfunction DateTimePickerComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(3, \"button\", 13);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"button\", 14);\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(7, \"div\", 15, 16);\n    ɵngcc0.ɵɵelementStart(9, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(10, \"kendo-calendar\", 18);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function DateTimePickerComponent_ng_template_10_Template_kendo_calendar_valueChange_10_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.calendarValue = $event;\n    })(\"valueChange\", function DateTimePickerComponent_ng_template_10_Template_kendo_calendar_valueChange_10_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleCalendarValueChange();\n    });\n    ɵngcc0.ɵɵelement(11, \"kendo-calendar-messages\", 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(13, \"kendo-timeselector\", 21);\n    ɵngcc0.ɵɵelement(14, \"kendo-timeselector-messages\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(15, \"div\", 23);\n    ɵngcc0.ɵɵtemplate(16, DateTimePickerComponent_ng_template_10_button_16_Template, 2, 7, \"button\", 24);\n    ɵngcc0.ɵɵelementStart(17, \"button\", 25);\n    ɵngcc0.ɵɵtext(18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r4 = ɵngcc0.ɵɵreference(8);\n\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"k-datetime-wrap k-\", ctx_r3.activeTab, \"-tab\");\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(58, _c61, ctx_r3.preventMouseDown, ctx_r3.handleKeyDown))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(61, _c62, ctx_r3.handleFocus, ctx_r3.handleBlur))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx_r3.activeTab === \"date\");\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(64, _c63, ctx_r3.changeActiveTab.bind(ctx_r3, \"date\"), ctx_r3.handleBackTabOut))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r3.localization.get(\"dateTabLabel\"))(\"aria-label\", ctx_r3.localization.get(\"dateTabLabel\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.localization.get(\"dateTab\"), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"k-state-active\", ctx_r3.activeTab === \"time\");\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(67, _c3, ctx_r3.changeActiveTab.bind(ctx_r3, \"time\")));\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r3.localization.get(\"timeTabLabel\"))(\"aria-label\", ctx_r3.localization.get(\"timeTabLabel\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.localization.get(\"timeTab\"), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"transition\", ctx_r3.tabSwitchTransition);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(69, _c64, ctx_r3.handleTabChangeTransitionEnd.bind(ctx_r3, _r4)));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.calendarValue)(\"min\", ctx_r3.calendarMin)(\"max\", ctx_r3.calendarMax)(\"focusedDate\", ctx_r3.focusedDate)(\"weekNumber\", ctx_r3.weekNumber)(\"navigation\", false)(\"cellTemplate\", ctx_r3.cellTemplate)(\"monthCellTemplate\", ctx_r3.monthCellTemplate)(\"yearCellTemplate\", ctx_r3.yearCellTemplate)(\"decadeCellTemplate\", ctx_r3.decadeCellTemplate)(\"centuryCellTemplate\", ctx_r3.centuryCellTemplate)(\"weekNumberTemplate\", ctx_r3.weekNumberTemplate)(\"headerTitleTemplate\", ctx_r3.headerTitleTemplate)(\"disabled\", ctx_r3.disableCalendar)(\"disabledDates\", ctx_r3.disabledDates);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"today\", ctx_r3.localization.get(\"today\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.value)(\"format\", ctx_r3.timeSelectorFormat)(\"min\", ctx_r3.timeSelectorMin)(\"max\", ctx_r3.timeSelectorMax)(\"setButton\", false)(\"cancelButton\", false)(\"steps\", ctx_r3.steps)(\"disabled\", ctx_r3.disableTimeSelector);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"now\", ctx_r3.localization.get(\"now\"))(\"nowLabel\", ctx_r3.localization.get(\"nowLabel\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction3(71, _c65, ctx_r3.handleTabOut, ctx_r3.handleFocus, ctx_r3.handleBlur))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.cancelButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r3.calendarValue)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(75, _c3, ctx_r3.handleAccept))(\"scope\", ctx_r3);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r3.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r3.localization.get(\"acceptLabel\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.localization.get(\"accept\"), \" \");\n  }\n}\n\nvar _c66 = function _c66(a0, a1) {\n  return {\n    mousedown: a0,\n    click: a1\n  };\n};\n\nfunction HorizontalViewListComponent_tbody_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tbody\", 3);\n    ɵngcc0.ɵɵlistener(\"change\", function HorizontalViewListComponent_tbody_2_Template_tbody_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.handleDateChange($event);\n    })(\"cellEnter\", function HorizontalViewListComponent_tbody_2_Template_tbody_cellEnter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.cellEnter.emit($event);\n    })(\"cellLeave\", function HorizontalViewListComponent_tbody_2_Template_tbody_cellLeave_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.cellLeave.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var date_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeView\", ctx_r0.activeView)(\"isActive\", ctx_r0.isActive)(\"min\", ctx_r0.min)(\"max\", ctx_r0.max)(\"cellUID\", ctx_r0.cellUID)(\"focusedDate\", ctx_r0.focusedDate)(\"selectedDate\", ctx_r0.value)(\"selectionRange\", ctx_r0.selectionRange)(\"activeRangeEnd\", ctx_r0.activeRangeEnd)(\"weekNumber\", ctx_r0.weekNumber)(\"templateRef\", ctx_r0.cellTemplateRef)(\"weekNumberTemplateRef\", ctx_r0.weekNumberTemplateRef)(\"viewDate\", date_r1);\n  }\n}\n\nvar _c73 = [\"defaultTemplate\"];\n\nfunction DateRangePopupComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-multiviewcalendar\", 2);\n  }\n}\n\nfunction DateRangeComponent_kendo_daterange_popup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-daterange-popup\");\n  }\n}\n\nfunction HeaderComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.title);\n  }\n}\n\nfunction HeaderComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c74 = [\"kendoCalendarView\", \"\"];\n\nfunction ViewComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 3);\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction ViewComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"th\", 5);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"colSpan\", ctx_r2.colSpan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n  }\n}\n\nfunction ViewComponent_tr_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var name_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(name_r6);\n  }\n}\n\nfunction ViewComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, ViewComponent_tr_3_th_1_Template, 2, 1, \"th\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.weekNames);\n  }\n}\n\nfunction ViewComponent_tr_4_ng_template_1_td_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var row_r7 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    var ctx_r12 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r12.getWeekNumber(ctx_r12.firstDate(row_r7)), \" \");\n  }\n}\n\nfunction ViewComponent_tr_4_ng_template_1_td_0_ng_template_2_Template(rf, ctx) {}\n\nvar _c75 = function _c75(a0, a1) {\n  return {\n    $implicit: a0,\n    cellContext: a1\n  };\n};\n\nfunction ViewComponent_tr_4_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 10);\n    ɵngcc0.ɵɵtemplate(1, ViewComponent_tr_4_ng_template_1_td_0_ng_template_1_Template, 1, 1, \"ng-template\", 7);\n    ɵngcc0.ɵɵtemplate(2, ViewComponent_tr_4_ng_template_1_td_0_ng_template_2_Template, 0, 0, \"ng-template\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r7 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r11.weekNumberTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11.weekNumberTemplateRef)(\"ngTemplateOutlet\", ctx_r11.weekNumberTemplateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(4, _c75, ctx_r11.firstDate(row_r7), ctx_r11.getWeekNumberContext(row_r7)));\n  }\n}\n\nfunction ViewComponent_tr_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ViewComponent_tr_4_ng_template_1_td_0_Template, 3, 7, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    var row_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.firstDate(row_r7))(\"ngIfElse\", _r0);\n  }\n}\n\nfunction ViewComponent_tr_4_ng_container_2_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var cell_r17 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(cell_r17.formattedValue);\n  }\n}\n\nfunction ViewComponent_tr_4_ng_container_2_td_1_3_ng_template_0_Template(rf, ctx) {}\n\nfunction ViewComponent_tr_4_ng_container_2_td_1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ViewComponent_tr_4_ng_container_2_td_1_3_ng_template_0_Template, 0, 0, \"ng-template\", 16);\n  }\n\n  if (rf & 2) {\n    var cell_r17 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r21.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c75, cell_r17.value, cell_r17));\n  }\n}\n\nfunction ViewComponent_tr_4_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 13);\n    ɵngcc0.ɵɵelementStart(1, \"span\", 14);\n    ɵngcc0.ɵɵtemplate(2, ViewComponent_tr_4_ng_container_2_td_1_ng_template_2_Template, 1, 1, \"ng-template\", 7);\n    ɵngcc0.ɵɵtemplate(3, ViewComponent_tr_4_ng_container_2_td_1_3_Template, 1, 5, undefined, 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r25 = ɵngcc0.ɵɵnextContext();\n    var cell_r17 = ctx_r25.$implicit;\n    var cellIndex_r18 = ctx_r25.index;\n    var rowIndex_r8 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r19.getStyles(cell_r17))(\"title\", cell_r17.title);\n    ɵngcc0.ɵɵattribute(\"id\", cell_r17.id)(\"data-cell-index\", ctx_r19.tableCellIndex(rowIndex_r8, cellIndex_r18))(\"aria-selected\", cell_r17.isSelected || cell_r17.isRangeStart || cell_r17.isRangeMid || cell_r17.isRangeEnd)(\"aria-disabled\", cell_r17.isDisabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r19.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r19.templateRef);\n  }\n}\n\nfunction ViewComponent_tr_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, ViewComponent_tr_4_ng_container_2_td_1_Template, 4, 8, \"td\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var cell_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", cell_r17)(\"ngIfElse\", _r0);\n  }\n}\n\nfunction ViewComponent_tr_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 4);\n    ɵngcc0.ɵɵtemplate(1, ViewComponent_tr_4_ng_template_1_Template, 1, 2, \"ng-template\", 7);\n    ɵngcc0.ɵɵtemplate(2, ViewComponent_tr_4_ng_container_2_Template, 2, 2, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var row_r7 = ctx.$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.weekNumber);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kForOf\", row_r7);\n  }\n}\n\nfunction TimeListComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var index_r2 = ctx.index;\n    ɵngcc0.ɵɵattribute(\"data-timelist-item-index\", index_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(item_r1.text);\n  }\n}\n\nvar _c76 = [\"accept\"];\nvar _c77 = [\"cancel\"];\nvar _c78 = [\"now\"];\nvar _c79 = [\"listWrapper\"];\n\nvar _c92 = function _c92(a0, a1, a2) {\n  return {\n    click: a0,\n    focus: a1,\n    blur: a2\n  };\n};\n\nfunction TimeSelectorComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 9, 10);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction3(6, _c92, ctx_r0.handleNow, ctx_r0.handleFocus, ctx_r0.handleBlur))(\"scope\", ctx_r0)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r0.localization.get(\"nowLabel\"))(\"aria-label\", ctx_r0.localization.get(\"nowLabel\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.localization.get(\"now\"));\n  }\n}\n\nvar _c93 = function _c93(a0, a1) {\n  return {\n    focus: a0,\n    blur: a1\n  };\n};\n\nfunction TimeSelectorComponent_ng_template_8_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13, 14);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"kendo-timelist\", 15);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function TimeSelectorComponent_ng_template_8_div_0_Template_kendo_timelist_valueChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.current = $event;\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext();\n    var part_r4 = ctx_r11.$implicit;\n    var idx_r5 = ctx_r11.index;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.intl.dateFieldName(part_r4));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"min\", ctx_r6.min)(\"max\", ctx_r6.max)(\"part\", part_r4)(\"step\", ctx_r6.partStep(part_r4))(\"disabled\", ctx_r6.disabled)(\"value\", ctx_r6.current)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(10, _c93, ctx_r6.handleListFocus, ctx_r6.handleBlur))(\"scope\", ctx_r6);\n    ɵngcc0.ɵɵattribute(\"data-timelist-index\", idx_r5);\n  }\n}\n\nfunction TimeSelectorComponent_ng_template_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var part_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", part_r4.pattern, \" \");\n  }\n}\n\nfunction TimeSelectorComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TimeSelectorComponent_ng_template_8_div_0_Template, 5, 13, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, TimeSelectorComponent_ng_template_8_div_1_Template, 2, 1, \"div\", 12);\n  }\n\n  if (rf & 2) {\n    var part_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", part_r4.type !== \"literal\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", part_r4.type === \"literal\");\n  }\n}\n\nfunction TimeSelectorComponent_div_9_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 20, 21);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction3(6, _c92, ctx_r13.handleReject, ctx_r13.handleFocus, ctx_r13.handleBlur))(\"scope\", ctx_r13)(\"disabled\", ctx_r13.disabled);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r13.localization.get(\"cancelLabel\"))(\"aria-label\", ctx_r13.localization.get(\"cancelLabel\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13.localization.get(\"cancel\"));\n  }\n}\n\nfunction TimeSelectorComponent_div_9_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 22, 23);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction3(6, _c92, ctx_r14.handleAccept, ctx_r14.handleFocus, ctx_r14.handleBlur))(\"scope\", ctx_r14)(\"disabled\", ctx_r14.disabled);\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r14.localization.get(\"acceptLabel\"))(\"aria-label\", ctx_r14.localization.get(\"acceptLabel\"));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r14.localization.get(\"accept\"));\n  }\n}\n\nfunction TimeSelectorComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵtemplate(1, TimeSelectorComponent_div_9_button_1_Template, 3, 10, \"button\", 18);\n    ɵngcc0.ɵɵtemplate(2, TimeSelectorComponent_div_9_button_2_Template, 3, 10, \"button\", 19);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.cancelButton);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.setButton);\n  }\n}\n\nvar Action;\n\n(function (Action) {\n  Action[Action[\"Left\"] = 0] = \"Left\";\n  Action[Action[\"Right\"] = 1] = \"Right\";\n  Action[Action[\"Up\"] = 2] = \"Up\";\n  Action[Action[\"Down\"] = 3] = \"Down\";\n  Action[Action[\"PrevView\"] = 4] = \"PrevView\";\n  Action[Action[\"NextView\"] = 5] = \"NextView\";\n  Action[Action[\"FirstInView\"] = 6] = \"FirstInView\";\n  Action[Action[\"LastInView\"] = 7] = \"LastInView\";\n  Action[Action[\"LowerView\"] = 8] = \"LowerView\";\n  Action[Action[\"UpperView\"] = 9] = \"UpperView\";\n})(Action || (Action = {}));\n/**\n * @hidden\n */\n\n\nvar EMPTY_SELECTIONRANGE = {\n  start: null,\n  end: null\n};\n/**\n * @hidden\n */\n\nvar MIDNIGHT_DATE = new Date(1980, 0, 1);\n/**\n * @hidden\n */\n\nvar MIN_DATE = new Date(1900, 0, 1);\n/**\n * @hidden\n */\n\nvar MAX_DATE = new Date(2099, 11, 31);\n/**\n * @hidden\n */\n\nvar MIN_TIME = new Date(1980, 0, 1);\n/**\n * @hidden\n */\n\nvar MAX_TIME = new Date(1980, 0, 1, 23, 59, 59);\n/* tslint:disable:no-bitwise max-line-length */\n\nvar isSet = function isSet(value) {\n  return value !== null && value !== undefined;\n};\n\nvar setter = function setter(method) {\n  return function (date, value) {\n    var clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar setTime = function setTime(origin, candidate) {\n  var date = cloneDate(origin);\n  date.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());\n  return date;\n};\n\nvar normalizeTimes = function normalizeTimes(candidate, min, max) {\n  return {\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), min.getHours() < max.getHours() || min.getHours() === max.getHours() && min.getMinutes() < max.getMinutes() ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n  };\n};\n/**\n * @hidden\n */\n\n\nvar setHours = setter('setHours');\n/**\n * @hidden\n */\n\nvar setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\n\nvar setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\n\nvar range = function range(start, end) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var result = [];\n\n  for (var i = start; i < end; i = i + step) {\n    result.push(i);\n  }\n\n  return result;\n};\n/**\n * @hidden\n */\n\n\nvar isInRange = function isInRange(candidate, min, max) {\n  return !candidate || !(min && min > candidate || max && max < candidate);\n};\n/**\n * @hidden\n */\n\n\nvar isInTimeRange = function isInTimeRange(candidate, min, max) {\n  if (!candidate || !min || !max) {\n    return true;\n  }\n\n  var _normalizeTimes = normalizeTimes(candidate, min, max),\n      candidateValue = _normalizeTimes.candidateValue,\n      minValue = _normalizeTimes.minValue,\n      maxValue = _normalizeTimes.maxValue;\n\n  return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\n\n\nvar isValidRange = function isValidRange(min, max) {\n  return !isSet(min) || !isSet(max) || min <= max;\n};\n/**\n * @hidden\n */\n\n\nvar dateInRange = function dateInRange(candidate, min, max) {\n  if (!candidate) {\n    return candidate;\n  }\n\n  if (min && candidate < min) {\n    return cloneDate(min);\n  }\n\n  if (max && candidate > max) {\n    return cloneDate(max);\n  }\n\n  return candidate;\n};\n/**\n * @hidden\n */\n\n\nvar timeInRange = function timeInRange(candidate, min, max) {\n  if (!candidate || !min || !max) {\n    return candidate;\n  }\n\n  var _normalizeTimes2 = normalizeTimes(candidate, min, max),\n      candidateValue = _normalizeTimes2.candidateValue,\n      minValue = _normalizeTimes2.minValue,\n      maxValue = _normalizeTimes2.maxValue;\n\n  if (candidateValue < minValue) {\n    return setTime(candidate, min);\n  }\n\n  if (candidateValue > maxValue) {\n    return setTime(candidate, max);\n  }\n\n  return candidate;\n};\n/**\n * @hidden\n */\n\n\nvar getNow = function getNow() {\n  return new Date();\n};\n/**\n * @hidden\n */\n\n\nvar getToday = function getToday() {\n  return getDate(new Date());\n};\n/**\n * @hidden\n */\n\n\nvar noop = function noop(_) {}; // tslint:disable-line:no-empty\n\n/**\n * @hidden\n */\n\n\nvar isWindowAvailable = function isWindowAvailable() {\n  return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\n\n\nvar stringifyClassObject = function stringifyClassObject(classes) {\n  var pushToAcc = function pushToAcc(acc, cls) {\n    return classes[cls] ? acc.concat(cls) : acc;\n  };\n\n  return Object.keys(classes).reduce(pushToAcc, []).join(' ');\n};\n/**\n * @hidden\n */\n\n\nvar shiftWeekNames = function shiftWeekNames(names, offset) {\n  return names.slice(offset).concat(names.slice(0, offset));\n};\n/**\n * @hidden\n */\n\n\nvar approximateStringMatching = function approximateStringMatching(oldTextOrigin, oldFormat, newTextOrigin, caret) {\n  // Remove the right part of the cursor.\n  //oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n  var oldIndex = caret + oldTextOrigin.length - newTextOrigin.length;\n  var oldTextSeparator = oldTextOrigin[oldIndex];\n  var oldText = oldTextOrigin.substring(0, caret + oldTextOrigin.length - newTextOrigin.length);\n  var newText = newTextOrigin.substring(0, caret);\n  var diff = []; // Handle typing a single character over the same selection.\n\n  if (oldText === newText && caret > 0) {\n    diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n    return diff;\n  }\n\n  if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n    // Handle Delete/Backspace.\n    var deletedSymbol = \"\"; //XXX:\n    // Whole text is replaced with a same char\n    // Nasty patch required to keep the selection in the first segment\n\n    if (newText.length === 1) {\n      diff.push([oldFormat[0], newText[0]]);\n    }\n\n    for (var i = newText.length; i < oldText.length; i++) {\n      if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== \"_\") {\n        deletedSymbol = oldFormat[i];\n        diff.push([deletedSymbol, \"\"]);\n      }\n    }\n\n    return diff;\n  } // Handle inserting text (the new text is longer than the previous one).\n  // Handle typing over a literal as well.\n\n\n  if (newText.indexOf(oldText) === 0 || oldFormat[caret - 1] === \"_\") {\n    var symbol = oldFormat[0];\n\n    for (var _i = Math.max(0, oldText.length - 1); _i < oldFormat.length; _i++) {\n      if (oldFormat[_i] !== \"_\") {\n        symbol = oldFormat[_i];\n        break;\n      }\n    }\n\n    return [[symbol, newText[caret - 1]]];\n  } // Handle entering a space or a separator, for navigation to the next item.\n\n\n  if (newText[newText.length - 1] === \" \" || newText[newText.length - 1] === oldTextSeparator && oldFormat[oldIndex] === '_') {\n    return [[oldFormat[caret - 1], \"_\"]];\n  } // Handle typing over a correctly selected part.\n\n\n  return [[oldFormat[caret - 1], newText[caret - 1]]];\n};\n/**\n * @hidden\n */\n\n\nvar domContainerFactory = function domContainerFactory(type) {\n  return function (children) {\n    var classes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    var styles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var container = document.createElement(type);\n    container.className = classes;\n    Object.keys(styles).map(function (key) {\n      return container.style[key] = styles[key];\n    });\n\n    if (typeof children === 'string') {\n      container.innerHTML = children || '';\n    } else {\n      (children || []).forEach(function (child) {\n        return child && container.appendChild(child);\n      });\n    }\n\n    return container;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar hasChange = function hasChange(changes, field) {\n  return changes[field] !== undefined;\n};\n/**\n * @hidden\n */\n\n\nvar hasExistingValue = function hasExistingValue(changes, field) {\n  return changes[field] && changes[field].currentValue !== undefined && changes[field].currentValue !== null;\n};\n/**\n * @hidden\n */\n\n\nvar isInSelectionRange = function isInSelectionRange(value, selectionRange) {\n  var _ref = selectionRange || EMPTY_SELECTIONRANGE,\n      start = _ref.start,\n      end = _ref.end;\n\n  if (!start || !end) {\n    return false;\n  }\n\n  return start < value && value < end;\n};\n/**\n * @hidden\n */\n\n\nvar either = function either(value1, value2) {\n  return value1 || value2;\n};\n/**\n * @hidden\n */\n\n\nvar clampRange = function clampRange(value) {\n  return {\n    start: value,\n    end: value\n  };\n};\n/**\n * @hidden\n */\n\n\nvar isEqualRange = function isEqualRange(initial, updated) {\n  var _ref2 = initial || EMPTY_SELECTIONRANGE,\n      initialStart = _ref2.start,\n      initialEnd = _ref2.end;\n\n  var _ref3 = updated || EMPTY_SELECTIONRANGE,\n      updatedStart = _ref3.start,\n      updatedEnd = _ref3.end;\n\n  return isEqual(initialStart, updatedStart) && isEqual(initialEnd, updatedEnd);\n};\n/**\n * @hidden\n *\n * Creates a new date based on the date information from the specified date portion\n * and the time information from the time portion.\n * If a parameter is not provided, returns `null`.\n */\n\n\nvar mergeDateAndTime = function mergeDateAndTime(date, time) {\n  if (!(date && time)) {\n    return null;\n  }\n\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n};\n/**\n * @hidden\n */\n\n\nvar lastMillisecondOfDate = function lastMillisecondOfDate(date) {\n  if (!date) {\n    return null;\n  }\n\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n};\n/**\n * @hidden\n *\n * Returns an array with dates ranging between and including the specified start and\n * end dates that are evaluated as disabled.\n */\n\n\nvar disabledDatesInRange = function disabledDatesInRange(start, end, isDateDisabled) {\n  if (!(start && end && isDateDisabled) || start > end) {\n    return [];\n  }\n\n  var dates = [];\n  var current = start;\n\n  while (current <= end) {\n    if (isDateDisabled(current)) {\n      dates.push(current);\n    }\n\n    current = addDays(current, 1);\n  }\n\n  return dates;\n};\n/* tslint:disable:object-literal-sort-keys */\n\n\nvar EMPTY_DATA = [[]];\nvar CELLS_LENGTH = 5;\nvar ROWS_LENGTH = 2;\nvar ACTIONS = (_ACTIONS = {}, _defineProperty(_ACTIONS, Action.Left, function (date) {\n  return addDecades(date, -1);\n}), _defineProperty(_ACTIONS, Action.Up, function (date) {\n  return addDecades(date, -5);\n}), _defineProperty(_ACTIONS, Action.Right, function (date) {\n  return addDecades(date, 1);\n}), _defineProperty(_ACTIONS, Action.Down, function (date) {\n  return addDecades(date, 5);\n}), _defineProperty(_ACTIONS, Action.PrevView, function (date) {\n  return addCenturies(date, -1);\n}), _defineProperty(_ACTIONS, Action.NextView, function (date) {\n  return addCenturies(date, 1);\n}), _defineProperty(_ACTIONS, Action.FirstInView, function (date) {\n  return firstDecadeOfCentury(date);\n}), _defineProperty(_ACTIONS, Action.LastInView, function (date) {\n  return lastDecadeOfCentury(date);\n}), _ACTIONS);\n/**\n * @hidden\n */\n\nvar CenturyViewService = /*#__PURE__*/function () {\n  function CenturyViewService() {\n    _classCallCheck(this, CenturyViewService);\n  }\n\n  _createClass(CenturyViewService, [{\n    key: \"addToDate\",\n    value: function addToDate(min, skip) {\n      return addCenturies(min, skip);\n    }\n  }, {\n    key: \"datesList\",\n    value: function datesList(start, count) {\n      return range(0, count).map(function (i) {\n        return addCenturies(start, i);\n      });\n    }\n  }, {\n    key: \"data\",\n    value: function data(options) {\n      var _this = this;\n\n      var cellUID = options.cellUID,\n          focusedDate = options.focusedDate,\n          isActiveView = options.isActiveView,\n          max = options.max,\n          min = options.min,\n          selectedDate = options.selectedDate,\n          _options$selectionRan = options.selectionRange,\n          selectionRange = _options$selectionRan === void 0 ? EMPTY_SELECTIONRANGE : _options$selectionRan,\n          viewDate = options.viewDate;\n\n      if (!viewDate) {\n        return EMPTY_DATA;\n      }\n\n      var cells = range(0, CELLS_LENGTH);\n      var firstDate = firstDecadeOfCentury(viewDate);\n      var lastDate = lastDecadeOfCentury(viewDate);\n      var isSelectedDateInRange = isInRange(selectedDate, min, max);\n      var today = getToday();\n      return range(0, ROWS_LENGTH).map(function (rowOffset) {\n        var baseDate = addDecades(firstDate, rowOffset * CELLS_LENGTH);\n        return cells.map(function (cellOffset) {\n          var cellDate = _this.normalize(addDecades(baseDate, cellOffset), min, max);\n\n          if (!_this.isInRange(cellDate, min, max)) {\n            return null;\n          }\n\n          var isRangeStart = _this.isEqual(cellDate, selectionRange.start);\n\n          var isRangeEnd = _this.isEqual(cellDate, selectionRange.end);\n\n          var isInMiddle = !isRangeStart && !isRangeEnd;\n          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          return {\n            formattedValue: _this.value(cellDate),\n            id: \"\".concat(cellUID).concat(cellDate.getTime()),\n            isFocused: _this.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && isSelectedDateInRange && _this.isEqual(cellDate, selectedDate),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && _this.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && _this.isEqual(cellDate, firstDate),\n            isToday: _this.isEqual(cellDate, today),\n            title: _this.cellTitle(cellDate),\n            value: cellDate\n          };\n        });\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n\n      return firstYearOfDecade(candidate).getFullYear() === firstYearOfDecade(expected).getFullYear();\n    }\n  }, {\n    key: \"isInArray\",\n    value: function isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n\n      var year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 99;\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(candidate, min, max) {\n      var year = firstYearOfDecade(candidate).getFullYear();\n      var aboveMin = !min || firstYearOfDecade(min).getFullYear() <= year;\n      var belowMax = !max || year <= firstYearOfDecade(max).getFullYear();\n      return aboveMin && belowMax;\n    }\n  }, {\n    key: \"beginningOfPeriod\",\n    value: function beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n\n      var firstYear = firstYearOfDecade(firstDecadeOfCentury(date));\n      return createDate(firstYear.getFullYear(), 0, 1);\n    }\n  }, {\n    key: \"isRangeStart\",\n    value: function isRangeStart(value) {\n      return value.getFullYear() % 1000 === 0;\n    }\n  }, {\n    key: \"move\",\n    value: function move(value, action) {\n      var modifier = ACTIONS[action];\n\n      if (!modifier) {\n        return value;\n      }\n\n      return modifier(value);\n    }\n  }, {\n    key: \"cellTitle\",\n    value: function cellTitle(value) {\n      return firstYearOfDecade(value).getFullYear().toString();\n    }\n  }, {\n    key: \"navigationTitle\",\n    value: function navigationTitle(value) {\n      return value ? firstDecadeOfCentury(value).getFullYear().toString() : '';\n    }\n  }, {\n    key: \"title\",\n    value: function title(value) {\n      if (!value) {\n        return '';\n      }\n\n      return \"\".concat(firstDecadeOfCentury(value).getFullYear(), \" - \").concat(lastDecadeOfCentury(value).getFullYear());\n    }\n  }, {\n    key: \"rowLength\",\n    value: function rowLength(_) {\n      return CELLS_LENGTH;\n    }\n  }, {\n    key: \"skip\",\n    value: function skip(value, min) {\n      return durationInCenturies(min, value);\n    }\n  }, {\n    key: \"total\",\n    value: function total(min, max) {\n      return durationInCenturies(min, max) + 1;\n    }\n  }, {\n    key: \"value\",\n    value: function value(current) {\n      return current ? firstYearOfDecade(current).getFullYear().toString() : '';\n    }\n  }, {\n    key: \"viewDate\",\n    value: function viewDate(date, max) {\n      var viewsCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var viewsInRange = this.total(date, max);\n\n      if (viewsInRange < viewsCount) {\n        var centuriesToSubtract = viewsCount - viewsInRange;\n        return addCenturies(date, -1 * centuriesToSubtract);\n      }\n\n      return date;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n\n      return cellDate;\n    }\n  }]);\n\n  return CenturyViewService;\n}();\n\nCenturyViewService.ɵfac = function CenturyViewService_Factory(t) {\n  return new (t || CenturyViewService)();\n};\n\nCenturyViewService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CenturyViewService,\n  factory: CenturyViewService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CenturyViewService, [{\n    type: Injectable\n  }], null, null);\n})();\n/* tslint:disable:object-literal-sort-keys */\n\n\nvar EMPTY_DATA$1 = [[]];\nvar CELLS_LENGTH$1 = 5;\nvar ROWS_LENGTH$1 = 2;\nvar ACTIONS$1 = (_ACTIONS$ = {}, _defineProperty(_ACTIONS$, Action.Left, function (date) {\n  return addYears(date, -1);\n}), _defineProperty(_ACTIONS$, Action.Up, function (date) {\n  return addYears(date, -5);\n}), _defineProperty(_ACTIONS$, Action.Right, function (date) {\n  return addYears(date, 1);\n}), _defineProperty(_ACTIONS$, Action.Down, function (date) {\n  return addYears(date, 5);\n}), _defineProperty(_ACTIONS$, Action.PrevView, function (date) {\n  return addDecades(date, -1);\n}), _defineProperty(_ACTIONS$, Action.NextView, function (date) {\n  return addDecades(date, 1);\n}), _defineProperty(_ACTIONS$, Action.FirstInView, function (date) {\n  return firstYearOfDecade(date);\n}), _defineProperty(_ACTIONS$, Action.LastInView, function (date) {\n  return lastYearOfDecade(date);\n}), _ACTIONS$);\n/**\n * @hidden\n */\n\nvar DecadeViewService = /*#__PURE__*/function () {\n  function DecadeViewService() {\n    _classCallCheck(this, DecadeViewService);\n  }\n\n  _createClass(DecadeViewService, [{\n    key: \"addToDate\",\n    value: function addToDate(min, skip) {\n      return addDecades(min, skip);\n    }\n  }, {\n    key: \"datesList\",\n    value: function datesList(start, count) {\n      return range(0, count).map(function (i) {\n        return addDecades(start, i);\n      });\n    }\n  }, {\n    key: \"data\",\n    value: function data(options) {\n      var _this2 = this;\n\n      var cellUID = options.cellUID,\n          focusedDate = options.focusedDate,\n          isActiveView = options.isActiveView,\n          max = options.max,\n          min = options.min,\n          selectedDate = options.selectedDate,\n          _options$selectionRan2 = options.selectionRange,\n          selectionRange = _options$selectionRan2 === void 0 ? EMPTY_SELECTIONRANGE : _options$selectionRan2,\n          viewDate = options.viewDate;\n\n      if (!viewDate) {\n        return EMPTY_DATA$1;\n      }\n\n      var cells = range(0, CELLS_LENGTH$1);\n      var firstDate = firstYearOfDecade(viewDate);\n      var lastDate = lastYearOfDecade(viewDate);\n      var isSelectedDateInRange = isInRange(selectedDate, min, max);\n      var today = getToday();\n      return range(0, ROWS_LENGTH$1).map(function (rowOffset) {\n        var baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH$1);\n        return cells.map(function (cellOffset) {\n          var cellDate = _this2.normalize(addYears(baseDate, cellOffset), min, max);\n\n          if (!_this2.isInRange(cellDate, min, max)) {\n            return null;\n          }\n\n          var isRangeStart = _this2.isEqual(cellDate, selectionRange.start);\n\n          var isRangeEnd = _this2.isEqual(cellDate, selectionRange.end);\n\n          var isInMiddle = !isRangeStart && !isRangeEnd;\n          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          return {\n            formattedValue: _this2.value(cellDate),\n            id: \"\".concat(cellUID).concat(cellDate.getTime()),\n            isFocused: _this2.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && isSelectedDateInRange && _this2.isEqual(cellDate, selectedDate),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && _this2.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && _this2.isEqual(cellDate, firstDate),\n            isToday: _this2.isEqual(cellDate, today),\n            title: _this2.cellTitle(cellDate),\n            value: cellDate\n          };\n        });\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n\n      return candidate.getFullYear() === expected.getFullYear();\n    }\n  }, {\n    key: \"isInArray\",\n    value: function isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n\n      var year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 9;\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(candidate, min, max) {\n      var year = candidate.getFullYear();\n      var aboveMin = !min || min.getFullYear() <= year;\n      var belowMax = !max || year <= max.getFullYear();\n      return aboveMin && belowMax;\n    }\n  }, {\n    key: \"beginningOfPeriod\",\n    value: function beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n\n      var firstYear = firstYearOfDecade(date);\n      return createDate(firstYear.getFullYear(), 0, 1);\n    }\n  }, {\n    key: \"isRangeStart\",\n    value: function isRangeStart(value) {\n      return value.getFullYear() % 100 === 0;\n    }\n  }, {\n    key: \"move\",\n    value: function move(value, action) {\n      var modifier = ACTIONS$1[action];\n\n      if (!modifier) {\n        return value;\n      }\n\n      return modifier(value);\n    }\n  }, {\n    key: \"cellTitle\",\n    value: function cellTitle(value) {\n      return value.getFullYear().toString();\n    }\n  }, {\n    key: \"navigationTitle\",\n    value: function navigationTitle(value) {\n      return value ? firstYearOfDecade(value).getFullYear().toString() : '';\n    }\n  }, {\n    key: \"title\",\n    value: function title(value) {\n      if (!value) {\n        return '';\n      }\n\n      return \"\".concat(firstYearOfDecade(value).getFullYear(), \" - \").concat(lastYearOfDecade(value).getFullYear());\n    }\n  }, {\n    key: \"rowLength\",\n    value: function rowLength(_) {\n      return CELLS_LENGTH$1;\n    }\n  }, {\n    key: \"skip\",\n    value: function skip(value, min) {\n      return durationInDecades(min, value);\n    }\n  }, {\n    key: \"total\",\n    value: function total(min, max) {\n      return durationInDecades(min, max) + 1;\n    }\n  }, {\n    key: \"value\",\n    value: function value(current) {\n      return current ? current.getFullYear().toString() : '';\n    }\n  }, {\n    key: \"viewDate\",\n    value: function viewDate(date, max) {\n      var viewsCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var viewsInRange = this.total(date, max);\n\n      if (viewsInRange < viewsCount) {\n        var decadesToSubtract = viewsCount - viewsInRange;\n        return addDecades(date, -1 * decadesToSubtract);\n      }\n\n      return date;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n\n      return cellDate;\n    }\n  }]);\n\n  return DecadeViewService;\n}();\n\nDecadeViewService.ɵfac = function DecadeViewService_Factory(t) {\n  return new (t || DecadeViewService)();\n};\n\nDecadeViewService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DecadeViewService,\n  factory: DecadeViewService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DecadeViewService, [{\n    type: Injectable\n  }], null, null);\n})();\n/* tslint:disable:object-literal-sort-keys */\n\n\nvar EMPTY_DATA$2 = [[]];\nvar CELLS_LENGTH$2 = 7;\nvar ROWS_LENGTH$2 = 6;\nvar ACTIONS$2 = (_ACTIONS$2 = {}, _defineProperty(_ACTIONS$2, Action.Left, function (date) {\n  return addDays(date, -1);\n}), _defineProperty(_ACTIONS$2, Action.Up, function (date) {\n  return addWeeks(date, -1);\n}), _defineProperty(_ACTIONS$2, Action.Right, function (date) {\n  return addDays(date, 1);\n}), _defineProperty(_ACTIONS$2, Action.Down, function (date) {\n  return addWeeks(date, 1);\n}), _defineProperty(_ACTIONS$2, Action.PrevView, function (date) {\n  return addMonths(date, -1);\n}), _defineProperty(_ACTIONS$2, Action.NextView, function (date) {\n  return addMonths(date, 1);\n}), _defineProperty(_ACTIONS$2, Action.FirstInView, function (date) {\n  return firstDayOfMonth(date);\n}), _defineProperty(_ACTIONS$2, Action.LastInView, function (date) {\n  return lastDayOfMonth(date);\n}), _ACTIONS$2);\n/**\n * @hidden\n */\n\nvar MonthViewService = /*#__PURE__*/function () {\n  function MonthViewService(_intlService) {\n    _classCallCheck(this, MonthViewService);\n\n    this._intlService = _intlService;\n  }\n\n  _createClass(MonthViewService, [{\n    key: \"addToDate\",\n    value: function addToDate(min, skip) {\n      return addMonths(min, skip);\n    }\n  }, {\n    key: \"datesList\",\n    value: function datesList(start, count) {\n      return range(0, count).map(function (i) {\n        return addMonths(start, i);\n      });\n    }\n  }, {\n    key: \"data\",\n    value: function data(options) {\n      var _this3 = this;\n\n      var cellUID = options.cellUID,\n          focusedDate = options.focusedDate,\n          isActiveView = options.isActiveView,\n          max = options.max,\n          min = options.min,\n          selectedDate = options.selectedDate,\n          _options$selectionRan3 = options.selectionRange,\n          selectionRange = _options$selectionRan3 === void 0 ? EMPTY_SELECTIONRANGE : _options$selectionRan3,\n          viewDate = options.viewDate,\n          _options$isDateDisabl = options.isDateDisabled,\n          isDateDisabled = _options$isDateDisabl === void 0 ? function () {\n        return false;\n      } : _options$isDateDisabl;\n\n      if (!viewDate) {\n        return EMPTY_DATA$2;\n      }\n\n      var firstMonthDate = firstDayOfMonth(viewDate);\n      var firstMonthDay = getDate(firstMonthDate);\n      var lastMonthDate = lastDayOfMonth(viewDate);\n      var lastMonthDay = getDate(lastMonthDate);\n      var backward = -1;\n      var isSelectedDateInRange = isInRange(selectedDate, min, max);\n      var date = dayOfWeek(firstMonthDate, this._intlService.firstDay(), backward);\n      var cells = range(0, CELLS_LENGTH$2);\n      var today = getToday();\n      return range(0, ROWS_LENGTH$2).map(function (rowOffset) {\n        var baseDate = addDays(date, rowOffset * CELLS_LENGTH$2);\n        return cells.map(function (cellOffset) {\n          var cellDate = _this3.normalize(addDays(baseDate, cellOffset), min, max);\n\n          var cellDay = getDate(cellDate);\n          var otherMonth = cellDay < firstMonthDay || cellDay > lastMonthDay;\n          var outOfRange = cellDate < min || cellDate > max;\n\n          if (otherMonth || outOfRange) {\n            return null;\n          }\n\n          var isRangeStart = _this3.isEqual(cellDate, selectionRange.start);\n\n          var isRangeEnd = _this3.isEqual(cellDate, selectionRange.end);\n\n          var isInMiddle = !isRangeStart && !isRangeEnd;\n          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          return {\n            formattedValue: _this3.value(cellDate),\n            id: \"\".concat(cellUID).concat(cellDate.getTime()),\n            isFocused: _this3.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && isSelectedDateInRange && _this3.isEqual(cellDate, selectedDate),\n            isWeekend: _this3.isWeekend(cellDate),\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitStart: isRangeMid && _this3.isEqual(cellDate, firstMonthDate),\n            isRangeSplitEnd: isRangeMid && _this3.isEqual(cellDate, lastMonthDate),\n            isToday: _this3.isEqual(cellDate, today),\n            title: _this3.cellTitle(cellDate),\n            value: cellDate,\n            isDisabled: isDateDisabled(cellDate)\n          };\n        });\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n\n      return getDate(candidate).getTime() === getDate(expected).getTime();\n    }\n  }, {\n    key: \"isInArray\",\n    value: function isInArray(date, dates) {\n      if (dates.length === 0) {\n        return false;\n      }\n\n      var lowerBound = this.beginningOfPeriod(dates[0]);\n      var upperBound = this.beginningOfPeriod(addMonths(dates[dates.length - 1], 1));\n      return lowerBound <= date && date < upperBound;\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(candidate, min, max) {\n      var value = getDate(candidate);\n      var aboveMin = !min || getDate(min) <= value;\n      var belowMax = !max || value <= getDate(max);\n      return aboveMin && belowMax;\n    }\n  }, {\n    key: \"beginningOfPeriod\",\n    value: function beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n\n      return createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n  }, {\n    key: \"isRangeStart\",\n    value: function isRangeStart(value) {\n      return !value.getMonth();\n    }\n  }, {\n    key: \"move\",\n    value: function move(value, action) {\n      var modifier = ACTIONS$2[action];\n\n      if (!modifier) {\n        return value;\n      }\n\n      return modifier(value);\n    }\n  }, {\n    key: \"cellTitle\",\n    value: function cellTitle(value) {\n      return this._intlService.formatDate(value, 'D');\n    }\n  }, {\n    key: \"navigationTitle\",\n    value: function navigationTitle(value) {\n      if (!value) {\n        return '';\n      }\n\n      return this.isRangeStart(value) ? value.getFullYear().toString() : this.abbrMonthNames()[value.getMonth()];\n    }\n  }, {\n    key: \"title\",\n    value: function title(current) {\n      return \"\".concat(this.wideMonthNames()[current.getMonth()], \" \").concat(current.getFullYear());\n    }\n  }, {\n    key: \"rowLength\",\n    value: function rowLength(prependCell) {\n      return CELLS_LENGTH$2 + (prependCell ? 1 : 0);\n    }\n  }, {\n    key: \"skip\",\n    value: function skip(value, min) {\n      return durationInMonths(min, value);\n    }\n  }, {\n    key: \"total\",\n    value: function total(min, max) {\n      return durationInMonths(min, max) + 1;\n    }\n  }, {\n    key: \"value\",\n    value: function value(current) {\n      return current ? current.getDate().toString() : \"\";\n    }\n  }, {\n    key: \"viewDate\",\n    value: function viewDate(date, max) {\n      var viewsCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var viewsInRange = this.total(date, max);\n\n      if (viewsInRange < viewsCount) {\n        var monthsToSubtract = viewsCount - viewsInRange;\n        return addMonths(date, -1 * monthsToSubtract);\n      }\n\n      return date;\n    }\n  }, {\n    key: \"isWeekend\",\n    value: function isWeekend(date) {\n      var _this$_intlService$we = this._intlService.weekendRange(),\n          start = _this$_intlService$we.start,\n          end = _this$_intlService$we.end;\n\n      var day = date.getDay();\n\n      if (end < start) {\n        return day <= end || start <= day;\n      }\n\n      return start <= day && day <= end;\n    }\n  }, {\n    key: \"abbrMonthNames\",\n    value: function abbrMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'abbreviated',\n        type: 'months'\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n\n      return cellDate;\n    }\n  }, {\n    key: \"wideMonthNames\",\n    value: function wideMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'wide',\n        type: 'months'\n      });\n    }\n  }]);\n\n  return MonthViewService;\n}();\n\nMonthViewService.ɵfac = function MonthViewService_Factory(t) {\n  return new (t || MonthViewService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nMonthViewService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MonthViewService,\n  factory: MonthViewService.ɵfac\n});\n/** @nocollapse */\n\nMonthViewService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MonthViewService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n/* tslint:disable:object-literal-sort-keys */\n\n\nvar EMPTY_DATA$3 = [[]];\nvar CELLS_LENGTH$3 = 5;\nvar ROWS_LENGTH$3 = 3;\n\nvar upStep = function upStep(month) {\n  if (month > 4) {\n    return -5;\n  }\n\n  if (month < 2) {\n    return -2;\n  }\n\n  return -7;\n};\n\nvar downStep = function downStep(month) {\n  if (month < 7) {\n    return 5;\n  }\n\n  if (month < 10) {\n    return 7;\n  }\n\n  return 2;\n};\n\nvar ACTIONS$3 = (_ACTIONS$3 = {}, _defineProperty(_ACTIONS$3, Action.Left, function (date) {\n  return addMonths(date, -1);\n}), _defineProperty(_ACTIONS$3, Action.Up, function (date) {\n  return addMonths(date, upStep(date.getMonth()));\n}), _defineProperty(_ACTIONS$3, Action.Right, function (date) {\n  return addMonths(date, 1);\n}), _defineProperty(_ACTIONS$3, Action.Down, function (date) {\n  return addMonths(date, downStep(date.getMonth()));\n}), _defineProperty(_ACTIONS$3, Action.PrevView, function (date) {\n  return addYears(date, -1);\n}), _defineProperty(_ACTIONS$3, Action.NextView, function (date) {\n  return addYears(date, 1);\n}), _defineProperty(_ACTIONS$3, Action.FirstInView, function (date) {\n  return firstMonthOfYear(date);\n}), _defineProperty(_ACTIONS$3, Action.LastInView, function (date) {\n  return lastMonthOfYear(date);\n}), _ACTIONS$3);\n/**\n * @hidden\n */\n\nvar YearViewService = /*#__PURE__*/function () {\n  function YearViewService(_intlService) {\n    _classCallCheck(this, YearViewService);\n\n    this._intlService = _intlService;\n  }\n\n  _createClass(YearViewService, [{\n    key: \"addToDate\",\n    value: function addToDate(min, skip) {\n      return addYears(min, skip);\n    }\n  }, {\n    key: \"datesList\",\n    value: function datesList(start, count) {\n      return range(0, count).map(function (i) {\n        return addYears(start, i);\n      });\n    }\n  }, {\n    key: \"data\",\n    value: function data(options) {\n      var _this4 = this;\n\n      var cellUID = options.cellUID,\n          focusedDate = options.focusedDate,\n          isActiveView = options.isActiveView,\n          max = options.max,\n          min = options.min,\n          selectedDate = options.selectedDate,\n          _options$selectionRan4 = options.selectionRange,\n          selectionRange = _options$selectionRan4 === void 0 ? EMPTY_SELECTIONRANGE : _options$selectionRan4,\n          viewDate = options.viewDate;\n\n      if (!viewDate) {\n        return EMPTY_DATA$3;\n      }\n\n      var months = this.abbrMonthNames();\n      var isSelectedDateInRange = isInRange(selectedDate, min, max);\n      var firstDate = firstMonthOfYear(viewDate);\n      var lastDate = lastMonthOfYear(viewDate);\n      var currentYear = firstDate.getFullYear();\n      var cells = range(0, CELLS_LENGTH$3);\n      var today = getToday();\n      return range(0, ROWS_LENGTH$3).map(function (rowOffset) {\n        var baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH$3);\n        return cells.map(function (cellOffset) {\n          var cellDate = _this4.normalize(addMonths(baseDate, cellOffset), min, max);\n\n          var changedYear = currentYear < cellDate.getFullYear();\n\n          if (!_this4.isInRange(cellDate, min, max) || changedYear) {\n            return null;\n          }\n\n          var isRangeStart = _this4.isEqual(cellDate, selectionRange.start);\n\n          var isRangeEnd = _this4.isEqual(cellDate, selectionRange.end);\n\n          var isInMiddle = !isRangeStart && !isRangeEnd;\n          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n          return {\n            formattedValue: months[cellDate.getMonth()],\n            id: \"\".concat(cellUID).concat(cellDate.getTime()),\n            isFocused: _this4.isEqual(cellDate, focusedDate),\n            isSelected: isActiveView && isSelectedDateInRange && _this4.isEqual(cellDate, selectedDate),\n            isWeekend: false,\n            isRangeStart: isRangeStart,\n            isRangeMid: isRangeMid,\n            isRangeEnd: isRangeEnd,\n            isRangeSplitEnd: isRangeMid && _this4.isEqual(cellDate, lastDate),\n            isRangeSplitStart: isRangeMid && _this4.isEqual(cellDate, firstDate),\n            isToday: _this4.isEqual(cellDate, today),\n            title: _this4.cellTitle(cellDate),\n            value: cellDate\n          };\n        });\n      });\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(candidate, expected) {\n      if (!candidate || !expected) {\n        return false;\n      }\n\n      return candidate.getFullYear() === expected.getFullYear() && candidate.getMonth() === expected.getMonth();\n    }\n  }, {\n    key: \"isInArray\",\n    value: function isInArray(date, dates) {\n      if (!dates.length) {\n        return false;\n      }\n\n      var year = date.getFullYear();\n      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();\n    }\n  }, {\n    key: \"isInRange\",\n    value: function isInRange(candidate, min, max) {\n      var candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);\n      var aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;\n      var belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);\n      return aboveMin && belowMax;\n    }\n  }, {\n    key: \"beginningOfPeriod\",\n    value: function beginningOfPeriod(date) {\n      if (!date) {\n        return date;\n      }\n\n      return createDate(date.getFullYear(), 0, 1);\n    }\n  }, {\n    key: \"isRangeStart\",\n    value: function isRangeStart(value) {\n      return value.getFullYear() % 10 === 0;\n    }\n  }, {\n    key: \"move\",\n    value: function move(value, action) {\n      var modifier = ACTIONS$3[action];\n\n      if (!modifier) {\n        return value;\n      }\n\n      return modifier(value);\n    }\n  }, {\n    key: \"cellTitle\",\n    value: function cellTitle(value) {\n      return \"\".concat(value.getFullYear(), \" \").concat(this.value(value));\n    }\n  }, {\n    key: \"navigationTitle\",\n    value: function navigationTitle(value) {\n      return this.title(value);\n    }\n  }, {\n    key: \"title\",\n    value: function title(current) {\n      return current ? current.getFullYear().toString() : '';\n    }\n  }, {\n    key: \"rowLength\",\n    value: function rowLength(_) {\n      return CELLS_LENGTH$3;\n    }\n  }, {\n    key: \"skip\",\n    value: function skip(value, min) {\n      return durationInYears(min, value);\n    }\n  }, {\n    key: \"total\",\n    value: function total(min, max) {\n      return durationInYears(min, max) + 1;\n    }\n  }, {\n    key: \"value\",\n    value: function value(current) {\n      return current ? this.abbrMonthNames()[current.getMonth()] : '';\n    }\n  }, {\n    key: \"viewDate\",\n    value: function viewDate(date, max) {\n      var viewsCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      var viewsInRange = this.total(date, max);\n\n      if (viewsInRange < viewsCount) {\n        var yearsToSubtract = viewsCount - viewsInRange;\n        return addYears(date, -1 * yearsToSubtract);\n      }\n\n      return date;\n    }\n  }, {\n    key: \"abbrMonthNames\",\n    value: function abbrMonthNames() {\n      return this._intlService.dateFormatNames({\n        nameType: 'abbreviated',\n        type: 'months'\n      });\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(cellDate, min, max) {\n      if (cellDate < min && this.isEqual(cellDate, min)) {\n        return cloneDate(min);\n      }\n\n      if (cellDate > max && this.isEqual(cellDate, max)) {\n        return cloneDate(max);\n      }\n\n      return cellDate;\n    }\n  }]);\n\n  return YearViewService;\n}();\n\nYearViewService.ɵfac = function YearViewService_Factory(t) {\n  return new (t || YearViewService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nYearViewService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: YearViewService,\n  factory: YearViewService.ɵfac\n});\n/** @nocollapse */\n\nYearViewService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(YearViewService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n *\n * The Enum which defines all possible Calendar view types.\n */\n\n\nvar CalendarViewEnum;\n\n(function (CalendarViewEnum) {\n  CalendarViewEnum[CalendarViewEnum[\"month\"] = 0] = \"month\";\n  CalendarViewEnum[CalendarViewEnum[\"year\"] = 1] = \"year\";\n  CalendarViewEnum[CalendarViewEnum[\"decade\"] = 2] = \"decade\";\n  CalendarViewEnum[CalendarViewEnum[\"century\"] = 3] = \"century\";\n})(CalendarViewEnum || (CalendarViewEnum = {}));\n\nvar services = (_services = {}, _defineProperty(_services, CalendarViewEnum.month, MonthViewService), _defineProperty(_services, CalendarViewEnum.year, YearViewService), _defineProperty(_services, CalendarViewEnum.decade, DecadeViewService), _defineProperty(_services, CalendarViewEnum.century, CenturyViewService), _services);\n\nvar viewOffset = function viewOffset(view, offset) {\n  var candidate = CalendarViewEnum[CalendarViewEnum[view + offset]];\n  return candidate !== undefined ? candidate : view;\n};\n/**\n * @hidden\n */\n\n\nvar BusViewService = /*#__PURE__*/function () {\n  function BusViewService(injector) {\n    _classCallCheck(this, BusViewService);\n\n    this.injector = injector;\n    this.viewChanged = new EventEmitter();\n    this.bottom = CalendarViewEnum.month;\n    this.top = CalendarViewEnum.century;\n  }\n\n  _createClass(BusViewService, [{\n    key: \"configure\",\n    value: function configure(bottom, top) {\n      this.bottom = bottom;\n      this.top = top;\n    }\n  }, {\n    key: \"service\",\n    value: function service(view) {\n      var serviceType = services[view];\n      return serviceType ? this.injector.get(serviceType) : null;\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown(view) {\n      this.move(view, -1);\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp(view) {\n      this.move(view, 1);\n    }\n  }, {\n    key: \"moveToBottom\",\n    value: function moveToBottom(activeView) {\n      if (activeView === this.bottom) {\n        return;\n      }\n\n      this.viewChanged.emit({\n        view: this.bottom\n      });\n    }\n  }, {\n    key: \"canMoveDown\",\n    value: function canMoveDown(view) {\n      return this.bottom < view;\n    }\n  }, {\n    key: \"canMoveUp\",\n    value: function canMoveUp(view) {\n      return view < this.top;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(view) {\n      if (view < this.bottom) {\n        return this.bottom;\n      }\n\n      if (view > this.top) {\n        return this.top;\n      }\n\n      return view;\n    }\n  }, {\n    key: \"move\",\n    value: function move(view, offset) {\n      var candidate = this.clamp(viewOffset(view, offset));\n\n      if (candidate === view) {\n        return;\n      }\n\n      this.viewChanged.emit({\n        view: candidate\n      });\n    }\n  }]);\n\n  return BusViewService;\n}();\n\nBusViewService.ɵfac = function BusViewService_Factory(t) {\n  return new (t || BusViewService)(ɵngcc0.ɵɵinject(Injector));\n};\n\nBusViewService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BusViewService,\n  factory: BusViewService.ɵfac\n});\n/** @nocollapse */\n\nBusViewService.ctorParameters = function () {\n  return [{\n    type: Injector\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BusViewService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Injector\n    }];\n  }, null);\n})();\n\nvar div = domContainerFactory('div');\nvar ul = domContainerFactory('ul');\nvar li = domContainerFactory('li');\nvar td = domContainerFactory('td');\nvar th = domContainerFactory('th');\nvar tr = domContainerFactory('tr');\nvar tbody = domContainerFactory('tbody');\nvar thead = domContainerFactory('thead');\nvar table = domContainerFactory('table');\n\nvar monthHeader = function monthHeader() {\n  return div(\"\\n            <span class=\\\"k-button k-bare k-title\\\">March 2017</span>\\n            <span class=\\\"k-today\\\">TODAY</span>\\n        \", 'k-calendar-header');\n};\n\nvar monthWeekHeader = function monthWeekHeader() {\n  return table([thead([tr([th('MO')])])], 'k-calendar-weekdays');\n};\n\nvar repeat = function repeat(count, mapper) {\n  return new Array(count).fill('1').map(mapper);\n};\n\nvar content = function content(rows) {\n  var cells = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return table([tbody([tr([th('1')])].concat(repeat(rows, function () {\n    return tr(repeat(cells, function (c) {\n      return td(\"<span class=\\\"k-link\\\">\".concat(c, \"</span>\"));\n    }));\n  })))]);\n};\n\nvar scrollable = function scrollable(children) {\n  return div(children, 'k-content k-scrollable');\n};\n\nvar view = function view(contentElement, className, renderWeekHeader) {\n  return div([monthHeader(), renderWeekHeader ? monthWeekHeader() : null, scrollable([contentElement, contentElement])], className, {\n    left: '-10000px',\n    position: 'absolute'\n  });\n};\n\nvar ɵ6 = function ɵ6() {\n  var navElement;\n  return function () {\n    if (!isDocumentAvailable) {\n      return null;\n    }\n\n    if (!navElement) {\n      navElement = div([scrollable([ul([li('<span>FEB</span>')])])], 'k-calendar-navigation', {\n        left: '0px',\n        position: 'absolute'\n      });\n    }\n\n    return navElement;\n  };\n};\n\nvar navigationList = ɵ6();\n\nvar viewFactory = function viewFactory(_ref4, className, renderWeekHeader) {\n  var cells = _ref4.cells,\n      rows = _ref4.rows;\n  var viewElement;\n  return function () {\n    if (!isDocumentAvailable) {\n      return null;\n    }\n\n    if (!viewElement) {\n      viewElement = view(content(rows, cells), className, renderWeekHeader);\n    }\n\n    return viewElement;\n  };\n};\n\nvar getScrollable = function getScrollable(element) {\n  return element.querySelector('.k-scrollable');\n};\n\nvar horizontal = function horizontal(element) {\n  var scrollableElement = getScrollable(element);\n  scrollableElement.classList.add('k-scrollable-horizontal');\n  return element;\n};\n\nvar monthView = viewFactory({\n  cells: 7,\n  rows: 6\n}, 'k-calendar-view k-calendar-monthview', true);\nvar yearView = viewFactory({\n  cells: 5,\n  rows: 3\n}, 'k-calendar-view k-calendar-yearview', false);\nvar decadeView = viewFactory({\n  cells: 5,\n  rows: 2\n}, 'k-calendar-view k-calendar-decadeview', false);\n\nvar horzMonthView = function horzMonthView() {\n  return horizontal(monthView());\n};\n\nvar horzYearView = function horzYearView() {\n  return horizontal(yearView());\n};\n\nvar horzDecadeView = function horzDecadeView() {\n  return horizontal(decadeView());\n};\n\nvar height = function height(element) {\n  return parseFloat(window.getComputedStyle(element).height) || element.offsetHeight;\n};\n\nvar width = function width(element) {\n  var styles = window.getComputedStyle(element);\n  var computed = parseFloat(styles.width) + parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n  return computed || element.offsetWidth;\n};\n\nvar getBody = function getBody(element) {\n  return element.querySelector('tbody');\n};\n/**\n * @hidden\n */\n\n\nvar CalendarDOMService = /*#__PURE__*/function () {\n  function CalendarDOMService() {\n    _classCallCheck(this, CalendarDOMService);\n  }\n\n  _createClass(CalendarDOMService, [{\n    key: \"ensureHeights\",\n    value: function ensureHeights() {\n      if (this.calendarHeight !== undefined) {\n        return;\n      }\n\n      this.calculateHeights();\n    }\n  }, {\n    key: \"calculateHeights\",\n    value: function calculateHeights(container) {\n      var _this5 = this;\n\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.hostContainer = container;\n      this.batch(monthView(), function (contentElement) {\n        var viewElement = getBody(contentElement);\n        _this5.calendarHeight = height(contentElement);\n        _this5.monthViewHeight = height(viewElement);\n        _this5.headerHeight = height(viewElement.children[0]);\n        _this5.scrollableContentHeight = height(getScrollable(contentElement));\n      });\n      this.batch(horzMonthView(), function (contentElement) {\n        var viewElement = getBody(contentElement);\n        _this5.calendarWidth = width(contentElement);\n        _this5.monthViewWidth = width(viewElement);\n        _this5.scrollableContentWidth = width(getScrollable(contentElement));\n      });\n      this.batch(yearView(), function (contentElement) {\n        _this5.yearViewHeight = height(getBody(contentElement));\n        _this5.scrollableYearContentHeight = height(getScrollable(contentElement));\n      });\n      this.batch(horzYearView(), function (contentElement) {\n        _this5.yearViewWidth = width(getBody(contentElement));\n      });\n      this.batch(decadeView(), function (contentElement) {\n        _this5.decadeViewHeight = height(getBody(contentElement));\n        _this5.centuryViewHeight = _this5.decadeViewHeight;\n      });\n      this.batch(horzDecadeView(), function (contentElement) {\n        _this5.decadeViewWidth = width(getBody(contentElement));\n        _this5.centuryViewWidth = _this5.decadeViewWidth;\n      });\n      this.batch(navigationList(), function (contentElement) {\n        _this5.navigationItemHeight = height(contentElement.querySelector('li'));\n      });\n    }\n  }, {\n    key: \"viewHeight\",\n    value: function viewHeight(viewType) {\n      return this.viewDimension(viewType, 'height');\n    }\n  }, {\n    key: \"viewWidth\",\n    value: function viewWidth(viewType) {\n      return this.viewDimension(viewType, 'width');\n    }\n  }, {\n    key: \"viewDimension\",\n    value: function viewDimension(viewType, dimension) {\n      var viewProp = dimension === 'height' ? 'ViewHeight' : 'ViewWidth';\n\n      switch (viewType) {\n        case CalendarViewEnum.month:\n          return this[\"month\".concat(viewProp)];\n\n        case CalendarViewEnum.year:\n          return this[\"year\".concat(viewProp)];\n\n        case CalendarViewEnum.decade:\n          return this[\"decade\".concat(viewProp)];\n\n        case CalendarViewEnum.century:\n          return this[\"century\".concat(viewProp)];\n\n        default:\n          return 1;\n      }\n    }\n  }, {\n    key: \"batch\",\n    value: function batch(contentElement, action) {\n      var hostContainer = this.hostContainer || document.body;\n      var appendedContent = hostContainer.appendChild(contentElement);\n      action(appendedContent);\n      hostContainer.removeChild(appendedContent);\n    }\n  }]);\n\n  return CalendarDOMService;\n}();\n\nCalendarDOMService.ɵfac = function CalendarDOMService_Factory(t) {\n  return new (t || CalendarDOMService)();\n};\n\nCalendarDOMService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CalendarDOMService,\n  factory: CalendarDOMService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarDOMService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar update = function update(arr, idx, value) {\n  return [].concat(_toConsumableArray(arr.slice(0, idx + 1)), _toConsumableArray(arr.slice(idx + 1).map(function (x) {\n    return x + value;\n  })));\n};\n/**\n * @hidden\n */\n\n\nvar RowHeightService = /*#__PURE__*/function () {\n  function RowHeightService() {\n    var total = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var rowHeight = arguments.length > 1 ? arguments[1] : undefined;\n    var detailRowHeight = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, RowHeightService);\n\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    var agg = 0;\n\n    for (var idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  _createClass(RowHeightService, [{\n    key: \"height\",\n    value: function height(rowIndex) {\n      return this.heights[rowIndex];\n    }\n  }, {\n    key: \"expandDetail\",\n    value: function expandDetail(rowIndex) {\n      if (this.height(rowIndex) === this.rowHeight) {\n        this.updateRowHeight(rowIndex, this.detailRowHeight);\n      }\n    }\n  }, {\n    key: \"collapseDetail\",\n    value: function collapseDetail(rowIndex) {\n      if (this.height(rowIndex) > this.rowHeight) {\n        this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n      }\n    }\n  }, {\n    key: \"index\",\n    value: function index(position) {\n      if (position < 0) {\n        return undefined;\n      }\n\n      var result = this.offsets.reduce(function (prev, current, idx) {\n        if (prev !== undefined) {\n          return prev;\n        } else if (current === position) {\n          return idx;\n        } else if (current > position) {\n          return idx - 1;\n        }\n\n        return undefined;\n      }, undefined); // tslint:disable-line:align\n\n      return result === undefined ? this.total - 1 : result;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(rowIndex) {\n      return this.offsets[rowIndex];\n    }\n  }, {\n    key: \"totalHeight\",\n    value: function totalHeight() {\n      return this.heights.reduce(function (prev, curr) {\n        return prev + curr;\n      }, 0);\n    }\n  }, {\n    key: \"updateRowHeight\",\n    value: function updateRowHeight(rowIndex, value) {\n      this.heights[rowIndex] += value;\n      this.offsets = update(this.offsets, rowIndex, value);\n    }\n  }]);\n\n  return RowHeightService;\n}();\n\nvar normalize = function normalize(x) {\n  return Math.max(x, 0);\n};\n/**\n * @hidden\n */\n\n\nvar ScrollAction = function ScrollAction(offset) {\n  _classCallCheck(this, ScrollAction);\n\n  this.offset = offset;\n};\n/**\n * @hidden\n */\n\n\nvar PageAction = function PageAction(skip) {\n  _classCallCheck(this, PageAction);\n\n  this.skip = skip;\n};\n/**\n * @hidden\n */\n\n\nvar ScrollerService = /*#__PURE__*/function () {\n  function ScrollerService(scrollObservable) {\n    _classCallCheck(this, ScrollerService);\n\n    this.scrollObservable = scrollObservable;\n    this.firstLoaded = 0;\n    this.bottomOffset = 0;\n    this.topOffset = 0;\n  }\n\n  _createClass(ScrollerService, [{\n    key: \"create\",\n    value: function create(rowHeightService, skip, take, total) {\n      var _this6 = this;\n\n      var topOffset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var bottomOffset = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n      var direction = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'vertical';\n      this.rowHeightService = rowHeightService;\n      this.firstLoaded = skip;\n      this.lastLoaded = skip + take;\n      this.take = take;\n      this.total = total;\n      this.lastScroll = 0;\n      this.topOffset = topOffset;\n      this.bottomOffset = bottomOffset;\n      this.direction = direction;\n      var subject = new ReplaySubject(2);\n      var offsetBufferRows = this.rowsForHeight(topOffset);\n      var skipWithOffset = normalize(skip - offsetBufferRows);\n      subject.next(new ScrollAction(this.rowOffset(skipWithOffset)));\n\n      if (offsetBufferRows) {\n        subject.next(new PageAction(skipWithOffset));\n      }\n\n      this.subscription = Observable.create(function (observer) {\n        _this6.unsubscribe();\n\n        _this6.scrollSubscription = _this6.scrollObservable.subscribe(function (x) {\n          return _this6.onScroll(x, observer);\n        });\n      }).subscribe(function (x) {\n        return subject.next(x);\n      });\n      return subject;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unsubscribe();\n\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(_ref5, observer) {\n      var scrollLeft = _ref5.scrollLeft,\n          scrollTop = _ref5.scrollTop,\n          offsetHeight = _ref5.offsetHeight,\n          offsetWidth = _ref5.offsetWidth;\n      var scrollPosition = this.direction === 'vertical' ? scrollTop : scrollLeft;\n      var offsetSize = this.direction === 'vertical' ? offsetHeight : offsetWidth;\n\n      if (this.lastScroll === scrollPosition) {\n        return;\n      }\n\n      var up = this.lastScroll >= scrollPosition;\n      this.lastScroll = scrollPosition;\n      var firstItemIndex = this.rowHeightService.index(normalize(scrollPosition - this.topOffset));\n      var lastItemIndex = this.rowHeightService.index(normalize(scrollPosition + offsetSize - this.bottomOffset));\n\n      if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n        this.firstLoaded = firstItemIndex;\n        observer.next(new ScrollAction(this.rowOffset(firstItemIndex)));\n        this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n        observer.next(new PageAction(this.firstLoaded));\n      }\n\n      if (up && firstItemIndex <= this.firstLoaded) {\n        var nonVisibleBuffer = Math.floor(this.take * 0.3);\n        this.firstLoaded = normalize(firstItemIndex - nonVisibleBuffer);\n        observer.next(new ScrollAction(this.rowOffset(this.firstLoaded)));\n        this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n        observer.next(new PageAction(this.firstLoaded));\n      }\n    }\n  }, {\n    key: \"rowOffset\",\n    value: function rowOffset(index) {\n      return this.rowHeightService.offset(index) + this.topOffset;\n    }\n  }, {\n    key: \"rowsForHeight\",\n    value: function rowsForHeight(height) {\n      return Math.ceil(height / this.rowHeightService.height(0));\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n        this.scrollSubscription = null;\n      }\n    }\n  }]);\n\n  return ScrollerService;\n}();\n/* tslint:disable:component-selector-name  component-selector-type */\n\n/**\n * @hidden\n */\n\n\nvar SCROLLER_FACTORY_TOKEN = new InjectionToken('dateinputs-scroll-service-factory');\n/**\n * @hidden\n */\n\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n  return new ScrollerService(observable);\n}\n/**\n * @hidden\n */\n\n\nvar ScrollDirection;\n\n(function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"Backward\"] = 0] = \"Backward\";\n  ScrollDirection[ScrollDirection[\"Forward\"] = 1] = \"Forward\";\n})(ScrollDirection || (ScrollDirection = {}));\n\nvar FRAME_DURATION = 17;\nvar scrollModifiers = (_scrollModifiers = {}, _defineProperty(_scrollModifiers, ScrollDirection.Forward, function (step) {\n  return function (value) {\n    return value + step;\n  };\n}), _defineProperty(_scrollModifiers, ScrollDirection.Backward, function (step) {\n  return function (value) {\n    return value - step;\n  };\n}), _scrollModifiers);\nvar scrollNormalizers = (_scrollNormalizers = {}, _defineProperty(_scrollNormalizers, ScrollDirection.Forward, function (end) {\n  return function (value) {\n    return Math.min(value, end);\n  };\n}), _defineProperty(_scrollNormalizers, ScrollDirection.Backward, function (end) {\n  return function (value) {\n    return Math.max(value, end);\n  };\n}), _scrollNormalizers);\nvar scrollValidators = (_scrollValidators = {}, _defineProperty(_scrollValidators, ScrollDirection.Forward, function (end) {\n  return function (start) {\n    return start < end;\n  };\n}), _defineProperty(_scrollValidators, ScrollDirection.Backward, function (end) {\n  return function (start) {\n    return start > end;\n  };\n}), _scrollValidators);\n\nvar differenceToScroll = function differenceToScroll(scrollTop, staticOffset, maxScrollDifference) {\n  return Math.min(Math.abs(staticOffset - scrollTop), maxScrollDifference);\n};\n/**\n * @hidden\n */\n\n\nvar VirtualizationComponent = /*#__PURE__*/function () {\n  function VirtualizationComponent(scrollerFactory, container, renderer, zone) {\n    _classCallCheck(this, VirtualizationComponent);\n\n    this.container = container;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.direction = 'vertical';\n    this.itemHeight = 1;\n    this.itemWidth = 1;\n    this.topOffset = 0;\n    this.bottomOffset = 0;\n    this.maxScrollDifference = 100;\n    this.scrollOffsetSize = 0;\n    this.scrollDuration = 150;\n    this.activeIndexChange = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.scrollChange = new EventEmitter();\n    this.resolvedPromise = Promise.resolve(null);\n    this.dispatcher = new Subject();\n    this.scroller = scrollerFactory(this.dispatcher);\n  }\n\n  _createClass(VirtualizationComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.direction || changes.take || changes.total) {\n        this.initServices();\n        this.totalSize = this.rowHeightService.totalHeight() + this.bottomOffset;\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (!this.rowHeightService) {\n        this.rowHeightService = this.createRowHeightService();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this7 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this7.containerScrollSubscription = _this7.scroll$().pipe(map(function (event) {\n          return event.target;\n        })).subscribe(function (t) {\n          _this7.dispatcher.next(t);\n\n          _this7.emitActiveIndex();\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.containerScrollSubscription) {\n        this.containerScrollSubscription.unsubscribe();\n      }\n\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n\n      if (this.animationSubscription) {\n        this.animationSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"getContainerProperty\",\n    value: function getContainerProperty(propertyName) {\n      return this.container.nativeElement[propertyName];\n    }\n  }, {\n    key: \"activeIndex\",\n    value: function activeIndex() {\n      return this.itemIndex(Math.ceil(this.containerScrollPosition)); //handle subpixeling\n    }\n  }, {\n    key: \"itemIndex\",\n    value: function itemIndex(offset) {\n      return this.rowHeightService.index(offset);\n    }\n  }, {\n    key: \"itemOffset\",\n    value: function itemOffset(index) {\n      return this.rowHeightService.offset(index);\n    }\n  }, {\n    key: \"isIndexVisible\",\n    value: function isIndexVisible(index) {\n      if (!this.rowHeightService) {\n        return false;\n      }\n\n      var containerTop = this.containerScrollPosition;\n      var containerBottom = containerTop + this.containerOffsetSize;\n      var top = this.rowHeightService.offset(index);\n      var bottom = top + this.rowHeightService.height(index);\n      return top >= containerTop && bottom <= containerBottom;\n    }\n  }, {\n    key: \"isListScrolled\",\n    value: function isListScrolled(index) {\n      return this.containerScrollPosition !== this.rowHeightService.offset(index);\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(value) {\n      var scrollProperty = this.direction === \"vertical\" ? 'scrollTop' : 'scrollLeft';\n      this.renderer.setProperty(this.container.nativeElement, scrollProperty, value);\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(index) {\n      var _this8 = this;\n\n      //XXX: scrolling with tick is required to prevent list jump in Chrome.\n      //Original issue: focus first day in the month and press LEFT arrow.\n      //Notice how the view jumps on every day change.\n      //\n      this.zone.runOutsideAngular(function () {\n        _this8.resolvedPromise.then(function () {\n          _this8.scrollTo(_this8.rowHeightService.offset(index));\n        });\n      });\n    }\n  }, {\n    key: \"scrollToBottom\",\n    value: function scrollToBottom() {\n      this.scrollTo(this.totalSize);\n    }\n  }, {\n    key: \"animateToIndex\",\n    value: function animateToIndex(index) {\n      var _this9 = this;\n\n      if (this.animationSubscription) {\n        this.animationSubscription.unsubscribe();\n      }\n\n      var indexOffset = this.rowHeightService.offset(index);\n      var direction = this.getContainerScrollDirection(indexOffset);\n\n      var _this$scrollRange = this.scrollRange(indexOffset, direction),\n          start = _this$scrollRange.start,\n          end = _this$scrollRange.end;\n\n      if (start === end) {\n        return;\n      }\n\n      var step = this.scrollStep(start, end);\n      var modifyScroll = scrollModifiers[direction](step);\n      var normalizeScroll = scrollNormalizers[direction](end);\n      var isScrollValid = scrollValidators[direction](modifyScroll(end));\n      this.zone.runOutsideAngular(function () {\n        _this9.animationSubscription = combineLatest(of(start), interval(0, animationFrameScheduler)).pipe(map(function (stream) {\n          return stream[0];\n        }), scan(modifyScroll), takeWhile(isScrollValid), map(normalizeScroll)).subscribe(function (x) {\n          return _this9.scrollTo(x);\n        });\n      });\n    }\n  }, {\n    key: \"scrollRange\",\n    value: function scrollRange(indexOffset, direction) {\n      var containerScroll = this.containerScrollPosition;\n\n      if (parseInt(indexOffset, 10) === parseInt(containerScroll, 10)) {\n        return {\n          start: indexOffset,\n          end: indexOffset\n        };\n      }\n\n      var maxScroll = this.containerMaxScroll();\n      var sign = direction === ScrollDirection.Backward ? 1 : -1;\n      var difference = differenceToScroll(containerScroll, indexOffset, this.maxScrollDifference);\n      var end = Math.min(indexOffset, maxScroll);\n      var start = Math.min(Math.max(end + sign * difference, 0), maxScroll);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }, {\n    key: \"scrollStep\",\n    value: function scrollStep(start, end) {\n      return Math.abs(end - start) / (this.scrollDuration / FRAME_DURATION);\n    }\n  }, {\n    key: \"scroll$\",\n    value: function scroll$() {\n      return isDocumentAvailable() ? fromEvent(this.container.nativeElement, 'scroll') : EMPTY;\n    }\n  }, {\n    key: \"initServices\",\n    value: function initServices() {\n      var _this10 = this;\n\n      this.rowHeightService = this.createRowHeightService();\n\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n\n      this.scrollSubscription = this.scroller.create(this.rowHeightService, this.skip, this.take, this.total, this.topOffset, this.scrollOffsetSize, this.direction).subscribe(function (x) {\n        if (x instanceof PageAction) {\n          _this10.pageChange.emit(x);\n        } else {\n          _this10.scrollChange.emit(x);\n        }\n      });\n    }\n  }, {\n    key: \"createRowHeightService\",\n    value: function createRowHeightService() {\n      var dimension = this.direction === 'vertical' ? this.itemHeight : this.itemWidth;\n      return new RowHeightService(this.total, dimension, 0);\n    }\n  }, {\n    key: \"emitActiveIndex\",\n    value: function emitActiveIndex() {\n      var index = this.rowHeightService.index(this.containerScrollPosition - this.topOffset);\n\n      if (this.lastActiveIndex !== index) {\n        this.lastActiveIndex = index;\n        this.activeIndexChange.emit(index);\n      }\n    }\n  }, {\n    key: \"containerMaxScroll\",\n    value: function containerMaxScroll() {\n      return this.containerScrollSize - this.containerOffsetSize;\n    }\n  }, {\n    key: \"getContainerScrollDirection\",\n    value: function getContainerScrollDirection(indexOffset) {\n      return indexOffset < this.containerScrollPosition ? ScrollDirection.Backward : ScrollDirection.Forward;\n    }\n  }, {\n    key: \"totalVertexLength\",\n    get: function get() {\n      var value = \"\".concat(this.totalSize, \"px\");\n      return this.direction === 'vertical' ? {\n        height: value\n      } : {\n        width: value\n      };\n    }\n  }, {\n    key: \"containerOffsetSize\",\n    get: function get() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'offsetHeight' : 'offsetWidth');\n    }\n  }, {\n    key: \"containerScrollSize\",\n    get: function get() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'scrollHeight' : 'scrollWidth');\n    }\n  }, {\n    key: \"containerScrollPosition\",\n    get: function get() {\n      return this.getContainerProperty(this.direction === 'vertical' ? 'scrollTop' : 'scrollLeft');\n    }\n  }, {\n    key: \"wrapperClasses\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"horizontalClass\",\n    get: function get() {\n      return this.direction === 'horizontal';\n    }\n  }]);\n\n  return VirtualizationComponent;\n}();\n\nVirtualizationComponent.ɵfac = function VirtualizationComponent_Factory(t) {\n  return new (t || VirtualizationComponent)(ɵngcc0.ɵɵdirectiveInject(SCROLLER_FACTORY_TOKEN), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nVirtualizationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: VirtualizationComponent,\n  selectors: [[\"kendo-virtualization\"]],\n  hostVars: 6,\n  hostBindings: function VirtualizationComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-content\", ctx.wrapperClasses)(\"k-scrollable\", ctx.wrapperClasses)(\"k-scrollable-horizontal\", ctx.horizontalClass);\n    }\n  },\n  inputs: {\n    direction: \"direction\",\n    itemHeight: \"itemHeight\",\n    itemWidth: \"itemWidth\",\n    topOffset: \"topOffset\",\n    bottomOffset: \"bottomOffset\",\n    maxScrollDifference: \"maxScrollDifference\",\n    scrollOffsetSize: \"scrollOffsetSize\",\n    scrollDuration: \"scrollDuration\",\n    skip: \"skip\",\n    take: \"take\",\n    total: \"total\"\n  },\n  outputs: {\n    activeIndexChange: \"activeIndexChange\",\n    pageChange: \"pageChange\",\n    scrollChange: \"scrollChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: SCROLLER_FACTORY_TOKEN,\n    useValue: DEFAULT_SCROLLER_FACTORY\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 3,\n  consts: [[1, \"k-scrollable-placeholder\", 3, \"ngStyle\"]],\n  template: function VirtualizationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"k-scrollable-horizontal-placeholder\", ctx.direction === \"horizontal\");\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.totalVertexLength);\n    }\n  },\n  directives: [ɵngcc1.NgStyle],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nVirtualizationComponent.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [SCROLLER_FACTORY_TOKEN]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nVirtualizationComponent.propDecorators = {\n  direction: [{\n    type: Input\n  }],\n  itemHeight: [{\n    type: Input\n  }],\n  itemWidth: [{\n    type: Input\n  }],\n  topOffset: [{\n    type: Input\n  }],\n  bottomOffset: [{\n    type: Input\n  }],\n  maxScrollDifference: [{\n    type: Input\n  }],\n  scrollOffsetSize: [{\n    type: Input\n  }],\n  scrollDuration: [{\n    type: Input\n  }],\n  skip: [{\n    type: Input\n  }],\n  take: [{\n    type: Input\n  }],\n  total: [{\n    type: Input\n  }],\n  activeIndexChange: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  scrollChange: [{\n    type: Output\n  }],\n  wrapperClasses: [{\n    type: HostBinding,\n    args: ['class.k-content']\n  }, {\n    type: HostBinding,\n    args: ['class.k-scrollable']\n  }],\n  horizontalClass: [{\n    type: HostBinding,\n    args: ['class.k-scrollable-horizontal']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(VirtualizationComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: SCROLLER_FACTORY_TOKEN,\n        useValue: DEFAULT_SCROLLER_FACTORY\n      }],\n      selector: 'kendo-virtualization',\n      template: \"\\n    <ng-content></ng-content>\\n    <div\\n        class=\\\"k-scrollable-placeholder\\\"\\n        [class.k-scrollable-horizontal-placeholder]=\\\"direction === 'horizontal'\\\"\\n        [ngStyle]=\\\"totalVertexLength\\\"\\n    ></div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SCROLLER_FACTORY_TOKEN]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    direction: [{\n      type: Input\n    }],\n    itemHeight: [{\n      type: Input\n    }],\n    itemWidth: [{\n      type: Input\n    }],\n    topOffset: [{\n      type: Input\n    }],\n    bottomOffset: [{\n      type: Input\n    }],\n    maxScrollDifference: [{\n      type: Input\n    }],\n    scrollOffsetSize: [{\n      type: Input\n    }],\n    scrollDuration: [{\n      type: Input\n    }],\n    activeIndexChange: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    scrollChange: [{\n      type: Output\n    }],\n    wrapperClasses: [{\n      type: HostBinding,\n      args: ['class.k-content']\n    }, {\n      type: HostBinding,\n      args: ['class.k-scrollable']\n    }],\n    horizontalClass: [{\n      type: HostBinding,\n      args: ['class.k-scrollable-horizontal']\n    }],\n    skip: [{\n      type: Input\n    }],\n    take: [{\n      type: Input\n    }],\n    total: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar closestInScope = function closestInScope(node, predicate, scope) {\n  while (node && node !== scope && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  if (node !== scope) {\n    return node;\n  }\n};\n/**\n * @hidden\n */\n\n\nvar closest = function closest(node, predicate) {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/* tslint:disable:component-selector-name  component-selector-type */\n\n\nvar ITEMS_COUNT = 30;\n/**\n * @hidden\n */\n\nvar NavigationComponent = /*#__PURE__*/function () {\n  function NavigationComponent(bus, dom, intl, cdr, renderer) {\n    _classCallCheck(this, NavigationComponent);\n\n    this.bus = bus;\n    this.dom = dom;\n    this.intl = intl;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.min = new Date(MIN_DATE);\n    this.max = new Date(MAX_DATE);\n    this.focusedDate = new Date();\n    this.valueChange = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.dates = [];\n    this.take = ITEMS_COUNT;\n    this.indexToScroll = -1;\n  }\n\n  _createClass(NavigationComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.dom.ensureHeights();\n      var calendarHeight = this.dom.calendarHeight;\n      this.itemHeight = this.dom.navigationItemHeight;\n      this.maxViewHeight = this.dom.monthViewHeight;\n      this.topOffset = (calendarHeight - this.itemHeight) / 2;\n      this.bottomOffset = calendarHeight - this.itemHeight;\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n\n      if (!this.service) {\n        return;\n      }\n\n      this.activeViewValue = CalendarViewEnum[this.activeView];\n      var viewDate = dateInRange(this.focusedDate, this.min, this.max);\n      var total = this.service.total(this.min, this.max);\n      var totalChanged = this.total && this.total !== total;\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = total;\n\n      if (totalChanged || !this.service.isInArray(viewDate, this.dates)) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n      }\n\n      if (!!changes.focusedDate || totalChanged) {\n        this.indexToScroll = this.service.skip(this.focusedDate, this.min);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.intlSubscription) {\n        this.intlSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(_ref6) {\n      var skip = _ref6.skip;\n      this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n      this.pageChange.emit();\n    }\n  }, {\n    key: \"scrollChange\",\n    value: function scrollChange(_ref7) {\n      var offset = _ref7.offset;\n      var el = this.list.nativeElement;\n      var translate = \"translateY(\".concat(offset, \"px)\");\n      this.renderer.setStyle(el, 'transform', translate);\n      this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(args) {\n      var item = closestInScope(args.target, function (node) {\n        return node.hasAttribute('data-date-index');\n      }, this.list.nativeElement);\n\n      if (item) {\n        var index = parseInt(item.getAttribute('data-date-index'), 10);\n        var candidate = this.dates[index];\n        this.valueChange.emit(cloneDate(candidate));\n      }\n    }\n  }, {\n    key: \"getTake\",\n    value: function getTake(skip) {\n      return Math.min(this.total - skip, this.take);\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      if (this.activeView === CalendarViewEnum.month) {\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"getComponentClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return NavigationComponent;\n}();\n\nNavigationComponent.ɵfac = function NavigationComponent_Factory(t) {\n  return new (t || NavigationComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(CalendarDOMService), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nNavigationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NavigationComponent,\n  selectors: [[\"kendo-calendar-navigation\"]],\n  viewQuery: function NavigationComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(VirtualizationComponent, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NavigationComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-calendar-navigation\", ctx.getComponentClass);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    focusedDate: \"focusedDate\",\n    activeView: \"activeView\",\n    templateRef: \"templateRef\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 12,\n  consts: [[1, \"k-calendar-navigation-highlight\"], [3, \"skip\", \"take\", \"total\", \"itemHeight\", \"topOffset\", \"bottomOffset\", \"maxScrollDifference\", \"pageChange\", \"scrollChange\"], [1, \"k-reset\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"list\", \"\"], [4, \"kFor\", \"kForOf\"], [3, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function NavigationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"span\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-virtualization\", 1);\n      ɵngcc0.ɵɵlistener(\"pageChange\", function NavigationComponent_Template_kendo_virtualization_pageChange_1_listener($event) {\n        return ctx.onPageChange($event);\n      })(\"scrollChange\", function NavigationComponent_Template_kendo_virtualization_scrollChange_1_listener($event) {\n        return ctx.scrollChange($event);\n      });\n      ɵngcc0.ɵɵelementStart(2, \"ul\", 2, 3);\n      ɵngcc0.ɵɵtemplate(4, NavigationComponent_li_4_Template, 4, 11, \"li\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"skip\", ctx.skip)(\"take\", ctx.take)(\"total\", ctx.total)(\"itemHeight\", ctx.itemHeight)(\"topOffset\", ctx.topOffset)(\"bottomOffset\", ctx.bottomOffset)(\"maxScrollDifference\", ctx.maxViewHeight);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(10, _c3, ctx.handleDateChange))(\"scope\", ctx);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"kForOf\", ctx.dates);\n    }\n  },\n  directives: function directives() {\n    return [VirtualizationComponent, ɵngcc2.EventsOutsideAngularDirective, KForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nNavigationComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: CalendarDOMService\n  }, {\n    type: IntlService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nNavigationComponent.propDecorators = {\n  activeView: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  virtualization: [{\n    type: ViewChild,\n    args: [VirtualizationComponent]\n  }],\n  list: [{\n    type: ViewChild,\n    args: ['list', {\n      static: true\n    }]\n  }],\n  getComponentClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-navigation\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NavigationComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-calendar-navigation',\n      template: \"\\n    <span class=\\\"k-calendar-navigation-highlight\\\"></span>\\n    <kendo-virtualization\\n        [skip]=\\\"skip\\\"\\n        [take]=\\\"take\\\"\\n        [total]=\\\"total\\\"\\n        [itemHeight]=\\\"itemHeight\\\"\\n        [topOffset]=\\\"topOffset\\\"\\n        [bottomOffset]=\\\"bottomOffset\\\"\\n        [maxScrollDifference]=\\\"maxViewHeight\\\"\\n        (pageChange)=\\\"onPageChange($event)\\\"\\n        (scrollChange)=\\\"scrollChange($event)\\\"\\n    >\\n        <ul #list class=\\\"k-reset\\\" [kendoEventsOutsideAngular]=\\\"{ click: handleDateChange }\\\" [scope]=\\\"this\\\">\\n            <li *kFor=\\\"let date of dates; let index=index\\\" [attr.data-date-index]=\\\"index\\\">\\n                <span [class.k-calendar-navigation-marker]=\\\"service.isRangeStart(date)\\\">\\n                    <ng-template [ngIf]=\\\"!templateRef\\\">{{service.navigationTitle(date)}}</ng-template>\\n                    <ng-template\\n                        [ngIf]=\\\"templateRef\\\"\\n                        [ngTemplateOutlet]=\\\"templateRef\\\"\\n                        [ngTemplateOutletContext]=\\\"{ $implicit: service.navigationTitle(date), activeView: activeViewValue, date: date }\\\"\\n                    ></ng-template>\\n                </span>\\n            </li>\\n        </ul>\\n    </kendo-virtualization>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: CalendarDOMService\n    }, {\n      type: IntlService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    getComponentClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-navigation\"]\n    }],\n    activeView: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: ViewChild,\n      args: [VirtualizationComponent]\n    }],\n    list: [{\n      type: ViewChild,\n      args: ['list', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar VIEWS_COUNT = 5;\n\nvar isEqualMonthYear = function isEqualMonthYear(date1, date2) {\n  return date1 && date2 && date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth();\n};\n/**\n * @hidden\n */\n\n\nvar ViewListComponent = /*#__PURE__*/function () {\n  function ViewListComponent(bus, cdr, intl, dom, renderer) {\n    _classCallCheck(this, ViewListComponent);\n\n    this.bus = bus;\n    this.cdr = cdr;\n    this.intl = intl;\n    this.dom = dom;\n    this.renderer = renderer;\n    this.isActive = true;\n    this.min = new Date(MIN_DATE);\n    this.max = new Date(MAX_DATE);\n    this.activeDateChange = new EventEmitter();\n    this.valueChange = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.dates = [];\n    this.cols = [];\n    this.weekNames = [];\n    this.take = VIEWS_COUNT;\n    this.animateToIndex = true;\n    this.indexToScroll = -1;\n    this.minViewsToRender = 1;\n  }\n\n  _createClass(ViewListComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.weekNames = this.getWeekNames();\n      this.bottomOffset = this.getBottomOffset();\n      this.viewOffset = -1 * this.dom.headerHeight;\n      this.viewHeight = this.dom.viewHeight(this.activeView);\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n\n      if (!this.service) {\n        return;\n      }\n\n      this.cols = new Array(this.service.rowLength(this.weekNumber)).fill('');\n      this.colWidth = Math.round(100 / this.cols.length);\n      this.weekNames = hasChange(changes, 'weekNumber') && this.weekNumber ? this.getWeekNames() : this.weekNames;\n      var activeViewChanged = hasChange(changes, 'activeView');\n      var focusedDate = this.focusedDate;\n      var viewDate = dateInRange(this.service.viewDate(focusedDate, this.max, this.minViewsToRender), this.min, this.max);\n      var total = this.service.total(this.min, this.max);\n      var totalChanged = this.total && this.total !== total;\n      var generateDates = totalChanged || !this.service.isInArray(focusedDate, this.dates);\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = total;\n      this.animateToIndex = !activeViewChanged;\n      this.bottomOffset = this.getBottomOffset();\n      this.viewHeight = this.dom.viewHeight(this.activeView);\n\n      if (generateDates) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n      }\n\n      if (!isEqualMonthYear(this.activeDate, focusedDate)) {\n        this.activeDate = cloneDate(focusedDate);\n      }\n\n      var updateIndex = hasChange(changes, 'focusedDate') || activeViewChanged;\n\n      if (generateDates || updateIndex || this.virtualization.isIndexVisible(this.skip)) {\n        this.indexToScroll = this.service.skip(focusedDate, this.min);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.intlSubscription) {\n        this.intlSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n\n      this.virtualization.scrollToIndex(this.indexToScroll);\n      this.indexToScroll = -1;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.indexToScroll === -1) {\n        return;\n      }\n\n      this.virtualization[this.animateToIndex ? 'animateToIndex' : 'scrollToIndex'](this.indexToScroll);\n      this.animateToIndex = true;\n      this.indexToScroll = -1;\n    }\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange(_ref8) {\n      var skip = _ref8.skip;\n      this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n      this.pageChange.emit();\n    }\n  }, {\n    key: \"scrollChange\",\n    value: function scrollChange(_ref9) {\n      var offset = _ref9.offset;\n      var el = this.list.nativeElement;\n      var translate = \"translateY(\".concat(offset, \"px)\");\n      this.renderer.setStyle(el, 'transform', translate);\n      this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n  }, {\n    key: \"setActiveDate\",\n    value: function setActiveDate(index) {\n      var candidate = this.service.addToDate(this.min, index);\n\n      if (isEqual(this.activeDate, candidate)) {\n        return;\n      }\n\n      this.activeDate = candidate;\n      this.activeDateChange.emit(candidate);\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(candidate) {\n      this.valueChange.emit(candidate);\n    }\n  }, {\n    key: \"isMonthView\",\n    value: function isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n  }, {\n    key: \"isScrolled\",\n    value: function isScrolled() {\n      return this.virtualization.isListScrolled(this.service.skip(this.focusedDate, this.min));\n    }\n  }, {\n    key: \"getBottomOffset\",\n    value: function getBottomOffset() {\n      return this.getScrollableHeight() - this.dom.viewHeight(this.activeView);\n    }\n  }, {\n    key: \"getScrollableHeight\",\n    value: function getScrollableHeight() {\n      return this.activeView === CalendarViewEnum.month ? this.dom.scrollableContentHeight : this.dom.scrollableYearContentHeight;\n    }\n  }, {\n    key: \"getTake\",\n    value: function getTake(skip) {\n      return Math.min(this.total - skip, this.take);\n    }\n  }, {\n    key: \"getWeekNames\",\n    value: function getWeekNames() {\n      var weekNames = shiftWeekNames(this.intl.dateFormatNames({\n        nameType: 'short',\n        type: 'days'\n      }), this.intl.firstDay());\n      return this.weekNumber ? [''].concat(weekNames) : weekNames;\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      this.weekNames = this.getWeekNames();\n\n      if (this.isMonthView()) {\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"weekNumber\",\n    get: function get() {\n      return this.showWeekNumbers && this.isMonthView();\n    },\n    set: function set(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n  }, {\n    key: \"getComponentClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"getComponentMonthClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n  }, {\n    key: \"getComponentYearClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.year;\n    }\n  }, {\n    key: \"getComponentDecadeClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.decade;\n    }\n  }, {\n    key: \"getComponentCenturyClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.century;\n    }\n  }]);\n\n  return ViewListComponent;\n}();\n\nViewListComponent.ɵfac = function ViewListComponent_Factory(t) {\n  return new (t || ViewListComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(CalendarDOMService), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nViewListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ViewListComponent,\n  selectors: [[\"kendo-calendar-viewlist\"]],\n  viewQuery: function ViewListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(VirtualizationComponent, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  hostVars: 10,\n  hostBindings: function ViewListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-calendar-view\", ctx.getComponentClass)(\"k-calendar-monthview\", ctx.getComponentMonthClass)(\"k-calendar-yearview\", ctx.getComponentYearClass)(\"k-calendar-decadeview\", ctx.getComponentDecadeClass)(\"k-calendar-centuryview\", ctx.getComponentCenturyClass);\n    }\n  },\n  inputs: {\n    isActive: \"isActive\",\n    min: \"min\",\n    max: \"max\",\n    weekNumber: \"weekNumber\",\n    cellTemplateRef: \"cellTemplateRef\",\n    weekNumberTemplateRef: \"weekNumberTemplateRef\",\n    headerTitleTemplateRef: \"headerTitleTemplateRef\",\n    activeView: \"activeView\",\n    cellUID: \"cellUID\",\n    focusedDate: \"focusedDate\",\n    value: \"value\"\n  },\n  outputs: {\n    activeDateChange: \"activeDateChange\",\n    valueChange: \"valueChange\",\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 17,\n  consts: [[3, \"currentDate\", \"min\", \"max\", \"activeView\", \"templateRef\", \"today\"], [\"class\", \"k-calendar-weekdays\", \"style\", \"table-layout: auto;\", 4, \"ngIf\"], [3, \"tabindex\", \"skip\", \"take\", \"total\", \"itemHeight\", \"topOffset\", \"bottomOffset\", \"scrollOffsetSize\", \"maxScrollDifference\", \"pageChange\", \"scrollChange\", \"activeIndexChange\"], [\"list\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", 3, \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDate\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"change\", 4, \"kFor\", \"kForOf\"], [1, \"k-calendar-weekdays\", 2, \"table-layout\", \"auto\"], [3, \"width\", 4, \"ngFor\", \"ngForOf\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", 3, \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDate\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"change\"]],\n  template: function ViewListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-calendar-header\", 0);\n      ɵngcc0.ɵɵlistener(\"today\", function ViewListComponent_Template_kendo_calendar_header_today_0_listener($event) {\n        return ctx.handleDateChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(1, ViewListComponent_table_1_Template, 4, 1, \"table\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"kendo-virtualization\", 2);\n      ɵngcc0.ɵɵlistener(\"pageChange\", function ViewListComponent_Template_kendo_virtualization_pageChange_2_listener($event) {\n        return ctx.onPageChange($event);\n      })(\"scrollChange\", function ViewListComponent_Template_kendo_virtualization_scrollChange_2_listener($event) {\n        return ctx.scrollChange($event);\n      })(\"activeIndexChange\", function ViewListComponent_Template_kendo_virtualization_activeIndexChange_2_listener($event) {\n        return ctx.setActiveDate($event);\n      });\n      ɵngcc0.ɵɵelementStart(3, \"table\", null, 3);\n      ɵngcc0.ɵɵelementStart(5, \"colgroup\");\n      ɵngcc0.ɵɵtemplate(6, ViewListComponent_col_6_Template, 1, 0, \"col\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(7, ViewListComponent_tbody_7_Template, 1, 11, \"tbody\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"currentDate\", ctx.activeDate)(\"min\", ctx.min)(\"max\", ctx.max)(\"activeView\", ctx.activeView)(\"templateRef\", ctx.headerTitleTemplateRef);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMonthView());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"tabindex\", -1)(\"skip\", ctx.skip)(\"take\", ctx.take)(\"total\", ctx.total)(\"itemHeight\", ctx.viewHeight)(\"topOffset\", ctx.viewOffset)(\"bottomOffset\", ctx.bottomOffset)(\"scrollOffsetSize\", ctx.viewOffset)(\"maxScrollDifference\", ctx.viewHeight);\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.cols);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"kForOf\", ctx.dates);\n    }\n  },\n  directives: function directives() {\n    return [HeaderComponent, ɵngcc1.NgIf, VirtualizationComponent, ɵngcc1.NgForOf, KForOf, ViewComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nViewListComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: IntlService\n  }, {\n    type: CalendarDOMService\n  }, {\n    type: Renderer2\n  }];\n};\n\nViewListComponent.propDecorators = {\n  cellTemplateRef: [{\n    type: Input\n  }],\n  weekNumberTemplateRef: [{\n    type: Input\n  }],\n  headerTitleTemplateRef: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  cellUID: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  isActive: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  activeDateChange: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  virtualization: [{\n    type: ViewChild,\n    args: [VirtualizationComponent]\n  }],\n  list: [{\n    type: ViewChild,\n    args: ['list', {\n      static: true\n    }]\n  }],\n  getComponentClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-view\"]\n  }],\n  getComponentMonthClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-monthview\"]\n  }],\n  getComponentYearClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-yearview\"]\n  }],\n  getComponentDecadeClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-decadeview\"]\n  }],\n  getComponentCenturyClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-centuryview\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ViewListComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-calendar-viewlist',\n      template: \"\\n    <kendo-calendar-header\\n        [currentDate]=\\\"activeDate\\\"\\n        [min]=\\\"min\\\"\\n        [max]=\\\"max\\\"\\n        [activeView]=\\\"activeView\\\"\\n        [templateRef]=\\\"headerTitleTemplateRef\\\"\\n        (today)=\\\"handleDateChange($event)\\\"\\n    >\\n    </kendo-calendar-header>\\n    <table class=\\\"k-calendar-weekdays\\\" style=\\\"table-layout: auto;\\\" *ngIf=\\\"isMonthView()\\\">\\n        <thead>\\n            <tr>\\n                <th *ngFor=\\\"let name of weekNames\\\" [style.width.%]=\\\"colWidth\\\">{{name}}</th>\\n            </tr>\\n        </thead>\\n    </table>\\n    <kendo-virtualization\\n        [tabindex]=\\\"-1\\\"\\n        [skip]=\\\"skip\\\"\\n        [take]=\\\"take\\\"\\n        [total]=\\\"total\\\"\\n        [itemHeight]=\\\"viewHeight\\\"\\n        [topOffset]=\\\"viewOffset\\\"\\n        [bottomOffset]=\\\"bottomOffset\\\"\\n        [scrollOffsetSize]=\\\"viewOffset\\\"\\n        [maxScrollDifference]=\\\"viewHeight\\\"\\n        (pageChange)=\\\"onPageChange($event)\\\"\\n        (scrollChange)=\\\"scrollChange($event)\\\"\\n        (activeIndexChange)=\\\"setActiveDate($event)\\\"\\n        >\\n        <table #list>\\n            <colgroup><col *ngFor=\\\"let _ of cols\\\" /></colgroup>\\n\\n            <tbody *kFor=\\\"let date of dates\\\"\\n                   kendoCalendarView\\n                   role=\\\"rowgroup\\\"\\n                   [activeView]=\\\"activeView\\\"\\n                   [isActive]=\\\"isActive\\\"\\n                   [min]=\\\"min\\\" [max]=\\\"max\\\"\\n                   [cellUID]=\\\"cellUID\\\"\\n                   [focusedDate]=\\\"focusedDate\\\"\\n                   [selectedDate]=\\\"value\\\"\\n                   [weekNumber]=\\\"weekNumber\\\"\\n                   [templateRef]=\\\"cellTemplateRef\\\"\\n                   [weekNumberTemplateRef]=\\\"weekNumberTemplateRef\\\"\\n                   [viewDate]=\\\"date\\\"\\n                   (change)=\\\"handleDateChange($event)\\\"\\n            ></tbody>\\n        </table>\\n    </kendo-virtualization>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: IntlService\n    }, {\n      type: CalendarDOMService\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    isActive: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeDateChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    getComponentClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-view\"]\n    }],\n    getComponentMonthClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-monthview\"]\n    }],\n    getComponentYearClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-yearview\"]\n    }],\n    getComponentDecadeClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-decadeview\"]\n    }],\n    getComponentCenturyClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-centuryview\"]\n    }],\n    cellTemplateRef: [{\n      type: Input\n    }],\n    weekNumberTemplateRef: [{\n      type: Input\n    }],\n    headerTitleTemplateRef: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    cellUID: [{\n      type: Input\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: ViewChild,\n      args: [VirtualizationComponent]\n    }],\n    list: [{\n      type: ViewChild,\n      args: ['list', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar KEY_TO_ACTION = {\n  '33': Action.PrevView,\n  '34': Action.NextView,\n  '35': Action.LastInView,\n  '36': Action.FirstInView,\n  '37': Action.Left,\n  '38': Action.Up,\n  '39': Action.Right,\n  '40': Action.Down,\n  'meta+38': Action.UpperView,\n  'meta+40': Action.LowerView\n};\n/**\n * @hidden\n */\n\nvar NavigationService = /*#__PURE__*/function () {\n  function NavigationService(bus) {\n    _classCallCheck(this, NavigationService);\n\n    this.bus = bus;\n  }\n\n  _createClass(NavigationService, [{\n    key: \"action\",\n    value: function action(event) {\n      var action = \"\".concat(event.ctrlKey || event.metaKey ? 'meta+' : '').concat(event.keyCode);\n      return KEY_TO_ACTION[action];\n    }\n  }, {\n    key: \"move\",\n    value: function move(value, action, activeView) {\n      var service = this.bus.service(activeView);\n\n      if (!service) {\n        return value;\n      }\n\n      if (action === Action.UpperView && this.bus.canMoveUp(activeView)) {\n        this.bus.moveUp(activeView);\n        return value;\n      }\n\n      if (action === Action.LowerView && this.bus.canMoveDown(activeView)) {\n        this.bus.moveDown(activeView);\n        return value;\n      }\n\n      return service.move(value, action);\n    }\n  }]);\n\n  return NavigationService;\n}();\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(ɵngcc0.ɵɵinject(BusViewService));\n};\n\nNavigationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n/** @nocollapse */\n\nNavigationService.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: BusViewService\n    }];\n  }, null);\n})();\n\nvar divideByMagnitude = function divideByMagnitude(magnitude) {\n  return function (x) {\n    return Math.floor(x / magnitude);\n  };\n};\n\nvar powerByMagnitude = function powerByMagnitude(magnitude) {\n  return function (x) {\n    return x * magnitude;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar ScrollSyncService = /*#__PURE__*/function () {\n  function ScrollSyncService(dom, zone) {\n    _classCallCheck(this, ScrollSyncService);\n\n    this.dom = dom;\n    this.zone = zone;\n  }\n\n  _createClass(ScrollSyncService, [{\n    key: \"configure\",\n    value: function configure(activeView) {\n      var magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);\n      this.divideByMagnitude = divideByMagnitude(magnitude);\n      this.powerByMagnitude = powerByMagnitude(magnitude);\n    }\n  }, {\n    key: \"sync\",\n    value: function sync(navigator, view) {\n      var _this11 = this;\n\n      this.unsubscribe();\n\n      if (!navigator || !view) {\n        return;\n      }\n\n      this.navigator = navigator;\n      this.view = view;\n      this.zone.runOutsideAngular(function () {\n        var navScrolled, monthScrolled;\n        _this11.navSubscription = navigator.scroll$().subscribe(function (e) {\n          if (monthScrolled) {\n            monthScrolled = false;\n            return;\n          }\n\n          navScrolled = true;\n\n          _this11.scrollSiblingOf(e.target);\n        });\n        _this11.viewSubscription = view.scroll$().subscribe(function (e) {\n          if (navScrolled) {\n            navScrolled = false;\n            return;\n          }\n\n          monthScrolled = true;\n\n          _this11.scrollSiblingOf(e.target);\n        });\n      });\n    }\n  }, {\n    key: \"scrollSiblingOf\",\n    value: function scrollSiblingOf(scrolledElement) {\n      var component = this.siblingComponent(scrolledElement);\n      var scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);\n      component.scrollTo(scrollTop);\n    }\n  }, {\n    key: \"siblingComponent\",\n    value: function siblingComponent(scrollableElement) {\n      return this.navigator.container.nativeElement === scrollableElement ? this.view : this.navigator;\n    }\n  }, {\n    key: \"calculateScroll\",\n    value: function calculateScroll(component, scrollTop) {\n      var modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;\n      return modifier(scrollTop);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.navSubscription) {\n        this.navSubscription.unsubscribe();\n      }\n\n      if (this.viewSubscription) {\n        this.viewSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return ScrollSyncService;\n}();\n\nScrollSyncService.ɵfac = function ScrollSyncService_Factory(t) {\n  return new (t || ScrollSyncService)(ɵngcc0.ɵɵinject(CalendarDOMService), ɵngcc0.ɵɵinject(NgZone));\n};\n\nScrollSyncService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScrollSyncService,\n  factory: ScrollSyncService.ɵfac\n});\n/** @nocollapse */\n\nScrollSyncService.ctorParameters = function () {\n  return [{\n    type: CalendarDOMService\n  }, {\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollSyncService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: CalendarDOMService\n    }, {\n      type: NgZone\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the cell content of the Calendar. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details\n * about the current cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * > `kendoCalendarCellTemplate` is equivalent to\n * > [`kendoCalendarMonthCellTemplate`]({% slug api_dateinputs_monthcelltemplatedirective %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarCellTemplate let-date>\n *      <span class=\"custom\">{{date.getDate()}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nvar CellTemplateDirective = function CellTemplateDirective(templateRef) {\n  _classCallCheck(this, CellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nCellTemplateDirective.ɵfac = function CellTemplateDirective_Factory(t) {\n  return new (t || CellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the month cell content of the Calendar. To define the month cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarMonthCellTemplate` directive inside the component tag. The template context is set to the current\n * component. To get a reference to the current date, use the `let-date` directive. To provide more details about the current\n * month cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarMonthCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nvar MonthCellTemplateDirective = function MonthCellTemplateDirective(templateRef) {\n  _classCallCheck(this, MonthCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nMonthCellTemplateDirective.ɵfac = function MonthCellTemplateDirective_Factory(t) {\n  return new (t || MonthCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nMonthCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MonthCellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarMonthCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nMonthCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MonthCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarMonthCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the year cell content of the Calendar. To define the year cell template, nest an\n * `<ng-template>` tag with the `kendoCalendarYearCellTemplate` directive inside the component tag.\n * The template context is set to the current component. To get a reference to the current date, use\n * the `let-date` directive. To provide more details about the current year cell, get a reference to the\n * current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarYearCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'year';\n * }\n * ```\n */\n\n\nvar YearCellTemplateDirective = function YearCellTemplateDirective(templateRef) {\n  _classCallCheck(this, YearCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nYearCellTemplateDirective.ɵfac = function YearCellTemplateDirective_Factory(t) {\n  return new (t || YearCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nYearCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: YearCellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarYearCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nYearCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(YearCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarYearCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the decade cell content of the Calendar. To define the decade cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarDecadeCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current decade cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarDecadeCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'decade';\n * }\n * ```\n */\n\n\nvar DecadeCellTemplateDirective = function DecadeCellTemplateDirective(templateRef) {\n  _classCallCheck(this, DecadeCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nDecadeCellTemplateDirective.ɵfac = function DecadeCellTemplateDirective_Factory(t) {\n  return new (t || DecadeCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nDecadeCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DecadeCellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarDecadeCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nDecadeCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DecadeCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarDecadeCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the century cell content of the Calendar. To define the century cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarCenturyCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current century cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarCenturyCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'century';\n * }\n * ```\n */\n\n\nvar CenturyCellTemplateDirective = function CenturyCellTemplateDirective(templateRef) {\n  _classCallCheck(this, CenturyCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nCenturyCellTemplateDirective.ɵfac = function CenturyCellTemplateDirective_Factory(t) {\n  return new (t || CenturyCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nCenturyCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CenturyCellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarCenturyCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nCenturyCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CenturyCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarCenturyCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the week number cell content in the month view of the Calendar. To define the month week number cell template,\n * nest an `<ng-template>` tag with the `kendoCalendarWeekNumberCellTemplate` directive inside the component tag. The template\n * context is set to the current component. To get a reference to the current date, use the `let-date` directive. To provide more\n * details about the current week number cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [weekNumber]=\"true\">\n *    <ng-template kendoCalendarWeekNumberCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nvar WeekNumberCellTemplateDirective = function WeekNumberCellTemplateDirective(templateRef) {\n  _classCallCheck(this, WeekNumberCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nWeekNumberCellTemplateDirective.ɵfac = function WeekNumberCellTemplateDirective_Factory(t) {\n  return new (t || WeekNumberCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nWeekNumberCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: WeekNumberCellTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarWeekNumberCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nWeekNumberCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(WeekNumberCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarWeekNumberCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the header title of the Calendar. To define the header title template, nest an `<ng-template>` tag\n * with the `kendoCalendarHeaderTitleTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current title, use the `let-title` directive. To provide more details about\n * the current title, get a reference to the current `date` by using the `let-date` directive or get a reference to the\n * current active view  by using the `let-activeView` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarHeaderTitleTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nvar HeaderTitleTemplateDirective = function HeaderTitleTemplateDirective(templateRef) {\n  _classCallCheck(this, HeaderTitleTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nHeaderTitleTemplateDirective.ɵfac = function HeaderTitleTemplateDirective_Factory(t) {\n  return new (t || HeaderTitleTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nHeaderTitleTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: HeaderTitleTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarHeaderTitleTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nHeaderTitleTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderTitleTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarHeaderTitleTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Used for rendering the navigation item of the Calendar. To define the navigation item template, nest an `<ng-template>`\n * tag with the `kendoCalendarNavigationItemTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current item value, use the `let-title` directive. To provide more details\n * about the current title, get a reference to the current `date` by using the `let-date='date'` directive or get a reference\n * to the current active view by using the `let-activeView='activeView'` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarNavigationItemTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\n\nvar NavigationItemTemplateDirective = function NavigationItemTemplateDirective(templateRef) {\n  _classCallCheck(this, NavigationItemTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nNavigationItemTemplateDirective.ɵfac = function NavigationItemTemplateDirective_Factory(t) {\n  return new (t || NavigationItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nNavigationItemTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NavigationItemTemplateDirective,\n  selectors: [[\"\", \"kendoCalendarNavigationItemTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nNavigationItemTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NavigationItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoCalendarNavigationItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar PickerService = function PickerService() {\n  _classCallCheck(this, PickerService);\n\n  this.onFocus = new EventEmitter();\n  this.onBlur = new EventEmitter();\n  this.sameDateSelected = new EventEmitter();\n};\n\nPickerService.ɵfac = function PickerService_Factory(t) {\n  return new (t || PickerService)();\n};\n\nPickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PickerService,\n  factory: PickerService.ɵfac\n});\n/**\n * @hidden\n */\n\nvar minValidator = function minValidator(minValue) {\n  return function (control) {\n    var err = {\n      minError: {\n        minValue: minValue,\n        value: control.value\n      }\n    };\n\n    if (!minValue || !control.value) {\n      return null;\n    }\n\n    return control.value < minValue ? err : null;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar maxValidator = function maxValidator(maxValue) {\n  return function (control) {\n    var err = {\n      maxError: {\n        maxValue: maxValue,\n        value: control.value\n      }\n    };\n\n    if (!maxValue || !control.value) {\n      return null;\n    }\n\n    return control.value > maxValue ? err : null;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar requiresZoneOnBlur = function requiresZoneOnBlur(ngControl) {\n  return ngControl && (!ngControl.touched || ngControl.control && ngControl.control.updateOn === 'blur');\n};\n/**\n * @hidden\n */\n\n\nvar preventDefault = function preventDefault(args) {\n  return args.preventDefault();\n};\n/**\n * @hidden\n */\n\n\nvar currentFocusTarget = function currentFocusTarget(blurArgs) {\n  return blurArgs.relatedTarget || document.activeElement;\n};\n/**\n * @hidden\n */\n\n\nvar isPresent = function isPresent(value) {\n  return value !== undefined && value !== null;\n};\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are numbers, returns `true.\n */\n\n\nvar isNumberArray = function isNumberArray(value) {\n  return Array.isArray(value) && value.length > 0 && value.every(function (item) {\n    return typeof item === 'number';\n  });\n};\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are dates, returns `true`.\n */\n\n\nvar isDateArray = function isDateArray(value) {\n  return Array.isArray(value) && value.length > 0 && value.every(function (item) {\n    return item instanceof Date;\n  });\n};\n\nvar noop$1 = function noop$1() {\n  return false;\n};\n\nvar DISABLED_DATES_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/disabled-dates/';\n/**\n * @hidden\n */\n\nvar DisabledDatesService = /*#__PURE__*/function () {\n  function DisabledDatesService() {\n    _classCallCheck(this, DisabledDatesService);\n\n    /**\n     * Emits every time the `isDateDisabled` method changes.\n     */\n    this.changes = new Subject();\n    /**\n     * Based on the user-defined `disabledDates` input evaluates if the date is disabled.\n     * If not set, returns `false`.\n     */\n\n    this.isDateDisabled = noop$1;\n  }\n  /**\n   * Configures the `isDateDisabled` function.\n   *\n   * * If a function is provided, uses it as-is and passes each date to it for evaluation.\n   * The time part is set to `midnight`.\n   * * If a `Date[]` is provided, creates a function that checks the targeted date against\n   * the listed dates and, if the targeted date is listed, marks it as disabled.\n   * * If a `Day[]` is provided, creates a function that evaluates the provided days of the\n   * week as disabled.\n   */\n\n\n  _createClass(DisabledDatesService, [{\n    key: \"initialize\",\n    value: function initialize(disabledDates) {\n      if (typeof disabledDates === 'function') {\n        this.isDateDisabled = function (date) {\n          return disabledDates(getDate(date));\n        };\n      } else if (isNumberArray(disabledDates)) {\n        var disabledWeekDays = new Set(disabledDates);\n\n        this.isDateDisabled = function (date) {\n          return disabledWeekDays.has(date.getDay());\n        };\n      } else if (isDateArray(disabledDates)) {\n        var normalizedDisabledDates = new Set(disabledDates.map(function (date) {\n          return getDate(date).getTime();\n        }));\n\n        this.isDateDisabled = function (date) {\n          return normalizedDisabledDates.has(getDate(date).getTime());\n        };\n      } else {\n        this.isDateDisabled = noop$1;\n        this.notifyInvalidInput(disabledDates);\n      }\n\n      this.notifyServiceChange();\n    }\n  }, {\n    key: \"notifyInvalidInput\",\n    value: function notifyInvalidInput(disabledDates) {\n      if (isPresent(disabledDates) && isDevMode()) {\n        throw new Error(\"The 'disabledDates' value should be a function, a Day array or a Date array. Check \".concat(DISABLED_DATES_DOC_LINK, \" for more information.\"));\n      }\n    }\n  }, {\n    key: \"notifyServiceChange\",\n    value: function notifyServiceChange() {\n      this.changes.next();\n    }\n  }]);\n\n  return DisabledDatesService;\n}();\n\nDisabledDatesService.ɵfac = function DisabledDatesService_Factory(t) {\n  return new (t || DisabledDatesService)();\n};\n\nDisabledDatesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DisabledDatesService,\n  factory: DisabledDatesService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DisabledDatesService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/* tslint:disable:no-forward-ref */\n\n\nvar BOTTOM_VIEW_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nvar TOP_VIEW_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nvar MIN_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nvar MAX_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nvar VALUE_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\n\nvar virtualizationProp = function virtualizationProp(x) {\n  return x ? x.virtualization : null;\n};\n/**\n * @hidden\n */\n\n\nvar CALENDAR_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return CalendarComponent;\n  }) //tslint:disable-line:no-use-before-declare\n\n};\n/**\n * @hidden\n */\n\nvar CALENDAR_RANGE_VALIDATORS = {\n  multi: true,\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return CalendarComponent;\n  }) //tslint:disable-line:no-use-before-declare\n\n};\n/**\n * @hidden\n */\n\nvar KENDO_INPUT_PROVIDER = {\n  provide: KendoInput,\n  useExisting: forwardRef(function () {\n    return CalendarComponent;\n  }) //tslint:disable-line:no-use-before-declare\n\n};\n/**\n * Represents the [Kendo UI Calendar component for Angular]({% slug overview_calendar %}#toc-basic-usage).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-calendar></kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\nvar CalendarComponent = /*#__PURE__*/function () {\n  function CalendarComponent(bus, dom, element, navigator, renderer, cdr, ngZone, injector, scrollSyncService, disabledDatesService, pickerService) {\n    _classCallCheck(this, CalendarComponent);\n\n    this.bus = bus;\n    this.dom = dom;\n    this.element = element;\n    this.navigator = navigator;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    this.injector = injector;\n    this.scrollSyncService = scrollSyncService;\n    this.disabledDatesService = disabledDatesService;\n    this.pickerService = pickerService;\n    /**\n     * @hidden\n     */\n\n    this.id = guid();\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n\n    this.rangeValidation = false;\n    /**\n     * Sets or gets the `disabled` property of the Calendar and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_calendar %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets or gets the `tabindex` property of the Calendar. Based on the\n     * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n     * it determines whether the component is focusable.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Sets or gets the `navigation` property of the Calendar\n     * and determines whether the navigation side-bar will be displayed\n     * ([see example]({% slug sidebar_calendar %})).\n     */\n\n    this.navigation = true;\n    /**\n     * Defines the active view that the Calendar initially renders\n     * ([see example]({% slug activeview_calendar %})).\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the bottommost view to which the user can navigate\n     * ([see example]({% slug dates_calendar %}#toc-partial-dates)).\n     */\n\n    this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the topmost view to which the user can navigate\n     * ([see example]({% slug sidebar_calendar %}#toc-partial-dates)).\n     */\n\n    this.topView = CalendarViewEnum[CalendarViewEnum.century];\n    /**\n     * Determines whether to display a week number column in the `month` view\n     * ([see example]({% slug weeknumcolumn_calendar %})).\n     */\n\n    this.weekNumber = false;\n    /**\n     * Fires when the active view is changed\n     * ([more information and example]({% slug overview_calendar %}#toc-events)).\n     */\n\n    this.activeViewChange = new EventEmitter();\n    /**\n     * Fires when the active view date is changed\n     * ([more information and example]({% slug overview_calendar %}#toc-events)).\n     */\n\n    this.activeViewDateChange = new EventEmitter();\n    /**\n     * Fires when the value is changed\n     * ([more information and example]({% slug overview_calendar %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    this.isActive = false;\n    this.cellUID = guid();\n    this._min = new Date(MIN_DATE);\n    this._max = new Date(MAX_DATE);\n    this._focusedDate = getToday();\n    this.onControlChange = noop;\n    this.onControlTouched = noop;\n    this.onValidatorChange = noop;\n    this.minValidateFn = noop;\n    this.maxValidateFn = noop;\n    this.syncNavigation = true;\n    this.domEvents = [];\n    this.resolvedPromise = Promise.resolve(null);\n    this.destroyed = false;\n    this.setClasses(element.nativeElement);\n\n    if (this.pickerService) {\n      this.pickerService.calendar = this;\n    }\n  }\n  /**\n   * Sets or gets the `focusedDate` property of the Calendar and\n   * defines the focused date of the component\n   * ([see example]({% slug dates_calendar %}#toc-focused-dates)).\n   *\n   * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n   */\n\n\n  _createClass(CalendarComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this12 = this;\n\n      this.dom.calculateHeights(this.element.nativeElement);\n      this.scrollSyncService.configure(this.activeViewEnum);\n      this.viewChangeSubscription = this.bus.viewChanged.subscribe(function (_ref10) {\n        var view = _ref10.view;\n        _this12.activeView = CalendarViewEnum[view];\n\n        _this12.emitEvent(_this12.activeViewChange, _this12.activeView);\n\n        _this12.scrollSyncService.configure(view);\n\n        _this12.detectChanges(); // requires zone if templates\n\n      });\n      this.control = this.injector.get(NgControl, null);\n\n      if (this.element) {\n        this.ngZone.runOutsideAngular(function () {\n          _this12.bindEvents();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.verifyChanges();\n      this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n      this.scrollSyncService.configure(this.activeViewEnum);\n      var useValue = hasExistingValue(changes, 'value') && !hasExistingValue(changes, 'focusedDate');\n      var focusedDate = dateInRange(cloneDate(useValue ? this.value : this.focusedDate), this.min, this.max);\n      this.focusedDate = !isEqual(this.focusedDate, focusedDate) ? focusedDate : this.focusedDate;\n\n      if (changes.navigation) {\n        this.syncNavigation = true;\n      }\n\n      if (changes.min || changes.max || changes.rangeValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n        this.onValidatorChange();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.setAriaActivedescendant();\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (!this.syncNavigation) {\n        return;\n      }\n\n      this.syncNavigation = false;\n      this.scrollSyncService.sync(virtualizationProp(this.navigationView), virtualizationProp(this.monthView));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.scrollSyncService.destroy();\n      this.viewChangeSubscription.unsubscribe();\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n\n      if (this.pickerService) {\n        this.pickerService.calendar = null;\n      }\n\n      if (this.pageChangeSubscription) {\n        this.pageChangeSubscription.unsubscribe();\n      }\n\n      this.destroyed = true;\n    }\n    /**\n     * Focuses the host element of the Calendar.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"calendar.focus()\">Focus calendar</button>\n     *  <kendo-calendar #calendar></kendo-calendar>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"containsElement\",\n    value: function containsElement(element) {\n      var _this13 = this;\n\n      return Boolean(closest(element, function (node) {\n        return node === _this13.element.nativeElement;\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNavigation\",\n    value: function handleNavigation(candidate) {\n      if (this.disabled) {\n        return;\n      }\n\n      var focusTarget = candidate ? new Date(cloneDate(candidate).setDate(1)) : this.focusedDate;\n      this.focusedDate = dateInRange(focusTarget, this.min, this.max);\n      this.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onPageChange\",\n    value: function onPageChange() {\n      var _this14 = this;\n\n      if (!NgZone.isInAngularZone()) {\n        if (this.pageChangeSubscription) {\n          this.pageChangeSubscription.unsubscribe();\n        }\n\n        this.pageChangeSubscription = from(this.resolvedPromise).subscribe(function () {\n          _this14.detectChanges(); // requires zone if templates\n\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(candidate) {\n      var _this15 = this;\n\n      var canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n      var isSameDate = !canNavigateDown && isEqual(candidate, this.value);\n      this.focusedDate = cloneDate(candidate) || this.focusedDate;\n\n      if (this.disabled) {\n        return;\n      }\n\n      if (isSameDate) {\n        this.emitSameDate();\n        return;\n      }\n\n      if (canNavigateDown) {\n        this.bus.moveDown(this.activeViewEnum);\n        return;\n      }\n\n      if (!this.disabledDatesService.isDateDisabled(candidate)) {\n        this.ngZone.run(function () {\n          _this15.value = cloneDate(candidate);\n\n          _this15.onControlChange(cloneDate(candidate));\n\n          _this15.valueChange.emit(cloneDate(candidate));\n\n          _this15.cdr.markForCheck();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(candidate) {\n      this.verifyValue(candidate);\n      this.focusedDate = dateInRange(cloneDate(candidate) || this.focusedDate, this.min, this.max);\n      this.value = cloneDate(candidate);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"activeCellTemplate\",\n    value: function activeCellTemplate() {\n      switch (this.activeViewEnum) {\n        case CalendarViewEnum.month:\n          return this.monthCellTemplate || this.cellTemplate;\n\n        case CalendarViewEnum.year:\n          return this.yearCellTemplate;\n\n        case CalendarViewEnum.decade:\n          return this.decadeCellTemplate;\n\n        case CalendarViewEnum.century:\n          return this.centuryCellTemplate;\n\n        default:\n          return null;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(emitter, args) {\n      if (hasObservers(emitter)) {\n        this.ngZone.run(function () {\n          emitter.emit(args);\n        });\n      }\n    }\n  }, {\n    key: \"setClasses\",\n    value: function setClasses(element) {\n      this.renderer.addClass(element, 'k-widget');\n      this.renderer.addClass(element, 'k-calendar');\n      this.renderer.addClass(element, 'k-calendar-infinite');\n    }\n  }, {\n    key: \"verifyChanges\",\n    value: function verifyChanges() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (this.min > this.max) {\n        throw new Error(\"The max value should be bigger than the min. See \".concat(MIN_DOC_LINK, \" and \").concat(MAX_DOC_LINK, \".\"));\n      }\n\n      if (this.bottomViewEnum > this.topViewEnum) {\n        throw new Error(\"The topView should be greater than bottomView. See \".concat(BOTTOM_VIEW_DOC_LINK, \" and \").concat(TOP_VIEW_DOC_LINK, \".\"));\n      }\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(candidate) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (candidate && !(candidate instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'blur', this.handleBlur.bind(this)), this.renderer.listen(element, 'focus', this.handleFocus.bind(this)), this.renderer.listen(element, 'mousedown', preventDefault), this.renderer.listen(element, 'click', this.handleClick.bind(this)), this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n    }\n  }, {\n    key: \"emitBlur\",\n    value: function emitBlur(args) {\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n    }\n  }, {\n    key: \"emitFocus\",\n    value: function emitFocus() {\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit();\n      }\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(args) {\n      var _this16 = this;\n\n      this.isActive = false; // the injector can get the NgControl instance of the parent component (for example, the DateTimePicker)\n      // and enters the zone for no reason because the parent component is still untouched\n\n      if (!this.pickerService && requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(function () {\n          _this16.onControlTouched();\n\n          _this16.emitBlur(args);\n\n          _this16.cdr.markForCheck();\n        });\n      } else {\n        this.emitBlur(args);\n        this.detectChanges();\n      }\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.isActive = true;\n\n      if (!NgZone.isInAngularZone()) {\n        this.detectChanges();\n      }\n\n      this.emitFocus();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      if (!this.isActive) {\n        if (this.monthView.isScrolled()) {\n          this.focusedDate = cloneDate(this.focusedDate); //XXX: forces change detect\n\n          this.detectChanges();\n        }\n\n        this.focus();\n      }\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(args) {\n      // reserve the alt + arrow key commands for the picker\n      var arrowKeyPressed = [Keys.ArrowUp, Keys.ArrowRight, Keys.ArrowDown, Keys.ArrowLeft].indexOf(args.keyCode) !== -1;\n\n      if (isPresent(this.pickerService) && arrowKeyPressed && args.altKey) {\n        return;\n      }\n\n      var candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(args), this.activeViewEnum), this.min, this.max);\n\n      if (!isEqual(this.focusedDate, candidate)) {\n        this.focusedDate = candidate;\n        this.detectChanges();\n        args.preventDefault();\n      }\n\n      if (args.keyCode === Keys.Enter) {\n        this.handleDateChange(this.focusedDate);\n      }\n    }\n  }, {\n    key: \"detectChanges\",\n    value: function detectChanges() {\n      if (!this.destroyed) {\n        this.cdr.detectChanges();\n      }\n    }\n  }, {\n    key: \"emitSameDate\",\n    value: function emitSameDate() {\n      if (this.pickerService) {\n        this.pickerService.sameDateSelected.emit();\n      }\n    }\n  }, {\n    key: \"setAriaActivedescendant\",\n    value: function setAriaActivedescendant() {\n      if (!isPresent(this.element)) {\n        return;\n      }\n\n      var focusedCellId = this.cellUID + this.focusedDate.getTime();\n      this.renderer.setAttribute(this.element.nativeElement, 'aria-activedescendant', focusedCellId);\n    }\n  }, {\n    key: \"focusedDate\",\n    set: function set(focusedDate) {\n      this._focusedDate = focusedDate || getToday();\n      this.setAriaActivedescendant();\n    },\n    get: function get() {\n      return this._focusedDate;\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `min` value is `1900-1-1`.\n     */\n\n  }, {\n    key: \"min\",\n    set: function set(min) {\n      this._min = min || new Date(MIN_DATE);\n    },\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `max` value is `2099-12-31`.\n     */\n\n  }, {\n    key: \"max\",\n    set: function set(max) {\n      this._max = max || new Date(MAX_DATE);\n    },\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(candidate) {\n      this.verifyValue(candidate);\n      this._value = cloneDate(candidate);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the dates of the Calendar that will be disabled\n     * ([see example]({% slug disabled_dates_calendar %})).\n     */\n\n  }, {\n    key: \"disabledDates\",\n    set: function set(value) {\n      this.disabledDatesService.initialize(value);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"cellTemplateRef\",\n    set: function set(template) {\n      this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"monthCellTemplateRef\",\n    set: function set(template) {\n      this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"yearCellTemplateRef\",\n    set: function set(template) {\n      this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"decadeCellTemplateRef\",\n    set: function set(template) {\n      this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"centuryCellTemplateRef\",\n    set: function set(template) {\n      this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"weekNumberTemplateRef\",\n    set: function set(template) {\n      this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"headerTitleTemplateRef\",\n    set: function set(template) {\n      this.headerTitleTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"navigationItemTemplateRef\",\n    set: function set(template) {\n      this.navigationItemTemplate = template;\n    }\n  }, {\n    key: \"activeViewEnum\",\n    get: function get() {\n      var activeView = CalendarViewEnum[this.activeView];\n      return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n  }, {\n    key: \"bottomViewEnum\",\n    get: function get() {\n      return CalendarViewEnum[this.bottomView];\n    }\n  }, {\n    key: \"topViewEnum\",\n    get: function get() {\n      return CalendarViewEnum[this.topView];\n    }\n  }, {\n    key: \"widgetId\",\n    get: function get() {\n      return this.id;\n    }\n  }, {\n    key: \"widgetRole\",\n    get: function get() {\n      return 'grid';\n    }\n  }, {\n    key: \"calendarTabIndex\",\n    get: function get() {\n      return this.disabled ? undefined : this.tabIndex;\n    }\n  }, {\n    key: \"ariaDisabled\",\n    get: function get() {\n      return this.disabled;\n    }\n  }]);\n\n  return CalendarComponent;\n}();\n\nCalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n  return new (t || CalendarComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(CalendarDOMService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ScrollSyncService), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService), ɵngcc0.ɵɵdirectiveInject(PickerService, 8));\n};\n\nCalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarComponent,\n  selectors: [[\"kendo-calendar\"]],\n  contentQueries: function CalendarComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, CellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, MonthCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, YearCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DecadeCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, CenturyCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, WeekNumberCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, HeaderTitleTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, NavigationItemTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navigationItemTemplate = _t.first);\n    }\n  },\n  viewQuery: function CalendarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NavigationComponent, true);\n      ɵngcc0.ɵɵviewQuery(ViewListComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navigationView = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthView = _t.first);\n    }\n  },\n  hostVars: 8,\n  hostBindings: function CalendarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.widgetId)(\"role\", ctx.widgetRole)(\"tabindex\", ctx.calendarTabIndex)(\"aria-disabled\", ctx.ariaDisabled);\n      ɵngcc0.ɵɵclassProp(\"k-week-number\", ctx.weekNumber)(\"k-state-disabled\", ctx.ariaDisabled);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    rangeValidation: \"rangeValidation\",\n    disabled: \"disabled\",\n    tabindex: \"tabindex\",\n    navigation: \"navigation\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\",\n    focusedDate: \"focusedDate\",\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    tabIndex: \"tabIndex\",\n    disabledDates: \"disabledDates\",\n    cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n    monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n    yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n    decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n    centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n    weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n    headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n    navigationItemTemplateRef: [\"navigationItemTemplate\", \"navigationItemTemplateRef\"]\n  },\n  outputs: {\n    activeViewChange: \"activeViewChange\",\n    activeViewDateChange: \"activeViewDateChange\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendo-calendar\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([BusViewService, CALENDAR_VALUE_ACCESSOR, CALENDAR_RANGE_VALIDATORS, KENDO_INPUT_PROVIDER, LocalizationService, DisabledDatesService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.calendar'\n  }, NavigationService, ScrollSyncService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 12,\n  consts: function consts() {\n    var i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the today button in the calendar header\n       * @meaning kendo.calendar.today\n       */\n      var MSG_EXTERNAL_826701167553276328$$DIST_FESM2015_INDEX_JS_5 = goog.getMsg(\"TODAY\");\n      i18n_4 = MSG_EXTERNAL_826701167553276328$$DIST_FESM2015_INDEX_JS_5;\n    } else {\n      i18n_4 = $localize(_templateObject());\n    }\n\n    return [[\"kendoCalendarLocalizedMessages\", \"\", 6, \"today\"], [\"today\", i18n_4], [3, \"activeView\", \"focusedDate\", \"min\", \"max\", \"templateRef\", \"valueChange\", \"pageChange\", 4, \"ngIf\"], [3, \"activeView\", \"isActive\", \"cellTemplateRef\", \"headerTitleTemplateRef\", \"weekNumberTemplateRef\", \"cellUID\", \"min\", \"max\", \"focusedDate\", \"weekNumber\", \"value\", \"valueChange\", \"activeDateChange\", \"pageChange\"], [3, \"activeView\", \"focusedDate\", \"min\", \"max\", \"templateRef\", \"valueChange\", \"pageChange\"]];\n  },\n  template: function CalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵtemplate(2, CalendarComponent_kendo_calendar_navigation_2_Template, 1, 5, \"kendo-calendar-navigation\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"kendo-calendar-viewlist\", 3);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function CalendarComponent_Template_kendo_calendar_viewlist_valueChange_3_listener($event) {\n        return ctx.handleDateChange($event);\n      })(\"activeDateChange\", function CalendarComponent_Template_kendo_calendar_viewlist_activeDateChange_3_listener($event) {\n        return ctx.emitEvent(ctx.activeViewDateChange, $event);\n      })(\"pageChange\", function CalendarComponent_Template_kendo_calendar_viewlist_pageChange_3_listener() {\n        return ctx.onPageChange();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var tmp_3_0 = null;\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"activeView\", ctx.activeViewEnum)(\"isActive\", ctx.isActive)(\"cellTemplateRef\", (tmp_3_0 = ctx.activeCellTemplate()) == null ? null : tmp_3_0.templateRef)(\"headerTitleTemplateRef\", ctx.headerTitleTemplate == null ? null : ctx.headerTitleTemplate.templateRef)(\"weekNumberTemplateRef\", ctx.weekNumberTemplate == null ? null : ctx.weekNumberTemplate.templateRef)(\"cellUID\", ctx.cellUID)(\"min\", ctx.min)(\"max\", ctx.max)(\"focusedDate\", ctx.focusedDate)(\"weekNumber\", ctx.weekNumber)(\"value\", ctx.value);\n    }\n  },\n  directives: function directives() {\n    return [CalendarLocalizedMessagesDirective, ɵngcc1.NgIf, ViewListComponent, NavigationComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nCalendarComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: CalendarDOMService\n  }, {\n    type: ElementRef\n  }, {\n    type: NavigationService\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }, {\n    type: Injector\n  }, {\n    type: ScrollSyncService\n  }, {\n    type: DisabledDatesService\n  }, {\n    type: PickerService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nCalendarComponent.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  disabledDates: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  bottomView: [{\n    type: Input\n  }],\n  topView: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }, {\n    type: HostBinding,\n    args: ['class.k-week-number']\n  }],\n  activeViewChange: [{\n    type: Output\n  }],\n  activeViewDateChange: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  cellTemplate: [{\n    type: ContentChild,\n    args: [CellTemplateDirective, {\n      static: true\n    }]\n  }],\n  cellTemplateRef: [{\n    type: Input,\n    args: ['cellTemplate']\n  }],\n  monthCellTemplate: [{\n    type: ContentChild,\n    args: [MonthCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  monthCellTemplateRef: [{\n    type: Input,\n    args: ['monthCellTemplate']\n  }],\n  yearCellTemplate: [{\n    type: ContentChild,\n    args: [YearCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  yearCellTemplateRef: [{\n    type: Input,\n    args: ['yearCellTemplate']\n  }],\n  decadeCellTemplate: [{\n    type: ContentChild,\n    args: [DecadeCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  decadeCellTemplateRef: [{\n    type: Input,\n    args: ['decadeCellTemplate']\n  }],\n  centuryCellTemplate: [{\n    type: ContentChild,\n    args: [CenturyCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  centuryCellTemplateRef: [{\n    type: Input,\n    args: ['centuryCellTemplate']\n  }],\n  weekNumberTemplate: [{\n    type: ContentChild,\n    args: [WeekNumberCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  weekNumberTemplateRef: [{\n    type: Input,\n    args: ['weekNumberTemplate']\n  }],\n  headerTitleTemplate: [{\n    type: ContentChild,\n    args: [HeaderTitleTemplateDirective, {\n      static: true\n    }]\n  }],\n  headerTitleTemplateRef: [{\n    type: Input,\n    args: ['headerTitleTemplate']\n  }],\n  navigationItemTemplate: [{\n    type: ContentChild,\n    args: [NavigationItemTemplateDirective, {\n      static: true\n    }]\n  }],\n  navigationItemTemplateRef: [{\n    type: Input,\n    args: ['navigationItemTemplate']\n  }],\n  navigationView: [{\n    type: ViewChild,\n    args: [NavigationComponent]\n  }],\n  monthView: [{\n    type: ViewChild,\n    args: [ViewListComponent]\n  }],\n  widgetId: [{\n    type: HostBinding,\n    args: ['attr.id']\n  }],\n  widgetRole: [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  calendarTabIndex: [{\n    type: HostBinding,\n    args: ['attr.tabindex']\n  }],\n  ariaDisabled: [{\n    type: HostBinding,\n    args: ['attr.aria-disabled']\n  }, {\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-calendar',\n      providers: [BusViewService, CALENDAR_VALUE_ACCESSOR, CALENDAR_RANGE_VALIDATORS, KENDO_INPUT_PROVIDER, LocalizationService, DisabledDatesService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.calendar'\n      }, NavigationService, ScrollSyncService],\n      selector: 'kendo-calendar',\n      template: \"\\n    <ng-container kendoCalendarLocalizedMessages\\n        i18n-today=\\\"kendo.calendar.today|The label for the today button in the calendar header\\\"\\n        today=\\\"TODAY\\\"\\n    >\\n    </ng-container>\\n    <kendo-calendar-navigation\\n        *ngIf=\\\"navigation\\\"\\n        [activeView]=\\\"activeViewEnum\\\"\\n        [focusedDate]=\\\"focusedDate\\\"\\n        [min]=\\\"min\\\"\\n        [max]=\\\"max\\\"\\n        [templateRef]=\\\"navigationItemTemplate?.templateRef\\\"\\n        (valueChange)=\\\"handleNavigation($event)\\\"\\n        (pageChange)=\\\"onPageChange()\\\"\\n    >\\n    </kendo-calendar-navigation>\\n    <kendo-calendar-viewlist\\n        [activeView]=\\\"activeViewEnum\\\"\\n        [isActive]=\\\"isActive\\\"\\n        [cellTemplateRef]=\\\"activeCellTemplate()?.templateRef\\\"\\n        [headerTitleTemplateRef]=\\\"headerTitleTemplate?.templateRef\\\"\\n        [weekNumberTemplateRef]=\\\"weekNumberTemplate?.templateRef\\\"\\n        [cellUID]=\\\"cellUID\\\"\\n        [min]=\\\"min\\\"\\n        [max]=\\\"max\\\"\\n        [focusedDate]=\\\"focusedDate\\\"\\n        [weekNumber]=\\\"weekNumber\\\"\\n        [value]=\\\"value\\\"\\n        (valueChange)=\\\"handleDateChange($event)\\\"\\n        (activeDateChange)=\\\"emitEvent(activeViewDateChange, $event)\\\"\\n        (pageChange)=\\\"onPageChange()\\\"\\n    >\\n    </kendo-calendar-viewlist>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: CalendarDOMService\n    }, {\n      type: ElementRef\n    }, {\n      type: NavigationService\n    }, {\n      type: Renderer2\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: NgZone\n    }, {\n      type: Injector\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: DisabledDatesService\n    }, {\n      type: PickerService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }, {\n      type: HostBinding,\n      args: ['class.k-week-number']\n    }],\n    activeViewChange: [{\n      type: Output\n    }],\n    activeViewDateChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disabledDates: [{\n      type: Input\n    }],\n    cellTemplateRef: [{\n      type: Input,\n      args: ['cellTemplate']\n    }],\n    cellTemplate: [{\n      type: ContentChild,\n      args: [CellTemplateDirective, {\n        static: true\n      }]\n    }],\n    monthCellTemplateRef: [{\n      type: Input,\n      args: ['monthCellTemplate']\n    }],\n    monthCellTemplate: [{\n      type: ContentChild,\n      args: [MonthCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    yearCellTemplateRef: [{\n      type: Input,\n      args: ['yearCellTemplate']\n    }],\n    yearCellTemplate: [{\n      type: ContentChild,\n      args: [YearCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    decadeCellTemplateRef: [{\n      type: Input,\n      args: ['decadeCellTemplate']\n    }],\n    decadeCellTemplate: [{\n      type: ContentChild,\n      args: [DecadeCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    centuryCellTemplateRef: [{\n      type: Input,\n      args: ['centuryCellTemplate']\n    }],\n    centuryCellTemplate: [{\n      type: ContentChild,\n      args: [CenturyCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    weekNumberTemplateRef: [{\n      type: Input,\n      args: ['weekNumberTemplate']\n    }],\n    weekNumberTemplate: [{\n      type: ContentChild,\n      args: [WeekNumberCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    headerTitleTemplateRef: [{\n      type: Input,\n      args: ['headerTitleTemplate']\n    }],\n    headerTitleTemplate: [{\n      type: ContentChild,\n      args: [HeaderTitleTemplateDirective, {\n        static: true\n      }]\n    }],\n    navigationItemTemplateRef: [{\n      type: Input,\n      args: ['navigationItemTemplate']\n    }],\n    navigationItemTemplate: [{\n      type: ContentChild,\n      args: [NavigationItemTemplateDirective, {\n        static: true\n      }]\n    }],\n    widgetId: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    widgetRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    calendarTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    navigationView: [{\n      type: ViewChild,\n      args: [NavigationComponent]\n    }],\n    monthView: [{\n      type: ViewChild,\n      args: [ViewListComponent]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar Arrow;\n\n(function (Arrow) {\n  Arrow[Arrow[\"Up\"] = 0] = \"Up\";\n  Arrow[Arrow[\"Down\"] = 1] = \"Down\";\n  Arrow[Arrow[\"None\"] = 2] = \"None\";\n})(Arrow || (Arrow = {}));\n/* tslint:disable:max-line-length */\n\n\nvar MIN_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-min';\nvar MAX_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-max';\nvar VALUE_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/dateinput/#toc-using-with-json';\nvar DATE_PART_REGEXP = /year|month|<day>/;\nvar TIME_PART_REGEXP = /hour|minute|second|millisecond/;\nvar SHORT_PATTERN_LENGTH_REGEXP = /d|M|H|h|m|s/;\n\nvar padZero = function padZero(length) {\n  return new Array(Math.max(length, 0)).fill('0').join('');\n};\n\nvar unpadZero = function unpadZero(value) {\n  return value.replace(/^0*/, '');\n};\n\nvar Mask = function Mask() {\n  _classCallCheck(this, Mask);\n\n  this.symbols = \"\";\n};\n\nvar KendoDate = /*#__PURE__*/function () {\n  function KendoDate(intl, formatPlaceholder, format, value) {\n    _classCallCheck(this, KendoDate);\n\n    this.intl = intl;\n    this.formatPlaceholder = formatPlaceholder;\n    this.format = format;\n    this.year = true;\n    this.month = true;\n    this.date = true;\n    this.hours = true;\n    this.minutes = true;\n    this.seconds = true;\n    this.milliseconds = true;\n    this.leadingZero = null;\n    this.monthNames = null;\n    this.typedMonthPart = \"\";\n    this.value = getDate(new Date());\n    this.knownParts = \"adHhmMsEy\";\n    this.symbols = {\n      \"E\": \"E\",\n      \"H\": \"H\",\n      \"M\": \"M\",\n      \"a\": \"a\",\n      \"d\": \"d\",\n      \"h\": \"h\",\n      \"m\": \"m\",\n      \"s\": \"s\",\n      \"y\": \"y\"\n    };\n    this.monthNames = this.allFormatedMonths();\n    this.dayPeriods = this.allDayPeriods();\n\n    if (!value) {\n      this.value = getDate(new Date());\n      var sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n\n      for (var i = 0; i < sampleFormat.length; i++) {\n        this.setExisting(sampleFormat[i], false);\n      }\n    } else {\n      this.value = cloneDate(value);\n    }\n  }\n\n  _createClass(KendoDate, [{\n    key: \"hasValue\",\n    value: function hasValue() {\n      var _this17 = this;\n\n      var pred = function pred(a, p) {\n        return a || p.type !== 'literal' && p.type !== 'dayperiod' && _this17.getExisting(p.pattern[0]);\n      };\n\n      return this.intl.splitDateFormat(this.format).reduce(pred, false);\n    }\n  }, {\n    key: \"getDateObject\",\n    value: function getDateObject() {\n      for (var i = 0; i < this.knownParts.length; i++) {\n        if (!this.getExisting(this.knownParts[i])) {\n          return null;\n        }\n      }\n\n      return cloneDate(this.value);\n    }\n  }, {\n    key: \"getTextAndFormat\",\n    value: function getTextAndFormat() {\n      return this.merge(this.intl.formatDate(this.value, this.format), this.dateFormatString(this.value, this.format));\n    }\n  }, {\n    key: \"getExisting\",\n    value: function getExisting(symbol) {\n      switch (symbol) {\n        case \"y\":\n          return this.year;\n\n        case \"M\":\n        case \"L\":\n          return this.month;\n\n        case \"d\":\n          return this.date;\n\n        case \"E\":\n          return this.date && this.month && this.year;\n\n        case \"h\":\n        case \"H\":\n          return this.hours;\n\n        case \"m\":\n          return this.minutes;\n\n        case \"s\":\n          return this.seconds;\n\n        default:\n          return true;\n      }\n    }\n  }, {\n    key: \"setExisting\",\n    value: function setExisting(symbol, value) {\n      switch (symbol) {\n        case \"y\":\n          this.year = value;\n\n          if (value === false) {\n            this.value.setFullYear(2000);\n          }\n\n          break;\n        //allow 2/29 dates\n\n        case \"M\":\n          this.month = value;\n\n          if (value === false) {\n            this.value.setMonth(0);\n          }\n\n          break;\n        //make sure you can type 31 at day part\n\n        case \"d\":\n          this.date = value;\n          break;\n\n        case \"h\":\n        case \"H\":\n          this.hours = value;\n          break;\n\n        case \"m\":\n          this.minutes = value;\n          break;\n\n        case \"s\":\n          this.seconds = value;\n          break;\n\n        default:\n          return;\n      }\n    }\n  }, {\n    key: \"modifyPart\",\n    value: function modifyPart(symbol, offset) {\n      var newValue = cloneDate(this.value);\n\n      switch (symbol) {\n        case \"y\":\n          newValue.setFullYear(newValue.getFullYear() + offset);\n          break;\n\n        case \"M\":\n          newValue = addMonths(this.value, offset);\n          break;\n\n        case \"d\":\n        case \"E\":\n          newValue.setDate(newValue.getDate() + offset);\n          break;\n\n        case \"h\":\n        case \"H\":\n          newValue.setHours(newValue.getHours() + offset);\n          break;\n\n        case \"m\":\n          newValue.setMinutes(newValue.getMinutes() + offset);\n          break;\n\n        case \"s\":\n          newValue.setSeconds(newValue.getSeconds() + offset);\n          break;\n\n        case \"a\":\n          newValue.setHours(newValue.getHours() + 12 * offset);\n          break;\n\n        default:\n          break;\n      }\n\n      if (newValue.getFullYear() > 0) {\n        this.setExisting(symbol, true);\n        this.value = newValue;\n      }\n    }\n  }, {\n    key: \"parsePart\",\n    value: function parsePart(symbol, currentChar, resetSegmentValue) {\n      if (!currentChar) {\n        this.resetLeadingZero();\n        this.setExisting(symbol, false);\n        return {\n          value: null,\n          switchToNext: false\n        };\n      }\n\n      var baseDate = this.intl.formatDate(this.value, this.format);\n      var dateParts = this.dateFormatString(this.value, this.format);\n      var baseFormat = dateParts.symbols;\n      var replaced = false;\n      var prefix = \"\";\n      var current = \"\";\n      var suffix = \"\";\n\n      for (var i = 0; i < baseDate.length; i++) {\n        if (baseFormat[i] === symbol) {\n          current += this.getExisting(symbol) ? baseDate[i] : \"0\";\n          replaced = true;\n        } else if (!replaced) {\n          prefix += baseDate[i];\n        } else {\n          suffix += baseDate[i];\n        }\n      }\n\n      var currentMaxLength = current.length - 3;\n      var parsedDate = null;\n      var month = this.matchMonth(currentChar);\n      var dayPeriod = this.matchDayPeriod(currentChar, symbol);\n      var isZeroCurrentChar = currentChar === '0';\n      var leadingZero = (this.leadingZero || {})[symbol] || 0;\n\n      if (isZeroCurrentChar) {\n        var valueNumber = parseInt(resetSegmentValue ? currentChar : current + currentChar, 10);\n\n        if (valueNumber === 0 && !this.isAbbrMonth(dateParts.partMap, symbol)) {\n          this.incrementLeadingZero(symbol);\n        }\n      } else {\n        this.resetLeadingZero();\n      }\n\n      for (var _i2 = Math.max(0, currentMaxLength); _i2 <= current.length; _i2++) {\n        var middle = resetSegmentValue ? currentChar : current.substring(_i2) + currentChar;\n        var middleNumber = parseInt(middle, 10);\n        parsedDate = this.intl.parseDate(prefix + middle + suffix, this.format);\n\n        if (!parsedDate && !isNaN(middleNumber) && !isNaN(parseInt(currentChar, 10))) {\n          if (symbol === 'M' && !month) {\n            var monthNumber = middleNumber - 1;\n\n            if (monthNumber > -1 && monthNumber < 12) {\n              parsedDate = cloneDate(this.value);\n              parsedDate.setMonth(monthNumber);\n\n              if (parsedDate.getMonth() !== monthNumber) {\n                parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n              }\n            }\n          }\n\n          if (symbol === 'y') {\n            parsedDate = createDate(parseInt(middle, 10), this.month ? this.value.getMonth() : 0, this.date ? this.value.getDate() : 1, this.hours ? this.value.getHours() : 0, this.minutes ? this.value.getMinutes() : 0, this.seconds ? this.value.getSeconds() : 0, this.milliseconds ? this.value.getMilliseconds() : 0);\n\n            if (this.date && parsedDate.getDate() !== this.value.getDate()) {\n              parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n            }\n          }\n        }\n\n        if (parsedDate) {\n          //move to next segment if the part will overflow with next char\n          //when start from empty date (01, then 010), padded zeros should be trimmed\n          var patternValue = this.partPattern(dateParts.partMap, symbol).pattern;\n          var peekDate = this.intl.parseDate(\"\".concat(prefix).concat(this.peek(middle, patternValue)).concat(suffix), this.format);\n          var patternLength = this.patternLength(patternValue) || patternValue.length;\n          var patternSatisfied = leadingZero + (unpadZero(middle) || currentChar).length >= patternLength;\n          var switchToNext = peekDate === null || patternSatisfied;\n          this.value = parsedDate;\n          this.setExisting(symbol, true);\n          return {\n            value: this.value,\n            switchToNext: switchToNext\n          };\n        }\n      }\n\n      if (month) {\n        parsedDate = this.intl.parseDate(prefix + month + suffix, this.format);\n\n        if (parsedDate) {\n          this.value = parsedDate;\n          this.setExisting(symbol, true);\n          return {\n            value: this.value,\n            switchToNext: false\n          };\n        }\n      }\n\n      if (dayPeriod) {\n        parsedDate = this.intl.parseDate(prefix + dayPeriod + suffix, this.format);\n\n        if (parsedDate) {\n          this.value = parsedDate;\n          return {\n            value: this.value,\n            switchToNext: true\n          };\n        }\n      }\n\n      if (isZeroCurrentChar) {\n        this.setExisting(symbol, false);\n      }\n\n      return {\n        value: null,\n        switchToNext: false\n      };\n    }\n  }, {\n    key: \"resetLeadingZero\",\n    value: function resetLeadingZero() {\n      var hasLeadingZero = this.leadingZero !== null;\n      this.setLeadingZero(null);\n      return hasLeadingZero;\n    }\n  }, {\n    key: \"setLeadingZero\",\n    value: function setLeadingZero(leadingZero) {\n      this.leadingZero = leadingZero;\n    }\n  }, {\n    key: \"incrementLeadingZero\",\n    value: function incrementLeadingZero(symbol) {\n      var leadingZero = this.leadingZero || {};\n      leadingZero[symbol] = (leadingZero[symbol] || 0) + 1;\n      this.leadingZero = leadingZero;\n    }\n  }, {\n    key: \"isAbbrMonth\",\n    value: function isAbbrMonth(parts, symbol) {\n      var pattern = this.partPattern(parts, symbol);\n      return pattern.type === 'month' && pattern.names;\n    }\n  }, {\n    key: \"partPattern\",\n    value: function partPattern(parts, symbol) {\n      return parts.filter(function (part) {\n        return part.pattern.indexOf(symbol) !== -1;\n      })[0];\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(value, pattern) {\n      var peekValue = unpadZero(value) + '0';\n      return padZero(pattern.length - peekValue.length) + peekValue;\n    }\n  }, {\n    key: \"matchMonth\",\n    value: function matchMonth(typedChar) {\n      this.typedMonthPart += typedChar.toLowerCase();\n\n      if (!this.monthNames) {\n        return \"\";\n      }\n\n      while (this.typedMonthPart.length > 0) {\n        for (var i = 0; i < this.monthNames.length; i++) {\n          if (this.monthNames[i].toLowerCase().indexOf(this.typedMonthPart) === 0) {\n            return this.monthNames[i];\n          }\n        }\n\n        var monthAsNum = parseInt(this.typedMonthPart, 10);\n\n        if (monthAsNum >= 1 && monthAsNum <= 12 && monthAsNum.toString() === this.typedMonthPart\n        /*ensure they exact match*/\n        ) {\n            return this.monthNames[monthAsNum - 1];\n          }\n\n        this.typedMonthPart = this.typedMonthPart.substring(1, this.typedMonthPart.length);\n      }\n\n      return \"\";\n    }\n  }, {\n    key: \"matchDayPeriod\",\n    value: function matchDayPeriod(typedChar, symbol) {\n      var lowerChart = String(typedChar).toLowerCase();\n\n      if (symbol === 'a' && this.dayPeriods) {\n        if (this.dayPeriods.am.toLowerCase().startsWith(lowerChart)) {\n          return this.dayPeriods.am;\n        } else if (this.dayPeriods.pm.toLowerCase().startsWith(lowerChart)) {\n          return this.dayPeriods.pm;\n        }\n      }\n\n      return '';\n    }\n  }, {\n    key: \"allFormatedMonths\",\n    value: function allFormatedMonths() {\n      var dateFormatParts = this.intl.splitDateFormat(this.format);\n\n      for (var i = 0; i < dateFormatParts.length; i++) {\n        if (dateFormatParts[i].type === \"month\" && dateFormatParts[i].names) {\n          return this.intl.dateFormatNames(dateFormatParts[i].names);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"allDayPeriods\",\n    value: function allDayPeriods() {\n      var dateFormatParts = this.intl.splitDateFormat(this.format);\n\n      for (var i = 0; i < dateFormatParts.length; i++) {\n        if (dateFormatParts[i].type === \"dayperiod\" && dateFormatParts[i].names) {\n          return this.intl.dateFormatNames(dateFormatParts[i].names);\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"patternLength\",\n    value: function patternLength(pattern) {\n      if (pattern[0] === 'y') {\n        return 4;\n      }\n\n      if (SHORT_PATTERN_LENGTH_REGEXP.test(pattern)) {\n        return 2;\n      }\n\n      return 0;\n    } //TODO: REMOVE!\n\n  }, {\n    key: \"dateFormatString\",\n    value: function dateFormatString(date, format) {\n      var dateFormatParts = this.intl.splitDateFormat(format);\n      var parts = [];\n      var partMap = [];\n\n      for (var i = 0; i < dateFormatParts.length; i++) {\n        var partLength = this.intl.formatDate(date, {\n          pattern: dateFormatParts[i].pattern\n        }).length;\n\n        while (partLength > 0) {\n          parts.push(this.symbols[dateFormatParts[i].pattern[0]] || \"_\");\n          partMap.push(dateFormatParts[i]);\n          partLength--;\n        }\n      }\n\n      var returnValue = new Mask();\n      returnValue.symbols = parts.join(\"\");\n      returnValue.partMap = partMap;\n      return returnValue;\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(text, mask) {\n      // Important: right to left.\n      var resultText = \"\";\n      var resultFormat = \"\";\n      var format = mask.symbols;\n\n      for (var r = format.length - 1; r >= 0; r--) {\n        if (this.knownParts.indexOf(format[r]) === -1 || this.getExisting(format[r])) {\n          resultText = text[r] + resultText;\n          resultFormat = format[r] + resultFormat;\n        } else {\n          var currentSymbol = format[r];\n\n          while (r >= 0 && currentSymbol === format[r]) {\n            r--;\n          }\n\n          r++;\n\n          if (this.leadingZero && this.leadingZero[currentSymbol]) {\n            resultText = '0' + resultText;\n          } else {\n            resultText = this.dateFieldName(mask.partMap[r]) + resultText;\n          }\n\n          while (resultFormat.length < resultText.length) {\n            resultFormat = format[r] + resultFormat;\n          }\n        }\n      }\n\n      return [resultText, resultFormat];\n    }\n  }, {\n    key: \"dateFieldName\",\n    value: function dateFieldName(part) {\n      var formatPlaceholder = this.formatPlaceholder || 'wide';\n\n      if (formatPlaceholder[part.type]) {\n        return formatPlaceholder[part.type];\n      }\n\n      if (formatPlaceholder === 'formatPattern') {\n        return part.pattern;\n      }\n\n      return this.intl.dateFieldName(Object.assign(part, {\n        nameType: formatPlaceholder\n      }));\n    }\n  }]);\n\n  return KendoDate;\n}();\n/**\n * Represents the [Kendo UI DateInput component for Angular]({% slug overview_dateinput %}#toc-basic-usage).\n */\n\n\nvar DateInputComponent = /*#__PURE__*/function () {\n  function DateInputComponent(cdr, intl, renderer, element, ngZone, injector, localization, pickerService) {\n    _classCallCheck(this, DateInputComponent);\n\n    this.cdr = cdr;\n    this.intl = intl;\n    this.renderer = renderer;\n    this.element = element;\n    this.ngZone = ngZone;\n    this.injector = injector;\n    this.localization = localization;\n    this.pickerService = pickerService;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Sets or gets the `disabled` property of the DateInput and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_dateinput %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets or gets the read-only state of the DateInput\n     * ([see example]({% slug readonly_dateinput %})).\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the title of the input element of the DateInput.\n     */\n\n    this.title = \"\";\n    /**\n     * Sets or gets the `tabIndex` property of the DateInput.\n     * .\n     */\n\n    this.tabindex = 0;\n    /**\n     * @hidden\n     */\n\n    this.role = 'spinbutton';\n    /**\n     * @hidden\n     */\n\n    this.ariaReadOnly = false;\n    /**\n     * Specifies the date format that is used to display the input value\n     * ([see example]({% slug formats_dateinput %})).\n     */\n\n    this.format = \"d\";\n    /**\n     * Specifies the hint the DateInput displays when its value is `null`.\n     * For more information, refer to the article on\n     * [placeholders]({% slug placeholders_dateinput %}).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-dateinput placeholder=\"Enter birth date...\"></kendo-dateinput>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n    this.placeholder = null;\n    /**\n     * Determines whether the built-in min or max validators are to be enforced when a form is being validated.\n     */\n\n    this.rangeValidation = true;\n    /**\n     * @hidden\n     * Based on the min and max values, specifies whether the value will be auto-corrected while typing.\n     */\n\n    this.autoCorrect = false;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * For more information, refer to the article on\n     * [spinner buttons]({% slug spinbuttons_dateinput %}).\n     */\n\n    this.spinners = false;\n    /**\n     * @hidden\n     */\n\n    this.isPopupOpen = false;\n    /**\n     * @hidden\n     */\n\n    this.hasPopup = false;\n    /**\n     * Fires each time the user selects a new value.\n     * For more information, refer to the section on\n     * [events]({% slug overview_dateinput %}#toc-events).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user selects a new value.\n     * For more information, refer to the section on\n     * [events]({% slug overview_dateinput %}#toc-events).\n     */\n\n    this.valueUpdate = new EventEmitter();\n    /**\n     * Fires each time the user focuses the input element.\n     * For more information, refer to the section on\n     * [events]({% slug overview_dateinput %}#toc-events).\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-dateinput (focus)=\"handleFocus()\"></kendo-dateinput>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log(\"Component is focused\");\n     *   }\n     * }\n     * ```\n     *\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the input element gets blurred.\n     * For more information, refer to the section on\n     * [events]({% slug overview_dateinput %}#toc-events).\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-dateinput (blur)=\"handleBlur()\"></kendo-dateinput>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log(\"Component is blurred\");\n     *   }\n     * }\n     * ```\n     *\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    this.arrow = Arrow;\n    this.arrowDirection = Arrow.None;\n    this.formatSections = {\n      date: false,\n      time: false\n    };\n    this.hasMousedown = false;\n    this.focusedPriorToMousedown = false;\n    this.currentValue = \"\";\n    this.currentFormat = \"\";\n    this.backspace = false;\n    this.resetSegmentValue = true;\n    this.minValidateFn = noop;\n    this.maxValidateFn = noop;\n    this._value = null;\n    this._active = false;\n    this.kendoDate = null;\n    this.paste = false;\n    this.domEvents = [];\n    this.onControlChange = noop;\n    this.onControlTouched = noop;\n    this.onValidatorChange = noop;\n    this.symbolsMap = this.dateSymbolMap();\n    this.updateFormatSections();\n\n    if (this.pickerService) {\n      this.pickerService.input = this;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DateInputComponent, [{\n    key: \"isEmpty\",\n\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    value: function isEmpty() {\n      return !this.currentValue || !String(this.currentValue).trim();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"containsElement\",\n    value: function containsElement(element) {\n      var _this18 = this;\n\n      return Boolean(closest(element, function (node) {\n        return node === _this18.element.nativeElement;\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.verifyRange();\n\n      if (changes.min || changes.max || changes.rangeValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n        this.onValidatorChange();\n      }\n\n      if (changes.format) {\n        this.symbolsMap = this.dateSymbolMap();\n        this.updateFormatSections();\n      }\n\n      var isEqualToKendoDate = this.kendoDate && isEqual(this.value, this.kendoDate.getDateObject());\n\n      if (changes.format || !isEqualToKendoDate || changes.placeholder) {\n        this.kendoDate = this.getKendoDate(this.value);\n        this.updateElementValue(this.isActive);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.intlSubscription) {\n        this.intlSubscription.unsubscribe();\n      }\n\n      if (this.pickerService) {\n        this.pickerService.input = null;\n      }\n\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this19 = this;\n\n      this.kendoDate = this.getKendoDate(this.value);\n      this.updateElementValue();\n      this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n      this.control = this.injector.get(NgControl, null);\n\n      if (this.element) {\n        this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n        this.ngZone.runOutsideAngular(function () {\n          _this19.bindEvents();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    } //ngModel binding\n\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.verifyValue(value);\n      this.kendoDate = this.getKendoDate(value);\n      this.value = cloneDate(value);\n      this.updateElementValue(this.isActive);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"triggerChange\",\n    value: function triggerChange() {\n      var value = this.kendoDate.getDateObject();\n\n      if (+value !== +this.value) {\n        this.value = cloneDate(value);\n        this.notify();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify() {\n      var _this20 = this;\n\n      this.ngZone.run(function () {\n        _this20.onControlChange(cloneDate(_this20.value));\n\n        _this20.valueChange.emit(cloneDate(_this20.value));\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * Focuses the DateInput component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"dateinput.focus()\">Focus date input</button>\n     *  <kendo-dateinput #dateinput></kendo-dateinput>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var input = this.inputElement;\n\n      if (input) {\n        input.focus();\n        this.selectDateSegment(this.currentFormat[0]);\n      }\n    }\n    /**\n     * Blurs the DateInput component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var input = this.inputElement;\n\n      if (input) {\n        input.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleButtonClick\",\n    value: function handleButtonClick(offset) {\n      this.arrowDirection = Arrow.None;\n      this.modifyDateSegmentValue(offset);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"modifyDateSegmentValue\",\n    value: function modifyDateSegmentValue(offset) {\n      var caret = this.caret();\n      var symbol = this.currentFormat[caret[0]];\n      var step = (this.steps || {})[this.symbolsMap[symbol]] || 1;\n      this.kendoDate.modifyPart(symbol, offset * step);\n      this.putDateInRange();\n      this.updateElementValue(this.isActive);\n      this.triggerChange();\n      this.selectDateSegment(symbol);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"switchDateSegment\",\n    value: function switchDateSegment(offset) {\n      var caret = this.caret();\n\n      if (this.kendoDate.resetLeadingZero()) {\n        this.updateElementValue(this.isActive);\n      }\n\n      if (caret[0] < caret[1] && this.currentFormat[caret[0]] !== this.currentFormat[caret[1] - 1]) {\n        this.selectNearestSegment(offset > 0 ? caret[0] : caret[1] - 1);\n        this.resetSegmentValue = true;\n        return true;\n      }\n\n      var previousFormatSymbol = this.currentFormat[caret[0]];\n      var a = caret[0] + offset;\n\n      while (a > 0 && a < this.currentFormat.length) {\n        if (this.currentFormat[a] !== previousFormatSymbol && this.currentFormat[a] !== \"_\") {\n          break;\n        }\n\n        a += offset;\n      }\n\n      if (this.currentFormat[a] === \"_\") {\n        //there is not known symbol found\n        return false;\n      }\n\n      var b = a;\n\n      while (b >= 0 && b < this.currentFormat.length) {\n        if (this.currentFormat[b] !== this.currentFormat[a]) {\n          break;\n        }\n\n        b += offset;\n      }\n\n      if (a > b && (b + 1 !== caret[0] || a + 1 !== caret[1])) {\n        this.caret(b + 1, a + 1);\n        this.resetSegmentValue = true;\n        return true;\n      } else if (a < b && (a !== caret[0] || b !== caret[1])) {\n        this.caret(a, b);\n        this.resetSegmentValue = true;\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"selectDateSegment\",\n    value: function selectDateSegment(symbol) {\n      var begin = -1;\n      var end = 0;\n\n      for (var i = 0; i < this.currentFormat.length; i++) {\n        if (this.currentFormat[i] === symbol) {\n          end = i + 1;\n\n          if (begin === -1) {\n            begin = i;\n          }\n        }\n      }\n\n      if (begin < 0) {\n        begin = 0;\n      }\n\n      this.caret(0, 0);\n      this.caret(begin, end);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.hasMousedown = false;\n\n      if (this.isActive) {\n        var selectionPresent = this.inputElement.selectionStart !== this.inputElement.selectionEnd;\n        var placeholderToggled = isPresent(this.placeholder) && !this.kendoDate.hasValue() && !this.focusedPriorToMousedown; // focus first segment if the user hasn't selected something during mousedown and if the placeholder was just toggled\n\n        var selectFirstSegment = !selectionPresent && placeholderToggled;\n        var index = selectFirstSegment ? 0 : this.caret()[0];\n        this.selectNearestSegment(index);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleDragAndDrop\",\n    value: function handleDragAndDrop(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMousedown\",\n    value: function handleMousedown() {\n      this.hasMousedown = true;\n      this.focusedPriorToMousedown = this.isActive;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(args) {\n      var _this21 = this;\n\n      this.isActive = true;\n      this.updateElementValue();\n\n      if (!this.hasMousedown) {\n        this.caret(0, this.inputValue.length);\n      }\n\n      this.hasMousedown = false;\n\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(function () {\n          _this21.emitFocus(args);\n        });\n      } else {\n        this.emitFocus(args);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(args) {\n      var _this22 = this;\n\n      this.isActive = false;\n      this.resetSegmentValue = true;\n      this.kendoDate.resetLeadingZero();\n      this.updateElementValue();\n\n      if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n        this.ngZone.run(function () {\n          _this22.onControlTouched();\n\n          _this22.emitBlur(args);\n\n          _this22.cdr.markForCheck();\n        });\n      } else {\n        this.emitBlur(args);\n      }\n    }\n  }, {\n    key: \"getKendoDate\",\n    value: function getKendoDate(value) {\n      var _ref11 = this.kendoDate || {} || null,\n          leadingZero = _ref11.leadingZero;\n\n      var kendoDate = new KendoDate(this.intl, this.formatPlaceholder, this.format, value);\n      kendoDate.setLeadingZero(this.isActive ? leadingZero : null);\n      return kendoDate;\n    }\n  }, {\n    key: \"dateSymbolMap\",\n    value: function dateSymbolMap() {\n      var reducer = function reducer(map$$1, part) {\n        map$$1[part.pattern[0]] = part.type;\n        return map$$1;\n      };\n\n      return this.intl.splitDateFormat(this.format).reduce(reducer, {});\n    }\n  }, {\n    key: \"updateElementValue\",\n    value: function updateElementValue(isActive) {\n      var start = this.caret()[0]; //XXX: get caret position before input is updated\n\n      var texts = this.kendoDate.getTextAndFormat();\n      var showPlaceholder = !this.isActive && isPresent(this.placeholder) && !this.kendoDate.hasValue();\n      var input = this.inputElement;\n      this.currentFormat = texts[1];\n      this.currentValue = !showPlaceholder ? texts[0] : '';\n      this.renderer.setProperty(input, \"value\", this.currentValue);\n\n      if (input.placeholder !== this.placeholder) {\n        this.renderer.setProperty(input, \"placeholder\", this.placeholder);\n      }\n\n      if (isActive) {\n        this.selectNearestSegment(start);\n      }\n    }\n  }, {\n    key: \"caret\",\n    value: function caret(start) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n      var isPosition = start !== undefined;\n      var returnValue = [start, start];\n      var element = this.inputElement;\n\n      if (isPosition && (this.disabled || this.readonly)) {\n        return undefined;\n      }\n\n      try {\n        if (element.selectionStart !== undefined) {\n          if (isPosition) {\n            if (isDocumentAvailable() && document.activeElement !== element) {\n              element.focus();\n            }\n\n            element.setSelectionRange(start, end);\n          }\n\n          returnValue = [element.selectionStart, element.selectionEnd];\n        }\n      } catch (e) {\n        returnValue = [];\n      }\n\n      return returnValue;\n    }\n  }, {\n    key: \"selectNearestSegment\",\n    value: function selectNearestSegment(index) {\n      // Finds the nearest (in both directions) known part.\n      for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n        if (i < this.currentFormat.length && this.currentFormat[i] !== \"_\") {\n          this.selectDateSegment(this.currentFormat[i]);\n          return;\n        }\n\n        if (j >= 0 && this.currentFormat[j] !== \"_\") {\n          this.selectDateSegment(this.currentFormat[j]);\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"verifyRange\",\n    value: function verifyRange() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(\"The max value should be bigger than the min. See \".concat(MIN_DOC_LINK$1, \" and \").concat(MAX_DOC_LINK$1, \".\"));\n      }\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (value && !(value instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK$1, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"putDateInRange\",\n    value: function putDateInRange() {\n      var currentDate = this.kendoDate.getDateObject();\n      var candidate = dateInRange(currentDate, this.min, this.max);\n\n      if (this.autoCorrect && !isEqual(currentDate, candidate)) {\n        this.kendoDate = this.getKendoDate(candidate);\n      }\n    }\n  }, {\n    key: \"updateFormatSections\",\n    value: function updateFormatSections() {\n      this.formatSections = this.intl.splitDateFormat(this.format).reduce(function (_ref12, p) {\n        var date = _ref12.date,\n            time = _ref12.time;\n        return {\n          date: date || DATE_PART_REGEXP.test(p.type),\n          time: time || TIME_PART_REGEXP.test(p.type)\n        };\n      }, {\n        date: false,\n        time: false\n      });\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      this.updateFormatSections();\n      this.kendoDate = this.getKendoDate(this.value);\n      this.updateElementValue(this.isActive);\n    }\n  }, {\n    key: \"updateOnPaste\",\n    value: function updateOnPaste() {\n      var value = this.intl.parseDate(this.inputValue, this.format) || this.value;\n      var notify = +value !== +this.value;\n      this.writeValue(value);\n\n      if (notify) {\n        this.notify();\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var element = this.element.nativeElement;\n      var mousewheelHandler = this.handleMouseWheel.bind(this);\n      this.domEvents.push(this.renderer.listen(element, 'DOMMouseScroll', mousewheelHandler), this.renderer.listen(element, 'mousewheel', mousewheelHandler), this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)), this.renderer.listen(element, 'paste', this.handlePaste.bind(this)), this.renderer.listen(element, 'input', this.handleInput.bind(this)));\n    }\n  }, {\n    key: \"handleMouseWheel\",\n    value: function handleMouseWheel(event) {\n      if (this.disabled || this.readonly || !this.isActive) {\n        return;\n      }\n\n      event = window.event || event;\n\n      if (event.shiftKey) {\n        this.switchDateSegment((event.wheelDelta || -event.detail) > 0 ? -1 : 1);\n      } else {\n        this.modifyDateSegmentValue((event.wheelDelta || -event.detail) > 0 ? 1 : -1);\n      }\n\n      event.returnValue = false;\n\n      if (event.preventDefault) {\n        event.preventDefault();\n      }\n\n      if (event.stopPropagation) {\n        event.stopPropagation();\n      }\n    }\n  }, {\n    key: \"handlePaste\",\n    value: function handlePaste() {\n      this.paste = true;\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      if (this.disabled || this.readonly || event.altKey || event.ctrlKey || event.metaKey) {\n        return;\n      }\n\n      if (event.keyCode === Keys.Tab) {\n        var moved = this.switchDateSegment(event.shiftKey ? -1 : 1);\n\n        if (moved) {\n          event.preventDefault();\n        }\n\n        return;\n      }\n\n      if (event.keyCode === Keys.Backspace) {\n        this.backspace = true;\n        return;\n      }\n\n      switch (event.keyCode) {\n        case Keys.ArrowDown:\n          this.modifyDateSegmentValue(-1);\n          break;\n\n        case Keys.ArrowUp:\n          this.modifyDateSegmentValue(1);\n          break;\n\n        case Keys.ArrowRight:\n          this.switchDateSegment(1);\n          break;\n\n        case Keys.ArrowLeft:\n          this.switchDateSegment(-1);\n          break;\n\n        case Keys.Home:\n          this.selectNearestSegment(0);\n          break;\n\n        case Keys.End:\n          this.selectNearestSegment(this.inputValue.length);\n          break;\n\n        default:\n          return;\n        //skip the preventDefault if we didn't handled the keyCode\n      }\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput() {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      if (this.paste) {\n        this.updateOnPaste();\n        this.paste = false;\n        return;\n      }\n\n      var diff = approximateStringMatching(this.currentValue, this.currentFormat, this.inputValue, this.caret()[0]);\n      var navigationOnly = diff.length === 1 && diff[0][1] === \"_\";\n      var switchPart = false;\n\n      if (!navigationOnly) {\n        var parsedPart;\n\n        for (var i = 0; i < diff.length; i++) {\n          parsedPart = this.kendoDate.parsePart(diff[i][0], diff[i][1], this.resetSegmentValue);\n          switchPart = parsedPart.switchToNext;\n        }\n\n        var candidate = this.kendoDate.getDateObject();\n\n        if (this.value && candidate && !this.formatSections.date) {\n          this.kendoDate = this.getKendoDate(setTime(this.value, candidate));\n        }\n      }\n\n      this.resetSegmentValue = false;\n      this.putDateInRange();\n      this.updateElementValue(this.isActive);\n      this.triggerChange();\n\n      if (diff.length && diff[0][0] !== \"_\") {\n        this.selectDateSegment(diff[0][0]);\n      }\n\n      if (switchPart || navigationOnly) {\n        this.switchDateSegment(1);\n      }\n\n      if (this.backspace) {\n        this.switchDateSegment(-1);\n      }\n\n      this.backspace = false;\n    }\n  }, {\n    key: \"emitFocus\",\n    value: function emitFocus(args) {\n      this.onFocus.emit();\n\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit(args);\n      }\n    }\n  }, {\n    key: \"emitBlur\",\n    value: function emitBlur(args) {\n      this.onBlur.emit();\n\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n    }\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Specifies the value of the DateInput component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this.verifyValue(value);\n\n      if (this.autoCorrect && !isInRange(value, this.min, this.max)) {\n        return;\n      }\n\n      this._value = cloneDate(value);\n      this.valueUpdate.emit(cloneDate(value));\n    },\n    get: function get() {\n      return this._value;\n    }\n  }, {\n    key: \"wrapperClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"disabledClass\",\n    get: function get() {\n      return this.disabled;\n    }\n  }, {\n    key: \"inputElement\",\n    get: function get() {\n      return this.dateInput ? this.dateInput.nativeElement : null;\n    }\n  }, {\n    key: \"inputValue\",\n    get: function get() {\n      return (this.inputElement || {}).value || '';\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n\n      if (!this.wrap) {\n        return;\n      }\n\n      if (!isPresent(this.pickerService)) {\n        var element = this.wrap.nativeElement;\n\n        if (value) {\n          this.renderer.addClass(element, 'k-state-focused');\n        } else {\n          this.renderer.removeClass(element, 'k-state-focused');\n        }\n      }\n    }\n  }]);\n\n  return DateInputComponent;\n}();\n\nDateInputComponent.ɵfac = function DateInputComponent_Factory(t) {\n  return new (t || DateInputComponent)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PickerService, 8));\n};\n\nDateInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateInputComponent,\n  selectors: [[\"kendo-dateinput\"]],\n  viewQuery: function DateInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c6, true);\n      ɵngcc0.ɵɵviewQuery(_c7, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dateInput = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrap = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function DateInputComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.wrapperClass)(\"k-dateinput\", ctx.wrapperClass)(\"k-state-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    title: \"title\",\n    tabindex: \"tabindex\",\n    role: \"role\",\n    ariaReadOnly: \"ariaReadOnly\",\n    format: \"format\",\n    placeholder: \"placeholder\",\n    rangeValidation: \"rangeValidation\",\n    autoCorrect: \"autoCorrect\",\n    spinners: \"spinners\",\n    isPopupOpen: \"isPopupOpen\",\n    hasPopup: \"hasPopup\",\n    tabIndex: \"tabIndex\",\n    value: \"value\",\n    formatPlaceholder: \"formatPlaceholder\",\n    steps: \"steps\",\n    max: \"max\",\n    min: \"min\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    valueUpdate: \"valueUpdate\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendo-dateinput\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return DateInputComponent;\n    }),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () {\n      return DateInputComponent;\n    }),\n    multi: true\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dateinput'\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return DateInputComponent;\n    })\n  }, LocalizationService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 21,\n  consts: function consts() {\n    var i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the **Increment** button in the DateInput\n       * @meaning kendo.dateinput.increment\n       */\n      var MSG_EXTERNAL_589112377451589685$$DIST_FESM2015_INDEX_JS_9 = goog.getMsg(\"Increase value\");\n      i18n_8 = MSG_EXTERNAL_589112377451589685$$DIST_FESM2015_INDEX_JS_9;\n    } else {\n      i18n_8 = $localize(_templateObject2());\n    }\n\n    var i18n_10;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the **Decrement** button in the DateInput\n       * @meaning kendo.dateinput.decrement\n       */\n      var MSG_EXTERNAL_6980524091606682769$$DIST_FESM2015_INDEX_JS_11 = goog.getMsg(\"Decrease value\");\n      i18n_10 = MSG_EXTERNAL_6980524091606682769$$DIST_FESM2015_INDEX_JS_11;\n    } else {\n      i18n_10 = $localize(_templateObject3());\n    }\n\n    return [[\"kendoDateInputLocalizedMessages\", \"\", 6, \"increment\", \"decrement\"], [\"increment\", i18n_8, \"decrement\", i18n_10], [1, \"k-dateinput-wrap\"], [\"wrap\", \"\"], [\"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"spellcheck\", \"false\", 1, \"k-input\", 3, \"id\", \"title\", \"tabindex\", \"disabled\", \"readonly\", \"placeholder\", \"kendoEventsOutsideAngular\", \"scope\"], [\"dateInput\", \"\"], [\"class\", \"k-select\", 3, \"mousedown\", 4, \"ngIf\"], [1, \"k-select\", 3, \"mousedown\"], [1, \"k-link\", \"k-link-increase\", 3, \"title\", \"mousedown\", \"mouseleave\", \"click\"], [1, \"k-icon\", \"k-i-arrow-n\"], [1, \"k-link\", \"k-link-decrease\", 3, \"title\", \"click\", \"mousedown\", \"mouseleave\"], [1, \"k-icon\", \"k-i-arrow-s\"]];\n  },\n  template: function DateInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵelement(4, \"input\", 4, 5);\n      ɵngcc0.ɵɵtemplate(6, DateInputComponent_span_6_Template, 5, 8, \"span\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.focusableId)(\"title\", ctx.title)(\"tabindex\", ctx.tabindex)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"placeholder\", ctx.placeholder)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction7(13, _c12, ctx.handleClick, ctx.handleFocus, ctx.handleMousedown, ctx.handleMousedown, ctx.handleDragAndDrop, ctx.handleDragAndDrop, ctx.handleBlur))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-readonly\", ctx.ariaReadOnly)(\"aria-expanded\", ctx.isPopupOpen)(\"aria-haspopup\", ctx.hasPopup);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n    }\n  },\n  directives: function directives() {\n    return [DateInputLocalizedMessagesDirective, ɵngcc2.EventsOutsideAngularDirective, ɵngcc1.NgIf];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nDateInputComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: IntlService\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Injector\n  }, {\n    type: LocalizationService\n  }, {\n    type: PickerService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nDateInputComponent.propDecorators = {\n  focusableId: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  role: [{\n    type: Input\n  }],\n  ariaReadOnly: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  steps: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  autoCorrect: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  spinners: [{\n    type: Input\n  }],\n  isPopupOpen: [{\n    type: Input\n  }],\n  hasPopup: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  valueUpdate: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  dateInput: [{\n    type: ViewChild,\n    args: ['dateInput', {\n      static: true\n    }]\n  }],\n  wrap: [{\n    type: ViewChild,\n    args: ['wrap']\n  }],\n  wrapperClass: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-dateinput']\n  }],\n  disabledClass: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateInputComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-dateinput',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return DateInputComponent;\n        }),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(function () {\n          return DateInputComponent;\n        }),\n        multi: true\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dateinput'\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return DateInputComponent;\n        })\n      }, LocalizationService],\n      selector: 'kendo-dateinput',\n      template: \"\\n    <ng-container kendoDateInputLocalizedMessages\\n        i18n-increment=\\\"kendo.dateinput.increment|The label for the **Increment** button in the DateInput\\\"\\n        increment=\\\"Increase value\\\"\\n\\n        i18n-decrement=\\\"kendo.dateinput.decrement|The label for the **Decrement** button in the DateInput\\\"\\n        decrement=\\\"Decrease value\\\"\\n    >\\n    </ng-container>\\n    <span class=\\\"k-dateinput-wrap\\\" #wrap>\\n        <input\\n            #dateInput\\n            autocomplete=\\\"off\\\"\\n            autocorrect=\\\"off\\\"\\n            autocapitalize=\\\"off\\\"\\n            spellcheck=\\\"false\\\"\\n            class=\\\"k-input\\\"\\n            [attr.role]=\\\"role\\\"\\n            [attr.aria-readonly]=\\\"ariaReadOnly\\\"\\n            [id]=\\\"focusableId\\\"\\n            [title]=\\\"title\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [readonly]=\\\"readonly\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            [attr.aria-expanded]=\\\"isPopupOpen\\\"\\n            [attr.aria-haspopup]=\\\"hasPopup\\\"\\n            [kendoEventsOutsideAngular]=\\\"{\\n                click: handleClick,\\n                focus: handleFocus,\\n                mousedown: handleMousedown,\\n                touchstart: handleMousedown,\\n                dragstart: handleDragAndDrop,\\n                drop: handleDragAndDrop,\\n                blur: handleBlur\\n            }\\\"\\n            [scope]=\\\"this\\\"\\n            />\\n        <span *ngIf=\\\"spinners\\\" class=\\\"k-select\\\" (mousedown)=\\\"$event.preventDefault()\\\">\\n            <span\\n                class=\\\"k-link k-link-increase\\\"\\n                [class.k-state-active]=\\\"arrowDirection === arrow.Up\\\"\\n                (mousedown)=\\\"arrowDirection = arrow.Up\\\"\\n                (mouseleave)=\\\"arrowDirection = arrow.None\\\"\\n                (click)=\\\"handleButtonClick(1)\\\"\\n                [title]=\\\"localization.get('increment')\\\"\\n                [attr.aria-label]=\\\"localization.get('increment')\\\">\\n                <span class=\\\"k-icon k-i-arrow-n\\\"></span>\\n            </span>\\n            <span\\n                class=\\\"k-link k-link-decrease\\\"\\n                (click)=\\\"handleButtonClick(-1)\\\"\\n                [class.k-state-active]=\\\"arrowDirection === arrow.Down\\\"\\n                (mousedown)=\\\"arrowDirection = arrow.Down\\\"\\n                (mouseleave)=\\\"arrowDirection = arrow.None\\\"\\n                [title]=\\\"localization.get('decrement')\\\"\\n                [attr.aria-label]=\\\"localization.get('decrement')\\\">\\n                <span class=\\\"k-icon k-i-arrow-s\\\"></span>\\n            </span>\\n        </span>\\n    </span>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ChangeDetectorRef\n    }, {\n      type: IntlService\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Injector\n    }, {\n      type: LocalizationService\n    }, {\n      type: PickerService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    ariaReadOnly: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    autoCorrect: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    isPopupOpen: [{\n      type: Input\n    }],\n    hasPopup: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    valueUpdate: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    wrapperClass: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-dateinput']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    dateInput: [{\n      type: ViewChild,\n      args: ['dateInput', {\n        static: true\n      }]\n    }],\n    wrap: [{\n      type: ViewChild,\n      args: ['wrap']\n    }]\n  });\n})();\n/**\n * A preventable event instance which is triggered by the `open` and `close` events.\n */\n\n\nvar PreventableEvent = /*#__PURE__*/function () {\n  function PreventableEvent() {\n    _classCallCheck(this, PreventableEvent);\n\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n\n\n  _createClass(PreventableEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n\n  }, {\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.prevented;\n    }\n  }]);\n\n  return PreventableEvent;\n}();\n/**\n * @hidden\n */\n\n\nvar TOUCH_ENABLED = new InjectionToken('dateinputs-touch-enabled');\n/**\n * @hidden\n */\n\nvar disabledDatesValidator = function disabledDatesValidator(isDateDisabled) {\n  return function (control) {\n    if (!isDateDisabled || !control.value) {\n      return null;\n    }\n\n    var error = {\n      disabledDate: true\n    };\n    return isDateDisabled(control.value) ? error : null;\n  };\n};\n/* tslint:disable:max-line-length */\n\n\nvar MIN_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-min';\nvar MAX_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-max';\nvar VALUE_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/datepicker/#toc-using-with-json';\n/**\n * Represents the [Kendo UI DatePicker component for Angular]({% slug overview_datepicker %}#toc-basic-usage).\n */\n\nvar DatePickerComponent = /*#__PURE__*/function () {\n  function DatePickerComponent(zone, localization, cdr, popupService, element, renderer, injector, pickerService, disabledDatesService, touchEnabled$$1) {\n    _classCallCheck(this, DatePickerComponent);\n\n    this.zone = zone;\n    this.localization = localization;\n    this.cdr = cdr;\n    this.popupService = popupService;\n    this.element = element;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.pickerService = pickerService;\n    this.disabledDatesService = disabledDatesService;\n    this.touchEnabled = touchEnabled$$1;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Defines the active view that the Calendar initially renders\n     * ([see example]({% slug activeview_datepicker %})).\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the bottommost Calendar view to which the user can navigate\n     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n     */\n\n    this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the topmost Calendar view to which the user can navigate\n     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n     */\n\n    this.topView = CalendarViewEnum[CalendarViewEnum.century];\n    /**\n     * Sets or gets the `disabled` property of the DatePicker and determines whether the component is active\n     * ([see example]({% slug disabled_datepicker %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the DatePicker\n     * ([see example]({% slug readonly_datepicker %}#toc-read-only-datepicker)).\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the read-only state of the DatePicker input field\n     * ([see example]({% slug readonly_datepicker %}#toc-read-only-input)).\n     *\n     * > Note that if you set the [`readonly`]({% slug api_dateinputs_datepickercomponent %}#toc-readonly) property value to `true`,\n     * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n     */\n\n    this.readOnlyInput = false;\n    /**\n     * Sets or gets the `navigation` property of the Calendar\n     * and determines whether the navigation side-bar is displayed.\n     * ([see example]({% slug sidebar_datepicker %})).\n     */\n\n    this.navigation = true;\n    /**\n     * Specifies the smallest valid date\n     * ([see example]({% slug dateranges_datepicker %})).\n     */\n\n    this.min = cloneDate(MIN_DATE);\n    /**\n     * Specifies the biggest valid date\n     * ([see example]({% slug dateranges_datepicker %})).\n     */\n\n    this.max = cloneDate(MAX_DATE);\n    /**\n     * Specifies the focused date of the Calendar component\n     * ([see example]({% slug dates_datepicker %})).\n     */\n\n    this.focusedDate = null;\n    /**\n     * Specifies the date format that is used to display the input value\n     * ([see example]({% slug formats_datepicker %})).\n     */\n\n    this.format = \"d\";\n    /**\n     * Specifies the hint the DatePicker displays when its value is `null`.\n     * ([more information and exaples]({% slug placeholders_datepicker %})).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker placeholder=\"Enter birth date...\"></kendo-datepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n    this.placeholder = null;\n    /**\n     * Sets or gets the `tabindex` property of the DatePicker.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Sets the title of the input element of the DatePicker.\n     */\n\n    this.title = \"\";\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n\n    this.rangeValidation = true;\n    /**\n     * Determines whether the built-in validator for disabled\n     * date ranges is enforced when validating a form\n     * ([see example]({% slug disabled_dates_datepicker %}#toc-validation)).\n     */\n\n    this.disabledDatesValidation = true;\n    /**\n     * Determines whether to display a week number column in the `month` view of the Calendar\n     * ([see example]({% slug weeknumcolumn_datepicker %})).\n     */\n\n    this.weekNumber = false;\n    /**\n     * Fires each time the user selects a new value\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user focuses the input element\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker (focus)=\"handleFocus()\"></kendo-datepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log(\"Component is focused\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the input element gets blurred\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker (blur)=\"handleBlur()\"></kendo-datepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log(\"Component is blurred\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.wrapperClasses = true;\n    this.popupUID = guid();\n    this._popupSettings = {\n      animate: true\n    };\n    this._show = false;\n    this._value = null;\n    this._active = false;\n    this.onControlChange = noop;\n    this.onControlTouched = noop;\n    this.onValidatorChange = noop;\n    this.minValidateFn = noop;\n    this.maxValidateFn = noop;\n    this.disabledDatesValidateFn = noop;\n    this.resolvedPromise = Promise.resolve(null);\n    this.domEvents = [];\n    this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n    this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n    this.pickerSubscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleSameSelection.bind(this)));\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DatePickerComponent, [{\n    key: \"isEmpty\",\n\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    value: function isEmpty() {\n      return !this.value && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this23 = this;\n\n      this.localizationChangeSubscription = this.localization.changes.subscribe(function () {\n        return _this23.cdr.markForCheck();\n      });\n      this.control = this.injector.get(NgControl, null);\n\n      if (this.element) {\n        this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n        this.zone.runOutsideAngular(function () {\n          _this23.bindEvents();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.verifySettings();\n\n      if (changes.min || changes.max || changes.rangeValidation || changes.disabledDatesValidation || changes.disabledDates) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n        this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop;\n        this.onValidatorChange();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.isActive = false;\n      this.show = false;\n\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n      this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"writeValue\",\n\n    /**\n     * @hidden\n     */\n    value: function writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.cdr.markForCheck();\n\n      if (!value && this.input) {\n        this.input.placeholder = this.placeholder;\n        this.input.writeValue(value);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * Focuses the DatePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"datepicker.focus()\">Focus date picker</button>\n     *  <kendo-datepicker #datepicker></kendo-datepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n    /**\n     * Blurs the DatePicker component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      (this.calendar || this.input)['blur'](); //tslint:disable-line:no-string-literal\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(show) {\n      var _this24 = this;\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      this.resolvedPromise.then(function () {\n        _this24._toggle(show === undefined ? !_this24.show : show);\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleIconClick\",\n    value: function handleIconClick(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.focusInput(); //XXX: explicitly call the handleFocus handler here\n      //due to async IE focus event\n\n      this.handleFocus();\n      this.show = !this.show;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMousedown\",\n    value: function handleMousedown(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.cdr.markForCheck();\n      this.focusInput();\n      this.value = value;\n      this.show = false;\n      this.onControlChange(cloneDate(value));\n      this.valueChange.emit(cloneDate(value));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(value) {\n      this.handleChange(this.input.formatSections.time ? value : this.mergeTime(value));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"mergeTime\",\n\n    /**\n     * @hidden\n     */\n    value: function mergeTime(value) {\n      return this.value && value ? setTime(value, this.value) : value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(e) {\n      var altKey = e.altKey,\n          keyCode = e.keyCode;\n\n      if (keyCode === Keys.Escape) {\n        this.show = false;\n      }\n\n      if (altKey) {\n        if (keyCode === Keys.ArrowDown && !this.show) {\n          this.show = true;\n        }\n\n        if (keyCode === Keys.ArrowUp) {\n          this.show = false;\n        }\n      }\n\n      if (keyCode === Keys.Tab && this.show && this.calendar.isActive) {\n        this.input.focus();\n        this.show = false;\n      }\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(show) {\n      var event = new PreventableEvent();\n\n      if (!this._show && show) {\n        this.open.emit(event);\n      } else if (this._show && !show) {\n        this.close.emit(event);\n      }\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      this._toggle(show);\n\n      this.toggleFocus();\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(show) {\n      var _this25 = this;\n\n      if (show === this._show) {\n        return;\n      }\n\n      this._show = show;\n\n      if (show) {\n        var direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: this.wrapper,\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.popupSettings.animate,\n          appendTo: this.appendTo,\n          content: this.popupTemplate,\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          popupClass: this.popupClasses,\n          positionMode: 'absolute'\n        });\n        this.popupRef.popupElement.setAttribute('id', this.popupUID);\n        this.subscription = this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n          return _this25.show = false;\n        });\n      } else {\n        this.popupRef.close();\n        this.popupRef = null;\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"focusInput\",\n    value: function focusInput() {\n      if (this.touchEnabled) {\n        return;\n      }\n\n      this.input.focus();\n    }\n  }, {\n    key: \"toggleFocus\",\n    value: function toggleFocus() {\n      if (!this.isActive) {\n        return;\n      }\n\n      if (this.show) {\n        if (!this.calendar) {\n          this.cdr.detectChanges();\n        }\n\n        if (this.calendar) {\n          this.calendar.focus();\n        }\n      } else if (!this.touchEnabled) {\n        this.input.focus();\n      } else if (!this.input.isActive) {\n        this.handleBlur();\n      }\n    }\n  }, {\n    key: \"verifySettings\",\n    value: function verifySettings() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(\"The max value should be bigger than the min. See \".concat(MIN_DOC_LINK$2, \" and \").concat(MAX_DOC_LINK$2, \".\"));\n      }\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (value && !(value instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK$2, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n\n      if (isWindowAvailable()) {\n        this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n      }\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      var _this26 = this;\n\n      if (this.isActive) {\n        return;\n      }\n\n      this.isActive = true;\n\n      if (hasObservers(this.onFocus)) {\n        this.zone.run(function () {\n          _this26.onFocus.emit();\n        });\n      }\n    }\n  }, {\n    key: \"handleWindowBlur\",\n    value: function handleWindowBlur() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.show = false;\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(args) {\n      var _this27 = this;\n\n      var currentTarget = args && currentFocusTarget(args);\n\n      if (currentTarget && (this.input.containsElement(currentTarget) || this.calendar && this.calendar.containsElement(currentTarget))) {\n        return;\n      }\n\n      if (hasObservers(this.onBlur) || this.show && hasObservers(this.close) || requiresZoneOnBlur(this.control)) {\n        this.zone.run(function () {\n          _this27.blurComponent();\n\n          _this27.cdr.markForCheck();\n        });\n      } else {\n        this.blurComponent();\n      }\n    }\n  }, {\n    key: \"blurComponent\",\n    value: function blurComponent() {\n      this.isActive = false; // order is important ¯\\_(ツ)_/¯\n\n      this.show = false;\n      this.cdr.detectChanges();\n      this.onControlTouched();\n      this.onBlur.emit();\n    }\n  }, {\n    key: \"handleSameSelection\",\n    value: function handleSameSelection() {\n      if (this.show) {\n        this.focusInput();\n        this.show = false;\n      }\n    }\n  }, {\n    key: \"cellTemplateRef\",\n    set: function set(template) {\n      this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"monthCellTemplateRef\",\n    set: function set(template) {\n      this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"yearCellTemplateRef\",\n    set: function set(template) {\n      this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"decadeCellTemplateRef\",\n    set: function set(template) {\n      this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"centuryCellTemplateRef\",\n    set: function set(template) {\n      this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"weekNumberTemplateRef\",\n    set: function set(template) {\n      this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"headerTitleTemplateRef\",\n    set: function set(template) {\n      this.headerTitleTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"navigationItemTemplateRef\",\n    set: function set(template) {\n      this.navigationItemTemplate = template;\n    }\n    /**\n     * Configures the popup options of the DatePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * Specifies the value of the DatePicker component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the dates of the DatePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datepicker %})).\n     */\n\n  }, {\n    key: \"disabledDates\",\n    set: function set(value) {\n      this._disabledDates = value;\n      this.disabledDatesService.initialize(value);\n    },\n    get: function get() {\n      return this._disabledDates;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"disabledClass\",\n    get: function get() {\n      return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"inputRole\",\n    get: function get() {\n      return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n\n      if (!this.wrapper) {\n        return;\n      }\n\n      var element = this.wrapper.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(element, 'k-state-focused');\n      } else {\n        this.renderer.removeClass(element, 'k-state-focused');\n      }\n    }\n  }, {\n    key: \"show\",\n    get: function get() {\n      return this._show;\n    },\n    set: function set(show) {\n      var _this28 = this;\n\n      if (show && (this.disabled || this.readonly)) {\n        return;\n      }\n\n      var skipZone = !show && (!this._show || !hasObservers(this.close));\n\n      if (!skipZone) {\n        this.zone.run(function () {\n          _this28.togglePopup(show);\n        });\n      } else {\n        this.togglePopup(show);\n      }\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this.show;\n    }\n  }, {\n    key: \"popupClasses\",\n    get: function get() {\n      return ['k-calendar-container', 'k-group', 'k-reset'].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n  }, {\n    key: \"input\",\n    get: function get() {\n      return this.pickerService.input;\n    }\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this.pickerService.calendar;\n    }\n  }]);\n\n  return DatePickerComponent;\n}();\n\nDatePickerComponent.ɵfac = function DatePickerComponent_Factory(t) {\n  return new (t || DatePickerComponent)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(PickerService), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nDatePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DatePickerComponent,\n  selectors: [[\"kendo-datepicker\"]],\n  contentQueries: function DatePickerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NavigationItemTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.navigationItemTemplate = _t.first);\n    }\n  },\n  viewQuery: function DatePickerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c13, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c14, true);\n      ɵngcc0.ɵɵviewQuery(_c15, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function DatePickerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.wrapperClasses)(\"k-datepicker\", ctx.wrapperClasses)(\"k-state-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    readOnlyInput: \"readOnlyInput\",\n    navigation: \"navigation\",\n    min: \"min\",\n    max: \"max\",\n    focusedDate: \"focusedDate\",\n    format: \"format\",\n    placeholder: \"placeholder\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    rangeValidation: \"rangeValidation\",\n    disabledDatesValidation: \"disabledDatesValidation\",\n    weekNumber: \"weekNumber\",\n    cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n    monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n    yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n    decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n    centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n    weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n    headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n    navigationItemTemplateRef: [\"navigationItemTemplate\", \"navigationItemTemplateRef\"],\n    popupSettings: \"popupSettings\",\n    value: \"value\",\n    tabIndex: \"tabIndex\",\n    disabledDates: \"disabledDates\",\n    formatPlaceholder: \"formatPlaceholder\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    open: \"open\",\n    close: \"close\"\n  },\n  exportAs: [\"kendo-datepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return DatePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () {\n      return DatePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return DatePickerComponent;\n    })\n  }, LocalizationService, PickerService, DisabledDatesService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.datepicker'\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 24,\n  consts: function consts() {\n    var i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the today button in the calendar header\n       * @meaning kendo.datepicker.today\n       */\n      var MSG_EXTERNAL_1910980355989755624$$DIST_FESM2015_INDEX_JS_17 = goog.getMsg(\"TODAY\");\n      i18n_16 = MSG_EXTERNAL_1910980355989755624$$DIST_FESM2015_INDEX_JS_17;\n    } else {\n      i18n_16 = $localize(_templateObject4());\n    }\n\n    var i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the toggle button in the datepicker component\n       * @meaning kendo.datepicker.toggle\n       */\n      var MSG_EXTERNAL_4817467473728423164$$DIST_FESM2015_INDEX_JS_19 = goog.getMsg(\"Toggle calendar\");\n      i18n_18 = MSG_EXTERNAL_4817467473728423164$$DIST_FESM2015_INDEX_JS_19;\n    } else {\n      i18n_18 = $localize(_templateObject5());\n    }\n\n    return [[\"kendoDatePickerLocalizedMessages\", \"\", 6, \"today\", \"toggle\"], [\"today\", i18n_16, \"toggle\", i18n_18], [1, \"k-picker-wrap\"], [\"wrapper\", \"\"], [3, \"role\", \"focusableId\", \"hasPopup\", \"isPopupOpen\", \"disabled\", \"readonly\", \"ariaReadOnly\", \"tabindex\", \"title\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"value\", \"valueChange\"], [\"input\", \"\"], [\"role\", \"button\", 1, \"k-select\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-icon\", \"k-i-calendar\"], [\"container\", \"\"], [\"popupTemplate\", \"\"], [3, \"min\", \"max\", \"navigation\", \"activeView\", \"bottomView\", \"topView\", \"weekNumber\", \"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"navigationItemTemplate\", \"focusedDate\", \"value\", \"kendoEventsOutsideAngular\", \"scope\", \"disabledDates\", \"valueChange\"], [\"calendar\", \"\"], [3, \"today\"]];\n  },\n  template: function DatePickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵelementStart(4, \"kendo-dateinput\", 4, 5);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function DatePickerComponent_Template_kendo_dateinput_valueChange_4_listener($event) {\n        return ctx.handleInputChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"span\", 6);\n      ɵngcc0.ɵɵelement(7, \"span\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementContainer(8, null, 8);\n      ɵngcc0.ɵɵtemplate(10, DatePickerComponent_ng_template_10_Template, 4, 23, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"role\", ctx.inputRole)(\"focusableId\", ctx.focusableId)(\"hasPopup\", true)(\"isPopupOpen\", ctx.show)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"ariaReadOnly\", ctx.readonly)(\"tabindex\", ctx.tabindex)(\"title\", ctx.title)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.min)(\"max\", ctx.max)(\"value\", ctx.value);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(21, _c21, ctx.handleIconClick, ctx.handleMousedown))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"));\n    }\n  },\n  directives: function directives() {\n    return [DatePickerLocalizedMessagesDirective, DateInputComponent, ɵngcc2.EventsOutsideAngularDirective, CalendarComponent, CalendarCustomMessagesComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nDatePickerComponent.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PopupService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: PickerService\n  }, {\n    type: DisabledDatesService\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }];\n};\n\nDatePickerComponent.propDecorators = {\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper']\n  }],\n  cellTemplate: [{\n    type: ContentChild,\n    args: [CellTemplateDirective]\n  }],\n  cellTemplateRef: [{\n    type: Input,\n    args: ['cellTemplate']\n  }],\n  monthCellTemplate: [{\n    type: ContentChild,\n    args: [MonthCellTemplateDirective]\n  }],\n  monthCellTemplateRef: [{\n    type: Input,\n    args: ['monthCellTemplate']\n  }],\n  yearCellTemplate: [{\n    type: ContentChild,\n    args: [YearCellTemplateDirective]\n  }],\n  yearCellTemplateRef: [{\n    type: Input,\n    args: ['yearCellTemplate']\n  }],\n  decadeCellTemplate: [{\n    type: ContentChild,\n    args: [DecadeCellTemplateDirective]\n  }],\n  decadeCellTemplateRef: [{\n    type: Input,\n    args: ['decadeCellTemplate']\n  }],\n  centuryCellTemplate: [{\n    type: ContentChild,\n    args: [CenturyCellTemplateDirective]\n  }],\n  centuryCellTemplateRef: [{\n    type: Input,\n    args: ['centuryCellTemplate']\n  }],\n  weekNumberTemplate: [{\n    type: ContentChild,\n    args: [WeekNumberCellTemplateDirective]\n  }],\n  weekNumberTemplateRef: [{\n    type: Input,\n    args: ['weekNumberTemplate']\n  }],\n  headerTitleTemplate: [{\n    type: ContentChild,\n    args: [HeaderTitleTemplateDirective]\n  }],\n  headerTitleTemplateRef: [{\n    type: Input,\n    args: ['headerTitleTemplate']\n  }],\n  navigationItemTemplate: [{\n    type: ContentChild,\n    args: [NavigationItemTemplateDirective]\n  }],\n  navigationItemTemplateRef: [{\n    type: Input,\n    args: ['navigationItemTemplate']\n  }],\n  focusableId: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  bottomView: [{\n    type: Input\n  }],\n  topView: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  readOnlyInput: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  navigation: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  disabledDates: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  disabledDatesValidation: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  wrapperClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-datepicker']\n  }],\n  disabledClass: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatePickerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-datepicker',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return DatePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(function () {\n          return DatePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return DatePickerComponent;\n        })\n      }, LocalizationService, PickerService, DisabledDatesService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.datepicker'\n      }],\n      selector: 'kendo-datepicker',\n      template: \"\\n        <ng-container kendoDatePickerLocalizedMessages\\n            i18n-today=\\\"kendo.datepicker.today|The label for the today button in the calendar header\\\"\\n            today=\\\"TODAY\\\"\\n\\n            i18n-toggle=\\\"kendo.datepicker.toggle|The label for the toggle button in the datepicker component\\\"\\n            toggle=\\\"Toggle calendar\\\"\\n        >\\n        </ng-container>\\n        <span #wrapper\\n            class=\\\"k-picker-wrap\\\"\\n            [class.k-state-disabled]=\\\"disabled\\\"\\n        >\\n            <kendo-dateinput\\n                #input\\n                [role]=\\\"inputRole\\\"\\n                [focusableId]=\\\"focusableId\\\"\\n                [hasPopup]=\\\"true\\\"\\n                [isPopupOpen]=\\\"show\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [readonly]=\\\"readonly || readOnlyInput\\\"\\n                [ariaReadOnly]=\\\"readonly\\\"\\n                [tabindex]=\\\"tabindex\\\"\\n                [title]=\\\"title\\\"\\n                [format]=\\\"format\\\"\\n                [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [value]=\\\"value\\\"\\n                (valueChange)=\\\"handleInputChange($event)\\\"\\n            ></kendo-dateinput>\\n            <span class=\\\"k-select\\\"\\n                role=\\\"button\\\"\\n                [attr.title]=\\\"localization.get('toggle')\\\"\\n                [attr.aria-label]=\\\"localization.get('toggle')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    click: handleIconClick,\\n                    mousedown: handleMousedown\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n            >\\n                <span class=\\\"k-icon k-i-calendar\\\"></span>\\n            </span>\\n        </span>\\n        <ng-container #container></ng-container>\\n        <ng-template #popupTemplate>\\n            <kendo-calendar\\n                #calendar\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [navigation]=\\\"navigation\\\"\\n                [activeView]=\\\"activeView\\\"\\n                [bottomView]=\\\"bottomView\\\"\\n                [topView]=\\\"topView\\\"\\n                [weekNumber]=\\\"weekNumber\\\"\\n                [cellTemplate]=\\\"cellTemplate\\\"\\n                [monthCellTemplate]=\\\"monthCellTemplate\\\"\\n                [yearCellTemplate]=\\\"yearCellTemplate\\\"\\n                [decadeCellTemplate]=\\\"decadeCellTemplate\\\"\\n                [centuryCellTemplate]=\\\"centuryCellTemplate\\\"\\n                [weekNumberTemplate]=\\\"weekNumberTemplate\\\"\\n                [headerTitleTemplate]=\\\"headerTitleTemplate\\\"\\n                [navigationItemTemplate]=\\\"navigationItemTemplate\\\"\\n                [focusedDate]=\\\"focusedDate\\\"\\n                [value]=\\\"value\\\"\\n                (valueChange)=\\\"handleChange(mergeTime($event))\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    keydown: handleKeydown\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n                [disabledDates]=\\\"disabledDates\\\"\\n            >\\n                <kendo-calendar-messages [today]=\\\"localization.get('today')\\\">\\n                </kendo-calendar-messages>\\n            </kendo-calendar>\\n        <ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: NgZone\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PopupService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: Injector\n    }, {\n      type: PickerService\n    }, {\n      type: DisabledDatesService\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    readOnlyInput: [{\n      type: Input\n    }],\n    navigation: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    disabledDatesValidation: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    wrapperClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-datepicker']\n    }],\n    cellTemplateRef: [{\n      type: Input,\n      args: ['cellTemplate']\n    }],\n    cellTemplate: [{\n      type: ContentChild,\n      args: [CellTemplateDirective]\n    }],\n    monthCellTemplateRef: [{\n      type: Input,\n      args: ['monthCellTemplate']\n    }],\n    monthCellTemplate: [{\n      type: ContentChild,\n      args: [MonthCellTemplateDirective]\n    }],\n    yearCellTemplateRef: [{\n      type: Input,\n      args: ['yearCellTemplate']\n    }],\n    yearCellTemplate: [{\n      type: ContentChild,\n      args: [YearCellTemplateDirective]\n    }],\n    decadeCellTemplateRef: [{\n      type: Input,\n      args: ['decadeCellTemplate']\n    }],\n    decadeCellTemplate: [{\n      type: ContentChild,\n      args: [DecadeCellTemplateDirective]\n    }],\n    centuryCellTemplateRef: [{\n      type: Input,\n      args: ['centuryCellTemplate']\n    }],\n    centuryCellTemplate: [{\n      type: ContentChild,\n      args: [CenturyCellTemplateDirective]\n    }],\n    weekNumberTemplateRef: [{\n      type: Input,\n      args: ['weekNumberTemplate']\n    }],\n    weekNumberTemplate: [{\n      type: ContentChild,\n      args: [WeekNumberCellTemplateDirective]\n    }],\n    headerTitleTemplateRef: [{\n      type: Input,\n      args: ['headerTitleTemplate']\n    }],\n    headerTitleTemplate: [{\n      type: ContentChild,\n      args: [HeaderTitleTemplateDirective]\n    }],\n    navigationItemTemplateRef: [{\n      type: Input,\n      args: ['navigationItemTemplate']\n    }],\n    navigationItemTemplate: [{\n      type: ContentChild,\n      args: [NavigationItemTemplateDirective]\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disabledDates: [{\n      type: Input\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar TIME_PART = {\n  dayperiod: 'dayperiod',\n  hour: 'hour',\n  millisecond: 'millisecond',\n  minute: 'minute',\n  second: 'second'\n};\n/**\n * @hidden\n */\n\nvar timeRangeValidator = function timeRangeValidator(min, max) {\n  return function (control) {\n    if (!min || !max || !control.value) {\n      return null;\n    }\n\n    var err = {\n      timeRangeError: {\n        maxValue: max,\n        minValue: min,\n        value: control.value\n      }\n    };\n    return isInTimeRange(control.value, min, max) ? null : err;\n  };\n};\n\nvar VALUE_DOC_LINK$3 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/timepicker/#toc-integration-with-json';\nvar INTL_DATE_FORMAT = 'https://github.com/telerik/kendo-intl/blob/master/docs/date-formatting/index.md';\nvar formatRegExp = new RegExp(\"\".concat(TIME_PART.hour, \"|\").concat(TIME_PART.minute, \"|\").concat(TIME_PART.second, \"|\").concat(TIME_PART.dayperiod, \"|literal\"));\n/**\n * Represents the [Kendo UI TimePicker component for Angular]({% slug overview_timepicker %}#toc-basic-usage).\n */\n\nvar TimePickerComponent = /*#__PURE__*/function () {\n  function TimePickerComponent(zone, localization, cdr, popupService, element, renderer, injector, pickerService, intl, touchEnabled$$1) {\n    _classCallCheck(this, TimePickerComponent);\n\n    this.zone = zone;\n    this.localization = localization;\n    this.cdr = cdr;\n    this.popupService = popupService;\n    this.element = element;\n    this.renderer = renderer;\n    this.injector = injector;\n    this.pickerService = pickerService;\n    this.intl = intl;\n    this.touchEnabled = touchEnabled$$1;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Sets or gets the `disabled` property of the TimePicker and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_timepicker %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the TimePicker\n     * ([see example]({% slug readonly_timepicker %}#toc-read-only-timepicker)).\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the read-only state of the TimePicker input field\n     * ([see example]({% slug readonly_timepicker %}#toc-read-only-input)).\n     *\n     * > Note that if you set the [`readonly`]({% slug api_dateinputs_timepickercomponent %}#toc-readonly) property value to `true`,\n     * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n     */\n\n    this.readOnlyInput = false;\n    /**\n     * Specifies the time format that is used to display the input value\n     * ([see example]({% slug formats_timepicker %})).\n     */\n\n    this.format = 't';\n    /**\n     * Specifies the hint the TimePicker displays when its value is `null`.\n     * For more information, refer to the article on\n     * [placeholders]({% slug placeholders_timepicker %}).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker placeholder=\"Enter start...\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n    this.placeholder = null;\n    /**\n     * Determines whether to display the **Cancel** button in the popup.\n     */\n\n    this.cancelButton = true;\n    /**\n     * Determines whether to display the **Now** button in the popup.\n     *\n     * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n     */\n\n    this.nowButton = true;\n    /**\n     * Sets or gets the `tabindex` property of the TimePicker.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Sets the title of the input element of the TimePicker.\n     */\n\n    this.title = \"\";\n    /**\n     * Determines whether the built-in min or max validators are enforced when a form is being validated.\n     */\n\n    this.rangeValidation = true;\n    /**\n     * Fires each time the user selects a new value.\n     * For more information, refer to the section on\n     * [events]({% slug overview_timepicker %}#toc-events).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user focuses the input element.\n     * For more information, refer to the section on\n     * [events]({% slug overview_timepicker %}#toc-events).\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker (focus)=\"handleFocus()\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log(\"Component is focused\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the input element gets blurred.\n     * For more information, refer to the section on\n     * [events]({% slug overview_timepicker %}#toc-events).\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker (blur)=\"handleBlur()\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log(\"Component is blurred\");\n     *   }\n     * }\n     * ```\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed.\n     * For more information, refer to the section on\n     * [events]({% slug overview_timepicker %}#toc-events).\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open.\n     * For more information, refer to the section on\n     * [events]({% slug overview_timepicker %}#toc-events).\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.wrapperClasses = true;\n    this.popupUID = guid();\n    this.onControlChange = noop;\n    this.onControlTouched = noop;\n    this.onValidatorChange = noop;\n    this.resolvedPromise = Promise.resolve(null);\n    this.timeRangeValidateFn = noop;\n    this._min = cloneDate(MIN_TIME);\n    this._max = cloneDate(MAX_TIME);\n    this._popupSettings = {\n      animate: true\n    };\n    this._show = false;\n    this._steps = {};\n    this._value = null;\n    this._active = false;\n    this.domEvents = [];\n    this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n    this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n  }\n  /**\n   * Specifies the smallest valid time value\n   * ([see example]({% slug timeranges_timepicker %})).\n   */\n\n\n  _createClass(TimePickerComponent, [{\n    key: \"isEmpty\",\n\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    value: function isEmpty() {\n      return !this.value && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this29 = this;\n\n      this.localizationChangeSubscription = this.localization.changes.subscribe(function () {\n        return _this29.cdr.markForCheck();\n      });\n      this.control = this.injector.get(NgControl, null);\n\n      if (this.element) {\n        this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n        this.zone.runOutsideAngular(function () {\n          _this29.bindEvents();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.min || changes.max || changes.rangeValidation) {\n        this.timeRangeValidateFn = this.rangeValidation ? timeRangeValidator(this.min, this.max) : noop;\n        this.onValidatorChange();\n      }\n\n      if (changes.format) {\n        this.verifyFormat();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.isActive = false;\n      this.show = false;\n\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n      this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      var altKey = event.altKey,\n          keyCode = event.keyCode;\n\n      if (keyCode === Keys.Escape) {\n        this.show = false;\n        return;\n      }\n\n      if (altKey) {\n        if (keyCode === Keys.ArrowUp) {\n          this.show = false;\n        }\n\n        if (keyCode === Keys.ArrowDown && !this.show) {\n          this.show = true;\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.verifyValue(value);\n      this.value = cloneDate(value);\n      this.cdr.markForCheck();\n\n      if (!value && this.input) {\n        this.input.placeholder = this.placeholder;\n        this.input.writeValue(value);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.timeRangeValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * Focuses the TimePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timepicker.focus()\">Focus time picker</button>\n     *  <kendo-timepicker #timepicker></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n    /**\n     * Blurs the TimePicker component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      (this.timeSelector || this.input)['blur'](); //tslint:disable-line:no-string-literal\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(show) {\n      var _this30 = this;\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      this.resolvedPromise.then(function () {\n        _this30._toggle(show === undefined ? !_this30.show : show);\n      });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"handleChange\",\n\n    /**\n     * @hidden\n     */\n    value: function handleChange(value) {\n      var _this31 = this;\n\n      if (isEqual(this.value, value)) {\n        this.focusInput();\n        this.show = false;\n        return;\n      }\n\n      this.value = cloneDate(value);\n      this.zone.run(function () {\n        _this31.focusInput();\n\n        _this31.show = false;\n\n        _this31.onControlChange(cloneDate(value));\n\n        _this31.valueChange.emit(cloneDate(value));\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleReject\",\n    value: function handleReject() {\n      this.show = false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(value) {\n      var val = this.input.formatSections.date ? value : this.mergeTime(value);\n      this.handleChange(val);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMousedown\",\n    value: function handleMousedown(args) {\n      args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleIconClick\",\n    value: function handleIconClick(event) {\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      event.preventDefault();\n      this.focusInput(); //XXX: explicit call handleFocus handler here\n      //due to async IE focus event\n\n      this.handleFocus();\n      this.show = !this.show;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"normalizeTime\",\n\n    /**\n     * @hidden\n     */\n    value: function normalizeTime(date) {\n      return setTime(MIDNIGHT_DATE, date);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"mergeTime\",\n    value: function mergeTime(value) {\n      return this.value && value ? setTime(this.value, value) : value;\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(show) {\n      var event = new PreventableEvent();\n\n      if (!this._show && show) {\n        this.open.emit(event);\n      } else if (this._show && !show) {\n        this.close.emit(event);\n      }\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      this._toggle(show);\n\n      this.toggleFocus();\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(show) {\n      var _this32 = this;\n\n      if (show === this.isOpen) {\n        return;\n      }\n\n      this._show = show;\n      this.cdr.markForCheck();\n\n      if (show) {\n        var direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: this.wrapper,\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.popupSettings.animate,\n          appendTo: this.appendTo,\n          content: this.popupTemplate,\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          popupClass: this.popupClasses,\n          positionMode: 'absolute'\n        });\n        this.popupRef.popupElement.setAttribute('id', this.popupUID);\n        this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n          return _this32.show = false;\n        });\n      } else {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"focusInput\",\n    value: function focusInput() {\n      if (this.touchEnabled) {\n        return;\n      }\n\n      this.input.focus();\n    }\n  }, {\n    key: \"toggleFocus\",\n    value: function toggleFocus() {\n      if (!this.isActive) {\n        return;\n      }\n\n      if (this.show) {\n        if (!this.timeSelector) {\n          this.cdr.detectChanges();\n        }\n\n        if (this.isActive) {\n          this.timeSelector.focus();\n        }\n      } else if (!this.touchEnabled) {\n        this.input.focus();\n      } else if (!this.input.isActive) {\n        this.handleBlur();\n      }\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (value && !(value instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK$3, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"verifyFormat\",\n    value: function verifyFormat() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      var formatContainsDateParts = this.intl.splitDateFormat(this.format).some(function (part) {\n        return !formatRegExp.test(part.type);\n      });\n\n      if (formatContainsDateParts) {\n        throw new Error(\"Provided format is not supported. Supported specifiers are T|t|H|h|m|s|a. See \".concat(INTL_DATE_FORMAT));\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n\n      if (isWindowAvailable()) {\n        this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n      }\n    }\n  }, {\n    key: \"handleWindowBlur\",\n    value: function handleWindowBlur() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.show = false;\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      var _this33 = this;\n\n      if (this.isActive) {\n        return;\n      }\n\n      this.isActive = true;\n\n      if (hasObservers(this.onFocus)) {\n        this.zone.run(function () {\n          _this33.onFocus.emit();\n        });\n      }\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(args) {\n      var _this34 = this;\n\n      var currentTarget = args && currentFocusTarget(args);\n\n      if (currentTarget && (this.input.containsElement(currentTarget) || this.timeSelector && this.timeSelector.containsElement(currentTarget))) {\n        return;\n      }\n\n      if (hasObservers(this.onBlur) || this.show && hasObservers(this.close) || requiresZoneOnBlur(this.control)) {\n        this.zone.run(function () {\n          _this34.blurComponent();\n\n          _this34.cdr.markForCheck();\n        });\n      } else {\n        this.blurComponent();\n      }\n    }\n  }, {\n    key: \"blurComponent\",\n    value: function blurComponent() {\n      this.isActive = false; // order is important ¯\\_(ツ)_/¯\n\n      this.show = false;\n      this.onControlTouched();\n      this.onBlur.emit();\n    }\n  }, {\n    key: \"min\",\n    set: function set(min) {\n      this._min = cloneDate(min || MIN_TIME);\n    },\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * Specifies the biggest valid time value\n     * ([see example]({% slug timeranges_timepicker %})).\n     */\n\n  }, {\n    key: \"max\",\n    set: function set(max) {\n      this._max = cloneDate(max || MAX_TIME);\n    },\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * Configures the incremental steps of the TimePicker.\n     * For more information, refer to the article on\n     * [incremental steps]({% slug incrementalsteps_timepicker %}).\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15 };\n     * }\n     * ```\n     *\n     */\n\n  }, {\n    key: \"steps\",\n    set: function set(steps) {\n      this._steps = steps || {};\n    },\n    get: function get() {\n      return this._steps;\n    }\n    /**\n     * Configures the popup of the TimePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Specifies the value of the TimePicker component.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"disabledClass\",\n    get: function get() {\n      return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"inputRole\",\n    get: function get() {\n      return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this._active;\n    },\n    set: function set(value) {\n      this._active = value;\n\n      if (!this.wrapper) {\n        return;\n      }\n\n      var element = this.wrapper.nativeElement;\n\n      if (value) {\n        this.renderer.addClass(element, 'k-state-focused');\n      } else {\n        this.renderer.removeClass(element, 'k-state-focused');\n      }\n    }\n  }, {\n    key: \"show\",\n    get: function get() {\n      return this._show;\n    },\n    set: function set(show) {\n      var _this35 = this;\n\n      if (show && (this.disabled || this.readonly)) {\n        return;\n      }\n\n      var skipZone = !show && (!this._show || !hasObservers(this.close));\n\n      if (!skipZone) {\n        this.zone.run(function () {\n          _this35.togglePopup(show);\n        });\n      } else {\n        this.togglePopup(show);\n      }\n    }\n  }, {\n    key: \"input\",\n    get: function get() {\n      return this.pickerService.input;\n    }\n  }, {\n    key: \"timeSelector\",\n    get: function get() {\n      return this.pickerService.timeSelector;\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this.show;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n  }, {\n    key: \"popupClasses\",\n    get: function get() {\n      return ['k-group', 'k-reset'].concat(this.popupSettings.popupClass || []);\n    }\n  }]);\n\n  return TimePickerComponent;\n}();\n\nTimePickerComponent.ɵfac = function TimePickerComponent_Factory(t) {\n  return new (t || TimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(PickerService), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimePickerComponent,\n  selectors: [[\"kendo-timepicker\"]],\n  viewQuery: function TimePickerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c13, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c14, true);\n      ɵngcc0.ɵɵviewQuery(_c15, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n    }\n  },\n  hostVars: 6,\n  hostBindings: function TimePickerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.wrapperClasses)(\"k-timepicker\", ctx.wrapperClasses)(\"k-state-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    readOnlyInput: \"readOnlyInput\",\n    format: \"format\",\n    placeholder: \"placeholder\",\n    cancelButton: \"cancelButton\",\n    nowButton: \"nowButton\",\n    tabindex: \"tabindex\",\n    title: \"title\",\n    rangeValidation: \"rangeValidation\",\n    min: \"min\",\n    max: \"max\",\n    steps: \"steps\",\n    popupSettings: \"popupSettings\",\n    tabIndex: \"tabIndex\",\n    value: \"value\",\n    formatPlaceholder: \"formatPlaceholder\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    open: \"open\",\n    close: \"close\"\n  },\n  exportAs: [\"kendo-timepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return TimePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () {\n      return TimePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return TimePickerComponent;\n    })\n  }, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.timepicker'\n  }, PickerService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 25,\n  consts: function consts() {\n    var i18n_22;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Accept button text in the timepicker component\n       * @meaning kendo.timepicker.accept\n       */\n      var MSG_EXTERNAL_7519663530416240229$$DIST_FESM2015_INDEX_JS_23 = goog.getMsg(\"Set\");\n      i18n_22 = MSG_EXTERNAL_7519663530416240229$$DIST_FESM2015_INDEX_JS_23;\n    } else {\n      i18n_22 = $localize(_templateObject6());\n    }\n\n    var i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Accept button in the timepicker component\n       * @meaning kendo.timepicker.acceptLabel\n       */\n      var MSG_EXTERNAL_4355879331538595758$$DIST_FESM2015_INDEX_JS_25 = goog.getMsg(\"Set time\");\n      i18n_24 = MSG_EXTERNAL_4355879331538595758$$DIST_FESM2015_INDEX_JS_25;\n    } else {\n      i18n_24 = $localize(_templateObject7());\n    }\n\n    var i18n_26;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Cancel button text in the timepicker component\n       * @meaning kendo.timepicker.cancel\n       */\n      var MSG_EXTERNAL_1086687567255473060$$DIST_FESM2015_INDEX_JS_27 = goog.getMsg(\"Cancel\");\n      i18n_26 = MSG_EXTERNAL_1086687567255473060$$DIST_FESM2015_INDEX_JS_27;\n    } else {\n      i18n_26 = $localize(_templateObject8());\n    }\n\n    var i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Cancel button in the timepicker component\n       * @meaning kendo.timepicker.cancelLabel\n       */\n      var MSG_EXTERNAL_83621966901491941$$DIST_FESM2015_INDEX_JS_29 = goog.getMsg(\"Cancel changes\");\n      i18n_28 = MSG_EXTERNAL_83621966901491941$$DIST_FESM2015_INDEX_JS_29;\n    } else {\n      i18n_28 = $localize(_templateObject9());\n    }\n\n    var i18n_30;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Now button text in the timepicker component\n       * @meaning kendo.timepicker.now\n       */\n      var MSG_EXTERNAL_5912507758515138116$$DIST_FESM2015_INDEX_JS_31 = goog.getMsg(\"Now\");\n      i18n_30 = MSG_EXTERNAL_5912507758515138116$$DIST_FESM2015_INDEX_JS_31;\n    } else {\n      i18n_30 = $localize(_templateObject10());\n    }\n\n    var i18n_32;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Now button in the timepicker component\n       * @meaning kendo.timepicker.nowLabel\n       */\n      var MSG_EXTERNAL_371982627910576599$$DIST_FESM2015_INDEX_JS_33 = goog.getMsg(\"Select now\");\n      i18n_32 = MSG_EXTERNAL_371982627910576599$$DIST_FESM2015_INDEX_JS_33;\n    } else {\n      i18n_32 = $localize(_templateObject11());\n    }\n\n    var i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the toggle button in the timepicker component\n       * @meaning kendo.timepicker.toggle\n       */\n      var MSG_EXTERNAL_6938407659294495526$$DIST_FESM2015_INDEX_JS_35 = goog.getMsg(\"Toggle time list\");\n      i18n_34 = MSG_EXTERNAL_6938407659294495526$$DIST_FESM2015_INDEX_JS_35;\n    } else {\n      i18n_34 = $localize(_templateObject12());\n    }\n\n    return [[\"kendoTimePickerLocalizedMessages\", \"\", 6, \"accept\", \"acceptLabel\", \"cancel\", \"cancelLabel\", \"now\", \"nowLabel\", \"toggle\"], [\"accept\", i18n_22, \"acceptLabel\", i18n_24, \"cancel\", i18n_26, \"cancelLabel\", i18n_28, \"now\", i18n_30, \"nowLabel\", i18n_32, \"toggle\", i18n_34], [1, \"k-picker-wrap\"], [\"wrapper\", \"\"], [3, \"focusableId\", \"hasPopup\", \"isPopupOpen\", \"disabled\", \"readonly\", \"role\", \"ariaReadOnly\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"steps\", \"tabindex\", \"title\", \"value\", \"valueChange\"], [\"input\", \"\"], [\"role\", \"button\", 1, \"k-select\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-icon\", \"k-i-clock\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"cancelButton\", \"nowButton\", \"format\", \"min\", \"max\", \"steps\", \"value\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\", \"valueReject\"], [\"timeSelector\", \"\"], [3, \"acceptLabel\", \"accept\", \"cancelLabel\", \"cancel\", \"nowLabel\", \"now\"]];\n  },\n  template: function TimePickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵelementStart(4, \"kendo-dateinput\", 4, 5);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function TimePickerComponent_Template_kendo_dateinput_valueChange_4_listener($event) {\n        return ctx.handleInputChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"span\", 6);\n      ɵngcc0.ɵɵelement(7, \"span\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(8, TimePickerComponent_ng_template_8_Template, 3, 18, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementContainer(10, null, 9);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"focusableId\", ctx.focusableId)(\"hasPopup\", true)(\"isPopupOpen\", ctx.show)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"role\", ctx.inputRole)(\"ariaReadOnly\", ctx.readonly)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.normalizeTime(ctx.min))(\"max\", ctx.normalizeTime(ctx.max))(\"steps\", ctx.steps)(\"tabindex\", !ctx.show ? ctx.tabindex : -1)(\"title\", ctx.title)(\"value\", ctx.value);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(22, _c21, ctx.handleIconClick, ctx.handleMousedown))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"));\n    }\n  },\n  directives: function directives() {\n    return [TimePickerLocalizedMessagesDirective, DateInputComponent, ɵngcc2.EventsOutsideAngularDirective, TimeSelectorComponent, TimeSelectorCustomMessagesComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nTimePickerComponent.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PopupService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: Injector\n  }, {\n    type: PickerService\n  }, {\n    type: IntlService\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }];\n};\n\nTimePickerComponent.propDecorators = {\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper']\n  }],\n  focusableId: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  readOnlyInput: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  cancelButton: [{\n    type: Input\n  }],\n  nowButton: [{\n    type: Input\n  }],\n  steps: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  wrapperClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-timepicker']\n  }],\n  disabledClass: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimePickerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-timepicker',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return TimePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(function () {\n          return TimePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return TimePickerComponent;\n        })\n      }, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.timepicker'\n      }, PickerService],\n      selector: 'kendo-timepicker',\n      template: \"\\n        <ng-container kendoTimePickerLocalizedMessages\\n            i18n-accept=\\\"kendo.timepicker.accept|The Accept button text in the timepicker component\\\"\\n            accept=\\\"Set\\\"\\n\\n            i18n-acceptLabel=\\\"kendo.timepicker.acceptLabel|The label for the Accept button in the timepicker component\\\"\\n            acceptLabel=\\\"Set time\\\"\\n\\n            i18n-cancel=\\\"kendo.timepicker.cancel|The Cancel button text in the timepicker component\\\"\\n            cancel=\\\"Cancel\\\"\\n\\n            i18n-cancelLabel=\\\"kendo.timepicker.cancelLabel|The label for the Cancel button in the timepicker component\\\"\\n            cancelLabel=\\\"Cancel changes\\\"\\n\\n            i18n-now=\\\"kendo.timepicker.now|The Now button text in the timepicker component\\\"\\n            now=\\\"Now\\\"\\n\\n            i18n-nowLabel=\\\"kendo.timepicker.nowLabel|The label for the Now button in the timepicker component\\\"\\n            nowLabel=\\\"Select now\\\"\\n\\n            i18n-toggle=\\\"kendo.timepicker.toggle|The label for the toggle button in the timepicker component\\\"\\n            toggle=\\\"Toggle time list\\\"\\n        >\\n        </ng-container>\\n        <span #wrapper\\n            class=\\\"k-picker-wrap\\\"\\n            [class.k-state-disabled]=\\\"disabled\\\"\\n        >\\n            <kendo-dateinput\\n                #input\\n                [focusableId]=\\\"focusableId\\\"\\n                [hasPopup]=\\\"true\\\"\\n                [isPopupOpen]=\\\"show\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [readonly]=\\\"readonly || readOnlyInput\\\"\\n                [role]=\\\"inputRole\\\"\\n                [ariaReadOnly]=\\\"readonly\\\"\\n                [format]=\\\"format\\\"\\n                [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                [min]=\\\"normalizeTime(min)\\\"\\n                [max]=\\\"normalizeTime(max)\\\"\\n                [steps]=\\\"steps\\\"\\n                [tabindex]=\\\"!show ? tabindex : -1\\\"\\n                [title]=\\\"title\\\"\\n                [value]=\\\"value\\\"\\n                (valueChange)=\\\"handleInputChange($event)\\\"\\n            ></kendo-dateinput>\\n            <span class=\\\"k-select\\\"\\n                role=\\\"button\\\"\\n                [attr.title]=\\\"localization.get('toggle')\\\"\\n                [attr.aria-label]=\\\"localization.get('toggle')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    click: handleIconClick,\\n                    mousedown: handleMousedown\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n            >\\n                <span class=\\\"k-icon k-i-clock\\\"></span>\\n            </span>\\n            <ng-template #popupTemplate>\\n                <kendo-timeselector\\n                    #timeSelector\\n                    [cancelButton]=\\\"cancelButton\\\"\\n                    [nowButton]=\\\"nowButton\\\"\\n                    [format]=\\\"format\\\"\\n                    [min]=\\\"min\\\"\\n                    [max]=\\\"max\\\"\\n                    [steps]=\\\"steps\\\"\\n                    [value]=\\\"value\\\"\\n                    [kendoEventsOutsideAngular]=\\\"{\\n                        keydown: handleKeydown,\\n                        mousedown: handleMousedown\\n                    }\\\"\\n                    [scope]=\\\"this\\\"\\n                    (valueChange)=\\\"handleChange($event)\\\"\\n                    (valueReject)=\\\"handleReject()\\\"\\n                >\\n                    <kendo-timeselector-messages\\n                        [acceptLabel]=\\\"localization.get('acceptLabel')\\\"\\n                        [accept]=\\\"localization.get('accept')\\\"\\n                        [cancelLabel]=\\\"localization.get('cancelLabel')\\\"\\n                        [cancel]=\\\"localization.get('cancel')\\\"\\n                        [nowLabel]=\\\"localization.get('nowLabel')\\\"\\n                        [now]=\\\"localization.get('now')\\\"\\n                    >\\n                    </kendo-timeselector-messages>\\n                </kendo-timeselector>\\n            </ng-template>\\n        </span>\\n        <ng-container #container></ng-container>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: NgZone\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PopupService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: Injector\n    }, {\n      type: PickerService\n    }, {\n      type: IntlService\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    readOnlyInput: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    cancelButton: [{\n      type: Input\n    }],\n    nowButton: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    wrapperClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-timepicker']\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }]\n  });\n})();\n\nvar timeFormatRegExp = new RegExp(\"\".concat(TIME_PART.hour, \"|\").concat(TIME_PART.minute, \"|\").concat(TIME_PART.second, \"|\").concat(TIME_PART.dayperiod, \"|literal\"));\nvar VALUE_DOC_LINK$4 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/integration-with-json/';\nvar MIN_MAX_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/date-time-limits/';\nvar DEFAULT_ACTIVE_TAB = 'date';\nvar DEFAULT_DATEINPUT_FORMAT = 'g';\nvar DEFAULT_TIMESELECTOR_FORMAT = 't';\n/**\n * Represents the [Kendo UI DateTimePicker component for Angular]({% slug overview_datetimepicker %}).\n */\n\nvar DateTimePickerComponent = /*#__PURE__*/function () {\n  function DateTimePickerComponent(popupService, intl, cdr, pickerService, ngZone, host, touchEnabled$$1, localization, disabledDatesService) {\n    _classCallCheck(this, DateTimePickerComponent);\n\n    this.popupService = popupService;\n    this.intl = intl;\n    this.cdr = cdr;\n    this.pickerService = pickerService;\n    this.ngZone = ngZone;\n    this.host = host;\n    this.touchEnabled = touchEnabled$$1;\n    this.localization = localization;\n    this.disabledDatesService = disabledDatesService;\n    /**\n     * @hidden\n     */\n\n    this.hostClasses = true;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Sets the title of the input element of the DateTimePicker.\n     */\n\n    this.title = '';\n    /**\n     * Sets or gets the `disabled` property of the DateTimePicker and determines whether the component is active\n     * ([see example]({% slug disabled_datetimepicker %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the DateTimePicker\n     * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-datetimepicker)).\n     */\n\n    this.readonly = false;\n    /**\n     * Sets the read-only state of the DateTimePicker input field\n     * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-input)).\n     *\n     * > Note that if you set the [`readonly`]({% slug api_dateinputs_datetimepickercomponent %}#toc-readonly) property value to `true`,\n     * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n     */\n\n    this.readOnlyInput = false;\n    /**\n     * Determines whether to display the **Cancel** button in the popup\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-toggling-the-cancel-button)).\n     */\n\n    this.cancelButton = true;\n    /**\n     * Determines whether to display a week number column in the `month` view of the popup Calendar\n     * ([see example]({% slug datetimepicker_calendar_options %}#toc-week-number-column)).\n     */\n\n    this.weekNumber = false;\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form\n     * ([see example]({% slug dateranges_datetimepicker %}#toc-prevent-invalid-input)).\n     */\n\n    this.rangeValidation = true;\n    /**\n     * Determines whether the built-in validator for disabled\n     * date ranges is enforced when validating a form\n     * ([see example]({% slug disabled_dates_datetimepicker %}#toc-validation)).\n     */\n\n    this.disabledDatesValidation = true;\n    /**\n     * Fires each time the user selects a new value.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain closed.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain open.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the user focuses the component.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * Fires each time the user blurs the component.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * Indicates whether the component or its popup content is focused.\n     */\n\n    this.isActive = false;\n    /**\n     * @hidden\n     *\n     * Controls whether the Calendar or the TimeSelector will be displayed.\n     */\n\n    this.activeTab = DEFAULT_ACTIVE_TAB;\n    /**\n     * @hidden\n     *\n     * Specifies the stripped time-related format that is used in the TimeSelector.\n     * Updates each time the `format` property value changes.\n     */\n\n    this.timeSelectorFormat = DEFAULT_TIMESELECTOR_FORMAT;\n    /**\n     * @hidden\n     */\n\n    this.timeSelectorMin = cloneDate(MIN_TIME);\n    /**\n     * @hidden\n     */\n\n    this.timeSelectorMax = cloneDate(MAX_TIME);\n    /**\n     * @hidden\n     */\n\n    this.calendarValue = null;\n    /**\n     * @hidden\n     */\n\n    this.calendarMin = cloneDate(MIN_DATE);\n    /**\n     * @hidden\n     */\n\n    this.calendarMax = lastMillisecondOfDate(MAX_DATE);\n    this._popupSettings = {\n      animate: true\n    };\n    this._value = null;\n    this._format = DEFAULT_DATEINPUT_FORMAT;\n    this._tabindex = 0;\n    this._defaultTab = DEFAULT_ACTIVE_TAB;\n    this._min = mergeDateAndTime(MIN_DATE, MIN_TIME);\n    this._max = mergeDateAndTime(MAX_DATE, MAX_TIME);\n    this.onControlTouched = noop;\n    this.onControlChange = noop;\n    this.onValidatorChange = noop;\n    this.minValidateFn = noop;\n    this.maxValidateFn = noop;\n    this.disabledDatesValidateFn = noop;\n    this.subscriptions = new Subscription();\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DateTimePickerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this36 = this;\n\n      this.subscriptions.add(this.pickerService.onFocus // detect popup changes to disable the inactive view mark-up when the popup is open\n      .pipe(tap(this.detectPopupChanges.bind(this))).subscribe(this.handleFocus.bind(this)));\n      this.subscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n      this.subscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleCalendarValueChange.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(function () {\n        return _this36.cdr.markForCheck();\n      }));\n\n      if (isWindowAvailable()) {\n        this.subscriptions.add(this.ngZone.runOutsideAngular(function () {\n          return fromEvent(window, 'blur').subscribe(_this36.handleCancel.bind(_this36));\n        }));\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isPresent(changes.min) || isPresent(changes.max)) {\n        this.verifyMinMaxRange();\n      }\n\n      if (changes.min || changes.max || changes.rangeValidation || changes.disabledDatesValidation || changes.disabledDates) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n        this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop;\n        this.onValidatorChange();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.isOpen) {\n        this.closePopup();\n      }\n\n      this.subscriptions.unsubscribe();\n    }\n    /**\n     * * If the popup is closed, focuses the DateTimePicker input.\n     * * If the popup is open, the focus is moved to its content.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.isOpen) {\n        this.activeTabComponent.focus();\n      } else {\n        this.input.focus();\n      }\n    }\n    /**\n     * Blurs the DateTimePicker.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (this.isOpen && this.activeTabComponent.isActive) {\n        this.activeTabComponent.blur();\n      } else {\n        this.input.blur();\n      }\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     *\n     * @param show - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(show) {\n      if (this.disabled || this.readonly || show === this.isOpen) {\n        return;\n      }\n\n      var shouldOpen = isPresent(show) ? show : !this.isOpen;\n\n      if (shouldOpen) {\n        this.openPopup();\n      } else {\n        this.closePopup(); // Changes the tab and the calendar or clock icon to the designated default.\n\n        if (this.activeTab !== this.defaultTab) {\n          this.activeTab = this.defaultTab;\n          this.cdr.detectChanges();\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(disabled) {\n      this.disabled = disabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label will render in the input.\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return !isPresent(this.value) && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleIconClick\",\n    value: function handleIconClick(event) {\n      var _this37 = this;\n\n      if (this.disabled || this.readonly) {\n        return;\n      } // prevents the event default to evade focusing the DateInput input when placed inside a label (FF/IE/Edge)\n\n\n      event.preventDefault();\n      var runInZone = !this.isOpen || hasObservers(this.close);\n      this.run(runInZone, function () {\n        var shouldOpen = !_this37.isOpen; // handle focus first to maintain correct event order `focus` => `open`\n\n        _this37.handleFocus();\n\n        _this37.togglePopup(shouldOpen);\n\n        _this37.switchFocus();\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      var _this38 = this;\n\n      if (this.isActive) {\n        return;\n      }\n\n      this.isActive = true;\n      this.cdr.detectChanges();\n\n      if (hasObservers(this.onFocus)) {\n        this.ngZone.run(function () {\n          return _this38.onFocus.emit();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event) {\n      var _this39 = this;\n\n      if (!this.isActive || this.focusTargetInComponent(event)) {\n        return;\n      }\n\n      this.isActive = false;\n      this.cdr.detectChanges();\n      var isNgControlUntouched = this.host.nativeElement.classList.contains('ng-untouched');\n      var runInZone = isNgControlUntouched || hasObservers(this.onBlur) || this.isOpen && hasObservers(this.close);\n      this.run(runInZone, function () {\n        _this39.onBlur.emit();\n\n        _this39.onControlTouched();\n\n        _this39.togglePopup(false);\n\n        _this39.cdr.markForCheck();\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"changeActiveTab\",\n    value: function changeActiveTab(tab) {\n      if (!this.isOpen || this.activeTab === tab) {\n        return;\n      } // persists the Tcurrent value of the TimeSelector when switching between tabs\n\n\n      if (!isEqual(this.timeSelector.value, this.timeSelector.current)) {\n        this.timeSelector.handleAccept();\n      }\n\n      this.activeTab = tab;\n      this.cdr.detectChanges();\n      this.detectPopupChanges();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleTabChangeTransitionEnd\",\n    value: function handleTabChangeTransitionEnd(dateTimeSelector, event) {\n      // handle only the .k-datetime-selector element transition, ignore any child element transitions\n      if (event.target !== dateTimeSelector) {\n        return;\n      }\n\n      this.activeTabComponent.focus();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleAccept\",\n    value: function handleAccept() {\n      var _this40 = this;\n\n      if (!this.isOpen) {\n        return;\n      }\n\n      var candidate = mergeDateAndTime(this.calendar.value, this.timeSelector.current);\n      var valueChangePresent = !isEqual(this.value, candidate);\n      var runInZone = valueChangePresent || hasObservers(this.close);\n      this.run(runInZone, function () {\n        _this40.handleValueChange(candidate);\n\n        _this40.togglePopup(false);\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleCancel\",\n    value: function handleCancel() {\n      var _this41 = this;\n\n      if (!this.isOpen) {\n        return;\n      }\n\n      var runInZone = hasObservers(this.close);\n      this.run(runInZone, function () {\n        return _this41.togglePopup(false);\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleInputValueChange\",\n    value: function handleInputValueChange(value) {\n      this.handleValueChange(value);\n\n      if (this.isOpen) {\n        this.togglePopup(false);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleCalendarValueChange\",\n    value: function handleCalendarValueChange() {\n      this.setTimeSelectorMinMax(this.calendar.value);\n      this.changeActiveTab('time');\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(event) {\n      var _this42 = this;\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      var keyCode = event.keyCode,\n          altKey = event.altKey;\n\n      switch (keyCode) {\n        case altKey && Keys.ArrowUp:\n        case Keys.Escape:\n          this.handleCancel();\n          break;\n\n        case !this.isOpen && altKey && Keys.ArrowDown:\n          this.ngZone.run(function () {\n            return _this42.togglePopup(true);\n          });\n          break;\n\n        case altKey && Keys.ArrowRight:\n          this.changeActiveTab('time');\n          break;\n\n        case altKey && Keys.ArrowLeft:\n          this.changeActiveTab('date');\n          break;\n\n        case this.isOpen && this.timeSelector.isActive && isPresent(this.calendarValue) && Keys.Enter:\n          this.handleAccept();\n          break;\n\n        default:\n          return;\n      }\n\n      event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleTabOut\",\n    value: function handleTabOut(event) {\n      var keyCode = event.keyCode,\n          shiftKey = event.shiftKey,\n          target = event.target; // if no focusable next sibling elements exist in the controls sections, the user is tabbing out of the popup\n\n      var focusableSiblingAvailable = isPresent(target.nextElementSibling) && !target.nextElementSibling.disabled;\n\n      if (keyCode === Keys.Tab && !shiftKey && !focusableSiblingAvailable) {\n        this.input.focus();\n        this.handleCancel();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBackTabOut\",\n    value: function handleBackTabOut(event) {\n      var keyCode = event.keyCode,\n          shiftKey = event.shiftKey;\n\n      if (keyCode === Keys.Tab && shiftKey) {\n        this.input.focus();\n      }\n    }\n    /**\n     * @hidden\n     *\n     * Prevents the diversion of the focus from the currently active element in the component.\n     */\n\n  }, {\n    key: \"preventMouseDown\",\n    value: function preventMouseDown(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(value) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (isPresent(value) && !(value instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK$4, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"verifyMinMaxRange\",\n    value: function verifyMinMaxRange() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (!isValidRange(this.min, this.max)) {\n        throw new Error(\"The max value should be bigger than the min. See \".concat(MIN_MAX_DOC_LINK, \".\"));\n      }\n    }\n    /**\n     * Extracts the time slots and the literals that are not preceded by date parts\n     * and concatenates the resulting parts into a string.\n     * If the provided format value does not contain any time parts,\n     * returns the designated format of the default popup component of the TimePicker.\n     */\n\n  }, {\n    key: \"getTimeSelectorFormat\",\n    value: function getTimeSelectorFormat(format) {\n      var timeSelectorFormat = this.intl.splitDateFormat(format).filter(this.timeFormatPartFilter).reduce(function (format, part) {\n        return format += part.pattern;\n      }, '');\n      return timeSelectorFormat || DEFAULT_TIMESELECTOR_FORMAT;\n    }\n    /**\n     * The filter expression that filters out all format parts\n     * except for `hour`, `minute`, `second`, `dayperiod`, and specific literals.\n     * Literals will be left only if they are not preceded by date parts.\n     */\n\n  }, {\n    key: \"timeFormatPartFilter\",\n    value: function timeFormatPartFilter(part, index, parts) {\n      var previousPart = index >= 1 && parts[index - 1];\n\n      if (previousPart && part.type === 'literal') {\n        return timeFormatRegExp.test(previousPart.type);\n      }\n\n      return timeFormatRegExp.test(part.type);\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(open) {\n      if (open === this.isOpen) {\n        return;\n      }\n\n      var event = new PreventableEvent();\n      open ? this.open.emit(event) : this.close.emit(event);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      this.toggle(open);\n      this.switchFocus();\n    }\n  }, {\n    key: \"switchFocus\",\n    value: function switchFocus() {\n      if (!this.isActive) {\n        return;\n      }\n\n      if (this.isOpen) {\n        this.activeTabComponent.focus();\n      } else if (!this.touchEnabled) {\n        this.input.focus();\n      } else if (!this.input.isActive) {\n        this.handleBlur();\n      }\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup() {\n      var _this43 = this;\n\n      this.setCalendarValue(this.value);\n      this.setTimeSelectorMinMax(this.value);\n      var direction = this.localization.rtl ? 'right' : 'left';\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        content: this.popupTemplate,\n        positionMode: 'absolute',\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        popupClass: \"k-datetime-container \".concat(this.popupSettings.popupClass || ''),\n        anchorAlign: {\n          vertical: 'bottom',\n          horizontal: direction\n        },\n        popupAlign: {\n          vertical: 'top',\n          horizontal: direction\n        }\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n        return _this43.handleCancel();\n      });\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.popupRef.close();\n      this.popupRef = null;\n    }\n  }, {\n    key: \"handleValueChange\",\n    value: function handleValueChange(value) {\n      if (isEqual(this.value, value)) {\n        return;\n      }\n\n      this.value = cloneDate(value);\n      this.valueChange.emit(cloneDate(value));\n      this.onControlChange(cloneDate(value));\n    }\n    /**\n     * Indicates whether the focus target is part of this component,\n     * that is, whether the focus target is inside the component wrapper or in the popup.\n     */\n\n  }, {\n    key: \"focusTargetInComponent\",\n    value: function focusTargetInComponent(event) {\n      if (!isPresent(event)) {\n        return false;\n      }\n\n      var relatedTarget = event.relatedTarget || document.activeElement;\n      var focusInPopup = isPresent(this.popupRef) && this.popupRef.popupElement.contains(relatedTarget);\n      var focusInWrapper = this.wrapper.nativeElement.contains(relatedTarget);\n      return focusInPopup || focusInWrapper;\n    }\n  }, {\n    key: \"setTimeSelectorMinMax\",\n    value: function setTimeSelectorMinMax(selectedDate) {\n      var minDateSelected = isPresent(selectedDate) && isEqual(getDate(selectedDate), getDate(this.min));\n      this.timeSelectorMin = cloneDate(minDateSelected ? this.min : MIN_TIME);\n      var maxDateSelected = isPresent(selectedDate) && isEqual(getDate(selectedDate), getDate(this.max));\n      this.timeSelectorMax = cloneDate(maxDateSelected ? this.max : MAX_TIME);\n    }\n  }, {\n    key: \"setCalendarValue\",\n    value: function setCalendarValue(value) {\n      var isInCalendarRange = isPresent(value) && isInRange(value, this.calendarMin, this.calendarMax);\n      this.calendarValue = isInCalendarRange ? getDate(value) : null;\n    }\n    /**\n     * If the popup is available, runs a popup change detection.\n     */\n\n  }, {\n    key: \"detectPopupChanges\",\n    value: function detectPopupChanges() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.popupRef.popup.changeDetectorRef.detectChanges();\n    }\n    /**\n     * Depending on the predicate `runInZone` value that is passed,\n     * runs the provided function either in the Angular or in the current zone.\n     */\n\n  }, {\n    key: \"run\",\n    value: function run(runInZone, fn) {\n      if (runInZone) {\n        this.ngZone.run(function () {\n          return fn();\n        });\n      } else {\n        fn();\n      }\n    }\n  }, {\n    key: \"input\",\n    get: function get() {\n      return this.pickerService.input;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this.pickerService.calendar;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"timeSelector\",\n    get: function get() {\n      return this.pickerService.timeSelector;\n    }\n    /**\n     * Specifies the value of the DateTimePicker component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this.verifyValue(value);\n      this._value = cloneDate(value);\n      this.setCalendarValue(value);\n      this.cdr.markForCheck();\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * Specifies the date format for displaying the input value\n     * ([see example]({% slug formats_datetimepicker %})).\n     */\n\n  }, {\n    key: \"format\",\n    set: function set(value) {\n      this._format = value;\n      this.timeSelectorFormat = this.getTimeSelectorFormat(value);\n    },\n    get: function get() {\n      return this._format;\n    }\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the DateTimePicker.\n     */\n\n  }, {\n    key: \"tabindex\",\n    set: function set(value) {\n      var tabindex = Number(value);\n      var defaultValue = 0;\n      this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    },\n    get: function get() {\n      return this.disabled ? -1 : this._tabindex;\n    }\n    /**\n     * Sets the dates of the DateTimePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datetimepicker %})).\n     */\n\n  }, {\n    key: \"disabledDates\",\n    set: function set(value) {\n      this._disabledDates = value;\n      this.disabledDatesService.initialize(value);\n    },\n    get: function get() {\n      return this._disabledDates;\n    }\n    /**\n     * Configures the popup settings of the DateTimePicker\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-customizing-the-popup)).\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({}, {\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * Specifies the smallest valid date.\n     * The Calendar will not display dates before this value.\n     * If the `min` value of the Calendar is selected, the TimePicker will not display\n     * time entries before the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n\n  }, {\n    key: \"min\",\n    set: function set(value) {\n      if (!isPresent(value)) {\n        return;\n      }\n\n      this._min = cloneDate(value);\n      this.calendarMin = getDate(value);\n    },\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * Specifies the biggest valid date.\n     * The Calendar will not display dates after this value.\n     * If the `max` value of the Calendar is selected, the TimePicker will not display\n     * time entries after the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n\n  }, {\n    key: \"max\",\n    set: function set(value) {\n      if (!isPresent(value)) {\n        return;\n      }\n\n      this._max = cloneDate(value);\n      this.calendarMax = lastMillisecondOfDate(value);\n    },\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * Indicates whether the component is currently open.\n     */\n\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return isPresent(this.popupRef);\n    }\n    /**\n     * Sets the active tab on opening the popup\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-setting-the-default-tab)).\n     */\n\n  }, {\n    key: \"defaultTab\",\n    set: function set(tab) {\n      this._defaultTab = tab || DEFAULT_ACTIVE_TAB;\n      this.activeTab = this.defaultTab;\n    },\n    get: function get() {\n      return this._defaultTab;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabSwitchTransition\",\n    get: function get() {\n      /*\n       When the popup is opening, disables the set transition in the themes. When `defaultTab` is set to `time`,\n       the popup opens with an active **Time** tab and the animation of the initial transition is undesired.\n       Setting the inline transition style to `none` overrides the set animation in the themes.\n       Setting the inline transition style to `null` does not apply any inline styles or override the themes CSS.\n      */\n      return this.isOpen ? null : 'none';\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the Calendar will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n\n  }, {\n    key: \"disableCalendar\",\n    get: function get() {\n      return this.activeTab !== 'date' && !this.calendar.isActive;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"inputRole\",\n    get: function get() {\n      return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the TimeSelector will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n\n  }, {\n    key: \"disableTimeSelector\",\n    get: function get() {\n      return this.activeTab !== 'time' && !this.timeSelector.isActive;\n    }\n  }, {\n    key: \"activeTabComponent\",\n    get: function get() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      if (!(isPresent(this.calendar) || isPresent(this.timeSelector))) {\n        this.cdr.detectChanges();\n      }\n\n      return this.activeTab === 'date' ? this.calendar : this.timeSelector;\n    }\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!isPresent(appendTo) || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n  }]);\n\n  return DateTimePickerComponent;\n}();\n\nDateTimePickerComponent.ɵfac = function DateTimePickerComponent_Factory(t) {\n  return new (t || DateTimePickerComponent)(ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PickerService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService));\n};\n\nDateTimePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateTimePickerComponent,\n  selectors: [[\"kendo-datetimepicker\"]],\n  contentQueries: function DateTimePickerComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MonthCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, YearCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DecadeCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CenturyCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, WeekNumberCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTitleTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n    }\n  },\n  viewQuery: function DateTimePickerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c15, true);\n      ɵngcc0.ɵɵviewQuery(_c13, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c14, true, TemplateRef);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function DateTimePickerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.hostClasses)(\"k-datetimepicker\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    title: \"title\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    readOnlyInput: \"readOnlyInput\",\n    cancelButton: \"cancelButton\",\n    weekNumber: \"weekNumber\",\n    rangeValidation: \"rangeValidation\",\n    disabledDatesValidation: \"disabledDatesValidation\",\n    value: \"value\",\n    format: \"format\",\n    tabindex: \"tabindex\",\n    disabledDates: \"disabledDates\",\n    popupSettings: \"popupSettings\",\n    min: \"min\",\n    max: \"max\",\n    defaultTab: \"defaultTab\",\n    formatPlaceholder: \"formatPlaceholder\",\n    placeholder: \"placeholder\",\n    steps: \"steps\",\n    focusedDate: \"focusedDate\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendo-datetimepicker\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([PickerService, LocalizationService, DisabledDatesService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.datetimepicker'\n  }, {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () {\n      return DateTimePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () {\n      return DateTimePickerComponent;\n    }),\n    multi: true\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return DateTimePickerComponent;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 12,\n  vars: 35,\n  consts: function consts() {\n    var i18n_37;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Date tab text in the datetimepicker popup header\n       * @meaning kendo.datetimepicker.dateTab\n       */\n      var MSG_EXTERNAL_3360129034450596425$$DIST_FESM2015_INDEX_JS_38 = goog.getMsg(\"Date\");\n      i18n_37 = MSG_EXTERNAL_3360129034450596425$$DIST_FESM2015_INDEX_JS_38;\n    } else {\n      i18n_37 = $localize(_templateObject13());\n    }\n\n    var i18n_39;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Date tab in the datetimepicker popup header\n       * @meaning kendo.datetimepicker.dateTabLabel\n       */\n      var MSG_EXTERNAL_1810540079817643910$$DIST_FESM2015_INDEX_JS_40 = goog.getMsg(\"Date tab\");\n      i18n_39 = MSG_EXTERNAL_1810540079817643910$$DIST_FESM2015_INDEX_JS_40;\n    } else {\n      i18n_39 = $localize(_templateObject14());\n    }\n\n    var i18n_41;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Time tab text in the datetimepicker popup header\n       * @meaning kendo.datetimepicker.timeTab\n       */\n      var MSG_EXTERNAL_3807284594201983607$$DIST_FESM2015_INDEX_JS_42 = goog.getMsg(\"Time\");\n      i18n_41 = MSG_EXTERNAL_3807284594201983607$$DIST_FESM2015_INDEX_JS_42;\n    } else {\n      i18n_41 = $localize(_templateObject15());\n    }\n\n    var i18n_43;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Time tab in the datetimepicker popup header\n       * @meaning kendo.datetimepicker.timeTabLabel\n       */\n      var MSG_EXTERNAL_2577682127494513393$$DIST_FESM2015_INDEX_JS_44 = goog.getMsg(\"Time tab\");\n      i18n_43 = MSG_EXTERNAL_2577682127494513393$$DIST_FESM2015_INDEX_JS_44;\n    } else {\n      i18n_43 = $localize(_templateObject16());\n    }\n\n    var i18n_45;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the toggle button in the datetimepicker component\n       * @meaning kendo.datetimepicker.toggle\n       */\n      var MSG_EXTERNAL_3159207801887264026$$DIST_FESM2015_INDEX_JS_46 = goog.getMsg(\"Toggle popup\");\n      i18n_45 = MSG_EXTERNAL_3159207801887264026$$DIST_FESM2015_INDEX_JS_46;\n    } else {\n      i18n_45 = $localize(_templateObject17());\n    }\n\n    var i18n_47;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Accept button text in the datetimepicker component\n       * @meaning kendo.datetimepicker.accept\n       */\n      var MSG_EXTERNAL_3915774704336012538$$DIST_FESM2015_INDEX_JS_48 = goog.getMsg(\"Set\");\n      i18n_47 = MSG_EXTERNAL_3915774704336012538$$DIST_FESM2015_INDEX_JS_48;\n    } else {\n      i18n_47 = $localize(_templateObject18());\n    }\n\n    var i18n_49;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Accept button in the datetimepicker component\n       * @meaning kendo.datetimepicker.acceptLabel\n       */\n      var MSG_EXTERNAL_4770689705864890748$$DIST_FESM2015_INDEX_JS_50 = goog.getMsg(\"Set\");\n      i18n_49 = MSG_EXTERNAL_4770689705864890748$$DIST_FESM2015_INDEX_JS_50;\n    } else {\n      i18n_49 = $localize(_templateObject19());\n    }\n\n    var i18n_51;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Cancel button text in the datetimepicker component\n       * @meaning kendo.datetimepicker.cancel\n       */\n      var MSG_EXTERNAL_5100781969600382158$$DIST_FESM2015_INDEX_JS_52 = goog.getMsg(\"Cancel\");\n      i18n_51 = MSG_EXTERNAL_5100781969600382158$$DIST_FESM2015_INDEX_JS_52;\n    } else {\n      i18n_51 = $localize(_templateObject20());\n    }\n\n    var i18n_53;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Cancel button in the datetimepicker component\n       * @meaning kendo.datetimepicker.cancelLabel\n       */\n      var MSG_EXTERNAL_3535986227615756275$$DIST_FESM2015_INDEX_JS_54 = goog.getMsg(\"Cancel\");\n      i18n_53 = MSG_EXTERNAL_3535986227615756275$$DIST_FESM2015_INDEX_JS_54;\n    } else {\n      i18n_53 = $localize(_templateObject21());\n    }\n\n    var i18n_55;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Now button text in the timepicker component\n       * @meaning kendo.datetimepicker.now\n       */\n      var MSG_EXTERNAL_5497093725885127701$$DIST_FESM2015_INDEX_JS_56 = goog.getMsg(\"NOW\");\n      i18n_55 = MSG_EXTERNAL_5497093725885127701$$DIST_FESM2015_INDEX_JS_56;\n    } else {\n      i18n_55 = $localize(_templateObject22());\n    }\n\n    var i18n_57;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Now button in the timepicker component\n       * @meaning kendo.datetimepicker.nowLabel\n       */\n      var MSG_EXTERNAL_5046379108717037514$$DIST_FESM2015_INDEX_JS_58 = goog.getMsg(\"Select now\");\n      i18n_57 = MSG_EXTERNAL_5046379108717037514$$DIST_FESM2015_INDEX_JS_58;\n    } else {\n      i18n_57 = $localize(_templateObject23());\n    }\n\n    var i18n_59;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the today button in the calendar header\n       * @meaning kendo.datetimepicker.today\n       */\n      var MSG_EXTERNAL_7904626229769721311$$DIST_FESM2015_INDEX_JS_60 = goog.getMsg(\"TODAY\");\n      i18n_59 = MSG_EXTERNAL_7904626229769721311$$DIST_FESM2015_INDEX_JS_60;\n    } else {\n      i18n_59 = $localize(_templateObject24());\n    }\n\n    return [[\"kendoDateTimePickerLocalizedMessages\", \"\", 6, \"dateTab\", \"dateTabLabel\", \"timeTab\", \"timeTabLabel\", \"toggle\", \"accept\", \"acceptLabel\", \"cancel\", \"cancelLabel\", \"now\", \"nowLabel\", \"today\"], [\"dateTab\", i18n_37, \"dateTabLabel\", i18n_39, \"timeTab\", i18n_41, \"timeTabLabel\", i18n_43, \"toggle\", i18n_45, \"accept\", i18n_47, \"acceptLabel\", i18n_49, \"cancel\", i18n_51, \"cancelLabel\", i18n_53, \"now\", i18n_55, \"nowLabel\", i18n_57, \"today\", i18n_59], [1, \"k-picker-wrap\"], [\"wrapper\", \"\"], [3, \"value\", \"format\", \"min\", \"max\", \"formatPlaceholder\", \"placeholder\", \"disabled\", \"readonly\", \"role\", \"ariaReadOnly\", \"steps\", \"tabindex\", \"title\", \"focusableId\", \"hasPopup\", \"isPopupOpen\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\"], [1, \"k-select\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-link\", \"k-link-date\"], [1, \"k-icon\"], [\"container\", \"\"], [\"popupTemplate\", \"\"], [3, \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-datetime-buttongroup\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [1, \"k-button-group\", \"k-button-group-stretched\"], [\"type\", \"button\", 1, \"k-button\", \"k-date-tab\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-tab\", 3, \"kendoEventsOutsideAngular\"], [1, \"k-datetime-selector\", 3, \"kendoEventsOutsideAngular\"], [\"dateTimeSelector\", \"\"], [1, \"k-datetime-calendar-wrap\"], [3, \"value\", \"min\", \"max\", \"focusedDate\", \"weekNumber\", \"navigation\", \"cellTemplate\", \"monthCellTemplate\", \"yearCellTemplate\", \"decadeCellTemplate\", \"centuryCellTemplate\", \"weekNumberTemplate\", \"headerTitleTemplate\", \"disabled\", \"disabledDates\", \"valueChange\"], [3, \"today\"], [1, \"k-datetime-time-wrap\"], [3, \"value\", \"format\", \"min\", \"max\", \"setButton\", \"cancelButton\", \"steps\", \"disabled\"], [3, \"now\", \"nowLabel\"], [1, \"k-datetime-footer\", \"k-action-buttons\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", \"class\", \"k-button k-time-cancel\", 3, \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-time-accept\", \"k-button\", \"k-primary\", 3, \"disabled\", \"kendoEventsOutsideAngular\", \"scope\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-cancel\", 3, \"kendoEventsOutsideAngular\", \"scope\"]];\n  },\n  template: function DateTimePickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵelementStart(4, \"kendo-dateinput\", 4);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function DateTimePickerComponent_Template_kendo_dateinput_valueChange_4_listener($event) {\n        return ctx.handleInputValueChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n      ɵngcc0.ɵɵelementStart(6, \"span\", 6);\n      ɵngcc0.ɵɵelement(7, \"span\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementContainer(8, null, 8);\n      ɵngcc0.ɵɵtemplate(10, DateTimePickerComponent_ng_template_10_Template, 19, 77, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", ctx.disabled)(\"k-state-focused\", ctx.isActive);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.value)(\"format\", ctx.format)(\"min\", ctx.min)(\"max\", ctx.max)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly || ctx.readOnlyInput)(\"role\", ctx.inputRole)(\"ariaReadOnly\", ctx.readonly)(\"steps\", ctx.steps)(\"tabindex\", ctx.tabindex)(\"title\", ctx.title)(\"focusableId\", ctx.focusableId)(\"hasPopup\", true)(\"isPopupOpen\", ctx.isOpen)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(30, _c20, ctx.handleKeyDown))(\"scope\", ctx);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(32, _c66, ctx.preventMouseDown, ctx.handleIconClick))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"toggle\"))(\"aria-label\", ctx.localization.get(\"toggle\"));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵclassProp(\"k-i-calendar\", ctx.activeTab === \"date\")(\"k-i-clock\", ctx.activeTab === \"time\");\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, DateInputComponent, ɵngcc2.EventsOutsideAngularDirective, CalendarComponent, CalendarCustomMessagesComponent, TimeSelectorComponent, TimeSelectorCustomMessagesComponent, ɵngcc1.NgIf];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nDateTimePickerComponent.ctorParameters = function () {\n  return [{\n    type: PopupService\n  }, {\n    type: IntlService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PickerService\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }, {\n    type: LocalizationService\n  }, {\n    type: DisabledDatesService\n  }];\n};\n\nDateTimePickerComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-datetimepicker']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper']\n  }],\n  value: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  disabledDates: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  focusableId: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  readOnlyInput: [{\n    type: Input\n  }],\n  cancelButton: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  steps: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  disabledDatesValidation: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  defaultTab: [{\n    type: Input\n  }],\n  cellTemplate: [{\n    type: ContentChild,\n    args: [CellTemplateDirective]\n  }],\n  monthCellTemplate: [{\n    type: ContentChild,\n    args: [MonthCellTemplateDirective]\n  }],\n  yearCellTemplate: [{\n    type: ContentChild,\n    args: [YearCellTemplateDirective]\n  }],\n  decadeCellTemplate: [{\n    type: ContentChild,\n    args: [DecadeCellTemplateDirective]\n  }],\n  centuryCellTemplate: [{\n    type: ContentChild,\n    args: [CenturyCellTemplateDirective]\n  }],\n  weekNumberTemplate: [{\n    type: ContentChild,\n    args: [WeekNumberCellTemplateDirective]\n  }],\n  headerTitleTemplate: [{\n    type: ContentChild,\n    args: [HeaderTitleTemplateDirective]\n  }],\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate', {\n      read: TemplateRef\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateTimePickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-datetimepicker',\n      exportAs: 'kendo-datetimepicker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [PickerService, LocalizationService, DisabledDatesService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.datetimepicker'\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(function () {\n          return DateTimePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(function () {\n          return DateTimePickerComponent;\n        }),\n        multi: true\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return DateTimePickerComponent;\n        })\n      }],\n      template: \"\\n        <ng-container\\n            kendoDateTimePickerLocalizedMessages\\n\\n            i18n-dateTab=\\\"kendo.datetimepicker.dateTab|The Date tab text in the datetimepicker popup header\\\"\\n            dateTab=\\\"Date\\\"\\n\\n            i18n-dateTabLabel=\\\"kendo.datetimepicker.dateTabLabel|The label for the Date tab in the datetimepicker popup header\\\"\\n            dateTabLabel=\\\"Date tab\\\"\\n\\n            i18n-timeTab=\\\"kendo.datetimepicker.timeTab|The Time tab text in the datetimepicker popup header\\\"\\n            timeTab=\\\"Time\\\"\\n\\n            i18n-timeTabLabel=\\\"kendo.datetimepicker.timeTabLabel|The label for the Time tab in the datetimepicker popup header\\\"\\n            timeTabLabel=\\\"Time tab\\\"\\n\\n            i18n-toggle=\\\"kendo.datetimepicker.toggle|The label for the toggle button in the datetimepicker component\\\"\\n            toggle=\\\"Toggle popup\\\"\\n\\n            i18n-accept=\\\"kendo.datetimepicker.accept|The Accept button text in the datetimepicker component\\\"\\n            accept=\\\"Set\\\"\\n\\n            i18n-acceptLabel=\\\"kendo.datetimepicker.acceptLabel|The label for the Accept button in the datetimepicker component\\\"\\n            acceptLabel=\\\"Set\\\"\\n\\n            i18n-cancel=\\\"kendo.datetimepicker.cancel|The Cancel button text in the datetimepicker component\\\"\\n            cancel=\\\"Cancel\\\"\\n\\n            i18n-cancelLabel=\\\"kendo.datetimepicker.cancelLabel|The label for the Cancel button in the datetimepicker component\\\"\\n            cancelLabel=\\\"Cancel\\\"\\n\\n            i18n-now=\\\"kendo.datetimepicker.now|The Now button text in the timepicker component\\\"\\n            now=\\\"NOW\\\"\\n\\n            i18n-nowLabel=\\\"kendo.datetimepicker.nowLabel|The label for the Now button in the timepicker component\\\"\\n            nowLabel=\\\"Select now\\\"\\n\\n            i18n-today=\\\"kendo.datetimepicker.today|The label for the today button in the calendar header\\\"\\n            today=\\\"TODAY\\\"\\n        >\\n        </ng-container>\\n\\n        <span\\n            #wrapper\\n            class=\\\"k-picker-wrap\\\"\\n            [class.k-state-disabled]=\\\"disabled\\\"\\n            [class.k-state-focused]=\\\"isActive\\\"\\n        >\\n            <kendo-dateinput\\n                [value]=\\\"value\\\"\\n                [format]=\\\"format\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [readonly]=\\\"readonly || readOnlyInput\\\"\\n                [role]=\\\"inputRole\\\"\\n                [ariaReadOnly]=\\\"readonly\\\"\\n                [steps]=\\\"steps\\\"\\n                [tabindex]=\\\"tabindex\\\"\\n                [title]=\\\"title\\\"\\n                [focusableId]=\\\"focusableId\\\"\\n                [hasPopup]=\\\"true\\\"\\n                [isPopupOpen]=\\\"isOpen\\\"\\n                (valueChange)=\\\"handleInputValueChange($event)\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    keydown: handleKeyDown\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n            >\\n            </kendo-dateinput>\\n            <span class=\\\"k-select\\\"\\n                [attr.title]=\\\"localization.get('toggle')\\\"\\n                [attr.aria-label]=\\\"localization.get('toggle')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    mousedown: preventMouseDown,\\n                    click: handleIconClick\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n            >\\n                <span class=\\\"k-link k-link-date\\\">\\n                    <span\\n                        class=\\\"k-icon\\\"\\n                        [class.k-i-calendar]=\\\"activeTab === 'date'\\\"\\n                        [class.k-i-clock]=\\\"activeTab === 'time'\\\"\\n                    >\\n                    </span>\\n                </span>\\n            </span>\\n        </span>\\n\\n        <ng-container #container></ng-container>\\n\\n        <ng-template #popupTemplate>\\n            <div\\n                class=\\\"k-datetime-wrap k-{{activeTab}}-tab\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    mousedown: preventMouseDown,\\n                    keydown: handleKeyDown\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n            >\\n                <div class=\\\"k-datetime-buttongroup\\\"\\n                    [kendoEventsOutsideAngular]=\\\"{\\n                        focusin: handleFocus,\\n                        focusout: handleBlur\\n                    }\\\"\\n                    [scope]=\\\"this\\\"\\n                >\\n                    <div class=\\\"k-button-group k-button-group-stretched\\\">\\n                        <button\\n                            type=\\\"button\\\"\\n                            class=\\\"k-button k-date-tab\\\"\\n                            [class.k-state-active]=\\\"activeTab === 'date'\\\"\\n                            [attr.title]=\\\"localization.get('dateTabLabel')\\\"\\n                            [attr.aria-label]=\\\"localization.get('dateTabLabel')\\\"\\n                            [kendoEventsOutsideAngular]=\\\"{\\n                                click: changeActiveTab.bind(this, 'date'),\\n                                keydown: handleBackTabOut\\n                            }\\\"\\n                            [scope]=\\\"this\\\"\\n                        >\\n                            {{localization.get('dateTab')}}\\n                        </button>\\n                        <button\\n                            type=\\\"button\\\"\\n                            class=\\\"k-button k-time-tab\\\"\\n                            [class.k-state-active]=\\\"activeTab === 'time'\\\"\\n                            [attr.title]=\\\"localization.get('timeTabLabel')\\\"\\n                            [attr.aria-label]=\\\"localization.get('timeTabLabel')\\\"\\n                            [kendoEventsOutsideAngular]=\\\"{\\n                                click: changeActiveTab.bind(this, 'time')\\n                            }\\\"\\n                        >\\n                            {{localization.get('timeTab')}}\\n                        </button>\\n                    </div>\\n                </div>\\n                <div\\n                    #dateTimeSelector\\n                    class=\\\"k-datetime-selector\\\"\\n                    [style.transition]=\\\"tabSwitchTransition\\\"\\n                    [kendoEventsOutsideAngular]=\\\"{\\n                        transitionend: handleTabChangeTransitionEnd.bind(this, dateTimeSelector)\\n                    }\\\"\\n                >\\n                    <div class=\\\"k-datetime-calendar-wrap\\\">\\n                        <kendo-calendar\\n                            [(value)]=\\\"calendarValue\\\"\\n                            [min]=\\\"calendarMin\\\"\\n                            [max]=\\\"calendarMax\\\"\\n                            [focusedDate]=\\\"focusedDate\\\"\\n                            [weekNumber]=\\\"weekNumber\\\"\\n                            [navigation]=\\\"false\\\"\\n                            [cellTemplate]=\\\"cellTemplate\\\"\\n                            [monthCellTemplate]=\\\"monthCellTemplate\\\"\\n                            [yearCellTemplate]=\\\"yearCellTemplate\\\"\\n                            [decadeCellTemplate]=\\\"decadeCellTemplate\\\"\\n                            [centuryCellTemplate]=\\\"centuryCellTemplate\\\"\\n                            [weekNumberTemplate]=\\\"weekNumberTemplate\\\"\\n                            [headerTitleTemplate]=\\\"headerTitleTemplate\\\"\\n                            [disabled]=\\\"disableCalendar\\\"\\n                            [disabledDates]=\\\"disabledDates\\\"\\n                            (valueChange)=\\\"handleCalendarValueChange()\\\"\\n                        >\\n                            <kendo-calendar-messages\\n                                [today]=\\\"localization.get('today')\\\"\\n                            >\\n                            </kendo-calendar-messages>\\n                        </kendo-calendar>\\n                    </div>\\n                    <div class=\\\"k-datetime-time-wrap\\\">\\n                        <kendo-timeselector\\n                            [value]=\\\"value\\\"\\n                            [format]=\\\"timeSelectorFormat\\\"\\n                            [min]=\\\"timeSelectorMin\\\"\\n                            [max]=\\\"timeSelectorMax\\\"\\n                            [setButton]=\\\"false\\\"\\n                            [cancelButton]=\\\"false\\\"\\n                            [steps]=\\\"steps\\\"\\n                            [disabled]=\\\"disableTimeSelector\\\"\\n                        >\\n                            <kendo-timeselector-messages\\n                                [now]=\\\"localization.get('now')\\\"\\n                                [nowLabel]=\\\"localization.get('nowLabel')\\\"\\n                            >\\n                            </kendo-timeselector-messages>\\n                        </kendo-timeselector>\\n                    </div>\\n                </div>\\n                <div\\n                    class=\\\"k-datetime-footer k-action-buttons\\\"\\n                    [kendoEventsOutsideAngular]=\\\"{\\n                        keydown: handleTabOut,\\n                        focusin: handleFocus,\\n                        focusout: handleBlur\\n                    }\\\"\\n                    [scope]=\\\"this\\\"\\n                >\\n                    <button\\n                        *ngIf=\\\"cancelButton\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"k-button k-time-cancel\\\"\\n                        [attr.title]=\\\"localization.get('cancelLabel')\\\"\\n                        [attr.aria-label]=\\\"localization.get('cancelLabel')\\\"\\n                        [kendoEventsOutsideAngular]=\\\"{\\n                            click: handleCancel\\n                        }\\\"\\n                        [scope]=\\\"this\\\"\\n                    >\\n                        {{localization.get('cancel')}}\\n                    </button>\\n                    <button\\n                        type=\\\"button\\\"\\n                        class=\\\"k-time-accept k-button k-primary\\\"\\n                        [attr.title]=\\\"localization.get('acceptLabel')\\\"\\n                        [attr.aria-label]=\\\"localization.get('acceptLabel')\\\"\\n                        [disabled]=\\\"!calendarValue\\\"\\n                        [kendoEventsOutsideAngular]=\\\"{\\n                            click: handleAccept\\n                        }\\\"\\n                        [scope]=\\\"this\\\"\\n                    >\\n                        {{localization.get('accept')}}\\n                    </button>\\n                </div>\\n            </div>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: PopupService\n    }, {\n      type: IntlService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PickerService\n    }, {\n      type: NgZone\n    }, {\n      type: ElementRef\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }, {\n      type: LocalizationService\n    }, {\n      type: DisabledDatesService\n    }];\n  }, {\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-datetimepicker']\n    }],\n    focusableId: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    readOnlyInput: [{\n      type: Input\n    }],\n    cancelButton: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    disabledDatesValidation: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    value: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disabledDates: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    defaultTab: [{\n      type: Input\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    cellTemplate: [{\n      type: ContentChild,\n      args: [CellTemplateDirective]\n    }],\n    monthCellTemplate: [{\n      type: ContentChild,\n      args: [MonthCellTemplateDirective]\n    }],\n    yearCellTemplate: [{\n      type: ContentChild,\n      args: [YearCellTemplateDirective]\n    }],\n    decadeCellTemplate: [{\n      type: ContentChild,\n      args: [DecadeCellTemplateDirective]\n    }],\n    centuryCellTemplate: [{\n      type: ContentChild,\n      args: [CenturyCellTemplateDirective]\n    }],\n    weekNumberTemplate: [{\n      type: ContentChild,\n      args: [WeekNumberCellTemplateDirective]\n    }],\n    headerTitleTemplate: [{\n      type: ContentChild,\n      args: [HeaderTitleTemplateDirective]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate', {\n        read: TemplateRef\n      }]\n    }]\n  });\n})();\n/* tslint:disable:component-selector-name  component-selector-type */\n\n\nvar DEFAULT_VIEWS_LENGTH = 2;\n/**\n * @hidden\n */\n\nvar HorizontalViewListComponent = /*#__PURE__*/function () {\n  function HorizontalViewListComponent(bus, cdr) {\n    _classCallCheck(this, HorizontalViewListComponent);\n\n    this.bus = bus;\n    this.cdr = cdr;\n    this.activeView = CalendarViewEnum.month;\n    this.isActive = true;\n    this.min = new Date(MIN_DATE);\n    this.max = new Date(MAX_DATE);\n    this.views = DEFAULT_VIEWS_LENGTH;\n    this.valueChange = new EventEmitter();\n    this.cellEnter = new EventEmitter();\n    this.cellLeave = new EventEmitter();\n    this.dates = [];\n  }\n\n  _createClass(HorizontalViewListComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.initService();\n\n      if (!this.service) {\n        return;\n      }\n\n      this.views = this.views || DEFAULT_VIEWS_LENGTH;\n      var focusedDate = this.focusedDate;\n      var viewDate = this.clampDate(this.service.viewDate(focusedDate, this.max, this.views));\n      this.skip = this.service.skip(viewDate, this.min);\n      this.total = this.service.total(this.min, this.max);\n      var activeViewChanged = hasChange(changes, 'activeView');\n      var viewsHasChanged = this.views > 0 && hasChange(changes, 'views');\n\n      if (activeViewChanged || !this.isInDates(focusedDate) || viewsHasChanged || !this.activeDate) {\n        this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n        this.activeDate = cloneDate(this.dates[0]);\n      }\n    }\n  }, {\n    key: \"initService\",\n    value: function initService() {\n      this.service = this.bus.service(this.activeView);\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(candidate) {\n      this.valueChange.emit(candidate);\n    }\n  }, {\n    key: \"isMonthView\",\n    value: function isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(action) {\n      var candidate = this.move(action);\n      var list = this.service.datesList(candidate, this.getTake(this.skip));\n\n      if (this.isListInRange(list)) {\n        this.dates = list;\n      }\n\n      this.activeDate = cloneDate(this.dates[0]);\n      this.focusedDate = cloneDate(candidate);\n      this.cdr.markForCheck();\n      return cloneDate(candidate);\n    }\n  }, {\n    key: \"canNavigate\",\n    value: function canNavigate(action) {\n      if (!this.service) {\n        return false;\n      }\n\n      return this.isListInRange(this.service.datesList(this.move(action), this.getTake(this.skip)));\n    }\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(value) {\n      return dateInRange(value, this.min, this.max);\n    }\n  }, {\n    key: \"move\",\n    value: function move(action) {\n      return this.service.move(this.dates[0] || this.focusedDate, action);\n    }\n  }, {\n    key: \"isListInRange\",\n    value: function isListInRange(list) {\n      var lowerBound = this.service.beginningOfPeriod(this.min);\n      var upperBound = this.service.beginningOfPeriod(this.service.addToDate(this.max, 1));\n      return lowerBound <= list[0] && list[list.length - 1] < upperBound;\n    }\n  }, {\n    key: \"isInDates\",\n    value: function isInDates(value) {\n      return this.service.isInArray(value, this.dates);\n    }\n  }, {\n    key: \"getTake\",\n    value: function getTake(skip) {\n      return Math.min(this.total - skip, this.views);\n    }\n  }, {\n    key: \"weekNumber\",\n    get: function get() {\n      return this.showWeekNumbers && this.isMonthView();\n    },\n    set: function set(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n  }, {\n    key: \"getComponentClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"getComponentMonthClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n  }, {\n    key: \"getComponentYearClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.year;\n    }\n  }, {\n    key: \"getComponentDecadeClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.decade;\n    }\n  }, {\n    key: \"getComponentCenturyClass\",\n    get: function get() {\n      return this.activeView === CalendarViewEnum.century;\n    }\n  }]);\n\n  return HorizontalViewListComponent;\n}();\n\nHorizontalViewListComponent.ɵfac = function HorizontalViewListComponent_Factory(t) {\n  return new (t || HorizontalViewListComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nHorizontalViewListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: HorizontalViewListComponent,\n  selectors: [[\"kendo-calendar-horizontal\"]],\n  hostVars: 10,\n  hostBindings: function HorizontalViewListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-calendar-view\", ctx.getComponentClass)(\"k-calendar-monthview\", ctx.getComponentMonthClass)(\"k-calendar-yearview\", ctx.getComponentYearClass)(\"k-calendar-decadeview\", ctx.getComponentDecadeClass)(\"k-calendar-centuryview\", ctx.getComponentCenturyClass);\n    }\n  },\n  inputs: {\n    activeView: \"activeView\",\n    isActive: \"isActive\",\n    min: \"min\",\n    max: \"max\",\n    views: \"views\",\n    weekNumber: \"weekNumber\",\n    focusedDate: \"focusedDate\",\n    cellTemplateRef: \"cellTemplateRef\",\n    weekNumberTemplateRef: \"weekNumberTemplateRef\",\n    headerTitleTemplateRef: \"headerTitleTemplateRef\",\n    activeRangeEnd: \"activeRangeEnd\",\n    cellUID: \"cellUID\",\n    selectionRange: \"selectionRange\",\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    cellEnter: \"cellEnter\",\n    cellLeave: \"cellLeave\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 7,\n  consts: [[3, \"activeView\", \"currentDate\", \"min\", \"max\", \"rangeLength\", \"templateRef\", \"today\"], [1, \"k-content\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", \"direction\", \"horizontal\", 3, \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDate\", \"selectionRange\", \"activeRangeEnd\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"change\", \"cellEnter\", \"cellLeave\", 4, \"kFor\", \"kForOf\"], [\"kendoCalendarView\", \"\", \"role\", \"rowgroup\", \"direction\", \"horizontal\", 3, \"activeView\", \"isActive\", \"min\", \"max\", \"cellUID\", \"focusedDate\", \"selectedDate\", \"selectionRange\", \"activeRangeEnd\", \"weekNumber\", \"templateRef\", \"weekNumberTemplateRef\", \"viewDate\", \"change\", \"cellEnter\", \"cellLeave\"]],\n  template: function HorizontalViewListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-calendar-header\", 0);\n      ɵngcc0.ɵɵlistener(\"today\", function HorizontalViewListComponent_Template_kendo_calendar_header_today_0_listener($event) {\n        return ctx.handleDateChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(1, \"table\", 1);\n      ɵngcc0.ɵɵtemplate(2, HorizontalViewListComponent_tbody_2_Template, 1, 13, \"tbody\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"activeView\", ctx.activeView)(\"currentDate\", ctx.activeDate)(\"min\", ctx.min)(\"max\", ctx.max)(\"rangeLength\", ctx.views)(\"templateRef\", ctx.headerTitleTemplateRef);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"kForOf\", ctx.dates);\n    }\n  },\n  directives: function directives() {\n    return [HeaderComponent, KForOf, ViewComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nHorizontalViewListComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nHorizontalViewListComponent.propDecorators = {\n  cellTemplateRef: [{\n    type: Input\n  }],\n  weekNumberTemplateRef: [{\n    type: Input\n  }],\n  headerTitleTemplateRef: [{\n    type: Input\n  }],\n  activeRangeEnd: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  cellUID: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  isActive: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  selectionRange: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  views: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  cellEnter: [{\n    type: Output\n  }],\n  cellLeave: [{\n    type: Output\n  }],\n  getComponentClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-view\"]\n  }],\n  getComponentMonthClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-monthview\"]\n  }],\n  getComponentYearClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-yearview\"]\n  }],\n  getComponentDecadeClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-decadeview\"]\n  }],\n  getComponentCenturyClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-centuryview\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HorizontalViewListComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-calendar-horizontal',\n      template: \"\\n    <kendo-calendar-header\\n        [activeView]=\\\"activeView\\\"\\n        [currentDate]=\\\"activeDate\\\"\\n        [min]=\\\"min\\\"\\n        [max]=\\\"max\\\"\\n        [rangeLength]=\\\"views\\\"\\n        [templateRef]=\\\"headerTitleTemplateRef\\\"\\n        (today)=\\\"handleDateChange($event)\\\"\\n    >\\n    </kendo-calendar-header>\\n    <table class=\\\"k-content\\\">\\n        <tbody *kFor=\\\"let date of dates\\\"\\n               kendoCalendarView\\n               role=\\\"rowgroup\\\"\\n               direction=\\\"horizontal\\\"\\n               [activeView]=\\\"activeView\\\"\\n               [isActive]=\\\"isActive\\\"\\n               [min]=\\\"min\\\" [max]=\\\"max\\\"\\n               [cellUID]=\\\"cellUID\\\"\\n               [focusedDate]=\\\"focusedDate\\\"\\n               [selectedDate]=\\\"value\\\"\\n               [selectionRange]=\\\"selectionRange\\\"\\n               [activeRangeEnd]=\\\"activeRangeEnd\\\"\\n               [weekNumber]=\\\"weekNumber\\\"\\n               [templateRef]=\\\"cellTemplateRef\\\"\\n               [weekNumberTemplateRef]=\\\"weekNumberTemplateRef\\\"\\n               [viewDate]=\\\"date\\\"\\n               (change)=\\\"handleDateChange($event)\\\"\\n               (cellEnter)=\\\"cellEnter.emit($event)\\\"\\n               (cellLeave)=\\\"cellLeave.emit($event)\\\"\\n        ></tbody>\\n    </table>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    activeView: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    views: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    cellEnter: [{\n      type: Output\n    }],\n    cellLeave: [{\n      type: Output\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    getComponentClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-view\"]\n    }],\n    getComponentMonthClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-monthview\"]\n    }],\n    getComponentYearClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-yearview\"]\n    }],\n    getComponentDecadeClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-decadeview\"]\n    }],\n    getComponentCenturyClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-centuryview\"]\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    cellTemplateRef: [{\n      type: Input\n    }],\n    weekNumberTemplateRef: [{\n      type: Input\n    }],\n    headerTitleTemplateRef: [{\n      type: Input\n    }],\n    activeRangeEnd: [{\n      type: Input\n    }],\n    cellUID: [{\n      type: Input\n    }],\n    selectionRange: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n\nvar noop$2 = function noop$2() {\n  return null;\n};\n/**\n * @hidden\n */\n\n\nvar disabledDatesRangeValidator = function disabledDatesRangeValidator(isDateDisabled) {\n  if (!isPresent(isDateDisabled)) {\n    return noop$2;\n  }\n\n  return function (selectedRange) {\n    var isRangeComplete = isPresent(selectedRange) && isPresent(selectedRange.start) && isPresent(selectedRange.end);\n\n    if (!isRangeComplete || selectedRange.start > selectedRange.end) {\n      return null;\n    }\n\n    var disabledDates = disabledDatesInRange(selectedRange.start, selectedRange.end, isDateDisabled);\n    var error = {\n      disabledDatesInRange: disabledDates\n    };\n    return disabledDates.length ? error : null;\n  };\n};\n/* tslint:disable:no-forward-ref */\n\n\nvar BOTTOM_VIEW_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nvar TOP_VIEW_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nvar MIN_DOC_LINK$3 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nvar MAX_DOC_LINK$3 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nvar VALUE_DOC_LINK$5 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\n/**\n * @hidden\n */\n\nvar RANGE_CALENDAR_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MultiViewCalendarComponent;\n  }) //tslint:disable-line:no-use-before-declare\n\n};\n/**\n * @hidden\n */\n\nvar RANGE_CALENDAR_RANGE_VALIDATORS = {\n  multi: true,\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(function () {\n    return MultiViewCalendarComponent;\n  }) //tslint:disable-line:no-use-before-declare\n\n};\n/**\n * Represents the Kendo UI MultiViewCalendar component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiviewcalendar></kendo-multiviewcalendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\n\nvar MultiViewCalendarComponent = /*#__PURE__*/function () {\n  function MultiViewCalendarComponent(bus, element, localization, navigator, renderer, cdr, zone, disabledDatesService) {\n    _classCallCheck(this, MultiViewCalendarComponent);\n\n    this.bus = bus;\n    this.element = element;\n    this.localization = localization;\n    this.navigator = navigator;\n    this.renderer = renderer;\n    this.cdr = cdr;\n    this.zone = zone;\n    this.disabledDatesService = disabledDatesService;\n    /**\n     * @hidden\n     */\n\n    this.id = guid();\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n\n    this.rangeValidation = false;\n    /**\n     * Determines whether the built-in validator for disabled\n     * date ranges is enforced when validating a form\n     * ([see example]({% slug disabled_dates_multiviewcalendar %}#toc-validation)).\n     */\n\n    this.disabledDatesRangeValidation = false;\n    /**\n     * Sets or gets the `disabled` property of the Calendar and\n     * determines whether the component is active\n     * ([see example]({% slug disabled_multiviewcalendar %})).\n     */\n\n    this.disabled = false;\n    /**\n     * Sets or gets the `tabindex` property of the Calendar. Based on the\n     * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n     * it determines whether the component is focusable.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Defines the active view that the Calendar initially renders\n     * ([see example]({% slug activeview_multiviewcalendar %})).\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the bottommost view, to which the user can navigate\n     * ([see example]({% slug dates_multiviewcalendar %}#toc-partial-dates)).\n     */\n\n    this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n    /**\n     * Defines the topmost view, to which the user can navigate.\n     */\n\n    this.topView = CalendarViewEnum[CalendarViewEnum.century];\n    /**\n     * Determines whether to display a week number column in the `month` view\n     * ([see example]({% slug weeknumcolumn_multiviewcalendar %})).\n     */\n\n    this.weekNumber = false;\n    /**\n     * Sets or gets the `views` property of the Calendar and\n     * defines the number of rendered months.\n     */\n\n    this.views = 2;\n    /**\n     * Fires when the active view is changed\n     * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n     */\n\n    this.activeViewChange = new EventEmitter();\n    /**\n     * Fires when a view cell is entered\n     * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n     */\n\n    this.cellEnter = new EventEmitter();\n    /**\n     * Fires when a view cell is leaved\n     * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n     */\n\n    this.cellLeave = new EventEmitter();\n    /**\n     * Fires when the value is changed\n     * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    this.cellUID = guid();\n    this.isActive = false;\n    this.isHovered = false;\n    this.isPrevDisabled = true;\n    this.isNextDisabled = true;\n    this.prevView = Action.PrevView;\n    this.nextView = Action.NextView;\n    this._min = new Date(MIN_DATE);\n    this._max = new Date(MAX_DATE);\n    this._focusedDate = getToday();\n    this.resolvedPromise = Promise.resolve();\n    this.onControlChange = noop;\n    this.onControlTouched = noop;\n    this.onValidatorChange = noop;\n    this.minValidateFn = noop;\n    this.maxValidateFn = noop;\n    this.disabledDatesRangeValidateFn = noop;\n    this.subscriptions = new Subscription(function () {});\n    this.setClasses(element.nativeElement);\n  }\n  /**\n   * Sets or gets the `focusedDate` property of the Calendar and\n   * defines the focused date of the component\n   * ([see example]({% slug dates_multiviewcalendar %}#toc-focused-dates)).\n   *\n   * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n   */\n\n\n  _createClass(MultiViewCalendarComponent, [{\n    key: \"handleBlur\",\n\n    /**\n     * @hidden\n     */\n    value: function handleBlur() {\n      this.onControlTouched();\n      this.isActive = false;\n      this.isHovered = false; //ensure that hovered is also not active\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      this.isActive = true;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter() {\n      this.isHovered = true;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave() {\n      this.isHovered = false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleMousedown\",\n    value: function handleMousedown(event) {\n      event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      if (this.isActive) {\n        return;\n      }\n\n      this.focus();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"keydown\",\n    value: function keydown(event) {\n      var candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(event), this.activeViewEnum), this.min, this.max);\n\n      if (isEqual(this.focusedDate, candidate)) {\n        return;\n      }\n\n      this.focusedDate = candidate;\n      event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.handleDateChange(this.focusedDate);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this44 = this;\n\n      this.setMessages();\n      this.subscriptions.add(this.localization.changes.subscribe(function () {\n        return _this44.setMessages();\n      }));\n      this.subscriptions.add(this.bus.viewChanged.subscribe(function (_ref13) {\n        var view = _ref13.view;\n        _this44.activeView = CalendarViewEnum[view];\n\n        _this44.activeViewChange.emit(_this44.activeView);\n\n        _this44.cdr.detectChanges();\n\n        _this44.updateButtonState();\n      }));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.verifyChanges();\n      this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n      var useValue = hasExistingValue(changes, 'value') && !hasExistingValue(changes, 'focusedDate');\n      var focusedDate = dateInRange(cloneDate(useValue ? this.value : this.focusedDate), this.min, this.max);\n      this.focusedDate = !isEqual(this.focusedDate, focusedDate) ? focusedDate : this.focusedDate;\n\n      if (changes.min || changes.max || changes.rangeValidation || changes.disabledDates || changes.disabledDatesRangeValidation) {\n        this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n        this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n        this.disabledDatesRangeValidateFn = this.disabledDatesRangeValidation ? disabledDatesRangeValidator(this.disabledDatesService.isDateDisabled) : noop;\n        this.onValidatorChange();\n      }\n\n      if (changes.min || changes.max || changes.focusedDate || changes.activeView) {\n        this.updateButtonState();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      clearTimeout(this.messagesTimeout);\n      this.subscriptions.unsubscribe();\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.updateButtonState();\n    }\n    /**\n     * Focuses the host element of the Calendar.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"multiviewcalendar.focus()\">Focus calendar</button>\n     *  <kendo-multiviewcalendar #multiviewcalendar></kendo-multiviewcalendar>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(candidate) {\n      var canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n      var isSameDate = !canNavigateDown && isEqual(candidate, this.value);\n      this.focusedDate = cloneDate(candidate) || this.focusedDate;\n\n      if (this.disabled || isSameDate) {\n        return;\n      }\n\n      if (canNavigateDown) {\n        this.bus.moveDown(this.activeViewEnum);\n        return;\n      }\n\n      if (!this.disabledDatesService.isDateDisabled(candidate)) {\n        this.value = cloneDate(candidate);\n        this.onControlChange(cloneDate(candidate));\n        this.valueChange.emit(cloneDate(candidate));\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(candidate) {\n      this.verifyValue(candidate);\n      this.focusedDate = dateInRange(cloneDate(candidate) || this.focusedDate, this.min, this.max);\n      this.value = cloneDate(candidate);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"validate\",\n    value: function validate(control) {\n      return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesRangeValidateFn(this.selectionRange);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnValidatorChange\",\n    value: function registerOnValidatorChange(fn) {\n      this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"activeCellTemplate\",\n    value: function activeCellTemplate() {\n      switch (this.activeViewEnum) {\n        case CalendarViewEnum.month:\n          return this.monthCellTemplate || this.cellTemplate;\n\n        case CalendarViewEnum.year:\n          return this.yearCellTemplate;\n\n        case CalendarViewEnum.decade:\n          return this.decadeCellTemplate;\n\n        case CalendarViewEnum.century:\n          return this.centuryCellTemplate;\n\n        default:\n          return null;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"navigate\",\n    value: function navigate(action) {\n      this.focusedDate = this.viewList.navigate(action);\n      this.updateButtonState();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"emitCellEvent\",\n    value: function emitCellEvent(emitter, args) {\n      if (hasObservers(emitter)) {\n        this.zone.run(function () {\n          emitter.emit(args);\n        });\n      }\n    }\n  }, {\n    key: \"setClasses\",\n    value: function setClasses(element) {\n      this.renderer.addClass(element, 'k-widget');\n      this.renderer.addClass(element, 'k-calendar');\n      this.renderer.addClass(element, 'k-calendar-infinite');\n      this.renderer.addClass(element, 'k-calendar-range');\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages() {\n      var _this45 = this;\n\n      this.zone.runOutsideAngular(function () {\n        clearTimeout(_this45.messagesTimeout);\n        _this45.messagesTimeout = setTimeout(function () {\n          _this45.prevButtonTitle = _this45.localization.get('prevButtonTitle');\n          _this45.nextButtonTitle = _this45.localization.get('nextButtonTitle');\n\n          _this45.cdr.detectChanges();\n        });\n      });\n    }\n  }, {\n    key: \"verifyChanges\",\n    value: function verifyChanges() {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (this.min > this.max) {\n        throw new Error(\"The max value should be bigger than the min. See \".concat(MIN_DOC_LINK$3, \" and \").concat(MAX_DOC_LINK$3, \".\"));\n      }\n\n      if (this.bottomViewEnum > this.topViewEnum) {\n        throw new Error(\"The topView should be greater than bottomView. See \".concat(BOTTOM_VIEW_DOC_LINK$1, \" and \").concat(TOP_VIEW_DOC_LINK$1, \".\"));\n      }\n    }\n  }, {\n    key: \"verifyValue\",\n    value: function verifyValue(candidate) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (candidate && !(candidate instanceof Date)) {\n        throw new Error(\"The 'value' should be a valid JavaScript Date instance. Check \".concat(VALUE_DOC_LINK$5, \" for possible resolution.\"));\n      }\n    }\n  }, {\n    key: \"updateButtonState\",\n    value: function updateButtonState() {\n      var _this46 = this;\n\n      this.resolvedPromise.then(function () {\n        _this46.isPrevDisabled = !_this46.viewList.canNavigate(_this46.prevView);\n        _this46.isNextDisabled = !_this46.viewList.canNavigate(_this46.nextView);\n\n        _this46.cdr.markForCheck();\n      });\n    }\n  }, {\n    key: \"focusedDate\",\n    set: function set(focusedDate) {\n      this._focusedDate = focusedDate || getToday();\n    },\n    get: function get() {\n      return this._focusedDate;\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value.\n     * By default, the `min` value is `1900-1-1`.\n     */\n\n  }, {\n    key: \"min\",\n    set: function set(min) {\n      this._min = min || new Date(MIN_DATE);\n    },\n    get: function get() {\n      return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value.\n     * By default, the `max` value is `2099-12-31`.\n     */\n\n  }, {\n    key: \"max\",\n    set: function set(max) {\n      this._max = max || new Date(MAX_DATE);\n    },\n    get: function get() {\n      return this._max;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(candidate) {\n      this.verifyValue(candidate);\n      this._value = cloneDate(candidate);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Sets the dates of the MultiViewCalendar that will be disabled\n     * ([see example]({% slug disabled_dates_multiviewcalendar %})).\n     */\n\n  }, {\n    key: \"disabledDates\",\n    set: function set(value) {\n      this.disabledDatesService.initialize(value);\n    }\n    /**\n     * Sets or gets the `selectionRange` property of the Calendar and\n     * defines the selection range of the component\n     * ([see example]({% slug dates_multiviewcalendar %}#toc-selection-range)).\n     */\n\n  }, {\n    key: \"selectionRange\",\n    set: function set(range$$1) {\n      this._selectionRange = range$$1;\n\n      if (this.disabledDatesRangeValidation) {\n        this.onValidatorChange();\n      }\n    },\n    get: function get() {\n      return this._selectionRange;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"cellTemplateRef\",\n    set: function set(template) {\n      this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"monthCellTemplateRef\",\n    set: function set(template) {\n      this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"yearCellTemplateRef\",\n    set: function set(template) {\n      this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"decadeCellTemplateRef\",\n    set: function set(template) {\n      this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"centuryCellTemplateRef\",\n    set: function set(template) {\n      this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"weekNumberTemplateRef\",\n    set: function set(template) {\n      this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"headerTitleTemplateRef\",\n    set: function set(template) {\n      this.headerTitleTemplate = template;\n    }\n  }, {\n    key: \"activeViewEnum\",\n    get: function get() {\n      var activeView = CalendarViewEnum[this.activeView];\n      return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n  }, {\n    key: \"bottomViewEnum\",\n    get: function get() {\n      return CalendarViewEnum[this.bottomView];\n    }\n  }, {\n    key: \"topViewEnum\",\n    get: function get() {\n      return CalendarViewEnum[this.topView];\n    }\n  }, {\n    key: \"widgetId\",\n    get: function get() {\n      return this.id;\n    }\n  }, {\n    key: \"widgetRole\",\n    get: function get() {\n      return 'grid';\n    }\n  }, {\n    key: \"calendarTabIndex\",\n    get: function get() {\n      return this.disabled ? undefined : this.tabIndex;\n    }\n  }, {\n    key: \"ariaDisabled\",\n    get: function get() {\n      return this.disabled;\n    }\n  }, {\n    key: \"ariaActivedescendant\",\n    get: function get() {\n      return this.cellUID + this.focusedDate.getTime();\n    }\n  }]);\n\n  return MultiViewCalendarComponent;\n}();\n\nMultiViewCalendarComponent.ɵfac = function MultiViewCalendarComponent_Factory(t) {\n  return new (t || MultiViewCalendarComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService));\n};\n\nMultiViewCalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MultiViewCalendarComponent,\n  selectors: [[\"kendo-multiviewcalendar\"]],\n  contentQueries: function MultiViewCalendarComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, CellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, MonthCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, YearCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, DecadeCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, CenturyCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, WeekNumberCellTemplateDirective, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, HeaderTitleTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.monthCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.yearCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.decadeCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.centuryCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.weekNumberTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTitleTemplate = _t.first);\n    }\n  },\n  viewQuery: function MultiViewCalendarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(HorizontalViewListComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewList = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function MultiViewCalendarComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"blur\", function MultiViewCalendarComponent_blur_HostBindingHandler() {\n        return ctx.handleBlur();\n      })(\"focus\", function MultiViewCalendarComponent_focus_HostBindingHandler() {\n        return ctx.handleFocus();\n      })(\"mouseenter\", function MultiViewCalendarComponent_mouseenter_HostBindingHandler() {\n        return ctx.handleMouseEnter();\n      })(\"mouseleave\", function MultiViewCalendarComponent_mouseleave_HostBindingHandler() {\n        return ctx.handleMouseLeave();\n      })(\"mousedown\", function MultiViewCalendarComponent_mousedown_HostBindingHandler($event) {\n        return ctx.handleMousedown($event);\n      })(\"click\", function MultiViewCalendarComponent_click_HostBindingHandler() {\n        return ctx.handleClick();\n      })(\"keydown\", function MultiViewCalendarComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      })(\"keydown.enter\", function MultiViewCalendarComponent_keydown_enter_HostBindingHandler() {\n        return ctx.enter();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.widgetId)(\"role\", ctx.widgetRole)(\"tabindex\", ctx.calendarTabIndex)(\"aria-disabled\", ctx.ariaDisabled)(\"aria-activedescendant\", ctx.ariaActivedescendant);\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", ctx.ariaDisabled);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    rangeValidation: \"rangeValidation\",\n    disabledDatesRangeValidation: \"disabledDatesRangeValidation\",\n    disabled: \"disabled\",\n    tabindex: \"tabindex\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\",\n    views: \"views\",\n    focusedDate: \"focusedDate\",\n    min: \"min\",\n    max: \"max\",\n    value: \"value\",\n    tabIndex: \"tabIndex\",\n    disabledDates: \"disabledDates\",\n    selectionRange: \"selectionRange\",\n    cellTemplateRef: [\"cellTemplate\", \"cellTemplateRef\"],\n    monthCellTemplateRef: [\"monthCellTemplate\", \"monthCellTemplateRef\"],\n    yearCellTemplateRef: [\"yearCellTemplate\", \"yearCellTemplateRef\"],\n    decadeCellTemplateRef: [\"decadeCellTemplate\", \"decadeCellTemplateRef\"],\n    centuryCellTemplateRef: [\"centuryCellTemplate\", \"centuryCellTemplateRef\"],\n    weekNumberTemplateRef: [\"weekNumberTemplate\", \"weekNumberTemplateRef\"],\n    headerTitleTemplateRef: [\"headerTitleTemplate\", \"headerTitleTemplateRef\"],\n    activeRangeEnd: \"activeRangeEnd\"\n  },\n  outputs: {\n    activeViewChange: \"activeViewChange\",\n    cellEnter: \"cellEnter\",\n    cellLeave: \"cellLeave\",\n    valueChange: \"valueChange\"\n  },\n  exportAs: [\"kendo-multiviewcalendar\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([BusViewService, RANGE_CALENDAR_VALUE_ACCESSOR, RANGE_CALENDAR_RANGE_VALIDATORS, LocalizationService, DisabledDatesService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.multiviewcalendar'\n  }, NavigationService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 20,\n  consts: function consts() {\n    var i18n_67;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the today button in the calendar header\n       * @meaning kendo.multiviewcalendar.today\n       */\n      var MSG_EXTERNAL_3892034896682737327$$DIST_FESM2015_INDEX_JS_68 = goog.getMsg(\"TODAY\");\n      i18n_67 = MSG_EXTERNAL_3892034896682737327$$DIST_FESM2015_INDEX_JS_68;\n    } else {\n      i18n_67 = $localize(_templateObject25());\n    }\n\n    var i18n_69;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the previous button in the Multiview calendar\n       * @meaning kendo.multiviewcalendar.prevButtonTitle\n       */\n      var MSG_EXTERNAL_9101635325676663492$$DIST_FESM2015_INDEX_JS_70 = goog.getMsg(\"Navigate to previous view\");\n      i18n_69 = MSG_EXTERNAL_9101635325676663492$$DIST_FESM2015_INDEX_JS_70;\n    } else {\n      i18n_69 = $localize(_templateObject26());\n    }\n\n    var i18n_71;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the next button in the Multiview calendar\n       * @meaning kendo.multiviewcalendar.nextButtonTitle\n       */\n      var MSG_EXTERNAL_3994336778698343633$$DIST_FESM2015_INDEX_JS_72 = goog.getMsg(\"Navigate to next view\");\n      i18n_71 = MSG_EXTERNAL_3994336778698343633$$DIST_FESM2015_INDEX_JS_72;\n    } else {\n      i18n_71 = $localize(_templateObject27());\n    }\n\n    return [[\"kendoMultiViewCalendarLocalizedMessages\", \"\", 6, \"today\", \"prevButtonTitle\", \"nextButtonTitle\"], [\"today\", i18n_67, \"prevButtonTitle\", i18n_69, \"nextButtonTitle\", i18n_71], [\"type\", \"button\", 1, \"k-button\", \"k-prev-view\", 3, \"disabled\", \"title\", \"click\"], [1, \"k-icon\", \"k-i-arrow-chevron-left\"], [3, \"activeView\", \"isActive\", \"cellTemplateRef\", \"headerTitleTemplateRef\", \"weekNumberTemplateRef\", \"cellUID\", \"views\", \"min\", \"max\", \"focusedDate\", \"weekNumber\", \"activeRangeEnd\", \"selectionRange\", \"value\", \"valueChange\", \"cellEnter\", \"cellLeave\"], [\"type\", \"button\", 1, \"k-button\", \"k-next-view\", 3, \"disabled\", \"title\", \"click\"], [1, \"k-icon\", \"k-i-arrow-chevron-right\"]];\n  },\n  template: function MultiViewCalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function MultiViewCalendarComponent_Template_button_click_2_listener() {\n        return ctx.navigate(ctx.prevView);\n      });\n      ɵngcc0.ɵɵelement(3, \"span\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(4, \"kendo-calendar-horizontal\", 4);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function MultiViewCalendarComponent_Template_kendo_calendar_horizontal_valueChange_4_listener($event) {\n        return ctx.handleDateChange($event);\n      })(\"cellEnter\", function MultiViewCalendarComponent_Template_kendo_calendar_horizontal_cellEnter_4_listener($event) {\n        return ctx.emitCellEvent(ctx.cellEnter, $event);\n      })(\"cellLeave\", function MultiViewCalendarComponent_Template_kendo_calendar_horizontal_cellLeave_4_listener($event) {\n        return ctx.emitCellEvent(ctx.cellLeave, $event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n      ɵngcc0.ɵɵlistener(\"click\", function MultiViewCalendarComponent_Template_button_click_5_listener() {\n        return ctx.navigate(ctx.nextView);\n      });\n      ɵngcc0.ɵɵelement(6, \"span\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      var tmp_5_0 = null;\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.isPrevDisabled)(\"title\", ctx.prevButtonTitle);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.isPrevDisabled);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"activeView\", ctx.activeViewEnum)(\"isActive\", ctx.isActive || ctx.isHovered)(\"cellTemplateRef\", (tmp_5_0 = ctx.activeCellTemplate()) == null ? null : tmp_5_0.templateRef)(\"headerTitleTemplateRef\", ctx.headerTitleTemplate == null ? null : ctx.headerTitleTemplate.templateRef)(\"weekNumberTemplateRef\", ctx.weekNumberTemplate == null ? null : ctx.weekNumberTemplate.templateRef)(\"cellUID\", ctx.cellUID)(\"views\", ctx.views)(\"min\", ctx.min)(\"max\", ctx.max)(\"focusedDate\", ctx.focusedDate)(\"weekNumber\", ctx.weekNumber)(\"activeRangeEnd\", ctx.activeRangeEnd)(\"selectionRange\", ctx.selectionRange)(\"value\", ctx.value);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.isNextDisabled)(\"title\", ctx.nextButtonTitle);\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.isNextDisabled);\n    }\n  },\n  directives: function directives() {\n    return [MultiViewCalendarLocalizedMessagesDirective, HorizontalViewListComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMultiViewCalendarComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: ElementRef\n  }, {\n    type: LocalizationService\n  }, {\n    type: NavigationService\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }, {\n    type: DisabledDatesService\n  }];\n};\n\nMultiViewCalendarComponent.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  rangeValidation: [{\n    type: Input\n  }],\n  disabledDatesRangeValidation: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  disabledDates: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  bottomView: [{\n    type: Input\n  }],\n  topView: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  activeRangeEnd: [{\n    type: Input\n  }],\n  selectionRange: [{\n    type: Input\n  }],\n  views: [{\n    type: Input\n  }],\n  activeViewChange: [{\n    type: Output\n  }],\n  cellEnter: [{\n    type: Output\n  }],\n  cellLeave: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  cellTemplate: [{\n    type: ContentChild,\n    args: [CellTemplateDirective, {\n      static: true\n    }]\n  }],\n  cellTemplateRef: [{\n    type: Input,\n    args: ['cellTemplate']\n  }],\n  monthCellTemplate: [{\n    type: ContentChild,\n    args: [MonthCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  monthCellTemplateRef: [{\n    type: Input,\n    args: ['monthCellTemplate']\n  }],\n  yearCellTemplate: [{\n    type: ContentChild,\n    args: [YearCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  yearCellTemplateRef: [{\n    type: Input,\n    args: ['yearCellTemplate']\n  }],\n  decadeCellTemplate: [{\n    type: ContentChild,\n    args: [DecadeCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  decadeCellTemplateRef: [{\n    type: Input,\n    args: ['decadeCellTemplate']\n  }],\n  centuryCellTemplate: [{\n    type: ContentChild,\n    args: [CenturyCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  centuryCellTemplateRef: [{\n    type: Input,\n    args: ['centuryCellTemplate']\n  }],\n  weekNumberTemplate: [{\n    type: ContentChild,\n    args: [WeekNumberCellTemplateDirective, {\n      static: true\n    }]\n  }],\n  weekNumberTemplateRef: [{\n    type: Input,\n    args: ['weekNumberTemplate']\n  }],\n  headerTitleTemplate: [{\n    type: ContentChild,\n    args: [HeaderTitleTemplateDirective, {\n      static: true\n    }]\n  }],\n  headerTitleTemplateRef: [{\n    type: Input,\n    args: ['headerTitleTemplate']\n  }],\n  viewList: [{\n    type: ViewChild,\n    args: [HorizontalViewListComponent]\n  }],\n  widgetId: [{\n    type: HostBinding,\n    args: ['attr.id']\n  }],\n  widgetRole: [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  calendarTabIndex: [{\n    type: HostBinding,\n    args: ['attr.tabindex']\n  }],\n  ariaDisabled: [{\n    type: HostBinding,\n    args: ['attr.aria-disabled']\n  }, {\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }],\n  ariaActivedescendant: [{\n    type: HostBinding,\n    args: ['attr.aria-activedescendant']\n  }],\n  handleBlur: [{\n    type: HostListener,\n    args: [\"blur\"]\n  }],\n  handleFocus: [{\n    type: HostListener,\n    args: [\"focus\"]\n  }],\n  handleMouseEnter: [{\n    type: HostListener,\n    args: [\"mouseenter\"]\n  }],\n  handleMouseLeave: [{\n    type: HostListener,\n    args: [\"mouseleave\"]\n  }],\n  handleMousedown: [{\n    type: HostListener,\n    args: [\"mousedown\", ['$event']]\n  }],\n  handleClick: [{\n    type: HostListener,\n    args: [\"click\"]\n  }],\n  keydown: [{\n    type: HostListener,\n    args: [\"keydown\", [\"$event\"]]\n  }],\n  enter: [{\n    type: HostListener,\n    args: [\"keydown.enter\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiViewCalendarComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-multiviewcalendar',\n      providers: [BusViewService, RANGE_CALENDAR_VALUE_ACCESSOR, RANGE_CALENDAR_RANGE_VALIDATORS, LocalizationService, DisabledDatesService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.multiviewcalendar'\n      }, NavigationService],\n      selector: 'kendo-multiviewcalendar',\n      template: \"\\n    <ng-container kendoMultiViewCalendarLocalizedMessages\\n        i18n-today=\\\"kendo.multiviewcalendar.today|The label for the today button in the calendar header\\\"\\n        today=\\\"TODAY\\\"\\n\\n        i18n-prevButtonTitle=\\\"kendo.multiviewcalendar.prevButtonTitle|The label for the previous button in the Multiview calendar\\\"\\n        prevButtonTitle=\\\"Navigate to previous view\\\"\\n\\n        i18n-nextButtonTitle=\\\"kendo.multiviewcalendar.nextButtonTitle|The label for the next button in the Multiview calendar\\\"\\n        nextButtonTitle=\\\"Navigate to next view\\\"\\n    >\\n    </ng-container>\\n    <button\\n        class=\\\"k-button k-prev-view\\\" type=\\\"button\\\"\\n        [attr.aria-disabled]=\\\"isPrevDisabled\\\"\\n        [disabled]=\\\"isPrevDisabled\\\"\\n        [title]=\\\"prevButtonTitle\\\"\\n        (click)=\\\"navigate(prevView)\\\"\\n    >\\n        <span class=\\\"k-icon k-i-arrow-chevron-left\\\"></span>\\n    </button>\\n    <kendo-calendar-horizontal\\n        [activeView]=\\\"activeViewEnum\\\"\\n        [isActive]=\\\"isActive || isHovered\\\"\\n        [cellTemplateRef]=\\\"activeCellTemplate()?.templateRef\\\"\\n        [headerTitleTemplateRef]=\\\"headerTitleTemplate?.templateRef\\\"\\n        [weekNumberTemplateRef]=\\\"weekNumberTemplate?.templateRef\\\"\\n        [cellUID]=\\\"cellUID\\\"\\n        [views]=\\\"views\\\"\\n        [min]=\\\"min\\\"\\n        [max]=\\\"max\\\"\\n        [focusedDate]=\\\"focusedDate\\\"\\n        [weekNumber]=\\\"weekNumber\\\"\\n        [activeRangeEnd]=\\\"activeRangeEnd\\\"\\n        [selectionRange]=\\\"selectionRange\\\"\\n        [value]=\\\"value\\\"\\n        (valueChange)=\\\"handleDateChange($event)\\\"\\n        (cellEnter)=\\\"emitCellEvent(cellEnter, $event)\\\"\\n        (cellLeave)=\\\"emitCellEvent(cellLeave, $event)\\\"\\n    >\\n    </kendo-calendar-horizontal>\\n    <button\\n        class=\\\"k-button k-next-view\\\" type=\\\"button\\\"\\n        [attr.aria-disabled]=\\\"isNextDisabled\\\"\\n        [disabled]=\\\"isNextDisabled\\\"\\n        [title]=\\\"nextButtonTitle\\\"\\n        (click)=\\\"navigate(nextView)\\\"\\n    >\\n        <span class=\\\"k-icon k-i-arrow-chevron-right\\\"></span>\\n    </button>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: ElementRef\n    }, {\n      type: LocalizationService\n    }, {\n      type: NavigationService\n    }, {\n      type: Renderer2\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: NgZone\n    }, {\n      type: DisabledDatesService\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    rangeValidation: [{\n      type: Input\n    }],\n    disabledDatesRangeValidation: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    views: [{\n      type: Input\n    }],\n    activeViewChange: [{\n      type: Output\n    }],\n    cellEnter: [{\n      type: Output\n    }],\n    cellLeave: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disabledDates: [{\n      type: Input\n    }],\n    selectionRange: [{\n      type: Input\n    }],\n    cellTemplateRef: [{\n      type: Input,\n      args: ['cellTemplate']\n    }],\n    cellTemplate: [{\n      type: ContentChild,\n      args: [CellTemplateDirective, {\n        static: true\n      }]\n    }],\n    monthCellTemplateRef: [{\n      type: Input,\n      args: ['monthCellTemplate']\n    }],\n    monthCellTemplate: [{\n      type: ContentChild,\n      args: [MonthCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    yearCellTemplateRef: [{\n      type: Input,\n      args: ['yearCellTemplate']\n    }],\n    yearCellTemplate: [{\n      type: ContentChild,\n      args: [YearCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    decadeCellTemplateRef: [{\n      type: Input,\n      args: ['decadeCellTemplate']\n    }],\n    decadeCellTemplate: [{\n      type: ContentChild,\n      args: [DecadeCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    centuryCellTemplateRef: [{\n      type: Input,\n      args: ['centuryCellTemplate']\n    }],\n    centuryCellTemplate: [{\n      type: ContentChild,\n      args: [CenturyCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    weekNumberTemplateRef: [{\n      type: Input,\n      args: ['weekNumberTemplate']\n    }],\n    weekNumberTemplate: [{\n      type: ContentChild,\n      args: [WeekNumberCellTemplateDirective, {\n        static: true\n      }]\n    }],\n    headerTitleTemplateRef: [{\n      type: Input,\n      args: ['headerTitleTemplate']\n    }],\n    headerTitleTemplate: [{\n      type: ContentChild,\n      args: [HeaderTitleTemplateDirective, {\n        static: true\n      }]\n    }],\n    widgetId: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    widgetRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    calendarTabIndex: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    ariaDisabled: [{\n      type: HostBinding,\n      args: ['attr.aria-disabled']\n    }, {\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    ariaActivedescendant: [{\n      type: HostBinding,\n      args: ['attr.aria-activedescendant']\n    }],\n\n    /**\n     * @hidden\n     */\n    handleBlur: [{\n      type: HostListener,\n      args: [\"blur\"]\n    }],\n\n    /**\n     * @hidden\n     */\n    handleFocus: [{\n      type: HostListener,\n      args: [\"focus\"]\n    }],\n\n    /**\n     * @hidden\n     */\n    handleMouseEnter: [{\n      type: HostListener,\n      args: [\"mouseenter\"]\n    }],\n\n    /**\n     * @hidden\n     */\n    handleMouseLeave: [{\n      type: HostListener,\n      args: [\"mouseleave\"]\n    }],\n\n    /**\n     * @hidden\n     */\n    handleMousedown: [{\n      type: HostListener,\n      args: [\"mousedown\", ['$event']]\n    }],\n\n    /**\n     * @hidden\n     */\n    handleClick: [{\n      type: HostListener,\n      args: [\"click\"]\n    }],\n\n    /**\n     * @hidden\n     */\n    keydown: [{\n      type: HostListener,\n      args: [\"keydown\", [\"$event\"]]\n    }],\n\n    /**\n     * @hidden\n     */\n    enter: [{\n      type: HostListener,\n      args: [\"keydown.enter\"]\n    }],\n    activeRangeEnd: [{\n      type: Input\n    }],\n    viewList: [{\n      type: ViewChild,\n      args: [HorizontalViewListComponent]\n    }]\n  });\n})();\n/**\n * A directive which renders the content of the DateRange Popup. To define the cell template, nest an\n * `<ng-template>` tag with the `kendoRangePopupTemplate` directive inside the component tag.\n */\n\n\nvar DateRangePopupTemplateDirective = function DateRangePopupTemplateDirective(templateRef) {\n  _classCallCheck(this, DateRangePopupTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nDateRangePopupTemplateDirective.ɵfac = function DateRangePopupTemplateDirective_Factory(t) {\n  return new (t || DateRangePopupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nDateRangePopupTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateRangePopupTemplateDirective,\n  selectors: [[\"\", \"kendoDateRangePopupTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nDateRangePopupTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangePopupTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDateRangePopupTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n\nvar isActive = function isActive(cmp) {\n  return cmp && cmp.isActive || false;\n};\n\nvar hasActiveContent = function hasActiveContent(popup) {\n  return popup && popup.hasActiveContent();\n};\n/**\n * A service that handles the communication between the components that are placed inside the DateRangeComponent.\n * For example, the start and end `DateInput` and `DateRangePopup` components.\n */\n\n\nvar DateRangeService = /*#__PURE__*/function () {\n  function DateRangeService() {\n    _classCallCheck(this, DateRangeService);\n\n    /**\n     * An Observable instance that notifies when the `activeRangeEnd` state is changed.\n     */\n    this.activeRangeEnd$ = new BehaviorSubject(null);\n    /**\n     * An Observable instance that notifies when the `focusedDate` is changed.\n     */\n\n    this.focusedDate$ = new BehaviorSubject(null);\n    /**\n     * An Observable instance that notifies when the end `DateInput` component is changed.\n     * For example, when a new end `DateInput` is attached or when the old one is detached.\n     */\n\n    this.endInput$ = new BehaviorSubject(null);\n    /**\n     * An Observable instance that notifies when the start `DateInput` component is changed.\n     * For example, when a new start `DateInput` is attached or the old one is detached.\n     */\n\n    this.startInput$ = new BehaviorSubject(null);\n    /**\n     * An Observable instance that notifies when the `DateRangePopup` component is changed.\n     */\n\n    this.dateRangePopup$ = new BehaviorSubject(null);\n    /**\n     * An Observable instance that notifies when the state of the selection range is changed.\n     */\n\n    this.range$ = new BehaviorSubject(EMPTY_SELECTIONRANGE);\n  }\n  /**\n   * Gets the current `activeRangeEnd` value.\n   */\n\n\n  _createClass(DateRangeService, [{\n    key: \"activatePopup\",\n\n    /**\n     * Activates the registered `DateRangePopup` component.\n     * The method opens the popup and focuses the calendar.\n     */\n    value: function activatePopup() {\n      var dateRangePopup = this.dateRangePopup$.value;\n\n      if (!dateRangePopup) {\n        return;\n      }\n\n      dateRangePopup.activate();\n    }\n    /**\n     * Deactivates the registered `DateRangePopup` component.\n     * The method closes the popup.\n     */\n\n  }, {\n    key: \"deactivatePopup\",\n    value: function deactivatePopup() {\n      var dateRangePopup = this.dateRangePopup$.value;\n\n      if (!(dateRangePopup && dateRangePopup.show)) {\n        return;\n      }\n\n      dateRangePopup.show = false;\n    }\n    /**\n     * @hidden\n     *\n     * Deactivates the registered `DateRangePopup` component and fires the `cancel` event.\n     * The method closes the popup.\n     */\n\n  }, {\n    key: \"cancelPopup\",\n    value: function cancelPopup() {\n      var dateRangePopup = this.dateRangePopup$.value;\n\n      if (!(dateRangePopup && dateRangePopup.show)) {\n        return;\n      }\n\n      dateRangePopup.cancelPopup();\n    }\n    /**\n     * Completes all observables to mitigate possible memory leaks.\n     * Calls the method when a component that uses it is destroyed.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.activeRangeEnd$.complete();\n      this.dateRangePopup$.complete();\n      this.focusedDate$.complete();\n      this.endInput$.complete();\n      this.startInput$.complete();\n      this.range$.complete();\n    }\n    /**\n     * Returns `true` when an active component that is placed inside the `DateRangeComponent` is detected.\n     * For example, the opened popup or the focused DateInput.\n     *\n     * @returns `true` if an active component is present.\n     */\n\n  }, {\n    key: \"hasActiveComponent\",\n    value: function hasActiveComponent() {\n      var popup = this.dateRangePopup$.value;\n      var isPopup = isActive(popup);\n      var isStart = isActive(this.startInput$.value);\n      var isEnd = isActive(this.endInput$.value);\n      return isPopup || isStart || isEnd || hasActiveContent(popup) || false;\n    }\n    /**\n     * Registers a new start `DateInput` component. Notifies all `startInput$` listeners.\n     */\n\n  }, {\n    key: \"registerStartInput\",\n    value: function registerStartInput(startInput) {\n      this.startInput$.next(startInput);\n    }\n    /**\n     * Registers a new end `DateInput` component. Notifies all `endInput$` listeners.\n     */\n\n  }, {\n    key: \"registerEndInput\",\n    value: function registerEndInput(endInput) {\n      this.endInput$.next(endInput);\n    }\n    /**\n     * Registers a new `DateRangePopup` component. Notifies all `dateRangePopup$` listeners.\n     */\n\n  }, {\n    key: \"registerPopup\",\n    value: function registerPopup(dateRangePopup) {\n      this.dateRangePopup$.next(dateRangePopup);\n    }\n    /**\n     * Updates the `activeRangeEnd` value. Notifies all `activeRangeEnd$` listeners.\n     */\n\n  }, {\n    key: \"setActiveRangeEnd\",\n    value: function setActiveRangeEnd(activeRange) {\n      if (!activeRange || this.activeRangeEnd === activeRange) {\n        return;\n      }\n\n      this.activeRangeEnd$.next(activeRange);\n    }\n    /**\n     * Updates the focused date. Notifies all `focusedDate$` listeners.\n     */\n\n  }, {\n    key: \"setFocusedDate\",\n    value: function setFocusedDate(value) {\n      if (isEqual(this.focusedDate$.value, value)) {\n        return;\n      }\n\n      this.focusedDate$.next(value);\n    }\n    /**\n     * Updates the selection range. Notifies all `range$` listeners.\n     */\n\n  }, {\n    key: \"setRange\",\n    value: function setRange() {\n      var range = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : EMPTY_SELECTIONRANGE;\n      this.range$.next(range);\n    }\n  }, {\n    key: \"activeRangeEnd\",\n    get: function get() {\n      return this.activeRangeEnd$.value;\n    }\n    /**\n     * Gets the current `focusedDate` value.\n     */\n\n  }, {\n    key: \"focusedDate\",\n    get: function get() {\n      return this.focusedDate$.value;\n    }\n    /**\n     * Gets the `min` range value.\n     * The `min` value is extracted from the `start` DateInput value or the `min` value of the Calendar.\n     */\n\n  }, {\n    key: \"min\",\n    get: function get() {\n      return (this.startInput$.value || {}).min || null;\n    }\n    /**\n     * Gets the `max` range value.\n     * The `max` value is extracted from the `end` DateInput value or the `max` value of the Calendar.\n     */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return (this.endInput$.value || {}).max || null;\n    }\n    /**\n     * Gets the current `selectionRange` value.\n     */\n\n  }, {\n    key: \"selectionRange\",\n    get: function get() {\n      return this.range$.value;\n    }\n  }]);\n\n  return DateRangeService;\n}();\n\nDateRangeService.ɵfac = function DateRangeService_Factory(t) {\n  return new (t || DateRangeService)();\n};\n\nDateRangeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DateRangeService,\n  factory: DateRangeService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Represents the Kendo UI DateRangePopup component for Angular.\n *\n * @example\n * ```ts\n * import { DateInputsModule, DateRangeService } from '@progress/kendo-angular-dateinputs';\n *\n * _@Component({\n * providers: [DateRangeService],\n * selector: 'my-app',\n * template: `\n *  <button #anchor (click)=\"popup.toggle()\">Toggle</button>\n *  <kendo-daterange-popup [anchor]=\"anchor\" #popup></kendo-daterange-popup>\n * `\n * })\n * class AppComponent {\n * }\n * ```\n */\n\n\nvar DateRangePopupComponent = /*#__PURE__*/function () {\n  function DateRangePopupComponent(popupService, dateRangeService, zone, rtl) {\n    _classCallCheck(this, DateRangePopupComponent);\n\n    this.popupService = popupService;\n    this.dateRangeService = dateRangeService;\n    this.zone = zone;\n    this.rtl = rtl;\n    /**\n     * Controls the popup animation.\n     * By default, the opening and closing animations are enabled.\n     * For more information about controlling the popup animations,\n     * refer to the article on [animations]({% slug animations_popup %}).\n     */\n\n    this.animate = true;\n    /**\n     * Configures the collision behavior of the popup.\n     * For more information, refer to the article on\n     * [viewport boundary detection]({% slug viewportboundarydetection_popup %}).\n     */\n\n    this.collision = {\n      horizontal: 'fit',\n      vertical: 'flip'\n    };\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed.\n     * For more information, refer to the section on\n     * [events]({% slug overview_datepicker %}#toc-events).\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open.\n     * For more information, refer to the section on\n     * [events]({% slug overview_datepicker %}#toc-events).\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the calendar element is blurred.\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the calendar element is focused.\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the popup is closed either on `ESC` keypress or on leaving the viewport.\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.popupUID = guid();\n    this.calendarSubscriptions = new Subscription(function () {});\n    this.popupSubscriptions = new Subscription(function () {});\n    this.resolvedPromise = Promise.resolve();\n  }\n  /**\n   * The active calendar that is visible in the popup.\n   *\n   * > When the popup is closed, the property returns `null`.\n   */\n\n\n  _createClass(DateRangePopupComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.dateRangeService.registerPopup(this);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this47 = this;\n\n      this.calendarSubscriptions.add(this.contentCalendar.changes.subscribe(function (changes) {\n        return _this47.calendar = changes.first;\n      }));\n      this.calendarSubscriptions.add(this.viewCalendar.changes.subscribe(function (changes) {\n        return _this47.calendar = changes.first;\n      }));\n\n      if (isWindowAvailable()) {\n        this.zone.runOutsideAngular(function () {\n          return _this47.windowBlurSubscription = fromEvent(window, 'blur').subscribe(_this47.handleWindowBlur.bind(_this47));\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.popupSubscriptions.unsubscribe();\n      this.calendarSubscriptions.unsubscribe();\n\n      if (this.activateSubscription) {\n        this.activateSubscription.unsubscribe();\n      }\n\n      if (this.blurSubscription) {\n        this.blurSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n      }\n\n      if (this.windowBlurSubscription) {\n        this.windowBlurSubscription.unsubscribe();\n      }\n    }\n    /**\n     *  Opens the popup component and focuses the calendar.\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _this48 = this;\n\n      if (this.show === true) {\n        return;\n      }\n\n      if (this.activateSubscription) {\n        this.activateSubscription.unsubscribe();\n      }\n\n      this.show = true;\n      this.zone.runOutsideAngular(function () {\n        _this48.activateSubscription = merge(_this48.contentCalendar.changes, _this48.viewCalendar.changes).pipe(filter(function (changes) {\n          return changes && changes.first;\n        }), map(function (changes) {\n          return changes.first;\n        })).subscribe(function (calendar) {\n          return setTimeout(function () {\n            return calendar.focus();\n          });\n        });\n      });\n    }\n    /**\n     *  Focuses the calendar (if available).\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.calendar) {\n        this.calendar.focus();\n      }\n    }\n    /**\n     * Checks if a focused element ids placed inside the popup.\n     *\n     * @return boolean;\n     */\n\n  }, {\n    key: \"hasActiveContent\",\n    value: function hasActiveContent() {\n      if (!isDocumentAvailable() || !this.popupRef) {\n        return false;\n      }\n\n      return this.popupRef.popupElement.contains(document.activeElement);\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(show) {\n      var _this49 = this;\n\n      this.resolvedPromise.then(function () {\n        _this49._toggle(show === undefined ? !_this49.show : show);\n      });\n    }\n    /**\n     * @hidden\n     *\n     * Closes the popup and triggers the `cancel` event.\n     */\n\n  }, {\n    key: \"cancelPopup\",\n    value: function cancelPopup() {\n      this.show = false;\n      this.cancel.emit();\n    }\n  }, {\n    key: \"handleWindowBlur\",\n    value: function handleWindowBlur() {\n      var _this50 = this;\n\n      if (!this.show) {\n        return;\n      }\n\n      if (hasObservers(this.close)) {\n        this.zone.run(function () {\n          return _this50.show = false;\n        });\n      } else {\n        this.show = false;\n      }\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave() {\n      this.dateRangeService.setRange(this.dateRangeService.selectionRange);\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      var _this51 = this;\n\n      var altKey = event.altKey,\n          keyCode = event.keyCode;\n\n      if (keyCode === Keys.Escape || altKey && keyCode === Keys.ArrowUp) {\n        this.zone.run(function () {\n          return _this51.cancelPopup();\n        });\n      }\n    }\n  }, {\n    key: \"subscribeFocusBlur\",\n    value: function subscribeFocusBlur(calendar) {\n      var _this52 = this;\n\n      if (this.blurSubscription) {\n        this.blurSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n      }\n\n      if (!calendar) {\n        return;\n      }\n\n      var nativeElement = calendar.element.nativeElement;\n      this.blurSubscription = fromEvent(nativeElement, 'blur').subscribe(function () {\n        return _this52.onBlur.emit();\n      });\n      this.focusSubscription = fromEvent(nativeElement, 'focus').subscribe(function () {\n        return _this52.onFocus.emit();\n      });\n    }\n  }, {\n    key: \"addPopupSubscriptions\",\n    value: function addPopupSubscriptions() {\n      var _this53 = this;\n\n      for (var _len = arguments.length, subscriptions = new Array(_len), _key = 0; _key < _len; _key++) {\n        subscriptions[_key] = arguments[_key];\n      }\n\n      subscriptions.map(function (s) {\n        return _this53.popupSubscriptions.add(s);\n      });\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(show) {\n      var _this54 = this;\n\n      this._show = show;\n\n      if (this.popupRef) {\n        this.popupRef.close();\n        this.popupRef = null;\n        this.popupSubscriptions.unsubscribe();\n        this.popupSubscriptions = new Subscription(function () {});\n      }\n\n      if (this._show) {\n        var direction = this.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: this.anchor,\n          anchorAlign: this.anchorAlign || {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          animate: this.animate,\n          appendTo: this._appendTo,\n          collision: this.collision,\n          content: (this.contentTemplate || {}).templateRef || this.defaultTemplate,\n          margin: this.margin,\n          popupAlign: this.popupAlign || {\n            vertical: 'top',\n            horizontal: direction\n          },\n          positionMode: 'absolute'\n        });\n        var _this$popupRef = this.popupRef,\n            popupElement = _this$popupRef.popupElement,\n            popupAnchorViewportLeave = _this$popupRef.popupAnchorViewportLeave;\n        popupElement.setAttribute('id', this.popupUID);\n        this.addPopupSubscriptions(this.zone.runOutsideAngular(function () {\n          return fromEvent(popupElement, 'keydown').subscribe(_this54.handleKeydown.bind(_this54));\n        }), fromEvent(popupElement, 'mouseleave').subscribe(this.handleMouseLeave.bind(this)), popupAnchorViewportLeave.subscribe(function () {\n          return _this54.cancelPopup();\n        }));\n      }\n    }\n  }, {\n    key: \"calendar\",\n    get: function get() {\n      return this._calendar;\n    },\n    set: function set(calendar) {\n      this._calendar = calendar;\n      this.subscribeFocusBlur(calendar);\n    }\n    /**\n     * Gets the active state of the component.\n     * When the opened calendar is active, returns `true`.\n     */\n\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.calendar && this.calendar.isActive;\n    }\n    /**\n     * Gets or sets the visibility state of the component.\n     */\n\n  }, {\n    key: \"show\",\n    set: function set(show) {\n      var event = new PreventableEvent();\n\n      if (this._show === show) {\n        return;\n      }\n\n      if (!this._show && show) {\n        this.open.emit(event);\n      } else if (this._show && !show) {\n        this.close.emit(event);\n      }\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      this._toggle(show);\n    },\n    get: function get() {\n      return this._show;\n    }\n  }, {\n    key: \"_appendTo\",\n    get: function get() {\n      var appendTo = this.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n  }]);\n\n  return DateRangePopupComponent;\n}();\n\nDateRangePopupComponent.ɵfac = function DateRangePopupComponent_Factory(t) {\n  return new (t || DateRangePopupComponent)(ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(DateRangeService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(RTL, 8));\n};\n\nDateRangePopupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateRangePopupComponent,\n  selectors: [[\"kendo-daterange-popup\"]],\n  contentQueries: function DateRangePopupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DateRangePopupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MultiViewCalendarComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentCalendar = _t);\n    }\n  },\n  viewQuery: function DateRangePopupComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c13, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c73, true);\n      ɵngcc0.ɵɵviewQuery(MultiViewCalendarComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.defaultTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewCalendar = _t);\n    }\n  },\n  inputs: {\n    animate: \"animate\",\n    collision: \"collision\",\n    anchor: \"anchor\",\n    anchorAlign: \"anchorAlign\",\n    appendTo: \"appendTo\",\n    popupAlign: \"popupAlign\",\n    margin: \"margin\"\n  },\n  outputs: {\n    open: \"open\",\n    close: \"close\",\n    onBlur: \"blur\",\n    onFocus: \"focus\",\n    cancel: \"cancel\"\n  },\n  exportAs: [\"kendo-daterange-popup\"],\n  decls: 4,\n  vars: 0,\n  consts: [[\"container\", \"\"], [\"defaultTemplate\", \"\"], [\"kendoDateRangeSelection\", \"\"]],\n  template: function DateRangePopupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainer(0, null, 0);\n      ɵngcc0.ɵɵtemplate(2, DateRangePopupComponent_ng_template_2_Template, 1, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n  },\n  directives: function directives() {\n    return [MultiViewCalendarComponent, DateRangeSelectionDirective];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateRangePopupComponent.ctorParameters = function () {\n  return [{\n    type: PopupService\n  }, {\n    type: DateRangeService\n  }, {\n    type: NgZone\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [RTL]\n    }]\n  }];\n};\n\nDateRangePopupComponent.propDecorators = {\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  defaultTemplate: [{\n    type: ViewChild,\n    args: ['defaultTemplate']\n  }],\n  contentTemplate: [{\n    type: ContentChild,\n    args: [DateRangePopupTemplateDirective]\n  }],\n  viewCalendar: [{\n    type: ViewChildren,\n    args: [MultiViewCalendarComponent]\n  }],\n  contentCalendar: [{\n    type: ContentChildren,\n    args: [MultiViewCalendarComponent]\n  }],\n  animate: [{\n    type: Input\n  }],\n  anchor: [{\n    type: Input\n  }],\n  anchorAlign: [{\n    type: Input\n  }],\n  appendTo: [{\n    type: Input\n  }],\n  collision: [{\n    type: Input\n  }],\n  popupAlign: [{\n    type: Input\n  }],\n  margin: [{\n    type: Input\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  cancel: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangePopupComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendo-daterange-popup',\n      selector: 'kendo-daterange-popup',\n      template: \"\\n        <ng-container #container></ng-container>\\n        <ng-template #defaultTemplate>\\n            <kendo-multiviewcalendar kendoDateRangeSelection></kendo-multiviewcalendar>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: PopupService\n    }, {\n      type: DateRangeService\n    }, {\n      type: NgZone\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [RTL]\n      }]\n    }];\n  }, {\n    animate: [{\n      type: Input\n    }],\n    collision: [{\n      type: Input\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    cancel: [{\n      type: Output\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    defaultTemplate: [{\n      type: ViewChild,\n      args: ['defaultTemplate']\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [DateRangePopupTemplateDirective]\n    }],\n    viewCalendar: [{\n      type: ViewChildren,\n      args: [MultiViewCalendarComponent]\n    }],\n    contentCalendar: [{\n      type: ContentChildren,\n      args: [MultiViewCalendarComponent]\n    }],\n    anchor: [{\n      type: Input\n    }],\n    anchorAlign: [{\n      type: Input\n    }],\n    appendTo: [{\n      type: Input\n    }],\n    popupAlign: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the Kendo UI DateRange component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-daterange>\n *      <kendo-dateinput kendoDateRangeStartInput [(value)]=\"dateRange.start\"></kendo-dateinput>\n *      <kendo-dateinput kendoDateRangeEndInput [(value)]=\"dateRange.end\"></kendo-dateinput>\n *  </kendo-daterange>\n * `\n * })\n * class AppComponent {\n *   public dateRange: any = { start: null, end: null };\n * }\n * ```\n */\n\n\nvar DateRangeComponent = /*#__PURE__*/function () {\n  function DateRangeComponent() {\n    _classCallCheck(this, DateRangeComponent);\n\n    /**\n     * @hidden\n     */\n    this.showDefault = false;\n  }\n\n  _createClass(DateRangeComponent, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this55 = this;\n\n      this.showDefault = !this.hasContentPopup;\n      this.subscription = this.contentPopup.changes.subscribe(function () {\n        _this55.showDefault = !_this55.hasContentPopup;\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"hasContentPopup\",\n    get: function get() {\n      return this.contentPopup.length > 0;\n    }\n  }]);\n\n  return DateRangeComponent;\n}();\n\nDateRangeComponent.ɵfac = function DateRangeComponent_Factory(t) {\n  return new (t || DateRangeComponent)();\n};\n\nDateRangeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateRangeComponent,\n  selectors: [[\"kendo-daterange\"]],\n  contentQueries: function DateRangeComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DateRangePopupComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentPopup = _t);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DateRangeService])],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function DateRangeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵtemplate(1, DateRangeComponent_kendo_daterange_popup_1_Template, 1, 0, \"kendo-daterange-popup\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showDefault);\n    }\n  },\n  directives: [ɵngcc1.NgIf, DateRangePopupComponent],\n  encapsulation: 2\n});\nDateRangeComponent.propDecorators = {\n  contentPopup: [{\n    type: ContentChildren,\n    args: [DateRangePopupComponent]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeComponent, [{\n    type: Component,\n    args: [{\n      providers: [DateRangeService],\n      selector: 'kendo-daterange',\n      template: \"\\n        <ng-content></ng-content>\\n        <kendo-daterange-popup *ngIf=\\\"showDefault\\\"></kendo-daterange-popup>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    contentPopup: [{\n      type: ContentChildren,\n      args: [DateRangePopupComponent]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar DateRangeInput = /*#__PURE__*/function () {\n  function DateRangeInput(activeRangeEnd, dateRangeService, input, element, renderer, zone) {\n    _classCallCheck(this, DateRangeInput);\n\n    this.activeRangeEnd = activeRangeEnd;\n    this.dateRangeService = dateRangeService;\n    this.input = input;\n    this.element = element;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.navigateCalendarOnFocus = false;\n    this.popupSubscriptions = new Subscription(function () {});\n    this.subscriptions = new Subscription(function () {});\n  }\n\n  _createClass(DateRangeInput, [{\n    key: \"init\",\n    value: function init() {\n      var _this56 = this;\n\n      if (this.input.value) {\n        this.dateRangeService.setRange(this.getRange(this.input.value));\n      }\n\n      [this.input.onBlur.subscribe(function () {\n        return _this56.deactivate();\n      }), this.input.onFocus.pipe(filter(function () {\n        return !_this56.popupCalendarActivated;\n      })).subscribe(function () {\n        return _this56.activate();\n      }), this.input.valueUpdate.subscribe(function (value) {\n        return _this56.updateRange(value, 'change');\n      }), this.dateRangeService.activeRangeEnd$.subscribe(function () {\n        if (_this56.navigateCalendarOnFocus) {\n          _this56.focusActiveDate();\n        }\n\n        _this56.toggleActiveClass(_this56.isActiveEnd);\n      }), this.dateRangeService.dateRangePopup$.subscribe(function (popup) {\n        return _this56.initPopup(popup);\n      }), this.dateRangeService.range$.subscribe(function (range) {\n        return _this56.updateInputValue(range);\n      }), fromEvent(this.element.nativeElement, 'click').subscribe(function () {\n        return _this56.activate();\n      }), fromEvent(this.element.nativeElement, 'keydown').subscribe(function (event) {\n        return _this56.togglePopup(event || {});\n      })].map(function (s) {\n        return _this56.subscriptions.add(s);\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.subscriptions.unsubscribe();\n      this.unsubscribePopup();\n    }\n  }, {\n    key: \"initPopup\",\n    value: function initPopup(popup) {\n      var _this57 = this;\n\n      if (!popup) {\n        this.unsubscribePopup();\n        return;\n      }\n\n      if (!popup.anchor) {\n        popup.anchor = this.element.nativeElement;\n      }\n\n      [popup.cancel.subscribe(function () {\n        return _this57.isActiveEnd && _this57.input.focus();\n      }), popup.onFocus.subscribe(function () {\n        return _this57.toggleActiveClass(_this57.isActiveEnd);\n      }), popup.onBlur.subscribe(function () {\n        return _this57.deactivate();\n      })].map(function (s) {\n        return _this57.popupSubscriptions.add(s);\n      });\n    }\n  }, {\n    key: \"unsubscribePopup\",\n    value: function unsubscribePopup() {\n      this.popupSubscriptions.unsubscribe();\n      this.popupSubscriptions = new Subscription(function () {});\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.dateRangeService.setActiveRangeEnd(this.activeRangeEnd);\n      this.dateRangeService.activatePopup();\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      var _this58 = this;\n\n      this.zone.runOutsideAngular(function () {\n        setTimeout(function () {\n          _this58.updateRange(_this58.input.value, 'blur');\n\n          if (_this58.dateRangeService.hasActiveComponent()) {\n            return;\n          }\n\n          _this58.toggleActiveClass(false);\n\n          _this58.zone.run(function () {\n            return _this58.dateRangeService.deactivatePopup();\n          });\n        });\n      });\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(value, correctOn) {\n      var range = this.getRange(value, correctOn);\n\n      if (range) {\n        this.focusActiveDate();\n        this.dateRangeService.setRange(range);\n      }\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(_ref14) {\n      var altKey = _ref14.altKey,\n          keyCode = _ref14.keyCode;\n\n      if (keyCode === Keys.Escape) {\n        this.dateRangeService.cancelPopup();\n      } else if (altKey && keyCode === Keys.ArrowDown) {\n        this.dateRangeService.activatePopup();\n      }\n    }\n  }, {\n    key: \"focusActiveDate\",\n    value: function focusActiveDate() {\n      if (this.input.value && this.isActiveEnd) {\n        this.dateRangeService.setFocusedDate(cloneDate(this.input.value));\n      }\n    }\n  }, {\n    key: \"toggleActiveClass\",\n    value: function toggleActiveClass(show) {\n      var action = show ? 'addClass' : 'removeClass';\n      var nativeElement = this.element.nativeElement;\n\n      if (nativeElement && nativeElement.querySelector) {\n        this.renderer[action](nativeElement.querySelector('.k-dateinput-wrap'), 'k-state-focused');\n      }\n    }\n  }, {\n    key: \"isActiveEnd\",\n    get: function get() {\n      return this.dateRangeService.activeRangeEnd === this.activeRangeEnd;\n    }\n  }, {\n    key: \"popupCalendarActivated\",\n    get: function get() {\n      var popup = this.dateRangeService.dateRangePopup$.value;\n      return isPresent(popup) && isPresent(popup.calendar);\n    }\n  }]);\n\n  return DateRangeInput;\n}();\n/**\n * A directive which manages the end range selection.\n *\n * > You can use the DateRangeEndInputDirective only with a DateInput component.\n */\n\n\nvar DateRangeEndInputDirective = /*#__PURE__*/function (_DateRangeInput) {\n  _inherits(DateRangeEndInputDirective, _DateRangeInput);\n\n  var _super = _createSuper(DateRangeEndInputDirective);\n\n  function DateRangeEndInputDirective(rangeService, dateInput, element, renderer, zone) {\n    var _this59;\n\n    _classCallCheck(this, DateRangeEndInputDirective);\n\n    _this59 = _super.call(this, 'end', rangeService, dateInput, element, renderer, zone);\n    _this59.rangeService = rangeService;\n    _this59.dateInput = dateInput;\n    /**\n     * Specifies the navigation behavior of the calendar when the active end is changed on input focus. When enabled,\n     * the calendar navigates to the value of the focused input. Otherwise, the calendar displays the last picked date.\n     *\n     * By default, the automatic navigation behavior on input focus is disabled.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n     *  <kendo-daterange>\n     *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n     *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n     *  </kendo-daterange>\n     * `\n     * })\n     * class AppComponent {\n     *   public start: Date = new Date(2018, 3, 10);\n     *   public end: Date = new Date(2018, 10, 20);\n     * }\n     * ```\n     */\n\n    _this59.navigateCalendarOnFocus = false;\n    return _this59;\n  }\n\n  _createClass(DateRangeEndInputDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.rangeService.registerEndInput(this.dateInput);\n\n      _get(_getPrototypeOf(DateRangeEndInputDirective.prototype), \"init\", this).call(this);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(DateRangeEndInputDirective.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(value, correctOn) {\n      var _this$dateInput = this.dateInput,\n          min = _this$dateInput.min,\n          max = _this$dateInput.max;\n\n      if (!isInRange(value, min, max)) {\n        return null;\n      }\n\n      var _ref15 = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE,\n          start = _ref15.start;\n\n      return this.autoCorrectOn === correctOn && value < start ? clampRange(value) : {\n        start: start,\n        end: cloneDate(value)\n      };\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(range$$1) {\n      var _ref16 = range$$1 || EMPTY_SELECTIONRANGE,\n          end = _ref16.end;\n\n      var _this$dateInput2 = this.dateInput,\n          min = _this$dateInput2.min,\n          max = _this$dateInput2.max;\n\n      if (isEqual(this.dateInput.value, end) || !isInRange(end, min, max)) {\n        return;\n      }\n\n      this.dateInput.writeValue(cloneDate(end));\n      this.dateInput.notify();\n    }\n  }]);\n\n  return DateRangeEndInputDirective;\n}(DateRangeInput);\n\nDateRangeEndInputDirective.ɵfac = function DateRangeEndInputDirective_Factory(t) {\n  return new (t || DateRangeEndInputDirective)(ɵngcc0.ɵɵdirectiveInject(DateRangeService), ɵngcc0.ɵɵdirectiveInject(DateInputComponent), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nDateRangeEndInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateRangeEndInputDirective,\n  selectors: [[\"\", \"kendoDateRangeEndInput\", \"\"]],\n  inputs: {\n    navigateCalendarOnFocus: \"navigateCalendarOnFocus\",\n    autoCorrectOn: \"autoCorrectOn\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDateRangeEndInputDirective.ctorParameters = function () {\n  return [{\n    type: DateRangeService\n  }, {\n    type: DateInputComponent\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nDateRangeEndInputDirective.propDecorators = {\n  autoCorrectOn: [{\n    type: Input\n  }],\n  navigateCalendarOnFocus: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeEndInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDateRangeEndInput]'\n    }]\n  }], function () {\n    return [{\n      type: DateRangeService\n    }, {\n      type: DateInputComponent\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    navigateCalendarOnFocus: [{\n      type: Input\n    }],\n    autoCorrectOn: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive which manages the start selection range.\n *\n * > You can use the DateRangeStartInputDirective only with a DateInput component.\n */\n\n\nvar DateRangeStartInputDirective = /*#__PURE__*/function (_DateRangeInput2) {\n  _inherits(DateRangeStartInputDirective, _DateRangeInput2);\n\n  var _super2 = _createSuper(DateRangeStartInputDirective);\n\n  function DateRangeStartInputDirective(rangeService, dateInput, element, renderer, zone) {\n    var _this60;\n\n    _classCallCheck(this, DateRangeStartInputDirective);\n\n    _this60 = _super2.call(this, 'start', rangeService, dateInput, element, renderer, zone);\n    _this60.rangeService = rangeService;\n    _this60.dateInput = dateInput;\n    /**\n     * Specifies the navigation behavior of the calendar when the active end is changed on input focus.\n     * When enabled, the calendar navigates to the value of the focused input. Otherwise, the calendar\n     * displays the last picked date.\n     *\n     * By default, the automatic navigation behavior on input focus is disabled.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n     *  <kendo-daterange>\n     *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n     *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n     *  </kendo-daterange>\n     * `\n     * })\n     * class AppComponent {\n     *   public start: Date = new Date(2018, 3, 10);\n     *   public end: Date = new Date(2018, 10, 20);\n     * }\n     * ```\n     */\n\n    _this60.navigateCalendarOnFocus = false;\n    return _this60;\n  }\n\n  _createClass(DateRangeStartInputDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.rangeService.registerStartInput(this.dateInput);\n\n      _get(_getPrototypeOf(DateRangeStartInputDirective.prototype), \"init\", this).call(this);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(DateRangeStartInputDirective.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(value, correctOn) {\n      var _this$dateInput3 = this.dateInput,\n          min = _this$dateInput3.min,\n          max = _this$dateInput3.max;\n\n      if (!isInRange(value, min, max)) {\n        return null;\n      }\n\n      var _ref17 = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE,\n          end = _ref17.end;\n\n      var shouldClamp = this.autoCorrectOn === correctOn && end && value > end;\n      return shouldClamp ? clampRange(value) : {\n        start: cloneDate(value),\n        end: end\n      };\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(range$$1) {\n      var _ref18 = range$$1 || EMPTY_SELECTIONRANGE,\n          start = _ref18.start;\n\n      var _this$dateInput4 = this.dateInput,\n          min = _this$dateInput4.min,\n          max = _this$dateInput4.max;\n\n      if (isEqual(this.dateInput.value, start) || !isInRange(start, min, max)) {\n        return;\n      }\n\n      this.dateInput.writeValue(cloneDate(start));\n      this.dateInput.notify();\n    }\n  }]);\n\n  return DateRangeStartInputDirective;\n}(DateRangeInput);\n\nDateRangeStartInputDirective.ɵfac = function DateRangeStartInputDirective_Factory(t) {\n  return new (t || DateRangeStartInputDirective)(ɵngcc0.ɵɵdirectiveInject(DateRangeService), ɵngcc0.ɵɵdirectiveInject(DateInputComponent), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nDateRangeStartInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateRangeStartInputDirective,\n  selectors: [[\"\", \"kendoDateRangeStartInput\", \"\"]],\n  inputs: {\n    navigateCalendarOnFocus: \"navigateCalendarOnFocus\",\n    autoCorrectOn: \"autoCorrectOn\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDateRangeStartInputDirective.ctorParameters = function () {\n  return [{\n    type: DateRangeService\n  }, {\n    type: DateInputComponent\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nDateRangeStartInputDirective.propDecorators = {\n  autoCorrectOn: [{\n    type: Input\n  }],\n  navigateCalendarOnFocus: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeStartInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDateRangeStartInput]'\n    }]\n  }], function () {\n    return [{\n      type: DateRangeService\n    }, {\n      type: DateInputComponent\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    navigateCalendarOnFocus: [{\n      type: Input\n    }],\n    autoCorrectOn: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive which manages the MultiViewCalendar range selection.\n */\n\n\nvar DateRangeSelectionDirective = /*#__PURE__*/function () {\n  function DateRangeSelectionDirective(calendar, cdr, element, renderer, dateRangeService) {\n    _classCallCheck(this, DateRangeSelectionDirective);\n\n    this.calendar = calendar;\n    this.cdr = cdr;\n    this.element = element;\n    this.dateRangeService = dateRangeService;\n    /**\n     * Specifies the auto-correction behavior. If the start date is greater than the end date,\n     * the directive fixes the date range to a single date either on input change or on blur\n     * ([see example]({% slug autocorrect_daterange %}#toc-configuring-the-calendar-selection-directive)).\n     *\n     * By default, the auto-correction is triggered on change.\n     * To disable this behavior, set the `autoCorrectOn` property to `none`.\n     */\n\n    this.autoCorrectOn = 'change';\n    /**\n     * Fires when the active range end is changed. For more information, refer to\n     * the section on [events]({% slug overview_multiviewcalendar %}#toc-events).\n     */\n\n    this.activeRangeEndChange = new EventEmitter();\n    /**\n     * Fires when the selection range is changed. For more information, refer to\n     * the section on [events]({% slug overview_multiviewcalendar %}#toc-events).\n     */\n\n    this.selectionRangeChange = new EventEmitter();\n    this.calendarSubscriptions = new Subscription(function () {});\n    this.dateRangeService = this.dateRangeService || new DateRangeService();\n    renderer.setAttribute(element.nativeElement, 'aria-multiselectable', 'true');\n  }\n  /**\n   * Gets or sets the selection range of the calendar. When a new range is set,\n   * the connected DateRangeService notifies all related parties.\n   */\n\n\n  _createClass(DateRangeSelectionDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this61 = this;\n\n      var calendar = this.calendar;\n      var dateRangeService = this.dateRangeService;\n      calendar.min = either(dateRangeService.min, calendar.min);\n      calendar.max = either(dateRangeService.max, calendar.max);\n      this.addSubscriptions(calendar.cellEnter.subscribe(function (value) {\n        return _this61.handleHover(value);\n      }), calendar.valueChange.subscribe(function (value) {\n        return _this61.handleChange(value);\n      }), dateRangeService.focusedDate$.subscribe(function (focusedDate) {\n        if (!isEqual(calendar.focusedDate, focusedDate)) {\n          calendar.focusedDate = focusedDate;\n        }\n      }), dateRangeService.activeRangeEnd$.subscribe(function (rangeEnd) {\n        if (calendar.activeRangeEnd === rangeEnd) {\n          return;\n        }\n\n        calendar.activeRangeEnd = rangeEnd;\n\n        _this61.activeRangeEndChange.emit(rangeEnd);\n\n        _this61.cdr.markForCheck();\n      }), dateRangeService.range$.subscribe(function (range$$1) {\n        if (!_this61.isEqualCalendarRange(range$$1)) {\n          _this61.acceptAndEmit(range$$1);\n        }\n\n        _this61.updateFocusedDate(range$$1);\n      }), fromEvent(this.element.nativeElement, 'blur').subscribe(function () {\n        return _this61.handleBlur();\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.calendarSubscriptions.unsubscribe();\n    }\n  }, {\n    key: \"addSubscriptions\",\n    value: function addSubscriptions() {\n      var _this62 = this;\n\n      for (var _len2 = arguments.length, subscriptions = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        subscriptions[_key2] = arguments[_key2];\n      }\n\n      subscriptions.map(function (s) {\n        return _this62.calendarSubscriptions.add(s);\n      });\n    }\n  }, {\n    key: \"isEqualCalendarRange\",\n    value: function isEqualCalendarRange(range$$1) {\n      return isEqualRange(this.calendar.selectionRange, range$$1);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      var _this$calendarRange = this.calendarRange,\n          start = _this$calendarRange.start,\n          end = _this$calendarRange.end;\n      var autoCorrect = this.autoCorrectOn === 'blur' && start !== null && end !== null && end < start;\n\n      if (autoCorrect) {\n        this.dateRangeService.setRange(clampRange(start));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      var service = this.dateRangeService;\n      var autoCorrect = this.autoCorrectOn === 'change' && this.shouldAutoCorrect(value);\n      var activeEnd = this.calendar.activeRangeEnd !== 'end' ? 'end' : autoCorrect ? 'end' : 'start';\n      var range$$1 = autoCorrect ? clampRange(value) : this.updateRange(value);\n\n      if (!isEqualRange(service.selectionRange, range$$1)) {\n        this.acceptAndEmit(range$$1);\n        service.setActiveRangeEnd(activeEnd);\n        service.setRange(range$$1);\n      }\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(value) {\n      this.dateRangeService.setFocusedDate(cloneDate(value));\n\n      if (this.hasCompleteRange()) {\n        return;\n      }\n\n      var _this$calendarRange2 = this.calendarRange,\n          start = _this$calendarRange2.start,\n          end = _this$calendarRange2.end;\n      var activeRangeEnd = this.calendar.activeRangeEnd;\n      var updateRange = start && activeRangeEnd === 'end' || end && activeRangeEnd === 'start';\n\n      if (updateRange) {\n        this.setSelectionRange(this.updateRange(value));\n      }\n    }\n  }, {\n    key: \"hasCompleteRange\",\n    value: function hasCompleteRange() {\n      var _ref19 = this.dateRangeService.selectionRange || EMPTY_SELECTIONRANGE,\n          start = _ref19.start,\n          end = _ref19.end;\n\n      return Boolean(start) && Boolean(end);\n    }\n  }, {\n    key: \"shouldAutoCorrect\",\n    value: function shouldAutoCorrect(value) {\n      var _this$calendarRange3 = this.calendarRange,\n          end = _this$calendarRange3.end,\n          start = _this$calendarRange3.start;\n\n      if (this.calendar.activeRangeEnd !== 'end') {\n        return end !== null && value > end;\n      } else {\n        return start !== null && value < start;\n      }\n    }\n  }, {\n    key: \"updateFocusedDate\",\n    value: function updateFocusedDate(range$$1) {\n      if (!range$$1 || this.dateRangeService.focusedDate) {\n        return;\n      }\n\n      this.dateRangeService.setFocusedDate(range$$1.start || range$$1.end);\n    }\n  }, {\n    key: \"updateRange\",\n    value: function updateRange(value) {\n      var _this$calendarRange4 = this.calendarRange,\n          end = _this$calendarRange4.end,\n          start = _this$calendarRange4.start;\n      return this.calendar.activeRangeEnd !== 'end' ? {\n        start: value,\n        end: end\n      } : {\n        start: start,\n        end: value\n      };\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(range$$1) {\n      this.calendar.selectionRange = range$$1;\n      this.calendar.writeValue(null);\n    }\n  }, {\n    key: \"acceptAndEmit\",\n    value: function acceptAndEmit(range$$1) {\n      this.setSelectionRange(range$$1);\n      this.selectionRangeChange.emit(range$$1);\n    }\n  }, {\n    key: \"selectionRange\",\n    get: function get() {\n      return this.calendar ? this.calendar.selectionRange : null;\n    },\n    set: function set(range$$1) {\n      if (!this.isEqualCalendarRange(range$$1)) {\n        this.setSelectionRange(range$$1);\n      }\n\n      if (!isEqualRange(this.dateRangeService.selectionRange, range$$1)) {\n        this.dateRangeService.setRange(range$$1);\n      }\n\n      this.updateFocusedDate(range$$1);\n    }\n    /**\n     * Gets or sets the active end of the selection range. This option determines which range end will be updated on\n     * user interaction. When a new active end is set, the connected DateRangeService notifies all related parties.\n     */\n\n    /**\n     * Specifies which end of the selection range will be marked as active. The active end gets modified upon user\n     * interaction. When a new active end is set, the wired DateRangeService notifies all related components. For\n     * example, the start and end DateInput components.\n     *\n     * > If the selection range is undefined, the value is ignored.\n     */\n\n  }, {\n    key: \"activeRangeEnd\",\n    get: function get() {\n      return this.calendar.activeRangeEnd;\n    },\n    set: function set(activeRange) {\n      if (this.dateRangeService.activeRangeEnd === activeRange) {\n        return;\n      }\n\n      this.calendar.activeRangeEnd = activeRange;\n      this.dateRangeService.setActiveRangeEnd(activeRange);\n    }\n  }, {\n    key: \"calendarRange\",\n    get: function get() {\n      return this.selectionRange || EMPTY_SELECTIONRANGE;\n    }\n  }]);\n\n  return DateRangeSelectionDirective;\n}();\n\nDateRangeSelectionDirective.ɵfac = function DateRangeSelectionDirective_Factory(t) {\n  return new (t || DateRangeSelectionDirective)(ɵngcc0.ɵɵdirectiveInject(MultiViewCalendarComponent), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(DateRangeService, 8));\n};\n\nDateRangeSelectionDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateRangeSelectionDirective,\n  selectors: [[\"\", \"kendoDateRangeSelection\", \"\"]],\n  inputs: {\n    autoCorrectOn: \"autoCorrectOn\",\n    selectionRange: \"selectionRange\",\n    activeRangeEnd: \"activeRangeEnd\"\n  },\n  outputs: {\n    activeRangeEndChange: \"activeRangeEndChange\",\n    selectionRangeChange: \"selectionRangeChange\"\n  }\n});\n/** @nocollapse */\n\nDateRangeSelectionDirective.ctorParameters = function () {\n  return [{\n    type: MultiViewCalendarComponent\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: DateRangeService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nDateRangeSelectionDirective.propDecorators = {\n  autoCorrectOn: [{\n    type: Input\n  }],\n  selectionRange: [{\n    type: Input\n  }],\n  activeRangeEnd: [{\n    type: Input\n  }],\n  activeRangeEndChange: [{\n    type: Output\n  }],\n  selectionRangeChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeSelectionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDateRangeSelection]'\n    }]\n  }], function () {\n    return [{\n      type: MultiViewCalendarComponent\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: DateRangeService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    autoCorrectOn: [{\n      type: Input\n    }],\n    activeRangeEndChange: [{\n      type: Output\n    }],\n    selectionRangeChange: [{\n      type: Output\n    }],\n    selectionRange: [{\n      type: Input\n    }],\n    activeRangeEnd: [{\n      type: Input\n    }]\n  });\n})();\n/* tslint:disable:directive-class-suffix directive-selector */\n\n/**\n * @hidden\n */\n\n\nvar KForOfContext = /*#__PURE__*/function () {\n  function KForOfContext($implicit, kForOf, index, count) {\n    _classCallCheck(this, KForOfContext);\n\n    this.$implicit = $implicit;\n    this.kForOf = kForOf;\n    this.index = index;\n    this.count = count;\n  }\n\n  _createClass(KForOfContext, [{\n    key: \"first\",\n    get: function get() {\n      return this.index === 0;\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.index === this.count - 1;\n    }\n  }, {\n    key: \"even\",\n    get: function get() {\n      return this.index % 2 === 0;\n    }\n  }, {\n    key: \"odd\",\n    get: function get() {\n      return !this.even;\n    }\n  }]);\n\n  return KForOfContext;\n}();\n/**\n * @hidden\n */\n\n\nvar KForOf = /*#__PURE__*/function () {\n  function KForOf(_viewContainer, _template, _differs) {\n    _classCallCheck(this, KForOf);\n\n    this._viewContainer = _viewContainer;\n    this._template = _template;\n    this._differs = _differs;\n    this._differ = null;\n  }\n\n  _createClass(KForOf, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if ('kForOf' in changes) {\n        var value = changes.kForOf.currentValue;\n\n        if (this._differ || !value) {\n          return;\n        }\n\n        try {\n          this._differ = this._differs.find(value).create(this.kForTrackBy);\n        } catch (e) {\n          throw new Error(\"Cannot find a differ supporting object '\".concat(value, \"' of type '\").concat(getTypeNameForDebugging(value), \"'.\"));\n        }\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this._differ) {\n        var changes = this._differ.diff(this.kForOf);\n\n        if (changes) {\n          this._applyChanges(changes);\n        }\n      }\n    }\n  }, {\n    key: \"_applyChanges\",\n    value: function _applyChanges(changes) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      var viewContainerLength = this._viewContainer.length;\n      var dataLength = this.kForOf.length;\n      var tuples = {};\n      changes.forEachOperation(function (record, _, currentIndex) {\n        if (currentIndex !== null) {\n          tuples[currentIndex] = record.item;\n        }\n      });\n\n      for (var i = viewContainerLength; i < dataLength; i++) {\n        this._viewContainer.createEmbeddedView(this._template, new KForOfContext(null, this.kForOf, -1, -1), i);\n      }\n\n      for (var _i3 = this._viewContainer.length; _i3 > dataLength; _i3--) {\n        this._viewContainer.remove(_i3 - 1);\n      }\n\n      for (var _i4 = 0; _i4 < this._viewContainer.length; _i4++) {\n        var _view = this._viewContainer.get(_i4);\n\n        _view.context.index = _i4;\n        _view.context.count = length;\n        _view.context.$implicit = tuples[_i4] || null;\n      }\n    }\n  }, {\n    key: \"kForTemplate\",\n    set: function set(value) {\n      if (value) {\n        this._template = value;\n      }\n    }\n  }]);\n\n  return KForOf;\n}();\n\nKForOf.ɵfac = function KForOf_Factory(t) {\n  return new (t || KForOf)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(TemplateRef), ɵngcc0.ɵɵdirectiveInject(IterableDiffers));\n};\n\nKForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: KForOf,\n  selectors: [[\"\", \"kFor\", \"\", \"kForOf\", \"\"]],\n  inputs: {\n    kForTemplate: \"kForTemplate\",\n    kForOf: \"kForOf\",\n    kForTrackBy: \"kForTrackBy\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nKForOf.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: TemplateRef\n  }, {\n    type: IterableDiffers\n  }];\n};\n\nKForOf.propDecorators = {\n  kForOf: [{\n    type: Input\n  }],\n  kForTrackBy: [{\n    type: Input\n  }],\n  kForTemplate: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(KForOf, [{\n    type: Directive,\n    args: [{\n      selector: '[kFor][kForOf]'\n    }]\n  }], function () {\n    return [{\n      type: ViewContainerRef\n    }, {\n      type: TemplateRef\n    }, {\n      type: IterableDiffers\n    }];\n  }, {\n    kForTemplate: [{\n      type: Input\n    }],\n    kForOf: [{\n      type: Input\n    }],\n    kForTrackBy: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nfunction getTypeNameForDebugging(type) {\n  return type.name || typeof type;\n}\n/**\n * @hidden\n */\n\n\nvar HeaderComponent = /*#__PURE__*/function () {\n  function HeaderComponent(bus, cdr, localization, intl, disabledDatesService) {\n    _classCallCheck(this, HeaderComponent);\n\n    this.bus = bus;\n    this.cdr = cdr;\n    this.localization = localization;\n    this.intl = intl;\n    this.disabledDatesService = disabledDatesService;\n    this.navigate = true;\n    this.todayAvailable = true;\n    this.min = new Date(MIN_DATE);\n    this.max = new Date(MAX_DATE);\n    this.rangeLength = 1;\n    this.today = new EventEmitter();\n    this.subscriptions = new Subscription();\n  }\n\n  _createClass(HeaderComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this))).add(this.localization.changes.subscribe(this.l10nChange.bind(this))).add(this.disabledDatesService.changes.subscribe(this.setTodayAvailability.bind(this)));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_) {\n      var service = this.bus.service(this.activeView);\n\n      if (!service) {\n        return;\n      }\n\n      this.activeViewValue = CalendarViewEnum[this.activeView];\n      this.todayMessage = this.localization.get('today');\n      this.setTodayAvailability();\n      this.navigate = this.bus.canMoveUp(this.activeView);\n      this.title = this.getTitle();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n  }, {\n    key: \"handleTodayClick\",\n    value: function handleTodayClick() {\n      if (!this.todayAvailable) {\n        return;\n      }\n\n      this.bus.moveToBottom(this.activeView);\n      this.today.emit(dateInRange(getToday(), this.min, this.max));\n    }\n  }, {\n    key: \"handleNavigation\",\n    value: function handleNavigation() {\n      if (!this.navigate) {\n        return;\n      }\n\n      this.bus.moveUp(this.activeView);\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      if (this.currentDate && this.bus.service(this.activeView)) {\n        this.title = this.getTitle();\n        this.cdr.markForCheck();\n      }\n    }\n  }, {\n    key: \"l10nChange\",\n    value: function l10nChange() {\n      this.todayMessage = this.localization.get('today');\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      if (!this.currentDate) {\n        return '';\n      }\n\n      var service = this.bus.service(this.activeView);\n      var take = this.rangeLength - 1;\n      var title = service.title(this.currentDate);\n      var nextDate = service.addToDate(this.currentDate, take);\n\n      if (take < 1 || !service.isInRange(nextDate, this.min, this.max)) {\n        return title;\n      }\n\n      return \"\".concat(title, \" - \").concat(service.title(nextDate));\n    }\n  }, {\n    key: \"setTodayAvailability\",\n    value: function setTodayAvailability() {\n      var today = getToday();\n      var isTodayInRange = isInRange(today, getDate(this.min), getDate(this.max));\n      var isDisabled = this.disabledDatesService.isDateDisabled(today);\n      this.todayAvailable = isTodayInRange && !isDisabled;\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"getComponentClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return HeaderComponent;\n}();\n\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService));\n};\n\nHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"kendo-calendar-header\"]],\n  hostVars: 2,\n  hostBindings: function HeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-calendar-header\", ctx.getComponentClass);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    rangeLength: \"rangeLength\",\n    activeView: \"activeView\",\n    currentDate: \"currentDate\",\n    templateRef: \"templateRef\"\n  },\n  outputs: {\n    today: \"today\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 21,\n  consts: [[1, \"k-button\", \"k-bare\", \"k-title\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [3, \"ngIf\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-today\", 3, \"kendoEventsOutsideAngular\", \"scope\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n      ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n      ɵngcc0.ɵɵtext(4);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", !ctx.navigate);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(13, _c3, ctx.handleNavigation))(\"scope\", ctx);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.templateRef);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.templateRef)(\"ngTemplateOutlet\", ctx.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(15, _c2, ctx.title, ctx.activeViewValue, ctx.currentDate));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"k-state-disabled\", !ctx.todayAvailable);\n      ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(19, _c3, ctx.handleTodayClick))(\"scope\", ctx);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.todayMessage, \" \");\n    }\n  },\n  directives: [ɵngcc2.EventsOutsideAngularDirective, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nHeaderComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: LocalizationService\n  }, {\n    type: IntlService\n  }, {\n    type: DisabledDatesService\n  }];\n};\n\nHeaderComponent.propDecorators = {\n  activeView: [{\n    type: Input\n  }],\n  currentDate: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  rangeLength: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: Input\n  }],\n  today: [{\n    type: Output\n  }],\n  getComponentClass: [{\n    type: HostBinding,\n    args: [\"class.k-calendar-header\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-calendar-header',\n      template: \"\\n    <span class=\\\"k-button k-bare k-title\\\" [class.k-state-disabled]=\\\"!navigate\\\"\\n        [kendoEventsOutsideAngular]=\\\"{\\n            click: handleNavigation\\n        }\\\"\\n        [scope]=\\\"this\\\">\\n        <ng-template [ngIf]=\\\"!templateRef\\\">{{title}}</ng-template>\\n        <ng-template\\n            [ngIf]=\\\"templateRef\\\"\\n            [ngTemplateOutlet]=\\\"templateRef\\\"\\n            [ngTemplateOutletContext]=\\\"{ $implicit: title, activeView: activeViewValue, date: currentDate }\\\"\\n        ></ng-template>\\n    </span>\\n    <span class=\\\"k-today\\\" [class.k-state-disabled]=\\\"!todayAvailable\\\"\\n        [kendoEventsOutsideAngular]=\\\"{\\n            click: handleTodayClick\\n        }\\\"\\n        [scope]=\\\"this\\\">\\n        {{todayMessage}}\\n    </span>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: LocalizationService\n    }, {\n      type: IntlService\n    }, {\n      type: DisabledDatesService\n    }];\n  }, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    rangeLength: [{\n      type: Input\n    }],\n    today: [{\n      type: Output\n    }],\n    getComponentClass: [{\n      type: HostBinding,\n      args: [\"class.k-calendar-header\"]\n    }],\n    activeView: [{\n      type: Input\n    }],\n    currentDate: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar WeekNamesService = /*#__PURE__*/function () {\n  function WeekNamesService(intl) {\n    _classCallCheck(this, WeekNamesService);\n\n    this.intl = intl;\n  }\n\n  _createClass(WeekNamesService, [{\n    key: \"getWeekNames\",\n    value: function getWeekNames() {\n      var includeWeekNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var weekNames = shiftWeekNames(this.intl.dateFormatNames({\n        nameType: 'short',\n        type: 'days'\n      }), this.intl.firstDay());\n      return includeWeekNumber ? [''].concat(weekNames) : weekNames;\n    }\n  }]);\n\n  return WeekNamesService;\n}();\n\nWeekNamesService.ɵfac = function WeekNamesService_Factory(t) {\n  return new (t || WeekNamesService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nWeekNamesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: WeekNamesService,\n  factory: WeekNamesService.ɵfac\n});\n/** @nocollapse */\n\nWeekNamesService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(WeekNamesService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ViewComponent = /*#__PURE__*/function () {\n  function ViewComponent(bus, intl, cdr, weekService, element, zone, renderer, disabledDatesService) {\n    _classCallCheck(this, ViewComponent);\n\n    this.bus = bus;\n    this.intl = intl;\n    this.cdr = cdr;\n    this.weekService = weekService;\n    this.element = element;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.disabledDatesService = disabledDatesService;\n    this.direction = 'vertical';\n    this.isActive = true;\n    this.change = new EventEmitter();\n    this.cellEnter = new EventEmitter();\n    this.cellLeave = new EventEmitter();\n    this.weekNames = [];\n    this.colSpan = 0;\n    this.subscriptions = new Subscription();\n    this.domEvents = [];\n    this.subscriptions.add(this.intl.changes.subscribe(this.intlChange.bind(this))).add(this.disabledDatesService.changes.subscribe(this.disabledDatesChange.bind(this)));\n  }\n\n  _createClass(ViewComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this63 = this;\n\n      if (this.element) {\n        this.zone.runOutsideAngular(function () {\n          _this63.bindEvents();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      this.service = this.bus.service(this.activeView);\n\n      if (!this.service) {\n        return;\n      }\n\n      var generateWeekNames = this.isHorizontal() && this.weekNames.length === 0;\n\n      if (generateWeekNames && (changes.weekNumber || changes.direction)) {\n        this.weekNames = this.weekService.getWeekNames(this.weekNumber);\n      }\n\n      this.colSpan = this.service.rowLength(this.weekNumber);\n      this.title = this.service.title(this.viewDate);\n      this.updateData();\n\n      if (changes.activeView) {\n        this.currentCellIndex = null;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n      this.domEvents.forEach(function (unsubscribeCallback) {\n        return unsubscribeCallback();\n      });\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.direction === 'horizontal';\n    }\n  }, {\n    key: \"isMonthView\",\n    value: function isMonthView() {\n      return this.activeView === CalendarViewEnum.month;\n    }\n  }, {\n    key: \"firstDate\",\n    value: function firstDate(rowCtx) {\n      var ctx = this.firstWeekDateContext(rowCtx);\n      return ctx ? ctx.value : null;\n    }\n  }, {\n    key: \"getWeekNumber\",\n    value: function getWeekNumber(date) {\n      if (!this.weekNumber) {\n        return null;\n      }\n\n      return weekInYear(date, this.intl.firstDay());\n    }\n  }, {\n    key: \"getWeekNumberContext\",\n    value: function getWeekNumberContext(rowCtx) {\n      var ctx = this.firstWeekDateContext(rowCtx);\n\n      if (!this.weekNumber || !ctx) {\n        return null;\n      }\n\n      var weekNumber = weekInYear(ctx.value, this.intl.firstDay()).toString();\n      return {\n        formattedValue: weekNumber,\n        id: null,\n        isFocused: false,\n        isSelected: false,\n        isWeekend: false,\n        title: weekNumber,\n        value: cloneDate(ctx.value)\n      };\n    }\n  }, {\n    key: \"getStyles\",\n    value: function getStyles(context) {\n      var isRangeEnd = context.isRangeEnd,\n          isRangeStart = context.isRangeStart;\n      var isEndActive = this.activeRangeEnd === 'end' && isRangeEnd;\n      var isStartActive = this.activeRangeEnd === 'start' && isRangeStart;\n      return stringifyClassObject({\n        'k-range-end': isRangeEnd,\n        'k-range-mid': context.isRangeMid,\n        'k-range-split-end': context.isRangeSplitEnd,\n        'k-range-split-start': context.isRangeSplitStart,\n        'k-range-start': isRangeStart,\n        'k-state-active': isStartActive || isEndActive,\n        'k-state-focused': this.isActive && context.isFocused,\n        'k-state-selected': context.isSelected || isRangeStart || isRangeEnd,\n        'k-today': context.isToday,\n        'k-weekend': context.isWeekend,\n        'k-state-disabled': context.isDisabled\n      });\n    }\n  }, {\n    key: \"tableCellIndex\",\n    value: function tableCellIndex(rowIndex, cellIndex) {\n      return \"\".concat(rowIndex, \":\").concat(cellIndex);\n    }\n  }, {\n    key: \"firstWeekDateContext\",\n    value: function firstWeekDateContext(rowCtx) {\n      if (!this.weekNumber) {\n        return null;\n      }\n\n      var idx = 0;\n      var ctx = rowCtx[idx];\n\n      while (!ctx && idx < rowCtx.length) {\n        ctx = rowCtx[++idx];\n      }\n\n      return ctx;\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      var time = this.selectedDate || getToday();\n      var viewDate = setTime(this.viewDate, time);\n      this.data = this.service.data({\n        cellUID: this.cellUID,\n        focusedDate: this.focusedDate,\n        isActiveView: !this.bus.canMoveDown(this.activeView),\n        max: this.max,\n        min: this.min,\n        selectedDate: this.selectedDate,\n        selectionRange: this.selectionRange,\n        viewDate: viewDate,\n        isDateDisabled: this.disabledDatesService.isDateDisabled\n      });\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      this.updateData();\n\n      if (this.isHorizontal()) {\n        this.weekNames = this.weekService.getWeekNames(this.weekNumber);\n      }\n\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"disabledDatesChange\",\n    value: function disabledDatesChange() {\n      this.updateData();\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'mouseover', this.cellMouseoverHandler.bind(this)), this.renderer.listen(element, 'mouseleave', this.mouseLeaveHandler.bind(this)), this.renderer.listen(element, 'click', this.clickHandler.bind(this)));\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(args) {\n      var cell = this.closestCell(args);\n\n      if (cell) {\n        var index = cell.getAttribute('data-cell-index');\n        var cellContext = this.cellByIndex(index);\n\n        if (!cellContext.isDisabled) {\n          this.change.emit(cellContext.value);\n        }\n      }\n    }\n  }, {\n    key: \"mouseLeaveHandler\",\n    value: function mouseLeaveHandler() {\n      if (this.currentCellIndex) {\n        this.emitCellLeave();\n      }\n    }\n  }, {\n    key: \"cellMouseoverHandler\",\n    value: function cellMouseoverHandler(args) {\n      var cell = this.closestCell(args);\n\n      if (cell) {\n        var index = cell.getAttribute('data-cell-index');\n\n        if (this.currentCellIndex && this.currentCellIndex !== index) {\n          this.emitCellLeave();\n        }\n\n        var value = this.cellByIndex(index).value;\n        this.cellEnter.emit(value);\n        this.currentCellIndex = index;\n      } else if (this.currentCellIndex) {\n        this.emitCellLeave();\n      }\n    }\n  }, {\n    key: \"closestCell\",\n    value: function closestCell(eventArgs) {\n      return closestInScope(eventArgs.target, function (node) {\n        return node.hasAttribute('data-cell-index');\n      }, this.element.nativeElement);\n    }\n  }, {\n    key: \"emitCellLeave\",\n    value: function emitCellLeave() {\n      var item = this.cellByIndex(this.currentCellIndex);\n\n      if (item) {\n        this.cellLeave.emit(item.value);\n      }\n\n      this.currentCellIndex = null;\n    }\n  }, {\n    key: \"cellByIndex\",\n    value: function cellByIndex(index) {\n      var _index$split = index.split(':'),\n          _index$split2 = _slicedToArray(_index$split, 2),\n          rowIndex = _index$split2[0],\n          cellIndex = _index$split2[1];\n\n      return this.data[rowIndex][cellIndex];\n    }\n  }, {\n    key: \"weekNumber\",\n    get: function get() {\n      return this.showWeekNumbers && this.activeView === CalendarViewEnum.month;\n    },\n    set: function set(showWeekNumbers) {\n      this.showWeekNumbers = showWeekNumbers;\n    }\n  }]);\n\n  return ViewComponent;\n}();\n\nViewComponent.ɵfac = function ViewComponent_Factory(t) {\n  return new (t || ViewComponent)(ɵngcc0.ɵɵdirectiveInject(BusViewService), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(WeekNamesService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(DisabledDatesService));\n};\n\nViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ViewComponent,\n  selectors: [[\"\", \"kendoCalendarView\", \"\"]],\n  inputs: {\n    direction: \"direction\",\n    isActive: \"isActive\",\n    weekNumber: \"weekNumber\",\n    activeView: \"activeView\",\n    cellUID: \"cellUID\",\n    focusedDate: \"focusedDate\",\n    selectedDate: \"selectedDate\",\n    viewDate: \"viewDate\",\n    activeRangeEnd: \"activeRangeEnd\",\n    selectionRange: \"selectionRange\",\n    min: \"min\",\n    max: \"max\",\n    viewIndex: \"viewIndex\",\n    templateRef: \"templateRef\",\n    weekNumberTemplateRef: \"weekNumberTemplateRef\"\n  },\n  outputs: {\n    change: \"change\",\n    cellEnter: \"cellEnter\",\n    cellLeave: \"cellLeave\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c74,\n  decls: 5,\n  vars: 3,\n  consts: [[\"emptyCell\", \"\"], [\"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 4, \"kFor\", \"kForOf\"], [1, \"k-empty\"], [\"role\", \"row\"], [\"scope\", \"col\", 3, \"colSpan\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngIf\"], [4, \"kFor\", \"kForOf\"], [\"class\", \"k-alt\", 4, \"ngIf\", \"ngIfElse\"], [1, \"k-alt\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"gridcell\", 3, \"ngClass\", \"title\", 4, \"ngIf\", \"ngIfElse\"], [\"role\", \"gridcell\", 3, \"ngClass\", \"title\"], [1, \"k-link\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function ViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ViewComponent_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, ViewComponent_tr_2_Template, 3, 2, \"tr\", 1);\n      ɵngcc0.ɵɵtemplate(3, ViewComponent_tr_3_Template, 2, 1, \"tr\", 1);\n      ɵngcc0.ɵɵtemplate(4, ViewComponent_tr_4_Template, 3, 2, \"tr\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isHorizontal());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isMonthView() && ctx.isHorizontal());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"kForOf\", ctx.data);\n    }\n  },\n  directives: [ɵngcc1.NgIf, KForOf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgClass],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nViewComponent.ctorParameters = function () {\n  return [{\n    type: BusViewService\n  }, {\n    type: IntlService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: WeekNamesService\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: DisabledDatesService\n  }];\n};\n\nViewComponent.propDecorators = {\n  direction: [{\n    type: Input\n  }],\n  isActive: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  cellUID: [{\n    type: Input\n  }],\n  focusedDate: [{\n    type: Input\n  }],\n  selectedDate: [{\n    type: Input\n  }],\n  viewDate: [{\n    type: Input\n  }],\n  activeRangeEnd: [{\n    type: Input\n  }],\n  selectionRange: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }],\n  viewIndex: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: Input\n  }],\n  weekNumberTemplateRef: [{\n    type: Input\n  }],\n  change: [{\n    type: Output\n  }],\n  cellEnter: [{\n    type: Output\n  }],\n  cellLeave: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ViewComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoCalendarView]',\n      template: \"\\n    <ng-template #emptyCell><td class=\\\"k-empty\\\">&nbsp;</td></ng-template>\\n    <tr *ngIf=\\\"!isHorizontal()\\\" role=\\\"row\\\"><th scope=\\\"col\\\" [colSpan]=\\\"colSpan\\\">{{title}}</th></tr>\\n    <tr role=\\\"row\\\" *ngIf=\\\"isMonthView() && isHorizontal()\\\">\\n        <th *ngFor=\\\"let name of weekNames\\\">{{name}}</th>\\n    </tr>\\n    <tr *kFor=\\\"let row of data; let rowIndex = index\\\" role=\\\"row\\\">\\n        <ng-template [ngIf]=\\\"weekNumber\\\">\\n            <td class=\\\"k-alt\\\" *ngIf=\\\"firstDate(row); else emptyCell\\\">\\n                <ng-template [ngIf]=\\\"!weekNumberTemplateRef\\\">\\n                    {{getWeekNumber(firstDate(row))}}\\n                </ng-template>\\n                <ng-template\\n                    [ngIf]=\\\"weekNumberTemplateRef\\\"\\n                    [ngTemplateOutlet]=\\\"weekNumberTemplateRef\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                        $implicit: firstDate(row),\\n                        cellContext: getWeekNumberContext(row)\\n                    }\\\"\\n                ></ng-template>\\n            </td>\\n        </ng-template>\\n        <ng-container *kFor=\\\"let cell of row; let cellIndex = index\\\">\\n            <td\\n                *ngIf=\\\"cell; else emptyCell\\\"\\n                role=\\\"gridcell\\\"\\n                [attr.id]=\\\"cell.id\\\"\\n                [attr.data-cell-index]=\\\"tableCellIndex(rowIndex, cellIndex)\\\"\\n                [attr.aria-selected]=\\\"cell.isSelected || cell.isRangeStart || cell.isRangeMid || cell.isRangeEnd\\\"\\n                [attr.aria-disabled]=\\\"cell.isDisabled\\\"\\n                [ngClass]=\\\"getStyles(cell)\\\"\\n                [title]=\\\"cell.title\\\"\\n            >\\n                <span class=\\\"k-link\\\">\\n                    <ng-template [ngIf]=\\\"!templateRef\\\">{{cell.formattedValue}}</ng-template>\\n                    <ng-template\\n                        *ngIf=\\\"templateRef\\\"\\n                        [ngTemplateOutlet]=\\\"templateRef\\\"\\n                        [ngTemplateOutletContext]=\\\"{ $implicit: cell.value, cellContext: cell }\\\"\\n                    ></ng-template>\\n                </span>\\n            </td>\\n        </ng-container>\\n    </tr>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: BusViewService\n    }, {\n      type: IntlService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: WeekNamesService\n    }, {\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: DisabledDatesService\n    }];\n  }, {\n    direction: [{\n      type: Input\n    }],\n    isActive: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    cellEnter: [{\n      type: Output\n    }],\n    cellLeave: [{\n      type: Output\n    }],\n    weekNumber: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    cellUID: [{\n      type: Input\n    }],\n    focusedDate: [{\n      type: Input\n    }],\n    selectedDate: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }],\n    activeRangeEnd: [{\n      type: Input\n    }],\n    selectionRange: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    viewIndex: [{\n      type: Input\n    }],\n    templateRef: [{\n      type: Input\n    }],\n    weekNumberTemplateRef: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `HeaderComponent`&mdash;The component that renders the UI for vertical navigation.\n * - `ViewComponent`&mdash;The component that renders the active Calendar view.\n */\n\n\nvar CalendarCommonModule = function CalendarCommonModule() {\n  _classCallCheck(this, CalendarCommonModule);\n};\n\nCalendarCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarCommonModule\n});\nCalendarCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarCommonModule_Factory(t) {\n    return new (t || CalendarCommonModule)();\n  },\n  imports: [[CommonModule, EventsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarCommonModule, {\n    declarations: function declarations() {\n      return [KForOf, HeaderComponent, ViewComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, EventsModule];\n    },\n    exports: function exports() {\n      return [KForOf, HeaderComponent, ViewComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarCommonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [KForOf, HeaderComponent, ViewComponent],\n      exports: [KForOf, HeaderComponent, ViewComponent],\n      imports: [CommonModule, EventsModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n * - `NavigationItemTemplateDirective`&mdash;The navigation item template directive.\n */\n\n\nvar TemplatesModule = function TemplatesModule() {\n  _classCallCheck(this, TemplatesModule);\n};\n\nTemplatesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TemplatesModule\n});\nTemplatesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TemplatesModule_Factory(t) {\n    return new (t || TemplatesModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TemplatesModule, {\n    declarations: [CellTemplateDirective, MonthCellTemplateDirective, YearCellTemplateDirective, DecadeCellTemplateDirective, CenturyCellTemplateDirective, WeekNumberCellTemplateDirective, HeaderTitleTemplateDirective, NavigationItemTemplateDirective],\n    exports: [CellTemplateDirective, MonthCellTemplateDirective, YearCellTemplateDirective, DecadeCellTemplateDirective, CenturyCellTemplateDirective, WeekNumberCellTemplateDirective, HeaderTitleTemplateDirective, NavigationItemTemplateDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TemplatesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CellTemplateDirective, MonthCellTemplateDirective, YearCellTemplateDirective, DecadeCellTemplateDirective, CenturyCellTemplateDirective, WeekNumberCellTemplateDirective, HeaderTitleTemplateDirective, NavigationItemTemplateDirective],\n      exports: [CellTemplateDirective, MonthCellTemplateDirective, YearCellTemplateDirective, DecadeCellTemplateDirective, CenturyCellTemplateDirective, WeekNumberCellTemplateDirective, HeaderTitleTemplateDirective, NavigationItemTemplateDirective]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar CalendarMessages = /*#__PURE__*/function (_ComponentMessages) {\n  _inherits(CalendarMessages, _ComponentMessages);\n\n  var _super3 = _createSuper(CalendarMessages);\n\n  function CalendarMessages() {\n    _classCallCheck(this, CalendarMessages);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return CalendarMessages;\n}(ComponentMessages);\n\nCalendarMessages.ɵfac = function CalendarMessages_Factory(t) {\n  return ɵCalendarMessages_BaseFactory(t || CalendarMessages);\n};\n\nCalendarMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarMessages,\n  inputs: {\n    today: \"today\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nCalendarMessages.propDecorators = {\n  today: [{\n    type: Input\n  }]\n};\nvar ɵCalendarMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(CalendarMessages);\n/**\n * @hidden\n */\n\nvar CalendarLocalizedMessagesDirective = /*#__PURE__*/function (_CalendarMessages) {\n  _inherits(CalendarLocalizedMessagesDirective, _CalendarMessages);\n\n  var _super4 = _createSuper(CalendarLocalizedMessagesDirective);\n\n  function CalendarLocalizedMessagesDirective(service) {\n    var _this64;\n\n    _classCallCheck(this, CalendarLocalizedMessagesDirective);\n\n    _this64 = _super4.call(this);\n    _this64.service = service;\n    return _this64;\n  }\n\n  return CalendarLocalizedMessagesDirective;\n}(CalendarMessages);\n\nCalendarLocalizedMessagesDirective.ɵfac = function CalendarLocalizedMessagesDirective_Factory(t) {\n  return new (t || CalendarLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nCalendarLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoCalendarLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CalendarMessages,\n    useExisting: forwardRef(function () {\n      return CalendarLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nCalendarLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: CalendarMessages,\n        useExisting: forwardRef(function () {\n          return CalendarLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoCalendarLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\n\nvar CalendarCustomMessagesComponent = /*#__PURE__*/function (_CalendarMessages2) {\n  _inherits(CalendarCustomMessagesComponent, _CalendarMessages2);\n\n  var _super5 = _createSuper(CalendarCustomMessagesComponent);\n\n  function CalendarCustomMessagesComponent(service) {\n    var _this65;\n\n    _classCallCheck(this, CalendarCustomMessagesComponent);\n\n    _this65 = _super5.call(this);\n    _this65.service = service;\n    return _this65;\n  }\n\n  _createClass(CalendarCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return CalendarCustomMessagesComponent;\n}(CalendarMessages);\n\nCalendarCustomMessagesComponent.ɵfac = function CalendarCustomMessagesComponent_Factory(t) {\n  return new (t || CalendarCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nCalendarCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarCustomMessagesComponent,\n  selectors: [[\"kendo-calendar-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: CalendarMessages,\n    useExisting: forwardRef(function () {\n      return CalendarCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CalendarCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: CalendarMessages,\n        useExisting: forwardRef(function () {\n          return CalendarCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-calendar-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar COMPONENT_DIRECTIVES = [VirtualizationComponent];\n/**\n * @hidden\n *\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Virtualization component.\n */\n\nvar VirtualizationModule = function VirtualizationModule() {\n  _classCallCheck(this, VirtualizationModule);\n};\n\nVirtualizationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: VirtualizationModule\n});\nVirtualizationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function VirtualizationModule_Factory(t) {\n    return new (t || VirtualizationModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(VirtualizationModule, {\n    declarations: function declarations() {\n      return [VirtualizationComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [VirtualizationComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(VirtualizationModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENT_DIRECTIVES],\n      exports: [COMPONENT_DIRECTIVES],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n * - `NavigationItemTemplateDirective`&mdash;The navigation item template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendar module\n * import { CalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarModule], // import Calendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nvar CalendarModule = function CalendarModule() {\n  _classCallCheck(this, CalendarModule);\n};\n\nCalendarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarModule\n});\nCalendarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarModule_Factory(t) {\n    return new (t || CalendarModule)();\n  },\n  providers: [CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, WeekNamesService],\n  imports: [[CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, VirtualizationModule, EventsModule], CalendarCommonModule, TemplatesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarModule, {\n    declarations: function declarations() {\n      return [CalendarComponent, NavigationComponent, CalendarCustomMessagesComponent, CalendarLocalizedMessagesDirective, ViewListComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, VirtualizationModule, EventsModule];\n    },\n    exports: function exports() {\n      return [CalendarComponent, NavigationComponent, CalendarCustomMessagesComponent, CalendarLocalizedMessagesDirective, ViewListComponent, CalendarCommonModule, TemplatesModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CalendarComponent, NavigationComponent, CalendarCustomMessagesComponent, CalendarLocalizedMessagesDirective, ViewListComponent],\n      exports: [CalendarComponent, NavigationComponent, CalendarCustomMessagesComponent, CalendarLocalizedMessagesDirective, ViewListComponent, CalendarCommonModule, TemplatesModule],\n      imports: [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, VirtualizationModule, EventsModule],\n      providers: [CalendarDOMService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, WeekNamesService]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar Messages = /*#__PURE__*/function (_ComponentMessages2) {\n  _inherits(Messages, _ComponentMessages2);\n\n  var _super6 = _createSuper(Messages);\n\n  function Messages() {\n    _classCallCheck(this, Messages);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return Messages;\n}(ComponentMessages);\n\nMessages.ɵfac = function Messages_Factory(t) {\n  return ɵMessages_BaseFactory(t || Messages);\n};\n\nMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Messages,\n  inputs: {\n    today: \"today\",\n    prevButtonTitle: \"prevButtonTitle\",\n    nextButtonTitle: \"nextButtonTitle\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMessages.propDecorators = {\n  today: [{\n    type: Input\n  }],\n  prevButtonTitle: [{\n    type: Input\n  }],\n  nextButtonTitle: [{\n    type: Input\n  }]\n};\nvar ɵMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(Messages);\n/**\n * @hidden\n */\n\nvar MultiViewCalendarLocalizedMessagesDirective = /*#__PURE__*/function (_Messages) {\n  _inherits(MultiViewCalendarLocalizedMessagesDirective, _Messages);\n\n  var _super7 = _createSuper(MultiViewCalendarLocalizedMessagesDirective);\n\n  function MultiViewCalendarLocalizedMessagesDirective(service) {\n    var _this66;\n\n    _classCallCheck(this, MultiViewCalendarLocalizedMessagesDirective);\n\n    _this66 = _super7.call(this);\n    _this66.service = service;\n    return _this66;\n  }\n\n  return MultiViewCalendarLocalizedMessagesDirective;\n}(Messages);\n\nMultiViewCalendarLocalizedMessagesDirective.ɵfac = function MultiViewCalendarLocalizedMessagesDirective_Factory(t) {\n  return new (t || MultiViewCalendarLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nMultiViewCalendarLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MultiViewCalendarLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoMultiViewCalendarLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return MultiViewCalendarLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nMultiViewCalendarLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiViewCalendarLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return MultiViewCalendarLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoMultiViewCalendarLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\n\nvar MultiViewCalendarCustomMessagesComponent = /*#__PURE__*/function (_Messages2) {\n  _inherits(MultiViewCalendarCustomMessagesComponent, _Messages2);\n\n  var _super8 = _createSuper(MultiViewCalendarCustomMessagesComponent);\n\n  function MultiViewCalendarCustomMessagesComponent(service) {\n    var _this67;\n\n    _classCallCheck(this, MultiViewCalendarCustomMessagesComponent);\n\n    _this67 = _super8.call(this);\n    _this67.service = service;\n    return _this67;\n  }\n\n  _createClass(MultiViewCalendarCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return MultiViewCalendarCustomMessagesComponent;\n}(Messages);\n\nMultiViewCalendarCustomMessagesComponent.ɵfac = function MultiViewCalendarCustomMessagesComponent_Factory(t) {\n  return new (t || MultiViewCalendarCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nMultiViewCalendarCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MultiViewCalendarCustomMessagesComponent,\n  selectors: [[\"kendo-multiviewcalendar-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return MultiViewCalendarCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function MultiViewCalendarCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMultiViewCalendarCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiViewCalendarCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return MultiViewCalendarCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-multiviewcalendar-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the MultiViewCalendar module\n * import { MultiViewCalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, MultiViewCalendarModule], // import MultiViewCalendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n */\n\n\nvar MultiViewCalendarModule = function MultiViewCalendarModule() {\n  _classCallCheck(this, MultiViewCalendarModule);\n};\n\nMultiViewCalendarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MultiViewCalendarModule\n});\nMultiViewCalendarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MultiViewCalendarModule_Factory(t) {\n    return new (t || MultiViewCalendarModule)();\n  },\n  providers: [NavigationService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, WeekNamesService],\n  imports: [[CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, PopupModule], CalendarCommonModule, TemplatesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MultiViewCalendarModule, {\n    declarations: function declarations() {\n      return [HorizontalViewListComponent, MultiViewCalendarLocalizedMessagesDirective, MultiViewCalendarCustomMessagesComponent, MultiViewCalendarComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, PopupModule];\n    },\n    exports: function exports() {\n      return [HorizontalViewListComponent, MultiViewCalendarLocalizedMessagesDirective, MultiViewCalendarCustomMessagesComponent, MultiViewCalendarComponent, CalendarCommonModule, TemplatesModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiViewCalendarModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [HorizontalViewListComponent, MultiViewCalendarLocalizedMessagesDirective, MultiViewCalendarCustomMessagesComponent, MultiViewCalendarComponent],\n      exports: [HorizontalViewListComponent, MultiViewCalendarLocalizedMessagesDirective, MultiViewCalendarCustomMessagesComponent, MultiViewCalendarComponent, CalendarCommonModule, TemplatesModule],\n      imports: [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, PopupModule],\n      providers: [NavigationService, CenturyViewService, DecadeViewService, MonthViewService, YearViewService, WeekNamesService]\n    }]\n  }], null, null);\n})();\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CalendarModule`&mdash;The calendar module.\n * - `MultiViewCalendarModule`&mdash;The multi-view calendar module.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendars module\n * import { CalendarsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarsModule], // import the Calendars module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nvar CalendarsModule = function CalendarsModule() {\n  _classCallCheck(this, CalendarsModule);\n};\n\nCalendarsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarsModule\n});\nCalendarsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarsModule_Factory(t) {\n    return new (t || CalendarsModule)();\n  },\n  imports: [[CalendarModule, MultiViewCalendarModule], CalendarModule, MultiViewCalendarModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarsModule, {\n    imports: [CalendarModule, MultiViewCalendarModule],\n    exports: [CalendarModule, MultiViewCalendarModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CalendarsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [CalendarModule, MultiViewCalendarModule],\n      imports: [CalendarModule, MultiViewCalendarModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar DateInputMessages = /*#__PURE__*/function (_ComponentMessages3) {\n  _inherits(DateInputMessages, _ComponentMessages3);\n\n  var _super9 = _createSuper(DateInputMessages);\n\n  function DateInputMessages() {\n    _classCallCheck(this, DateInputMessages);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return DateInputMessages;\n}(ComponentMessages);\n\nDateInputMessages.ɵfac = function DateInputMessages_Factory(t) {\n  return ɵDateInputMessages_BaseFactory(t || DateInputMessages);\n};\n\nDateInputMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateInputMessages,\n  inputs: {\n    decrement: \"decrement\",\n    increment: \"increment\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nDateInputMessages.propDecorators = {\n  decrement: [{\n    type: Input\n  }],\n  increment: [{\n    type: Input\n  }]\n};\nvar ɵDateInputMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DateInputMessages);\n/**\n * @hidden\n */\n\nvar DateInputLocalizedMessagesDirective = /*#__PURE__*/function (_DateInputMessages) {\n  _inherits(DateInputLocalizedMessagesDirective, _DateInputMessages);\n\n  var _super10 = _createSuper(DateInputLocalizedMessagesDirective);\n\n  function DateInputLocalizedMessagesDirective(service) {\n    var _this68;\n\n    _classCallCheck(this, DateInputLocalizedMessagesDirective);\n\n    _this68 = _super10.call(this);\n    _this68.service = service;\n    return _this68;\n  }\n\n  return DateInputLocalizedMessagesDirective;\n}(DateInputMessages);\n\nDateInputLocalizedMessagesDirective.ɵfac = function DateInputLocalizedMessagesDirective_Factory(t) {\n  return new (t || DateInputLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateInputLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateInputLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDateInputLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: DateInputMessages,\n    useExisting: forwardRef(function () {\n      return DateInputLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDateInputLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateInputLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: DateInputMessages,\n        useExisting: forwardRef(function () {\n          return DateInputLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoDateInputLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\n\nvar DateInputCustomMessagesComponent = /*#__PURE__*/function (_DateInputMessages2) {\n  _inherits(DateInputCustomMessagesComponent, _DateInputMessages2);\n\n  var _super11 = _createSuper(DateInputCustomMessagesComponent);\n\n  function DateInputCustomMessagesComponent(service) {\n    var _this69;\n\n    _classCallCheck(this, DateInputCustomMessagesComponent);\n\n    _this69 = _super11.call(this);\n    _this69.service = service;\n    return _this69;\n  }\n\n  _createClass(DateInputCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return DateInputCustomMessagesComponent;\n}(DateInputMessages);\n\nDateInputCustomMessagesComponent.ɵfac = function DateInputCustomMessagesComponent_Factory(t) {\n  return new (t || DateInputCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateInputCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateInputCustomMessagesComponent,\n  selectors: [[\"kendo-dateinput-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: DateInputMessages,\n    useExisting: forwardRef(function () {\n      return DateInputCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DateInputCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateInputCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateInputCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: DateInputMessages,\n        useExisting: forwardRef(function () {\n          return DateInputCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-dateinput-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DateInput component.\n */\n\n\nvar DateInputModule = function DateInputModule() {\n  _classCallCheck(this, DateInputModule);\n};\n\nDateInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DateInputModule\n});\nDateInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DateInputModule_Factory(t) {\n    return new (t || DateInputModule)();\n  },\n  imports: [[CommonModule, IntlModule, EventsModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateInputModule, {\n    declarations: function declarations() {\n      return [DateInputComponent, DateInputCustomMessagesComponent, DateInputLocalizedMessagesDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, IntlModule, EventsModule];\n    },\n    exports: function exports() {\n      return [DateInputComponent, DateInputCustomMessagesComponent, DateInputLocalizedMessagesDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DateInputComponent, DateInputCustomMessagesComponent, DateInputLocalizedMessagesDirective],\n      exports: [DateInputComponent, DateInputCustomMessagesComponent, DateInputLocalizedMessagesDirective],\n      imports: [CommonModule, IntlModule, EventsModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar DatePickerMessages = /*#__PURE__*/function (_ComponentMessages4) {\n  _inherits(DatePickerMessages, _ComponentMessages4);\n\n  var _super12 = _createSuper(DatePickerMessages);\n\n  function DatePickerMessages() {\n    _classCallCheck(this, DatePickerMessages);\n\n    return _super12.apply(this, arguments);\n  }\n\n  return DatePickerMessages;\n}(ComponentMessages);\n\nDatePickerMessages.ɵfac = function DatePickerMessages_Factory(t) {\n  return ɵDatePickerMessages_BaseFactory(t || DatePickerMessages);\n};\n\nDatePickerMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatePickerMessages,\n  inputs: {\n    today: \"today\",\n    toggle: \"toggle\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nDatePickerMessages.propDecorators = {\n  today: [{\n    type: Input\n  }],\n  toggle: [{\n    type: Input\n  }]\n};\nvar ɵDatePickerMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(DatePickerMessages);\n/**\n * @hidden\n */\n\nvar DatePickerLocalizedMessagesDirective = /*#__PURE__*/function (_DatePickerMessages) {\n  _inherits(DatePickerLocalizedMessagesDirective, _DatePickerMessages);\n\n  var _super13 = _createSuper(DatePickerLocalizedMessagesDirective);\n\n  function DatePickerLocalizedMessagesDirective(service) {\n    var _this70;\n\n    _classCallCheck(this, DatePickerLocalizedMessagesDirective);\n\n    _this70 = _super13.call(this);\n    _this70.service = service;\n    return _this70;\n  }\n\n  return DatePickerLocalizedMessagesDirective;\n}(DatePickerMessages);\n\nDatePickerLocalizedMessagesDirective.ɵfac = function DatePickerLocalizedMessagesDirective_Factory(t) {\n  return new (t || DatePickerLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDatePickerLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DatePickerLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDatePickerLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: DatePickerMessages,\n    useExisting: forwardRef(function () {\n      return DatePickerLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nDatePickerLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatePickerLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: DatePickerMessages,\n        useExisting: forwardRef(function () {\n          return DatePickerLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoDatePickerLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\n\nvar DatePickerCustomMessagesComponent = /*#__PURE__*/function (_DatePickerMessages2) {\n  _inherits(DatePickerCustomMessagesComponent, _DatePickerMessages2);\n\n  var _super14 = _createSuper(DatePickerCustomMessagesComponent);\n\n  function DatePickerCustomMessagesComponent(service) {\n    var _this71;\n\n    _classCallCheck(this, DatePickerCustomMessagesComponent);\n\n    _this71 = _super14.call(this);\n    _this71.service = service;\n    return _this71;\n  }\n\n  _createClass(DatePickerCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return DatePickerCustomMessagesComponent;\n}(DatePickerMessages);\n\nDatePickerCustomMessagesComponent.ɵfac = function DatePickerCustomMessagesComponent_Factory(t) {\n  return new (t || DatePickerCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDatePickerCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DatePickerCustomMessagesComponent,\n  selectors: [[\"kendo-datepicker-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: DatePickerMessages,\n    useExisting: forwardRef(function () {\n      return DatePickerCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DatePickerCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDatePickerCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatePickerCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: DatePickerMessages,\n        useExisting: forwardRef(function () {\n          return DatePickerCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-datepicker-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar ɵ0$e = touchEnabled;\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DatePicker component.\n */\n\nvar DatePickerModule = function DatePickerModule() {\n  _classCallCheck(this, DatePickerModule);\n};\n\nDatePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DatePickerModule\n});\nDatePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DatePickerModule_Factory(t) {\n    return new (t || DatePickerModule)();\n  },\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: ɵ0$e\n  }],\n  imports: [[CommonModule, DateInputModule, CalendarModule, IntlModule, PopupModule, TemplatesModule, EventsModule], TemplatesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatePickerModule, {\n    declarations: function declarations() {\n      return [DatePickerComponent, DatePickerCustomMessagesComponent, DatePickerLocalizedMessagesDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, DateInputModule, CalendarModule, IntlModule, PopupModule, TemplatesModule, EventsModule];\n    },\n    exports: function exports() {\n      return [DatePickerComponent, DatePickerCustomMessagesComponent, DatePickerLocalizedMessagesDirective, TemplatesModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DatePickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DatePickerComponent, DatePickerCustomMessagesComponent, DatePickerLocalizedMessagesDirective],\n      exports: [DatePickerComponent, DatePickerCustomMessagesComponent, DatePickerLocalizedMessagesDirective, TemplatesModule],\n      imports: [CommonModule, DateInputModule, CalendarModule, IntlModule, PopupModule, TemplatesModule, EventsModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: ɵ0$e\n      }]\n    }]\n  }], null, null);\n})();\n\nvar COMPONENT_DIRECTIVES$1 = [DateRangeComponent, DateRangePopupComponent, DateRangePopupTemplateDirective, DateRangeSelectionDirective, DateRangeStartInputDirective, DateRangeEndInputDirective];\nvar COMPONENT_MODULES = [MultiViewCalendarModule, DateInputModule, PopupModule, EventsModule];\n/**\n * The exported package module.\n *\n * The package exports:\n * - `DateRangeComponent`&mdash;The DateRange component class.\n * - `DateRangePopupComponent`&mdash;The DateRangePopup component class.\n * - `DateRangeSelectionDirective`&mdash;The MultiviewCalendar date range selection directive.\n * - `DateRangeEndInputDirective`&mdash;The end DateInput date range selection directive.\n * - `DateRangeStartInputDirective`&mdash;The start DateInput date range selection directive.\n * - `DateRangePopupTemplateDirective`&mdash;The DateRangePopup content template directive.\n * - `MultiViewCalendarModule`&mdash;The MultiViewCalendar module.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the DateRange module\n * import { DateRangeModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, DateRangeModule], // import DateRange module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nvar DateRangeModule = function DateRangeModule() {\n  _classCallCheck(this, DateRangeModule);\n};\n\nDateRangeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DateRangeModule\n});\nDateRangeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DateRangeModule_Factory(t) {\n    return new (t || DateRangeModule)();\n  },\n  imports: [[CommonModule, COMPONENT_MODULES]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateRangeModule, {\n    declarations: function declarations() {\n      return [DateRangeComponent, DateRangePopupComponent, DateRangePopupTemplateDirective, DateRangeSelectionDirective, DateRangeStartInputDirective, DateRangeEndInputDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, MultiViewCalendarModule, DateInputModule, PopupModule, EventsModule];\n    },\n    exports: function exports() {\n      return [DateRangeComponent, DateRangePopupComponent, DateRangePopupTemplateDirective, DateRangeSelectionDirective, DateRangeStartInputDirective, DateRangeEndInputDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateRangeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENT_DIRECTIVES$1],\n      exports: [COMPONENT_DIRECTIVES$1],\n      imports: [CommonModule, COMPONENT_MODULES]\n    }]\n  }], null, null);\n})();\n\nvar div$1 = domContainerFactory('div');\nvar ul$1 = domContainerFactory('ul');\nvar li$1 = domContainerFactory('li');\n\nvar listItem = function listItem() {\n  return li$1('<span>02</span>', 'k-item');\n};\n\nvar list = function list() {\n  return ul$1([listItem()], 'k-reset');\n};\n\nvar scrollable$1 = function scrollable$1() {\n  return div$1([list()], 'k-time-container k-content k-scrollable');\n};\n\nvar timeListWrapper = function timeListWrapper() {\n  if (!isDocumentAvailable()) {\n    return null;\n  }\n\n  return div$1([div$1([scrollable$1()], 'k-time-list')], 'k-time-list-wrapper', {\n    left: '-10000px',\n    position: 'absolute'\n  });\n};\n\nvar TIMELIST_WRAPPER = timeListWrapper();\n/**\n * @hidden\n */\n\nvar TimePickerDOMService = /*#__PURE__*/function () {\n  function TimePickerDOMService() {\n    _classCallCheck(this, TimePickerDOMService);\n  }\n\n  _createClass(TimePickerDOMService, [{\n    key: \"ensureHeights\",\n    value: function ensureHeights() {\n      if (this.timeListHeight !== undefined) {\n        return;\n      }\n\n      this.calculateHeights();\n    }\n  }, {\n    key: \"calculateHeights\",\n    value: function calculateHeights(container) {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      var listContainer = container && container.querySelector('.k-time-list-container');\n      var hostContainer = listContainer || document.body;\n      var wrapper = hostContainer.appendChild(TIMELIST_WRAPPER);\n      this.timeListHeight = wrapper.querySelector('.k-scrollable').getBoundingClientRect().height;\n      this.itemHeight = wrapper.querySelector('li').getBoundingClientRect().height;\n      hostContainer.removeChild(wrapper);\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(element) {\n      if (!isDocumentAvailable() || !element) {\n        return false;\n      }\n\n      return (element.nativeElement || element) === document.activeElement;\n    }\n  }]);\n\n  return TimePickerDOMService;\n}();\n\nTimePickerDOMService.ɵfac = function TimePickerDOMService_Factory(t) {\n  return new (t || TimePickerDOMService)();\n};\n\nTimePickerDOMService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TimePickerDOMService,\n  factory: TimePickerDOMService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimePickerDOMService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar HOURS_IN_DAY = 24;\n\nvar clampToRange = function clampToRange(rangeValue) {\n  return function (value) {\n    return value % rangeValue;\n  };\n};\n\nvar clamp = clampToRange(HOURS_IN_DAY);\n\nvar stepper = function stepper(start, step) {\n  return function (idx) {\n    return clamp(start + idx * step);\n  };\n};\n\nvar distanceFromMin = function distanceFromMin(value, min) {\n  return clamp(HOURS_IN_DAY + value - min);\n};\n\nvar limit = function limit(borderValue) {\n  return function (barrier, value) {\n    var useBarrier = !value || getDate(barrier).getTime() === getDate(value).getTime();\n    return useBarrier ? barrier : setHours(barrier, borderValue);\n  };\n};\n\nvar limitDown = limit(0);\nvar limitUp = limit(HOURS_IN_DAY - 1);\n/**\n * @hidden\n */\n\nvar HoursService = /*#__PURE__*/function () {\n  function HoursService(intl) {\n    _classCallCheck(this, HoursService);\n\n    this.intl = intl;\n    this.boundRange = false;\n    this.insertUndividedMax = false;\n  }\n\n  _createClass(HoursService, [{\n    key: \"apply\",\n    value: function apply(value, candidate) {\n      return setHours(value, candidate.getHours());\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(settings) {\n      var _this72 = this;\n\n      var _settings$boundRange = settings.boundRange,\n          boundRange = _settings$boundRange === void 0 ? this.boundRange : _settings$boundRange,\n          _settings$insertUndiv = settings.insertUndividedMax,\n          insertUndividedMax = _settings$insertUndiv === void 0 ? this.insertUndividedMax : _settings$insertUndiv,\n          _settings$min = settings.min,\n          min = _settings$min === void 0 ? this.min : _settings$min,\n          _settings$max = settings.max,\n          max = _settings$max === void 0 ? this.max : _settings$max,\n          part = settings.part,\n          _settings$step = settings.step,\n          step = _settings$step === void 0 ? this.step : _settings$step;\n      this.boundRange = boundRange;\n      this.insertUndividedMax = insertUndividedMax;\n\n      this.toListItem = function (hour) {\n        var date = setHours(MIDNIGHT_DATE, hour);\n        return {\n          text: _this72.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n  }, {\n    key: \"data\",\n    value: function data(selectedValue) {\n      var _this73 = this;\n\n      var _this$range = this.range(selectedValue),\n          _this$range2 = _slicedToArray(_this$range, 1),\n          min = _this$range2[0];\n\n      var getHour = stepper(min, this.step);\n\n      var convertToItem = function convertToItem(idx) {\n        return _this73.toListItem(getHour(idx));\n      };\n\n      var data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n  }, {\n    key: \"isRangeChanged\",\n    value: function isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n  }, {\n    key: \"limitRange\",\n    value: function limitRange(min, max, value) {\n      return this.boundRange ? [limitDown(min, value), limitUp(max, value)] : [min, max];\n    }\n  }, {\n    key: \"total\",\n    value: function total(value) {\n      var last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      var missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last$$1;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n  }, {\n    key: \"valueInList\",\n    value: function valueInList(value) {\n      if (!value) {\n        return true;\n      }\n\n      var matchMax = this.insertUndividedMax && this.lastHour(value) === value.getHours();\n      return matchMax || !this.isMissing(value);\n    }\n  }, {\n    key: \"addLast\",\n    value: function addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastHour(value)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"addMissing\",\n    value: function addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n\n      var missingItem = this.toListItem(value.getHours());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n  }, {\n    key: \"countFromMin\",\n    value: function countFromMin(value) {\n      var _this$range3 = this.range(value),\n          _this$range4 = _slicedToArray(_this$range3, 2),\n          min = _this$range4[0],\n          max = _this$range4[1];\n\n      return Math.floor(distanceFromMin(max, min) / this.step) + 1;\n      /* include min */\n    }\n  }, {\n    key: \"isMissing\",\n    value: function isMissing(value) {\n      if (!value) {\n        return false;\n      }\n\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n  }, {\n    key: \"isLastMissing\",\n    value: function isLastMissing(value) {\n      return this.isMissing(setHours(this.max, this.lastHour(value)));\n    }\n  }, {\n    key: \"divideByStep\",\n    value: function divideByStep(value) {\n      return distanceFromMin(value.getHours(), this.min.getHours()) / this.step;\n    }\n  }, {\n    key: \"lastHour\",\n    value: function lastHour(value) {\n      return this.range(value)[1];\n    }\n  }, {\n    key: \"range\",\n    value: function range(value) {\n      var _this$limitRange = this.limitRange(this.min, this.max, value),\n          _this$limitRange2 = _slicedToArray(_this$limitRange, 2),\n          min = _this$limitRange2[0],\n          max = _this$limitRange2[1];\n\n      return [min.getHours(), max.getHours()];\n    }\n  }]);\n\n  return HoursService;\n}();\n\nHoursService.ɵfac = function HoursService_Factory(t) {\n  return new (t || HoursService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nHoursService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: HoursService,\n  factory: HoursService.ɵfac\n});\n/** @nocollapse */\n\nHoursService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HoursService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n\nvar MINUTES_IN_HOUR = 60;\n\nvar clampToRange$1 = function clampToRange$1(rangeValue) {\n  return function (value) {\n    return value % rangeValue;\n  };\n};\n\nvar clamp$1 = clampToRange$1(MINUTES_IN_HOUR);\n\nvar stepper$1 = function stepper$1(start, step) {\n  return function (idx) {\n    return clamp$1(start + idx * step);\n  };\n};\n\nvar distanceFromMin$1 = function distanceFromMin$1(value, min) {\n  return clamp$1(MINUTES_IN_HOUR + value - min);\n};\n\nvar limit$1 = function limit$1(borderValue) {\n  return function (barrier, value) {\n    var useBarrier = !value || barrier.getHours() === value.getHours();\n    return useBarrier ? barrier : setMinutes(barrier, borderValue);\n  };\n};\n\nvar limitDown$1 = limit$1(0);\nvar limitUp$1 = limit$1(MINUTES_IN_HOUR - 1);\n/**\n * @hidden\n */\n\nvar MinutesService = /*#__PURE__*/function () {\n  function MinutesService(intl) {\n    _classCallCheck(this, MinutesService);\n\n    this.intl = intl;\n    this.insertUndividedMax = false;\n  }\n\n  _createClass(MinutesService, [{\n    key: \"apply\",\n    value: function apply(value, candidate) {\n      return setMinutes(value, candidate.getMinutes());\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(settings) {\n      var _this74 = this;\n\n      var _settings$insertUndiv2 = settings.insertUndividedMax,\n          insertUndividedMax = _settings$insertUndiv2 === void 0 ? this.insertUndividedMax : _settings$insertUndiv2,\n          _settings$min2 = settings.min,\n          min = _settings$min2 === void 0 ? this.min : _settings$min2,\n          _settings$max2 = settings.max,\n          max = _settings$max2 === void 0 ? this.max : _settings$max2,\n          part = settings.part,\n          _settings$step2 = settings.step,\n          step = _settings$step2 === void 0 ? this.step : _settings$step2;\n      this.insertUndividedMax = insertUndividedMax;\n\n      this.toListItem = function (minute) {\n        var date = setMinutes(MIDNIGHT_DATE, minute);\n        return {\n          text: _this74.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n  }, {\n    key: \"data\",\n    value: function data(selectedValue) {\n      var _this75 = this;\n\n      var _this$range5 = this.range(selectedValue),\n          _this$range6 = _slicedToArray(_this$range5, 1),\n          min = _this$range6[0];\n\n      var getMinute = stepper$1(min, this.step);\n\n      var convertToItem = function convertToItem(idx) {\n        return _this75.toListItem(getMinute(idx));\n      };\n\n      var data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n  }, {\n    key: \"isRangeChanged\",\n    value: function isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n  }, {\n    key: \"limitRange\",\n    value: function limitRange(min, max, value) {\n      return [limitDown$1(min, value), limitUp$1(max, value)];\n    }\n  }, {\n    key: \"total\",\n    value: function total(value) {\n      var last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      var missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last$$1;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n  }, {\n    key: \"valueInList\",\n    value: function valueInList(value) {\n      if (!value) {\n        return true;\n      }\n\n      var matchMax = this.insertUndividedMax && this.lastMinute(value) === value.getMinutes();\n      return matchMax || !this.isMissing(value);\n    }\n  }, {\n    key: \"addLast\",\n    value: function addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastMinute(value)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"addMissing\",\n    value: function addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n\n      var missingItem = this.toListItem(value.getMinutes());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n  }, {\n    key: \"countFromMin\",\n    value: function countFromMin(value) {\n      var _this$range7 = this.range(value),\n          _this$range8 = _slicedToArray(_this$range7, 2),\n          min = _this$range8[0],\n          max = _this$range8[1];\n\n      return Math.floor(distanceFromMin$1(max, min) / this.step) + 1;\n      /* include min */\n    }\n  }, {\n    key: \"isMissing\",\n    value: function isMissing(value) {\n      if (!value) {\n        return false;\n      }\n\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n  }, {\n    key: \"isLastMissing\",\n    value: function isLastMissing(value) {\n      return this.isMissing(setMinutes(this.max, this.lastMinute(value)));\n    }\n  }, {\n    key: \"divideByStep\",\n    value: function divideByStep(value) {\n      return distanceFromMin$1(value.getMinutes(), this.min.getMinutes()) / this.step;\n    }\n  }, {\n    key: \"lastMinute\",\n    value: function lastMinute(value) {\n      return this.range(value)[1];\n    }\n  }, {\n    key: \"range\",\n    value: function range(value) {\n      var _this$limitRange3 = this.limitRange(this.min, this.max, value),\n          _this$limitRange4 = _slicedToArray(_this$limitRange3, 2),\n          min = _this$limitRange4[0],\n          max = _this$limitRange4[1];\n\n      return [min.getMinutes(), max.getMinutes()];\n    }\n  }]);\n\n  return MinutesService;\n}();\n\nMinutesService.ɵfac = function MinutesService_Factory(t) {\n  return new (t || MinutesService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nMinutesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: MinutesService,\n  factory: MinutesService.ɵfac\n});\n/** @nocollapse */\n\nMinutesService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MinutesService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n\nvar SECONDS_IN_HOUR = 60;\n\nvar clampToRange$2 = function clampToRange$2(rangeValue) {\n  return function (value) {\n    return value % rangeValue;\n  };\n};\n\nvar clamp$2 = clampToRange$2(SECONDS_IN_HOUR);\n\nvar stepper$2 = function stepper$2(start, step) {\n  return function (idx) {\n    return clamp$2(start + idx * step);\n  };\n};\n\nvar distanceFromMin$2 = function distanceFromMin$2(value, min) {\n  return clamp$2(SECONDS_IN_HOUR + value - min);\n};\n\nvar limit$2 = function limit$2(borderValue) {\n  return function (barrier, value) {\n    var useBarrier = !value || barrier.getHours() === value.getHours() && barrier.getMinutes() === value.getMinutes();\n    return useBarrier ? barrier : setSeconds(barrier, borderValue);\n  };\n};\n\nvar limitDown$2 = limit$2(0);\nvar limitUp$2 = limit$2(SECONDS_IN_HOUR - 1);\n/**\n * @hidden\n */\n\nvar SecondsService = /*#__PURE__*/function () {\n  function SecondsService(intl) {\n    _classCallCheck(this, SecondsService);\n\n    this.intl = intl;\n    this.insertUndividedMax = false;\n  }\n\n  _createClass(SecondsService, [{\n    key: \"apply\",\n    value: function apply(value, candidate) {\n      return setSeconds(value, candidate.getSeconds());\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(settings) {\n      var _this76 = this;\n\n      var _settings$insertUndiv3 = settings.insertUndividedMax,\n          insertUndividedMax = _settings$insertUndiv3 === void 0 ? this.insertUndividedMax : _settings$insertUndiv3,\n          _settings$min3 = settings.min,\n          min = _settings$min3 === void 0 ? this.min : _settings$min3,\n          _settings$max3 = settings.max,\n          max = _settings$max3 === void 0 ? this.max : _settings$max3,\n          part = settings.part,\n          _settings$step3 = settings.step,\n          step = _settings$step3 === void 0 ? this.step : _settings$step3;\n      this.insertUndividedMax = insertUndividedMax;\n\n      this.toListItem = function (minute) {\n        var date = setSeconds(MIDNIGHT_DATE, minute);\n        return {\n          text: _this76.intl.formatDate(date, part.pattern),\n          value: date\n        };\n      };\n\n      this.min = min;\n      this.max = max;\n      this.step = step;\n    }\n  }, {\n    key: \"data\",\n    value: function data(selectedValue) {\n      var _this77 = this;\n\n      var _this$range9 = this.range(selectedValue),\n          _this$range10 = _slicedToArray(_this$range9, 1),\n          min = _this$range10[0];\n\n      var getSecond = stepper$2(min, this.step);\n\n      var convertToItem = function convertToItem(idx) {\n        return _this77.toListItem(getSecond(idx));\n      };\n\n      var data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n      this.addLast(data);\n      this.addMissing(data, selectedValue);\n      return data;\n    }\n  }, {\n    key: \"isRangeChanged\",\n    value: function isRangeChanged(min, max) {\n      return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n  }, {\n    key: \"limitRange\",\n    value: function limitRange(min, max, value) {\n      return [limitDown$2(min, value), limitUp$2(max, value)];\n    }\n  }, {\n    key: \"total\",\n    value: function total(value) {\n      var last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n      var missing = this.isMissing(value) ? 1 : 0;\n      return this.countFromMin(value) + missing + last$$1;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex(value) {\n      return Math.ceil(this.divideByStep(value));\n    }\n  }, {\n    key: \"valueInList\",\n    value: function valueInList(value) {\n      if (!value) {\n        return true;\n      }\n\n      var matchMax = this.insertUndividedMax && this.lastSecond(value) === value.getSeconds();\n      return matchMax || !this.isMissing(value);\n    }\n  }, {\n    key: \"divideByStep\",\n    value: function divideByStep(value) {\n      return distanceFromMin$2(value.getSeconds(), this.min.getSeconds()) / this.step;\n    }\n  }, {\n    key: \"addLast\",\n    value: function addLast(data, value) {\n      if (this.insertUndividedMax && this.isLastMissing(value)) {\n        data.push(this.toListItem(this.lastSecond(value)));\n      }\n\n      return data;\n    }\n  }, {\n    key: \"addMissing\",\n    value: function addMissing(data, value) {\n      if (this.valueInList(value)) {\n        return data;\n      }\n\n      var missingItem = this.toListItem(value.getSeconds());\n      data.splice(this.selectedIndex(value), 0, missingItem);\n      return data;\n    }\n  }, {\n    key: \"countFromMin\",\n    value: function countFromMin(value) {\n      var _this$range11 = this.range(value),\n          _this$range12 = _slicedToArray(_this$range11, 2),\n          min = _this$range12[0],\n          max = _this$range12[1];\n\n      return Math.floor(distanceFromMin$2(max, min) / this.step) + 1;\n      /* include min */\n    }\n  }, {\n    key: \"isMissing\",\n    value: function isMissing(value) {\n      if (!value) {\n        return false;\n      }\n\n      return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n  }, {\n    key: \"isLastMissing\",\n    value: function isLastMissing(value) {\n      return this.isMissing(setSeconds(this.max, this.lastSecond(value)));\n    }\n  }, {\n    key: \"lastSecond\",\n    value: function lastSecond(value) {\n      return this.range(value)[1];\n    }\n  }, {\n    key: \"range\",\n    value: function range(value) {\n      var _this$limitRange5 = this.limitRange(this.min, this.max, value),\n          _this$limitRange6 = _slicedToArray(_this$limitRange5, 2),\n          min = _this$limitRange6[0],\n          max = _this$limitRange6[1];\n\n      return [min.getSeconds(), max.getSeconds()];\n    }\n  }]);\n\n  return SecondsService;\n}();\n\nSecondsService.ɵfac = function SecondsService_Factory(t) {\n  return new (t || SecondsService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nSecondsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SecondsService,\n  factory: SecondsService.ɵfac\n});\n/** @nocollapse */\n\nSecondsService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SecondsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n\nvar setHours$1 = function setHours$1(date, hours) {\n  var clone = cloneDate(date);\n  clone.setHours(hours);\n  return clone;\n};\n\nvar isAM = function isAM(value) {\n  return value !== null && value < 12;\n};\n\nvar isPM = function isPM(value) {\n  return value !== null && (!value || value > 11);\n};\n\nvar inRange = function inRange(value, min, max) {\n  return !min && !max || value >= min && value <= max;\n};\n\nvar inReverseRange = function inReverseRange(value, min, max) {\n  return !min && !max || value >= min || value <= max;\n};\n/**\n * @hidden\n */\n\n\nvar DayPeriodService = /*#__PURE__*/function () {\n  function DayPeriodService(intl) {\n    _classCallCheck(this, DayPeriodService);\n\n    this.intl = intl;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DayPeriodService, [{\n    key: \"apply\",\n    value: function apply(value, candidate) {\n      var hour = value.getHours();\n      var hourAM = isAM(hour);\n      var candidateAM = isAM(candidate.getHours());\n\n      if (hourAM && candidateAM || !hourAM && !candidateAM) {\n        return value;\n      }\n\n      var _this$normalizedRange = this.normalizedRange(),\n          _this$normalizedRange2 = _slicedToArray(_this$normalizedRange, 2),\n          min = _this$normalizedRange2[0],\n          _this$normalizedRange3 = _this$normalizedRange2[1],\n          max = _this$normalizedRange3 === void 0 ? 24 : _this$normalizedRange3;\n\n      var result = hour + (candidateAM ? -12 : 12);\n      return setHours$1(value, Math.min(Math.max(min, result), max || 24));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"configure\",\n    value: function configure(settings) {\n      var _settings$min4 = settings.min,\n          min = _settings$min4 === void 0 ? this.min : _settings$min4,\n          _settings$max4 = settings.max,\n          max = _settings$max4 === void 0 ? this.max : _settings$max4,\n          _settings$part = settings.part,\n          part = _settings$part === void 0 ? this.part : _settings$part;\n      this.min = min;\n      this.max = max;\n      this.part = part;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"data\",\n    value: function data(_) {\n      var names = this.part.names;\n\n      if (!names) {\n        return [];\n      }\n\n      var data = [];\n\n      var _this$normalizedRange4 = this.normalizedRange(),\n          _this$normalizedRange5 = _slicedToArray(_this$normalizedRange4, 2),\n          min = _this$normalizedRange5[0],\n          max = _this$normalizedRange5[1];\n\n      var dayPeriod = this.intl.dateFormatNames(names);\n\n      if (isAM(min)) {\n        data.push({\n          text: dayPeriod.am,\n          value: setHours$1(this.min, min)\n        });\n      }\n\n      if (isPM(max)) {\n        data.push({\n          text: dayPeriod.pm,\n          value: setHours$1(this.min, Math.max(12, max))\n        });\n      }\n\n      return this.min.getHours() !== min ? data.reverse() : data;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isRangeChanged\",\n    value: function isRangeChanged(_, __) {\n      return false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"limitRange\",\n    value: function limitRange(min, max, _) {\n      return [min, max];\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"total\",\n    value: function total() {\n      var _this$normalizedRange6 = this.normalizedRange(),\n          _this$normalizedRange7 = _slicedToArray(_this$normalizedRange6, 2),\n          min = _this$normalizedRange7[0],\n          max = _this$normalizedRange7[1];\n\n      if (!min && !max) {\n        return 2;\n      }\n\n      if (min > 11 || max < 12) {\n        return 1;\n      }\n\n      return 2;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex(value) {\n      if (!this.valueInList(value)) {\n        return -1;\n      }\n\n      var index = Math.floor(value.getHours() / 12);\n      return this.min.getHours() === this.normalizedRange()[0] ? index : index === 0 ? 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"valueInList\",\n    value: function valueInList(value) {\n      var reverse = this.min.getHours() !== this.normalizedRange()[0];\n      var isInRange = reverse ? inReverseRange : inRange;\n      return isInRange(value.getHours(), this.min.getHours(), this.max.getHours());\n    }\n  }, {\n    key: \"normalizedRange\",\n    value: function normalizedRange() {\n      var minHour = this.min.getHours();\n      var maxHour = this.max.getHours();\n      return [Math.min(minHour, maxHour), Math.max(minHour, maxHour)];\n    }\n  }]);\n\n  return DayPeriodService;\n}();\n\nDayPeriodService.ɵfac = function DayPeriodService_Factory(t) {\n  return new (t || DayPeriodService)(ɵngcc0.ɵɵinject(IntlService));\n};\n\nDayPeriodService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DayPeriodService,\n  factory: DayPeriodService.ɵfac\n});\n/** @nocollapse */\n\nDayPeriodService.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DayPeriodService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n/* tslint:disable:component-selector-name  component-selector-type */\n\n\nvar SNAP_THRESHOLD = 0.05; //% of the item height\n\nvar SCROLL_THRESHOLD = 2; //< 2px threshold\n\nvar nil = function nil() {\n  return null;\n};\n\nvar getters = {\n  35: function _(data, _2) {\n    return data[data.length - 1];\n  },\n  36: function _(data, _3) {\n    return data[0];\n  },\n  38: function _(data, index) {\n    return data[index - 1];\n  },\n  40: function _(data, index) {\n    return data[index + 1];\n  }\n};\nvar services$1 = (_services$ = {}, _defineProperty(_services$, TIME_PART.dayperiod, DayPeriodService), _defineProperty(_services$, TIME_PART.hour, HoursService), _defineProperty(_services$, TIME_PART.minute, MinutesService), _defineProperty(_services$, TIME_PART.second, SecondsService), _services$);\n/**\n * @hidden\n */\n\nvar TimeListComponent = /*#__PURE__*/function () {\n  function TimeListComponent(element, injector, dom, renderer, zone) {\n    _classCallCheck(this, TimeListComponent);\n\n    this.element = element;\n    this.injector = injector;\n    this.dom = dom;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.min = cloneDate(MIDNIGHT_DATE);\n    this.max = cloneDate(MAX_TIME);\n    this.step = 1;\n    this.disabled = false;\n    this.valueChange = new EventEmitter();\n    this.componentClass = true;\n    this.animateToIndex = true;\n    this.isActive = false;\n    this.skip = 0;\n    this.total = 60;\n    this.data = [];\n    this.indexToScroll = -1;\n    this.domEvents = [];\n  }\n\n  _createClass(TimeListComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.part) {\n        this.service = this.injector.get(services$1[this.part.type]);\n        this.service.configure(this.serviceSettings());\n      }\n\n      var value = this.value;\n      var valueChanges = changes.value || {};\n\n      var _this$service$limitRa = this.service.limitRange(this.min, this.max, value),\n          _this$service$limitRa2 = _slicedToArray(_this$service$limitRa, 2),\n          min = _this$service$limitRa2[0],\n          max = _this$service$limitRa2[1];\n\n      if (this.service.isRangeChanged(min, max) || changes.min || changes.max || changes.step) {\n        this.data = [];\n        this.service.configure(this.serviceSettings({\n          min: min,\n          max: max\n        }));\n      } // Skip the rendering of the list whenever possible\n\n\n      if (!this.data.length || this.hasMissingValue(valueChanges)) {\n        this.animateToIndex = false;\n        this.data = this.service.data(value);\n      }\n\n      this.animateToIndex = this.animateToIndex && this.textHasChanged(valueChanges);\n      this.total = this.service.total(value);\n      this.indexToScroll = this.selectedIndex(value);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this78 = this;\n\n      this.animateToIndex = true;\n      this.dom.ensureHeights();\n      this.itemHeight = this.dom.itemHeight;\n      this.listHeight = this.dom.timeListHeight;\n      this.topOffset = (this.listHeight - this.itemHeight) / 2;\n      this.bottomOffset = this.listHeight - this.itemHeight;\n      this.topThreshold = this.itemHeight * SNAP_THRESHOLD;\n      this.bottomThreshold = this.itemHeight * (1 - SNAP_THRESHOLD);\n      var translate = \"translateY(\".concat(this.topOffset, \"px)\");\n      this.style = {\n        transform: translate,\n        '-ms-transform': translate\n      };\n\n      if (this.element) {\n        this.zone.runOutsideAngular(function () {\n          _this78.bindEvents();\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.scrollSubscription.unsubscribe();\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this79 = this;\n\n      this.scrollOnce(function (index) {\n        return _this79.virtualization.scrollToIndex(index);\n      });\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      var _this80 = this;\n\n      this.scrollOnce(function (index) {\n        var action = _this80.animateToIndex ? 'animateToIndex' : 'scrollToIndex';\n\n        _this80.virtualization[action](index);\n\n        _this80.animateToIndex = true;\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(dataItem) {\n      var candidate = this.service.apply(this.value, dataItem.value);\n\n      if (this.value.getTime() === candidate.getTime()) {\n        return;\n      }\n\n      this.indexToScroll = this.data.indexOf(dataItem);\n      this.value = candidate;\n      this.valueChange.emit(candidate);\n    }\n  }, {\n    key: \"handleItemClick\",\n    value: function handleItemClick(args) {\n      var item = closestInScope(args.target, function (node) {\n        return node.hasAttribute('data-timelist-item-index');\n      }, this.element.nativeElement);\n\n      if (item) {\n        var index = item.getAttribute('data-timelist-item-index');\n        this.handleChange(this.data[index]);\n      }\n    }\n    /**\n     * Focuses the host element of the TimeList.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timelist.focus()\">Focus TimeList</button>\n     *  <kendo-timelist #timelist></kendo-timelist>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the TimeList component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.element) {\n        return;\n      }\n\n      this.element.nativeElement.blur();\n    }\n  }, {\n    key: \"itemOffset\",\n    value: function itemOffset(scrollTop) {\n      var valueIndex = this.selectedIndex(this.value);\n      var activeIndex = this.virtualization.activeIndex();\n      var offset = this.virtualization.itemOffset(activeIndex);\n      var distance = Math.abs(Math.ceil(scrollTop) - offset);\n\n      if (valueIndex === activeIndex && distance < SCROLL_THRESHOLD) {\n        return offset;\n      }\n\n      var scrollUp = valueIndex > activeIndex;\n      var moveToNext = scrollUp && distance >= this.bottomThreshold || !scrollUp && distance > this.topThreshold;\n      return moveToNext ? this.virtualization.itemOffset(activeIndex + 1) : offset;\n    }\n  }, {\n    key: \"hasMissingValue\",\n    value: function hasMissingValue(_ref20) {\n      var previousValue = _ref20.previousValue,\n          currentValue = _ref20.currentValue;\n      var isPreviousMissing = previousValue && !this.service.valueInList(previousValue);\n      var isCurrentMissing = currentValue && !this.service.valueInList(currentValue);\n      return isPreviousMissing || isCurrentMissing;\n    }\n  }, {\n    key: \"scrollOnce\",\n    value: function scrollOnce(action) {\n      if (this.indexToScroll !== -1) {\n        action(this.indexToScroll);\n        this.indexToScroll = -1;\n      }\n    }\n  }, {\n    key: \"serviceSettings\",\n    value: function serviceSettings(settings) {\n      var defaults = {\n        boundRange: false,\n        insertUndividedMax: false,\n        max: this.max,\n        min: this.min,\n        part: this.part,\n        step: this.step\n      };\n      var result = Object.assign({}, defaults, settings);\n      result.boundRange = result.part.type !== 'hour';\n      return result;\n    }\n  }, {\n    key: \"selectedIndex\",\n    value: function selectedIndex(value) {\n      if (!value) {\n        return -1;\n      }\n\n      return this.service.selectedIndex(value);\n    }\n  }, {\n    key: \"textHasChanged\",\n    value: function textHasChanged(_ref21) {\n      var previousValue = _ref21.previousValue,\n          currentValue = _ref21.currentValue;\n\n      if (!previousValue || !currentValue) {\n        return false;\n      }\n\n      var oldData = this.data[this.selectedIndex(previousValue)];\n      var newData = this.data[this.selectedIndex(currentValue)];\n      return oldData && newData && oldData.text !== newData.text;\n    }\n  }, {\n    key: \"handleKeyDown\",\n    value: function handleKeyDown(e) {\n      var getter = getters[e.keyCode] || nil;\n      var dataItem = getter(this.data, this.service.selectedIndex(this.value));\n\n      if (dataItem) {\n        this.handleChange(dataItem);\n        e.preventDefault();\n      }\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this81 = this;\n\n      this.scrollSubscription = this.virtualization.scroll$().pipe(debounceTime(100), map(function (e) {\n        return e.target.scrollTop;\n      }), map(function (top) {\n        return _this81.itemOffset(top);\n      }), map(function (itemOffset) {\n        return _this81.virtualization.itemIndex(itemOffset);\n      })).subscribe(function (index) {\n        _this81.virtualization.scrollToIndex(index);\n\n        _this81.handleChange(_this81.data[index]);\n      });\n      var element = this.element.nativeElement;\n      this.domEvents.push(this.renderer.listen(element, 'mouseover', function () {\n        return !_this81.isActive && _this81.focus();\n      }), this.renderer.listen(element, 'click', function () {\n        return _this81.focus();\n      }), this.renderer.listen(element, 'blur', function () {\n        return _this81.isActive = false;\n      }), this.renderer.listen(element, 'focus', function () {\n        return _this81.isActive = true;\n      }), this.renderer.listen(element, 'keydown', this.handleKeyDown.bind(this)));\n    }\n  }, {\n    key: \"tabIndex\",\n    get: function get() {\n      return this.disabled ? undefined : 0;\n    }\n  }]);\n\n  return TimeListComponent;\n}();\n\nTimeListComponent.ɵfac = function TimeListComponent_Factory(t) {\n  return new (t || TimeListComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(TimePickerDOMService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nTimeListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimeListComponent,\n  selectors: [[\"kendo-timelist\"]],\n  viewQuery: function TimeListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(VirtualizationComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.virtualization = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function TimeListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabIndex);\n      ɵngcc0.ɵɵclassProp(\"k-time-list\", ctx.componentClass);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    step: \"step\",\n    disabled: \"disabled\",\n    value: \"value\",\n    part: \"part\"\n  },\n  outputs: {\n    valueChange: \"valueChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 13,\n  consts: [[\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-time-container\", 3, \"skip\", \"take\", \"total\", \"itemHeight\", \"maxScrollDifference\", \"topOffset\", \"bottomOffset\"], [1, \"k-reset\", 3, \"ngStyle\", \"kendoEventsOutsideAngular\", \"scope\"], [\"class\", \"k-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-item\"]],\n  template: function TimeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-virtualization\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"ul\", 1);\n      ɵngcc0.ɵɵtemplate(2, TimeListComponent_li_2_Template, 3, 2, \"li\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"skip\", ctx.skip)(\"take\", ctx.total)(\"total\", ctx.total)(\"itemHeight\", ctx.itemHeight)(\"maxScrollDifference\", ctx.listHeight)(\"topOffset\", ctx.topOffset)(\"bottomOffset\", ctx.bottomOffset);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngStyle\", ctx.style)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction1(11, _c3, ctx.handleItemClick))(\"scope\", ctx);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data);\n    }\n  },\n  directives: [VirtualizationComponent, ɵngcc1.NgStyle, ɵngcc2.EventsOutsideAngularDirective, ɵngcc1.NgForOf],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTimeListComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Injector\n  }, {\n    type: TimePickerDOMService\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nTimeListComponent.propDecorators = {\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  part: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  virtualization: [{\n    type: ViewChild,\n    args: [VirtualizationComponent, {\n      static: true\n    }]\n  }],\n  tabIndex: [{\n    type: HostBinding,\n    args: [\"attr.tabindex\"]\n  }],\n  componentClass: [{\n    type: HostBinding,\n    args: [\"class.k-time-list\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimeListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-timelist',\n      template: \"\\n    <kendo-virtualization\\n        [skip]=\\\"skip\\\"\\n        [take]=\\\"total\\\"\\n        [total]=\\\"total\\\"\\n        [itemHeight]=\\\"itemHeight\\\"\\n        [maxScrollDifference]=\\\"listHeight\\\"\\n        [topOffset]=\\\"topOffset\\\"\\n        [bottomOffset]=\\\"bottomOffset\\\"\\n        class=\\\"k-time-container\\\"\\n        role=\\\"presentation\\\"\\n        tabindex=\\\"-1\\\"\\n    >\\n        <ul [ngStyle]=\\\"style\\\" class=\\\"k-reset\\\"\\n            [kendoEventsOutsideAngular]=\\\"{\\n                click: handleItemClick\\n            }\\\"\\n            [scope]=\\\"this\\\"\\n        >\\n            <li *ngFor=\\\"let item of data; let index = index;\\\" class=\\\"k-item\\\"\\n                [attr.data-timelist-item-index]=\\\"index\\\">\\n                <span>{{item.text}}</span>\\n            </li>\\n        </ul>\\n    </kendo-virtualization>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: Injector\n    }, {\n      type: TimePickerDOMService\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    componentClass: [{\n      type: HostBinding,\n      args: [\"class.k-time-list\"]\n    }],\n    tabIndex: [{\n      type: HostBinding,\n      args: [\"attr.tabindex\"]\n    }],\n    value: [{\n      type: Input\n    }],\n    part: [{\n      type: Input\n    }],\n    virtualization: [{\n      type: ViewChild,\n      args: [VirtualizationComponent, {\n        static: true\n      }]\n    }]\n  });\n})();\n\nvar isEqualTillMinute = function isEqualTillMinute(value, min) {\n  return value.getHours() === min.getHours() && value.getMinutes() === min.getMinutes();\n};\n\nvar isEqualTillSecond = function isEqualTillSecond(value, min) {\n  return isEqualTillMinute(value, min) && value.getSeconds() === min.getSeconds();\n};\n\nvar isEqualTillMillisecond = function isEqualTillMillisecond(value, min) {\n  return isEqualTillSecond(value, min) && value.getMilliseconds() === min.getMilliseconds();\n};\n\nvar ɵ3$6 = function ɵ3$6(value) {\n  return value.getHours();\n},\n    ɵ4$2 = function ɵ4$2(_, min) {\n  return min.getHours();\n},\n    ɵ5$1 = function ɵ5$1(value) {\n  return value.getMinutes();\n},\n    ɵ6$1 = function ɵ6$1(value, min) {\n  return isEqualTillMinute(value, min) ? min.getMinutes() : 0;\n},\n    ɵ7$1 = function ɵ7$1(value) {\n  return value.getSeconds();\n},\n    ɵ8$1 = function ɵ8$1(value, min) {\n  return isEqualTillSecond(value, min) ? min.getSeconds() : 0;\n},\n    ɵ9$1 = function ɵ9$1(value) {\n  return value.getMilliseconds();\n},\n    ɵ10$1 = function ɵ10$1(value, min) {\n  return isEqualTillMillisecond(value, min) ? min.getMilliseconds() : 0;\n};\n\nvar defaultGetters = [{\n  type: TIME_PART.hour,\n  getter: ɵ3$6,\n  minGetter: ɵ4$2\n}, {\n  type: TIME_PART.minute,\n  getter: ɵ5$1,\n  minGetter: ɵ6$1\n}, {\n  type: TIME_PART.second,\n  getter: ɵ7$1,\n  minGetter: ɵ8$1\n}, {\n  type: TIME_PART.millisecond,\n  getter: ɵ9$1,\n  minGetter: ɵ10$1\n}];\n\nvar left = function left(getter) {\n  return function (origin, _) {\n    return getter(origin);\n  };\n};\n\nvar right = function right(getter) {\n  return function (_, candidate) {\n    return getter(candidate);\n  };\n};\n\nvar convertToObject = function convertToObject(parts) {\n  return parts.reduce(function (obj, p) {\n    obj[p.type] = p.type;\n    return obj;\n  }, {});\n};\n\nvar getterByPart = function getterByPart(parts) {\n  return function (g) {\n    return parts[g.type] ? right(g.getter) : left(g.getter);\n  };\n};\n\nvar gettersFactory = function gettersFactory(getters) {\n  return function (parts) {\n    return getters.map(getterByPart(convertToObject(parts)));\n  };\n};\n\nvar snapValue = function snapValue(getter, minGetter, step) {\n  return function (date, min) {\n    var value = getter(date);\n    var minValue = minGetter(date, min);\n    var rest = value - minValue;\n\n    if (rest < 0) {\n      return minValue;\n    }\n\n    var mod = rest % step;\n    return value - mod + (mod > step / 2 ? step : 0);\n  };\n};\n\nvar snappersFactory = function snappersFactory(getters) {\n  return function (steps) {\n    return getters.map(function (g) {\n      var step = steps[g.type];\n      return step ? snapValue(g.getter, g.minGetter, step) : g.getter;\n    });\n  };\n};\n/**\n * @hidden\n */\n\n\nvar generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\n\nvar generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\n\nvar valueMerger = function valueMerger(getters) {\n  return function (origin, candidate) {\n    origin.setHours.apply(origin, _toConsumableArray(getters.map(function (g) {\n      return g(origin, candidate);\n    })));\n    return origin;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar snapTime = function snapTime(snappers) {\n  return function (candidate, min) {\n    var date = cloneDate(candidate);\n    date.setHours.apply(date, _toConsumableArray(snappers.map(function (s) {\n      return s(date, min);\n    })));\n    return date;\n  };\n};\n\nvar listReducer = function listReducer(state, list, idx, all) {\n  if (state.length || !list.isActive) {\n    return state;\n  }\n\n  return [{\n    next: all[idx + 1] || list,\n    prev: all[idx - 1] || list\n  }];\n};\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"Left\"] = 0] = \"Left\";\n  Direction[Direction[\"Right\"] = 1] = \"Right\";\n})(Direction || (Direction = {}));\n/**\n * @hidden\n *\n * Represents the Kendo UI TimeSelector component for Angular.\n */\n\n\nvar TimeSelectorComponent = /*#__PURE__*/function () {\n  function TimeSelectorComponent(localization, cdr, element, intl, dom, zone, renderer, pickerService) {\n    _classCallCheck(this, TimeSelectorComponent);\n\n    this.localization = localization;\n    this.cdr = cdr;\n    this.element = element;\n    this.intl = intl;\n    this.dom = dom;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.pickerService = pickerService;\n    /**\n     * @hidden\n     */\n\n    this.componentClass = true;\n    /**\n     * Specifies the time format used to display the time list columns.\n     */\n\n    this.format = 't';\n    /**\n     * Specifies the smallest valid time value.\n     */\n\n    this.min = cloneDate(MIN_TIME);\n    /**\n     * Specifies the biggest valid time value.\n     */\n\n    this.max = cloneDate(MAX_TIME);\n    /**\n     * Determines whether to display the **Cancel** button in the popup.\n     */\n\n    this.cancelButton = true;\n    /**\n     * Determines whether to display the **Set** button in the popup.\n     */\n\n    this.setButton = true;\n    /**\n     * Determines whether to display the **Now** button in the popup.\n     *\n     * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n     */\n\n    this.nowButton = true;\n    /**\n     * Sets or gets the `disabled` property of the TimeSelector and determines whether the component is active.\n     */\n\n    this.disabled = false;\n    /**\n     * Specifies the value of the TimeSelector component.\n     */\n\n    this.value = null;\n    /**\n     * Fires each time the user selects a new value.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user cancels the selected value.\n     */\n\n    this.valueReject = new EventEmitter();\n    this.isActive = false;\n    this.showNowButton = true;\n    this._activeListIndex = -1;\n    this._steps = {};\n    this.domEvents = [];\n\n    if (this.pickerService) {\n      this.pickerService.timeSelector = this;\n    }\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(TimeSelectorComponent, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngOnInit() {\n      var _this82 = this;\n\n      this.subscriptions = this.intl.changes.subscribe(this.intlChange.bind(this));\n\n      if (this.localization) {\n        this.subscriptions.add(this.localization.changes.subscribe(function () {\n          return _this82.cdr.markForCheck();\n        }));\n      }\n\n      this.dom.calculateHeights(this.element.nativeElement);\n      this.init();\n      this.bindEvents();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_) {\n      this.init();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n\n      if (this.pickerService) {\n        this.pickerService.timeSelector = null;\n      }\n\n      this.domEvents.forEach(function (unbindCallback) {\n        return unbindCallback();\n      });\n    }\n    /**\n     * Focuses the TimeSelector component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timeselector.focus()\">Focus time picker</button>\n     *  <kendo-timeselector #timeselector></kendo-timeselector>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var list = this.timeLists.first;\n\n      if (!list) {\n        return;\n      }\n\n      list.focus();\n    }\n    /**\n     * Blurs the TimeSelector component.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var list = this.timeLists.first;\n\n      if (!list) {\n        return;\n      }\n\n      list.blur();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleAccept\",\n    value: function handleAccept() {\n      this.handleChange(this.mergeValue(cloneDate(this.value || getDate(getNow())), this.current));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNow\",\n    value: function handleNow() {\n      this.current = getNow();\n      this.handleChange(this.current);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleReject\",\n    value: function handleReject() {\n      this.current = this.value;\n      this.valueReject.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(args) {\n      if (this.isActive) {\n        return;\n      }\n\n      this.isActive = true;\n      this.emitFocus(args);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleListFocus\",\n    value: function handleListFocus(args) {\n      var index = parseInt(args.target.getAttribute('data-timelist-index'), 10);\n      this.activeListIndex = index;\n      this.handleFocus(args);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(args) {\n      var currentTarget = currentFocusTarget(args);\n\n      if (currentTarget && this.containsElement(currentTarget)) {\n        return;\n      }\n\n      this.activeListIndex = -1;\n      this.isActive = false;\n      this.emitBlur(args);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"containsElement\",\n    value: function containsElement(element) {\n      var _this83 = this;\n\n      return Boolean(closest(element, function (node) {\n        return node === _this83.element.nativeElement;\n      }));\n    }\n  }, {\n    key: \"partStep\",\n    value: function partStep(part) {\n      return this.steps[part.type] || 1;\n    }\n  }, {\n    key: \"init\",\n    value: function init(changes) {\n      if (!changes || hasChange(changes, 'format')) {\n        this.dateFormatParts = this.intl.splitDateFormat(this.format);\n        this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n      }\n\n      if (!changes || hasChange(changes, 'steps')) {\n        this.snapTime = snapTime(generateSnappers(this.steps));\n      }\n\n      if (!changes || hasChange(changes, 'value')) {\n        this.current = this.value;\n      }\n\n      this.showNowButton = !this.hasSteps() && this.nowButton && isInTimeRange(getNow(), this.min, this.max);\n    }\n  }, {\n    key: \"focusList\",\n    value: function focusList(dir) {\n      if (!this.timeLists.length) {\n        return;\n      }\n\n      this.timeLists.reduce(listReducer, []).map(function (state) {\n        return dir === Direction.Right ? state.next : state.prev;\n      }).map(function (list) {\n        return list && list.focus();\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      this.value = value;\n      this.valueChange.emit(cloneDate(value));\n    }\n  }, {\n    key: \"hasActiveButton\",\n    value: function hasActiveButton() {\n      var _this84 = this;\n\n      if (!this.accept) {\n        return false;\n      }\n\n      return [this.accept, this.cancel, this.now].reduce(function (isActive, el) {\n        return isActive || _this84.dom.isActive(el);\n      }, false);\n    }\n  }, {\n    key: \"hasSteps\",\n    value: function hasSteps() {\n      var _this85 = this;\n\n      var keys = Object.keys(this.steps);\n      return keys.length !== keys.reduce(function (acc, k) {\n        return acc + _this85.steps[k];\n      }, 0);\n    }\n  }, {\n    key: \"intlChange\",\n    value: function intlChange() {\n      this.dateFormatParts = this.intl.splitDateFormat(this.format);\n      this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this86 = this;\n\n      if (this.element) {\n        this.zone.runOutsideAngular(function () {\n          _this86.domEvents.push(_this86.renderer.listen(_this86.element.nativeElement, 'keydown', _this86.handleKeydown.bind(_this86)));\n        });\n      }\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(args) {\n      var keyCode = args.keyCode,\n          altKey = args.altKey; // reserve the alt + arrow key commands for the picker\n\n      var arrowKeyPressed = [Keys.ArrowLeft, Keys.ArrowRight].indexOf(keyCode) !== -1;\n\n      if (isPresent(this.pickerService) && arrowKeyPressed && altKey) {\n        return;\n      }\n\n      if (keyCode === Keys.Enter && !this.hasActiveButton()) {\n        this.handleAccept();\n      } else if (keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight) {\n        this.focusList(keyCode === Keys.ArrowLeft ? Direction.Left : Direction.Right);\n      }\n    }\n  }, {\n    key: \"emitBlur\",\n    value: function emitBlur(args) {\n      if (this.pickerService) {\n        this.pickerService.onBlur.emit(args);\n      }\n    }\n  }, {\n    key: \"emitFocus\",\n    value: function emitFocus(args) {\n      if (this.pickerService) {\n        this.pickerService.onFocus.emit(args);\n      }\n    }\n  }, {\n    key: \"listIndex\",\n    value: function listIndex(partIndex) {\n      var listIdx = 0;\n      var partIdx = 0;\n\n      while (partIdx < partIndex) {\n        if (this.dateFormatParts[partIdx].type !== 'literal') {\n          listIdx++;\n        }\n\n        partIdx++;\n      }\n\n      return listIdx;\n    }\n  }, {\n    key: \"disabledClass\",\n    get: function get() {\n      return this.disabled;\n    }\n    /**\n     * Configures the incremental steps of the TimeSelector.\n     *\n     * The available options are:\n     * - `hour: Number`&mdash;Controls the incremental step of the hour value.\n     * - `minute: Number`&mdash;Controls the incremental step of the minute value.\n     * - `second: Number`&mdash;Controls the incremental step of the second value.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timeselector format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timeselector>\n     * `\n     * })\n     * class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15 };\n     * }\n     * ```\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     */\n\n  }, {\n    key: \"steps\",\n    set: function set(steps) {\n      this._steps = steps || {};\n    },\n    get: function get() {\n      return this._steps;\n    }\n  }, {\n    key: \"current\",\n    set: function set(value) {\n      this._current = timeInRange(this.snapTime(cloneDate(value || MIDNIGHT_DATE), this.min), this.min, this.max);\n\n      if (!NgZone.isInAngularZone()) {\n        this.cdr.detectChanges();\n      }\n    },\n    get: function get() {\n      return this._current;\n    }\n  }, {\n    key: \"activeListIndex\",\n    get: function get() {\n      return this._activeListIndex;\n    },\n    set: function set(value) {\n      var _this87 = this;\n\n      this._activeListIndex = value;\n\n      if (!this.timeListWrappers || !this.timeListWrappers.length) {\n        return;\n      }\n\n      this.timeListWrappers.forEach(function (listWrapper) {\n        _this87.renderer.removeClass(listWrapper.nativeElement, 'k-state-focused');\n      });\n\n      if (value >= 0) {\n        var listIndex = this.listIndex(value);\n        var focusedWrapper = this.timeListWrappers.toArray()[listIndex];\n\n        if (focusedWrapper) {\n          this.renderer.addClass(focusedWrapper.nativeElement, 'k-state-focused');\n        }\n      }\n    }\n  }]);\n\n  return TimeSelectorComponent;\n}();\n\nTimeSelectorComponent.ɵfac = function TimeSelectorComponent_Factory(t) {\n  return new (t || TimeSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(IntlService), ɵngcc0.ɵɵdirectiveInject(TimePickerDOMService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(PickerService, 8));\n};\n\nTimeSelectorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimeSelectorComponent,\n  selectors: [[\"kendo-timeselector\"]],\n  viewQuery: function TimeSelectorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c76, true);\n      ɵngcc0.ɵɵviewQuery(_c77, true);\n      ɵngcc0.ɵɵviewQuery(_c78, true);\n      ɵngcc0.ɵɵviewQuery(TimeListComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c79, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.accept = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cancel = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.now = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.timeLists = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.timeListWrappers = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function TimeSelectorComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-timeselector\", ctx.componentClass)(\"k-state-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    format: \"format\",\n    min: \"min\",\n    max: \"max\",\n    cancelButton: \"cancelButton\",\n    setButton: \"setButton\",\n    nowButton: \"nowButton\",\n    disabled: \"disabled\",\n    value: \"value\",\n    steps: \"steps\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    valueReject: \"valueReject\"\n  },\n  exportAs: [\"kendo-timeselector\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.timeselector'\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 4,\n  consts: function consts() {\n    var i18n_80;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Accept button text in the timeselector component\n       * @meaning kendo.timeselector.accept\n       */\n      var MSG_EXTERNAL_5362895271044573681$$DIST_FESM2015_INDEX_JS_81 = goog.getMsg(\"Set\");\n      i18n_80 = MSG_EXTERNAL_5362895271044573681$$DIST_FESM2015_INDEX_JS_81;\n    } else {\n      i18n_80 = $localize(_templateObject28());\n    }\n\n    var i18n_82;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Accept button in the timeselector component\n       * @meaning kendo.timeselector.acceptLabel\n       */\n      var MSG_EXTERNAL_3417396278000787211$$DIST_FESM2015_INDEX_JS_83 = goog.getMsg(\"Set time\");\n      i18n_82 = MSG_EXTERNAL_3417396278000787211$$DIST_FESM2015_INDEX_JS_83;\n    } else {\n      i18n_82 = $localize(_templateObject29());\n    }\n\n    var i18n_84;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Cancel button text in the timeselector component\n       * @meaning kendo.timeselector.cancel\n       */\n      var MSG_EXTERNAL_1890188482755567622$$DIST_FESM2015_INDEX_JS_85 = goog.getMsg(\"Cancel\");\n      i18n_84 = MSG_EXTERNAL_1890188482755567622$$DIST_FESM2015_INDEX_JS_85;\n    } else {\n      i18n_84 = $localize(_templateObject30());\n    }\n\n    var i18n_86;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Cancel button in the timeselector component\n       * @meaning kendo.timeselector.cancelLabel\n       */\n      var MSG_EXTERNAL_5738120209397145846$$DIST_FESM2015_INDEX_JS_87 = goog.getMsg(\"Cancel changes\");\n      i18n_86 = MSG_EXTERNAL_5738120209397145846$$DIST_FESM2015_INDEX_JS_87;\n    } else {\n      i18n_86 = $localize(_templateObject31());\n    }\n\n    var i18n_88;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The Now button text in the timeselector component\n       * @meaning kendo.timeselector.now\n       */\n      var MSG_EXTERNAL_1926162752852226109$$DIST_FESM2015_INDEX_JS_89 = goog.getMsg(\"Now\");\n      i18n_88 = MSG_EXTERNAL_1926162752852226109$$DIST_FESM2015_INDEX_JS_89;\n    } else {\n      i18n_88 = $localize(_templateObject32());\n    }\n\n    var i18n_90;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the Now button in the timeselector component\n       * @meaning kendo.timeselector.nowLabel\n       */\n      var MSG_EXTERNAL_7789175884909488647$$DIST_FESM2015_INDEX_JS_91 = goog.getMsg(\"Select now\");\n      i18n_90 = MSG_EXTERNAL_7789175884909488647$$DIST_FESM2015_INDEX_JS_91;\n    } else {\n      i18n_90 = $localize(_templateObject33());\n    }\n\n    return [[\"kendoTimeSelectorLocalizedMessages\", \"\", 6, \"accept\", \"acceptLabel\", \"cancel\", \"cancelLabel\", \"now\", \"nowLabel\"], [\"accept\", i18n_80, \"acceptLabel\", i18n_82, \"cancel\", i18n_84, \"cancelLabel\", i18n_86, \"now\", i18n_88, \"nowLabel\", i18n_90], [1, \"k-time-header\"], [1, \"k-title\"], [\"class\", \"k-button k-bare k-time-now\", \"type\", \"button\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [1, \"k-time-list-container\"], [1, \"k-time-highlight\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"k-time-footer k-action-buttons\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-button\", \"k-bare\", \"k-time-now\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"now\", \"\"], [\"class\", \"k-time-list-wrapper\", \"role\", \"presentation\", \"tabindex\", \"-1\", 4, \"ngIf\"], [\"class\", \"k-time-separator\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-time-list-wrapper\"], [\"listWrapper\", \"\"], [3, \"min\", \"max\", \"part\", \"step\", \"disabled\", \"value\", \"kendoEventsOutsideAngular\", \"scope\", \"valueChange\"], [1, \"k-time-separator\"], [1, \"k-time-footer\", \"k-action-buttons\"], [\"class\", \"k-button k-time-cancel\", \"type\", \"button\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"k-time-accept k-button k-primary\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"k-button\", \"k-time-cancel\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"cancel\", \"\"], [\"type\", \"button\", 1, \"k-time-accept\", \"k-button\", \"k-primary\", 3, \"kendoEventsOutsideAngular\", \"scope\", \"disabled\"], [\"accept\", \"\"]];\n  },\n  template: function TimeSelectorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n      ɵngcc0.ɵɵtext(4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(5, TimeSelectorComponent_button_5_Template, 3, 10, \"button\", 4);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n      ɵngcc0.ɵɵelement(7, \"span\", 6);\n      ɵngcc0.ɵɵtemplate(8, TimeSelectorComponent_ng_template_8_Template, 2, 2, \"ng-template\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, TimeSelectorComponent_div_9_Template, 3, 2, \"div\", 8);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.intl.formatDate(ctx.current, ctx.format), \" \");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNowButton);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dateFormatParts);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.setButton || ctx.cancelButton);\n    }\n  },\n  directives: function directives() {\n    return [TimeSelectorLocalizedMessagesDirective, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.EventsOutsideAngularDirective, TimeListComponent];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nTimeSelectorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: IntlService\n  }, {\n    type: TimePickerDOMService\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: PickerService,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nTimeSelectorComponent.propDecorators = {\n  accept: [{\n    type: ViewChild,\n    args: ['accept']\n  }],\n  cancel: [{\n    type: ViewChild,\n    args: ['cancel']\n  }],\n  now: [{\n    type: ViewChild,\n    args: ['now']\n  }],\n  timeLists: [{\n    type: ViewChildren,\n    args: [TimeListComponent]\n  }],\n  timeListWrappers: [{\n    type: ViewChildren,\n    args: ['listWrapper']\n  }],\n  componentClass: [{\n    type: HostBinding,\n    args: ['class.k-timeselector']\n  }],\n  disabledClass: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }],\n  format: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  cancelButton: [{\n    type: Input\n  }],\n  setButton: [{\n    type: Input\n  }],\n  nowButton: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  steps: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  valueReject: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimeSelectorComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      exportAs: 'kendo-timeselector',\n      providers: [LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.timeselector'\n      }],\n      selector: 'kendo-timeselector',\n      template: \"\\n        <ng-container kendoTimeSelectorLocalizedMessages\\n            i18n-accept=\\\"kendo.timeselector.accept|The Accept button text in the timeselector component\\\"\\n            accept=\\\"Set\\\"\\n\\n            i18n-acceptLabel=\\\"kendo.timeselector.acceptLabel|The label for the Accept button in the timeselector component\\\"\\n            acceptLabel=\\\"Set time\\\"\\n\\n            i18n-cancel=\\\"kendo.timeselector.cancel|The Cancel button text in the timeselector component\\\"\\n            cancel=\\\"Cancel\\\"\\n\\n            i18n-cancelLabel=\\\"kendo.timeselector.cancelLabel|The label for the Cancel button in the timeselector component\\\"\\n            cancelLabel=\\\"Cancel changes\\\"\\n\\n            i18n-now=\\\"kendo.timeselector.now|The Now button text in the timeselector component\\\"\\n            now=\\\"Now\\\"\\n\\n            i18n-nowLabel=\\\"kendo.timeselector.nowLabel|The label for the Now button in the timeselector component\\\"\\n            nowLabel=\\\"Select now\\\"\\n        >\\n        </ng-container>\\n        <div class=\\\"k-time-header\\\">\\n            <span class=\\\"k-title\\\">\\n                {{ intl.formatDate(current, format) }}\\n            </span>\\n            <button\\n                #now\\n                *ngIf=\\\"showNowButton\\\"\\n                class=\\\"k-button k-bare k-time-now\\\" type=\\\"button\\\"\\n                [attr.title]=\\\"localization.get('nowLabel')\\\"\\n                [attr.aria-label]=\\\"localization.get('nowLabel')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    click: handleNow,\\n                    focus: handleFocus,\\n                    blur: handleBlur\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n                [disabled]=\\\"disabled\\\"\\n            >{{localization.get('now')}}</button>\\n        </div>\\n        <div class=\\\"k-time-list-container\\\">\\n            <span class=\\\"k-time-highlight\\\"></span>\\n            <ng-template ngFor [ngForOf]=\\\"dateFormatParts\\\" let-part let-idx=\\\"index\\\">\\n                <div\\n                    #listWrapper\\n                    class=\\\"k-time-list-wrapper\\\"\\n                    role=\\\"presentation\\\" tabindex=\\\"-1\\\"\\n                    *ngIf=\\\"part.type !== 'literal'\\\"\\n                >\\n                    <span class=\\\"k-title\\\">{{intl.dateFieldName(part)}}</span>\\n                    <kendo-timelist\\n                        [min]=\\\"min\\\"\\n                        [max]=\\\"max\\\"\\n                        [part]=\\\"part\\\"\\n                        [step]=\\\"partStep(part)\\\"\\n                        [disabled]=\\\"disabled\\\"\\n                        [(value)]=\\\"current\\\"\\n                        [kendoEventsOutsideAngular]=\\\"{\\n                            focus: handleListFocus,\\n                            blur: handleBlur\\n                        }\\\"\\n                        [scope]=\\\"this\\\"\\n                        [attr.data-timelist-index]=\\\"idx\\\"\\n                    ></kendo-timelist>\\n                </div>\\n                <div class=\\\"k-time-separator\\\" *ngIf=\\\"part.type === 'literal'\\\">\\n                    {{part.pattern}}\\n                </div>\\n            </ng-template>\\n        </div>\\n        <div class=\\\"k-time-footer k-action-buttons\\\" *ngIf=\\\"setButton || cancelButton\\\">\\n            <button\\n                #cancel\\n                *ngIf=\\\"cancelButton\\\"\\n                class=\\\"k-button k-time-cancel\\\" type=\\\"button\\\"\\n                [attr.title]=\\\"localization.get('cancelLabel')\\\"\\n                [attr.aria-label]=\\\"localization.get('cancelLabel')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    click: handleReject,\\n                    focus: handleFocus,\\n                    blur: handleBlur\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n                [disabled]=\\\"disabled\\\"\\n            >{{localization.get('cancel')}}</button>\\n            <button\\n                #accept\\n                *ngIf=\\\"setButton\\\"\\n                type=\\\"button\\\"\\n                class=\\\"k-time-accept k-button k-primary\\\"\\n                [attr.title]=\\\"localization.get('acceptLabel')\\\"\\n                [attr.aria-label]=\\\"localization.get('acceptLabel')\\\"\\n                [kendoEventsOutsideAngular]=\\\"{\\n                    click: handleAccept,\\n                    focus: handleFocus,\\n                    blur: handleBlur\\n                }\\\"\\n                [scope]=\\\"this\\\"\\n                [disabled]=\\\"disabled\\\"\\n            >{{localization.get('accept')}}</button>\\n        </div>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: ElementRef\n    }, {\n      type: IntlService\n    }, {\n      type: TimePickerDOMService\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: PickerService,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    componentClass: [{\n      type: HostBinding,\n      args: ['class.k-timeselector']\n    }],\n    format: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    cancelButton: [{\n      type: Input\n    }],\n    setButton: [{\n      type: Input\n    }],\n    nowButton: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    valueReject: [{\n      type: Output\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    steps: [{\n      type: Input\n    }],\n    accept: [{\n      type: ViewChild,\n      args: ['accept']\n    }],\n    cancel: [{\n      type: ViewChild,\n      args: ['cancel']\n    }],\n    now: [{\n      type: ViewChild,\n      args: ['now']\n    }],\n    timeLists: [{\n      type: ViewChildren,\n      args: [TimeListComponent]\n    }],\n    timeListWrappers: [{\n      type: ViewChildren,\n      args: ['listWrapper']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar TimePickerMessages = /*#__PURE__*/function (_ComponentMessages5) {\n  _inherits(TimePickerMessages, _ComponentMessages5);\n\n  var _super15 = _createSuper(TimePickerMessages);\n\n  function TimePickerMessages() {\n    _classCallCheck(this, TimePickerMessages);\n\n    return _super15.apply(this, arguments);\n  }\n\n  return TimePickerMessages;\n}(ComponentMessages);\n\nTimePickerMessages.ɵfac = function TimePickerMessages_Factory(t) {\n  return ɵTimePickerMessages_BaseFactory(t || TimePickerMessages);\n};\n\nTimePickerMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TimePickerMessages,\n  inputs: {\n    accept: \"accept\",\n    acceptLabel: \"acceptLabel\",\n    cancel: \"cancel\",\n    cancelLabel: \"cancelLabel\",\n    now: \"now\",\n    nowLabel: \"nowLabel\",\n    toggle: \"toggle\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nTimePickerMessages.propDecorators = {\n  accept: [{\n    type: Input\n  }],\n  acceptLabel: [{\n    type: Input\n  }],\n  cancel: [{\n    type: Input\n  }],\n  cancelLabel: [{\n    type: Input\n  }],\n  now: [{\n    type: Input\n  }],\n  nowLabel: [{\n    type: Input\n  }],\n  toggle: [{\n    type: Input\n  }]\n};\nvar ɵTimePickerMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(TimePickerMessages);\n/**\n * @hidden\n */\n\nvar TimePickerLocalizedMessagesDirective = /*#__PURE__*/function (_TimePickerMessages) {\n  _inherits(TimePickerLocalizedMessagesDirective, _TimePickerMessages);\n\n  var _super16 = _createSuper(TimePickerLocalizedMessagesDirective);\n\n  function TimePickerLocalizedMessagesDirective(service) {\n    var _this88;\n\n    _classCallCheck(this, TimePickerLocalizedMessagesDirective);\n\n    _this88 = _super16.call(this);\n    _this88.service = service;\n    return _this88;\n  }\n\n  return TimePickerLocalizedMessagesDirective;\n}(TimePickerMessages);\n\nTimePickerLocalizedMessagesDirective.ɵfac = function TimePickerLocalizedMessagesDirective_Factory(t) {\n  return new (t || TimePickerLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nTimePickerLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TimePickerLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoTimePickerLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TimePickerMessages,\n    useExisting: forwardRef(function () {\n      return TimePickerLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nTimePickerLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimePickerLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: TimePickerMessages,\n        useExisting: forwardRef(function () {\n          return TimePickerLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoTimePickerLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\n\nvar TimePickerCustomMessagesComponent = /*#__PURE__*/function (_TimePickerMessages2) {\n  _inherits(TimePickerCustomMessagesComponent, _TimePickerMessages2);\n\n  var _super17 = _createSuper(TimePickerCustomMessagesComponent);\n\n  function TimePickerCustomMessagesComponent(service) {\n    var _this89;\n\n    _classCallCheck(this, TimePickerCustomMessagesComponent);\n\n    _this89 = _super17.call(this);\n    _this89.service = service;\n    return _this89;\n  }\n\n  _createClass(TimePickerCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return TimePickerCustomMessagesComponent;\n}(TimePickerMessages);\n\nTimePickerCustomMessagesComponent.ɵfac = function TimePickerCustomMessagesComponent_Factory(t) {\n  return new (t || TimePickerCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nTimePickerCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimePickerCustomMessagesComponent,\n  selectors: [[\"kendo-timepicker-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TimePickerMessages,\n    useExisting: forwardRef(function () {\n      return TimePickerCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function TimePickerCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTimePickerCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimePickerCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: TimePickerMessages,\n        useExisting: forwardRef(function () {\n          return TimePickerCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-timepicker-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar TimeSelectorLocalizedMessagesDirective = /*#__PURE__*/function (_TimePickerMessages3) {\n  _inherits(TimeSelectorLocalizedMessagesDirective, _TimePickerMessages3);\n\n  var _super18 = _createSuper(TimeSelectorLocalizedMessagesDirective);\n\n  function TimeSelectorLocalizedMessagesDirective(service) {\n    var _this90;\n\n    _classCallCheck(this, TimeSelectorLocalizedMessagesDirective);\n\n    _this90 = _super18.call(this);\n    _this90.service = service;\n    return _this90;\n  }\n\n  return TimeSelectorLocalizedMessagesDirective;\n}(TimePickerMessages);\n\nTimeSelectorLocalizedMessagesDirective.ɵfac = function TimeSelectorLocalizedMessagesDirective_Factory(t) {\n  return new (t || TimeSelectorLocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nTimeSelectorLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TimeSelectorLocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoTimeSelectorLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TimePickerMessages,\n    useExisting: forwardRef(function () {\n      return TimeSelectorLocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nTimeSelectorLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimeSelectorLocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: TimePickerMessages,\n        useExisting: forwardRef(function () {\n          return TimeSelectorLocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: '[kendoTimeSelectorLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n *\n * Custom component messages override default component messages.\n */\n\n\nvar TimeSelectorCustomMessagesComponent = /*#__PURE__*/function (_TimePickerMessages4) {\n  _inherits(TimeSelectorCustomMessagesComponent, _TimePickerMessages4);\n\n  var _super19 = _createSuper(TimeSelectorCustomMessagesComponent);\n\n  function TimeSelectorCustomMessagesComponent(service) {\n    var _this91;\n\n    _classCallCheck(this, TimeSelectorCustomMessagesComponent);\n\n    _this91 = _super19.call(this);\n    _this91.service = service;\n    return _this91;\n  }\n\n  _createClass(TimeSelectorCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return TimeSelectorCustomMessagesComponent;\n}(TimePickerMessages);\n\nTimeSelectorCustomMessagesComponent.ɵfac = function TimeSelectorCustomMessagesComponent_Factory(t) {\n  return new (t || TimeSelectorCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nTimeSelectorCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TimeSelectorCustomMessagesComponent,\n  selectors: [[\"kendo-timeselector-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TimePickerMessages,\n    useExisting: forwardRef(function () {\n      return TimeSelectorCustomMessagesComponent;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function TimeSelectorCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTimeSelectorCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimeSelectorCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: TimePickerMessages,\n        useExisting: forwardRef(function () {\n          return TimeSelectorCustomMessagesComponent;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: 'kendo-timeselector-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar COMPONENT_DIRECTIVES$2 = [TimePickerLocalizedMessagesDirective, TimeListComponent, TimePickerCustomMessagesComponent, TimePickerComponent, TimeSelectorLocalizedMessagesDirective, TimeSelectorCustomMessagesComponent, TimeSelectorComponent];\nvar COMPONENT_MODULES$1 = [DateInputModule, IntlModule, PopupModule, VirtualizationModule, EventsModule];\nvar ɵ0$n = touchEnabled;\nvar providers = [TimePickerDOMService, HoursService, MinutesService, SecondsService, DayPeriodService, {\n  provide: TOUCH_ENABLED,\n  useValue: ɵ0$n\n}];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TimePicker component.\n */\n\nvar TimePickerModule = function TimePickerModule() {\n  _classCallCheck(this, TimePickerModule);\n};\n\nTimePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TimePickerModule\n});\nTimePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TimePickerModule_Factory(t) {\n    return new (t || TimePickerModule)();\n  },\n  providers: providers,\n  imports: [[CommonModule].concat(COMPONENT_MODULES$1)]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TimePickerModule, {\n    declarations: function declarations() {\n      return [TimePickerLocalizedMessagesDirective, TimeListComponent, TimePickerCustomMessagesComponent, TimePickerComponent, TimeSelectorLocalizedMessagesDirective, TimeSelectorCustomMessagesComponent, TimeSelectorComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, DateInputModule, IntlModule, PopupModule, VirtualizationModule, EventsModule];\n    },\n    exports: function exports() {\n      return [TimePickerLocalizedMessagesDirective, TimeListComponent, TimePickerCustomMessagesComponent, TimePickerComponent, TimeSelectorLocalizedMessagesDirective, TimeSelectorCustomMessagesComponent, TimeSelectorComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TimePickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENT_DIRECTIVES$2],\n      exports: [COMPONENT_DIRECTIVES$2],\n      imports: [CommonModule].concat(COMPONENT_MODULES$1),\n      providers: providers\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar Messages$1 = /*#__PURE__*/function (_ComponentMessages6) {\n  _inherits(Messages$1, _ComponentMessages6);\n\n  var _super20 = _createSuper(Messages$1);\n\n  function Messages$1() {\n    _classCallCheck(this, Messages$1);\n\n    return _super20.apply(this, arguments);\n  }\n\n  return Messages$1;\n}(ComponentMessages);\n\nMessages$1.ɵfac = function Messages$1_Factory(t) {\n  return ɵMessages$1_BaseFactory(t || Messages$1);\n};\n\nMessages$1.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Messages$1,\n  inputs: {\n    toggle: \"toggle\",\n    dateTab: \"dateTab\",\n    dateTabLabel: \"dateTabLabel\",\n    timeTab: \"timeTab\",\n    timeTabLabel: \"timeTabLabel\",\n    accept: \"accept\",\n    acceptLabel: \"acceptLabel\",\n    cancel: \"cancel\",\n    cancelLabel: \"cancelLabel\",\n    today: \"today\",\n    now: \"now\",\n    nowLabel: \"nowLabel\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMessages$1.propDecorators = {\n  toggle: [{\n    type: Input\n  }],\n  dateTab: [{\n    type: Input\n  }],\n  dateTabLabel: [{\n    type: Input\n  }],\n  timeTab: [{\n    type: Input\n  }],\n  timeTabLabel: [{\n    type: Input\n  }],\n  accept: [{\n    type: Input\n  }],\n  acceptLabel: [{\n    type: Input\n  }],\n  cancel: [{\n    type: Input\n  }],\n  cancelLabel: [{\n    type: Input\n  }],\n  today: [{\n    type: Input\n  }],\n  now: [{\n    type: Input\n  }],\n  nowLabel: [{\n    type: Input\n  }]\n};\nvar ɵMessages$1_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(Messages$1);\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\n\nvar DateTimePickerCustomMessagesComponent = /*#__PURE__*/function (_Messages$) {\n  _inherits(DateTimePickerCustomMessagesComponent, _Messages$);\n\n  var _super21 = _createSuper(DateTimePickerCustomMessagesComponent);\n\n  function DateTimePickerCustomMessagesComponent(service) {\n    var _this92;\n\n    _classCallCheck(this, DateTimePickerCustomMessagesComponent);\n\n    _this92 = _super21.call(this);\n    _this92.service = service;\n    return _this92;\n  }\n\n  _createClass(DateTimePickerCustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return DateTimePickerCustomMessagesComponent;\n}(Messages$1);\n\nDateTimePickerCustomMessagesComponent.ɵfac = function DateTimePickerCustomMessagesComponent_Factory(t) {\n  return new (t || DateTimePickerCustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateTimePickerCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateTimePickerCustomMessagesComponent,\n  selectors: [[\"kendo-datetimepicker-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages$1,\n    useExisting: forwardRef(function () {\n      return DateTimePickerCustomMessagesComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DateTimePickerCustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateTimePickerCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateTimePickerCustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages$1,\n        useExisting: forwardRef(function () {\n          return DateTimePickerCustomMessagesComponent;\n        })\n      }],\n      selector: 'kendo-datetimepicker-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar LocalizedMessagesDirective = /*#__PURE__*/function (_Messages$2) {\n  _inherits(LocalizedMessagesDirective, _Messages$2);\n\n  var _super22 = _createSuper(LocalizedMessagesDirective);\n\n  function LocalizedMessagesDirective(service) {\n    var _this93;\n\n    _classCallCheck(this, LocalizedMessagesDirective);\n\n    _this93 = _super22.call(this);\n    _this93.service = service;\n    return _this93;\n  }\n\n  return LocalizedMessagesDirective;\n}(Messages$1);\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDateTimePickerLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages$1,\n    useExisting: forwardRef(function () {\n      return LocalizedMessagesDirective;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages$1,\n        useExisting: forwardRef(function () {\n          return LocalizedMessagesDirective;\n        })\n      }],\n      selector: '[kendoDateTimePickerLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar COMPONENT_DIRECTIVES$3 = [DateTimePickerComponent, DateTimePickerCustomMessagesComponent, LocalizedMessagesDirective];\nvar ɵ0$o = touchEnabled;\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DateTimePicker component.\n */\n\nvar DateTimePickerModule = function DateTimePickerModule() {\n  _classCallCheck(this, DateTimePickerModule);\n};\n\nDateTimePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DateTimePickerModule\n});\nDateTimePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DateTimePickerModule_Factory(t) {\n    return new (t || DateTimePickerModule)();\n  },\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: ɵ0$o\n  }],\n  imports: [[CommonModule, IntlModule, DateInputModule, CalendarModule, TimePickerModule, PopupModule, EventsModule, TemplatesModule], TemplatesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateTimePickerModule, {\n    declarations: function declarations() {\n      return [DateTimePickerComponent, DateTimePickerCustomMessagesComponent, LocalizedMessagesDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, IntlModule, DateInputModule, CalendarModule, TimePickerModule, PopupModule, EventsModule, TemplatesModule];\n    },\n    exports: function exports() {\n      return [DateTimePickerComponent, DateTimePickerCustomMessagesComponent, LocalizedMessagesDirective, TemplatesModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateTimePickerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [].concat(COMPONENT_DIRECTIVES$3),\n      exports: [].concat(COMPONENT_DIRECTIVES$3, [TemplatesModule]),\n      imports: [CommonModule, IntlModule, DateInputModule, CalendarModule, TimePickerModule, PopupModule, EventsModule, TemplatesModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: ɵ0$o\n      }]\n    }]\n  }], null, null);\n})();\n\nvar COMPONENT_MODULES$2 = [CalendarsModule, DateInputModule, DatePickerModule, TimePickerModule, DateRangeModule, DateTimePickerModule];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Date Inputs components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Date Inputs module\n * import { DateInputsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DateInputsModule], // import the Date Inputs module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nvar DateInputsModule = function DateInputsModule() {\n  _classCallCheck(this, DateInputsModule);\n};\n\nDateInputsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DateInputsModule\n});\nDateInputsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DateInputsModule_Factory(t) {\n    return new (t || DateInputsModule)();\n  },\n  imports: [COMPONENT_MODULES$2, CalendarsModule, DateInputModule, DatePickerModule, TimePickerModule, DateRangeModule, DateTimePickerModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DateInputsModule, {\n    imports: [CalendarsModule, DateInputModule, DatePickerModule, TimePickerModule, DateRangeModule, DateTimePickerModule],\n    exports: [CalendarsModule, DateInputModule, DatePickerModule, TimePickerModule, DateRangeModule, DateTimePickerModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateInputsModule, [{\n    type: NgModule,\n    args: [{\n      exports: COMPONENT_MODULES$2,\n      imports: COMPONENT_MODULES$2\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CalendarCommonModule, CALENDAR_RANGE_VALIDATORS, CALENDAR_VALUE_ACCESSOR, KENDO_INPUT_PROVIDER, KForOf, KForOfContext, HeaderComponent, HorizontalViewListComponent, CalendarMessages, MultiViewCalendarCustomMessagesComponent, Messages, RANGE_CALENDAR_RANGE_VALIDATORS, RANGE_CALENDAR_VALUE_ACCESSOR, NavigationComponent, BusViewService, CenturyViewService, DecadeViewService, DisabledDatesService, CalendarDOMService, MonthViewService, NavigationService, ScrollSyncService, WeekNamesService, YearViewService, TemplatesModule, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective, ViewListComponent, ViewComponent, PickerService, DateInputMessages, DatePickerMessages, DateRangeInput, DateRangePopupTemplateDirective, DateTimePickerCustomMessagesComponent, LocalizedMessagesDirective, Messages$1, TimePickerMessages, TimePickerCustomMessagesComponent, TimeSelectorCustomMessagesComponent, DayPeriodService, TimePickerDOMService, HoursService, MinutesService, SecondsService, TimeListComponent, TimeSelectorComponent, TOUCH_ENABLED, ScrollerService, DEFAULT_SCROLLER_FACTORY, SCROLLER_FACTORY_TOKEN, VirtualizationComponent, VirtualizationModule, CalendarComponent, DateInputComponent, DatePickerComponent, TimePickerComponent, DateTimePickerComponent, MultiViewCalendarComponent, DateRangeComponent, DateRangePopupComponent, DateRangeEndInputDirective, DateRangeStartInputDirective, DateRangeSelectionDirective, CalendarModule, CalendarsModule, DateInputModule, DatePickerModule, DateInputsModule, TimePickerModule, DateTimePickerModule, MultiViewCalendarModule, DateRangeModule, DateRangeService, CalendarCustomMessagesComponent, DateInputCustomMessagesComponent, DatePickerCustomMessagesComponent, PreventableEvent, CalendarLocalizedMessagesDirective, MultiViewCalendarLocalizedMessagesDirective, DateInputLocalizedMessagesDirective, DatePickerLocalizedMessagesDirective, TimePickerLocalizedMessagesDirective, TimeSelectorLocalizedMessagesDirective };","map":{"version":3,"sources":["index.js"],"names":[],"mappings":"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Injectable, EventEmitter, Injector, InjectionToken, Component, Inject, ElementRef, Renderer2, NgZone, Input, Output, HostBinding, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, Directive, TemplateRef, isDevMode, forwardRef, Optional, ContentChild, ViewContainerRef, HostListener, ViewChildren, ContentChildren, IterableDiffers, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, NgControl } from '@angular/forms';\nimport { LocalizationService, L10N_PREFIX, RTL, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { getDate, isEqual, cloneDate, addDays, addDecades, addCenturies, firstDecadeOfCentury, lastDecadeOfCentury, firstYearOfDecade, createDate, durationInCenturies, addYears, lastYearOfDecade, durationInDecades, addWeeks, addMonths, firstDayOfMonth, lastDayOfMonth, dayOfWeek, durationInMonths, firstMonthOfYear, lastMonthOfYear, durationInYears, weekInYear } from '@progress/kendo-date-math';\nimport { isDocumentAvailable, KendoInput, guid, hasObservers, Keys, EventsModule } from '@progress/kendo-angular-common';\nimport { IntlService, IntlModule } from '@progress/kendo-angular-intl';\nimport { ReplaySubject, Observable, Subject, combineLatest, of, interval, animationFrameScheduler, fromEvent, EMPTY, from, Subscription, BehaviorSubject, merge } from 'rxjs';\nimport { map, scan, takeWhile, tap, filter, debounceTime } from 'rxjs/operators';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { CommonModule } from '@angular/common';\nimport { touchEnabled } from '@progress/kendo-common';\n\n/**\n * @hidden\n */\nvar Action;\n(function (Action) {\n    Action[Action[\"Left\"] = 0] = \"Left\";\n    Action[Action[\"Right\"] = 1] = \"Right\";\n    Action[Action[\"Up\"] = 2] = \"Up\";\n    Action[Action[\"Down\"] = 3] = \"Down\";\n    Action[Action[\"PrevView\"] = 4] = \"PrevView\";\n    Action[Action[\"NextView\"] = 5] = \"NextView\";\n    Action[Action[\"FirstInView\"] = 6] = \"FirstInView\";\n    Action[Action[\"LastInView\"] = 7] = \"LastInView\";\n    Action[Action[\"LowerView\"] = 8] = \"LowerView\";\n    Action[Action[\"UpperView\"] = 9] = \"UpperView\";\n})(Action || (Action = {}));\n\n/**\n * @hidden\n */\nconst EMPTY_SELECTIONRANGE = { start: null, end: null };\n\n/**\n * @hidden\n */\nconst MIDNIGHT_DATE = new Date(1980, 0, 1);\n/**\n * @hidden\n */\nconst MIN_DATE = new Date(1900, 0, 1);\n/**\n * @hidden\n */\nconst MAX_DATE = new Date(2099, 11, 31);\n/**\n * @hidden\n */\nconst MIN_TIME = new Date(1980, 0, 1);\n/**\n * @hidden\n */\nconst MAX_TIME = new Date(1980, 0, 1, 23, 59, 59);\n\n/* tslint:disable:no-bitwise max-line-length */\nconst isSet = (value) => value !== null && value !== undefined;\nconst setter = (method) => (date, value) => {\n    const clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n};\n/**\n * @hidden\n */\nconst setTime = (origin, candidate) => {\n    const date = cloneDate(origin);\n    date.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());\n    return date;\n};\nconst normalizeTimes = (candidate, min, max) => ({\n    candidateValue: setTime(MIDNIGHT_DATE, candidate),\n    maxValue: addDays(setTime(MIDNIGHT_DATE, max), min.getHours() < max.getHours() ||\n        (min.getHours() === max.getHours() && min.getMinutes() < max.getMinutes()) ? 0 : 1),\n    minValue: setTime(MIDNIGHT_DATE, min)\n});\n/**\n * @hidden\n */\nconst setHours = setter('setHours');\n/**\n * @hidden\n */\nconst setMinutes = setter('setMinutes');\n/**\n * @hidden\n */\nconst setSeconds = setter('setSeconds');\n/**\n * @hidden\n */\nconst range = (start, end, step = 1) => {\n    const result = [];\n    for (let i = start; i < end; i = i + step) {\n        result.push(i);\n    }\n    return result;\n};\n/**\n * @hidden\n */\nconst isInRange = (candidate, min, max) => (!candidate || !((min && min > candidate) || (max && max < candidate)));\n/**\n * @hidden\n */\nconst isInTimeRange = (candidate, min, max) => {\n    if (!candidate || !min || !max) {\n        return true;\n    }\n    const { candidateValue, minValue, maxValue } = normalizeTimes(candidate, min, max);\n    return minValue <= candidateValue && candidateValue <= maxValue;\n};\n/**\n * @hidden\n */\nconst isValidRange = (min, max) => (!isSet(min) || !isSet(max) || min <= max);\n/**\n * @hidden\n */\nconst dateInRange = (candidate, min, max) => {\n    if (!candidate) {\n        return candidate;\n    }\n    if (min && candidate < min) {\n        return cloneDate(min);\n    }\n    if (max && candidate > max) {\n        return cloneDate(max);\n    }\n    return candidate;\n};\n/**\n * @hidden\n */\nconst timeInRange = (candidate, min, max) => {\n    if (!candidate || !min || !max) {\n        return candidate;\n    }\n    const { candidateValue, minValue, maxValue } = normalizeTimes(candidate, min, max);\n    if (candidateValue < minValue) {\n        return setTime(candidate, min);\n    }\n    if (candidateValue > maxValue) {\n        return setTime(candidate, max);\n    }\n    return candidate;\n};\n/**\n * @hidden\n */\nconst getNow = () => new Date();\n/**\n * @hidden\n */\nconst getToday = () => getDate(new Date());\n/**\n * @hidden\n */\nconst noop = (_) => { }; // tslint:disable-line:no-empty\n/**\n * @hidden\n */\nconst isWindowAvailable = () => {\n    return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\nconst stringifyClassObject = (classes) => {\n    const pushToAcc = (acc, cls) => classes[cls] ? acc.concat(cls) : acc;\n    return Object.keys(classes).reduce(pushToAcc, []).join(' ');\n};\n/**\n * @hidden\n */\nconst shiftWeekNames = (names, offset) => (names.slice(offset).concat(names.slice(0, offset)));\n/**\n * @hidden\n */\nconst approximateStringMatching = (oldTextOrigin, oldFormat, newTextOrigin, caret) => {\n    // Remove the right part of the cursor.\n    //oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n    const oldIndex = caret + oldTextOrigin.length - newTextOrigin.length;\n    const oldTextSeparator = oldTextOrigin[oldIndex];\n    const oldText = oldTextOrigin.substring(0, caret + oldTextOrigin.length - newTextOrigin.length);\n    const newText = newTextOrigin.substring(0, caret);\n    const diff = [];\n    // Handle typing a single character over the same selection.\n    if (oldText === newText && caret > 0) {\n        diff.push([oldFormat[caret - 1], newText[caret - 1]]);\n        return diff;\n    }\n    if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {\n        // Handle Delete/Backspace.\n        let deletedSymbol = \"\";\n        //XXX:\n        // Whole text is replaced with a same char\n        // Nasty patch required to keep the selection in the first segment\n        if (newText.length === 1) {\n            diff.push([oldFormat[0], newText[0]]);\n        }\n        for (let i = newText.length; i < oldText.length; i++) {\n            if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== \"_\") {\n                deletedSymbol = oldFormat[i];\n                diff.push([deletedSymbol, \"\"]);\n            }\n        }\n        return diff;\n    }\n    // Handle inserting text (the new text is longer than the previous one).\n    // Handle typing over a literal as well.\n    if (newText.indexOf(oldText) === 0 || oldFormat[caret - 1] === \"_\") {\n        let symbol = oldFormat[0];\n        for (let i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {\n            if (oldFormat[i] !== \"_\") {\n                symbol = oldFormat[i];\n                break;\n            }\n        }\n        return [[symbol, newText[caret - 1]]];\n    }\n    // Handle entering a space or a separator, for navigation to the next item.\n    if (newText[newText.length - 1] === \" \" || (newText[newText.length - 1] === oldTextSeparator && oldFormat[oldIndex] === '_')) {\n        return [[oldFormat[caret - 1], \"_\"]];\n    }\n    // Handle typing over a correctly selected part.\n    return [[oldFormat[caret - 1], newText[caret - 1]]];\n};\n/**\n * @hidden\n */\nconst domContainerFactory = (type) => (children, classes = \"\", styles = {}) => {\n    const container = document.createElement(type);\n    container.className = classes;\n    Object.keys(styles).map(key => container.style[key] = styles[key]);\n    if (typeof children === 'string') {\n        container.innerHTML = children || '';\n    }\n    else {\n        (children || []).forEach(child => child && container.appendChild(child));\n    }\n    return container;\n};\n/**\n * @hidden\n */\nconst hasChange = (changes, field) => changes[field] !== undefined;\n/**\n * @hidden\n */\nconst hasExistingValue = (changes, field) => changes[field] && changes[field].currentValue !== undefined && changes[field].currentValue !== null;\n/**\n * @hidden\n */\nconst isInSelectionRange = (value, selectionRange) => {\n    const { start, end } = selectionRange || EMPTY_SELECTIONRANGE;\n    if (!start || !end) {\n        return false;\n    }\n    return start < value && value < end;\n};\n/**\n * @hidden\n */\nconst either = (value1, value2) => value1 || value2;\n/**\n * @hidden\n */\nconst clampRange = (value) => ({ start: value, end: value });\n/**\n * @hidden\n */\nconst isEqualRange = (initial, updated) => {\n    const { start: initialStart, end: initialEnd } = initial || EMPTY_SELECTIONRANGE;\n    const { start: updatedStart, end: updatedEnd } = updated || EMPTY_SELECTIONRANGE;\n    return isEqual(initialStart, updatedStart) && isEqual(initialEnd, updatedEnd);\n};\n/**\n * @hidden\n *\n * Creates a new date based on the date information from the specified date portion\n * and the time information from the time portion.\n * If a parameter is not provided, returns `null`.\n */\nconst mergeDateAndTime = (date, time) => {\n    if (!(date && time)) {\n        return null;\n    }\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), time.getHours(), time.getMinutes(), time.getSeconds(), time.getMilliseconds());\n};\n/**\n * @hidden\n */\nconst lastMillisecondOfDate = (date) => {\n    if (!date) {\n        return null;\n    }\n    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n};\n/**\n * @hidden\n *\n * Returns an array with dates ranging between and including the specified start and\n * end dates that are evaluated as disabled.\n */\nconst disabledDatesInRange = (start, end, isDateDisabled) => {\n    if (!(start && end && isDateDisabled) || (start > end)) {\n        return [];\n    }\n    const dates = [];\n    let current = start;\n    while (current <= end) {\n        if (isDateDisabled(current)) {\n            dates.push(current);\n        }\n        current = addDays(current, 1);\n    }\n    return dates;\n};\n\n/* tslint:disable:object-literal-sort-keys */\nconst EMPTY_DATA = [[]];\nconst CELLS_LENGTH = 5;\nconst ROWS_LENGTH = 2;\nconst ACTIONS = {\n    [Action.Left]: (date) => addDecades(date, -1),\n    [Action.Up]: (date) => addDecades(date, -5),\n    [Action.Right]: (date) => addDecades(date, 1),\n    [Action.Down]: (date) => addDecades(date, 5),\n    [Action.PrevView]: (date) => addCenturies(date, -1),\n    [Action.NextView]: (date) => addCenturies(date, 1),\n    [Action.FirstInView]: (date) => firstDecadeOfCentury(date),\n    [Action.LastInView]: (date) => lastDecadeOfCentury(date)\n};\n/**\n * @hidden\n */\nclass CenturyViewService {\n    addToDate(min, skip) {\n        return addCenturies(min, skip);\n    }\n    datesList(start, count) {\n        return range(0, count).map(i => addCenturies(start, i));\n    }\n    data(options) {\n        const { cellUID, focusedDate, isActiveView, max, min, selectedDate, selectionRange = EMPTY_SELECTIONRANGE, viewDate } = options;\n        if (!viewDate) {\n            return EMPTY_DATA;\n        }\n        const cells = range(0, CELLS_LENGTH);\n        const firstDate = firstDecadeOfCentury(viewDate);\n        const lastDate = lastDecadeOfCentury(viewDate);\n        const isSelectedDateInRange = isInRange(selectedDate, min, max);\n        const today = getToday();\n        return range(0, ROWS_LENGTH).map(rowOffset => {\n            const baseDate = addDecades(firstDate, rowOffset * CELLS_LENGTH);\n            return cells.map(cellOffset => {\n                const cellDate = this.normalize(addDecades(baseDate, cellOffset), min, max);\n                if (!this.isInRange(cellDate, min, max)) {\n                    return null;\n                }\n                const isRangeStart = this.isEqual(cellDate, selectionRange.start);\n                const isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n                const isInMiddle = !isRangeStart && !isRangeEnd;\n                const isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                return {\n                    formattedValue: this.value(cellDate),\n                    id: `${cellUID}${cellDate.getTime()}`,\n                    isFocused: this.isEqual(cellDate, focusedDate),\n                    isSelected: isActiveView && isSelectedDateInRange && this.isEqual(cellDate, selectedDate),\n                    isWeekend: false,\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n                    isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n                    isToday: this.isEqual(cellDate, today),\n                    title: this.cellTitle(cellDate),\n                    value: cellDate\n                };\n            });\n        });\n    }\n    isEqual(candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return firstYearOfDecade(candidate).getFullYear() === firstYearOfDecade(expected).getFullYear();\n    }\n    isInArray(date, dates) {\n        if (!dates.length) {\n            return false;\n        }\n        const year = date.getFullYear();\n        return dates[0].getFullYear() <= year && year <= (dates[dates.length - 1].getFullYear() + 99);\n    }\n    isInRange(candidate, min, max) {\n        const year = firstYearOfDecade(candidate).getFullYear();\n        const aboveMin = !min || firstYearOfDecade(min).getFullYear() <= year;\n        const belowMax = !max || year <= firstYearOfDecade(max).getFullYear();\n        return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n        if (!date) {\n            return date;\n        }\n        const firstYear = firstYearOfDecade(firstDecadeOfCentury(date));\n        return createDate(firstYear.getFullYear(), 0, 1);\n    }\n    isRangeStart(value) {\n        return value.getFullYear() % 1000 === 0;\n    }\n    move(value, action) {\n        const modifier = ACTIONS[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    }\n    cellTitle(value) {\n        return firstYearOfDecade(value).getFullYear().toString();\n    }\n    navigationTitle(value) {\n        return value ? firstDecadeOfCentury(value).getFullYear().toString() : '';\n    }\n    title(value) {\n        if (!value) {\n            return '';\n        }\n        return `${firstDecadeOfCentury(value).getFullYear()} - ${lastDecadeOfCentury(value).getFullYear()}`;\n    }\n    rowLength(_) {\n        return CELLS_LENGTH;\n    }\n    skip(value, min) {\n        return durationInCenturies(min, value);\n    }\n    total(min, max) {\n        return durationInCenturies(min, max) + 1;\n    }\n    value(current) {\n        return current ? firstYearOfDecade(current).getFullYear().toString() : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n        const viewsInRange = this.total(date, max);\n        if (viewsInRange < viewsCount) {\n            const centuriesToSubtract = viewsCount - viewsInRange;\n            return addCenturies(date, -1 * centuriesToSubtract);\n        }\n        return date;\n    }\n    normalize(cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    }\n}\nCenturyViewService.decorators = [\n    { type: Injectable },\n];\n\n/* tslint:disable:object-literal-sort-keys */\nconst EMPTY_DATA$1 = [[]];\nconst CELLS_LENGTH$1 = 5;\nconst ROWS_LENGTH$1 = 2;\nconst ACTIONS$1 = {\n    [Action.Left]: (date) => addYears(date, -1),\n    [Action.Up]: (date) => addYears(date, -5),\n    [Action.Right]: (date) => addYears(date, 1),\n    [Action.Down]: (date) => addYears(date, 5),\n    [Action.PrevView]: (date) => addDecades(date, -1),\n    [Action.NextView]: (date) => addDecades(date, 1),\n    [Action.FirstInView]: (date) => firstYearOfDecade(date),\n    [Action.LastInView]: (date) => lastYearOfDecade(date)\n};\n/**\n * @hidden\n */\nclass DecadeViewService {\n    addToDate(min, skip) {\n        return addDecades(min, skip);\n    }\n    datesList(start, count) {\n        return range(0, count).map(i => addDecades(start, i));\n    }\n    data(options) {\n        const { cellUID, focusedDate, isActiveView, max, min, selectedDate, selectionRange = EMPTY_SELECTIONRANGE, viewDate } = options;\n        if (!viewDate) {\n            return EMPTY_DATA$1;\n        }\n        const cells = range(0, CELLS_LENGTH$1);\n        const firstDate = firstYearOfDecade(viewDate);\n        const lastDate = lastYearOfDecade(viewDate);\n        const isSelectedDateInRange = isInRange(selectedDate, min, max);\n        const today = getToday();\n        return range(0, ROWS_LENGTH$1).map(rowOffset => {\n            const baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH$1);\n            return cells.map(cellOffset => {\n                const cellDate = this.normalize(addYears(baseDate, cellOffset), min, max);\n                if (!this.isInRange(cellDate, min, max)) {\n                    return null;\n                }\n                const isRangeStart = this.isEqual(cellDate, selectionRange.start);\n                const isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n                const isInMiddle = !isRangeStart && !isRangeEnd;\n                const isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                return {\n                    formattedValue: this.value(cellDate),\n                    id: `${cellUID}${cellDate.getTime()}`,\n                    isFocused: this.isEqual(cellDate, focusedDate),\n                    isSelected: isActiveView && isSelectedDateInRange && this.isEqual(cellDate, selectedDate),\n                    isWeekend: false,\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n                    isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n                    isToday: this.isEqual(cellDate, today),\n                    title: this.cellTitle(cellDate),\n                    value: cellDate\n                };\n            });\n        });\n    }\n    isEqual(candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return candidate.getFullYear() === expected.getFullYear();\n    }\n    isInArray(date, dates) {\n        if (!dates.length) {\n            return false;\n        }\n        const year = date.getFullYear();\n        return dates[0].getFullYear() <= year && year <= (dates[dates.length - 1].getFullYear() + 9);\n    }\n    isInRange(candidate, min, max) {\n        const year = candidate.getFullYear();\n        const aboveMin = !min || min.getFullYear() <= year;\n        const belowMax = !max || year <= max.getFullYear();\n        return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n        if (!date) {\n            return date;\n        }\n        const firstYear = firstYearOfDecade(date);\n        return createDate(firstYear.getFullYear(), 0, 1);\n    }\n    isRangeStart(value) {\n        return value.getFullYear() % 100 === 0;\n    }\n    move(value, action) {\n        const modifier = ACTIONS$1[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    }\n    cellTitle(value) {\n        return value.getFullYear().toString();\n    }\n    navigationTitle(value) {\n        return value ? firstYearOfDecade(value).getFullYear().toString() : '';\n    }\n    title(value) {\n        if (!value) {\n            return '';\n        }\n        return `${firstYearOfDecade(value).getFullYear()} - ${lastYearOfDecade(value).getFullYear()}`;\n    }\n    rowLength(_) {\n        return CELLS_LENGTH$1;\n    }\n    skip(value, min) {\n        return durationInDecades(min, value);\n    }\n    total(min, max) {\n        return durationInDecades(min, max) + 1;\n    }\n    value(current) {\n        return current ? current.getFullYear().toString() : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n        const viewsInRange = this.total(date, max);\n        if (viewsInRange < viewsCount) {\n            const decadesToSubtract = viewsCount - viewsInRange;\n            return addDecades(date, -1 * decadesToSubtract);\n        }\n        return date;\n    }\n    normalize(cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    }\n}\nDecadeViewService.decorators = [\n    { type: Injectable },\n];\n\n/* tslint:disable:object-literal-sort-keys */\nconst EMPTY_DATA$2 = [[]];\nconst CELLS_LENGTH$2 = 7;\nconst ROWS_LENGTH$2 = 6;\nconst ACTIONS$2 = {\n    [Action.Left]: (date) => addDays(date, -1),\n    [Action.Up]: (date) => addWeeks(date, -1),\n    [Action.Right]: (date) => addDays(date, 1),\n    [Action.Down]: (date) => addWeeks(date, 1),\n    [Action.PrevView]: (date) => addMonths(date, -1),\n    [Action.NextView]: (date) => addMonths(date, 1),\n    [Action.FirstInView]: (date) => firstDayOfMonth(date),\n    [Action.LastInView]: (date) => lastDayOfMonth(date)\n};\n/**\n * @hidden\n */\nclass MonthViewService {\n    constructor(_intlService) {\n        this._intlService = _intlService;\n    }\n    addToDate(min, skip) {\n        return addMonths(min, skip);\n    }\n    datesList(start, count) {\n        return range(0, count).map(i => addMonths(start, i));\n    }\n    data(options) {\n        const { cellUID, focusedDate, isActiveView, max, min, selectedDate, selectionRange = EMPTY_SELECTIONRANGE, viewDate, isDateDisabled = () => false } = options;\n        if (!viewDate) {\n            return EMPTY_DATA$2;\n        }\n        const firstMonthDate = firstDayOfMonth(viewDate);\n        const firstMonthDay = getDate(firstMonthDate);\n        const lastMonthDate = lastDayOfMonth(viewDate);\n        const lastMonthDay = getDate(lastMonthDate);\n        const backward = -1;\n        const isSelectedDateInRange = isInRange(selectedDate, min, max);\n        const date = dayOfWeek(firstMonthDate, this._intlService.firstDay(), backward);\n        const cells = range(0, CELLS_LENGTH$2);\n        const today = getToday();\n        return range(0, ROWS_LENGTH$2).map(rowOffset => {\n            const baseDate = addDays(date, rowOffset * CELLS_LENGTH$2);\n            return cells.map(cellOffset => {\n                const cellDate = this.normalize(addDays(baseDate, cellOffset), min, max);\n                const cellDay = getDate(cellDate);\n                const otherMonth = cellDay < firstMonthDay || cellDay > lastMonthDay;\n                const outOfRange = cellDate < min || cellDate > max;\n                if (otherMonth || outOfRange) {\n                    return null;\n                }\n                const isRangeStart = this.isEqual(cellDate, selectionRange.start);\n                const isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n                const isInMiddle = !isRangeStart && !isRangeEnd;\n                const isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                return {\n                    formattedValue: this.value(cellDate),\n                    id: `${cellUID}${cellDate.getTime()}`,\n                    isFocused: this.isEqual(cellDate, focusedDate),\n                    isSelected: isActiveView && isSelectedDateInRange && this.isEqual(cellDate, selectedDate),\n                    isWeekend: this.isWeekend(cellDate),\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstMonthDate),\n                    isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastMonthDate),\n                    isToday: this.isEqual(cellDate, today),\n                    title: this.cellTitle(cellDate),\n                    value: cellDate,\n                    isDisabled: isDateDisabled(cellDate)\n                };\n            });\n        });\n    }\n    isEqual(candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return getDate(candidate).getTime() === getDate(expected).getTime();\n    }\n    isInArray(date, dates) {\n        if (dates.length === 0) {\n            return false;\n        }\n        const lowerBound = this.beginningOfPeriod(dates[0]);\n        const upperBound = this.beginningOfPeriod(addMonths(dates[dates.length - 1], 1));\n        return lowerBound <= date && date < upperBound;\n    }\n    isInRange(candidate, min, max) {\n        const value = getDate(candidate);\n        const aboveMin = !min || getDate(min) <= value;\n        const belowMax = !max || value <= getDate(max);\n        return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n        if (!date) {\n            return date;\n        }\n        return createDate(date.getFullYear(), date.getMonth(), 1);\n    }\n    isRangeStart(value) {\n        return !value.getMonth();\n    }\n    move(value, action) {\n        const modifier = ACTIONS$2[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    }\n    cellTitle(value) {\n        return this._intlService.formatDate(value, 'D');\n    }\n    navigationTitle(value) {\n        if (!value) {\n            return '';\n        }\n        return this.isRangeStart(value) ? value.getFullYear().toString() : this.abbrMonthNames()[value.getMonth()];\n    }\n    title(current) {\n        return `${this.wideMonthNames()[current.getMonth()]} ${current.getFullYear()}`;\n    }\n    rowLength(prependCell) {\n        return CELLS_LENGTH$2 + (prependCell ? 1 : 0);\n    }\n    skip(value, min) {\n        return durationInMonths(min, value);\n    }\n    total(min, max) {\n        return durationInMonths(min, max) + 1;\n    }\n    value(current) {\n        return current ? current.getDate().toString() : \"\";\n    }\n    viewDate(date, max, viewsCount = 1) {\n        const viewsInRange = this.total(date, max);\n        if (viewsInRange < viewsCount) {\n            const monthsToSubtract = viewsCount - viewsInRange;\n            return addMonths(date, -1 * monthsToSubtract);\n        }\n        return date;\n    }\n    isWeekend(date) {\n        const { start, end } = this._intlService.weekendRange();\n        const day = date.getDay();\n        if (end < start) {\n            return day <= end || start <= day;\n        }\n        return start <= day && day <= end;\n    }\n    abbrMonthNames() {\n        return this._intlService.dateFormatNames({ nameType: 'abbreviated', type: 'months' });\n    }\n    normalize(cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    }\n    wideMonthNames() {\n        return this._intlService.dateFormatNames({ nameType: 'wide', type: 'months' });\n    }\n}\nMonthViewService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMonthViewService.ctorParameters = () => [\n    { type: IntlService }\n];\n\n/* tslint:disable:object-literal-sort-keys */\nconst EMPTY_DATA$3 = [[]];\nconst CELLS_LENGTH$3 = 5;\nconst ROWS_LENGTH$3 = 3;\nconst upStep = (month) => {\n    if (month > 4) {\n        return -5;\n    }\n    if (month < 2) {\n        return -2;\n    }\n    return -7;\n};\nconst downStep = (month) => {\n    if (month < 7) {\n        return 5;\n    }\n    if (month < 10) {\n        return 7;\n    }\n    return 2;\n};\nconst ACTIONS$3 = {\n    [Action.Left]: (date) => addMonths(date, -1),\n    [Action.Up]: (date) => addMonths(date, upStep(date.getMonth())),\n    [Action.Right]: (date) => addMonths(date, 1),\n    [Action.Down]: (date) => addMonths(date, downStep(date.getMonth())),\n    [Action.PrevView]: (date) => addYears(date, -1),\n    [Action.NextView]: (date) => addYears(date, 1),\n    [Action.FirstInView]: (date) => firstMonthOfYear(date),\n    [Action.LastInView]: (date) => lastMonthOfYear(date)\n};\n/**\n * @hidden\n */\nclass YearViewService {\n    constructor(_intlService) {\n        this._intlService = _intlService;\n    }\n    addToDate(min, skip) {\n        return addYears(min, skip);\n    }\n    datesList(start, count) {\n        return range(0, count).map(i => addYears(start, i));\n    }\n    data(options) {\n        const { cellUID, focusedDate, isActiveView, max, min, selectedDate, selectionRange = EMPTY_SELECTIONRANGE, viewDate } = options;\n        if (!viewDate) {\n            return EMPTY_DATA$3;\n        }\n        const months = this.abbrMonthNames();\n        const isSelectedDateInRange = isInRange(selectedDate, min, max);\n        const firstDate = firstMonthOfYear(viewDate);\n        const lastDate = lastMonthOfYear(viewDate);\n        const currentYear = firstDate.getFullYear();\n        const cells = range(0, CELLS_LENGTH$3);\n        const today = getToday();\n        return range(0, ROWS_LENGTH$3).map(rowOffset => {\n            const baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH$3);\n            return cells.map(cellOffset => {\n                const cellDate = this.normalize(addMonths(baseDate, cellOffset), min, max);\n                const changedYear = currentYear < cellDate.getFullYear();\n                if (!this.isInRange(cellDate, min, max) || changedYear) {\n                    return null;\n                }\n                const isRangeStart = this.isEqual(cellDate, selectionRange.start);\n                const isRangeEnd = this.isEqual(cellDate, selectionRange.end);\n                const isInMiddle = !isRangeStart && !isRangeEnd;\n                const isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);\n                return {\n                    formattedValue: months[cellDate.getMonth()],\n                    id: `${cellUID}${cellDate.getTime()}`,\n                    isFocused: this.isEqual(cellDate, focusedDate),\n                    isSelected: isActiveView && isSelectedDateInRange && this.isEqual(cellDate, selectedDate),\n                    isWeekend: false,\n                    isRangeStart: isRangeStart,\n                    isRangeMid: isRangeMid,\n                    isRangeEnd: isRangeEnd,\n                    isRangeSplitEnd: isRangeMid && this.isEqual(cellDate, lastDate),\n                    isRangeSplitStart: isRangeMid && this.isEqual(cellDate, firstDate),\n                    isToday: this.isEqual(cellDate, today),\n                    title: this.cellTitle(cellDate),\n                    value: cellDate\n                };\n            });\n        });\n    }\n    isEqual(candidate, expected) {\n        if (!candidate || !expected) {\n            return false;\n        }\n        return candidate.getFullYear() === expected.getFullYear() &&\n            candidate.getMonth() === expected.getMonth();\n    }\n    isInArray(date, dates) {\n        if (!dates.length) {\n            return false;\n        }\n        const year = date.getFullYear();\n        return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();\n    }\n    isInRange(candidate, min, max) {\n        const candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);\n        const aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;\n        const belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);\n        return aboveMin && belowMax;\n    }\n    beginningOfPeriod(date) {\n        if (!date) {\n            return date;\n        }\n        return createDate(date.getFullYear(), 0, 1);\n    }\n    isRangeStart(value) {\n        return value.getFullYear() % 10 === 0;\n    }\n    move(value, action) {\n        const modifier = ACTIONS$3[action];\n        if (!modifier) {\n            return value;\n        }\n        return modifier(value);\n    }\n    cellTitle(value) {\n        return `${value.getFullYear()} ${this.value(value)}`;\n    }\n    navigationTitle(value) {\n        return this.title(value);\n    }\n    title(current) {\n        return current ? current.getFullYear().toString() : '';\n    }\n    rowLength(_) {\n        return CELLS_LENGTH$3;\n    }\n    skip(value, min) {\n        return durationInYears(min, value);\n    }\n    total(min, max) {\n        return durationInYears(min, max) + 1;\n    }\n    value(current) {\n        return current ? this.abbrMonthNames()[current.getMonth()] : '';\n    }\n    viewDate(date, max, viewsCount = 1) {\n        const viewsInRange = this.total(date, max);\n        if (viewsInRange < viewsCount) {\n            const yearsToSubtract = viewsCount - viewsInRange;\n            return addYears(date, -1 * yearsToSubtract);\n        }\n        return date;\n    }\n    abbrMonthNames() {\n        return this._intlService.dateFormatNames({ nameType: 'abbreviated', type: 'months' });\n    }\n    normalize(cellDate, min, max) {\n        if (cellDate < min && this.isEqual(cellDate, min)) {\n            return cloneDate(min);\n        }\n        if (cellDate > max && this.isEqual(cellDate, max)) {\n            return cloneDate(max);\n        }\n        return cellDate;\n    }\n}\nYearViewService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nYearViewService.ctorParameters = () => [\n    { type: IntlService }\n];\n\n/**\n * @hidden\n *\n * The Enum which defines all possible Calendar view types.\n */\nvar CalendarViewEnum;\n(function (CalendarViewEnum) {\n    CalendarViewEnum[CalendarViewEnum[\"month\"] = 0] = \"month\";\n    CalendarViewEnum[CalendarViewEnum[\"year\"] = 1] = \"year\";\n    CalendarViewEnum[CalendarViewEnum[\"decade\"] = 2] = \"decade\";\n    CalendarViewEnum[CalendarViewEnum[\"century\"] = 3] = \"century\";\n})(CalendarViewEnum || (CalendarViewEnum = {}));\n\nconst services = {\n    [CalendarViewEnum.month]: MonthViewService,\n    [CalendarViewEnum.year]: YearViewService,\n    [CalendarViewEnum.decade]: DecadeViewService,\n    [CalendarViewEnum.century]: CenturyViewService\n};\nconst viewOffset = (view, offset) => {\n    const candidate = CalendarViewEnum[CalendarViewEnum[view + offset]];\n    return candidate !== undefined ? candidate : view;\n};\n/**\n * @hidden\n */\nclass BusViewService {\n    constructor(injector) {\n        this.injector = injector;\n        this.viewChanged = new EventEmitter();\n        this.bottom = CalendarViewEnum.month;\n        this.top = CalendarViewEnum.century;\n    }\n    configure(bottom, top) {\n        this.bottom = bottom;\n        this.top = top;\n    }\n    service(view) {\n        const serviceType = services[view];\n        return serviceType ? this.injector.get(serviceType) : null;\n    }\n    moveDown(view) {\n        this.move(view, -1);\n    }\n    moveUp(view) {\n        this.move(view, 1);\n    }\n    moveToBottom(activeView) {\n        if (activeView === this.bottom) {\n            return;\n        }\n        this.viewChanged.emit({ view: this.bottom });\n    }\n    canMoveDown(view) {\n        return this.bottom < view;\n    }\n    canMoveUp(view) {\n        return view < this.top;\n    }\n    clamp(view) {\n        if (view < this.bottom) {\n            return this.bottom;\n        }\n        if (view > this.top) {\n            return this.top;\n        }\n        return view;\n    }\n    move(view, offset) {\n        const candidate = this.clamp(viewOffset(view, offset));\n        if (candidate === view) {\n            return;\n        }\n        this.viewChanged.emit({ view: candidate });\n    }\n}\nBusViewService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBusViewService.ctorParameters = () => [\n    { type: Injector }\n];\n\nconst div = domContainerFactory('div');\nconst ul = domContainerFactory('ul');\nconst li = domContainerFactory('li');\nconst td = domContainerFactory('td');\nconst th = domContainerFactory('th');\nconst tr = domContainerFactory('tr');\nconst tbody = domContainerFactory('tbody');\nconst thead = domContainerFactory('thead');\nconst table = domContainerFactory('table');\nconst monthHeader = () => (div(`\n            <span class=\"k-button k-bare k-title\">March 2017</span>\n            <span class=\"k-today\">TODAY</span>\n        `, 'k-calendar-header'));\nconst monthWeekHeader = () => (table([\n    thead([\n        tr([th('MO')])\n    ])\n], 'k-calendar-weekdays'));\nconst repeat = (count, mapper) => new Array(count).fill('1').map(mapper);\nconst content = (rows, cells = 1) => (table([\n    tbody([tr([th('1')])].concat(repeat(rows, () => tr(repeat(cells, c => td(`<span class=\"k-link\">${c}</span>`))))))\n]));\nconst scrollable = (children) => div(children, 'k-content k-scrollable');\nconst view = (contentElement, className, renderWeekHeader) => (div([\n    monthHeader(),\n    renderWeekHeader ? monthWeekHeader() : null,\n    scrollable([contentElement, contentElement])\n], className, { left: '-10000px', position: 'absolute' }));\nconst ɵ6 = () => {\n    let navElement;\n    return () => {\n        if (!isDocumentAvailable) {\n            return null;\n        }\n        if (!navElement) {\n            navElement = div([scrollable([ul([li('<span>FEB</span>')])])], 'k-calendar-navigation', { left: '0px', position: 'absolute' });\n        }\n        return navElement;\n    };\n};\nconst navigationList = (ɵ6)();\nconst viewFactory = ({ cells, rows }, className, renderWeekHeader) => {\n    let viewElement;\n    return () => {\n        if (!isDocumentAvailable) {\n            return null;\n        }\n        if (!viewElement) {\n            viewElement = view(content(rows, cells), className, renderWeekHeader);\n        }\n        return viewElement;\n    };\n};\nconst getScrollable = (element) => element.querySelector('.k-scrollable');\nconst horizontal = element => {\n    const scrollableElement = getScrollable(element);\n    scrollableElement.classList.add('k-scrollable-horizontal');\n    return element;\n};\nconst monthView = viewFactory({ cells: 7, rows: 6 }, 'k-calendar-view k-calendar-monthview', true);\nconst yearView = viewFactory({ cells: 5, rows: 3 }, 'k-calendar-view k-calendar-yearview', false);\nconst decadeView = viewFactory({ cells: 5, rows: 2 }, 'k-calendar-view k-calendar-decadeview', false);\nconst horzMonthView = () => horizontal(monthView());\nconst horzYearView = () => horizontal(yearView());\nconst horzDecadeView = () => horizontal(decadeView());\nconst height = (element) => (parseFloat(window.getComputedStyle(element).height) || element.offsetHeight);\nconst width = (element) => {\n    const styles = window.getComputedStyle(element);\n    const computed = parseFloat(styles.width)\n        + parseFloat(styles.paddingLeft)\n        + parseFloat(styles.paddingRight);\n    return computed || element.offsetWidth;\n};\nconst getBody = (element) => element.querySelector('tbody');\n/**\n * @hidden\n */\nclass CalendarDOMService {\n    ensureHeights() {\n        if (this.calendarHeight !== undefined) {\n            return;\n        }\n        this.calculateHeights();\n    }\n    calculateHeights(container) {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.hostContainer = container;\n        this.batch(monthView(), (contentElement) => {\n            const viewElement = getBody(contentElement);\n            this.calendarHeight = height(contentElement);\n            this.monthViewHeight = height(viewElement);\n            this.headerHeight = height(viewElement.children[0]);\n            this.scrollableContentHeight = height(getScrollable(contentElement));\n        });\n        this.batch(horzMonthView(), (contentElement) => {\n            const viewElement = getBody(contentElement);\n            this.calendarWidth = width(contentElement);\n            this.monthViewWidth = width(viewElement);\n            this.scrollableContentWidth = width(getScrollable(contentElement));\n        });\n        this.batch(yearView(), (contentElement) => {\n            this.yearViewHeight = height(getBody(contentElement));\n            this.scrollableYearContentHeight = height(getScrollable(contentElement));\n        });\n        this.batch(horzYearView(), (contentElement) => {\n            this.yearViewWidth = width(getBody(contentElement));\n        });\n        this.batch(decadeView(), (contentElement) => {\n            this.decadeViewHeight = height(getBody(contentElement));\n            this.centuryViewHeight = this.decadeViewHeight;\n        });\n        this.batch(horzDecadeView(), (contentElement) => {\n            this.decadeViewWidth = width(getBody(contentElement));\n            this.centuryViewWidth = this.decadeViewWidth;\n        });\n        this.batch(navigationList(), (contentElement) => {\n            this.navigationItemHeight = height(contentElement.querySelector('li'));\n        });\n    }\n    viewHeight(viewType) {\n        return this.viewDimension(viewType, 'height');\n    }\n    viewWidth(viewType) {\n        return this.viewDimension(viewType, 'width');\n    }\n    viewDimension(viewType, dimension) {\n        const viewProp = dimension === 'height' ? 'ViewHeight' : 'ViewWidth';\n        switch (viewType) {\n            case CalendarViewEnum.month:\n                return this[`month${viewProp}`];\n            case CalendarViewEnum.year:\n                return this[`year${viewProp}`];\n            case CalendarViewEnum.decade:\n                return this[`decade${viewProp}`];\n            case CalendarViewEnum.century:\n                return this[`century${viewProp}`];\n            default:\n                return 1;\n        }\n    }\n    batch(contentElement, action) {\n        const hostContainer = this.hostContainer || document.body;\n        const appendedContent = hostContainer.appendChild(contentElement);\n        action(appendedContent);\n        hostContainer.removeChild(appendedContent);\n    }\n}\nCalendarDOMService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nconst update = (arr, idx, value) => ([\n    ...arr.slice(0, idx + 1),\n    ...(arr.slice(idx + 1).map(x => x + value))\n]);\n/**\n * @hidden\n */\nclass RowHeightService {\n    constructor(total = 0, rowHeight, detailRowHeight) {\n        this.total = total;\n        this.rowHeight = rowHeight;\n        this.detailRowHeight = detailRowHeight;\n        this.offsets = [];\n        this.heights = [];\n        let agg = 0;\n        for (let idx = 0; idx < total; idx++) {\n            this.offsets.push(agg);\n            agg += rowHeight;\n            this.heights.push(rowHeight);\n        }\n    }\n    height(rowIndex) {\n        return this.heights[rowIndex];\n    }\n    expandDetail(rowIndex) {\n        if (this.height(rowIndex) === this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight);\n        }\n    }\n    collapseDetail(rowIndex) {\n        if (this.height(rowIndex) > this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n        }\n    }\n    index(position) {\n        if (position < 0) {\n            return undefined;\n        }\n        const result = this.offsets.reduce((prev, current, idx) => {\n            if (prev !== undefined) {\n                return prev;\n            }\n            else if (current === position) {\n                return idx;\n            }\n            else if (current > position) {\n                return idx - 1;\n            }\n            return undefined;\n        }, undefined); // tslint:disable-line:align\n        return result === undefined ? this.total - 1 : result;\n    }\n    offset(rowIndex) {\n        return this.offsets[rowIndex];\n    }\n    totalHeight() {\n        return this.heights.reduce((prev, curr) => prev + curr, 0);\n    }\n    updateRowHeight(rowIndex, value) {\n        this.heights[rowIndex] += value;\n        this.offsets = update(this.offsets, rowIndex, value);\n    }\n}\n\nconst normalize = x => Math.max(x, 0);\n/**\n * @hidden\n */\nclass ScrollAction {\n    constructor(offset) {\n        this.offset = offset;\n    }\n}\n/**\n * @hidden\n */\nclass PageAction {\n    constructor(skip) {\n        this.skip = skip;\n    }\n}\n/**\n * @hidden\n */\nclass ScrollerService {\n    constructor(scrollObservable) {\n        this.scrollObservable = scrollObservable;\n        this.firstLoaded = 0;\n        this.bottomOffset = 0;\n        this.topOffset = 0;\n    }\n    create(rowHeightService, skip, take, total, topOffset = 0, bottomOffset = 0, direction = 'vertical') {\n        this.rowHeightService = rowHeightService;\n        this.firstLoaded = skip;\n        this.lastLoaded = skip + take;\n        this.take = take;\n        this.total = total;\n        this.lastScroll = 0;\n        this.topOffset = topOffset;\n        this.bottomOffset = bottomOffset;\n        this.direction = direction;\n        const subject = new ReplaySubject(2);\n        const offsetBufferRows = this.rowsForHeight(topOffset);\n        const skipWithOffset = normalize(skip - offsetBufferRows);\n        subject.next(new ScrollAction(this.rowOffset(skipWithOffset)));\n        if (offsetBufferRows) {\n            subject.next(new PageAction(skipWithOffset));\n        }\n        this.subscription = Observable.create(observer => {\n            this.unsubscribe();\n            this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n        }).subscribe(x => subject.next(x));\n        return subject;\n    }\n    destroy() {\n        this.unsubscribe();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    onScroll({ scrollLeft, scrollTop, offsetHeight, offsetWidth }, observer) {\n        const scrollPosition = this.direction === 'vertical' ? scrollTop : scrollLeft;\n        const offsetSize = this.direction === 'vertical' ? offsetHeight : offsetWidth;\n        if (this.lastScroll === scrollPosition) {\n            return;\n        }\n        const up = this.lastScroll >= scrollPosition;\n        this.lastScroll = scrollPosition;\n        const firstItemIndex = this.rowHeightService.index(normalize(scrollPosition - this.topOffset));\n        const lastItemIndex = this.rowHeightService.index(normalize(scrollPosition + offsetSize - this.bottomOffset));\n        if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n            this.firstLoaded = firstItemIndex;\n            observer.next(new ScrollAction(this.rowOffset(firstItemIndex)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            observer.next(new PageAction(this.firstLoaded));\n        }\n        if (up && firstItemIndex <= this.firstLoaded) {\n            const nonVisibleBuffer = Math.floor(this.take * 0.3);\n            this.firstLoaded = normalize(firstItemIndex - nonVisibleBuffer);\n            observer.next(new ScrollAction(this.rowOffset(this.firstLoaded)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            observer.next(new PageAction(this.firstLoaded));\n        }\n    }\n    rowOffset(index) {\n        return this.rowHeightService.offset(index) + this.topOffset;\n    }\n    rowsForHeight(height) {\n        return Math.ceil(height / this.rowHeightService.height(0));\n    }\n    unsubscribe() {\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n            this.scrollSubscription = null;\n        }\n    }\n}\n\n/* tslint:disable:component-selector-name  component-selector-type */\n/**\n * @hidden\n */\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('dateinputs-scroll-service-factory');\n/**\n * @hidden\n */\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n    return new ScrollerService(observable);\n}\n/**\n * @hidden\n */\nvar ScrollDirection;\n(function (ScrollDirection) {\n    ScrollDirection[ScrollDirection[\"Backward\"] = 0] = \"Backward\";\n    ScrollDirection[ScrollDirection[\"Forward\"] = 1] = \"Forward\";\n})(ScrollDirection || (ScrollDirection = {}));\nconst FRAME_DURATION = 17;\nconst scrollModifiers = {\n    [ScrollDirection.Forward]: (step) => value => value + step,\n    [ScrollDirection.Backward]: (step) => value => value - step\n};\nconst scrollNormalizers = {\n    [ScrollDirection.Forward]: (end) => value => Math.min(value, end),\n    [ScrollDirection.Backward]: (end) => value => Math.max(value, end)\n};\nconst scrollValidators = {\n    [ScrollDirection.Forward]: end => start => start < end,\n    [ScrollDirection.Backward]: end => start => start > end\n};\nconst differenceToScroll = (scrollTop, staticOffset, maxScrollDifference) => {\n    return Math.min(Math.abs(staticOffset - scrollTop), maxScrollDifference);\n};\n/**\n * @hidden\n */\nclass VirtualizationComponent {\n    constructor(scrollerFactory, container, renderer, zone) {\n        this.container = container;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.direction = 'vertical';\n        this.itemHeight = 1;\n        this.itemWidth = 1;\n        this.topOffset = 0;\n        this.bottomOffset = 0;\n        this.maxScrollDifference = 100;\n        this.scrollOffsetSize = 0;\n        this.scrollDuration = 150;\n        this.activeIndexChange = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.scrollChange = new EventEmitter();\n        this.resolvedPromise = Promise.resolve(null);\n        this.dispatcher = new Subject();\n        this.scroller = scrollerFactory(this.dispatcher);\n    }\n    get totalVertexLength() {\n        const value = `${this.totalSize}px`;\n        return this.direction === 'vertical' ? { height: value } : { width: value };\n    }\n    get containerOffsetSize() {\n        return this.getContainerProperty(this.direction === 'vertical' ? 'offsetHeight' : 'offsetWidth');\n    }\n    get containerScrollSize() {\n        return this.getContainerProperty(this.direction === 'vertical' ? 'scrollHeight' : 'scrollWidth');\n    }\n    get containerScrollPosition() {\n        return this.getContainerProperty(this.direction === 'vertical' ? 'scrollTop' : 'scrollLeft');\n    }\n    get wrapperClasses() {\n        return true;\n    }\n    get horizontalClass() {\n        return this.direction === 'horizontal';\n    }\n    ngOnChanges(changes) {\n        if (changes.direction || changes.take || changes.total) {\n            this.initServices();\n            this.totalSize = this.rowHeightService.totalHeight() + this.bottomOffset;\n        }\n    }\n    ngOnInit() {\n        if (!this.rowHeightService) {\n            this.rowHeightService = this.createRowHeightService();\n        }\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            this.containerScrollSubscription = this.scroll$()\n                .pipe(map((event) => event.target))\n                .subscribe(t => {\n                this.dispatcher.next(t);\n                this.emitActiveIndex();\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.containerScrollSubscription) {\n            this.containerScrollSubscription.unsubscribe();\n        }\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n        if (this.animationSubscription) {\n            this.animationSubscription.unsubscribe();\n        }\n    }\n    getContainerProperty(propertyName) {\n        return this.container.nativeElement[propertyName];\n    }\n    activeIndex() {\n        return this.itemIndex(Math.ceil(this.containerScrollPosition)); //handle subpixeling\n    }\n    itemIndex(offset) {\n        return this.rowHeightService.index(offset);\n    }\n    itemOffset(index) {\n        return this.rowHeightService.offset(index);\n    }\n    isIndexVisible(index) {\n        if (!this.rowHeightService) {\n            return false;\n        }\n        const containerTop = this.containerScrollPosition;\n        const containerBottom = containerTop + this.containerOffsetSize;\n        const top = this.rowHeightService.offset(index);\n        const bottom = top + this.rowHeightService.height(index);\n        return top >= containerTop && bottom <= containerBottom;\n    }\n    isListScrolled(index) {\n        return this.containerScrollPosition !== this.rowHeightService.offset(index);\n    }\n    scrollTo(value) {\n        const scrollProperty = this.direction === \"vertical\" ? 'scrollTop' : 'scrollLeft';\n        this.renderer.setProperty(this.container.nativeElement, scrollProperty, value);\n    }\n    scrollToIndex(index) {\n        //XXX: scrolling with tick is required to prevent list jump in Chrome.\n        //Original issue: focus first day in the month and press LEFT arrow.\n        //Notice how the view jumps on every day change.\n        //\n        this.zone.runOutsideAngular(() => {\n            this.resolvedPromise.then(() => {\n                this.scrollTo(this.rowHeightService.offset(index));\n            });\n        });\n    }\n    scrollToBottom() {\n        this.scrollTo(this.totalSize);\n    }\n    animateToIndex(index) {\n        if (this.animationSubscription) {\n            this.animationSubscription.unsubscribe();\n        }\n        const indexOffset = this.rowHeightService.offset(index);\n        const direction = this.getContainerScrollDirection(indexOffset);\n        const { start, end } = this.scrollRange(indexOffset, direction);\n        if (start === end) {\n            return;\n        }\n        const step = this.scrollStep(start, end);\n        const modifyScroll = scrollModifiers[direction](step);\n        const normalizeScroll = scrollNormalizers[direction](end);\n        const isScrollValid = scrollValidators[direction](modifyScroll(end));\n        this.zone.runOutsideAngular(() => {\n            this.animationSubscription =\n                combineLatest(of(start), interval(0, animationFrameScheduler)).pipe(map(stream => stream[0]), scan(modifyScroll), takeWhile(isScrollValid), map(normalizeScroll)).subscribe((x) => this.scrollTo(x));\n        });\n    }\n    scrollRange(indexOffset, direction) {\n        const containerScroll = this.containerScrollPosition;\n        if (parseInt(indexOffset, 10) === parseInt(containerScroll, 10)) {\n            return { start: indexOffset, end: indexOffset };\n        }\n        const maxScroll = this.containerMaxScroll();\n        const sign = direction === ScrollDirection.Backward ? 1 : -1;\n        const difference = differenceToScroll(containerScroll, indexOffset, this.maxScrollDifference);\n        const end = Math.min(indexOffset, maxScroll);\n        const start = Math.min(Math.max(end + (sign * difference), 0), maxScroll);\n        return { start, end };\n    }\n    scrollStep(start, end) {\n        return Math.abs(end - start) / (this.scrollDuration / FRAME_DURATION);\n    }\n    scroll$() {\n        return isDocumentAvailable() ? fromEvent(this.container.nativeElement, 'scroll') : EMPTY;\n    }\n    initServices() {\n        this.rowHeightService = this.createRowHeightService();\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n        this.scrollSubscription = this.scroller\n            .create(this.rowHeightService, this.skip, this.take, this.total, this.topOffset, this.scrollOffsetSize, this.direction)\n            .subscribe((x) => {\n            if (x instanceof PageAction) {\n                this.pageChange.emit(x);\n            }\n            else {\n                this.scrollChange.emit(x);\n            }\n        });\n    }\n    createRowHeightService() {\n        const dimension = this.direction === 'vertical' ? this.itemHeight : this.itemWidth;\n        return new RowHeightService(this.total, dimension, 0);\n    }\n    emitActiveIndex() {\n        const index = this.rowHeightService.index(this.containerScrollPosition - this.topOffset);\n        if (this.lastActiveIndex !== index) {\n            this.lastActiveIndex = index;\n            this.activeIndexChange.emit(index);\n        }\n    }\n    containerMaxScroll() {\n        return this.containerScrollSize - this.containerOffsetSize;\n    }\n    getContainerScrollDirection(indexOffset) {\n        return indexOffset < this.containerScrollPosition ? ScrollDirection.Backward : ScrollDirection.Forward;\n    }\n}\nVirtualizationComponent.decorators = [\n    { type: Component, args: [{\n                providers: [{\n                        provide: SCROLLER_FACTORY_TOKEN,\n                        useValue: DEFAULT_SCROLLER_FACTORY\n                    }],\n                selector: 'kendo-virtualization',\n                template: `\n    <ng-content></ng-content>\n    <div\n        class=\"k-scrollable-placeholder\"\n        [class.k-scrollable-horizontal-placeholder]=\"direction === 'horizontal'\"\n        [ngStyle]=\"totalVertexLength\"\n    ></div>\n  `\n            },] },\n];\n/** @nocollapse */\nVirtualizationComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [SCROLLER_FACTORY_TOKEN,] }] },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nVirtualizationComponent.propDecorators = {\n    direction: [{ type: Input }],\n    itemHeight: [{ type: Input }],\n    itemWidth: [{ type: Input }],\n    topOffset: [{ type: Input }],\n    bottomOffset: [{ type: Input }],\n    maxScrollDifference: [{ type: Input }],\n    scrollOffsetSize: [{ type: Input }],\n    scrollDuration: [{ type: Input }],\n    skip: [{ type: Input }],\n    take: [{ type: Input }],\n    total: [{ type: Input }],\n    activeIndexChange: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    scrollChange: [{ type: Output }],\n    wrapperClasses: [{ type: HostBinding, args: ['class.k-content',] }, { type: HostBinding, args: ['class.k-scrollable',] }],\n    horizontalClass: [{ type: HostBinding, args: ['class.k-scrollable-horizontal',] }]\n};\n\n/**\n * @hidden\n */\nconst closestInScope = (node, predicate, scope) => {\n    while (node && node !== scope && !predicate(node)) {\n        node = node.parentNode;\n    }\n    if (node !== scope) {\n        return node;\n    }\n};\n/**\n * @hidden\n */\nconst closest = (node, predicate) => {\n    while (node && !predicate(node)) {\n        node = node.parentNode;\n    }\n    return node;\n};\n\n/* tslint:disable:component-selector-name  component-selector-type */\nconst ITEMS_COUNT = 30;\n/**\n * @hidden\n */\nclass NavigationComponent {\n    constructor(bus, dom, intl, cdr, renderer) {\n        this.bus = bus;\n        this.dom = dom;\n        this.intl = intl;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.min = new Date(MIN_DATE);\n        this.max = new Date(MAX_DATE);\n        this.focusedDate = new Date();\n        this.valueChange = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.dates = [];\n        this.take = ITEMS_COUNT;\n        this.indexToScroll = -1;\n    }\n    get getComponentClass() {\n        return true;\n    }\n    ngOnInit() {\n        this.dom.ensureHeights();\n        const calendarHeight = this.dom.calendarHeight;\n        this.itemHeight = this.dom.navigationItemHeight;\n        this.maxViewHeight = this.dom.monthViewHeight;\n        this.topOffset = (calendarHeight - this.itemHeight) / 2;\n        this.bottomOffset = calendarHeight - this.itemHeight;\n        this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    ngOnChanges(changes) {\n        this.service = this.bus.service(this.activeView);\n        if (!this.service) {\n            return;\n        }\n        this.activeViewValue = CalendarViewEnum[this.activeView];\n        const viewDate = dateInRange(this.focusedDate, this.min, this.max);\n        const total = this.service.total(this.min, this.max);\n        const totalChanged = this.total && this.total !== total;\n        this.skip = this.service.skip(viewDate, this.min);\n        this.total = total;\n        if (totalChanged || !this.service.isInArray(viewDate, this.dates)) {\n            this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n        }\n        if (!!changes.focusedDate || totalChanged) {\n            this.indexToScroll = this.service.skip(this.focusedDate, this.min);\n        }\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization.scrollToIndex(this.indexToScroll);\n        this.indexToScroll = -1;\n    }\n    ngAfterViewChecked() {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization.scrollToIndex(this.indexToScroll);\n        this.indexToScroll = -1;\n    }\n    onPageChange({ skip }) {\n        this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n        this.pageChange.emit();\n    }\n    scrollChange({ offset }) {\n        const el = this.list.nativeElement;\n        const translate = `translateY(${offset}px)`;\n        this.renderer.setStyle(el, 'transform', translate);\n        this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n    handleDateChange(args) {\n        const item = closestInScope(args.target, node => node.hasAttribute('data-date-index'), this.list.nativeElement);\n        if (item) {\n            const index = parseInt(item.getAttribute('data-date-index'), 10);\n            const candidate = this.dates[index];\n            this.valueChange.emit(cloneDate(candidate));\n        }\n    }\n    getTake(skip) {\n        return Math.min(this.total - skip, this.take);\n    }\n    intlChange() {\n        if (this.activeView === CalendarViewEnum.month) {\n            this.cdr.markForCheck();\n        }\n    }\n}\nNavigationComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-calendar-navigation',\n                template: `\n    <span class=\"k-calendar-navigation-highlight\"></span>\n    <kendo-virtualization\n        [skip]=\"skip\"\n        [take]=\"take\"\n        [total]=\"total\"\n        [itemHeight]=\"itemHeight\"\n        [topOffset]=\"topOffset\"\n        [bottomOffset]=\"bottomOffset\"\n        [maxScrollDifference]=\"maxViewHeight\"\n        (pageChange)=\"onPageChange($event)\"\n        (scrollChange)=\"scrollChange($event)\"\n    >\n        <ul #list class=\"k-reset\" [kendoEventsOutsideAngular]=\"{ click: handleDateChange }\" [scope]=\"this\">\n            <li *kFor=\"let date of dates; let index=index\" [attr.data-date-index]=\"index\">\n                <span [class.k-calendar-navigation-marker]=\"service.isRangeStart(date)\">\n                    <ng-template [ngIf]=\"!templateRef\">{{service.navigationTitle(date)}}</ng-template>\n                    <ng-template\n                        [ngIf]=\"templateRef\"\n                        [ngTemplateOutlet]=\"templateRef\"\n                        [ngTemplateOutletContext]=\"{ $implicit: service.navigationTitle(date), activeView: activeViewValue, date: date }\"\n                    ></ng-template>\n                </span>\n            </li>\n        </ul>\n    </kendo-virtualization>\n  `\n            },] },\n];\n/** @nocollapse */\nNavigationComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: CalendarDOMService },\n    { type: IntlService },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 }\n];\nNavigationComponent.propDecorators = {\n    activeView: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    templateRef: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    virtualization: [{ type: ViewChild, args: [VirtualizationComponent,] }],\n    list: [{ type: ViewChild, args: ['list', { static: true },] }],\n    getComponentClass: [{ type: HostBinding, args: [\"class.k-calendar-navigation\",] }]\n};\n\nconst VIEWS_COUNT = 5;\nconst isEqualMonthYear = (date1, date2) => (date1 && date2 &&\n    date1.getFullYear() === date2.getFullYear() &&\n    date1.getMonth() === date2.getMonth());\n/**\n * @hidden\n */\nclass ViewListComponent {\n    constructor(bus, cdr, intl, dom, renderer) {\n        this.bus = bus;\n        this.cdr = cdr;\n        this.intl = intl;\n        this.dom = dom;\n        this.renderer = renderer;\n        this.isActive = true;\n        this.min = new Date(MIN_DATE);\n        this.max = new Date(MAX_DATE);\n        this.activeDateChange = new EventEmitter();\n        this.valueChange = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.dates = [];\n        this.cols = [];\n        this.weekNames = [];\n        this.take = VIEWS_COUNT;\n        this.animateToIndex = true;\n        this.indexToScroll = -1;\n        this.minViewsToRender = 1;\n    }\n    get weekNumber() {\n        return this.showWeekNumbers && this.isMonthView();\n    }\n    set weekNumber(showWeekNumbers) {\n        this.showWeekNumbers = showWeekNumbers;\n    }\n    get getComponentClass() {\n        return true;\n    }\n    get getComponentMonthClass() {\n        return this.activeView === CalendarViewEnum.month;\n    }\n    get getComponentYearClass() {\n        return this.activeView === CalendarViewEnum.year;\n    }\n    get getComponentDecadeClass() {\n        return this.activeView === CalendarViewEnum.decade;\n    }\n    get getComponentCenturyClass() {\n        return this.activeView === CalendarViewEnum.century;\n    }\n    ngOnInit() {\n        this.weekNames = this.getWeekNames();\n        this.bottomOffset = this.getBottomOffset();\n        this.viewOffset = -1 * this.dom.headerHeight;\n        this.viewHeight = this.dom.viewHeight(this.activeView);\n        this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n    }\n    ngOnChanges(changes) {\n        this.service = this.bus.service(this.activeView);\n        if (!this.service) {\n            return;\n        }\n        this.cols = new Array(this.service.rowLength(this.weekNumber)).fill('');\n        this.colWidth = Math.round(100 / this.cols.length);\n        this.weekNames = hasChange(changes, 'weekNumber') && this.weekNumber ? this.getWeekNames() : this.weekNames;\n        const activeViewChanged = hasChange(changes, 'activeView');\n        const focusedDate = this.focusedDate;\n        const viewDate = dateInRange(this.service.viewDate(focusedDate, this.max, this.minViewsToRender), this.min, this.max);\n        const total = this.service.total(this.min, this.max);\n        const totalChanged = this.total && this.total !== total;\n        const generateDates = totalChanged || !this.service.isInArray(focusedDate, this.dates);\n        this.skip = this.service.skip(viewDate, this.min);\n        this.total = total;\n        this.animateToIndex = !activeViewChanged;\n        this.bottomOffset = this.getBottomOffset();\n        this.viewHeight = this.dom.viewHeight(this.activeView);\n        if (generateDates) {\n            this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n        }\n        if (!isEqualMonthYear(this.activeDate, focusedDate)) {\n            this.activeDate = cloneDate(focusedDate);\n        }\n        const updateIndex = hasChange(changes, 'focusedDate') || activeViewChanged;\n        if (generateDates || updateIndex || this.virtualization.isIndexVisible(this.skip)) {\n            this.indexToScroll = this.service.skip(focusedDate, this.min);\n        }\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization.scrollToIndex(this.indexToScroll);\n        this.indexToScroll = -1;\n    }\n    ngAfterViewChecked() {\n        if (this.indexToScroll === -1) {\n            return;\n        }\n        this.virtualization[this.animateToIndex ? 'animateToIndex' : 'scrollToIndex'](this.indexToScroll);\n        this.animateToIndex = true;\n        this.indexToScroll = -1;\n    }\n    onPageChange({ skip }) {\n        this.dates = this.service.datesList(this.service.addToDate(this.min, skip), this.getTake(skip));\n        this.pageChange.emit();\n    }\n    scrollChange({ offset }) {\n        const el = this.list.nativeElement;\n        const translate = `translateY(${offset}px)`;\n        this.renderer.setStyle(el, 'transform', translate);\n        this.renderer.setStyle(el, '-ms-transform', translate);\n    }\n    setActiveDate(index) {\n        const candidate = this.service.addToDate(this.min, index);\n        if (isEqual(this.activeDate, candidate)) {\n            return;\n        }\n        this.activeDate = candidate;\n        this.activeDateChange.emit(candidate);\n        this.cdr.detectChanges();\n    }\n    handleDateChange(candidate) {\n        this.valueChange.emit(candidate);\n    }\n    isMonthView() {\n        return this.activeView === CalendarViewEnum.month;\n    }\n    isScrolled() {\n        return this.virtualization.isListScrolled(this.service.skip(this.focusedDate, this.min));\n    }\n    getBottomOffset() {\n        return this.getScrollableHeight() - this.dom.viewHeight(this.activeView);\n    }\n    getScrollableHeight() {\n        return this.activeView === CalendarViewEnum.month ?\n            this.dom.scrollableContentHeight :\n            this.dom.scrollableYearContentHeight;\n    }\n    getTake(skip) {\n        return Math.min(this.total - skip, this.take);\n    }\n    getWeekNames() {\n        const weekNames = shiftWeekNames(this.intl.dateFormatNames({ nameType: 'short', type: 'days' }), this.intl.firstDay());\n        return this.weekNumber ? [''].concat(weekNames) : weekNames;\n    }\n    intlChange() {\n        this.weekNames = this.getWeekNames();\n        if (this.isMonthView()) {\n            this.cdr.markForCheck();\n        }\n    }\n}\nViewListComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-calendar-viewlist',\n                template: `\n    <kendo-calendar-header\n        [currentDate]=\"activeDate\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [activeView]=\"activeView\"\n        [templateRef]=\"headerTitleTemplateRef\"\n        (today)=\"handleDateChange($event)\"\n    >\n    </kendo-calendar-header>\n    <table class=\"k-calendar-weekdays\" style=\"table-layout: auto;\" *ngIf=\"isMonthView()\">\n        <thead>\n            <tr>\n                <th *ngFor=\"let name of weekNames\" [style.width.%]=\"colWidth\">{{name}}</th>\n            </tr>\n        </thead>\n    </table>\n    <kendo-virtualization\n        [tabindex]=\"-1\"\n        [skip]=\"skip\"\n        [take]=\"take\"\n        [total]=\"total\"\n        [itemHeight]=\"viewHeight\"\n        [topOffset]=\"viewOffset\"\n        [bottomOffset]=\"bottomOffset\"\n        [scrollOffsetSize]=\"viewOffset\"\n        [maxScrollDifference]=\"viewHeight\"\n        (pageChange)=\"onPageChange($event)\"\n        (scrollChange)=\"scrollChange($event)\"\n        (activeIndexChange)=\"setActiveDate($event)\"\n        >\n        <table #list>\n            <colgroup><col *ngFor=\"let _ of cols\" /></colgroup>\n\n            <tbody *kFor=\"let date of dates\"\n                   kendoCalendarView\n                   role=\"rowgroup\"\n                   [activeView]=\"activeView\"\n                   [isActive]=\"isActive\"\n                   [min]=\"min\" [max]=\"max\"\n                   [cellUID]=\"cellUID\"\n                   [focusedDate]=\"focusedDate\"\n                   [selectedDate]=\"value\"\n                   [weekNumber]=\"weekNumber\"\n                   [templateRef]=\"cellTemplateRef\"\n                   [weekNumberTemplateRef]=\"weekNumberTemplateRef\"\n                   [viewDate]=\"date\"\n                   (change)=\"handleDateChange($event)\"\n            ></tbody>\n        </table>\n    </kendo-virtualization>\n  `\n            },] },\n];\n/** @nocollapse */\nViewListComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: ChangeDetectorRef },\n    { type: IntlService },\n    { type: CalendarDOMService },\n    { type: Renderer2 }\n];\nViewListComponent.propDecorators = {\n    cellTemplateRef: [{ type: Input }],\n    weekNumberTemplateRef: [{ type: Input }],\n    headerTitleTemplateRef: [{ type: Input }],\n    activeView: [{ type: Input }],\n    cellUID: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    isActive: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    value: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    activeDateChange: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    virtualization: [{ type: ViewChild, args: [VirtualizationComponent,] }],\n    list: [{ type: ViewChild, args: ['list', { static: true },] }],\n    getComponentClass: [{ type: HostBinding, args: [\"class.k-calendar-view\",] }],\n    getComponentMonthClass: [{ type: HostBinding, args: [\"class.k-calendar-monthview\",] }],\n    getComponentYearClass: [{ type: HostBinding, args: [\"class.k-calendar-yearview\",] }],\n    getComponentDecadeClass: [{ type: HostBinding, args: [\"class.k-calendar-decadeview\",] }],\n    getComponentCenturyClass: [{ type: HostBinding, args: [\"class.k-calendar-centuryview\",] }]\n};\n\nconst KEY_TO_ACTION = {\n    '33': Action.PrevView,\n    '34': Action.NextView,\n    '35': Action.LastInView,\n    '36': Action.FirstInView,\n    '37': Action.Left,\n    '38': Action.Up,\n    '39': Action.Right,\n    '40': Action.Down,\n    'meta+38': Action.UpperView,\n    'meta+40': Action.LowerView\n};\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(bus) {\n        this.bus = bus;\n    }\n    action(event) {\n        const action = `${event.ctrlKey || event.metaKey ? 'meta+' : ''}${event.keyCode}`;\n        return KEY_TO_ACTION[action];\n    }\n    move(value, action, activeView) {\n        const service = this.bus.service(activeView);\n        if (!service) {\n            return value;\n        }\n        if (action === Action.UpperView && this.bus.canMoveUp(activeView)) {\n            this.bus.moveUp(activeView);\n            return value;\n        }\n        if (action === Action.LowerView && this.bus.canMoveDown(activeView)) {\n            this.bus.moveDown(activeView);\n            return value;\n        }\n        return service.move(value, action);\n    }\n}\nNavigationService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNavigationService.ctorParameters = () => [\n    { type: BusViewService }\n];\n\nconst divideByMagnitude = (magnitude) => x => Math.floor(x / magnitude);\nconst powerByMagnitude = (magnitude) => x => x * magnitude;\n/**\n * @hidden\n */\nclass ScrollSyncService {\n    constructor(dom, zone) {\n        this.dom = dom;\n        this.zone = zone;\n    }\n    configure(activeView) {\n        const magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);\n        this.divideByMagnitude = divideByMagnitude(magnitude);\n        this.powerByMagnitude = powerByMagnitude(magnitude);\n    }\n    sync(navigator, view) {\n        this.unsubscribe();\n        if (!navigator || !view) {\n            return;\n        }\n        this.navigator = navigator;\n        this.view = view;\n        this.zone.runOutsideAngular(() => {\n            let navScrolled, monthScrolled;\n            this.navSubscription = navigator.scroll$()\n                .subscribe((e) => {\n                if (monthScrolled) {\n                    monthScrolled = false;\n                    return;\n                }\n                navScrolled = true;\n                this.scrollSiblingOf(e.target);\n            });\n            this.viewSubscription = view.scroll$()\n                .subscribe((e) => {\n                if (navScrolled) {\n                    navScrolled = false;\n                    return;\n                }\n                monthScrolled = true;\n                this.scrollSiblingOf(e.target);\n            });\n        });\n    }\n    scrollSiblingOf(scrolledElement) {\n        const component = this.siblingComponent(scrolledElement);\n        const scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);\n        component.scrollTo(scrollTop);\n    }\n    siblingComponent(scrollableElement) {\n        return this.navigator.container.nativeElement === scrollableElement ? this.view : this.navigator;\n    }\n    calculateScroll(component, scrollTop) {\n        const modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;\n        return modifier(scrollTop);\n    }\n    destroy() {\n        this.unsubscribe();\n    }\n    unsubscribe() {\n        if (this.navSubscription) {\n            this.navSubscription.unsubscribe();\n        }\n        if (this.viewSubscription) {\n            this.viewSubscription.unsubscribe();\n        }\n    }\n}\nScrollSyncService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nScrollSyncService.ctorParameters = () => [\n    { type: CalendarDOMService },\n    { type: NgZone }\n];\n\n/**\n * Used for rendering the cell content of the Calendar. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details\n * about the current cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * > `kendoCalendarCellTemplate` is equivalent to\n * > [`kendoCalendarMonthCellTemplate`]({% slug api_dateinputs_monthcelltemplatedirective %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarCellTemplate let-date>\n *      <span class=\"custom\">{{date.getDate()}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass CellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the month cell content of the Calendar. To define the month cell template, nest an `<ng-template>` tag\n * with the `kendoCalendarMonthCellTemplate` directive inside the component tag. The template context is set to the current\n * component. To get a reference to the current date, use the `let-date` directive. To provide more details about the current\n * month cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarMonthCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass MonthCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMonthCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarMonthCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nMonthCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the year cell content of the Calendar. To define the year cell template, nest an\n * `<ng-template>` tag with the `kendoCalendarYearCellTemplate` directive inside the component tag.\n * The template context is set to the current component. To get a reference to the current date, use\n * the `let-date` directive. To provide more details about the current year cell, get a reference to the\n * current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarYearCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'year';\n * }\n * ```\n */\nclass YearCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nYearCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarYearCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nYearCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the decade cell content of the Calendar. To define the decade cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarDecadeCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current decade cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarDecadeCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'decade';\n * }\n * ```\n */\nclass DecadeCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nDecadeCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarDecadeCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nDecadeCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the century cell content of the Calendar. To define the century cell template, nest an `<ng-template>`\n * tag with the `kendoCalendarCenturyCellTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current date, use the `let-date` directive. To provide more details about\n * the current century cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [activeView]=\"activeView\">\n *    <ng-template kendoCalendarCenturyCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent {\n *  public activeView: CalendarView = 'century';\n * }\n * ```\n */\nclass CenturyCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCenturyCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarCenturyCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nCenturyCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the week number cell content in the month view of the Calendar. To define the month week number cell template,\n * nest an `<ng-template>` tag with the `kendoCalendarWeekNumberCellTemplate` directive inside the component tag. The template\n * context is set to the current component. To get a reference to the current date, use the `let-date` directive. To provide more\n * details about the current week number cell, get a reference to the current `cellContext` by using the `let-cellContext` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar [weekNumber]=\"true\">\n *    <ng-template kendoCalendarWeekNumberCellTemplate let-context=\"cellContext\">\n *      <span class=\"custom\">{{context.formattedValue}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass WeekNumberCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nWeekNumberCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarWeekNumberCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nWeekNumberCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the header title of the Calendar. To define the header title template, nest an `<ng-template>` tag\n * with the `kendoCalendarHeaderTitleTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current title, use the `let-title` directive. To provide more details about\n * the current title, get a reference to the current `date` by using the `let-date` directive or get a reference to the\n * current active view  by using the `let-activeView` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarHeaderTitleTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass HeaderTitleTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nHeaderTitleTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarHeaderTitleTemplate]'\n            },] },\n];\n/** @nocollapse */\nHeaderTitleTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Used for rendering the navigation item of the Calendar. To define the navigation item template, nest an `<ng-template>`\n * tag with the `kendoCalendarNavigationItemTemplate` directive inside the component tag. The template context is set to the\n * current component. To get a reference to the current item value, use the `let-title` directive. To provide more details\n * about the current title, get a reference to the current `date` by using the `let-date='date'` directive or get a reference\n * to the current active view by using the `let-activeView='activeView'` directive.\n *\n * For more examples, refer to the article on [templates]({% slug templates_calendar %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * styles: ['.custom { color: red; }'],\n * template: `\n *  <kendo-calendar>\n *    <ng-template kendoCalendarNavigationItemTemplate let-title>\n *      <span class=\"custom\">{{title}}</span>\n *    </ng-template>\n *  </kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass NavigationItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNavigationItemTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoCalendarNavigationItemTemplate]'\n            },] },\n];\n/** @nocollapse */\nNavigationItemTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @hidden\n */\nclass PickerService {\n    constructor() {\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.sameDateSelected = new EventEmitter();\n    }\n}\n\n/**\n * @hidden\n */\nconst minValidator = (minValue) => {\n    return (control) => {\n        const err = {\n            minError: {\n                minValue: minValue,\n                value: control.value\n            }\n        };\n        if (!minValue || !control.value) {\n            return null;\n        }\n        return control.value < minValue ? err : null;\n    };\n};\n\n/**\n * @hidden\n */\nconst maxValidator = (maxValue) => {\n    return (control) => {\n        const err = {\n            maxError: {\n                maxValue: maxValue,\n                value: control.value\n            }\n        };\n        if (!maxValue || !control.value) {\n            return null;\n        }\n        return control.value > maxValue ? err : null;\n    };\n};\n\n/**\n * @hidden\n */\nconst requiresZoneOnBlur = (ngControl) => ngControl &&\n    (!ngControl.touched || (ngControl.control && ngControl.control.updateOn === 'blur'));\n/**\n * @hidden\n */\nconst preventDefault = (args) => args.preventDefault();\n/**\n * @hidden\n */\nconst currentFocusTarget = (blurArgs) => blurArgs.relatedTarget || document.activeElement;\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== undefined && value !== null;\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are numbers, returns `true.\n */\nconst isNumberArray = (value) => Array.isArray(value) && value.length > 0 && value.every(item => typeof item === 'number');\n/**\n * @hidden\n *\n * If the provided parameter is an array with at least one item\n * and all items in the array are dates, returns `true`.\n */\nconst isDateArray = (value) => Array.isArray(value) && value.length > 0 && value.every(item => item instanceof Date);\n\nconst noop$1 = () => false;\nconst DISABLED_DATES_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/disabled-dates/';\n/**\n * @hidden\n */\nclass DisabledDatesService {\n    constructor() {\n        /**\n         * Emits every time the `isDateDisabled` method changes.\n         */\n        this.changes = new Subject();\n        /**\n         * Based on the user-defined `disabledDates` input evaluates if the date is disabled.\n         * If not set, returns `false`.\n         */\n        this.isDateDisabled = noop$1;\n    }\n    /**\n     * Configures the `isDateDisabled` function.\n     *\n     * * If a function is provided, uses it as-is and passes each date to it for evaluation.\n     * The time part is set to `midnight`.\n     * * If a `Date[]` is provided, creates a function that checks the targeted date against\n     * the listed dates and, if the targeted date is listed, marks it as disabled.\n     * * If a `Day[]` is provided, creates a function that evaluates the provided days of the\n     * week as disabled.\n     */\n    initialize(disabledDates) {\n        if (typeof disabledDates === 'function') {\n            this.isDateDisabled = (date) => disabledDates(getDate(date));\n        }\n        else if (isNumberArray(disabledDates)) {\n            const disabledWeekDays = new Set(disabledDates);\n            this.isDateDisabled = (date) => disabledWeekDays.has(date.getDay());\n        }\n        else if (isDateArray(disabledDates)) {\n            const normalizedDisabledDates = new Set(disabledDates.map(date => getDate(date).getTime()));\n            this.isDateDisabled = (date) => normalizedDisabledDates.has(getDate(date).getTime());\n        }\n        else {\n            this.isDateDisabled = noop$1;\n            this.notifyInvalidInput(disabledDates);\n        }\n        this.notifyServiceChange();\n    }\n    notifyInvalidInput(disabledDates) {\n        if (isPresent(disabledDates) && isDevMode()) {\n            throw new Error(`The 'disabledDates' value should be a function, a Day array or a Date array. Check ${DISABLED_DATES_DOC_LINK} for more information.`);\n        }\n    }\n    notifyServiceChange() {\n        this.changes.next();\n    }\n}\nDisabledDatesService.decorators = [\n    { type: Injectable },\n];\n\n/* tslint:disable:no-forward-ref */\nconst BOTTOM_VIEW_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nconst TOP_VIEW_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nconst MIN_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nconst MAX_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nconst VALUE_DOC_LINK = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\nconst virtualizationProp = x => x ? x.virtualization : null;\n/**\n * @hidden\n */\nconst CALENDAR_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CalendarComponent) //tslint:disable-line:no-use-before-declare\n};\n/**\n * @hidden\n */\nconst CALENDAR_RANGE_VALIDATORS = {\n    multi: true,\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CalendarComponent) //tslint:disable-line:no-use-before-declare\n};\n/**\n * @hidden\n */\nconst KENDO_INPUT_PROVIDER = {\n    provide: KendoInput,\n    useExisting: forwardRef(() => CalendarComponent) //tslint:disable-line:no-use-before-declare\n};\n/**\n * Represents the [Kendo UI Calendar component for Angular]({% slug overview_calendar %}#toc-basic-usage).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-calendar></kendo-calendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass CalendarComponent {\n    constructor(bus, dom, element, navigator, renderer, cdr, ngZone, injector, scrollSyncService, disabledDatesService, pickerService) {\n        this.bus = bus;\n        this.dom = dom;\n        this.element = element;\n        this.navigator = navigator;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.ngZone = ngZone;\n        this.injector = injector;\n        this.scrollSyncService = scrollSyncService;\n        this.disabledDatesService = disabledDatesService;\n        this.pickerService = pickerService;\n        /**\n         * @hidden\n         */\n        this.id = guid();\n        /**\n         * Determines whether the built-in min or max validators are enforced when validating a form.\n         */\n        this.rangeValidation = false;\n        /**\n         * Sets or gets the `disabled` property of the Calendar and\n         * determines whether the component is active\n         * ([see example]({% slug disabled_calendar %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets or gets the `tabindex` property of the Calendar. Based on the\n         * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n         * it determines whether the component is focusable.\n         */\n        this.tabindex = 0;\n        /**\n         * Sets or gets the `navigation` property of the Calendar\n         * and determines whether the navigation side-bar will be displayed\n         * ([see example]({% slug sidebar_calendar %})).\n         */\n        this.navigation = true;\n        /**\n         * Defines the active view that the Calendar initially renders\n         * ([see example]({% slug activeview_calendar %})).\n         * By default, the active view is `month`.\n         *\n         * > You have to set `activeView` within the `topView`-`bottomView` range.\n         */\n        this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the bottommost view to which the user can navigate\n         * ([see example]({% slug dates_calendar %}#toc-partial-dates)).\n         */\n        this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the topmost view to which the user can navigate\n         * ([see example]({% slug sidebar_calendar %}#toc-partial-dates)).\n         */\n        this.topView = CalendarViewEnum[CalendarViewEnum.century];\n        /**\n         * Determines whether to display a week number column in the `month` view\n         * ([see example]({% slug weeknumcolumn_calendar %})).\n         */\n        this.weekNumber = false;\n        /**\n         * Fires when the active view is changed\n         * ([more information and example]({% slug overview_calendar %}#toc-events)).\n         */\n        this.activeViewChange = new EventEmitter();\n        /**\n         * Fires when the active view date is changed\n         * ([more information and example]({% slug overview_calendar %}#toc-events)).\n         */\n        this.activeViewDateChange = new EventEmitter();\n        /**\n         * Fires when the value is changed\n         * ([more information and example]({% slug overview_calendar %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        this.isActive = false;\n        this.cellUID = guid();\n        this._min = new Date(MIN_DATE);\n        this._max = new Date(MAX_DATE);\n        this._focusedDate = getToday();\n        this.onControlChange = noop;\n        this.onControlTouched = noop;\n        this.onValidatorChange = noop;\n        this.minValidateFn = noop;\n        this.maxValidateFn = noop;\n        this.syncNavigation = true;\n        this.domEvents = [];\n        this.resolvedPromise = Promise.resolve(null);\n        this.destroyed = false;\n        this.setClasses(element.nativeElement);\n        if (this.pickerService) {\n            this.pickerService.calendar = this;\n        }\n    }\n    /**\n     * Sets or gets the `focusedDate` property of the Calendar and\n     * defines the focused date of the component\n     * ([see example]({% slug dates_calendar %}#toc-focused-dates)).\n     *\n     * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n     */\n    set focusedDate(focusedDate) {\n        this._focusedDate = focusedDate || getToday();\n        this.setAriaActivedescendant();\n    }\n    get focusedDate() {\n        return this._focusedDate;\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `min` value is `1900-1-1`.\n     */\n    set min(min) {\n        this._min = min || new Date(MIN_DATE);\n    }\n    get min() {\n        return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value\n     * ([see example]({% slug dateranges_calendar %})).\n     * By default, the `max` value is `2099-12-31`.\n     */\n    set max(max) {\n        this._max = max || new Date(MAX_DATE);\n    }\n    get max() {\n        return this._max;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(candidate) {\n        this.verifyValue(candidate);\n        this._value = cloneDate(candidate);\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Sets the dates of the Calendar that will be disabled\n     * ([see example]({% slug disabled_dates_calendar %})).\n     */\n    set disabledDates(value) {\n        this.disabledDatesService.initialize(value);\n    }\n    /**\n     * @hidden\n     */\n    set cellTemplateRef(template) {\n        this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set monthCellTemplateRef(template) {\n        this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set yearCellTemplateRef(template) {\n        this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set decadeCellTemplateRef(template) {\n        this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set centuryCellTemplateRef(template) {\n        this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set weekNumberTemplateRef(template) {\n        this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set headerTitleTemplateRef(template) {\n        this.headerTitleTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set navigationItemTemplateRef(template) {\n        this.navigationItemTemplate = template;\n    }\n    get activeViewEnum() {\n        const activeView = CalendarViewEnum[this.activeView];\n        return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n    get bottomViewEnum() {\n        return CalendarViewEnum[this.bottomView];\n    }\n    get topViewEnum() {\n        return CalendarViewEnum[this.topView];\n    }\n    get widgetId() {\n        return this.id;\n    }\n    get widgetRole() {\n        return 'grid';\n    }\n    get calendarTabIndex() {\n        return this.disabled ? undefined : this.tabIndex;\n    }\n    get ariaDisabled() {\n        return this.disabled;\n    }\n    ngOnInit() {\n        this.dom.calculateHeights(this.element.nativeElement);\n        this.scrollSyncService.configure(this.activeViewEnum);\n        this.viewChangeSubscription = this.bus.viewChanged.subscribe(({ view }) => {\n            this.activeView = CalendarViewEnum[view];\n            this.emitEvent(this.activeViewChange, this.activeView);\n            this.scrollSyncService.configure(view);\n            this.detectChanges(); // requires zone if templates\n        });\n        this.control = this.injector.get(NgControl, null);\n        if (this.element) {\n            this.ngZone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this.verifyChanges();\n        this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n        this.scrollSyncService.configure(this.activeViewEnum);\n        const useValue = hasExistingValue(changes, 'value') && !hasExistingValue(changes, 'focusedDate');\n        const focusedDate = dateInRange(cloneDate(useValue ? this.value : this.focusedDate), this.min, this.max);\n        this.focusedDate = !isEqual(this.focusedDate, focusedDate) ? focusedDate : this.focusedDate;\n        if (changes.navigation) {\n            this.syncNavigation = true;\n        }\n        if (changes.min || changes.max || changes.rangeValidation) {\n            this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n            this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n            this.onValidatorChange();\n        }\n    }\n    ngAfterViewInit() {\n        this.setAriaActivedescendant();\n    }\n    ngAfterViewChecked() {\n        if (!this.syncNavigation) {\n            return;\n        }\n        this.syncNavigation = false;\n        this.scrollSyncService.sync(virtualizationProp(this.navigationView), virtualizationProp(this.monthView));\n    }\n    ngOnDestroy() {\n        this.scrollSyncService.destroy();\n        this.viewChangeSubscription.unsubscribe();\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n        if (this.pickerService) {\n            this.pickerService.calendar = null;\n        }\n        if (this.pageChangeSubscription) {\n            this.pageChangeSubscription.unsubscribe();\n        }\n        this.destroyed = true;\n    }\n    /**\n     * Focuses the host element of the Calendar.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"calendar.focus()\">Focus calendar</button>\n     *  <kendo-calendar #calendar></kendo-calendar>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n    blur() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n        return Boolean(closest(element, node => node === this.element.nativeElement));\n    }\n    /**\n     * @hidden\n     */\n    handleNavigation(candidate) {\n        if (this.disabled) {\n            return;\n        }\n        const focusTarget = candidate ? new Date(cloneDate(candidate).setDate(1)) : this.focusedDate;\n        this.focusedDate = dateInRange(focusTarget, this.min, this.max);\n        this.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    onPageChange() {\n        if (!NgZone.isInAngularZone()) {\n            if (this.pageChangeSubscription) {\n                this.pageChangeSubscription.unsubscribe();\n            }\n            this.pageChangeSubscription = from(this.resolvedPromise)\n                .subscribe(() => {\n                this.detectChanges(); // requires zone if templates\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleDateChange(candidate) {\n        const canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n        const isSameDate = !canNavigateDown && isEqual(candidate, this.value);\n        this.focusedDate = cloneDate(candidate) || this.focusedDate;\n        if (this.disabled) {\n            return;\n        }\n        if (isSameDate) {\n            this.emitSameDate();\n            return;\n        }\n        if (canNavigateDown) {\n            this.bus.moveDown(this.activeViewEnum);\n            return;\n        }\n        if (!this.disabledDatesService.isDateDisabled(candidate)) {\n            this.ngZone.run(() => {\n                this.value = cloneDate(candidate);\n                this.onControlChange(cloneDate(candidate));\n                this.valueChange.emit(cloneDate(candidate));\n                this.cdr.markForCheck();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(candidate) {\n        this.verifyValue(candidate);\n        this.focusedDate = dateInRange(cloneDate(candidate) || this.focusedDate, this.min, this.max);\n        this.value = cloneDate(candidate);\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    activeCellTemplate() {\n        switch (this.activeViewEnum) {\n            case CalendarViewEnum.month:\n                return this.monthCellTemplate || this.cellTemplate;\n            case CalendarViewEnum.year:\n                return this.yearCellTemplate;\n            case CalendarViewEnum.decade:\n                return this.decadeCellTemplate;\n            case CalendarViewEnum.century:\n                return this.centuryCellTemplate;\n            default:\n                return null;\n        }\n    }\n    /**\n     * @hidden\n     */\n    emitEvent(emitter, args) {\n        if (hasObservers(emitter)) {\n            this.ngZone.run(() => {\n                emitter.emit(args);\n            });\n        }\n    }\n    setClasses(element) {\n        this.renderer.addClass(element, 'k-widget');\n        this.renderer.addClass(element, 'k-calendar');\n        this.renderer.addClass(element, 'k-calendar-infinite');\n    }\n    verifyChanges() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.min > this.max) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK} and ${MAX_DOC_LINK}.`);\n        }\n        if (this.bottomViewEnum > this.topViewEnum) {\n            throw new Error(`The topView should be greater than bottomView. See ${BOTTOM_VIEW_DOC_LINK} and ${TOP_VIEW_DOC_LINK}.`);\n        }\n    }\n    verifyValue(candidate) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (candidate && !(candidate instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK} for possible resolution.`);\n        }\n    }\n    bindEvents() {\n        const element = this.element.nativeElement;\n        this.domEvents.push(this.renderer.listen(element, 'blur', this.handleBlur.bind(this)), this.renderer.listen(element, 'focus', this.handleFocus.bind(this)), this.renderer.listen(element, 'mousedown', preventDefault), this.renderer.listen(element, 'click', this.handleClick.bind(this)), this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n    }\n    emitBlur(args) {\n        if (this.pickerService) {\n            this.pickerService.onBlur.emit(args);\n        }\n    }\n    emitFocus() {\n        if (this.pickerService) {\n            this.pickerService.onFocus.emit();\n        }\n    }\n    handleBlur(args) {\n        this.isActive = false;\n        // the injector can get the NgControl instance of the parent component (for example, the DateTimePicker)\n        // and enters the zone for no reason because the parent component is still untouched\n        if (!this.pickerService && requiresZoneOnBlur(this.control)) {\n            this.ngZone.run(() => {\n                this.onControlTouched();\n                this.emitBlur(args);\n                this.cdr.markForCheck();\n            });\n        }\n        else {\n            this.emitBlur(args);\n            this.detectChanges();\n        }\n    }\n    handleFocus() {\n        this.isActive = true;\n        if (!NgZone.isInAngularZone()) {\n            this.detectChanges();\n        }\n        this.emitFocus();\n    }\n    handleClick() {\n        if (!this.isActive) {\n            if (this.monthView.isScrolled()) {\n                this.focusedDate = cloneDate(this.focusedDate); //XXX: forces change detect\n                this.detectChanges();\n            }\n            this.focus();\n        }\n    }\n    handleKeydown(args) {\n        // reserve the alt + arrow key commands for the picker\n        const arrowKeyPressed = [Keys.ArrowUp, Keys.ArrowRight, Keys.ArrowDown, Keys.ArrowLeft].indexOf(args.keyCode) !== -1;\n        if (isPresent(this.pickerService) && arrowKeyPressed && args.altKey) {\n            return;\n        }\n        const candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(args), this.activeViewEnum), this.min, this.max);\n        if (!isEqual(this.focusedDate, candidate)) {\n            this.focusedDate = candidate;\n            this.detectChanges();\n            args.preventDefault();\n        }\n        if (args.keyCode === Keys.Enter) {\n            this.handleDateChange(this.focusedDate);\n        }\n    }\n    detectChanges() {\n        if (!this.destroyed) {\n            this.cdr.detectChanges();\n        }\n    }\n    emitSameDate() {\n        if (this.pickerService) {\n            this.pickerService.sameDateSelected.emit();\n        }\n    }\n    setAriaActivedescendant() {\n        if (!isPresent(this.element)) {\n            return;\n        }\n        const focusedCellId = this.cellUID + this.focusedDate.getTime();\n        this.renderer.setAttribute(this.element.nativeElement, 'aria-activedescendant', focusedCellId);\n    }\n}\nCalendarComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-calendar',\n                providers: [\n                    BusViewService,\n                    CALENDAR_VALUE_ACCESSOR,\n                    CALENDAR_RANGE_VALIDATORS,\n                    KENDO_INPUT_PROVIDER,\n                    LocalizationService,\n                    DisabledDatesService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.calendar'\n                    },\n                    NavigationService,\n                    ScrollSyncService\n                ],\n                selector: 'kendo-calendar',\n                template: `\n    <ng-container kendoCalendarLocalizedMessages\n        i18n-today=\"kendo.calendar.today|The label for the today button in the calendar header\"\n        today=\"TODAY\"\n    >\n    </ng-container>\n    <kendo-calendar-navigation\n        *ngIf=\"navigation\"\n        [activeView]=\"activeViewEnum\"\n        [focusedDate]=\"focusedDate\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [templateRef]=\"navigationItemTemplate?.templateRef\"\n        (valueChange)=\"handleNavigation($event)\"\n        (pageChange)=\"onPageChange()\"\n    >\n    </kendo-calendar-navigation>\n    <kendo-calendar-viewlist\n        [activeView]=\"activeViewEnum\"\n        [isActive]=\"isActive\"\n        [cellTemplateRef]=\"activeCellTemplate()?.templateRef\"\n        [headerTitleTemplateRef]=\"headerTitleTemplate?.templateRef\"\n        [weekNumberTemplateRef]=\"weekNumberTemplate?.templateRef\"\n        [cellUID]=\"cellUID\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [focusedDate]=\"focusedDate\"\n        [weekNumber]=\"weekNumber\"\n        [value]=\"value\"\n        (valueChange)=\"handleDateChange($event)\"\n        (activeDateChange)=\"emitEvent(activeViewDateChange, $event)\"\n        (pageChange)=\"onPageChange()\"\n    >\n    </kendo-calendar-viewlist>\n  `\n            },] },\n];\n/** @nocollapse */\nCalendarComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: CalendarDOMService },\n    { type: ElementRef },\n    { type: NavigationService },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: Injector },\n    { type: ScrollSyncService },\n    { type: DisabledDatesService },\n    { type: PickerService, decorators: [{ type: Optional }] }\n];\nCalendarComponent.propDecorators = {\n    id: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    disabledDates: [{ type: Input }],\n    navigation: [{ type: Input }],\n    activeView: [{ type: Input }],\n    bottomView: [{ type: Input }],\n    topView: [{ type: Input }],\n    weekNumber: [{ type: Input }, { type: HostBinding, args: ['class.k-week-number',] }],\n    activeViewChange: [{ type: Output }],\n    activeViewDateChange: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    cellTemplate: [{ type: ContentChild, args: [CellTemplateDirective, { static: true },] }],\n    cellTemplateRef: [{ type: Input, args: ['cellTemplate',] }],\n    monthCellTemplate: [{ type: ContentChild, args: [MonthCellTemplateDirective, { static: true },] }],\n    monthCellTemplateRef: [{ type: Input, args: ['monthCellTemplate',] }],\n    yearCellTemplate: [{ type: ContentChild, args: [YearCellTemplateDirective, { static: true },] }],\n    yearCellTemplateRef: [{ type: Input, args: ['yearCellTemplate',] }],\n    decadeCellTemplate: [{ type: ContentChild, args: [DecadeCellTemplateDirective, { static: true },] }],\n    decadeCellTemplateRef: [{ type: Input, args: ['decadeCellTemplate',] }],\n    centuryCellTemplate: [{ type: ContentChild, args: [CenturyCellTemplateDirective, { static: true },] }],\n    centuryCellTemplateRef: [{ type: Input, args: ['centuryCellTemplate',] }],\n    weekNumberTemplate: [{ type: ContentChild, args: [WeekNumberCellTemplateDirective, { static: true },] }],\n    weekNumberTemplateRef: [{ type: Input, args: ['weekNumberTemplate',] }],\n    headerTitleTemplate: [{ type: ContentChild, args: [HeaderTitleTemplateDirective, { static: true },] }],\n    headerTitleTemplateRef: [{ type: Input, args: ['headerTitleTemplate',] }],\n    navigationItemTemplate: [{ type: ContentChild, args: [NavigationItemTemplateDirective, { static: true },] }],\n    navigationItemTemplateRef: [{ type: Input, args: ['navigationItemTemplate',] }],\n    navigationView: [{ type: ViewChild, args: [NavigationComponent,] }],\n    monthView: [{ type: ViewChild, args: [ViewListComponent,] }],\n    widgetId: [{ type: HostBinding, args: ['attr.id',] }],\n    widgetRole: [{ type: HostBinding, args: ['attr.role',] }],\n    calendarTabIndex: [{ type: HostBinding, args: ['attr.tabindex',] }],\n    ariaDisabled: [{ type: HostBinding, args: ['attr.aria-disabled',] }, { type: HostBinding, args: ['class.k-state-disabled',] }]\n};\n\n/**\n * @hidden\n */\nvar Arrow;\n(function (Arrow) {\n    Arrow[Arrow[\"Up\"] = 0] = \"Up\";\n    Arrow[Arrow[\"Down\"] = 1] = \"Down\";\n    Arrow[Arrow[\"None\"] = 2] = \"None\";\n})(Arrow || (Arrow = {}));\n\n/* tslint:disable:max-line-length */\nconst MIN_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-min';\nconst MAX_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DateInputComponent/#toc-max';\nconst VALUE_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/dateinput/#toc-using-with-json';\nconst DATE_PART_REGEXP = /year|month|<day>/;\nconst TIME_PART_REGEXP = /hour|minute|second|millisecond/;\nconst SHORT_PATTERN_LENGTH_REGEXP = /d|M|H|h|m|s/;\nconst padZero = (length) => new Array(Math.max(length, 0)).fill('0').join('');\nconst unpadZero = (value) => value.replace(/^0*/, '');\nclass Mask {\n    constructor() {\n        this.symbols = \"\";\n    }\n}\nclass KendoDate {\n    constructor(intl, formatPlaceholder, format, value) {\n        this.intl = intl;\n        this.formatPlaceholder = formatPlaceholder;\n        this.format = format;\n        this.year = true;\n        this.month = true;\n        this.date = true;\n        this.hours = true;\n        this.minutes = true;\n        this.seconds = true;\n        this.milliseconds = true;\n        this.leadingZero = null;\n        this.monthNames = null;\n        this.typedMonthPart = \"\";\n        this.value = getDate(new Date());\n        this.knownParts = \"adHhmMsEy\";\n        this.symbols = {\n            \"E\": \"E\",\n            \"H\": \"H\",\n            \"M\": \"M\",\n            \"a\": \"a\",\n            \"d\": \"d\",\n            \"h\": \"h\",\n            \"m\": \"m\",\n            \"s\": \"s\",\n            \"y\": \"y\"\n        };\n        this.monthNames = this.allFormatedMonths();\n        this.dayPeriods = this.allDayPeriods();\n        if (!value) {\n            this.value = getDate(new Date());\n            const sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n            for (let i = 0; i < sampleFormat.length; i++) {\n                this.setExisting(sampleFormat[i], false);\n            }\n        }\n        else {\n            this.value = cloneDate(value);\n        }\n    }\n    hasValue() {\n        const pred = (a, p) => a || p.type !== 'literal' && p.type !== 'dayperiod' && this.getExisting(p.pattern[0]);\n        return this.intl.splitDateFormat(this.format).reduce(pred, false);\n    }\n    getDateObject() {\n        for (let i = 0; i < this.knownParts.length; i++) {\n            if (!this.getExisting(this.knownParts[i])) {\n                return null;\n            }\n        }\n        return cloneDate(this.value);\n    }\n    getTextAndFormat() {\n        return this.merge(this.intl.formatDate(this.value, this.format), this.dateFormatString(this.value, this.format));\n    }\n    getExisting(symbol) {\n        switch (symbol) {\n            case \"y\": return this.year;\n            case \"M\":\n            case \"L\": return this.month;\n            case \"d\": return this.date;\n            case \"E\": return this.date && this.month && this.year;\n            case \"h\":\n            case \"H\": return this.hours;\n            case \"m\": return this.minutes;\n            case \"s\": return this.seconds;\n            default: return true;\n        }\n    }\n    setExisting(symbol, value) {\n        switch (symbol) {\n            case \"y\":\n                this.year = value;\n                if (value === false) {\n                    this.value.setFullYear(2000);\n                }\n                break; //allow 2/29 dates\n            case \"M\":\n                this.month = value;\n                if (value === false) {\n                    this.value.setMonth(0);\n                }\n                break; //make sure you can type 31 at day part\n            case \"d\":\n                this.date = value;\n                break;\n            case \"h\":\n            case \"H\":\n                this.hours = value;\n                break;\n            case \"m\":\n                this.minutes = value;\n                break;\n            case \"s\":\n                this.seconds = value;\n                break;\n            default: return;\n        }\n    }\n    modifyPart(symbol, offset) {\n        let newValue = cloneDate(this.value);\n        switch (symbol) {\n            case \"y\":\n                newValue.setFullYear(newValue.getFullYear() + offset);\n                break;\n            case \"M\":\n                newValue = addMonths(this.value, offset);\n                break;\n            case \"d\":\n            case \"E\":\n                newValue.setDate(newValue.getDate() + offset);\n                break;\n            case \"h\":\n            case \"H\":\n                newValue.setHours(newValue.getHours() + offset);\n                break;\n            case \"m\":\n                newValue.setMinutes(newValue.getMinutes() + offset);\n                break;\n            case \"s\":\n                newValue.setSeconds(newValue.getSeconds() + offset);\n                break;\n            case \"a\":\n                newValue.setHours(newValue.getHours() + (12 * offset));\n                break;\n            default: break;\n        }\n        if (newValue.getFullYear() > 0) {\n            this.setExisting(symbol, true);\n            this.value = newValue;\n        }\n    }\n    parsePart(symbol, currentChar, resetSegmentValue) {\n        if (!currentChar) {\n            this.resetLeadingZero();\n            this.setExisting(symbol, false);\n            return { value: null, switchToNext: false };\n        }\n        let baseDate = this.intl.formatDate(this.value, this.format);\n        let dateParts = this.dateFormatString(this.value, this.format);\n        let baseFormat = dateParts.symbols;\n        let replaced = false;\n        let prefix = \"\";\n        let current = \"\";\n        let suffix = \"\";\n        for (let i = 0; i < baseDate.length; i++) {\n            if (baseFormat[i] === symbol) {\n                current += this.getExisting(symbol) ? baseDate[i] : \"0\";\n                replaced = true;\n            }\n            else if (!replaced) {\n                prefix += baseDate[i];\n            }\n            else {\n                suffix += baseDate[i];\n            }\n        }\n        let currentMaxLength = current.length - 3;\n        let parsedDate = null;\n        const month = this.matchMonth(currentChar);\n        const dayPeriod = this.matchDayPeriod(currentChar, symbol);\n        const isZeroCurrentChar = currentChar === '0';\n        const leadingZero = (this.leadingZero || {})[symbol] || 0;\n        if (isZeroCurrentChar) {\n            let valueNumber = parseInt(resetSegmentValue ? currentChar : current + currentChar, 10);\n            if (valueNumber === 0 && !this.isAbbrMonth(dateParts.partMap, symbol)) {\n                this.incrementLeadingZero(symbol);\n            }\n        }\n        else {\n            this.resetLeadingZero();\n        }\n        for (let i = Math.max(0, currentMaxLength); i <= current.length; i++) {\n            let middle = resetSegmentValue ? currentChar : (current.substring(i) + currentChar);\n            let middleNumber = parseInt(middle, 10);\n            parsedDate = this.intl.parseDate(prefix + middle + suffix, this.format);\n            if (!parsedDate && !isNaN(middleNumber) && !isNaN(parseInt(currentChar, 10))) {\n                if (symbol === 'M' && !month) {\n                    const monthNumber = middleNumber - 1;\n                    if (monthNumber > -1 && monthNumber < 12) {\n                        parsedDate = cloneDate(this.value);\n                        parsedDate.setMonth(monthNumber);\n                        if (parsedDate.getMonth() !== monthNumber) {\n                            parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n                        }\n                    }\n                }\n                if (symbol === 'y') {\n                    parsedDate = createDate(parseInt(middle, 10), this.month ? this.value.getMonth() : 0, this.date ? this.value.getDate() : 1, this.hours ? this.value.getHours() : 0, this.minutes ? this.value.getMinutes() : 0, this.seconds ? this.value.getSeconds() : 0, this.milliseconds ? this.value.getMilliseconds() : 0);\n                    if (this.date && parsedDate.getDate() !== this.value.getDate()) {\n                        parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n                    }\n                }\n            }\n            if (parsedDate) {\n                //move to next segment if the part will overflow with next char\n                //when start from empty date (01, then 010), padded zeros should be trimmed\n                const patternValue = this.partPattern(dateParts.partMap, symbol).pattern;\n                const peekDate = this.intl.parseDate(`${prefix}${this.peek(middle, patternValue)}${suffix}`, this.format);\n                const patternLength = this.patternLength(patternValue) || patternValue.length;\n                const patternSatisfied = (leadingZero + (unpadZero(middle) || currentChar).length) >= patternLength;\n                const switchToNext = peekDate === null || patternSatisfied;\n                this.value = parsedDate;\n                this.setExisting(symbol, true);\n                return { value: this.value, switchToNext: switchToNext };\n            }\n        }\n        if (month) {\n            parsedDate = this.intl.parseDate(prefix + month + suffix, this.format);\n            if (parsedDate) {\n                this.value = parsedDate;\n                this.setExisting(symbol, true);\n                return { value: this.value, switchToNext: false };\n            }\n        }\n        if (dayPeriod) {\n            parsedDate = this.intl.parseDate(prefix + dayPeriod + suffix, this.format);\n            if (parsedDate) {\n                this.value = parsedDate;\n                return { value: this.value, switchToNext: true };\n            }\n        }\n        if (isZeroCurrentChar) {\n            this.setExisting(symbol, false);\n        }\n        return { value: null, switchToNext: false };\n    }\n    resetLeadingZero() {\n        const hasLeadingZero = this.leadingZero !== null;\n        this.setLeadingZero(null);\n        return hasLeadingZero;\n    }\n    setLeadingZero(leadingZero) {\n        this.leadingZero = leadingZero;\n    }\n    incrementLeadingZero(symbol) {\n        const leadingZero = this.leadingZero || {};\n        leadingZero[symbol] = (leadingZero[symbol] || 0) + 1;\n        this.leadingZero = leadingZero;\n    }\n    isAbbrMonth(parts, symbol) {\n        const pattern = this.partPattern(parts, symbol);\n        return pattern.type === 'month' && pattern.names;\n    }\n    partPattern(parts, symbol) {\n        return parts.filter((part) => part.pattern.indexOf(symbol) !== -1)[0];\n    }\n    peek(value, pattern) {\n        const peekValue = unpadZero(value) + '0';\n        return padZero(pattern.length - peekValue.length) + peekValue;\n    }\n    matchMonth(typedChar) {\n        this.typedMonthPart += typedChar.toLowerCase();\n        if (!this.monthNames) {\n            return \"\";\n        }\n        while (this.typedMonthPart.length > 0) {\n            for (let i = 0; i < this.monthNames.length; i++) {\n                if (this.monthNames[i].toLowerCase().indexOf(this.typedMonthPart) === 0) {\n                    return this.monthNames[i];\n                }\n            }\n            const monthAsNum = parseInt(this.typedMonthPart, 10);\n            if (monthAsNum >= 1 && monthAsNum <= 12 && monthAsNum.toString() === this.typedMonthPart /*ensure they exact match*/) {\n                return this.monthNames[monthAsNum - 1];\n            }\n            this.typedMonthPart = this.typedMonthPart.substring(1, this.typedMonthPart.length);\n        }\n        return \"\";\n    }\n    matchDayPeriod(typedChar, symbol) {\n        const lowerChart = String(typedChar).toLowerCase();\n        if (symbol === 'a' && this.dayPeriods) {\n            if (this.dayPeriods.am.toLowerCase().startsWith(lowerChart)) {\n                return this.dayPeriods.am;\n            }\n            else if (this.dayPeriods.pm.toLowerCase().startsWith(lowerChart)) {\n                return this.dayPeriods.pm;\n            }\n        }\n        return '';\n    }\n    allFormatedMonths() {\n        const dateFormatParts = this.intl.splitDateFormat(this.format);\n        for (let i = 0; i < dateFormatParts.length; i++) {\n            if (dateFormatParts[i].type === \"month\" && dateFormatParts[i].names) {\n                return this.intl.dateFormatNames(dateFormatParts[i].names);\n            }\n        }\n        return null;\n    }\n    allDayPeriods() {\n        const dateFormatParts = this.intl.splitDateFormat(this.format);\n        for (let i = 0; i < dateFormatParts.length; i++) {\n            if (dateFormatParts[i].type === \"dayperiod\" && dateFormatParts[i].names) {\n                return this.intl.dateFormatNames(dateFormatParts[i].names);\n            }\n        }\n        return null;\n    }\n    patternLength(pattern) {\n        if (pattern[0] === 'y') {\n            return 4;\n        }\n        if (SHORT_PATTERN_LENGTH_REGEXP.test(pattern)) {\n            return 2;\n        }\n        return 0;\n    }\n    //TODO: REMOVE!\n    dateFormatString(date, format) {\n        const dateFormatParts = this.intl.splitDateFormat(format);\n        const parts = [];\n        const partMap = [];\n        for (let i = 0; i < dateFormatParts.length; i++) {\n            let partLength = this.intl.formatDate(date, { pattern: dateFormatParts[i].pattern }).length;\n            while (partLength > 0) {\n                parts.push(this.symbols[dateFormatParts[i].pattern[0]] || \"_\");\n                partMap.push(dateFormatParts[i]);\n                partLength--;\n            }\n        }\n        const returnValue = new Mask();\n        returnValue.symbols = parts.join(\"\");\n        returnValue.partMap = partMap;\n        return returnValue;\n    }\n    merge(text, mask) {\n        // Important: right to left.\n        let resultText = \"\";\n        let resultFormat = \"\";\n        let format = mask.symbols;\n        for (let r = format.length - 1; r >= 0; r--) {\n            if (this.knownParts.indexOf(format[r]) === -1 || this.getExisting(format[r])) {\n                resultText = text[r] + resultText;\n                resultFormat = format[r] + resultFormat;\n            }\n            else {\n                const currentSymbol = format[r];\n                while (r >= 0 && currentSymbol === format[r]) {\n                    r--;\n                }\n                r++;\n                if (this.leadingZero && this.leadingZero[currentSymbol]) {\n                    resultText = '0' + resultText;\n                }\n                else {\n                    resultText = this.dateFieldName(mask.partMap[r]) + resultText;\n                }\n                while (resultFormat.length < resultText.length) {\n                    resultFormat = format[r] + resultFormat;\n                }\n            }\n        }\n        return [resultText, resultFormat];\n    }\n    dateFieldName(part) {\n        const formatPlaceholder = this.formatPlaceholder || 'wide';\n        if (formatPlaceholder[part.type]) {\n            return formatPlaceholder[part.type];\n        }\n        if (formatPlaceholder === 'formatPattern') {\n            return part.pattern;\n        }\n        return this.intl.dateFieldName(Object.assign(part, { nameType: formatPlaceholder }));\n    }\n}\n/**\n * Represents the [Kendo UI DateInput component for Angular]({% slug overview_dateinput %}#toc-basic-usage).\n */\nclass DateInputComponent {\n    constructor(cdr, intl, renderer, element, ngZone, injector, localization, pickerService) {\n        this.cdr = cdr;\n        this.intl = intl;\n        this.renderer = renderer;\n        this.element = element;\n        this.ngZone = ngZone;\n        this.injector = injector;\n        this.localization = localization;\n        this.pickerService = pickerService;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Sets or gets the `disabled` property of the DateInput and\n         * determines whether the component is active\n         * ([see example]({% slug disabled_dateinput %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets or gets the read-only state of the DateInput\n         * ([see example]({% slug readonly_dateinput %})).\n         */\n        this.readonly = false;\n        /**\n         * Sets the title of the input element of the DateInput.\n         */\n        this.title = \"\";\n        /**\n         * Sets or gets the `tabIndex` property of the DateInput.\n         * .\n         */\n        this.tabindex = 0;\n        /**\n         * @hidden\n         */\n        this.role = 'spinbutton';\n        /**\n         * @hidden\n         */\n        this.ariaReadOnly = false;\n        /**\n         * Specifies the date format that is used to display the input value\n         * ([see example]({% slug formats_dateinput %})).\n         */\n        this.format = \"d\";\n        /**\n         * Specifies the hint the DateInput displays when its value is `null`.\n         * For more information, refer to the article on\n         * [placeholders]({% slug placeholders_dateinput %}).\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-dateinput placeholder=\"Enter birth date...\"></kendo-dateinput>\n         * `\n         * })\n         * class AppComponent { }\n         * ```\n         */\n        this.placeholder = null;\n        /**\n         * Determines whether the built-in min or max validators are to be enforced when a form is being validated.\n         */\n        this.rangeValidation = true;\n        /**\n         * @hidden\n         * Based on the min and max values, specifies whether the value will be auto-corrected while typing.\n         */\n        this.autoCorrect = false;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n         * For more information, refer to the article on\n         * [spinner buttons]({% slug spinbuttons_dateinput %}).\n         */\n        this.spinners = false;\n        /**\n         * @hidden\n         */\n        this.isPopupOpen = false;\n        /**\n         * @hidden\n         */\n        this.hasPopup = false;\n        /**\n         * Fires each time the user selects a new value.\n         * For more information, refer to the section on\n         * [events]({% slug overview_dateinput %}#toc-events).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user selects a new value.\n         * For more information, refer to the section on\n         * [events]({% slug overview_dateinput %}#toc-events).\n         */\n        this.valueUpdate = new EventEmitter();\n        /**\n         * Fires each time the user focuses the input element.\n         * For more information, refer to the section on\n         * [events]({% slug overview_dateinput %}#toc-events).\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-dateinput (focus)=\"handleFocus()\"></kendo-dateinput>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log(\"Component is focused\");\n         *   }\n         * }\n         * ```\n         *\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the input element gets blurred.\n         * For more information, refer to the section on\n         * [events]({% slug overview_dateinput %}#toc-events).\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-dateinput (blur)=\"handleBlur()\"></kendo-dateinput>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log(\"Component is blurred\");\n         *   }\n         * }\n         * ```\n         *\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        this.arrow = Arrow;\n        this.arrowDirection = Arrow.None;\n        this.formatSections = { date: false, time: false };\n        this.hasMousedown = false;\n        this.focusedPriorToMousedown = false;\n        this.currentValue = \"\";\n        this.currentFormat = \"\";\n        this.backspace = false;\n        this.resetSegmentValue = true;\n        this.minValidateFn = noop;\n        this.maxValidateFn = noop;\n        this._value = null;\n        this._active = false;\n        this.kendoDate = null;\n        this.paste = false;\n        this.domEvents = [];\n        this.onControlChange = noop;\n        this.onControlTouched = noop;\n        this.onValidatorChange = noop;\n        this.symbolsMap = this.dateSymbolMap();\n        this.updateFormatSections();\n        if (this.pickerService) {\n            this.pickerService.input = this;\n        }\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Specifies the value of the DateInput component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    set value(value) {\n        this.verifyValue(value);\n        if (this.autoCorrect && !isInRange(value, this.min, this.max)) {\n            return;\n        }\n        this._value = cloneDate(value);\n        this.valueUpdate.emit(cloneDate(value));\n    }\n    get value() {\n        return this._value;\n    }\n    get wrapperClass() {\n        return true;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get inputElement() {\n        return this.dateInput ? this.dateInput.nativeElement : null;\n    }\n    get inputValue() {\n        return (this.inputElement || {}).value || '';\n    }\n    get isActive() {\n        return this._active;\n    }\n    set isActive(value) {\n        this._active = value;\n        if (!this.wrap) {\n            return;\n        }\n        if (!isPresent(this.pickerService)) {\n            const element = this.wrap.nativeElement;\n            if (value) {\n                this.renderer.addClass(element, 'k-state-focused');\n            }\n            else {\n                this.renderer.removeClass(element, 'k-state-focused');\n            }\n        }\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    isEmpty() {\n        return !this.currentValue || !String(this.currentValue).trim();\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n        return Boolean(closest(element, node => node === this.element.nativeElement));\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        this.verifyRange();\n        if (changes.min || changes.max || changes.rangeValidation) {\n            this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n            this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n            this.onValidatorChange();\n        }\n        if (changes.format) {\n            this.symbolsMap = this.dateSymbolMap();\n            this.updateFormatSections();\n        }\n        const isEqualToKendoDate = this.kendoDate && isEqual(this.value, this.kendoDate.getDateObject());\n        if (changes.format || !isEqualToKendoDate || changes.placeholder) {\n            this.kendoDate = this.getKendoDate(this.value);\n            this.updateElementValue(this.isActive);\n        }\n    }\n    ngOnDestroy() {\n        if (this.intlSubscription) {\n            this.intlSubscription.unsubscribe();\n        }\n        if (this.pickerService) {\n            this.pickerService.input = null;\n        }\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.kendoDate = this.getKendoDate(this.value);\n        this.updateElementValue();\n        this.intlSubscription = this.intl.changes.subscribe(this.intlChange.bind(this));\n        this.control = this.injector.get(NgControl, null);\n        if (this.element) {\n            this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n            this.ngZone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    //ngModel binding\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.verifyValue(value);\n        this.kendoDate = this.getKendoDate(value);\n        this.value = cloneDate(value);\n        this.updateElementValue(this.isActive);\n    }\n    /**\n     * @hidden\n     */\n    triggerChange() {\n        const value = this.kendoDate.getDateObject();\n        if (+value !== +this.value) {\n            this.value = cloneDate(value);\n            this.notify();\n        }\n    }\n    /**\n     * @hidden\n     */\n    notify() {\n        this.ngZone.run(() => {\n            this.onControlChange(cloneDate(this.value));\n            this.valueChange.emit(cloneDate(this.value));\n        });\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * Focuses the DateInput component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"dateinput.focus()\">Focus date input</button>\n     *  <kendo-dateinput #dateinput></kendo-dateinput>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        const input = this.inputElement;\n        if (input) {\n            input.focus();\n            this.selectDateSegment(this.currentFormat[0]);\n        }\n    }\n    /**\n     * Blurs the DateInput component.\n     */\n    blur() {\n        const input = this.inputElement;\n        if (input) {\n            input.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleButtonClick(offset) {\n        this.arrowDirection = Arrow.None;\n        this.modifyDateSegmentValue(offset);\n    }\n    /**\n     * @hidden\n     */\n    modifyDateSegmentValue(offset) {\n        const caret = this.caret();\n        const symbol = this.currentFormat[caret[0]];\n        const step = (this.steps || {})[this.symbolsMap[symbol]] || 1;\n        this.kendoDate.modifyPart(symbol, offset * step);\n        this.putDateInRange();\n        this.updateElementValue(this.isActive);\n        this.triggerChange();\n        this.selectDateSegment(symbol);\n    }\n    /**\n     * @hidden\n     */\n    switchDateSegment(offset) {\n        const caret = this.caret();\n        if (this.kendoDate.resetLeadingZero()) {\n            this.updateElementValue(this.isActive);\n        }\n        if (caret[0] < caret[1] && this.currentFormat[caret[0]] !== this.currentFormat[caret[1] - 1]) {\n            this.selectNearestSegment(offset > 0 ? caret[0] : caret[1] - 1);\n            this.resetSegmentValue = true;\n            return true;\n        }\n        const previousFormatSymbol = this.currentFormat[caret[0]];\n        let a = caret[0] + offset;\n        while (a > 0 && a < this.currentFormat.length) {\n            if (this.currentFormat[a] !== previousFormatSymbol &&\n                this.currentFormat[a] !== \"_\") {\n                break;\n            }\n            a += offset;\n        }\n        if (this.currentFormat[a] === \"_\") {\n            //there is not known symbol found\n            return false;\n        }\n        let b = a;\n        while (b >= 0 && b < this.currentFormat.length) {\n            if (this.currentFormat[b] !== this.currentFormat[a]) {\n                break;\n            }\n            b += offset;\n        }\n        if (a > b && (b + 1 !== caret[0] || a + 1 !== caret[1])) {\n            this.caret(b + 1, a + 1);\n            this.resetSegmentValue = true;\n            return true;\n        }\n        else if (a < b && (a !== caret[0] || b !== caret[1])) {\n            this.caret(a, b);\n            this.resetSegmentValue = true;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    selectDateSegment(symbol) {\n        let begin = -1;\n        let end = 0;\n        for (let i = 0; i < this.currentFormat.length; i++) {\n            if (this.currentFormat[i] === symbol) {\n                end = i + 1;\n                if (begin === -1) {\n                    begin = i;\n                }\n            }\n        }\n        if (begin < 0) {\n            begin = 0;\n        }\n        this.caret(0, 0);\n        this.caret(begin, end);\n    }\n    /**\n     * @hidden\n     */\n    handleClick() {\n        this.hasMousedown = false;\n        if (this.isActive) {\n            const selectionPresent = this.inputElement.selectionStart !== this.inputElement.selectionEnd;\n            const placeholderToggled = isPresent(this.placeholder) && !this.kendoDate.hasValue() && !this.focusedPriorToMousedown;\n            // focus first segment if the user hasn't selected something during mousedown and if the placeholder was just toggled\n            const selectFirstSegment = !selectionPresent && placeholderToggled;\n            const index = selectFirstSegment ? 0 : this.caret()[0];\n            this.selectNearestSegment(index);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleDragAndDrop(args) {\n        args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown() {\n        this.hasMousedown = true;\n        this.focusedPriorToMousedown = this.isActive;\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(args) {\n        this.isActive = true;\n        this.updateElementValue();\n        if (!this.hasMousedown) {\n            this.caret(0, this.inputValue.length);\n        }\n        this.hasMousedown = false;\n        if (hasObservers(this.onFocus)) {\n            this.ngZone.run(() => {\n                this.emitFocus(args);\n            });\n        }\n        else {\n            this.emitFocus(args);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(args) {\n        this.isActive = false;\n        this.resetSegmentValue = true;\n        this.kendoDate.resetLeadingZero();\n        this.updateElementValue();\n        if (hasObservers(this.onBlur) || requiresZoneOnBlur(this.control)) {\n            this.ngZone.run(() => {\n                this.onControlTouched();\n                this.emitBlur(args);\n                this.cdr.markForCheck();\n            });\n        }\n        else {\n            this.emitBlur(args);\n        }\n    }\n    getKendoDate(value) {\n        const { leadingZero } = (this.kendoDate || {}) || null;\n        const kendoDate = new KendoDate(this.intl, this.formatPlaceholder, this.format, value);\n        kendoDate.setLeadingZero(this.isActive ? leadingZero : null);\n        return kendoDate;\n    }\n    dateSymbolMap() {\n        const reducer = (map$$1, part) => {\n            map$$1[part.pattern[0]] = part.type;\n            return map$$1;\n        };\n        return this.intl.splitDateFormat(this.format).reduce(reducer, {});\n    }\n    updateElementValue(isActive) {\n        const start = this.caret()[0]; //XXX: get caret position before input is updated\n        const texts = this.kendoDate.getTextAndFormat();\n        const showPlaceholder = !this.isActive && isPresent(this.placeholder) && !this.kendoDate.hasValue();\n        const input = this.inputElement;\n        this.currentFormat = texts[1];\n        this.currentValue = !showPlaceholder ? texts[0] : '';\n        this.renderer.setProperty(input, \"value\", this.currentValue);\n        if (input.placeholder !== this.placeholder) {\n            this.renderer.setProperty(input, \"placeholder\", this.placeholder);\n        }\n        if (isActive) {\n            this.selectNearestSegment(start);\n        }\n    }\n    caret(start, end = start) {\n        const isPosition = start !== undefined;\n        let returnValue = [start, start];\n        const element = this.inputElement;\n        if (isPosition && (this.disabled || this.readonly)) {\n            return undefined;\n        }\n        try {\n            if (element.selectionStart !== undefined) {\n                if (isPosition) {\n                    if (isDocumentAvailable() && document.activeElement !== element) {\n                        element.focus();\n                    }\n                    element.setSelectionRange(start, end);\n                }\n                returnValue = [element.selectionStart, element.selectionEnd];\n            }\n        }\n        catch (e) {\n            returnValue = [];\n        }\n        return returnValue;\n    }\n    selectNearestSegment(index) {\n        // Finds the nearest (in both directions) known part.\n        for (let i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n            if (i < this.currentFormat.length && this.currentFormat[i] !== \"_\") {\n                this.selectDateSegment(this.currentFormat[i]);\n                return;\n            }\n            if (j >= 0 && this.currentFormat[j] !== \"_\") {\n                this.selectDateSegment(this.currentFormat[j]);\n                return;\n            }\n        }\n    }\n    verifyRange() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (!isValidRange(this.min, this.max)) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$1} and ${MAX_DOC_LINK$1}.`);\n        }\n    }\n    verifyValue(value) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (value && !(value instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$1} for possible resolution.`);\n        }\n    }\n    putDateInRange() {\n        const currentDate = this.kendoDate.getDateObject();\n        const candidate = dateInRange(currentDate, this.min, this.max);\n        if (this.autoCorrect && !isEqual(currentDate, candidate)) {\n            this.kendoDate = this.getKendoDate(candidate);\n        }\n    }\n    updateFormatSections() {\n        this.formatSections = this.intl.splitDateFormat(this.format)\n            .reduce(({ date, time }, p) => {\n            return {\n                date: date || DATE_PART_REGEXP.test(p.type),\n                time: time || TIME_PART_REGEXP.test(p.type)\n            };\n        }, { date: false, time: false });\n    }\n    intlChange() {\n        this.updateFormatSections();\n        this.kendoDate = this.getKendoDate(this.value);\n        this.updateElementValue(this.isActive);\n    }\n    updateOnPaste() {\n        const value = this.intl.parseDate(this.inputValue, this.format) || this.value;\n        const notify = +value !== +this.value;\n        this.writeValue(value);\n        if (notify) {\n            this.notify();\n        }\n    }\n    bindEvents() {\n        const element = this.element.nativeElement;\n        const mousewheelHandler = this.handleMouseWheel.bind(this);\n        this.domEvents.push(this.renderer.listen(element, 'DOMMouseScroll', mousewheelHandler), this.renderer.listen(element, 'mousewheel', mousewheelHandler), this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)), this.renderer.listen(element, 'paste', this.handlePaste.bind(this)), this.renderer.listen(element, 'input', this.handleInput.bind(this)));\n    }\n    handleMouseWheel(event) {\n        if (this.disabled || this.readonly || !this.isActive) {\n            return;\n        }\n        event = window.event || event;\n        if (event.shiftKey) {\n            this.switchDateSegment((event.wheelDelta || -event.detail) > 0 ? -1 : 1);\n        }\n        else {\n            this.modifyDateSegmentValue((event.wheelDelta || -event.detail) > 0 ? 1 : -1);\n        }\n        event.returnValue = false;\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n    handlePaste() {\n        this.paste = true;\n    }\n    handleKeydown(event) {\n        if (this.disabled || this.readonly || event.altKey || event.ctrlKey || event.metaKey) {\n            return;\n        }\n        if (event.keyCode === Keys.Tab) {\n            const moved = this.switchDateSegment(event.shiftKey ? -1 : 1);\n            if (moved) {\n                event.preventDefault();\n            }\n            return;\n        }\n        if (event.keyCode === Keys.Backspace) {\n            this.backspace = true;\n            return;\n        }\n        switch (event.keyCode) {\n            case Keys.ArrowDown:\n                this.modifyDateSegmentValue(-1);\n                break;\n            case Keys.ArrowUp:\n                this.modifyDateSegmentValue(1);\n                break;\n            case Keys.ArrowRight:\n                this.switchDateSegment(1);\n                break;\n            case Keys.ArrowLeft:\n                this.switchDateSegment(-1);\n                break;\n            case Keys.Home:\n                this.selectNearestSegment(0);\n                break;\n            case Keys.End:\n                this.selectNearestSegment(this.inputValue.length);\n                break;\n            default:\n                return; //skip the preventDefault if we didn't handled the keyCode\n        }\n        event.preventDefault();\n    }\n    handleInput() {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        if (this.paste) {\n            this.updateOnPaste();\n            this.paste = false;\n            return;\n        }\n        const diff = approximateStringMatching(this.currentValue, this.currentFormat, this.inputValue, this.caret()[0]);\n        const navigationOnly = (diff.length === 1 && diff[0][1] === \"_\");\n        let switchPart = false;\n        if (!navigationOnly) {\n            let parsedPart;\n            for (let i = 0; i < diff.length; i++) {\n                parsedPart = this.kendoDate.parsePart(diff[i][0], diff[i][1], this.resetSegmentValue);\n                switchPart = parsedPart.switchToNext;\n            }\n            const candidate = this.kendoDate.getDateObject();\n            if (this.value && candidate && !this.formatSections.date) {\n                this.kendoDate = this.getKendoDate(setTime(this.value, candidate));\n            }\n        }\n        this.resetSegmentValue = false;\n        this.putDateInRange();\n        this.updateElementValue(this.isActive);\n        this.triggerChange();\n        if (diff.length && diff[0][0] !== \"_\") {\n            this.selectDateSegment(diff[0][0]);\n        }\n        if (switchPart || navigationOnly) {\n            this.switchDateSegment(1);\n        }\n        if (this.backspace) {\n            this.switchDateSegment(-1);\n        }\n        this.backspace = false;\n    }\n    emitFocus(args) {\n        this.onFocus.emit();\n        if (this.pickerService) {\n            this.pickerService.onFocus.emit(args);\n        }\n    }\n    emitBlur(args) {\n        this.onBlur.emit();\n        if (this.pickerService) {\n            this.pickerService.onBlur.emit(args);\n        }\n    }\n}\nDateInputComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-dateinput',\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DateInputComponent), multi: true },\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => DateInputComponent), multi: true },\n                    { provide: L10N_PREFIX, useValue: 'kendo.dateinput' },\n                    { provide: KendoInput, useExisting: forwardRef(() => DateInputComponent) },\n                    LocalizationService\n                ],\n                selector: 'kendo-dateinput',\n                template: `\n    <ng-container kendoDateInputLocalizedMessages\n        i18n-increment=\"kendo.dateinput.increment|The label for the **Increment** button in the DateInput\"\n        increment=\"Increase value\"\n\n        i18n-decrement=\"kendo.dateinput.decrement|The label for the **Decrement** button in the DateInput\"\n        decrement=\"Decrease value\"\n    >\n    </ng-container>\n    <span class=\"k-dateinput-wrap\" #wrap>\n        <input\n            #dateInput\n            autocomplete=\"off\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            spellcheck=\"false\"\n            class=\"k-input\"\n            [attr.role]=\"role\"\n            [attr.aria-readonly]=\"ariaReadOnly\"\n            [id]=\"focusableId\"\n            [title]=\"title\"\n            [tabindex]=\"tabindex\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [placeholder]=\"placeholder\"\n            [attr.aria-expanded]=\"isPopupOpen\"\n            [attr.aria-haspopup]=\"hasPopup\"\n            [kendoEventsOutsideAngular]=\"{\n                click: handleClick,\n                focus: handleFocus,\n                mousedown: handleMousedown,\n                touchstart: handleMousedown,\n                dragstart: handleDragAndDrop,\n                drop: handleDragAndDrop,\n                blur: handleBlur\n            }\"\n            [scope]=\"this\"\n            />\n        <span *ngIf=\"spinners\" class=\"k-select\" (mousedown)=\"$event.preventDefault()\">\n            <span\n                class=\"k-link k-link-increase\"\n                [class.k-state-active]=\"arrowDirection === arrow.Up\"\n                (mousedown)=\"arrowDirection = arrow.Up\"\n                (mouseleave)=\"arrowDirection = arrow.None\"\n                (click)=\"handleButtonClick(1)\"\n                [title]=\"localization.get('increment')\"\n                [attr.aria-label]=\"localization.get('increment')\">\n                <span class=\"k-icon k-i-arrow-n\"></span>\n            </span>\n            <span\n                class=\"k-link k-link-decrease\"\n                (click)=\"handleButtonClick(-1)\"\n                [class.k-state-active]=\"arrowDirection === arrow.Down\"\n                (mousedown)=\"arrowDirection = arrow.Down\"\n                (mouseleave)=\"arrowDirection = arrow.None\"\n                [title]=\"localization.get('decrement')\"\n                [attr.aria-label]=\"localization.get('decrement')\">\n                <span class=\"k-icon k-i-arrow-s\"></span>\n            </span>\n        </span>\n    </span>\n  `\n            },] },\n];\n/** @nocollapse */\nDateInputComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: IntlService },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Injector },\n    { type: LocalizationService },\n    { type: PickerService, decorators: [{ type: Optional }] }\n];\nDateInputComponent.propDecorators = {\n    focusableId: [{ type: Input }],\n    disabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    title: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    role: [{ type: Input }],\n    ariaReadOnly: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    format: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    steps: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    autoCorrect: [{ type: Input }],\n    value: [{ type: Input }],\n    spinners: [{ type: Input }],\n    isPopupOpen: [{ type: Input }],\n    hasPopup: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    valueUpdate: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    dateInput: [{ type: ViewChild, args: ['dateInput', { static: true },] }],\n    wrap: [{ type: ViewChild, args: ['wrap',] }],\n    wrapperClass: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-dateinput',] }],\n    disabledClass: [{ type: HostBinding, args: ['class.k-state-disabled',] }]\n};\n\n/**\n * A preventable event instance which is triggered by the `open` and `close` events.\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * @hidden\n */\nconst TOUCH_ENABLED = new InjectionToken('dateinputs-touch-enabled');\n\n/**\n * @hidden\n */\nconst disabledDatesValidator = (isDateDisabled) => {\n    return (control) => {\n        if (!isDateDisabled || !control.value) {\n            return null;\n        }\n        const error = {\n            disabledDate: true\n        };\n        return isDateDisabled(control.value) ? error : null;\n    };\n};\n\n/* tslint:disable:max-line-length */\nconst MIN_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-min';\nconst MAX_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/DatePickerComponent/#toc-max';\nconst VALUE_DOC_LINK$2 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/datepicker/#toc-using-with-json';\n/**\n * Represents the [Kendo UI DatePicker component for Angular]({% slug overview_datepicker %}#toc-basic-usage).\n */\nclass DatePickerComponent {\n    constructor(zone, localization, cdr, popupService, element, renderer, injector, pickerService, disabledDatesService, touchEnabled$$1) {\n        this.zone = zone;\n        this.localization = localization;\n        this.cdr = cdr;\n        this.popupService = popupService;\n        this.element = element;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.pickerService = pickerService;\n        this.disabledDatesService = disabledDatesService;\n        this.touchEnabled = touchEnabled$$1;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Defines the active view that the Calendar initially renders\n         * ([see example]({% slug activeview_datepicker %})).\n         * By default, the active view is `month`.\n         *\n         * > You have to set `activeView` within the `topView`-`bottomView` range.\n         */\n        this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the bottommost Calendar view to which the user can navigate\n         * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n         */\n        this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the topmost Calendar view to which the user can navigate\n         * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n         */\n        this.topView = CalendarViewEnum[CalendarViewEnum.century];\n        /**\n         * Sets or gets the `disabled` property of the DatePicker and determines whether the component is active\n         * ([see example]({% slug disabled_datepicker %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the DatePicker\n         * ([see example]({% slug readonly_datepicker %}#toc-read-only-datepicker)).\n         */\n        this.readonly = false;\n        /**\n         * Sets the read-only state of the DatePicker input field\n         * ([see example]({% slug readonly_datepicker %}#toc-read-only-input)).\n         *\n         * > Note that if you set the [`readonly`]({% slug api_dateinputs_datepickercomponent %}#toc-readonly) property value to `true`,\n         * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n         */\n        this.readOnlyInput = false;\n        /**\n         * Sets or gets the `navigation` property of the Calendar\n         * and determines whether the navigation side-bar is displayed.\n         * ([see example]({% slug sidebar_datepicker %})).\n         */\n        this.navigation = true;\n        /**\n         * Specifies the smallest valid date\n         * ([see example]({% slug dateranges_datepicker %})).\n         */\n        this.min = cloneDate(MIN_DATE);\n        /**\n         * Specifies the biggest valid date\n         * ([see example]({% slug dateranges_datepicker %})).\n         */\n        this.max = cloneDate(MAX_DATE);\n        /**\n         * Specifies the focused date of the Calendar component\n         * ([see example]({% slug dates_datepicker %})).\n         */\n        this.focusedDate = null;\n        /**\n         * Specifies the date format that is used to display the input value\n         * ([see example]({% slug formats_datepicker %})).\n         */\n        this.format = \"d\";\n        /**\n         * Specifies the hint the DatePicker displays when its value is `null`.\n         * ([more information and exaples]({% slug placeholders_datepicker %})).\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-datepicker placeholder=\"Enter birth date...\"></kendo-datepicker>\n         * `\n         * })\n         * class AppComponent { }\n         * ```\n         */\n        this.placeholder = null;\n        /**\n         * Sets or gets the `tabindex` property of the DatePicker.\n         */\n        this.tabindex = 0;\n        /**\n         * Sets the title of the input element of the DatePicker.\n         */\n        this.title = \"\";\n        /**\n         * Determines whether the built-in min or max validators are enforced when validating a form.\n         */\n        this.rangeValidation = true;\n        /**\n         * Determines whether the built-in validator for disabled\n         * date ranges is enforced when validating a form\n         * ([see example]({% slug disabled_dates_datepicker %}#toc-validation)).\n         */\n        this.disabledDatesValidation = true;\n        /**\n         * Determines whether to display a week number column in the `month` view of the Calendar\n         * ([see example]({% slug weeknumcolumn_datepicker %})).\n         */\n        this.weekNumber = false;\n        /**\n         * Fires each time the user selects a new value\n         * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user focuses the input element\n         * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-datepicker (focus)=\"handleFocus()\"></kendo-datepicker>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log(\"Component is focused\");\n         *   }\n         * }\n         * ```\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the input element gets blurred\n         * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-datepicker (blur)=\"handleBlur()\"></kendo-datepicker>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log(\"Component is blurred\");\n         *   }\n         * }\n         * ```\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed\n         * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open\n         * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n         */\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.wrapperClasses = true;\n        this.popupUID = guid();\n        this._popupSettings = { animate: true };\n        this._show = false;\n        this._value = null;\n        this._active = false;\n        this.onControlChange = noop;\n        this.onControlTouched = noop;\n        this.onValidatorChange = noop;\n        this.minValidateFn = noop;\n        this.maxValidateFn = noop;\n        this.disabledDatesValidateFn = noop;\n        this.resolvedPromise = Promise.resolve(null);\n        this.domEvents = [];\n        this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n        this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n        this.pickerSubscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleSameSelection.bind(this)));\n    }\n    /**\n     * @hidden\n     */\n    set cellTemplateRef(template) {\n        this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set monthCellTemplateRef(template) {\n        this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set yearCellTemplateRef(template) {\n        this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set decadeCellTemplateRef(template) {\n        this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set centuryCellTemplateRef(template) {\n        this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set weekNumberTemplateRef(template) {\n        this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set headerTitleTemplateRef(template) {\n        this.headerTitleTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set navigationItemTemplateRef(template) {\n        this.navigationItemTemplate = template;\n    }\n    /**\n     * Configures the popup options of the DatePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({}, { animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Specifies the value of the DatePicker component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    set value(value) {\n        this.verifyValue(value);\n        this._value = cloneDate(value);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Sets the dates of the DatePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datepicker %})).\n     */\n    set disabledDates(value) {\n        this._disabledDates = value;\n        this.disabledDatesService.initialize(value);\n    }\n    get disabledDates() {\n        return this._disabledDates;\n    }\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n        return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n    get inputRole() {\n        return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n    get isActive() {\n        return this._active;\n    }\n    set isActive(value) {\n        this._active = value;\n        if (!this.wrapper) {\n            return;\n        }\n        const element = this.wrapper.nativeElement;\n        if (value) {\n            this.renderer.addClass(element, 'k-state-focused');\n        }\n        else {\n            this.renderer.removeClass(element, 'k-state-focused');\n        }\n    }\n    get show() {\n        return this._show;\n    }\n    set show(show) {\n        if (show && (this.disabled || this.readonly)) {\n            return;\n        }\n        const skipZone = !show && (!this._show || !hasObservers(this.close));\n        if (!skipZone) {\n            this.zone.run(() => {\n                this.togglePopup(show);\n            });\n        }\n        else {\n            this.togglePopup(show);\n        }\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty() {\n        return !this.value && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.localizationChangeSubscription = this.localization\n            .changes\n            .subscribe(() => this.cdr.markForCheck());\n        this.control = this.injector.get(NgControl, null);\n        if (this.element) {\n            this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n            this.zone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        this.verifySettings();\n        if (changes.min || changes.max || changes.rangeValidation || changes.disabledDatesValidation || changes.disabledDates) {\n            this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n            this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n            this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop;\n            this.onValidatorChange();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.isActive = false;\n        this.show = false;\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n        if (this.windowBlurSubscription) {\n            this.windowBlurSubscription.unsubscribe();\n        }\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n        this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this.show;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.verifyValue(value);\n        this.value = cloneDate(value);\n        this.cdr.markForCheck();\n        if (!value && this.input) {\n            this.input.placeholder = this.placeholder;\n            this.input.writeValue(value);\n        }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * Focuses the DatePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"datepicker.focus()\">Focus date picker</button>\n     *  <kendo-datepicker #datepicker></kendo-datepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        this.input.focus();\n    }\n    /**\n     * Blurs the DatePicker component.\n     */\n    blur() {\n        (this.calendar || this.input)['blur'](); //tslint:disable-line:no-string-literal\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.resolvedPromise.then(() => {\n            this._toggle((show === undefined) ? !this.show : show);\n        });\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        event.preventDefault();\n        this.focusInput();\n        //XXX: explicitly call the handleFocus handler here\n        //due to async IE focus event\n        this.handleFocus();\n        this.show = !this.show;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(args) {\n        args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleChange(value) {\n        this.cdr.markForCheck();\n        this.focusInput();\n        this.value = value;\n        this.show = false;\n        this.onControlChange(cloneDate(value));\n        this.valueChange.emit(cloneDate(value));\n    }\n    /**\n     * @hidden\n     */\n    handleInputChange(value) {\n        this.handleChange(this.input.formatSections.time ? value : this.mergeTime(value));\n    }\n    /**\n     * @hidden\n     */\n    get popupClasses() {\n        return [\n            'k-calendar-container',\n            'k-group',\n            'k-reset'\n        ].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    get input() {\n        return this.pickerService.input;\n    }\n    get calendar() {\n        return this.pickerService.calendar;\n    }\n    /**\n     * @hidden\n     */\n    mergeTime(value) {\n        return this.value && value ? setTime(value, this.value) : value;\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(e) {\n        const { altKey, keyCode } = e;\n        if (keyCode === Keys.Escape) {\n            this.show = false;\n        }\n        if (altKey) {\n            if (keyCode === Keys.ArrowDown && !this.show) {\n                this.show = true;\n            }\n            if (keyCode === Keys.ArrowUp) {\n                this.show = false;\n            }\n        }\n        if (keyCode === Keys.Tab && this.show && this.calendar.isActive) {\n            this.input.focus();\n            this.show = false;\n        }\n    }\n    togglePopup(show) {\n        const event = new PreventableEvent();\n        if (!this._show && show) {\n            this.open.emit(event);\n        }\n        else if (this._show && !show) {\n            this.close.emit(event);\n        }\n        if (event.isDefaultPrevented()) {\n            return;\n        }\n        this._toggle(show);\n        this.toggleFocus();\n    }\n    _toggle(show) {\n        if (show === this._show) {\n            return;\n        }\n        this._show = show;\n        if (show) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchor: this.wrapper,\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                animate: this.popupSettings.animate,\n                appendTo: this.appendTo,\n                content: this.popupTemplate,\n                popupAlign: { vertical: 'top', horizontal: direction },\n                popupClass: this.popupClasses,\n                positionMode: 'absolute'\n            });\n            this.popupRef.popupElement.setAttribute('id', this.popupUID);\n            this.subscription = this.popupRef.popupAnchorViewportLeave.subscribe(() => this.show = false);\n        }\n        else {\n            this.popupRef.close();\n            this.popupRef = null;\n            this.subscription.unsubscribe();\n        }\n    }\n    focusInput() {\n        if (this.touchEnabled) {\n            return;\n        }\n        this.input.focus();\n    }\n    toggleFocus() {\n        if (!this.isActive) {\n            return;\n        }\n        if (this.show) {\n            if (!this.calendar) {\n                this.cdr.detectChanges();\n            }\n            if (this.calendar) {\n                this.calendar.focus();\n            }\n        }\n        else if (!this.touchEnabled) {\n            this.input.focus();\n        }\n        else if (!this.input.isActive) {\n            this.handleBlur();\n        }\n    }\n    verifySettings() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (!isValidRange(this.min, this.max)) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$2} and ${MAX_DOC_LINK$2}.`);\n        }\n    }\n    verifyValue(value) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (value && !(value instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$2} for possible resolution.`);\n        }\n    }\n    bindEvents() {\n        const element = this.element.nativeElement;\n        this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n        if (isWindowAvailable()) {\n            this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n        }\n    }\n    handleFocus() {\n        if (this.isActive) {\n            return;\n        }\n        this.isActive = true;\n        if (hasObservers(this.onFocus)) {\n            this.zone.run(() => {\n                this.onFocus.emit();\n            });\n        }\n    }\n    handleWindowBlur() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.show = false;\n    }\n    handleBlur(args) {\n        const currentTarget = args && currentFocusTarget(args);\n        if (currentTarget && (this.input.containsElement(currentTarget) ||\n            (this.calendar && this.calendar.containsElement(currentTarget)))) {\n            return;\n        }\n        if (hasObservers(this.onBlur) || (this.show && hasObservers(this.close)) || requiresZoneOnBlur(this.control)) {\n            this.zone.run(() => {\n                this.blurComponent();\n                this.cdr.markForCheck();\n            });\n        }\n        else {\n            this.blurComponent();\n        }\n    }\n    blurComponent() {\n        this.isActive = false; // order is important ¯\\_(ツ)_/¯\n        this.show = false;\n        this.cdr.detectChanges();\n        this.onControlTouched();\n        this.onBlur.emit();\n    }\n    handleSameSelection() {\n        if (this.show) {\n            this.focusInput();\n            this.show = false;\n        }\n    }\n}\nDatePickerComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-datepicker',\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatePickerComponent), multi: true },\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => DatePickerComponent), multi: true },\n                    { provide: KendoInput, useExisting: forwardRef(() => DatePickerComponent) },\n                    LocalizationService,\n                    PickerService,\n                    DisabledDatesService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.datepicker'\n                    }\n                ],\n                selector: 'kendo-datepicker',\n                template: `\n        <ng-container kendoDatePickerLocalizedMessages\n            i18n-today=\"kendo.datepicker.today|The label for the today button in the calendar header\"\n            today=\"TODAY\"\n\n            i18n-toggle=\"kendo.datepicker.toggle|The label for the toggle button in the datepicker component\"\n            toggle=\"Toggle calendar\"\n        >\n        </ng-container>\n        <span #wrapper\n            class=\"k-picker-wrap\"\n            [class.k-state-disabled]=\"disabled\"\n        >\n            <kendo-dateinput\n                #input\n                [role]=\"inputRole\"\n                [focusableId]=\"focusableId\"\n                [hasPopup]=\"true\"\n                [isPopupOpen]=\"show\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly || readOnlyInput\"\n                [ariaReadOnly]=\"readonly\"\n                [tabindex]=\"tabindex\"\n                [title]=\"title\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [value]=\"value\"\n                (valueChange)=\"handleInputChange($event)\"\n            ></kendo-dateinput>\n            <span class=\"k-select\"\n                role=\"button\"\n                [attr.title]=\"localization.get('toggle')\"\n                [attr.aria-label]=\"localization.get('toggle')\"\n                [kendoEventsOutsideAngular]=\"{\n                    click: handleIconClick,\n                    mousedown: handleMousedown\n                }\"\n                [scope]=\"this\"\n            >\n                <span class=\"k-icon k-i-calendar\"></span>\n            </span>\n        </span>\n        <ng-container #container></ng-container>\n        <ng-template #popupTemplate>\n            <kendo-calendar\n                #calendar\n                [min]=\"min\"\n                [max]=\"max\"\n                [navigation]=\"navigation\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [weekNumber]=\"weekNumber\"\n                [cellTemplate]=\"cellTemplate\"\n                [monthCellTemplate]=\"monthCellTemplate\"\n                [yearCellTemplate]=\"yearCellTemplate\"\n                [decadeCellTemplate]=\"decadeCellTemplate\"\n                [centuryCellTemplate]=\"centuryCellTemplate\"\n                [weekNumberTemplate]=\"weekNumberTemplate\"\n                [headerTitleTemplate]=\"headerTitleTemplate\"\n                [navigationItemTemplate]=\"navigationItemTemplate\"\n                [focusedDate]=\"focusedDate\"\n                [value]=\"value\"\n                (valueChange)=\"handleChange(mergeTime($event))\"\n                [kendoEventsOutsideAngular]=\"{\n                    keydown: handleKeydown\n                }\"\n                [scope]=\"this\"\n                [disabledDates]=\"disabledDates\"\n            >\n                <kendo-calendar-messages [today]=\"localization.get('today')\">\n                </kendo-calendar-messages>\n            </kendo-calendar>\n        <ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nDatePickerComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: PopupService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: PickerService },\n    { type: DisabledDatesService },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [TOUCH_ENABLED,] }] }\n];\nDatePickerComponent.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper',] }],\n    cellTemplate: [{ type: ContentChild, args: [CellTemplateDirective,] }],\n    cellTemplateRef: [{ type: Input, args: ['cellTemplate',] }],\n    monthCellTemplate: [{ type: ContentChild, args: [MonthCellTemplateDirective,] }],\n    monthCellTemplateRef: [{ type: Input, args: ['monthCellTemplate',] }],\n    yearCellTemplate: [{ type: ContentChild, args: [YearCellTemplateDirective,] }],\n    yearCellTemplateRef: [{ type: Input, args: ['yearCellTemplate',] }],\n    decadeCellTemplate: [{ type: ContentChild, args: [DecadeCellTemplateDirective,] }],\n    decadeCellTemplateRef: [{ type: Input, args: ['decadeCellTemplate',] }],\n    centuryCellTemplate: [{ type: ContentChild, args: [CenturyCellTemplateDirective,] }],\n    centuryCellTemplateRef: [{ type: Input, args: ['centuryCellTemplate',] }],\n    weekNumberTemplate: [{ type: ContentChild, args: [WeekNumberCellTemplateDirective,] }],\n    weekNumberTemplateRef: [{ type: Input, args: ['weekNumberTemplate',] }],\n    headerTitleTemplate: [{ type: ContentChild, args: [HeaderTitleTemplateDirective,] }],\n    headerTitleTemplateRef: [{ type: Input, args: ['headerTitleTemplate',] }],\n    navigationItemTemplate: [{ type: ContentChild, args: [NavigationItemTemplateDirective,] }],\n    navigationItemTemplateRef: [{ type: Input, args: ['navigationItemTemplate',] }],\n    focusableId: [{ type: Input }],\n    activeView: [{ type: Input }],\n    bottomView: [{ type: Input }],\n    topView: [{ type: Input }],\n    disabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    readOnlyInput: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    navigation: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    value: [{ type: Input }],\n    format: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    disabledDates: [{ type: Input }],\n    title: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    disabledDatesValidation: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    wrapperClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-datepicker',] }],\n    disabledClass: [{ type: HostBinding, args: ['class.k-state-disabled',] }]\n};\n\n/**\n * @hidden\n */\nconst TIME_PART = {\n    dayperiod: 'dayperiod',\n    hour: 'hour',\n    millisecond: 'millisecond',\n    minute: 'minute',\n    second: 'second'\n};\n\n/**\n * @hidden\n */\nconst timeRangeValidator = (min, max) => {\n    return (control) => {\n        if (!min || !max || !control.value) {\n            return null;\n        }\n        const err = {\n            timeRangeError: {\n                maxValue: max,\n                minValue: min,\n                value: control.value\n            }\n        };\n        return isInTimeRange(control.value, min, max) ? null : err;\n    };\n};\n\nconst VALUE_DOC_LINK$3 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/timepicker/#toc-integration-with-json';\nconst INTL_DATE_FORMAT = 'https://github.com/telerik/kendo-intl/blob/master/docs/date-formatting/index.md';\nconst formatRegExp = new RegExp(`${TIME_PART.hour}|${TIME_PART.minute}|${TIME_PART.second}|${TIME_PART.dayperiod}|literal`);\n/**\n * Represents the [Kendo UI TimePicker component for Angular]({% slug overview_timepicker %}#toc-basic-usage).\n */\nclass TimePickerComponent {\n    constructor(zone, localization, cdr, popupService, element, renderer, injector, pickerService, intl, touchEnabled$$1) {\n        this.zone = zone;\n        this.localization = localization;\n        this.cdr = cdr;\n        this.popupService = popupService;\n        this.element = element;\n        this.renderer = renderer;\n        this.injector = injector;\n        this.pickerService = pickerService;\n        this.intl = intl;\n        this.touchEnabled = touchEnabled$$1;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Sets or gets the `disabled` property of the TimePicker and\n         * determines whether the component is active\n         * ([see example]({% slug disabled_timepicker %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the TimePicker\n         * ([see example]({% slug readonly_timepicker %}#toc-read-only-timepicker)).\n         */\n        this.readonly = false;\n        /**\n         * Sets the read-only state of the TimePicker input field\n         * ([see example]({% slug readonly_timepicker %}#toc-read-only-input)).\n         *\n         * > Note that if you set the [`readonly`]({% slug api_dateinputs_timepickercomponent %}#toc-readonly) property value to `true`,\n         * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n         */\n        this.readOnlyInput = false;\n        /**\n         * Specifies the time format that is used to display the input value\n         * ([see example]({% slug formats_timepicker %})).\n         */\n        this.format = 't';\n        /**\n         * Specifies the hint the TimePicker displays when its value is `null`.\n         * For more information, refer to the article on\n         * [placeholders]({% slug placeholders_timepicker %}).\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-timepicker placeholder=\"Enter start...\"></kendo-timepicker>\n         * `\n         * })\n         * class AppComponent { }\n         * ```\n         */\n        this.placeholder = null;\n        /**\n         * Determines whether to display the **Cancel** button in the popup.\n         */\n        this.cancelButton = true;\n        /**\n         * Determines whether to display the **Now** button in the popup.\n         *\n         * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n         */\n        this.nowButton = true;\n        /**\n         * Sets or gets the `tabindex` property of the TimePicker.\n         */\n        this.tabindex = 0;\n        /**\n         * Sets the title of the input element of the TimePicker.\n         */\n        this.title = \"\";\n        /**\n         * Determines whether the built-in min or max validators are enforced when a form is being validated.\n         */\n        this.rangeValidation = true;\n        /**\n         * Fires each time the user selects a new value.\n         * For more information, refer to the section on\n         * [events]({% slug overview_timepicker %}#toc-events).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user focuses the input element.\n         * For more information, refer to the section on\n         * [events]({% slug overview_timepicker %}#toc-events).\n         *\n         * > To wire the event programmatically, use the `onFocus` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-timepicker (focus)=\"handleFocus()\"></kendo-timepicker>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleFocus(): void {\n         *      console.log(\"Component is focused\");\n         *   }\n         * }\n         * ```\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the input element gets blurred.\n         * For more information, refer to the section on\n         * [events]({% slug overview_timepicker %}#toc-events).\n         *\n         * > To wire the event programmatically, use the `onBlur` property.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <kendo-timepicker (blur)=\"handleBlur()\"></kendo-timepicker>\n         * `\n         * })\n         * class AppComponent {\n         *   public handleBlur(): void {\n         *      console.log(\"Component is blurred\");\n         *   }\n         * }\n         * ```\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed.\n         * For more information, refer to the section on\n         * [events]({% slug overview_timepicker %}#toc-events).\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open.\n         * For more information, refer to the section on\n         * [events]({% slug overview_timepicker %}#toc-events).\n         */\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.wrapperClasses = true;\n        this.popupUID = guid();\n        this.onControlChange = noop;\n        this.onControlTouched = noop;\n        this.onValidatorChange = noop;\n        this.resolvedPromise = Promise.resolve(null);\n        this.timeRangeValidateFn = noop;\n        this._min = cloneDate(MIN_TIME);\n        this._max = cloneDate(MAX_TIME);\n        this._popupSettings = { animate: true };\n        this._show = false;\n        this._steps = {};\n        this._value = null;\n        this._active = false;\n        this.domEvents = [];\n        this.pickerSubscriptions = this.pickerService.onFocus.subscribe(this.handleFocus.bind(this));\n        this.pickerSubscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n    }\n    /**\n     * Specifies the smallest valid time value\n     * ([see example]({% slug timeranges_timepicker %})).\n     */\n    set min(min) {\n        this._min = cloneDate(min || MIN_TIME);\n    }\n    get min() {\n        return this._min;\n    }\n    /**\n     * Specifies the biggest valid time value\n     * ([see example]({% slug timeranges_timepicker %})).\n     */\n    set max(max) {\n        this._max = cloneDate(max || MAX_TIME);\n    }\n    get max() {\n        return this._max;\n    }\n    /**\n     * Configures the incremental steps of the TimePicker.\n     * For more information, refer to the article on\n     * [incremental steps]({% slug incrementalsteps_timepicker %}).\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timepicker format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15 };\n     * }\n     * ```\n     *\n     */\n    set steps(steps) {\n        this._steps = steps || {};\n    }\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Configures the popup of the TimePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({}, { animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Specifies the value of the TimePicker component.\n     */\n    set value(value) {\n        this.verifyValue(value);\n        this._value = cloneDate(value);\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n        return this.disabled;\n    }\n    /**\n     * @hidden\n     */\n    get inputRole() {\n        return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n    get isActive() {\n        return this._active;\n    }\n    set isActive(value) {\n        this._active = value;\n        if (!this.wrapper) {\n            return;\n        }\n        const element = this.wrapper.nativeElement;\n        if (value) {\n            this.renderer.addClass(element, 'k-state-focused');\n        }\n        else {\n            this.renderer.removeClass(element, 'k-state-focused');\n        }\n    }\n    get show() {\n        return this._show;\n    }\n    set show(show) {\n        if (show && (this.disabled || this.readonly)) {\n            return;\n        }\n        const skipZone = !show && (!this._show || !hasObservers(this.close));\n        if (!skipZone) {\n            this.zone.run(() => {\n                this.togglePopup(show);\n            });\n        }\n        else {\n            this.togglePopup(show);\n        }\n    }\n    get input() {\n        return this.pickerService.input;\n    }\n    get timeSelector() {\n        return this.pickerService.timeSelector;\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty\n     */\n    isEmpty() {\n        return !this.value && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.localizationChangeSubscription = this.localization\n            .changes.subscribe(() => this.cdr.markForCheck());\n        this.control = this.injector.get(NgControl, null);\n        if (this.element) {\n            this.renderer.removeAttribute(this.element.nativeElement, 'tabindex');\n            this.zone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (changes.min || changes.max || changes.rangeValidation) {\n            this.timeRangeValidateFn = this.rangeValidation ? timeRangeValidator(this.min, this.max) : noop;\n            this.onValidatorChange();\n        }\n        if (changes.format) {\n            this.verifyFormat();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.isActive = false;\n        this.show = false;\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n        if (this.windowBlurSubscription) {\n            this.windowBlurSubscription.unsubscribe();\n        }\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n        this.pickerSubscriptions.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    handleKeydown(event) {\n        const { altKey, keyCode } = event;\n        if (keyCode === Keys.Escape) {\n            this.show = false;\n            return;\n        }\n        if (altKey) {\n            if (keyCode === Keys.ArrowUp) {\n                this.show = false;\n            }\n            if (keyCode === Keys.ArrowDown && !this.show) {\n                this.show = true;\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.verifyValue(value);\n        this.value = cloneDate(value);\n        this.cdr.markForCheck();\n        if (!value && this.input) {\n            this.input.placeholder = this.placeholder;\n            this.input.writeValue(value);\n        }\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.timeRangeValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * Focuses the TimePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timepicker.focus()\">Focus time picker</button>\n     *  <kendo-timepicker #timepicker></kendo-timepicker>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        this.input.focus();\n    }\n    /**\n     * Blurs the TimePicker component.\n     */\n    blur() {\n        (this.timeSelector || this.input)['blur'](); //tslint:disable-line:no-string-literal\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.resolvedPromise.then(() => {\n            this._toggle((show === undefined) ? !this.show : show);\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this.show;\n    }\n    /**\n     * @hidden\n     */\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * @hidden\n     */\n    handleChange(value) {\n        if (isEqual(this.value, value)) {\n            this.focusInput();\n            this.show = false;\n            return;\n        }\n        this.value = cloneDate(value);\n        this.zone.run(() => {\n            this.focusInput();\n            this.show = false;\n            this.onControlChange(cloneDate(value));\n            this.valueChange.emit(cloneDate(value));\n        });\n    }\n    /**\n     * @hidden\n     */\n    handleReject() {\n        this.show = false;\n    }\n    /**\n     * @hidden\n     */\n    handleInputChange(value) {\n        const val = this.input.formatSections.date ? value : this.mergeTime(value);\n        this.handleChange(val);\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(args) {\n        args.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        event.preventDefault();\n        this.focusInput();\n        //XXX: explicit call handleFocus handler here\n        //due to async IE focus event\n        this.handleFocus();\n        this.show = !this.show;\n    }\n    /**\n     * @hidden\n     */\n    get popupClasses() {\n        return [\n            'k-group',\n            'k-reset'\n        ].concat(this.popupSettings.popupClass || []);\n    }\n    /**\n     * @hidden\n     */\n    normalizeTime(date) {\n        return setTime(MIDNIGHT_DATE, date);\n    }\n    /**\n     * @hidden\n     */\n    mergeTime(value) {\n        return this.value && value ? setTime(this.value, value) : value;\n    }\n    togglePopup(show) {\n        const event = new PreventableEvent();\n        if (!this._show && show) {\n            this.open.emit(event);\n        }\n        else if (this._show && !show) {\n            this.close.emit(event);\n        }\n        if (event.isDefaultPrevented()) {\n            return;\n        }\n        this._toggle(show);\n        this.toggleFocus();\n    }\n    _toggle(show) {\n        if (show === this.isOpen) {\n            return;\n        }\n        this._show = show;\n        this.cdr.markForCheck();\n        if (show) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchor: this.wrapper,\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                animate: this.popupSettings.animate,\n                appendTo: this.appendTo,\n                content: this.popupTemplate,\n                popupAlign: { vertical: 'top', horizontal: direction },\n                popupClass: this.popupClasses,\n                positionMode: 'absolute'\n            });\n            this.popupRef.popupElement.setAttribute('id', this.popupUID);\n            this.popupRef.popupAnchorViewportLeave.subscribe(() => this.show = false);\n        }\n        else {\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    focusInput() {\n        if (this.touchEnabled) {\n            return;\n        }\n        this.input.focus();\n    }\n    toggleFocus() {\n        if (!this.isActive) {\n            return;\n        }\n        if (this.show) {\n            if (!this.timeSelector) {\n                this.cdr.detectChanges();\n            }\n            if (this.isActive) {\n                this.timeSelector.focus();\n            }\n        }\n        else if (!this.touchEnabled) {\n            this.input.focus();\n        }\n        else if (!this.input.isActive) {\n            this.handleBlur();\n        }\n    }\n    verifyValue(value) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (value && !(value instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$3} for possible resolution.`);\n        }\n    }\n    verifyFormat() {\n        if (!isDevMode()) {\n            return;\n        }\n        const formatContainsDateParts = this.intl.splitDateFormat(this.format).some(part => !formatRegExp.test(part.type));\n        if (formatContainsDateParts) {\n            throw new Error(`Provided format is not supported. Supported specifiers are T|t|H|h|m|s|a. See ${INTL_DATE_FORMAT}`);\n        }\n    }\n    bindEvents() {\n        const element = this.element.nativeElement;\n        this.domEvents.push(this.renderer.listen(element, 'keydown', this.handleKeydown.bind(this)));\n        if (isWindowAvailable()) {\n            this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this));\n        }\n    }\n    handleWindowBlur() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.show = false;\n    }\n    handleFocus() {\n        if (this.isActive) {\n            return;\n        }\n        this.isActive = true;\n        if (hasObservers(this.onFocus)) {\n            this.zone.run(() => {\n                this.onFocus.emit();\n            });\n        }\n    }\n    handleBlur(args) {\n        const currentTarget = args && currentFocusTarget(args);\n        if (currentTarget && (this.input.containsElement(currentTarget) ||\n            (this.timeSelector && this.timeSelector.containsElement(currentTarget)))) {\n            return;\n        }\n        if (hasObservers(this.onBlur) || (this.show && hasObservers(this.close)) || requiresZoneOnBlur(this.control)) {\n            this.zone.run(() => {\n                this.blurComponent();\n                this.cdr.markForCheck();\n            });\n        }\n        else {\n            this.blurComponent();\n        }\n    }\n    blurComponent() {\n        this.isActive = false; // order is important ¯\\_(ツ)_/¯\n        this.show = false;\n        this.onControlTouched();\n        this.onBlur.emit();\n    }\n}\nTimePickerComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-timepicker',\n                providers: [\n                    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TimePickerComponent), multi: true },\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => TimePickerComponent), multi: true },\n                    { provide: KendoInput, useExisting: forwardRef(() => TimePickerComponent) },\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.timepicker'\n                    },\n                    PickerService\n                ],\n                selector: 'kendo-timepicker',\n                template: `\n        <ng-container kendoTimePickerLocalizedMessages\n            i18n-accept=\"kendo.timepicker.accept|The Accept button text in the timepicker component\"\n            accept=\"Set\"\n\n            i18n-acceptLabel=\"kendo.timepicker.acceptLabel|The label for the Accept button in the timepicker component\"\n            acceptLabel=\"Set time\"\n\n            i18n-cancel=\"kendo.timepicker.cancel|The Cancel button text in the timepicker component\"\n            cancel=\"Cancel\"\n\n            i18n-cancelLabel=\"kendo.timepicker.cancelLabel|The label for the Cancel button in the timepicker component\"\n            cancelLabel=\"Cancel changes\"\n\n            i18n-now=\"kendo.timepicker.now|The Now button text in the timepicker component\"\n            now=\"Now\"\n\n            i18n-nowLabel=\"kendo.timepicker.nowLabel|The label for the Now button in the timepicker component\"\n            nowLabel=\"Select now\"\n\n            i18n-toggle=\"kendo.timepicker.toggle|The label for the toggle button in the timepicker component\"\n            toggle=\"Toggle time list\"\n        >\n        </ng-container>\n        <span #wrapper\n            class=\"k-picker-wrap\"\n            [class.k-state-disabled]=\"disabled\"\n        >\n            <kendo-dateinput\n                #input\n                [focusableId]=\"focusableId\"\n                [hasPopup]=\"true\"\n                [isPopupOpen]=\"show\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly || readOnlyInput\"\n                [role]=\"inputRole\"\n                [ariaReadOnly]=\"readonly\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [min]=\"normalizeTime(min)\"\n                [max]=\"normalizeTime(max)\"\n                [steps]=\"steps\"\n                [tabindex]=\"!show ? tabindex : -1\"\n                [title]=\"title\"\n                [value]=\"value\"\n                (valueChange)=\"handleInputChange($event)\"\n            ></kendo-dateinput>\n            <span class=\"k-select\"\n                role=\"button\"\n                [attr.title]=\"localization.get('toggle')\"\n                [attr.aria-label]=\"localization.get('toggle')\"\n                [kendoEventsOutsideAngular]=\"{\n                    click: handleIconClick,\n                    mousedown: handleMousedown\n                }\"\n                [scope]=\"this\"\n            >\n                <span class=\"k-icon k-i-clock\"></span>\n            </span>\n            <ng-template #popupTemplate>\n                <kendo-timeselector\n                    #timeSelector\n                    [cancelButton]=\"cancelButton\"\n                    [nowButton]=\"nowButton\"\n                    [format]=\"format\"\n                    [min]=\"min\"\n                    [max]=\"max\"\n                    [steps]=\"steps\"\n                    [value]=\"value\"\n                    [kendoEventsOutsideAngular]=\"{\n                        keydown: handleKeydown,\n                        mousedown: handleMousedown\n                    }\"\n                    [scope]=\"this\"\n                    (valueChange)=\"handleChange($event)\"\n                    (valueReject)=\"handleReject()\"\n                >\n                    <kendo-timeselector-messages\n                        [acceptLabel]=\"localization.get('acceptLabel')\"\n                        [accept]=\"localization.get('accept')\"\n                        [cancelLabel]=\"localization.get('cancelLabel')\"\n                        [cancel]=\"localization.get('cancel')\"\n                        [nowLabel]=\"localization.get('nowLabel')\"\n                        [now]=\"localization.get('now')\"\n                    >\n                    </kendo-timeselector-messages>\n                </kendo-timeselector>\n            </ng-template>\n        </span>\n        <ng-container #container></ng-container>\n    `\n            },] },\n];\n/** @nocollapse */\nTimePickerComponent.ctorParameters = () => [\n    { type: NgZone },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: PopupService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: PickerService },\n    { type: IntlService },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [TOUCH_ENABLED,] }] }\n];\nTimePickerComponent.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper',] }],\n    focusableId: [{ type: Input }],\n    disabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    readOnlyInput: [{ type: Input }],\n    format: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    cancelButton: [{ type: Input }],\n    nowButton: [{ type: Input }],\n    steps: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    title: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    wrapperClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-timepicker',] }],\n    disabledClass: [{ type: HostBinding, args: ['class.k-state-disabled',] }]\n};\n\nconst timeFormatRegExp = new RegExp(`${TIME_PART.hour}|${TIME_PART.minute}|${TIME_PART.second}|${TIME_PART.dayperiod}|literal`);\nconst VALUE_DOC_LINK$4 = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/integration-with-json/';\nconst MIN_MAX_DOC_LINK = 'https://www.telerik.com/kendo-angular-ui/components/dateinputs/datetimepicker/date-time-limits/';\nconst DEFAULT_ACTIVE_TAB = 'date';\nconst DEFAULT_DATEINPUT_FORMAT = 'g';\nconst DEFAULT_TIMESELECTOR_FORMAT = 't';\n/**\n * Represents the [Kendo UI DateTimePicker component for Angular]({% slug overview_datetimepicker %}).\n */\nclass DateTimePickerComponent {\n    constructor(popupService, intl, cdr, pickerService, ngZone, host, touchEnabled$$1, localization, disabledDatesService) {\n        this.popupService = popupService;\n        this.intl = intl;\n        this.cdr = cdr;\n        this.pickerService = pickerService;\n        this.ngZone = ngZone;\n        this.host = host;\n        this.touchEnabled = touchEnabled$$1;\n        this.localization = localization;\n        this.disabledDatesService = disabledDatesService;\n        /**\n         * @hidden\n         */\n        this.hostClasses = true;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Sets the title of the input element of the DateTimePicker.\n         */\n        this.title = '';\n        /**\n         * Sets or gets the `disabled` property of the DateTimePicker and determines whether the component is active\n         * ([see example]({% slug disabled_datetimepicker %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the DateTimePicker\n         * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-datetimepicker)).\n         */\n        this.readonly = false;\n        /**\n         * Sets the read-only state of the DateTimePicker input field\n         * ([see example]({% slug readonly_datetimepicker %}#toc-read-only-input)).\n         *\n         * > Note that if you set the [`readonly`]({% slug api_dateinputs_datetimepickercomponent %}#toc-readonly) property value to `true`,\n         * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n         */\n        this.readOnlyInput = false;\n        /**\n         * Determines whether to display the **Cancel** button in the popup\n         * ([see example]({% slug datetimepicker_popup_options %}#toc-toggling-the-cancel-button)).\n         */\n        this.cancelButton = true;\n        /**\n         * Determines whether to display a week number column in the `month` view of the popup Calendar\n         * ([see example]({% slug datetimepicker_calendar_options %}#toc-week-number-column)).\n         */\n        this.weekNumber = false;\n        /**\n         * Determines whether the built-in min or max validators are enforced when validating a form\n         * ([see example]({% slug dateranges_datetimepicker %}#toc-prevent-invalid-input)).\n         */\n        this.rangeValidation = true;\n        /**\n         * Determines whether the built-in validator for disabled\n         * date ranges is enforced when validating a form\n         * ([see example]({% slug disabled_dates_datetimepicker %}#toc-validation)).\n         */\n        this.disabledDatesValidation = true;\n        /**\n         * Fires each time the user selects a new value.\n         * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain closed.\n         * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event by setting `event.preventDefault()`, the popup will remain open.\n         * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the user focuses the component.\n         * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * Fires each time the user blurs the component.\n         * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * Indicates whether the component or its popup content is focused.\n         */\n        this.isActive = false;\n        /**\n         * @hidden\n         *\n         * Controls whether the Calendar or the TimeSelector will be displayed.\n         */\n        this.activeTab = DEFAULT_ACTIVE_TAB;\n        /**\n         * @hidden\n         *\n         * Specifies the stripped time-related format that is used in the TimeSelector.\n         * Updates each time the `format` property value changes.\n         */\n        this.timeSelectorFormat = DEFAULT_TIMESELECTOR_FORMAT;\n        /**\n         * @hidden\n         */\n        this.timeSelectorMin = cloneDate(MIN_TIME);\n        /**\n         * @hidden\n         */\n        this.timeSelectorMax = cloneDate(MAX_TIME);\n        /**\n         * @hidden\n         */\n        this.calendarValue = null;\n        /**\n         * @hidden\n         */\n        this.calendarMin = cloneDate(MIN_DATE);\n        /**\n         * @hidden\n         */\n        this.calendarMax = lastMillisecondOfDate(MAX_DATE);\n        this._popupSettings = { animate: true };\n        this._value = null;\n        this._format = DEFAULT_DATEINPUT_FORMAT;\n        this._tabindex = 0;\n        this._defaultTab = DEFAULT_ACTIVE_TAB;\n        this._min = mergeDateAndTime(MIN_DATE, MIN_TIME);\n        this._max = mergeDateAndTime(MAX_DATE, MAX_TIME);\n        this.onControlTouched = noop;\n        this.onControlChange = noop;\n        this.onValidatorChange = noop;\n        this.minValidateFn = noop;\n        this.maxValidateFn = noop;\n        this.disabledDatesValidateFn = noop;\n        this.subscriptions = new Subscription();\n    }\n    /**\n     * @hidden\n     */\n    get input() {\n        return this.pickerService.input;\n    }\n    /**\n     * @hidden\n     */\n    get calendar() {\n        return this.pickerService.calendar;\n    }\n    /**\n     * @hidden\n     */\n    get timeSelector() {\n        return this.pickerService.timeSelector;\n    }\n    /**\n     * Specifies the value of the DateTimePicker component.\n     *\n     * > The `value` has to be a valid [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    set value(value) {\n        this.verifyValue(value);\n        this._value = cloneDate(value);\n        this.setCalendarValue(value);\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Specifies the date format for displaying the input value\n     * ([see example]({% slug formats_datetimepicker %})).\n     */\n    set format(value) {\n        this._format = value;\n        this.timeSelectorFormat = this.getTimeSelectorFormat(value);\n    }\n    get format() {\n        return this._format;\n    }\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the DateTimePicker.\n     */\n    set tabindex(value) {\n        const tabindex = Number(value);\n        const defaultValue = 0;\n        this._tabindex = !isNaN(tabindex) ? tabindex : defaultValue;\n    }\n    get tabindex() {\n        return this.disabled ? -1 : this._tabindex;\n    }\n    /**\n     * Sets the dates of the DateTimePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datetimepicker %})).\n     */\n    set disabledDates(value) {\n        this._disabledDates = value;\n        this.disabledDatesService.initialize(value);\n    }\n    get disabledDates() {\n        return this._disabledDates;\n    }\n    /**\n     * Configures the popup settings of the DateTimePicker\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-customizing-the-popup)).\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({}, { animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Specifies the smallest valid date.\n     * The Calendar will not display dates before this value.\n     * If the `min` value of the Calendar is selected, the TimePicker will not display\n     * time entries before the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n    set min(value) {\n        if (!isPresent(value)) {\n            return;\n        }\n        this._min = cloneDate(value);\n        this.calendarMin = getDate(value);\n    }\n    get min() {\n        return this._min;\n    }\n    /**\n     * Specifies the biggest valid date.\n     * The Calendar will not display dates after this value.\n     * If the `max` value of the Calendar is selected, the TimePicker will not display\n     * time entries after the specified time portion of this value\n     * ([see example]({% slug dateranges_datetimepicker %})).\n     */\n    set max(value) {\n        if (!isPresent(value)) {\n            return;\n        }\n        this._max = cloneDate(value);\n        this.calendarMax = lastMillisecondOfDate(value);\n    }\n    get max() {\n        return this._max;\n    }\n    /**\n     * Indicates whether the component is currently open.\n     */\n    get isOpen() {\n        return isPresent(this.popupRef);\n    }\n    /**\n     * Sets the active tab on opening the popup\n     * ([see example]({% slug datetimepicker_popup_options %}#toc-setting-the-default-tab)).\n     */\n    set defaultTab(tab) {\n        this._defaultTab = tab || DEFAULT_ACTIVE_TAB;\n        this.activeTab = this.defaultTab;\n    }\n    get defaultTab() {\n        return this._defaultTab;\n    }\n    /**\n     * @hidden\n     */\n    get tabSwitchTransition() {\n        /*\n         When the popup is opening, disables the set transition in the themes. When `defaultTab` is set to `time`,\n         the popup opens with an active **Time** tab and the animation of the initial transition is undesired.\n         Setting the inline transition style to `none` overrides the set animation in the themes.\n         Setting the inline transition style to `null` does not apply any inline styles or override the themes CSS.\n        */\n        return this.isOpen ? null : 'none';\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the Calendar will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n    get disableCalendar() {\n        return this.activeTab !== 'date' && !this.calendar.isActive;\n    }\n    /**\n     * @hidden\n     */\n    get inputRole() {\n        return this.readOnlyInput ? 'listbox' : 'spinbutton';\n    }\n    /**\n     * @hidden\n     *\n     * Indicates whether the TimeSelector will be disabled.\n     * The inactive tab component gets disabled and becomes inaccessible on tab click.\n     */\n    get disableTimeSelector() {\n        return this.activeTab !== 'time' && !this.timeSelector.isActive;\n    }\n    get activeTabComponent() {\n        if (!this.isOpen) {\n            return;\n        }\n        if (!(isPresent(this.calendar) || isPresent(this.timeSelector))) {\n            this.cdr.detectChanges();\n        }\n        return this.activeTab === 'date' ? this.calendar : this.timeSelector;\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!isPresent(appendTo) || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    ngOnInit() {\n        this.subscriptions.add(this.pickerService.onFocus\n            // detect popup changes to disable the inactive view mark-up when the popup is open\n            .pipe(tap(this.detectPopupChanges.bind(this)))\n            .subscribe(this.handleFocus.bind(this)));\n        this.subscriptions.add(this.pickerService.onBlur.subscribe(this.handleBlur.bind(this)));\n        this.subscriptions.add(this.pickerService.sameDateSelected.subscribe(this.handleCalendarValueChange.bind(this)));\n        this.subscriptions.add(this.localization.changes.subscribe(() => this.cdr.markForCheck()));\n        if (isWindowAvailable()) {\n            this.subscriptions.add(this.ngZone.runOutsideAngular(() => fromEvent(window, 'blur').subscribe(this.handleCancel.bind(this))));\n        }\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.min) || isPresent(changes.max)) {\n            this.verifyMinMaxRange();\n        }\n        if (changes.min || changes.max || changes.rangeValidation || changes.disabledDatesValidation || changes.disabledDates) {\n            this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n            this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n            this.disabledDatesValidateFn = this.disabledDatesValidation ? disabledDatesValidator(this.disabledDatesService.isDateDisabled) : noop;\n            this.onValidatorChange();\n        }\n    }\n    ngOnDestroy() {\n        if (this.isOpen) {\n            this.closePopup();\n        }\n        this.subscriptions.unsubscribe();\n    }\n    /**\n     * * If the popup is closed, focuses the DateTimePicker input.\n     * * If the popup is open, the focus is moved to its content.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        if (this.isOpen) {\n            this.activeTabComponent.focus();\n        }\n        else {\n            this.input.focus();\n        }\n    }\n    /**\n     * Blurs the DateTimePicker.\n     */\n    blur() {\n        if (this.isOpen && this.activeTabComponent.isActive) {\n            this.activeTabComponent.blur();\n        }\n        else {\n            this.input.blur();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     * ([more information and example]({% slug overview_datetimepicker %}#toc-methods-and-events)).\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show) {\n        if (this.disabled || this.readonly || show === this.isOpen) {\n            return;\n        }\n        const shouldOpen = isPresent(show) ? show : !this.isOpen;\n        if (shouldOpen) {\n            this.openPopup();\n        }\n        else {\n            this.closePopup();\n            // Changes the tab and the calendar or clock icon to the designated default.\n            if (this.activeTab !== this.defaultTab) {\n                this.activeTab = this.defaultTab;\n                this.cdr.detectChanges();\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(disabled) {\n        this.disabled = disabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesValidateFn(control);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label will render in the input.\n     */\n    isEmpty() {\n        return !isPresent(this.value) && this.input.isEmpty();\n    }\n    /**\n     * @hidden\n     */\n    handleIconClick(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        // prevents the event default to evade focusing the DateInput input when placed inside a label (FF/IE/Edge)\n        event.preventDefault();\n        const runInZone = !this.isOpen || hasObservers(this.close);\n        this.run(runInZone, () => {\n            const shouldOpen = !this.isOpen;\n            // handle focus first to maintain correct event order `focus` => `open`\n            this.handleFocus();\n            this.togglePopup(shouldOpen);\n            this.switchFocus();\n        });\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        if (this.isActive) {\n            return;\n        }\n        this.isActive = true;\n        this.cdr.detectChanges();\n        if (hasObservers(this.onFocus)) {\n            this.ngZone.run(() => this.onFocus.emit());\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(event) {\n        if (!this.isActive || this.focusTargetInComponent(event)) {\n            return;\n        }\n        this.isActive = false;\n        this.cdr.detectChanges();\n        const isNgControlUntouched = this.host.nativeElement.classList.contains('ng-untouched');\n        const runInZone = isNgControlUntouched || hasObservers(this.onBlur) || (this.isOpen && hasObservers(this.close));\n        this.run(runInZone, () => {\n            this.onBlur.emit();\n            this.onControlTouched();\n            this.togglePopup(false);\n            this.cdr.markForCheck();\n        });\n    }\n    /**\n     * @hidden\n     */\n    changeActiveTab(tab) {\n        if (!this.isOpen || this.activeTab === tab) {\n            return;\n        }\n        // persists the Tcurrent value of the TimeSelector when switching between tabs\n        if (!isEqual(this.timeSelector.value, this.timeSelector.current)) {\n            this.timeSelector.handleAccept();\n        }\n        this.activeTab = tab;\n        this.cdr.detectChanges();\n        this.detectPopupChanges();\n    }\n    /**\n     * @hidden\n     */\n    handleTabChangeTransitionEnd(dateTimeSelector, event) {\n        // handle only the .k-datetime-selector element transition, ignore any child element transitions\n        if (event.target !== dateTimeSelector) {\n            return;\n        }\n        this.activeTabComponent.focus();\n    }\n    /**\n     * @hidden\n     */\n    handleAccept() {\n        if (!this.isOpen) {\n            return;\n        }\n        const candidate = mergeDateAndTime(this.calendar.value, this.timeSelector.current);\n        const valueChangePresent = !isEqual(this.value, candidate);\n        const runInZone = valueChangePresent || hasObservers(this.close);\n        this.run(runInZone, () => {\n            this.handleValueChange(candidate);\n            this.togglePopup(false);\n        });\n    }\n    /**\n     * @hidden\n     */\n    handleCancel() {\n        if (!this.isOpen) {\n            return;\n        }\n        const runInZone = hasObservers(this.close);\n        this.run(runInZone, () => this.togglePopup(false));\n    }\n    /**\n     * @hidden\n     */\n    handleInputValueChange(value) {\n        this.handleValueChange(value);\n        if (this.isOpen) {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleCalendarValueChange() {\n        this.setTimeSelectorMinMax(this.calendar.value);\n        this.changeActiveTab('time');\n    }\n    /**\n     * @hidden\n     */\n    handleKeyDown(event) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const { keyCode, altKey } = event;\n        switch (keyCode) {\n            case altKey && Keys.ArrowUp:\n            case Keys.Escape:\n                this.handleCancel();\n                break;\n            case !this.isOpen && altKey && Keys.ArrowDown:\n                this.ngZone.run(() => this.togglePopup(true));\n                break;\n            case altKey && Keys.ArrowRight:\n                this.changeActiveTab('time');\n                break;\n            case altKey && Keys.ArrowLeft:\n                this.changeActiveTab('date');\n                break;\n            case this.isOpen && this.timeSelector.isActive && isPresent(this.calendarValue) && Keys.Enter:\n                this.handleAccept();\n                break;\n            default: return;\n        }\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleTabOut(event) {\n        const { keyCode, shiftKey, target } = event;\n        // if no focusable next sibling elements exist in the controls sections, the user is tabbing out of the popup\n        const focusableSiblingAvailable = isPresent(target.nextElementSibling) && !target.nextElementSibling.disabled;\n        if (keyCode === Keys.Tab && !shiftKey && !focusableSiblingAvailable) {\n            this.input.focus();\n            this.handleCancel();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBackTabOut(event) {\n        const { keyCode, shiftKey } = event;\n        if (keyCode === Keys.Tab && shiftKey) {\n            this.input.focus();\n        }\n    }\n    /**\n     * @hidden\n     *\n     * Prevents the diversion of the focus from the currently active element in the component.\n     */\n    preventMouseDown(event) {\n        event.preventDefault();\n    }\n    verifyValue(value) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (isPresent(value) && !(value instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$4} for possible resolution.`);\n        }\n    }\n    verifyMinMaxRange() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (!isValidRange(this.min, this.max)) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_MAX_DOC_LINK}.`);\n        }\n    }\n    /**\n     * Extracts the time slots and the literals that are not preceded by date parts\n     * and concatenates the resulting parts into a string.\n     * If the provided format value does not contain any time parts,\n     * returns the designated format of the default popup component of the TimePicker.\n     */\n    getTimeSelectorFormat(format) {\n        const timeSelectorFormat = this.intl\n            .splitDateFormat(format)\n            .filter(this.timeFormatPartFilter)\n            .reduce((format, part) => format += part.pattern, '');\n        return timeSelectorFormat || DEFAULT_TIMESELECTOR_FORMAT;\n    }\n    /**\n     * The filter expression that filters out all format parts\n     * except for `hour`, `minute`, `second`, `dayperiod`, and specific literals.\n     * Literals will be left only if they are not preceded by date parts.\n     */\n    timeFormatPartFilter(part, index, parts) {\n        const previousPart = index >= 1 && parts[index - 1];\n        if (previousPart && part.type === 'literal') {\n            return timeFormatRegExp.test(previousPart.type);\n        }\n        return timeFormatRegExp.test(part.type);\n    }\n    togglePopup(open) {\n        if (open === this.isOpen) {\n            return;\n        }\n        const event = new PreventableEvent();\n        open ? this.open.emit(event) : this.close.emit(event);\n        if (event.isDefaultPrevented()) {\n            return;\n        }\n        this.toggle(open);\n        this.switchFocus();\n    }\n    switchFocus() {\n        if (!this.isActive) {\n            return;\n        }\n        if (this.isOpen) {\n            this.activeTabComponent.focus();\n        }\n        else if (!this.touchEnabled) {\n            this.input.focus();\n        }\n        else if (!this.input.isActive) {\n            this.handleBlur();\n        }\n    }\n    openPopup() {\n        this.setCalendarValue(this.value);\n        this.setTimeSelectorMinMax(this.value);\n        const direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            content: this.popupTemplate,\n            positionMode: 'absolute',\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            popupClass: `k-datetime-container ${this.popupSettings.popupClass || ''}`,\n            anchorAlign: { vertical: 'bottom', horizontal: direction },\n            popupAlign: { vertical: 'top', horizontal: direction }\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.handleCancel());\n    }\n    closePopup() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.popupRef.close();\n        this.popupRef = null;\n    }\n    handleValueChange(value) {\n        if (isEqual(this.value, value)) {\n            return;\n        }\n        this.value = cloneDate(value);\n        this.valueChange.emit(cloneDate(value));\n        this.onControlChange(cloneDate(value));\n    }\n    /**\n     * Indicates whether the focus target is part of this component,\n     * that is, whether the focus target is inside the component wrapper or in the popup.\n     */\n    focusTargetInComponent(event) {\n        if (!isPresent(event)) {\n            return false;\n        }\n        const relatedTarget = event.relatedTarget || document.activeElement;\n        const focusInPopup = isPresent(this.popupRef) && this.popupRef.popupElement.contains(relatedTarget);\n        const focusInWrapper = this.wrapper.nativeElement.contains(relatedTarget);\n        return focusInPopup || focusInWrapper;\n    }\n    setTimeSelectorMinMax(selectedDate) {\n        const minDateSelected = isPresent(selectedDate) && isEqual(getDate(selectedDate), getDate(this.min));\n        this.timeSelectorMin = cloneDate(minDateSelected ? this.min : MIN_TIME);\n        const maxDateSelected = isPresent(selectedDate) && isEqual(getDate(selectedDate), getDate(this.max));\n        this.timeSelectorMax = cloneDate(maxDateSelected ? this.max : MAX_TIME);\n    }\n    setCalendarValue(value) {\n        const isInCalendarRange = isPresent(value) && isInRange(value, this.calendarMin, this.calendarMax);\n        this.calendarValue = isInCalendarRange ? getDate(value) : null;\n    }\n    /**\n     * If the popup is available, runs a popup change detection.\n     */\n    detectPopupChanges() {\n        if (!this.isOpen) {\n            return;\n        }\n        this.popupRef.popup.changeDetectorRef.detectChanges();\n    }\n    /**\n     * Depending on the predicate `runInZone` value that is passed,\n     * runs the provided function either in the Angular or in the current zone.\n     */\n    run(runInZone, fn) {\n        if (runInZone) {\n            this.ngZone.run(() => fn());\n        }\n        else {\n            fn();\n        }\n    }\n}\nDateTimePickerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-datetimepicker',\n                exportAs: 'kendo-datetimepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    PickerService,\n                    LocalizationService,\n                    DisabledDatesService,\n                    { provide: L10N_PREFIX, useValue: 'kendo.datetimepicker' },\n                    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DateTimePickerComponent), multi: true },\n                    { provide: NG_VALIDATORS, useExisting: forwardRef(() => DateTimePickerComponent), multi: true },\n                    { provide: KendoInput, useExisting: forwardRef(() => DateTimePickerComponent) }\n                ],\n                template: `\n        <ng-container\n            kendoDateTimePickerLocalizedMessages\n\n            i18n-dateTab=\"kendo.datetimepicker.dateTab|The Date tab text in the datetimepicker popup header\"\n            dateTab=\"Date\"\n\n            i18n-dateTabLabel=\"kendo.datetimepicker.dateTabLabel|The label for the Date tab in the datetimepicker popup header\"\n            dateTabLabel=\"Date tab\"\n\n            i18n-timeTab=\"kendo.datetimepicker.timeTab|The Time tab text in the datetimepicker popup header\"\n            timeTab=\"Time\"\n\n            i18n-timeTabLabel=\"kendo.datetimepicker.timeTabLabel|The label for the Time tab in the datetimepicker popup header\"\n            timeTabLabel=\"Time tab\"\n\n            i18n-toggle=\"kendo.datetimepicker.toggle|The label for the toggle button in the datetimepicker component\"\n            toggle=\"Toggle popup\"\n\n            i18n-accept=\"kendo.datetimepicker.accept|The Accept button text in the datetimepicker component\"\n            accept=\"Set\"\n\n            i18n-acceptLabel=\"kendo.datetimepicker.acceptLabel|The label for the Accept button in the datetimepicker component\"\n            acceptLabel=\"Set\"\n\n            i18n-cancel=\"kendo.datetimepicker.cancel|The Cancel button text in the datetimepicker component\"\n            cancel=\"Cancel\"\n\n            i18n-cancelLabel=\"kendo.datetimepicker.cancelLabel|The label for the Cancel button in the datetimepicker component\"\n            cancelLabel=\"Cancel\"\n\n            i18n-now=\"kendo.datetimepicker.now|The Now button text in the timepicker component\"\n            now=\"NOW\"\n\n            i18n-nowLabel=\"kendo.datetimepicker.nowLabel|The label for the Now button in the timepicker component\"\n            nowLabel=\"Select now\"\n\n            i18n-today=\"kendo.datetimepicker.today|The label for the today button in the calendar header\"\n            today=\"TODAY\"\n        >\n        </ng-container>\n\n        <span\n            #wrapper\n            class=\"k-picker-wrap\"\n            [class.k-state-disabled]=\"disabled\"\n            [class.k-state-focused]=\"isActive\"\n        >\n            <kendo-dateinput\n                [value]=\"value\"\n                [format]=\"format\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly || readOnlyInput\"\n                [role]=\"inputRole\"\n                [ariaReadOnly]=\"readonly\"\n                [steps]=\"steps\"\n                [tabindex]=\"tabindex\"\n                [title]=\"title\"\n                [focusableId]=\"focusableId\"\n                [hasPopup]=\"true\"\n                [isPopupOpen]=\"isOpen\"\n                (valueChange)=\"handleInputValueChange($event)\"\n                [kendoEventsOutsideAngular]=\"{\n                    keydown: handleKeyDown\n                }\"\n                [scope]=\"this\"\n            >\n            </kendo-dateinput>\n            <span class=\"k-select\"\n                [attr.title]=\"localization.get('toggle')\"\n                [attr.aria-label]=\"localization.get('toggle')\"\n                [kendoEventsOutsideAngular]=\"{\n                    mousedown: preventMouseDown,\n                    click: handleIconClick\n                }\"\n                [scope]=\"this\"\n            >\n                <span class=\"k-link k-link-date\">\n                    <span\n                        class=\"k-icon\"\n                        [class.k-i-calendar]=\"activeTab === 'date'\"\n                        [class.k-i-clock]=\"activeTab === 'time'\"\n                    >\n                    </span>\n                </span>\n            </span>\n        </span>\n\n        <ng-container #container></ng-container>\n\n        <ng-template #popupTemplate>\n            <div\n                class=\"k-datetime-wrap k-{{activeTab}}-tab\"\n                [kendoEventsOutsideAngular]=\"{\n                    mousedown: preventMouseDown,\n                    keydown: handleKeyDown\n                }\"\n                [scope]=\"this\"\n            >\n                <div class=\"k-datetime-buttongroup\"\n                    [kendoEventsOutsideAngular]=\"{\n                        focusin: handleFocus,\n                        focusout: handleBlur\n                    }\"\n                    [scope]=\"this\"\n                >\n                    <div class=\"k-button-group k-button-group-stretched\">\n                        <button\n                            type=\"button\"\n                            class=\"k-button k-date-tab\"\n                            [class.k-state-active]=\"activeTab === 'date'\"\n                            [attr.title]=\"localization.get('dateTabLabel')\"\n                            [attr.aria-label]=\"localization.get('dateTabLabel')\"\n                            [kendoEventsOutsideAngular]=\"{\n                                click: changeActiveTab.bind(this, 'date'),\n                                keydown: handleBackTabOut\n                            }\"\n                            [scope]=\"this\"\n                        >\n                            {{localization.get('dateTab')}}\n                        </button>\n                        <button\n                            type=\"button\"\n                            class=\"k-button k-time-tab\"\n                            [class.k-state-active]=\"activeTab === 'time'\"\n                            [attr.title]=\"localization.get('timeTabLabel')\"\n                            [attr.aria-label]=\"localization.get('timeTabLabel')\"\n                            [kendoEventsOutsideAngular]=\"{\n                                click: changeActiveTab.bind(this, 'time')\n                            }\"\n                        >\n                            {{localization.get('timeTab')}}\n                        </button>\n                    </div>\n                </div>\n                <div\n                    #dateTimeSelector\n                    class=\"k-datetime-selector\"\n                    [style.transition]=\"tabSwitchTransition\"\n                    [kendoEventsOutsideAngular]=\"{\n                        transitionend: handleTabChangeTransitionEnd.bind(this, dateTimeSelector)\n                    }\"\n                >\n                    <div class=\"k-datetime-calendar-wrap\">\n                        <kendo-calendar\n                            [(value)]=\"calendarValue\"\n                            [min]=\"calendarMin\"\n                            [max]=\"calendarMax\"\n                            [focusedDate]=\"focusedDate\"\n                            [weekNumber]=\"weekNumber\"\n                            [navigation]=\"false\"\n                            [cellTemplate]=\"cellTemplate\"\n                            [monthCellTemplate]=\"monthCellTemplate\"\n                            [yearCellTemplate]=\"yearCellTemplate\"\n                            [decadeCellTemplate]=\"decadeCellTemplate\"\n                            [centuryCellTemplate]=\"centuryCellTemplate\"\n                            [weekNumberTemplate]=\"weekNumberTemplate\"\n                            [headerTitleTemplate]=\"headerTitleTemplate\"\n                            [disabled]=\"disableCalendar\"\n                            [disabledDates]=\"disabledDates\"\n                            (valueChange)=\"handleCalendarValueChange()\"\n                        >\n                            <kendo-calendar-messages\n                                [today]=\"localization.get('today')\"\n                            >\n                            </kendo-calendar-messages>\n                        </kendo-calendar>\n                    </div>\n                    <div class=\"k-datetime-time-wrap\">\n                        <kendo-timeselector\n                            [value]=\"value\"\n                            [format]=\"timeSelectorFormat\"\n                            [min]=\"timeSelectorMin\"\n                            [max]=\"timeSelectorMax\"\n                            [setButton]=\"false\"\n                            [cancelButton]=\"false\"\n                            [steps]=\"steps\"\n                            [disabled]=\"disableTimeSelector\"\n                        >\n                            <kendo-timeselector-messages\n                                [now]=\"localization.get('now')\"\n                                [nowLabel]=\"localization.get('nowLabel')\"\n                            >\n                            </kendo-timeselector-messages>\n                        </kendo-timeselector>\n                    </div>\n                </div>\n                <div\n                    class=\"k-datetime-footer k-action-buttons\"\n                    [kendoEventsOutsideAngular]=\"{\n                        keydown: handleTabOut,\n                        focusin: handleFocus,\n                        focusout: handleBlur\n                    }\"\n                    [scope]=\"this\"\n                >\n                    <button\n                        *ngIf=\"cancelButton\"\n                        type=\"button\"\n                        class=\"k-button k-time-cancel\"\n                        [attr.title]=\"localization.get('cancelLabel')\"\n                        [attr.aria-label]=\"localization.get('cancelLabel')\"\n                        [kendoEventsOutsideAngular]=\"{\n                            click: handleCancel\n                        }\"\n                        [scope]=\"this\"\n                    >\n                        {{localization.get('cancel')}}\n                    </button>\n                    <button\n                        type=\"button\"\n                        class=\"k-time-accept k-button k-primary\"\n                        [attr.title]=\"localization.get('acceptLabel')\"\n                        [attr.aria-label]=\"localization.get('acceptLabel')\"\n                        [disabled]=\"!calendarValue\"\n                        [kendoEventsOutsideAngular]=\"{\n                            click: handleAccept\n                        }\"\n                        [scope]=\"this\"\n                    >\n                        {{localization.get('accept')}}\n                    </button>\n                </div>\n            </div>\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nDateTimePickerComponent.ctorParameters = () => [\n    { type: PopupService },\n    { type: IntlService },\n    { type: ChangeDetectorRef },\n    { type: PickerService },\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Inject, args: [TOUCH_ENABLED,] }] },\n    { type: LocalizationService },\n    { type: DisabledDatesService }\n];\nDateTimePickerComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-datetimepicker',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper',] }],\n    value: [{ type: Input }],\n    format: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    disabledDates: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    focusableId: [{ type: Input }],\n    title: [{ type: Input }],\n    disabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    readOnlyInput: [{ type: Input }],\n    cancelButton: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    steps: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    disabledDatesValidation: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    defaultTab: [{ type: Input }],\n    cellTemplate: [{ type: ContentChild, args: [CellTemplateDirective,] }],\n    monthCellTemplate: [{ type: ContentChild, args: [MonthCellTemplateDirective,] }],\n    yearCellTemplate: [{ type: ContentChild, args: [YearCellTemplateDirective,] }],\n    decadeCellTemplate: [{ type: ContentChild, args: [DecadeCellTemplateDirective,] }],\n    centuryCellTemplate: [{ type: ContentChild, args: [CenturyCellTemplateDirective,] }],\n    weekNumberTemplate: [{ type: ContentChild, args: [WeekNumberCellTemplateDirective,] }],\n    headerTitleTemplate: [{ type: ContentChild, args: [HeaderTitleTemplateDirective,] }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate', { read: TemplateRef },] }]\n};\n\n/* tslint:disable:component-selector-name  component-selector-type */\nconst DEFAULT_VIEWS_LENGTH = 2;\n/**\n * @hidden\n */\nclass HorizontalViewListComponent {\n    constructor(bus, cdr) {\n        this.bus = bus;\n        this.cdr = cdr;\n        this.activeView = CalendarViewEnum.month;\n        this.isActive = true;\n        this.min = new Date(MIN_DATE);\n        this.max = new Date(MAX_DATE);\n        this.views = DEFAULT_VIEWS_LENGTH;\n        this.valueChange = new EventEmitter();\n        this.cellEnter = new EventEmitter();\n        this.cellLeave = new EventEmitter();\n        this.dates = [];\n    }\n    get weekNumber() {\n        return this.showWeekNumbers && this.isMonthView();\n    }\n    set weekNumber(showWeekNumbers) {\n        this.showWeekNumbers = showWeekNumbers;\n    }\n    get getComponentClass() {\n        return true;\n    }\n    get getComponentMonthClass() {\n        return this.activeView === CalendarViewEnum.month;\n    }\n    get getComponentYearClass() {\n        return this.activeView === CalendarViewEnum.year;\n    }\n    get getComponentDecadeClass() {\n        return this.activeView === CalendarViewEnum.decade;\n    }\n    get getComponentCenturyClass() {\n        return this.activeView === CalendarViewEnum.century;\n    }\n    ngOnChanges(changes) {\n        this.initService();\n        if (!this.service) {\n            return;\n        }\n        this.views = this.views || DEFAULT_VIEWS_LENGTH;\n        const focusedDate = this.focusedDate;\n        const viewDate = this.clampDate(this.service.viewDate(focusedDate, this.max, this.views));\n        this.skip = this.service.skip(viewDate, this.min);\n        this.total = this.service.total(this.min, this.max);\n        const activeViewChanged = hasChange(changes, 'activeView');\n        const viewsHasChanged = this.views > 0 && hasChange(changes, 'views');\n        if (activeViewChanged || !this.isInDates(focusedDate) || viewsHasChanged || !this.activeDate) {\n            this.dates = this.service.datesList(viewDate, this.getTake(this.skip));\n            this.activeDate = cloneDate(this.dates[0]);\n        }\n    }\n    initService() {\n        this.service = this.bus.service(this.activeView);\n    }\n    handleDateChange(candidate) {\n        this.valueChange.emit(candidate);\n    }\n    isMonthView() {\n        return this.activeView === CalendarViewEnum.month;\n    }\n    navigate(action) {\n        const candidate = this.move(action);\n        const list = this.service.datesList(candidate, this.getTake(this.skip));\n        if (this.isListInRange(list)) {\n            this.dates = list;\n        }\n        this.activeDate = cloneDate(this.dates[0]);\n        this.focusedDate = cloneDate(candidate);\n        this.cdr.markForCheck();\n        return cloneDate(candidate);\n    }\n    canNavigate(action) {\n        if (!this.service) {\n            return false;\n        }\n        return this.isListInRange(this.service.datesList(this.move(action), this.getTake(this.skip)));\n    }\n    clampDate(value) {\n        return dateInRange(value, this.min, this.max);\n    }\n    move(action) {\n        return this.service.move(this.dates[0] || this.focusedDate, action);\n    }\n    isListInRange(list) {\n        const lowerBound = this.service.beginningOfPeriod(this.min);\n        const upperBound = this.service.beginningOfPeriod(this.service.addToDate(this.max, 1));\n        return lowerBound <= list[0] && list[list.length - 1] < upperBound;\n    }\n    isInDates(value) {\n        return this.service.isInArray(value, this.dates);\n    }\n    getTake(skip) {\n        return Math.min(this.total - skip, this.views);\n    }\n}\nHorizontalViewListComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-calendar-horizontal',\n                template: `\n    <kendo-calendar-header\n        [activeView]=\"activeView\"\n        [currentDate]=\"activeDate\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [rangeLength]=\"views\"\n        [templateRef]=\"headerTitleTemplateRef\"\n        (today)=\"handleDateChange($event)\"\n    >\n    </kendo-calendar-header>\n    <table class=\"k-content\">\n        <tbody *kFor=\"let date of dates\"\n               kendoCalendarView\n               role=\"rowgroup\"\n               direction=\"horizontal\"\n               [activeView]=\"activeView\"\n               [isActive]=\"isActive\"\n               [min]=\"min\" [max]=\"max\"\n               [cellUID]=\"cellUID\"\n               [focusedDate]=\"focusedDate\"\n               [selectedDate]=\"value\"\n               [selectionRange]=\"selectionRange\"\n               [activeRangeEnd]=\"activeRangeEnd\"\n               [weekNumber]=\"weekNumber\"\n               [templateRef]=\"cellTemplateRef\"\n               [weekNumberTemplateRef]=\"weekNumberTemplateRef\"\n               [viewDate]=\"date\"\n               (change)=\"handleDateChange($event)\"\n               (cellEnter)=\"cellEnter.emit($event)\"\n               (cellLeave)=\"cellLeave.emit($event)\"\n        ></tbody>\n    </table>\n  `\n            },] },\n];\n/** @nocollapse */\nHorizontalViewListComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: ChangeDetectorRef }\n];\nHorizontalViewListComponent.propDecorators = {\n    cellTemplateRef: [{ type: Input }],\n    weekNumberTemplateRef: [{ type: Input }],\n    headerTitleTemplateRef: [{ type: Input }],\n    activeRangeEnd: [{ type: Input }],\n    activeView: [{ type: Input }],\n    cellUID: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    isActive: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    selectionRange: [{ type: Input }],\n    value: [{ type: Input }],\n    views: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    cellEnter: [{ type: Output }],\n    cellLeave: [{ type: Output }],\n    getComponentClass: [{ type: HostBinding, args: [\"class.k-calendar-view\",] }],\n    getComponentMonthClass: [{ type: HostBinding, args: [\"class.k-calendar-monthview\",] }],\n    getComponentYearClass: [{ type: HostBinding, args: [\"class.k-calendar-yearview\",] }],\n    getComponentDecadeClass: [{ type: HostBinding, args: [\"class.k-calendar-decadeview\",] }],\n    getComponentCenturyClass: [{ type: HostBinding, args: [\"class.k-calendar-centuryview\",] }]\n};\n\nconst noop$2 = () => null;\n/**\n * @hidden\n */\nconst disabledDatesRangeValidator = (isDateDisabled) => {\n    if (!isPresent(isDateDisabled)) {\n        return noop$2;\n    }\n    return (selectedRange) => {\n        const isRangeComplete = isPresent(selectedRange) && isPresent(selectedRange.start) && isPresent(selectedRange.end);\n        if (!isRangeComplete || selectedRange.start > selectedRange.end) {\n            return null;\n        }\n        const disabledDates = disabledDatesInRange(selectedRange.start, selectedRange.end, isDateDisabled);\n        const error = {\n            disabledDatesInRange: disabledDates\n        };\n        return disabledDates.length ? error : null;\n    };\n};\n\n/* tslint:disable:no-forward-ref */\nconst BOTTOM_VIEW_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-bottomview';\nconst TOP_VIEW_DOC_LINK$1 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-topview';\nconst MIN_DOC_LINK$3 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-min';\nconst MAX_DOC_LINK$3 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/api/CalendarComponent/#toc-max';\nconst VALUE_DOC_LINK$5 = 'http://www.telerik.com/kendo-angular-ui/components/dateinputs/calendar/#toc-using-with-json';\n/**\n * @hidden\n */\nconst RANGE_CALENDAR_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MultiViewCalendarComponent) //tslint:disable-line:no-use-before-declare\n};\n/**\n * @hidden\n */\nconst RANGE_CALENDAR_RANGE_VALIDATORS = {\n    multi: true,\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MultiViewCalendarComponent) //tslint:disable-line:no-use-before-declare\n};\n/**\n * Represents the Kendo UI MultiViewCalendar component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiviewcalendar></kendo-multiviewcalendar>\n * `\n * })\n * class AppComponent { }\n * ```\n */\nclass MultiViewCalendarComponent {\n    constructor(bus, element, localization, navigator, renderer, cdr, zone, disabledDatesService) {\n        this.bus = bus;\n        this.element = element;\n        this.localization = localization;\n        this.navigator = navigator;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.zone = zone;\n        this.disabledDatesService = disabledDatesService;\n        /**\n         * @hidden\n         */\n        this.id = guid();\n        /**\n         * Determines whether the built-in min or max validators are enforced when validating a form.\n         */\n        this.rangeValidation = false;\n        /**\n         * Determines whether the built-in validator for disabled\n         * date ranges is enforced when validating a form\n         * ([see example]({% slug disabled_dates_multiviewcalendar %}#toc-validation)).\n         */\n        this.disabledDatesRangeValidation = false;\n        /**\n         * Sets or gets the `disabled` property of the Calendar and\n         * determines whether the component is active\n         * ([see example]({% slug disabled_multiviewcalendar %})).\n         */\n        this.disabled = false;\n        /**\n         * Sets or gets the `tabindex` property of the Calendar. Based on the\n         * [HTML `tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) behavior,\n         * it determines whether the component is focusable.\n         */\n        this.tabindex = 0;\n        /**\n         * Defines the active view that the Calendar initially renders\n         * ([see example]({% slug activeview_multiviewcalendar %})).\n         * By default, the active view is `month`.\n         *\n         * > You have to set `activeView` within the `topView`-`bottomView` range.\n         */\n        this.activeView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the bottommost view, to which the user can navigate\n         * ([see example]({% slug dates_multiviewcalendar %}#toc-partial-dates)).\n         */\n        this.bottomView = CalendarViewEnum[CalendarViewEnum.month];\n        /**\n         * Defines the topmost view, to which the user can navigate.\n         */\n        this.topView = CalendarViewEnum[CalendarViewEnum.century];\n        /**\n         * Determines whether to display a week number column in the `month` view\n         * ([see example]({% slug weeknumcolumn_multiviewcalendar %})).\n         */\n        this.weekNumber = false;\n        /**\n         * Sets or gets the `views` property of the Calendar and\n         * defines the number of rendered months.\n         */\n        this.views = 2;\n        /**\n         * Fires when the active view is changed\n         * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n         */\n        this.activeViewChange = new EventEmitter();\n        /**\n         * Fires when a view cell is entered\n         * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n         */\n        this.cellEnter = new EventEmitter();\n        /**\n         * Fires when a view cell is leaved\n         * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n         */\n        this.cellLeave = new EventEmitter();\n        /**\n         * Fires when the value is changed\n         * ([more information and example]({% slug overview_multiviewcalendar %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        this.cellUID = guid();\n        this.isActive = false;\n        this.isHovered = false;\n        this.isPrevDisabled = true;\n        this.isNextDisabled = true;\n        this.prevView = Action.PrevView;\n        this.nextView = Action.NextView;\n        this._min = new Date(MIN_DATE);\n        this._max = new Date(MAX_DATE);\n        this._focusedDate = getToday();\n        this.resolvedPromise = Promise.resolve();\n        this.onControlChange = noop;\n        this.onControlTouched = noop;\n        this.onValidatorChange = noop;\n        this.minValidateFn = noop;\n        this.maxValidateFn = noop;\n        this.disabledDatesRangeValidateFn = noop;\n        this.subscriptions = new Subscription(() => { });\n        this.setClasses(element.nativeElement);\n    }\n    /**\n     * Sets or gets the `focusedDate` property of the Calendar and\n     * defines the focused date of the component\n     * ([see example]({% slug dates_multiviewcalendar %}#toc-focused-dates)).\n     *\n     * > If the Calendar is out of the min or max range, it normalizes the defined `focusedDate`.\n     */\n    set focusedDate(focusedDate) {\n        this._focusedDate = focusedDate || getToday();\n    }\n    get focusedDate() {\n        return this._focusedDate;\n    }\n    /**\n     * Sets or gets the `min` property of the Calendar and\n     * defines the minimum allowed date value.\n     * By default, the `min` value is `1900-1-1`.\n     */\n    set min(min) {\n        this._min = min || new Date(MIN_DATE);\n    }\n    get min() {\n        return this._min;\n    }\n    /**\n     * Sets or gets the `max` property of the Calendar and\n     * defines the maximum allowed date value.\n     * By default, the `max` value is `2099-12-31`.\n     */\n    set max(max) {\n        this._max = max || new Date(MAX_DATE);\n    }\n    get max() {\n        return this._max;\n    }\n    /**\n     * Sets or gets the `value` property of the Calendar and defines the selected value of the component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(candidate) {\n        this.verifyValue(candidate);\n        this._value = cloneDate(candidate);\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Sets the dates of the MultiViewCalendar that will be disabled\n     * ([see example]({% slug disabled_dates_multiviewcalendar %})).\n     */\n    set disabledDates(value) {\n        this.disabledDatesService.initialize(value);\n    }\n    /**\n     * Sets or gets the `selectionRange` property of the Calendar and\n     * defines the selection range of the component\n     * ([see example]({% slug dates_multiviewcalendar %}#toc-selection-range)).\n     */\n    set selectionRange(range$$1) {\n        this._selectionRange = range$$1;\n        if (this.disabledDatesRangeValidation) {\n            this.onValidatorChange();\n        }\n    }\n    get selectionRange() {\n        return this._selectionRange;\n    }\n    /**\n     * @hidden\n     */\n    set cellTemplateRef(template) {\n        this.cellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set monthCellTemplateRef(template) {\n        this.monthCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set yearCellTemplateRef(template) {\n        this.yearCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set decadeCellTemplateRef(template) {\n        this.decadeCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set centuryCellTemplateRef(template) {\n        this.centuryCellTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set weekNumberTemplateRef(template) {\n        this.weekNumberTemplate = template;\n    }\n    /**\n     * @hidden\n     */\n    set headerTitleTemplateRef(template) {\n        this.headerTitleTemplate = template;\n    }\n    get activeViewEnum() {\n        const activeView = CalendarViewEnum[this.activeView];\n        return activeView < this.bottomViewEnum ? this.bottomViewEnum : activeView;\n    }\n    get bottomViewEnum() {\n        return CalendarViewEnum[this.bottomView];\n    }\n    get topViewEnum() {\n        return CalendarViewEnum[this.topView];\n    }\n    get widgetId() {\n        return this.id;\n    }\n    get widgetRole() {\n        return 'grid';\n    }\n    get calendarTabIndex() {\n        return this.disabled ? undefined : this.tabIndex;\n    }\n    get ariaDisabled() {\n        return this.disabled;\n    }\n    get ariaActivedescendant() {\n        return this.cellUID + this.focusedDate.getTime();\n    }\n    /**\n     * @hidden\n     */\n    handleBlur() {\n        this.onControlTouched();\n        this.isActive = false;\n        this.isHovered = false; //ensure that hovered is also not active\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        this.isActive = true;\n    }\n    /**\n     * @hidden\n     */\n    handleMouseEnter() {\n        this.isHovered = true;\n    }\n    /**\n     * @hidden\n     */\n    handleMouseLeave() {\n        this.isHovered = false;\n    }\n    /**\n     * @hidden\n     */\n    handleMousedown(event) {\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    handleClick() {\n        if (this.isActive) {\n            return;\n        }\n        this.focus();\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n        const candidate = dateInRange(this.navigator.move(this.focusedDate, this.navigator.action(event), this.activeViewEnum), this.min, this.max);\n        if (isEqual(this.focusedDate, candidate)) {\n            return;\n        }\n        this.focusedDate = candidate;\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    enter() {\n        this.handleDateChange(this.focusedDate);\n    }\n    ngOnInit() {\n        this.setMessages();\n        this.subscriptions.add(this.localization.changes.subscribe(() => this.setMessages()));\n        this.subscriptions.add(this.bus.viewChanged.subscribe(({ view }) => {\n            this.activeView = CalendarViewEnum[view];\n            this.activeViewChange.emit(this.activeView);\n            this.cdr.detectChanges();\n            this.updateButtonState();\n        }));\n    }\n    ngOnChanges(changes) {\n        this.verifyChanges();\n        this.bus.configure(this.bottomViewEnum, this.topViewEnum);\n        const useValue = hasExistingValue(changes, 'value') && !hasExistingValue(changes, 'focusedDate');\n        const focusedDate = dateInRange(cloneDate(useValue ? this.value : this.focusedDate), this.min, this.max);\n        this.focusedDate = !isEqual(this.focusedDate, focusedDate) ? focusedDate : this.focusedDate;\n        if (changes.min || changes.max || changes.rangeValidation || changes.disabledDates || changes.disabledDatesRangeValidation) {\n            this.minValidateFn = this.rangeValidation ? minValidator(this.min) : noop;\n            this.maxValidateFn = this.rangeValidation ? maxValidator(this.max) : noop;\n            this.disabledDatesRangeValidateFn = this.disabledDatesRangeValidation ? disabledDatesRangeValidator(this.disabledDatesService.isDateDisabled) : noop;\n            this.onValidatorChange();\n        }\n        if (changes.min || changes.max || changes.focusedDate || changes.activeView) {\n            this.updateButtonState();\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this.messagesTimeout);\n        this.subscriptions.unsubscribe();\n    }\n    ngAfterViewInit() {\n        this.updateButtonState();\n    }\n    /**\n     * Focuses the host element of the Calendar.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"multiviewcalendar.focus()\">Focus calendar</button>\n     *  <kendo-multiviewcalendar #multiviewcalendar></kendo-multiviewcalendar>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the Calendar component.\n     */\n    blur() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.blur();\n    }\n    /**\n     * @hidden\n     */\n    handleDateChange(candidate) {\n        const canNavigateDown = this.bus.canMoveDown(this.activeViewEnum);\n        const isSameDate = !canNavigateDown && isEqual(candidate, this.value);\n        this.focusedDate = cloneDate(candidate) || this.focusedDate;\n        if (this.disabled || isSameDate) {\n            return;\n        }\n        if (canNavigateDown) {\n            this.bus.moveDown(this.activeViewEnum);\n            return;\n        }\n        if (!this.disabledDatesService.isDateDisabled(candidate)) {\n            this.value = cloneDate(candidate);\n            this.onControlChange(cloneDate(candidate));\n            this.valueChange.emit(cloneDate(candidate));\n        }\n    }\n    /**\n     * @hidden\n     */\n    writeValue(candidate) {\n        this.verifyValue(candidate);\n        this.focusedDate = dateInRange(cloneDate(candidate) || this.focusedDate, this.min, this.max);\n        this.value = cloneDate(candidate);\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onControlChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onControlTouched = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    validate(control) {\n        return this.minValidateFn(control) || this.maxValidateFn(control) || this.disabledDatesRangeValidateFn(this.selectionRange);\n    }\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn) {\n        this.onValidatorChange = fn;\n    }\n    /**\n     * @hidden\n     */\n    activeCellTemplate() {\n        switch (this.activeViewEnum) {\n            case CalendarViewEnum.month:\n                return this.monthCellTemplate || this.cellTemplate;\n            case CalendarViewEnum.year:\n                return this.yearCellTemplate;\n            case CalendarViewEnum.decade:\n                return this.decadeCellTemplate;\n            case CalendarViewEnum.century:\n                return this.centuryCellTemplate;\n            default:\n                return null;\n        }\n    }\n    /**\n     * @hidden\n     */\n    navigate(action) {\n        this.focusedDate = this.viewList.navigate(action);\n        this.updateButtonState();\n    }\n    /**\n     * @hidden\n     */\n    emitCellEvent(emitter, args) {\n        if (hasObservers(emitter)) {\n            this.zone.run(() => {\n                emitter.emit(args);\n            });\n        }\n    }\n    setClasses(element) {\n        this.renderer.addClass(element, 'k-widget');\n        this.renderer.addClass(element, 'k-calendar');\n        this.renderer.addClass(element, 'k-calendar-infinite');\n        this.renderer.addClass(element, 'k-calendar-range');\n    }\n    setMessages() {\n        this.zone.runOutsideAngular(() => {\n            clearTimeout(this.messagesTimeout);\n            this.messagesTimeout = setTimeout(() => {\n                this.prevButtonTitle = this.localization.get('prevButtonTitle');\n                this.nextButtonTitle = this.localization.get('nextButtonTitle');\n                this.cdr.detectChanges();\n            });\n        });\n    }\n    verifyChanges() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.min > this.max) {\n            throw new Error(`The max value should be bigger than the min. See ${MIN_DOC_LINK$3} and ${MAX_DOC_LINK$3}.`);\n        }\n        if (this.bottomViewEnum > this.topViewEnum) {\n            throw new Error(`The topView should be greater than bottomView. See ${BOTTOM_VIEW_DOC_LINK$1} and ${TOP_VIEW_DOC_LINK$1}.`);\n        }\n    }\n    verifyValue(candidate) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (candidate && !(candidate instanceof Date)) {\n            throw new Error(`The 'value' should be a valid JavaScript Date instance. Check ${VALUE_DOC_LINK$5} for possible resolution.`);\n        }\n    }\n    updateButtonState() {\n        this.resolvedPromise.then(() => {\n            this.isPrevDisabled = !this.viewList.canNavigate(this.prevView);\n            this.isNextDisabled = !this.viewList.canNavigate(this.nextView);\n            this.cdr.markForCheck();\n        });\n    }\n}\nMultiViewCalendarComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-multiviewcalendar',\n                providers: [\n                    BusViewService,\n                    RANGE_CALENDAR_VALUE_ACCESSOR,\n                    RANGE_CALENDAR_RANGE_VALIDATORS,\n                    LocalizationService,\n                    DisabledDatesService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.multiviewcalendar'\n                    },\n                    NavigationService\n                ],\n                selector: 'kendo-multiviewcalendar',\n                template: `\n    <ng-container kendoMultiViewCalendarLocalizedMessages\n        i18n-today=\"kendo.multiviewcalendar.today|The label for the today button in the calendar header\"\n        today=\"TODAY\"\n\n        i18n-prevButtonTitle=\"kendo.multiviewcalendar.prevButtonTitle|The label for the previous button in the Multiview calendar\"\n        prevButtonTitle=\"Navigate to previous view\"\n\n        i18n-nextButtonTitle=\"kendo.multiviewcalendar.nextButtonTitle|The label for the next button in the Multiview calendar\"\n        nextButtonTitle=\"Navigate to next view\"\n    >\n    </ng-container>\n    <button\n        class=\"k-button k-prev-view\" type=\"button\"\n        [attr.aria-disabled]=\"isPrevDisabled\"\n        [disabled]=\"isPrevDisabled\"\n        [title]=\"prevButtonTitle\"\n        (click)=\"navigate(prevView)\"\n    >\n        <span class=\"k-icon k-i-arrow-chevron-left\"></span>\n    </button>\n    <kendo-calendar-horizontal\n        [activeView]=\"activeViewEnum\"\n        [isActive]=\"isActive || isHovered\"\n        [cellTemplateRef]=\"activeCellTemplate()?.templateRef\"\n        [headerTitleTemplateRef]=\"headerTitleTemplate?.templateRef\"\n        [weekNumberTemplateRef]=\"weekNumberTemplate?.templateRef\"\n        [cellUID]=\"cellUID\"\n        [views]=\"views\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [focusedDate]=\"focusedDate\"\n        [weekNumber]=\"weekNumber\"\n        [activeRangeEnd]=\"activeRangeEnd\"\n        [selectionRange]=\"selectionRange\"\n        [value]=\"value\"\n        (valueChange)=\"handleDateChange($event)\"\n        (cellEnter)=\"emitCellEvent(cellEnter, $event)\"\n        (cellLeave)=\"emitCellEvent(cellLeave, $event)\"\n    >\n    </kendo-calendar-horizontal>\n    <button\n        class=\"k-button k-next-view\" type=\"button\"\n        [attr.aria-disabled]=\"isNextDisabled\"\n        [disabled]=\"isNextDisabled\"\n        [title]=\"nextButtonTitle\"\n        (click)=\"navigate(nextView)\"\n    >\n        <span class=\"k-icon k-i-arrow-chevron-right\"></span>\n    </button>\n  `\n            },] },\n];\n/** @nocollapse */\nMultiViewCalendarComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: ElementRef },\n    { type: LocalizationService },\n    { type: NavigationService },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: DisabledDatesService }\n];\nMultiViewCalendarComponent.propDecorators = {\n    id: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    rangeValidation: [{ type: Input }],\n    disabledDatesRangeValidation: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    disabledDates: [{ type: Input }],\n    activeView: [{ type: Input }],\n    bottomView: [{ type: Input }],\n    topView: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    activeRangeEnd: [{ type: Input }],\n    selectionRange: [{ type: Input }],\n    views: [{ type: Input }],\n    activeViewChange: [{ type: Output }],\n    cellEnter: [{ type: Output }],\n    cellLeave: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    cellTemplate: [{ type: ContentChild, args: [CellTemplateDirective, { static: true },] }],\n    cellTemplateRef: [{ type: Input, args: ['cellTemplate',] }],\n    monthCellTemplate: [{ type: ContentChild, args: [MonthCellTemplateDirective, { static: true },] }],\n    monthCellTemplateRef: [{ type: Input, args: ['monthCellTemplate',] }],\n    yearCellTemplate: [{ type: ContentChild, args: [YearCellTemplateDirective, { static: true },] }],\n    yearCellTemplateRef: [{ type: Input, args: ['yearCellTemplate',] }],\n    decadeCellTemplate: [{ type: ContentChild, args: [DecadeCellTemplateDirective, { static: true },] }],\n    decadeCellTemplateRef: [{ type: Input, args: ['decadeCellTemplate',] }],\n    centuryCellTemplate: [{ type: ContentChild, args: [CenturyCellTemplateDirective, { static: true },] }],\n    centuryCellTemplateRef: [{ type: Input, args: ['centuryCellTemplate',] }],\n    weekNumberTemplate: [{ type: ContentChild, args: [WeekNumberCellTemplateDirective, { static: true },] }],\n    weekNumberTemplateRef: [{ type: Input, args: ['weekNumberTemplate',] }],\n    headerTitleTemplate: [{ type: ContentChild, args: [HeaderTitleTemplateDirective, { static: true },] }],\n    headerTitleTemplateRef: [{ type: Input, args: ['headerTitleTemplate',] }],\n    viewList: [{ type: ViewChild, args: [HorizontalViewListComponent,] }],\n    widgetId: [{ type: HostBinding, args: ['attr.id',] }],\n    widgetRole: [{ type: HostBinding, args: ['attr.role',] }],\n    calendarTabIndex: [{ type: HostBinding, args: ['attr.tabindex',] }],\n    ariaDisabled: [{ type: HostBinding, args: ['attr.aria-disabled',] }, { type: HostBinding, args: ['class.k-state-disabled',] }],\n    ariaActivedescendant: [{ type: HostBinding, args: ['attr.aria-activedescendant',] }],\n    handleBlur: [{ type: HostListener, args: [\"blur\",] }],\n    handleFocus: [{ type: HostListener, args: [\"focus\",] }],\n    handleMouseEnter: [{ type: HostListener, args: [\"mouseenter\",] }],\n    handleMouseLeave: [{ type: HostListener, args: [\"mouseleave\",] }],\n    handleMousedown: [{ type: HostListener, args: [\"mousedown\", ['$event'],] }],\n    handleClick: [{ type: HostListener, args: [\"click\",] }],\n    keydown: [{ type: HostListener, args: [\"keydown\", [\"$event\"],] }],\n    enter: [{ type: HostListener, args: [\"keydown.enter\",] }]\n};\n\n/**\n * A directive which renders the content of the DateRange Popup. To define the cell template, nest an\n * `<ng-template>` tag with the `kendoRangePopupTemplate` directive inside the component tag.\n */\nclass DateRangePopupTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nDateRangePopupTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDateRangePopupTemplate]'\n            },] },\n];\n/** @nocollapse */\nDateRangePopupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\nconst isActive = (cmp) => (cmp && cmp.isActive) || false;\nconst hasActiveContent = (popup) => popup && popup.hasActiveContent();\n/**\n * A service that handles the communication between the components that are placed inside the DateRangeComponent.\n * For example, the start and end `DateInput` and `DateRangePopup` components.\n */\nclass DateRangeService {\n    constructor() {\n        /**\n         * An Observable instance that notifies when the `activeRangeEnd` state is changed.\n         */\n        this.activeRangeEnd$ = new BehaviorSubject(null);\n        /**\n         * An Observable instance that notifies when the `focusedDate` is changed.\n         */\n        this.focusedDate$ = new BehaviorSubject(null);\n        /**\n         * An Observable instance that notifies when the end `DateInput` component is changed.\n         * For example, when a new end `DateInput` is attached or when the old one is detached.\n         */\n        this.endInput$ = new BehaviorSubject(null);\n        /**\n         * An Observable instance that notifies when the start `DateInput` component is changed.\n         * For example, when a new start `DateInput` is attached or the old one is detached.\n         */\n        this.startInput$ = new BehaviorSubject(null);\n        /**\n         * An Observable instance that notifies when the `DateRangePopup` component is changed.\n         */\n        this.dateRangePopup$ = new BehaviorSubject(null);\n        /**\n         * An Observable instance that notifies when the state of the selection range is changed.\n         */\n        this.range$ = new BehaviorSubject(EMPTY_SELECTIONRANGE);\n    }\n    /**\n     * Gets the current `activeRangeEnd` value.\n     */\n    get activeRangeEnd() {\n        return this.activeRangeEnd$.value;\n    }\n    /**\n     * Gets the current `focusedDate` value.\n     */\n    get focusedDate() {\n        return this.focusedDate$.value;\n    }\n    /**\n     * Gets the `min` range value.\n     * The `min` value is extracted from the `start` DateInput value or the `min` value of the Calendar.\n     */\n    get min() {\n        return (this.startInput$.value || {}).min || null;\n    }\n    /**\n     * Gets the `max` range value.\n     * The `max` value is extracted from the `end` DateInput value or the `max` value of the Calendar.\n     */\n    get max() {\n        return (this.endInput$.value || {}).max || null;\n    }\n    /**\n     * Gets the current `selectionRange` value.\n     */\n    get selectionRange() {\n        return this.range$.value;\n    }\n    /**\n     * Activates the registered `DateRangePopup` component.\n     * The method opens the popup and focuses the calendar.\n     */\n    activatePopup() {\n        const dateRangePopup = this.dateRangePopup$.value;\n        if (!dateRangePopup) {\n            return;\n        }\n        dateRangePopup.activate();\n    }\n    /**\n     * Deactivates the registered `DateRangePopup` component.\n     * The method closes the popup.\n     */\n    deactivatePopup() {\n        const dateRangePopup = this.dateRangePopup$.value;\n        if (!(dateRangePopup && dateRangePopup.show)) {\n            return;\n        }\n        dateRangePopup.show = false;\n    }\n    /**\n     * @hidden\n     *\n     * Deactivates the registered `DateRangePopup` component and fires the `cancel` event.\n     * The method closes the popup.\n     */\n    cancelPopup() {\n        const dateRangePopup = this.dateRangePopup$.value;\n        if (!(dateRangePopup && dateRangePopup.show)) {\n            return;\n        }\n        dateRangePopup.cancelPopup();\n    }\n    /**\n     * Completes all observables to mitigate possible memory leaks.\n     * Calls the method when a component that uses it is destroyed.\n     */\n    destroy() {\n        this.activeRangeEnd$.complete();\n        this.dateRangePopup$.complete();\n        this.focusedDate$.complete();\n        this.endInput$.complete();\n        this.startInput$.complete();\n        this.range$.complete();\n    }\n    /**\n     * Returns `true` when an active component that is placed inside the `DateRangeComponent` is detected.\n     * For example, the opened popup or the focused DateInput.\n     *\n     * @returns `true` if an active component is present.\n     */\n    hasActiveComponent() {\n        const popup = this.dateRangePopup$.value;\n        const isPopup = isActive(popup);\n        const isStart = isActive(this.startInput$.value);\n        const isEnd = isActive(this.endInput$.value);\n        return isPopup || isStart || isEnd || hasActiveContent(popup) || false;\n    }\n    /**\n     * Registers a new start `DateInput` component. Notifies all `startInput$` listeners.\n     */\n    registerStartInput(startInput) {\n        this.startInput$.next(startInput);\n    }\n    /**\n     * Registers a new end `DateInput` component. Notifies all `endInput$` listeners.\n     */\n    registerEndInput(endInput) {\n        this.endInput$.next(endInput);\n    }\n    /**\n     * Registers a new `DateRangePopup` component. Notifies all `dateRangePopup$` listeners.\n     */\n    registerPopup(dateRangePopup) {\n        this.dateRangePopup$.next(dateRangePopup);\n    }\n    /**\n     * Updates the `activeRangeEnd` value. Notifies all `activeRangeEnd$` listeners.\n     */\n    setActiveRangeEnd(activeRange) {\n        if (!activeRange || this.activeRangeEnd === activeRange) {\n            return;\n        }\n        this.activeRangeEnd$.next(activeRange);\n    }\n    /**\n     * Updates the focused date. Notifies all `focusedDate$` listeners.\n     */\n    setFocusedDate(value) {\n        if (isEqual(this.focusedDate$.value, value)) {\n            return;\n        }\n        this.focusedDate$.next(value);\n    }\n    /**\n     * Updates the selection range. Notifies all `range$` listeners.\n     */\n    setRange(range = EMPTY_SELECTIONRANGE) {\n        this.range$.next(range);\n    }\n}\nDateRangeService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * Represents the Kendo UI DateRangePopup component for Angular.\n *\n * @example\n * ```ts\n * import { DateInputsModule, DateRangeService } from '@progress/kendo-angular-dateinputs';\n *\n * _@Component({\n * providers: [DateRangeService],\n * selector: 'my-app',\n * template: `\n *  <button #anchor (click)=\"popup.toggle()\">Toggle</button>\n *  <kendo-daterange-popup [anchor]=\"anchor\" #popup></kendo-daterange-popup>\n * `\n * })\n * class AppComponent {\n * }\n * ```\n */\nclass DateRangePopupComponent {\n    constructor(popupService, dateRangeService, zone, rtl) {\n        this.popupService = popupService;\n        this.dateRangeService = dateRangeService;\n        this.zone = zone;\n        this.rtl = rtl;\n        /**\n         * Controls the popup animation.\n         * By default, the opening and closing animations are enabled.\n         * For more information about controlling the popup animations,\n         * refer to the article on [animations]({% slug animations_popup %}).\n         */\n        this.animate = true;\n        /**\n         * Configures the collision behavior of the popup.\n         * For more information, refer to the article on\n         * [viewport boundary detection]({% slug viewportboundarydetection_popup %}).\n         */\n        this.collision = { horizontal: 'fit', vertical: 'flip' };\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel the event, the popup will remain closed.\n         * For more information, refer to the section on\n         * [events]({% slug overview_datepicker %}#toc-events).\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel the event, the popup will remain open.\n         * For more information, refer to the section on\n         * [events]({% slug overview_datepicker %}#toc-events).\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the calendar element is blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the calendar element is focused.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the popup is closed either on `ESC` keypress or on leaving the viewport.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.popupUID = guid();\n        this.calendarSubscriptions = new Subscription(() => { });\n        this.popupSubscriptions = new Subscription(() => { });\n        this.resolvedPromise = Promise.resolve();\n    }\n    /**\n     * The active calendar that is visible in the popup.\n     *\n     * > When the popup is closed, the property returns `null`.\n     */\n    get calendar() {\n        return this._calendar;\n    }\n    set calendar(calendar) {\n        this._calendar = calendar;\n        this.subscribeFocusBlur(calendar);\n    }\n    /**\n     * Gets the active state of the component.\n     * When the opened calendar is active, returns `true`.\n     */\n    get isActive() {\n        return this.calendar && this.calendar.isActive;\n    }\n    /**\n     * Gets or sets the visibility state of the component.\n     */\n    set show(show) {\n        const event = new PreventableEvent();\n        if (this._show === show) {\n            return;\n        }\n        if (!this._show && show) {\n            this.open.emit(event);\n        }\n        else if (this._show && !show) {\n            this.close.emit(event);\n        }\n        if (event.isDefaultPrevented()) {\n            return;\n        }\n        this._toggle(show);\n    }\n    get show() {\n        return this._show;\n    }\n    ngOnInit() {\n        this.dateRangeService.registerPopup(this);\n    }\n    ngAfterViewInit() {\n        this.calendarSubscriptions.add(this.contentCalendar.changes.subscribe((changes) => this.calendar = changes.first));\n        this.calendarSubscriptions.add(this.viewCalendar.changes.subscribe((changes) => this.calendar = changes.first));\n        if (isWindowAvailable()) {\n            this.zone.runOutsideAngular(() => this.windowBlurSubscription = fromEvent(window, 'blur').subscribe(this.handleWindowBlur.bind(this)));\n        }\n    }\n    ngOnDestroy() {\n        this.popupSubscriptions.unsubscribe();\n        this.calendarSubscriptions.unsubscribe();\n        if (this.activateSubscription) {\n            this.activateSubscription.unsubscribe();\n        }\n        if (this.blurSubscription) {\n            this.blurSubscription.unsubscribe();\n            this.focusSubscription.unsubscribe();\n        }\n        if (this.windowBlurSubscription) {\n            this.windowBlurSubscription.unsubscribe();\n        }\n    }\n    /**\n     *  Opens the popup component and focuses the calendar.\n     */\n    activate() {\n        if (this.show === true) {\n            return;\n        }\n        if (this.activateSubscription) {\n            this.activateSubscription.unsubscribe();\n        }\n        this.show = true;\n        this.zone.runOutsideAngular(() => {\n            this.activateSubscription = merge(this.contentCalendar.changes, this.viewCalendar.changes)\n                .pipe(filter(changes => changes && changes.first), map(changes => changes.first))\n                .subscribe((calendar) => setTimeout(() => calendar.focus()));\n        });\n    }\n    /**\n     *  Focuses the calendar (if available).\n     */\n    focus() {\n        if (this.calendar) {\n            this.calendar.focus();\n        }\n    }\n    /**\n     * Checks if a focused element ids placed inside the popup.\n     *\n     * @return boolean;\n     */\n    hasActiveContent() {\n        if (!isDocumentAvailable() || !this.popupRef) {\n            return false;\n        }\n        return this.popupRef.popupElement.contains(document.activeElement);\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show The state of the popup.\n     */\n    toggle(show) {\n        this.resolvedPromise.then(() => {\n            this._toggle((show === undefined) ? !this.show : show);\n        });\n    }\n    /**\n     * @hidden\n     *\n     * Closes the popup and triggers the `cancel` event.\n     */\n    cancelPopup() {\n        this.show = false;\n        this.cancel.emit();\n    }\n    handleWindowBlur() {\n        if (!this.show) {\n            return;\n        }\n        if (hasObservers(this.close)) {\n            this.zone.run(() => this.show = false);\n        }\n        else {\n            this.show = false;\n        }\n    }\n    handleMouseLeave() {\n        this.dateRangeService.setRange(this.dateRangeService.selectionRange);\n    }\n    handleKeydown(event) {\n        const { altKey, keyCode } = event;\n        if (keyCode === Keys.Escape || (altKey && keyCode === Keys.ArrowUp)) {\n            this.zone.run(() => this.cancelPopup());\n        }\n    }\n    subscribeFocusBlur(calendar) {\n        if (this.blurSubscription) {\n            this.blurSubscription.unsubscribe();\n            this.focusSubscription.unsubscribe();\n        }\n        if (!calendar) {\n            return;\n        }\n        const nativeElement = calendar.element.nativeElement;\n        this.blurSubscription = fromEvent(nativeElement, 'blur').subscribe(() => this.onBlur.emit());\n        this.focusSubscription = fromEvent(nativeElement, 'focus').subscribe(() => this.onFocus.emit());\n    }\n    addPopupSubscriptions(...subscriptions) {\n        subscriptions.map(s => this.popupSubscriptions.add(s));\n    }\n    get _appendTo() {\n        const appendTo = this.appendTo;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    _toggle(show) {\n        this._show = show;\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n            this.popupSubscriptions.unsubscribe();\n            this.popupSubscriptions = new Subscription(() => { });\n        }\n        if (this._show) {\n            const direction = this.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchor: this.anchor,\n                anchorAlign: this.anchorAlign || { vertical: 'bottom', horizontal: direction },\n                animate: this.animate,\n                appendTo: this._appendTo,\n                collision: this.collision,\n                content: (this.contentTemplate || {}).templateRef || this.defaultTemplate,\n                margin: this.margin,\n                popupAlign: this.popupAlign || { vertical: 'top', horizontal: direction },\n                positionMode: 'absolute'\n            });\n            const { popupElement, popupAnchorViewportLeave } = this.popupRef;\n            popupElement.setAttribute('id', this.popupUID);\n            this.addPopupSubscriptions(this.zone.runOutsideAngular(() => fromEvent(popupElement, 'keydown').subscribe(this.handleKeydown.bind(this))), fromEvent(popupElement, 'mouseleave').subscribe(this.handleMouseLeave.bind(this)), popupAnchorViewportLeave.subscribe(() => this.cancelPopup()));\n        }\n    }\n}\nDateRangePopupComponent.decorators = [\n    { type: Component, args: [{\n                exportAs: 'kendo-daterange-popup',\n                selector: 'kendo-daterange-popup',\n                template: `\n        <ng-container #container></ng-container>\n        <ng-template #defaultTemplate>\n            <kendo-multiviewcalendar kendoDateRangeSelection></kendo-multiviewcalendar>\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nDateRangePopupComponent.ctorParameters = () => [\n    { type: PopupService },\n    { type: DateRangeService },\n    { type: NgZone },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [RTL,] }] }\n];\nDateRangePopupComponent.propDecorators = {\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    defaultTemplate: [{ type: ViewChild, args: ['defaultTemplate',] }],\n    contentTemplate: [{ type: ContentChild, args: [DateRangePopupTemplateDirective,] }],\n    viewCalendar: [{ type: ViewChildren, args: [MultiViewCalendarComponent,] }],\n    contentCalendar: [{ type: ContentChildren, args: [MultiViewCalendarComponent,] }],\n    animate: [{ type: Input }],\n    anchor: [{ type: Input }],\n    anchorAlign: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    collision: [{ type: Input }],\n    popupAlign: [{ type: Input }],\n    margin: [{ type: Input }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    cancel: [{ type: Output }]\n};\n\n/**\n * Represents the Kendo UI DateRange component for Angular.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-daterange>\n *      <kendo-dateinput kendoDateRangeStartInput [(value)]=\"dateRange.start\"></kendo-dateinput>\n *      <kendo-dateinput kendoDateRangeEndInput [(value)]=\"dateRange.end\"></kendo-dateinput>\n *  </kendo-daterange>\n * `\n * })\n * class AppComponent {\n *   public dateRange: any = { start: null, end: null };\n * }\n * ```\n */\nclass DateRangeComponent {\n    constructor() {\n        /**\n         * @hidden\n         */\n        this.showDefault = false;\n    }\n    get hasContentPopup() {\n        return this.contentPopup.length > 0;\n    }\n    ngAfterContentInit() {\n        this.showDefault = !this.hasContentPopup;\n        this.subscription = this.contentPopup.changes.subscribe(() => {\n            this.showDefault = !this.hasContentPopup;\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nDateRangeComponent.decorators = [\n    { type: Component, args: [{\n                providers: [DateRangeService],\n                selector: 'kendo-daterange',\n                template: `\n        <ng-content></ng-content>\n        <kendo-daterange-popup *ngIf=\"showDefault\"></kendo-daterange-popup>\n    `\n            },] },\n];\nDateRangeComponent.propDecorators = {\n    contentPopup: [{ type: ContentChildren, args: [DateRangePopupComponent,] }]\n};\n\n/**\n * @hidden\n */\nclass DateRangeInput {\n    constructor(activeRangeEnd, dateRangeService, input, element, renderer, zone) {\n        this.activeRangeEnd = activeRangeEnd;\n        this.dateRangeService = dateRangeService;\n        this.input = input;\n        this.element = element;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.navigateCalendarOnFocus = false;\n        this.popupSubscriptions = new Subscription(() => { });\n        this.subscriptions = new Subscription(() => { });\n    }\n    get isActiveEnd() {\n        return this.dateRangeService.activeRangeEnd === this.activeRangeEnd;\n    }\n    get popupCalendarActivated() {\n        const popup = this.dateRangeService.dateRangePopup$.value;\n        return isPresent(popup) && isPresent(popup.calendar);\n    }\n    init() {\n        if (this.input.value) {\n            this.dateRangeService.setRange(this.getRange(this.input.value));\n        }\n        [\n            this.input.onBlur.subscribe(() => this.deactivate()),\n            this.input.onFocus.pipe(filter(() => !this.popupCalendarActivated)).subscribe(() => this.activate()),\n            this.input.valueUpdate.subscribe(value => this.updateRange(value, 'change')),\n            this.dateRangeService.activeRangeEnd$.subscribe(() => {\n                if (this.navigateCalendarOnFocus) {\n                    this.focusActiveDate();\n                }\n                this.toggleActiveClass(this.isActiveEnd);\n            }),\n            this.dateRangeService.dateRangePopup$.subscribe(popup => this.initPopup(popup)),\n            this.dateRangeService.range$.subscribe(range => this.updateInputValue(range)),\n            fromEvent(this.element.nativeElement, 'click').subscribe(() => this.activate()),\n            fromEvent(this.element.nativeElement, 'keydown').subscribe((event) => this.togglePopup(event || {}))\n        ].map(s => this.subscriptions.add(s));\n    }\n    destroy() {\n        this.subscriptions.unsubscribe();\n        this.unsubscribePopup();\n    }\n    initPopup(popup) {\n        if (!popup) {\n            this.unsubscribePopup();\n            return;\n        }\n        if (!popup.anchor) {\n            popup.anchor = this.element.nativeElement;\n        }\n        [\n            popup.cancel.subscribe(() => this.isActiveEnd && this.input.focus()),\n            popup.onFocus.subscribe(() => this.toggleActiveClass(this.isActiveEnd)),\n            popup.onBlur.subscribe(() => this.deactivate())\n        ].map(s => this.popupSubscriptions.add(s));\n    }\n    unsubscribePopup() {\n        this.popupSubscriptions.unsubscribe();\n        this.popupSubscriptions = new Subscription(() => { });\n    }\n    activate() {\n        this.dateRangeService.setActiveRangeEnd(this.activeRangeEnd);\n        this.dateRangeService.activatePopup();\n    }\n    deactivate() {\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => {\n                this.updateRange(this.input.value, 'blur');\n                if (this.dateRangeService.hasActiveComponent()) {\n                    return;\n                }\n                this.toggleActiveClass(false);\n                this.zone.run(() => this.dateRangeService.deactivatePopup());\n            });\n        });\n    }\n    updateRange(value, correctOn) {\n        const range = this.getRange(value, correctOn);\n        if (range) {\n            this.focusActiveDate();\n            this.dateRangeService.setRange(range);\n        }\n    }\n    togglePopup({ altKey, keyCode }) {\n        if (keyCode === Keys.Escape) {\n            this.dateRangeService.cancelPopup();\n        }\n        else if (altKey && keyCode === Keys.ArrowDown) {\n            this.dateRangeService.activatePopup();\n        }\n    }\n    focusActiveDate() {\n        if (this.input.value && this.isActiveEnd) {\n            this.dateRangeService.setFocusedDate(cloneDate(this.input.value));\n        }\n    }\n    toggleActiveClass(show) {\n        const action = show ? 'addClass' : 'removeClass';\n        const nativeElement = this.element.nativeElement;\n        if (nativeElement && nativeElement.querySelector) {\n            this.renderer[action](nativeElement.querySelector('.k-dateinput-wrap'), 'k-state-focused');\n        }\n    }\n}\n\n/**\n * A directive which manages the end range selection.\n *\n * > You can use the DateRangeEndInputDirective only with a DateInput component.\n */\nclass DateRangeEndInputDirective extends DateRangeInput {\n    constructor(rangeService, dateInput, element, renderer, zone) {\n        super('end', rangeService, dateInput, element, renderer, zone);\n        this.rangeService = rangeService;\n        this.dateInput = dateInput;\n        /**\n         * Specifies the navigation behavior of the calendar when the active end is changed on input focus. When enabled,\n         * the calendar navigates to the value of the focused input. Otherwise, the calendar displays the last picked date.\n         *\n         * By default, the automatic navigation behavior on input focus is disabled.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n         *  <kendo-daterange>\n         *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n         *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n         *  </kendo-daterange>\n         * `\n         * })\n         * class AppComponent {\n         *   public start: Date = new Date(2018, 3, 10);\n         *   public end: Date = new Date(2018, 10, 20);\n         * }\n         * ```\n         */\n        this.navigateCalendarOnFocus = false;\n    }\n    ngOnInit() {\n        this.rangeService.registerEndInput(this.dateInput);\n        super.init();\n    }\n    ngOnDestroy() {\n        super.destroy();\n    }\n    getRange(value, correctOn) {\n        const { min, max } = this.dateInput;\n        if (!isInRange(value, min, max)) {\n            return null;\n        }\n        const { start } = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE;\n        return this.autoCorrectOn === correctOn && value < start ? clampRange(value) : { start, end: cloneDate(value) };\n    }\n    updateInputValue(range$$1) {\n        const { end } = range$$1 || EMPTY_SELECTIONRANGE;\n        const { min, max } = this.dateInput;\n        if (isEqual(this.dateInput.value, end) || !isInRange(end, min, max)) {\n            return;\n        }\n        this.dateInput.writeValue(cloneDate(end));\n        this.dateInput.notify();\n    }\n}\nDateRangeEndInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDateRangeEndInput]'\n            },] },\n];\n/** @nocollapse */\nDateRangeEndInputDirective.ctorParameters = () => [\n    { type: DateRangeService },\n    { type: DateInputComponent },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nDateRangeEndInputDirective.propDecorators = {\n    autoCorrectOn: [{ type: Input }],\n    navigateCalendarOnFocus: [{ type: Input }]\n};\n\n/**\n * A directive which manages the start selection range.\n *\n * > You can use the DateRangeStartInputDirective only with a DateInput component.\n */\nclass DateRangeStartInputDirective extends DateRangeInput {\n    constructor(rangeService, dateInput, element, renderer, zone) {\n        super('start', rangeService, dateInput, element, renderer, zone);\n        this.rangeService = rangeService;\n        this.dateInput = dateInput;\n        /**\n         * Specifies the navigation behavior of the calendar when the active end is changed on input focus.\n         * When enabled, the calendar navigates to the value of the focused input. Otherwise, the calendar\n         * displays the last picked date.\n         *\n         * By default, the automatic navigation behavior on input focus is disabled.\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *  <h5>Toggle input focus to see the calendar navigating between range ends.</h5>\n         *  <kendo-daterange>\n         *      <kendo-dateinput kendoDateRangeStartInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"start\"></kendo-dateinput>\n         *      <kendo-dateinput kendoDateRangeEndInput [navigateCalendarOnFocus]=\"true\" [(value)]=\"end\"></kendo-dateinput>\n         *  </kendo-daterange>\n         * `\n         * })\n         * class AppComponent {\n         *   public start: Date = new Date(2018, 3, 10);\n         *   public end: Date = new Date(2018, 10, 20);\n         * }\n         * ```\n         */\n        this.navigateCalendarOnFocus = false;\n    }\n    ngOnInit() {\n        this.rangeService.registerStartInput(this.dateInput);\n        super.init();\n    }\n    ngOnDestroy() {\n        super.destroy();\n    }\n    getRange(value, correctOn) {\n        const { min, max } = this.dateInput;\n        if (!isInRange(value, min, max)) {\n            return null;\n        }\n        const { end } = this.rangeService.selectionRange || EMPTY_SELECTIONRANGE;\n        const shouldClamp = this.autoCorrectOn === correctOn && end && value > end;\n        return shouldClamp ? clampRange(value) : { start: cloneDate(value), end };\n    }\n    updateInputValue(range$$1) {\n        const { start } = range$$1 || EMPTY_SELECTIONRANGE;\n        const { min, max } = this.dateInput;\n        if (isEqual(this.dateInput.value, start) || !isInRange(start, min, max)) {\n            return;\n        }\n        this.dateInput.writeValue(cloneDate(start));\n        this.dateInput.notify();\n    }\n}\nDateRangeStartInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDateRangeStartInput]'\n            },] },\n];\n/** @nocollapse */\nDateRangeStartInputDirective.ctorParameters = () => [\n    { type: DateRangeService },\n    { type: DateInputComponent },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nDateRangeStartInputDirective.propDecorators = {\n    autoCorrectOn: [{ type: Input }],\n    navigateCalendarOnFocus: [{ type: Input }]\n};\n\n/**\n * A directive which manages the MultiViewCalendar range selection.\n */\nclass DateRangeSelectionDirective {\n    constructor(calendar, cdr, element, renderer, dateRangeService) {\n        this.calendar = calendar;\n        this.cdr = cdr;\n        this.element = element;\n        this.dateRangeService = dateRangeService;\n        /**\n         * Specifies the auto-correction behavior. If the start date is greater than the end date,\n         * the directive fixes the date range to a single date either on input change or on blur\n         * ([see example]({% slug autocorrect_daterange %}#toc-configuring-the-calendar-selection-directive)).\n         *\n         * By default, the auto-correction is triggered on change.\n         * To disable this behavior, set the `autoCorrectOn` property to `none`.\n         */\n        this.autoCorrectOn = 'change';\n        /**\n         * Fires when the active range end is changed. For more information, refer to\n         * the section on [events]({% slug overview_multiviewcalendar %}#toc-events).\n         */\n        this.activeRangeEndChange = new EventEmitter();\n        /**\n         * Fires when the selection range is changed. For more information, refer to\n         * the section on [events]({% slug overview_multiviewcalendar %}#toc-events).\n         */\n        this.selectionRangeChange = new EventEmitter();\n        this.calendarSubscriptions = new Subscription(() => { });\n        this.dateRangeService = this.dateRangeService || new DateRangeService();\n        renderer.setAttribute(element.nativeElement, 'aria-multiselectable', 'true');\n    }\n    /**\n     * Gets or sets the selection range of the calendar. When a new range is set,\n     * the connected DateRangeService notifies all related parties.\n     */\n    get selectionRange() {\n        return this.calendar ? this.calendar.selectionRange : null;\n    }\n    set selectionRange(range$$1) {\n        if (!this.isEqualCalendarRange(range$$1)) {\n            this.setSelectionRange(range$$1);\n        }\n        if (!isEqualRange(this.dateRangeService.selectionRange, range$$1)) {\n            this.dateRangeService.setRange(range$$1);\n        }\n        this.updateFocusedDate(range$$1);\n    }\n    /**\n     * Gets or sets the active end of the selection range. This option determines which range end will be updated on\n     * user interaction. When a new active end is set, the connected DateRangeService notifies all related parties.\n     */\n    /**\n     * Specifies which end of the selection range will be marked as active. The active end gets modified upon user\n     * interaction. When a new active end is set, the wired DateRangeService notifies all related components. For\n     * example, the start and end DateInput components.\n     *\n     * > If the selection range is undefined, the value is ignored.\n     */\n    get activeRangeEnd() {\n        return this.calendar.activeRangeEnd;\n    }\n    set activeRangeEnd(activeRange) {\n        if (this.dateRangeService.activeRangeEnd === activeRange) {\n            return;\n        }\n        this.calendar.activeRangeEnd = activeRange;\n        this.dateRangeService.setActiveRangeEnd(activeRange);\n    }\n    get calendarRange() {\n        return this.selectionRange || EMPTY_SELECTIONRANGE;\n    }\n    ngOnInit() {\n        const calendar = this.calendar;\n        const dateRangeService = this.dateRangeService;\n        calendar.min = either(dateRangeService.min, calendar.min);\n        calendar.max = either(dateRangeService.max, calendar.max);\n        this.addSubscriptions(calendar.cellEnter.subscribe((value) => this.handleHover(value)), calendar.valueChange.subscribe((value) => this.handleChange(value)), dateRangeService.focusedDate$.subscribe(focusedDate => {\n            if (!isEqual(calendar.focusedDate, focusedDate)) {\n                calendar.focusedDate = focusedDate;\n            }\n        }), dateRangeService.activeRangeEnd$.subscribe(rangeEnd => {\n            if (calendar.activeRangeEnd === rangeEnd) {\n                return;\n            }\n            calendar.activeRangeEnd = rangeEnd;\n            this.activeRangeEndChange.emit(rangeEnd);\n            this.cdr.markForCheck();\n        }), dateRangeService.range$.subscribe(range$$1 => {\n            if (!this.isEqualCalendarRange(range$$1)) {\n                this.acceptAndEmit(range$$1);\n            }\n            this.updateFocusedDate(range$$1);\n        }), fromEvent(this.element.nativeElement, 'blur').subscribe(() => this.handleBlur()));\n    }\n    ngOnDestroy() {\n        this.calendarSubscriptions.unsubscribe();\n    }\n    addSubscriptions(...subscriptions) {\n        subscriptions.map(s => this.calendarSubscriptions.add(s));\n    }\n    isEqualCalendarRange(range$$1) {\n        return isEqualRange(this.calendar.selectionRange, range$$1);\n    }\n    handleBlur() {\n        const { start, end } = this.calendarRange;\n        const autoCorrect = this.autoCorrectOn === 'blur' && start !== null && end !== null && end < start;\n        if (autoCorrect) {\n            this.dateRangeService.setRange(clampRange(start));\n        }\n    }\n    handleChange(value) {\n        const service = this.dateRangeService;\n        const autoCorrect = this.autoCorrectOn === 'change' && this.shouldAutoCorrect(value);\n        const activeEnd = this.calendar.activeRangeEnd !== 'end' ? 'end' : (autoCorrect ? 'end' : 'start');\n        const range$$1 = autoCorrect ? clampRange(value) : this.updateRange(value);\n        if (!isEqualRange(service.selectionRange, range$$1)) {\n            this.acceptAndEmit(range$$1);\n            service.setActiveRangeEnd(activeEnd);\n            service.setRange(range$$1);\n        }\n    }\n    handleHover(value) {\n        this.dateRangeService.setFocusedDate(cloneDate(value));\n        if (this.hasCompleteRange()) {\n            return;\n        }\n        const { start, end } = this.calendarRange;\n        const activeRangeEnd = this.calendar.activeRangeEnd;\n        const updateRange = (start && activeRangeEnd === 'end') || (end && activeRangeEnd === 'start');\n        if (updateRange) {\n            this.setSelectionRange(this.updateRange(value));\n        }\n    }\n    hasCompleteRange() {\n        const { start, end } = this.dateRangeService.selectionRange || EMPTY_SELECTIONRANGE;\n        return Boolean(start) && Boolean(end);\n    }\n    shouldAutoCorrect(value) {\n        const { end, start } = this.calendarRange;\n        if (this.calendar.activeRangeEnd !== 'end') {\n            return end !== null && value > end;\n        }\n        else {\n            return start !== null && value < start;\n        }\n    }\n    updateFocusedDate(range$$1) {\n        if (!range$$1 || this.dateRangeService.focusedDate) {\n            return;\n        }\n        this.dateRangeService.setFocusedDate(range$$1.start || range$$1.end);\n    }\n    updateRange(value) {\n        const { end, start } = this.calendarRange;\n        return this.calendar.activeRangeEnd !== 'end' ? ({ start: value, end }) : ({ start, end: value });\n    }\n    setSelectionRange(range$$1) {\n        this.calendar.selectionRange = range$$1;\n        this.calendar.writeValue(null);\n    }\n    acceptAndEmit(range$$1) {\n        this.setSelectionRange(range$$1);\n        this.selectionRangeChange.emit(range$$1);\n    }\n}\nDateRangeSelectionDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDateRangeSelection]'\n            },] },\n];\n/** @nocollapse */\nDateRangeSelectionDirective.ctorParameters = () => [\n    { type: MultiViewCalendarComponent },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: DateRangeService, decorators: [{ type: Optional }] }\n];\nDateRangeSelectionDirective.propDecorators = {\n    autoCorrectOn: [{ type: Input }],\n    selectionRange: [{ type: Input }],\n    activeRangeEnd: [{ type: Input }],\n    activeRangeEndChange: [{ type: Output }],\n    selectionRangeChange: [{ type: Output }]\n};\n\n/* tslint:disable:directive-class-suffix directive-selector */\n/**\n * @hidden\n */\nclass KForOfContext {\n    constructor($implicit, kForOf, index, count) {\n        this.$implicit = $implicit;\n        this.kForOf = kForOf;\n        this.index = index;\n        this.count = count;\n    }\n    get first() { return this.index === 0; }\n    get last() { return this.index === this.count - 1; }\n    get even() { return this.index % 2 === 0; }\n    get odd() { return !this.even; }\n}\n/**\n * @hidden\n */\nclass KForOf {\n    constructor(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._differ = null;\n    }\n    set kForTemplate(value) {\n        if (value) {\n            this._template = value;\n        }\n    }\n    ngOnChanges(changes) {\n        if ('kForOf' in changes) {\n            const value = changes.kForOf.currentValue;\n            if (this._differ || !value) {\n                return;\n            }\n            try {\n                this._differ = this._differs.find(value).create(this.kForTrackBy);\n            }\n            catch (e) {\n                throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'.`);\n            }\n        }\n    }\n    ngDoCheck() {\n        if (this._differ) {\n            const changes = this._differ.diff(this.kForOf);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    }\n    _applyChanges(changes) {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const viewContainerLength = this._viewContainer.length;\n        const dataLength = this.kForOf.length;\n        const tuples = {};\n        changes.forEachOperation((record, _, currentIndex) => {\n            if (currentIndex !== null) {\n                tuples[currentIndex] = record.item;\n            }\n        });\n        for (let i = viewContainerLength; i < dataLength; i++) {\n            this._viewContainer.createEmbeddedView(this._template, new KForOfContext(null, this.kForOf, -1, -1), i);\n        }\n        for (let i = this._viewContainer.length; i > dataLength; i--) {\n            this._viewContainer.remove(i - 1);\n        }\n        for (let i = 0; i < this._viewContainer.length; i++) {\n            const view = this._viewContainer.get(i);\n            view.context.index = i;\n            view.context.count = length;\n            view.context.$implicit = tuples[i] || null;\n        }\n    }\n}\nKForOf.decorators = [\n    { type: Directive, args: [{ selector: '[kFor][kForOf]' },] },\n];\n/** @nocollapse */\nKForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\nKForOf.propDecorators = {\n    kForOf: [{ type: Input }],\n    kForTrackBy: [{ type: Input }],\n    kForTemplate: [{ type: Input }]\n};\n/**\n * @hidden\n */\nfunction getTypeNameForDebugging(type) {\n    return type.name || typeof type;\n}\n\n/**\n * @hidden\n */\nclass HeaderComponent {\n    constructor(bus, cdr, localization, intl, disabledDatesService) {\n        this.bus = bus;\n        this.cdr = cdr;\n        this.localization = localization;\n        this.intl = intl;\n        this.disabledDatesService = disabledDatesService;\n        this.navigate = true;\n        this.todayAvailable = true;\n        this.min = new Date(MIN_DATE);\n        this.max = new Date(MAX_DATE);\n        this.rangeLength = 1;\n        this.today = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    get getComponentClass() {\n        return true;\n    }\n    ngOnInit() {\n        this.subscriptions\n            .add(this.intl.changes.subscribe(this.intlChange.bind(this)))\n            .add(this.localization.changes.subscribe(this.l10nChange.bind(this)))\n            .add(this.disabledDatesService.changes.subscribe(this.setTodayAvailability.bind(this)));\n    }\n    ngOnChanges(_) {\n        const service = this.bus.service(this.activeView);\n        if (!service) {\n            return;\n        }\n        this.activeViewValue = CalendarViewEnum[this.activeView];\n        this.todayMessage = this.localization.get('today');\n        this.setTodayAvailability();\n        this.navigate = this.bus.canMoveUp(this.activeView);\n        this.title = this.getTitle();\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    handleTodayClick() {\n        if (!this.todayAvailable) {\n            return;\n        }\n        this.bus.moveToBottom(this.activeView);\n        this.today.emit(dateInRange(getToday(), this.min, this.max));\n    }\n    handleNavigation() {\n        if (!this.navigate) {\n            return;\n        }\n        this.bus.moveUp(this.activeView);\n    }\n    intlChange() {\n        if (this.currentDate && this.bus.service(this.activeView)) {\n            this.title = this.getTitle();\n            this.cdr.markForCheck();\n        }\n    }\n    l10nChange() {\n        this.todayMessage = this.localization.get('today');\n        this.cdr.markForCheck();\n    }\n    getTitle() {\n        if (!this.currentDate) {\n            return '';\n        }\n        const service = this.bus.service(this.activeView);\n        const take = this.rangeLength - 1;\n        const title = service.title(this.currentDate);\n        const nextDate = service.addToDate(this.currentDate, take);\n        if (take < 1 || !service.isInRange(nextDate, this.min, this.max)) {\n            return title;\n        }\n        return `${title} - ${service.title(nextDate)}`;\n    }\n    setTodayAvailability() {\n        const today = getToday();\n        const isTodayInRange = isInRange(today, getDate(this.min), getDate(this.max));\n        const isDisabled = this.disabledDatesService.isDateDisabled(today);\n        this.todayAvailable = isTodayInRange && !isDisabled;\n        this.cdr.markForCheck();\n    }\n}\nHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-calendar-header',\n                template: `\n    <span class=\"k-button k-bare k-title\" [class.k-state-disabled]=\"!navigate\"\n        [kendoEventsOutsideAngular]=\"{\n            click: handleNavigation\n        }\"\n        [scope]=\"this\">\n        <ng-template [ngIf]=\"!templateRef\">{{title}}</ng-template>\n        <ng-template\n            [ngIf]=\"templateRef\"\n            [ngTemplateOutlet]=\"templateRef\"\n            [ngTemplateOutletContext]=\"{ $implicit: title, activeView: activeViewValue, date: currentDate }\"\n        ></ng-template>\n    </span>\n    <span class=\"k-today\" [class.k-state-disabled]=\"!todayAvailable\"\n        [kendoEventsOutsideAngular]=\"{\n            click: handleTodayClick\n        }\"\n        [scope]=\"this\">\n        {{todayMessage}}\n    </span>\n  `\n            },] },\n];\n/** @nocollapse */\nHeaderComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: ChangeDetectorRef },\n    { type: LocalizationService },\n    { type: IntlService },\n    { type: DisabledDatesService }\n];\nHeaderComponent.propDecorators = {\n    activeView: [{ type: Input }],\n    currentDate: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    rangeLength: [{ type: Input }],\n    templateRef: [{ type: Input }],\n    today: [{ type: Output }],\n    getComponentClass: [{ type: HostBinding, args: [\"class.k-calendar-header\",] }]\n};\n\n/**\n * @hidden\n */\nclass WeekNamesService {\n    constructor(intl) {\n        this.intl = intl;\n    }\n    getWeekNames(includeWeekNumber = false) {\n        const weekNames = shiftWeekNames(this.intl.dateFormatNames({ nameType: 'short', type: 'days' }), this.intl.firstDay());\n        return includeWeekNumber ? [''].concat(weekNames) : weekNames;\n    }\n}\nWeekNamesService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nWeekNamesService.ctorParameters = () => [\n    { type: IntlService }\n];\n\n/**\n * @hidden\n */\nclass ViewComponent {\n    constructor(bus, intl, cdr, weekService, element, zone, renderer, disabledDatesService) {\n        this.bus = bus;\n        this.intl = intl;\n        this.cdr = cdr;\n        this.weekService = weekService;\n        this.element = element;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.disabledDatesService = disabledDatesService;\n        this.direction = 'vertical';\n        this.isActive = true;\n        this.change = new EventEmitter();\n        this.cellEnter = new EventEmitter();\n        this.cellLeave = new EventEmitter();\n        this.weekNames = [];\n        this.colSpan = 0;\n        this.subscriptions = new Subscription();\n        this.domEvents = [];\n        this.subscriptions\n            .add(this.intl.changes.subscribe(this.intlChange.bind(this)))\n            .add(this.disabledDatesService.changes.subscribe(this.disabledDatesChange.bind(this)));\n    }\n    get weekNumber() {\n        return this.showWeekNumbers && this.activeView === CalendarViewEnum.month;\n    }\n    set weekNumber(showWeekNumbers) {\n        this.showWeekNumbers = showWeekNumbers;\n    }\n    ngOnInit() {\n        if (this.element) {\n            this.zone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this.service = this.bus.service(this.activeView);\n        if (!this.service) {\n            return;\n        }\n        const generateWeekNames = this.isHorizontal() && this.weekNames.length === 0;\n        if (generateWeekNames && (changes.weekNumber || changes.direction)) {\n            this.weekNames = this.weekService.getWeekNames(this.weekNumber);\n        }\n        this.colSpan = this.service.rowLength(this.weekNumber);\n        this.title = this.service.title(this.viewDate);\n        this.updateData();\n        if (changes.activeView) {\n            this.currentCellIndex = null;\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n        this.domEvents.forEach(unsubscribeCallback => unsubscribeCallback());\n    }\n    isHorizontal() {\n        return this.direction === 'horizontal';\n    }\n    isMonthView() {\n        return this.activeView === CalendarViewEnum.month;\n    }\n    firstDate(rowCtx) {\n        const ctx = this.firstWeekDateContext(rowCtx);\n        return ctx ? ctx.value : null;\n    }\n    getWeekNumber(date) {\n        if (!this.weekNumber) {\n            return null;\n        }\n        return weekInYear(date, this.intl.firstDay());\n    }\n    getWeekNumberContext(rowCtx) {\n        const ctx = this.firstWeekDateContext(rowCtx);\n        if (!this.weekNumber || !ctx) {\n            return null;\n        }\n        const weekNumber = weekInYear(ctx.value, this.intl.firstDay()).toString();\n        return {\n            formattedValue: weekNumber,\n            id: null,\n            isFocused: false,\n            isSelected: false,\n            isWeekend: false,\n            title: weekNumber,\n            value: cloneDate(ctx.value)\n        };\n    }\n    getStyles(context) {\n        const { isRangeEnd, isRangeStart } = context;\n        const isEndActive = this.activeRangeEnd === 'end' && isRangeEnd;\n        const isStartActive = this.activeRangeEnd === 'start' && isRangeStart;\n        return stringifyClassObject({\n            'k-range-end': isRangeEnd,\n            'k-range-mid': context.isRangeMid,\n            'k-range-split-end': context.isRangeSplitEnd,\n            'k-range-split-start': context.isRangeSplitStart,\n            'k-range-start': isRangeStart,\n            'k-state-active': isStartActive || isEndActive,\n            'k-state-focused': this.isActive && context.isFocused,\n            'k-state-selected': context.isSelected || isRangeStart || isRangeEnd,\n            'k-today': context.isToday,\n            'k-weekend': context.isWeekend,\n            'k-state-disabled': context.isDisabled\n        });\n    }\n    tableCellIndex(rowIndex, cellIndex) {\n        return `${rowIndex}:${cellIndex}`;\n    }\n    firstWeekDateContext(rowCtx) {\n        if (!this.weekNumber) {\n            return null;\n        }\n        let idx = 0;\n        let ctx = rowCtx[idx];\n        while (!ctx && idx < rowCtx.length) {\n            ctx = rowCtx[++idx];\n        }\n        return ctx;\n    }\n    updateData() {\n        const time = this.selectedDate || getToday();\n        const viewDate = setTime(this.viewDate, time);\n        this.data = this.service.data({\n            cellUID: this.cellUID,\n            focusedDate: this.focusedDate,\n            isActiveView: !this.bus.canMoveDown(this.activeView),\n            max: this.max,\n            min: this.min,\n            selectedDate: this.selectedDate,\n            selectionRange: this.selectionRange,\n            viewDate: viewDate,\n            isDateDisabled: this.disabledDatesService.isDateDisabled\n        });\n    }\n    intlChange() {\n        this.updateData();\n        if (this.isHorizontal()) {\n            this.weekNames = this.weekService.getWeekNames(this.weekNumber);\n        }\n        this.cdr.markForCheck();\n    }\n    disabledDatesChange() {\n        this.updateData();\n        this.cdr.markForCheck();\n    }\n    bindEvents() {\n        const element = this.element.nativeElement;\n        this.domEvents.push(this.renderer.listen(element, 'mouseover', this.cellMouseoverHandler.bind(this)), this.renderer.listen(element, 'mouseleave', this.mouseLeaveHandler.bind(this)), this.renderer.listen(element, 'click', this.clickHandler.bind(this)));\n    }\n    clickHandler(args) {\n        const cell = this.closestCell(args);\n        if (cell) {\n            const index = cell.getAttribute('data-cell-index');\n            const cellContext = this.cellByIndex(index);\n            if (!cellContext.isDisabled) {\n                this.change.emit(cellContext.value);\n            }\n        }\n    }\n    mouseLeaveHandler() {\n        if (this.currentCellIndex) {\n            this.emitCellLeave();\n        }\n    }\n    cellMouseoverHandler(args) {\n        const cell = this.closestCell(args);\n        if (cell) {\n            const index = cell.getAttribute('data-cell-index');\n            if (this.currentCellIndex && this.currentCellIndex !== index) {\n                this.emitCellLeave();\n            }\n            const value = this.cellByIndex(index).value;\n            this.cellEnter.emit(value);\n            this.currentCellIndex = index;\n        }\n        else if (this.currentCellIndex) {\n            this.emitCellLeave();\n        }\n    }\n    closestCell(eventArgs) {\n        return closestInScope(eventArgs.target, node => node.hasAttribute('data-cell-index'), this.element.nativeElement);\n    }\n    emitCellLeave() {\n        const item = this.cellByIndex(this.currentCellIndex);\n        if (item) {\n            this.cellLeave.emit(item.value);\n        }\n        this.currentCellIndex = null;\n    }\n    cellByIndex(index) {\n        const [rowIndex, cellIndex] = index.split(':');\n        return this.data[rowIndex][cellIndex];\n    }\n}\nViewComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoCalendarView]',\n                template: `\n    <ng-template #emptyCell><td class=\"k-empty\">&nbsp;</td></ng-template>\n    <tr *ngIf=\"!isHorizontal()\" role=\"row\"><th scope=\"col\" [colSpan]=\"colSpan\">{{title}}</th></tr>\n    <tr role=\"row\" *ngIf=\"isMonthView() && isHorizontal()\">\n        <th *ngFor=\"let name of weekNames\">{{name}}</th>\n    </tr>\n    <tr *kFor=\"let row of data; let rowIndex = index\" role=\"row\">\n        <ng-template [ngIf]=\"weekNumber\">\n            <td class=\"k-alt\" *ngIf=\"firstDate(row); else emptyCell\">\n                <ng-template [ngIf]=\"!weekNumberTemplateRef\">\n                    {{getWeekNumber(firstDate(row))}}\n                </ng-template>\n                <ng-template\n                    [ngIf]=\"weekNumberTemplateRef\"\n                    [ngTemplateOutlet]=\"weekNumberTemplateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        $implicit: firstDate(row),\n                        cellContext: getWeekNumberContext(row)\n                    }\"\n                ></ng-template>\n            </td>\n        </ng-template>\n        <ng-container *kFor=\"let cell of row; let cellIndex = index\">\n            <td\n                *ngIf=\"cell; else emptyCell\"\n                role=\"gridcell\"\n                [attr.id]=\"cell.id\"\n                [attr.data-cell-index]=\"tableCellIndex(rowIndex, cellIndex)\"\n                [attr.aria-selected]=\"cell.isSelected || cell.isRangeStart || cell.isRangeMid || cell.isRangeEnd\"\n                [attr.aria-disabled]=\"cell.isDisabled\"\n                [ngClass]=\"getStyles(cell)\"\n                [title]=\"cell.title\"\n            >\n                <span class=\"k-link\">\n                    <ng-template [ngIf]=\"!templateRef\">{{cell.formattedValue}}</ng-template>\n                    <ng-template\n                        *ngIf=\"templateRef\"\n                        [ngTemplateOutlet]=\"templateRef\"\n                        [ngTemplateOutletContext]=\"{ $implicit: cell.value, cellContext: cell }\"\n                    ></ng-template>\n                </span>\n            </td>\n        </ng-container>\n    </tr>\n  `\n            },] },\n];\n/** @nocollapse */\nViewComponent.ctorParameters = () => [\n    { type: BusViewService },\n    { type: IntlService },\n    { type: ChangeDetectorRef },\n    { type: WeekNamesService },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: DisabledDatesService }\n];\nViewComponent.propDecorators = {\n    direction: [{ type: Input }],\n    isActive: [{ type: Input }],\n    activeView: [{ type: Input }],\n    cellUID: [{ type: Input }],\n    focusedDate: [{ type: Input }],\n    selectedDate: [{ type: Input }],\n    viewDate: [{ type: Input }],\n    activeRangeEnd: [{ type: Input }],\n    selectionRange: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    weekNumber: [{ type: Input }],\n    viewIndex: [{ type: Input }],\n    templateRef: [{ type: Input }],\n    weekNumberTemplateRef: [{ type: Input }],\n    change: [{ type: Output }],\n    cellEnter: [{ type: Output }],\n    cellLeave: [{ type: Output }]\n};\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `HeaderComponent`&mdash;The component that renders the UI for vertical navigation.\n * - `ViewComponent`&mdash;The component that renders the active Calendar view.\n */\nclass CalendarCommonModule {\n}\nCalendarCommonModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    KForOf,\n                    HeaderComponent,\n                    ViewComponent\n                ],\n                exports: [\n                    KForOf,\n                    HeaderComponent,\n                    ViewComponent\n                ],\n                imports: [CommonModule, EventsModule]\n            },] },\n];\n\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n * - `NavigationItemTemplateDirective`&mdash;The navigation item template directive.\n */\nclass TemplatesModule {\n}\nTemplatesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    CellTemplateDirective,\n                    MonthCellTemplateDirective,\n                    YearCellTemplateDirective,\n                    DecadeCellTemplateDirective,\n                    CenturyCellTemplateDirective,\n                    WeekNumberCellTemplateDirective,\n                    HeaderTitleTemplateDirective,\n                    NavigationItemTemplateDirective\n                ],\n                exports: [\n                    CellTemplateDirective,\n                    MonthCellTemplateDirective,\n                    YearCellTemplateDirective,\n                    DecadeCellTemplateDirective,\n                    CenturyCellTemplateDirective,\n                    WeekNumberCellTemplateDirective,\n                    HeaderTitleTemplateDirective,\n                    NavigationItemTemplateDirective\n                ]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass CalendarMessages extends ComponentMessages {\n}\nCalendarMessages.propDecorators = {\n    today: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass CalendarLocalizedMessagesDirective extends CalendarMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nCalendarLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: CalendarMessages,\n                        useExisting: forwardRef(() => CalendarLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoCalendarLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nCalendarLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass CalendarCustomMessagesComponent extends CalendarMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCalendarCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: CalendarMessages,\n                        useExisting: forwardRef(() => CalendarCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-calendar-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nCalendarCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst COMPONENT_DIRECTIVES = [\n    VirtualizationComponent\n];\n/**\n * @hidden\n *\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Virtualization component.\n */\nclass VirtualizationModule {\n}\nVirtualizationModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENT_DIRECTIVES],\n                exports: [COMPONENT_DIRECTIVES],\n                imports: [CommonModule]\n            },] },\n];\n\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n * - `NavigationItemTemplateDirective`&mdash;The navigation item template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendar module\n * import { CalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarModule], // import Calendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass CalendarModule {\n}\nCalendarModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    CalendarComponent,\n                    NavigationComponent,\n                    CalendarCustomMessagesComponent,\n                    CalendarLocalizedMessagesDirective,\n                    ViewListComponent\n                ],\n                exports: [\n                    CalendarComponent,\n                    NavigationComponent,\n                    CalendarCustomMessagesComponent,\n                    CalendarLocalizedMessagesDirective,\n                    ViewListComponent,\n                    CalendarCommonModule,\n                    TemplatesModule\n                ],\n                imports: [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, VirtualizationModule, EventsModule],\n                providers: [\n                    CalendarDOMService,\n                    CenturyViewService,\n                    DecadeViewService,\n                    MonthViewService,\n                    YearViewService,\n                    WeekNamesService\n                ]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.propDecorators = {\n    today: [{ type: Input }],\n    prevButtonTitle: [{ type: Input }],\n    nextButtonTitle: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass MultiViewCalendarLocalizedMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nMultiViewCalendarLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => MultiViewCalendarLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoMultiViewCalendarLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nMultiViewCalendarLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass MultiViewCalendarCustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nMultiViewCalendarCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => MultiViewCalendarCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-multiviewcalendar-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nMultiViewCalendarCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * The package exports:\n * - `CellTemplateDirective`&mdash;The month cell template directive.\n * - `MonthCellTemplateDirective`&mdash;The month cell template directive.\n * - `YearCellTemplateDirective`&mdash;The year cell template directive.\n * - `DecadeCellTemplateDirective`&mdash;The decade cell template directive.\n * - `CenturyCellTemplateDirective`&mdash;The century cell template directive.\n * - `WeekNumberCellTemplateDirective`&mdash;The month week number cell template directive.\n * - `HeaderTitleTemplateDirective`&mdash;The header title template directive.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the MultiViewCalendar module\n * import { MultiViewCalendarModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, MultiViewCalendarModule], // import MultiViewCalendar module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n */\nclass MultiViewCalendarModule {\n}\nMultiViewCalendarModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    HorizontalViewListComponent,\n                    MultiViewCalendarLocalizedMessagesDirective,\n                    MultiViewCalendarCustomMessagesComponent,\n                    MultiViewCalendarComponent\n                ],\n                exports: [\n                    HorizontalViewListComponent,\n                    MultiViewCalendarLocalizedMessagesDirective,\n                    MultiViewCalendarCustomMessagesComponent,\n                    MultiViewCalendarComponent,\n                    CalendarCommonModule,\n                    TemplatesModule\n                ],\n                imports: [CommonModule, CalendarCommonModule, IntlModule, TemplatesModule, PopupModule],\n                providers: [\n                    NavigationService,\n                    CenturyViewService,\n                    DecadeViewService,\n                    MonthViewService,\n                    YearViewService,\n                    WeekNamesService\n                ]\n            },] },\n];\n\n/**\n * The exported package module.\n *\n * The package exports:\n * - `CalendarModule`&mdash;The calendar module.\n * - `MultiViewCalendarModule`&mdash;The multi-view calendar module.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Calendars module\n * import { CalendarsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, CalendarsModule], // import the Calendars module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass CalendarsModule {\n}\nCalendarsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [\n                    CalendarModule,\n                    MultiViewCalendarModule\n                ],\n                imports: [\n                    CalendarModule,\n                    MultiViewCalendarModule\n                ]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass DateInputMessages extends ComponentMessages {\n}\nDateInputMessages.propDecorators = {\n    decrement: [{ type: Input }],\n    increment: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass DateInputLocalizedMessagesDirective extends DateInputMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nDateInputLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: DateInputMessages,\n                        useExisting: forwardRef(() => DateInputLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoDateInputLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nDateInputLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass DateInputCustomMessagesComponent extends DateInputMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nDateInputCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: DateInputMessages,\n                        useExisting: forwardRef(() => DateInputCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-dateinput-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nDateInputCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DateInput component.\n */\nclass DateInputModule {\n}\nDateInputModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    DateInputComponent,\n                    DateInputCustomMessagesComponent,\n                    DateInputLocalizedMessagesDirective\n                ],\n                exports: [\n                    DateInputComponent,\n                    DateInputCustomMessagesComponent,\n                    DateInputLocalizedMessagesDirective\n                ],\n                imports: [CommonModule, IntlModule, EventsModule]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass DatePickerMessages extends ComponentMessages {\n}\nDatePickerMessages.propDecorators = {\n    today: [{ type: Input }],\n    toggle: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass DatePickerLocalizedMessagesDirective extends DatePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nDatePickerLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: DatePickerMessages,\n                        useExisting: forwardRef(() => DatePickerLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoDatePickerLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nDatePickerLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass DatePickerCustomMessagesComponent extends DatePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nDatePickerCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: DatePickerMessages,\n                        useExisting: forwardRef(() => DatePickerCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-datepicker-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nDatePickerCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst ɵ0$e = touchEnabled;\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DatePicker component.\n */\nclass DatePickerModule {\n}\nDatePickerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    DatePickerComponent,\n                    DatePickerCustomMessagesComponent,\n                    DatePickerLocalizedMessagesDirective\n                ],\n                exports: [\n                    DatePickerComponent,\n                    DatePickerCustomMessagesComponent,\n                    DatePickerLocalizedMessagesDirective,\n                    TemplatesModule\n                ],\n                imports: [\n                    CommonModule,\n                    DateInputModule,\n                    CalendarModule,\n                    IntlModule,\n                    PopupModule,\n                    TemplatesModule,\n                    EventsModule\n                ],\n                providers: [{ provide: TOUCH_ENABLED, useValue: ɵ0$e }]\n            },] },\n];\n\nconst COMPONENT_DIRECTIVES$1 = [\n    DateRangeComponent,\n    DateRangePopupComponent,\n    DateRangePopupTemplateDirective,\n    DateRangeSelectionDirective,\n    DateRangeStartInputDirective,\n    DateRangeEndInputDirective\n];\nconst COMPONENT_MODULES = [\n    MultiViewCalendarModule,\n    DateInputModule,\n    PopupModule,\n    EventsModule\n];\n/**\n * The exported package module.\n *\n * The package exports:\n * - `DateRangeComponent`&mdash;The DateRange component class.\n * - `DateRangePopupComponent`&mdash;The DateRangePopup component class.\n * - `DateRangeSelectionDirective`&mdash;The MultiviewCalendar date range selection directive.\n * - `DateRangeEndInputDirective`&mdash;The end DateInput date range selection directive.\n * - `DateRangeStartInputDirective`&mdash;The start DateInput date range selection directive.\n * - `DateRangePopupTemplateDirective`&mdash;The DateRangePopup content template directive.\n * - `MultiViewCalendarModule`&mdash;The MultiViewCalendar module.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the DateRange module\n * import { DateRangeModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, DateRangeModule], // import DateRange module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DateRangeModule {\n}\nDateRangeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENT_DIRECTIVES$1],\n                exports: [COMPONENT_DIRECTIVES$1],\n                imports: [CommonModule, COMPONENT_MODULES]\n            },] },\n];\n\nconst div$1 = domContainerFactory('div');\nconst ul$1 = domContainerFactory('ul');\nconst li$1 = domContainerFactory('li');\nconst listItem = () => li$1('<span>02</span>', 'k-item');\nconst list = () => ul$1([listItem()], 'k-reset');\nconst scrollable$1 = () => (div$1([list()], 'k-time-container k-content k-scrollable'));\nconst timeListWrapper = () => {\n    if (!isDocumentAvailable()) {\n        return null;\n    }\n    return div$1([div$1([scrollable$1()], 'k-time-list')], 'k-time-list-wrapper', { left: '-10000px', position: 'absolute' });\n};\nconst TIMELIST_WRAPPER = timeListWrapper();\n/**\n * @hidden\n */\nclass TimePickerDOMService {\n    ensureHeights() {\n        if (this.timeListHeight !== undefined) {\n            return;\n        }\n        this.calculateHeights();\n    }\n    calculateHeights(container) {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const listContainer = container && container.querySelector('.k-time-list-container');\n        const hostContainer = listContainer || document.body;\n        const wrapper = hostContainer.appendChild(TIMELIST_WRAPPER);\n        this.timeListHeight = wrapper.querySelector('.k-scrollable').getBoundingClientRect().height;\n        this.itemHeight = wrapper.querySelector('li').getBoundingClientRect().height;\n        hostContainer.removeChild(wrapper);\n    }\n    isActive(element) {\n        if (!isDocumentAvailable() || !element) {\n            return false;\n        }\n        return (element.nativeElement || element) === document.activeElement;\n    }\n}\nTimePickerDOMService.decorators = [\n    { type: Injectable },\n];\n\nconst HOURS_IN_DAY = 24;\nconst clampToRange = (rangeValue) => (value) => value % rangeValue;\nconst clamp = clampToRange(HOURS_IN_DAY);\nconst stepper = (start, step) => (idx) => clamp(start + (idx * step));\nconst distanceFromMin = (value, min) => clamp(HOURS_IN_DAY + value - min);\nconst limit = (borderValue) => (barrier, value) => {\n    const useBarrier = !value || getDate(barrier).getTime() === getDate(value).getTime();\n    return useBarrier ? barrier : setHours(barrier, borderValue);\n};\nconst limitDown = limit(0);\nconst limitUp = limit(HOURS_IN_DAY - 1);\n/**\n * @hidden\n */\nclass HoursService {\n    constructor(intl) {\n        this.intl = intl;\n        this.boundRange = false;\n        this.insertUndividedMax = false;\n    }\n    apply(value, candidate) {\n        return setHours(value, candidate.getHours());\n    }\n    configure(settings) {\n        const { boundRange = this.boundRange, insertUndividedMax = this.insertUndividedMax, min = this.min, max = this.max, part, step = this.step } = settings;\n        this.boundRange = boundRange;\n        this.insertUndividedMax = insertUndividedMax;\n        this.toListItem = (hour) => {\n            const date = setHours(MIDNIGHT_DATE, hour);\n            return {\n                text: this.intl.formatDate(date, part.pattern),\n                value: date\n            };\n        };\n        this.min = min;\n        this.max = max;\n        this.step = step;\n    }\n    data(selectedValue) {\n        const [min] = this.range(selectedValue);\n        const getHour = stepper(min, this.step);\n        const convertToItem = (idx) => (this.toListItem(getHour(idx)));\n        const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n        this.addLast(data);\n        this.addMissing(data, selectedValue);\n        return data;\n    }\n    isRangeChanged(min, max) {\n        return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n        return this.boundRange ? [limitDown(min, value), limitUp(max, value)] : [min, max];\n    }\n    total(value) {\n        const last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n        const missing = this.isMissing(value) ? 1 : 0;\n        return this.countFromMin(value) + missing + last$$1;\n    }\n    selectedIndex(value) {\n        return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n        if (!value) {\n            return true;\n        }\n        const matchMax = this.insertUndividedMax && this.lastHour(value) === value.getHours();\n        return matchMax || !this.isMissing(value);\n    }\n    addLast(data, value) {\n        if (this.insertUndividedMax && this.isLastMissing(value)) {\n            data.push(this.toListItem(this.lastHour(value)));\n        }\n        return data;\n    }\n    addMissing(data, value) {\n        if (this.valueInList(value)) {\n            return data;\n        }\n        const missingItem = this.toListItem(value.getHours());\n        data.splice(this.selectedIndex(value), 0, missingItem);\n        return data;\n    }\n    countFromMin(value) {\n        const [min, max] = this.range(value);\n        return Math.floor(distanceFromMin(max, min) / this.step) + 1; /* include min */\n    }\n    isMissing(value) {\n        if (!value) {\n            return false;\n        }\n        return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n        return this.isMissing(setHours(this.max, this.lastHour(value)));\n    }\n    divideByStep(value) {\n        return distanceFromMin(value.getHours(), this.min.getHours()) / this.step;\n    }\n    lastHour(value) {\n        return this.range(value)[1];\n    }\n    range(value) {\n        const [min, max] = this.limitRange(this.min, this.max, value);\n        return [min.getHours(), max.getHours()];\n    }\n}\nHoursService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nHoursService.ctorParameters = () => [\n    { type: IntlService }\n];\n\nconst MINUTES_IN_HOUR = 60;\nconst clampToRange$1 = (rangeValue) => (value) => value % rangeValue;\nconst clamp$1 = clampToRange$1(MINUTES_IN_HOUR);\nconst stepper$1 = (start, step) => (idx) => clamp$1(start + (idx * step));\nconst distanceFromMin$1 = (value, min) => clamp$1(MINUTES_IN_HOUR + value - min);\nconst limit$1 = (borderValue) => (barrier, value) => {\n    const useBarrier = !value || barrier.getHours() === value.getHours();\n    return useBarrier ? barrier : setMinutes(barrier, borderValue);\n};\nconst limitDown$1 = limit$1(0);\nconst limitUp$1 = limit$1(MINUTES_IN_HOUR - 1);\n/**\n * @hidden\n */\nclass MinutesService {\n    constructor(intl) {\n        this.intl = intl;\n        this.insertUndividedMax = false;\n    }\n    apply(value, candidate) {\n        return setMinutes(value, candidate.getMinutes());\n    }\n    configure(settings) {\n        const { insertUndividedMax = this.insertUndividedMax, min = this.min, max = this.max, part, step = this.step } = settings;\n        this.insertUndividedMax = insertUndividedMax;\n        this.toListItem = (minute) => {\n            const date = setMinutes(MIDNIGHT_DATE, minute);\n            return {\n                text: this.intl.formatDate(date, part.pattern),\n                value: date\n            };\n        };\n        this.min = min;\n        this.max = max;\n        this.step = step;\n    }\n    data(selectedValue) {\n        const [min] = this.range(selectedValue);\n        const getMinute = stepper$1(min, this.step);\n        const convertToItem = (idx) => (this.toListItem(getMinute(idx)));\n        const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n        this.addLast(data);\n        this.addMissing(data, selectedValue);\n        return data;\n    }\n    isRangeChanged(min, max) {\n        return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n        return [limitDown$1(min, value), limitUp$1(max, value)];\n    }\n    total(value) {\n        const last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n        const missing = this.isMissing(value) ? 1 : 0;\n        return this.countFromMin(value) + missing + last$$1;\n    }\n    selectedIndex(value) {\n        return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n        if (!value) {\n            return true;\n        }\n        const matchMax = this.insertUndividedMax && this.lastMinute(value) === value.getMinutes();\n        return matchMax || !this.isMissing(value);\n    }\n    addLast(data, value) {\n        if (this.insertUndividedMax && this.isLastMissing(value)) {\n            data.push(this.toListItem(this.lastMinute(value)));\n        }\n        return data;\n    }\n    addMissing(data, value) {\n        if (this.valueInList(value)) {\n            return data;\n        }\n        const missingItem = this.toListItem(value.getMinutes());\n        data.splice(this.selectedIndex(value), 0, missingItem);\n        return data;\n    }\n    countFromMin(value) {\n        const [min, max] = this.range(value);\n        return Math.floor(distanceFromMin$1(max, min) / this.step) + 1; /* include min */\n    }\n    isMissing(value) {\n        if (!value) {\n            return false;\n        }\n        return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n        return this.isMissing(setMinutes(this.max, this.lastMinute(value)));\n    }\n    divideByStep(value) {\n        return distanceFromMin$1(value.getMinutes(), this.min.getMinutes()) / this.step;\n    }\n    lastMinute(value) {\n        return this.range(value)[1];\n    }\n    range(value) {\n        const [min, max] = this.limitRange(this.min, this.max, value);\n        return [min.getMinutes(), max.getMinutes()];\n    }\n}\nMinutesService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nMinutesService.ctorParameters = () => [\n    { type: IntlService }\n];\n\nconst SECONDS_IN_HOUR = 60;\nconst clampToRange$2 = (rangeValue) => (value) => value % rangeValue;\nconst clamp$2 = clampToRange$2(SECONDS_IN_HOUR);\nconst stepper$2 = (start, step) => (idx) => clamp$2(start + (idx * step));\nconst distanceFromMin$2 = (value, min) => clamp$2(SECONDS_IN_HOUR + value - min);\nconst limit$2 = (borderValue) => (barrier, value) => {\n    const useBarrier = !value || barrier.getHours() === value.getHours() && barrier.getMinutes() === value.getMinutes();\n    return useBarrier ? barrier : setSeconds(barrier, borderValue);\n};\nconst limitDown$2 = limit$2(0);\nconst limitUp$2 = limit$2(SECONDS_IN_HOUR - 1);\n/**\n * @hidden\n */\nclass SecondsService {\n    constructor(intl) {\n        this.intl = intl;\n        this.insertUndividedMax = false;\n    }\n    apply(value, candidate) {\n        return setSeconds(value, candidate.getSeconds());\n    }\n    configure(settings) {\n        const { insertUndividedMax = this.insertUndividedMax, min = this.min, max = this.max, part, step = this.step } = settings;\n        this.insertUndividedMax = insertUndividedMax;\n        this.toListItem = (minute) => {\n            const date = setSeconds(MIDNIGHT_DATE, minute);\n            return {\n                text: this.intl.formatDate(date, part.pattern),\n                value: date\n            };\n        };\n        this.min = min;\n        this.max = max;\n        this.step = step;\n    }\n    data(selectedValue) {\n        const [min] = this.range(selectedValue);\n        const getSecond = stepper$2(min, this.step);\n        const convertToItem = (idx) => (this.toListItem(getSecond(idx)));\n        const data = range(0, this.countFromMin(selectedValue)).map(convertToItem);\n        this.addLast(data);\n        this.addMissing(data, selectedValue);\n        return data;\n    }\n    isRangeChanged(min, max) {\n        return !isEqual(this.min, min) || !isEqual(this.max, max);\n    }\n    limitRange(min, max, value) {\n        return [limitDown$2(min, value), limitUp$2(max, value)];\n    }\n    total(value) {\n        const last$$1 = this.insertUndividedMax && this.isLastMissing(value) ? 1 : 0;\n        const missing = this.isMissing(value) ? 1 : 0;\n        return this.countFromMin(value) + missing + last$$1;\n    }\n    selectedIndex(value) {\n        return Math.ceil(this.divideByStep(value));\n    }\n    valueInList(value) {\n        if (!value) {\n            return true;\n        }\n        const matchMax = this.insertUndividedMax && this.lastSecond(value) === value.getSeconds();\n        return matchMax || !this.isMissing(value);\n    }\n    divideByStep(value) {\n        return distanceFromMin$2(value.getSeconds(), this.min.getSeconds()) / this.step;\n    }\n    addLast(data, value) {\n        if (this.insertUndividedMax && this.isLastMissing(value)) {\n            data.push(this.toListItem(this.lastSecond(value)));\n        }\n        return data;\n    }\n    addMissing(data, value) {\n        if (this.valueInList(value)) {\n            return data;\n        }\n        const missingItem = this.toListItem(value.getSeconds());\n        data.splice(this.selectedIndex(value), 0, missingItem);\n        return data;\n    }\n    countFromMin(value) {\n        const [min, max] = this.range(value);\n        return Math.floor(distanceFromMin$2(max, min) / this.step) + 1; /* include min */\n    }\n    isMissing(value) {\n        if (!value) {\n            return false;\n        }\n        return this.selectedIndex(value) !== this.divideByStep(value);\n    }\n    isLastMissing(value) {\n        return this.isMissing(setSeconds(this.max, this.lastSecond(value)));\n    }\n    lastSecond(value) {\n        return this.range(value)[1];\n    }\n    range(value) {\n        const [min, max] = this.limitRange(this.min, this.max, value);\n        return [min.getSeconds(), max.getSeconds()];\n    }\n}\nSecondsService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSecondsService.ctorParameters = () => [\n    { type: IntlService }\n];\n\nconst setHours$1 = (date, hours) => {\n    const clone = cloneDate(date);\n    clone.setHours(hours);\n    return clone;\n};\nconst isAM = (value) => value !== null && value < 12;\nconst isPM = (value) => value !== null && (!value || value > 11);\nconst inRange = (value, min, max) => ((!min && !max) || (value >= min && value <= max));\nconst inReverseRange = (value, min, max) => ((!min && !max) || value >= min || value <= max);\n/**\n * @hidden\n */\nclass DayPeriodService {\n    constructor(intl) {\n        this.intl = intl;\n    }\n    /**\n     * @hidden\n     */\n    apply(value, candidate) {\n        const hour = value.getHours();\n        const hourAM = isAM(hour);\n        const candidateAM = isAM(candidate.getHours());\n        if ((hourAM && candidateAM) || (!hourAM && !candidateAM)) {\n            return value;\n        }\n        const [min, max = 24] = this.normalizedRange();\n        const result = hour + (candidateAM ? -12 : 12);\n        return setHours$1(value, Math.min(Math.max(min, result), (max || 24)));\n    }\n    /**\n     * @hidden\n     */\n    configure(settings) {\n        const { min = this.min, max = this.max, part = this.part } = settings;\n        this.min = min;\n        this.max = max;\n        this.part = part;\n    }\n    /**\n     * @hidden\n     */\n    data(_) {\n        const names = this.part.names;\n        if (!names) {\n            return [];\n        }\n        const data = [];\n        const [min, max] = this.normalizedRange();\n        const dayPeriod = this.intl.dateFormatNames(names);\n        if (isAM(min)) {\n            data.push({ text: dayPeriod.am, value: setHours$1(this.min, min) });\n        }\n        if (isPM(max)) {\n            data.push({ text: dayPeriod.pm, value: setHours$1(this.min, Math.max(12, max)) });\n        }\n        return this.min.getHours() !== min ? data.reverse() : data;\n    }\n    /**\n     * @hidden\n     */\n    isRangeChanged(_, __) {\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    limitRange(min, max, _) {\n        return [min, max];\n    }\n    /**\n     * @hidden\n     */\n    total() {\n        const [min, max] = this.normalizedRange();\n        if (!min && !max) {\n            return 2;\n        }\n        if (min > 11 || max < 12) {\n            return 1;\n        }\n        return 2;\n    }\n    /**\n     * @hidden\n     */\n    selectedIndex(value) {\n        if (!this.valueInList(value)) {\n            return -1;\n        }\n        const index = Math.floor(value.getHours() / 12);\n        return this.min.getHours() === this.normalizedRange()[0] ? index : (index === 0 ? 1 : 0);\n    }\n    /**\n     * @hidden\n     */\n    valueInList(value) {\n        const reverse = this.min.getHours() !== this.normalizedRange()[0];\n        const isInRange = reverse ? inReverseRange : inRange;\n        return isInRange(value.getHours(), this.min.getHours(), this.max.getHours());\n    }\n    normalizedRange() {\n        const minHour = this.min.getHours();\n        const maxHour = this.max.getHours();\n        return [\n            Math.min(minHour, maxHour),\n            Math.max(minHour, maxHour)\n        ];\n    }\n}\nDayPeriodService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nDayPeriodService.ctorParameters = () => [\n    { type: IntlService }\n];\n\n/* tslint:disable:component-selector-name  component-selector-type */\nconst SNAP_THRESHOLD = 0.05; //% of the item height\nconst SCROLL_THRESHOLD = 2; //< 2px threshold\nconst nil = () => (null);\nconst getters = {\n    35: (data, _) => data[data.length - 1],\n    36: (data, _) => data[0],\n    38: (data, index) => data[index - 1],\n    40: (data, index) => data[index + 1]\n};\nconst services$1 = {\n    [TIME_PART.dayperiod]: DayPeriodService,\n    [TIME_PART.hour]: HoursService,\n    [TIME_PART.minute]: MinutesService,\n    [TIME_PART.second]: SecondsService\n};\n/**\n * @hidden\n */\nclass TimeListComponent {\n    constructor(element, injector, dom, renderer, zone) {\n        this.element = element;\n        this.injector = injector;\n        this.dom = dom;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.min = cloneDate(MIDNIGHT_DATE);\n        this.max = cloneDate(MAX_TIME);\n        this.step = 1;\n        this.disabled = false;\n        this.valueChange = new EventEmitter();\n        this.componentClass = true;\n        this.animateToIndex = true;\n        this.isActive = false;\n        this.skip = 0;\n        this.total = 60;\n        this.data = [];\n        this.indexToScroll = -1;\n        this.domEvents = [];\n    }\n    get tabIndex() {\n        return this.disabled ? undefined : 0;\n    }\n    ngOnChanges(changes) {\n        if (changes.part) {\n            this.service = this.injector.get(services$1[this.part.type]);\n            this.service.configure(this.serviceSettings());\n        }\n        const value = this.value;\n        const valueChanges = changes.value || {};\n        const [min, max] = this.service.limitRange(this.min, this.max, value);\n        if (this.service.isRangeChanged(min, max) || changes.min || changes.max || changes.step) {\n            this.data = [];\n            this.service.configure(this.serviceSettings({ min, max }));\n        }\n        // Skip the rendering of the list whenever possible\n        if (!this.data.length || this.hasMissingValue(valueChanges)) {\n            this.animateToIndex = false;\n            this.data = this.service.data(value);\n        }\n        this.animateToIndex = this.animateToIndex && this.textHasChanged(valueChanges);\n        this.total = this.service.total(value);\n        this.indexToScroll = this.selectedIndex(value);\n    }\n    ngOnInit() {\n        this.animateToIndex = true;\n        this.dom.ensureHeights();\n        this.itemHeight = this.dom.itemHeight;\n        this.listHeight = this.dom.timeListHeight;\n        this.topOffset = (this.listHeight - this.itemHeight) / 2;\n        this.bottomOffset = this.listHeight - this.itemHeight;\n        this.topThreshold = this.itemHeight * SNAP_THRESHOLD;\n        this.bottomThreshold = this.itemHeight * (1 - SNAP_THRESHOLD);\n        const translate = `translateY(${this.topOffset}px)`;\n        this.style = { transform: translate, '-ms-transform': translate };\n        if (this.element) {\n            this.zone.runOutsideAngular(() => {\n                this.bindEvents();\n            });\n        }\n    }\n    ngOnDestroy() {\n        this.scrollSubscription.unsubscribe();\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    ngAfterViewInit() {\n        this.scrollOnce((index) => this.virtualization.scrollToIndex(index));\n    }\n    ngAfterViewChecked() {\n        this.scrollOnce((index) => {\n            const action = this.animateToIndex ? 'animateToIndex' : 'scrollToIndex';\n            this.virtualization[action](index);\n            this.animateToIndex = true;\n        });\n    }\n    handleChange(dataItem) {\n        const candidate = this.service.apply(this.value, dataItem.value);\n        if (this.value.getTime() === candidate.getTime()) {\n            return;\n        }\n        this.indexToScroll = this.data.indexOf(dataItem);\n        this.value = candidate;\n        this.valueChange.emit(candidate);\n    }\n    handleItemClick(args) {\n        const item = closestInScope(args.target, node => node.hasAttribute('data-timelist-item-index'), this.element.nativeElement);\n        if (item) {\n            const index = item.getAttribute('data-timelist-item-index');\n            this.handleChange(this.data[index]);\n        }\n    }\n    /**\n     * Focuses the host element of the TimeList.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timelist.focus()\">Focus TimeList</button>\n     *  <kendo-timelist #timelist></kendo-timelist>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.focus();\n    }\n    /**\n     * Blurs the TimeList component.\n     */\n    blur() {\n        if (!this.element) {\n            return;\n        }\n        this.element.nativeElement.blur();\n    }\n    itemOffset(scrollTop) {\n        const valueIndex = this.selectedIndex(this.value);\n        const activeIndex = this.virtualization.activeIndex();\n        const offset = this.virtualization.itemOffset(activeIndex);\n        const distance = Math.abs(Math.ceil(scrollTop) - offset);\n        if (valueIndex === activeIndex && distance < SCROLL_THRESHOLD) {\n            return offset;\n        }\n        const scrollUp = valueIndex > activeIndex;\n        const moveToNext = scrollUp && distance >= this.bottomThreshold || !scrollUp && distance > this.topThreshold;\n        return moveToNext ? this.virtualization.itemOffset(activeIndex + 1) : offset;\n    }\n    hasMissingValue({ previousValue, currentValue }) {\n        const isPreviousMissing = previousValue && !this.service.valueInList(previousValue);\n        const isCurrentMissing = currentValue && !this.service.valueInList(currentValue);\n        return isPreviousMissing || isCurrentMissing;\n    }\n    scrollOnce(action) {\n        if (this.indexToScroll !== -1) {\n            action(this.indexToScroll);\n            this.indexToScroll = -1;\n        }\n    }\n    serviceSettings(settings) {\n        const defaults = {\n            boundRange: false,\n            insertUndividedMax: false,\n            max: this.max,\n            min: this.min,\n            part: this.part,\n            step: this.step\n        };\n        const result = Object.assign({}, defaults, settings);\n        result.boundRange = result.part.type !== 'hour';\n        return result;\n    }\n    selectedIndex(value) {\n        if (!value) {\n            return -1;\n        }\n        return this.service.selectedIndex(value);\n    }\n    textHasChanged({ previousValue, currentValue }) {\n        if (!previousValue || !currentValue) {\n            return false;\n        }\n        const oldData = this.data[this.selectedIndex(previousValue)];\n        const newData = this.data[this.selectedIndex(currentValue)];\n        return oldData && newData && oldData.text !== newData.text;\n    }\n    handleKeyDown(e) {\n        const getter = getters[e.keyCode] || nil;\n        const dataItem = getter(this.data, this.service.selectedIndex(this.value));\n        if (dataItem) {\n            this.handleChange(dataItem);\n            e.preventDefault();\n        }\n    }\n    bindEvents() {\n        this.scrollSubscription = this.virtualization\n            .scroll$()\n            .pipe(debounceTime(100), map((e) => e.target.scrollTop), map((top) => this.itemOffset(top)), map((itemOffset) => this.virtualization.itemIndex(itemOffset)))\n            .subscribe(index => {\n            this.virtualization.scrollToIndex(index);\n            this.handleChange(this.data[index]);\n        });\n        const element = this.element.nativeElement;\n        this.domEvents.push(this.renderer.listen(element, 'mouseover', () => !this.isActive && this.focus()), this.renderer.listen(element, 'click', () => this.focus()), this.renderer.listen(element, 'blur', () => this.isActive = false), this.renderer.listen(element, 'focus', () => this.isActive = true), this.renderer.listen(element, 'keydown', this.handleKeyDown.bind(this)));\n    }\n}\nTimeListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-timelist',\n                template: `\n    <kendo-virtualization\n        [skip]=\"skip\"\n        [take]=\"total\"\n        [total]=\"total\"\n        [itemHeight]=\"itemHeight\"\n        [maxScrollDifference]=\"listHeight\"\n        [topOffset]=\"topOffset\"\n        [bottomOffset]=\"bottomOffset\"\n        class=\"k-time-container\"\n        role=\"presentation\"\n        tabindex=\"-1\"\n    >\n        <ul [ngStyle]=\"style\" class=\"k-reset\"\n            [kendoEventsOutsideAngular]=\"{\n                click: handleItemClick\n            }\"\n            [scope]=\"this\"\n        >\n            <li *ngFor=\"let item of data; let index = index;\" class=\"k-item\"\n                [attr.data-timelist-item-index]=\"index\">\n                <span>{{item.text}}</span>\n            </li>\n        </ul>\n    </kendo-virtualization>\n  `\n            },] },\n];\n/** @nocollapse */\nTimeListComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Injector },\n    { type: TimePickerDOMService },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nTimeListComponent.propDecorators = {\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    part: [{ type: Input }],\n    step: [{ type: Input }],\n    disabled: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    virtualization: [{ type: ViewChild, args: [VirtualizationComponent, { static: true },] }],\n    tabIndex: [{ type: HostBinding, args: [\"attr.tabindex\",] }],\n    componentClass: [{ type: HostBinding, args: [\"class.k-time-list\",] }]\n};\n\nconst isEqualTillMinute = (value, min) => value.getHours() === min.getHours() && value.getMinutes() === min.getMinutes();\nconst isEqualTillSecond = (value, min) => isEqualTillMinute(value, min) && value.getSeconds() === min.getSeconds();\nconst isEqualTillMillisecond = (value, min) => isEqualTillSecond(value, min) && value.getMilliseconds() === min.getMilliseconds();\nconst ɵ3$6 = (value) => value.getHours(), ɵ4$2 = (_, min) => min.getHours(), ɵ5$1 = (value) => value.getMinutes(), ɵ6$1 = (value, min) => isEqualTillMinute(value, min) ? min.getMinutes() : 0, ɵ7$1 = (value) => value.getSeconds(), ɵ8$1 = (value, min) => isEqualTillSecond(value, min) ? min.getSeconds() : 0, ɵ9$1 = (value) => value.getMilliseconds(), ɵ10$1 = (value, min) => isEqualTillMillisecond(value, min) ? min.getMilliseconds() : 0;\nconst defaultGetters = [\n    {\n        type: TIME_PART.hour,\n        getter: ɵ3$6,\n        minGetter: ɵ4$2\n    }, {\n        type: TIME_PART.minute,\n        getter: ɵ5$1,\n        minGetter: ɵ6$1\n    }, {\n        type: TIME_PART.second,\n        getter: ɵ7$1,\n        minGetter: ɵ8$1\n    }, {\n        type: TIME_PART.millisecond,\n        getter: ɵ9$1,\n        minGetter: ɵ10$1\n    }\n];\nconst left = getter => (origin, _) => getter(origin);\nconst right = getter => (_, candidate) => getter(candidate);\nconst convertToObject = (parts) => parts.reduce((obj, p) => { obj[p.type] = p.type; return obj; }, {});\nconst getterByPart = parts => g => parts[g.type] ? right(g.getter) : left(g.getter);\nconst gettersFactory = getters => parts => (getters.map(getterByPart(convertToObject(parts))));\nconst snapValue = (getter, minGetter, step) => (date, min) => {\n    const value = getter(date);\n    const minValue = minGetter(date, min);\n    const rest = value - minValue;\n    if (rest < 0) {\n        return minValue;\n    }\n    const mod = rest % step;\n    return value - mod + (mod > step / 2 ? step : 0);\n};\nconst snappersFactory = (getters) => steps => (getters.map(g => {\n    const step = steps[g.type];\n    return step ? snapValue(g.getter, g.minGetter, step) : g.getter;\n}));\n/**\n * @hidden\n */\nconst generateGetters = gettersFactory(defaultGetters);\n/**\n * @hidden\n */\nconst generateSnappers = snappersFactory(defaultGetters);\n/**\n * @hidden\n */\nconst valueMerger = getters => (origin, candidate) => {\n    origin.setHours(...getters.map(g => g(origin, candidate)));\n    return origin;\n};\n/**\n * @hidden\n */\nconst snapTime = snappers => (candidate, min) => {\n    const date = cloneDate(candidate);\n    date.setHours(...snappers.map(s => s(date, min)));\n    return date;\n};\n\nconst listReducer = (state, list, idx, all) => {\n    if (state.length || !list.isActive) {\n        return state;\n    }\n    return [{\n            next: all[idx + 1] || list,\n            prev: all[idx - 1] || list\n        }];\n};\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"Left\"] = 0] = \"Left\";\n    Direction[Direction[\"Right\"] = 1] = \"Right\";\n})(Direction || (Direction = {}));\n/**\n * @hidden\n *\n * Represents the Kendo UI TimeSelector component for Angular.\n */\nclass TimeSelectorComponent {\n    constructor(localization, cdr, element, intl, dom, zone, renderer, pickerService) {\n        this.localization = localization;\n        this.cdr = cdr;\n        this.element = element;\n        this.intl = intl;\n        this.dom = dom;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.pickerService = pickerService;\n        /**\n         * @hidden\n         */\n        this.componentClass = true;\n        /**\n         * Specifies the time format used to display the time list columns.\n         */\n        this.format = 't';\n        /**\n         * Specifies the smallest valid time value.\n         */\n        this.min = cloneDate(MIN_TIME);\n        /**\n         * Specifies the biggest valid time value.\n         */\n        this.max = cloneDate(MAX_TIME);\n        /**\n         * Determines whether to display the **Cancel** button in the popup.\n         */\n        this.cancelButton = true;\n        /**\n         * Determines whether to display the **Set** button in the popup.\n         */\n        this.setButton = true;\n        /**\n         * Determines whether to display the **Now** button in the popup.\n         *\n         * > If the current time is out of range or the incremental step is greater than `1`, the **Now** button will be hidden.\n         */\n        this.nowButton = true;\n        /**\n         * Sets or gets the `disabled` property of the TimeSelector and determines whether the component is active.\n         */\n        this.disabled = false;\n        /**\n         * Specifies the value of the TimeSelector component.\n         */\n        this.value = null;\n        /**\n         * Fires each time the user selects a new value.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user cancels the selected value.\n         */\n        this.valueReject = new EventEmitter();\n        this.isActive = false;\n        this.showNowButton = true;\n        this._activeListIndex = -1;\n        this._steps = {};\n        this.domEvents = [];\n        if (this.pickerService) {\n            this.pickerService.timeSelector = this;\n        }\n    }\n    /**\n     * @hidden\n     */\n    get disabledClass() {\n        return this.disabled;\n    }\n    /**\n     * Configures the incremental steps of the TimeSelector.\n     *\n     * The available options are:\n     * - `hour: Number`&mdash;Controls the incremental step of the hour value.\n     * - `minute: Number`&mdash;Controls the incremental step of the minute value.\n     * - `second: Number`&mdash;Controls the incremental step of the second value.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-timeselector format=\"HH:mm:ss\" [steps]=\"steps\"></kendo-timeselector>\n     * `\n     * })\n     * class AppComponent {\n     *   public steps = { hour: 2, minute: 15, second: 15 };\n     * }\n     * ```\n     *\n     * > If the incremental step is greater than `1`, the **Now** button will be hidden.\n     */\n    set steps(steps) {\n        this._steps = steps || {};\n    }\n    get steps() {\n        return this._steps;\n    }\n    set current(value) {\n        this._current = timeInRange(this.snapTime(cloneDate(value || MIDNIGHT_DATE), this.min), this.min, this.max);\n        if (!NgZone.isInAngularZone()) {\n            this.cdr.detectChanges();\n        }\n    }\n    get current() {\n        return this._current;\n    }\n    get activeListIndex() {\n        return this._activeListIndex;\n    }\n    set activeListIndex(value) {\n        this._activeListIndex = value;\n        if (!this.timeListWrappers || !this.timeListWrappers.length) {\n            return;\n        }\n        this.timeListWrappers.forEach(listWrapper => {\n            this.renderer.removeClass(listWrapper.nativeElement, 'k-state-focused');\n        });\n        if (value >= 0) {\n            const listIndex = this.listIndex(value);\n            const focusedWrapper = this.timeListWrappers.toArray()[listIndex];\n            if (focusedWrapper) {\n                this.renderer.addClass(focusedWrapper.nativeElement, 'k-state-focused');\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.subscriptions = this.intl.changes.subscribe(this.intlChange.bind(this));\n        if (this.localization) {\n            this.subscriptions.add(this.localization\n                .changes\n                .subscribe(() => this.cdr.markForCheck()));\n        }\n        this.dom.calculateHeights(this.element.nativeElement);\n        this.init();\n        this.bindEvents();\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(_) {\n        this.init();\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n        if (this.pickerService) {\n            this.pickerService.timeSelector = null;\n        }\n        this.domEvents.forEach(unbindCallback => unbindCallback());\n    }\n    /**\n     * Focuses the TimeSelector component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"timeselector.focus()\">Focus time picker</button>\n     *  <kendo-timeselector #timeselector></kendo-timeselector>\n     * `\n     * })\n     * class AppComponent { }\n     * ```\n     */\n    focus() {\n        const list = this.timeLists.first;\n        if (!list) {\n            return;\n        }\n        list.focus();\n    }\n    /**\n     * Blurs the TimeSelector component.\n     */\n    blur() {\n        const list = this.timeLists.first;\n        if (!list) {\n            return;\n        }\n        list.blur();\n    }\n    /**\n     * @hidden\n     */\n    handleAccept() {\n        this.handleChange(this.mergeValue(cloneDate(this.value || getDate(getNow())), this.current));\n    }\n    /**\n     * @hidden\n     */\n    handleNow() {\n        this.current = getNow();\n        this.handleChange(this.current);\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleReject() {\n        this.current = this.value;\n        this.valueReject.emit();\n    }\n    /**\n     * @hidden\n     */\n    handleFocus(args) {\n        if (this.isActive) {\n            return;\n        }\n        this.isActive = true;\n        this.emitFocus(args);\n    }\n    /**\n     * @hidden\n     */\n    handleListFocus(args) {\n        const index = parseInt(args.target.getAttribute('data-timelist-index'), 10);\n        this.activeListIndex = index;\n        this.handleFocus(args);\n    }\n    /**\n     * @hidden\n     */\n    handleBlur(args) {\n        const currentTarget = currentFocusTarget(args);\n        if (currentTarget && this.containsElement(currentTarget)) {\n            return;\n        }\n        this.activeListIndex = -1;\n        this.isActive = false;\n        this.emitBlur(args);\n    }\n    /**\n     * @hidden\n     */\n    containsElement(element) {\n        return Boolean(closest(element, node => node === this.element.nativeElement));\n    }\n    partStep(part) {\n        return this.steps[part.type] || 1;\n    }\n    init(changes) {\n        if (!changes || hasChange(changes, 'format')) {\n            this.dateFormatParts = this.intl.splitDateFormat(this.format);\n            this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n        }\n        if (!changes || hasChange(changes, 'steps')) {\n            this.snapTime = snapTime(generateSnappers(this.steps));\n        }\n        if (!changes || hasChange(changes, 'value')) {\n            this.current = this.value;\n        }\n        this.showNowButton = !this.hasSteps() && this.nowButton && isInTimeRange(getNow(), this.min, this.max);\n    }\n    focusList(dir) {\n        if (!this.timeLists.length) {\n            return;\n        }\n        this.timeLists.reduce(listReducer, [])\n            .map(state => dir === Direction.Right ? state.next : state.prev)\n            .map(list => list && list.focus());\n    }\n    handleChange(value) {\n        this.value = value;\n        this.valueChange.emit(cloneDate(value));\n    }\n    hasActiveButton() {\n        if (!this.accept) {\n            return false;\n        }\n        return [this.accept, this.cancel, this.now].reduce((isActive, el) => isActive || this.dom.isActive(el), false);\n    }\n    hasSteps() {\n        const keys = Object.keys(this.steps);\n        return keys.length !== keys.reduce((acc, k) => acc + this.steps[k], 0);\n    }\n    intlChange() {\n        this.dateFormatParts = this.intl.splitDateFormat(this.format);\n        this.mergeValue = valueMerger(generateGetters(this.dateFormatParts));\n        this.cdr.markForCheck();\n    }\n    bindEvents() {\n        if (this.element) {\n            this.zone.runOutsideAngular(() => {\n                this.domEvents.push(this.renderer.listen(this.element.nativeElement, 'keydown', this.handleKeydown.bind(this)));\n            });\n        }\n    }\n    handleKeydown(args) {\n        const { keyCode, altKey } = args;\n        // reserve the alt + arrow key commands for the picker\n        const arrowKeyPressed = [Keys.ArrowLeft, Keys.ArrowRight].indexOf(keyCode) !== -1;\n        if (isPresent(this.pickerService) && arrowKeyPressed && altKey) {\n            return;\n        }\n        if (keyCode === Keys.Enter && !this.hasActiveButton()) {\n            this.handleAccept();\n        }\n        else if (keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight) {\n            this.focusList(keyCode === Keys.ArrowLeft ? Direction.Left : Direction.Right);\n        }\n    }\n    emitBlur(args) {\n        if (this.pickerService) {\n            this.pickerService.onBlur.emit(args);\n        }\n    }\n    emitFocus(args) {\n        if (this.pickerService) {\n            this.pickerService.onFocus.emit(args);\n        }\n    }\n    listIndex(partIndex) {\n        let listIdx = 0;\n        let partIdx = 0;\n        while (partIdx < partIndex) {\n            if (this.dateFormatParts[partIdx].type !== 'literal') {\n                listIdx++;\n            }\n            partIdx++;\n        }\n        return listIdx;\n    }\n}\nTimeSelectorComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'kendo-timeselector',\n                providers: [\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.timeselector'\n                    }\n                ],\n                selector: 'kendo-timeselector',\n                template: `\n        <ng-container kendoTimeSelectorLocalizedMessages\n            i18n-accept=\"kendo.timeselector.accept|The Accept button text in the timeselector component\"\n            accept=\"Set\"\n\n            i18n-acceptLabel=\"kendo.timeselector.acceptLabel|The label for the Accept button in the timeselector component\"\n            acceptLabel=\"Set time\"\n\n            i18n-cancel=\"kendo.timeselector.cancel|The Cancel button text in the timeselector component\"\n            cancel=\"Cancel\"\n\n            i18n-cancelLabel=\"kendo.timeselector.cancelLabel|The label for the Cancel button in the timeselector component\"\n            cancelLabel=\"Cancel changes\"\n\n            i18n-now=\"kendo.timeselector.now|The Now button text in the timeselector component\"\n            now=\"Now\"\n\n            i18n-nowLabel=\"kendo.timeselector.nowLabel|The label for the Now button in the timeselector component\"\n            nowLabel=\"Select now\"\n        >\n        </ng-container>\n        <div class=\"k-time-header\">\n            <span class=\"k-title\">\n                {{ intl.formatDate(current, format) }}\n            </span>\n            <button\n                #now\n                *ngIf=\"showNowButton\"\n                class=\"k-button k-bare k-time-now\" type=\"button\"\n                [attr.title]=\"localization.get('nowLabel')\"\n                [attr.aria-label]=\"localization.get('nowLabel')\"\n                [kendoEventsOutsideAngular]=\"{\n                    click: handleNow,\n                    focus: handleFocus,\n                    blur: handleBlur\n                }\"\n                [scope]=\"this\"\n                [disabled]=\"disabled\"\n            >{{localization.get('now')}}</button>\n        </div>\n        <div class=\"k-time-list-container\">\n            <span class=\"k-time-highlight\"></span>\n            <ng-template ngFor [ngForOf]=\"dateFormatParts\" let-part let-idx=\"index\">\n                <div\n                    #listWrapper\n                    class=\"k-time-list-wrapper\"\n                    role=\"presentation\" tabindex=\"-1\"\n                    *ngIf=\"part.type !== 'literal'\"\n                >\n                    <span class=\"k-title\">{{intl.dateFieldName(part)}}</span>\n                    <kendo-timelist\n                        [min]=\"min\"\n                        [max]=\"max\"\n                        [part]=\"part\"\n                        [step]=\"partStep(part)\"\n                        [disabled]=\"disabled\"\n                        [(value)]=\"current\"\n                        [kendoEventsOutsideAngular]=\"{\n                            focus: handleListFocus,\n                            blur: handleBlur\n                        }\"\n                        [scope]=\"this\"\n                        [attr.data-timelist-index]=\"idx\"\n                    ></kendo-timelist>\n                </div>\n                <div class=\"k-time-separator\" *ngIf=\"part.type === 'literal'\">\n                    {{part.pattern}}\n                </div>\n            </ng-template>\n        </div>\n        <div class=\"k-time-footer k-action-buttons\" *ngIf=\"setButton || cancelButton\">\n            <button\n                #cancel\n                *ngIf=\"cancelButton\"\n                class=\"k-button k-time-cancel\" type=\"button\"\n                [attr.title]=\"localization.get('cancelLabel')\"\n                [attr.aria-label]=\"localization.get('cancelLabel')\"\n                [kendoEventsOutsideAngular]=\"{\n                    click: handleReject,\n                    focus: handleFocus,\n                    blur: handleBlur\n                }\"\n                [scope]=\"this\"\n                [disabled]=\"disabled\"\n            >{{localization.get('cancel')}}</button>\n            <button\n                #accept\n                *ngIf=\"setButton\"\n                type=\"button\"\n                class=\"k-time-accept k-button k-primary\"\n                [attr.title]=\"localization.get('acceptLabel')\"\n                [attr.aria-label]=\"localization.get('acceptLabel')\"\n                [kendoEventsOutsideAngular]=\"{\n                    click: handleAccept,\n                    focus: handleFocus,\n                    blur: handleBlur\n                }\"\n                [scope]=\"this\"\n                [disabled]=\"disabled\"\n            >{{localization.get('accept')}}</button>\n        </div>\n    `\n            },] },\n];\n/** @nocollapse */\nTimeSelectorComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: IntlService },\n    { type: TimePickerDOMService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: PickerService, decorators: [{ type: Optional }] }\n];\nTimeSelectorComponent.propDecorators = {\n    accept: [{ type: ViewChild, args: ['accept',] }],\n    cancel: [{ type: ViewChild, args: ['cancel',] }],\n    now: [{ type: ViewChild, args: ['now',] }],\n    timeLists: [{ type: ViewChildren, args: [TimeListComponent,] }],\n    timeListWrappers: [{ type: ViewChildren, args: ['listWrapper',] }],\n    componentClass: [{ type: HostBinding, args: ['class.k-timeselector',] }],\n    disabledClass: [{ type: HostBinding, args: ['class.k-state-disabled',] }],\n    format: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    cancelButton: [{ type: Input }],\n    setButton: [{ type: Input }],\n    nowButton: [{ type: Input }],\n    disabled: [{ type: Input }],\n    steps: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    valueReject: [{ type: Output }]\n};\n\n/**\n * @hidden\n */\nclass TimePickerMessages extends ComponentMessages {\n}\nTimePickerMessages.propDecorators = {\n    accept: [{ type: Input }],\n    acceptLabel: [{ type: Input }],\n    cancel: [{ type: Input }],\n    cancelLabel: [{ type: Input }],\n    now: [{ type: Input }],\n    nowLabel: [{ type: Input }],\n    toggle: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass TimePickerLocalizedMessagesDirective extends TimePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nTimePickerLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: TimePickerMessages,\n                        useExisting: forwardRef(() => TimePickerLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoTimePickerLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nTimePickerLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass TimePickerCustomMessagesComponent extends TimePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nTimePickerCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: TimePickerMessages,\n                        useExisting: forwardRef(() => TimePickerCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-timepicker-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nTimePickerCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * @hidden\n */\nclass TimeSelectorLocalizedMessagesDirective extends TimePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nTimeSelectorLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: TimePickerMessages,\n                        useExisting: forwardRef(() => TimeSelectorLocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: '[kendoTimeSelectorLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nTimeSelectorLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * @hidden\n *\n * Custom component messages override default component messages.\n */\nclass TimeSelectorCustomMessagesComponent extends TimePickerMessages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nTimeSelectorCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: TimePickerMessages,\n                        useExisting: forwardRef(() => TimeSelectorCustomMessagesComponent) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: 'kendo-timeselector-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nTimeSelectorCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst COMPONENT_DIRECTIVES$2 = [\n    TimePickerLocalizedMessagesDirective,\n    TimeListComponent,\n    TimePickerCustomMessagesComponent,\n    TimePickerComponent,\n    TimeSelectorLocalizedMessagesDirective,\n    TimeSelectorCustomMessagesComponent,\n    TimeSelectorComponent\n];\nconst COMPONENT_MODULES$1 = [\n    DateInputModule,\n    IntlModule,\n    PopupModule,\n    VirtualizationModule,\n    EventsModule\n];\nconst ɵ0$n = touchEnabled;\nconst providers = [\n    TimePickerDOMService,\n    HoursService,\n    MinutesService,\n    SecondsService,\n    DayPeriodService,\n    {\n        provide: TOUCH_ENABLED,\n        useValue: ɵ0$n\n    }\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the TimePicker component.\n */\nclass TimePickerModule {\n}\nTimePickerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENT_DIRECTIVES$2],\n                exports: [COMPONENT_DIRECTIVES$2],\n                imports: [CommonModule, ...COMPONENT_MODULES$1],\n                providers: providers\n            },] },\n];\n\n/**\n * @hidden\n */\nclass Messages$1 extends ComponentMessages {\n}\nMessages$1.propDecorators = {\n    toggle: [{ type: Input }],\n    dateTab: [{ type: Input }],\n    dateTabLabel: [{ type: Input }],\n    timeTab: [{ type: Input }],\n    timeTabLabel: [{ type: Input }],\n    accept: [{ type: Input }],\n    acceptLabel: [{ type: Input }],\n    cancel: [{ type: Input }],\n    cancelLabel: [{ type: Input }],\n    today: [{ type: Input }],\n    now: [{ type: Input }],\n    nowLabel: [{ type: Input }]\n};\n\n/**\n * Custom component messages override default component messages ([see example]({% slug globalization_dateinputs %}#toc-custom-messages)).\n */\nclass DateTimePickerCustomMessagesComponent extends Messages$1 {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nDateTimePickerCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: Messages$1,\n                        useExisting: forwardRef(() => DateTimePickerCustomMessagesComponent)\n                    }\n                ],\n                selector: 'kendo-datetimepicker-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nDateTimePickerCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends Messages$1 {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: Messages$1,\n                        useExisting: forwardRef(() => LocalizedMessagesDirective)\n                    }\n                ],\n                selector: '[kendoDateTimePickerLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst COMPONENT_DIRECTIVES$3 = [\n    DateTimePickerComponent,\n    DateTimePickerCustomMessagesComponent,\n    LocalizedMessagesDirective\n];\nconst ɵ0$o = touchEnabled;\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the DateTimePicker component.\n */\nclass DateTimePickerModule {\n}\nDateTimePickerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    ...COMPONENT_DIRECTIVES$3\n                ],\n                exports: [\n                    ...COMPONENT_DIRECTIVES$3,\n                    TemplatesModule\n                ],\n                imports: [\n                    CommonModule,\n                    IntlModule,\n                    DateInputModule,\n                    CalendarModule,\n                    TimePickerModule,\n                    PopupModule,\n                    EventsModule,\n                    TemplatesModule\n                ],\n                providers: [\n                    { provide: TOUCH_ENABLED, useValue: ɵ0$o }\n                ]\n            },] },\n];\n\nconst COMPONENT_MODULES$2 = [\n    CalendarsModule,\n    DateInputModule,\n    DatePickerModule,\n    TimePickerModule,\n    DateRangeModule,\n    DateTimePickerModule\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Date Inputs components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Date Inputs module\n * import { DateInputsModule } from '@progress/kendo-angular-dateinputs';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DateInputsModule], // import the Date Inputs module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DateInputsModule {\n}\nDateInputsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: COMPONENT_MODULES$2,\n                imports: COMPONENT_MODULES$2\n            },] },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CalendarCommonModule, CALENDAR_RANGE_VALIDATORS, CALENDAR_VALUE_ACCESSOR, KENDO_INPUT_PROVIDER, KForOf, KForOfContext, HeaderComponent, HorizontalViewListComponent, CalendarMessages, MultiViewCalendarCustomMessagesComponent, Messages, RANGE_CALENDAR_RANGE_VALIDATORS, RANGE_CALENDAR_VALUE_ACCESSOR, NavigationComponent, BusViewService, CenturyViewService, DecadeViewService, DisabledDatesService, CalendarDOMService, MonthViewService, NavigationService, ScrollSyncService, WeekNamesService, YearViewService, TemplatesModule, CellTemplateDirective, CenturyCellTemplateDirective, DecadeCellTemplateDirective, HeaderTitleTemplateDirective, MonthCellTemplateDirective, NavigationItemTemplateDirective, WeekNumberCellTemplateDirective, YearCellTemplateDirective, ViewListComponent, ViewComponent, PickerService, DateInputMessages, DatePickerMessages, DateRangeInput, DateRangePopupTemplateDirective, DateTimePickerCustomMessagesComponent, LocalizedMessagesDirective, Messages$1, TimePickerMessages, TimePickerCustomMessagesComponent, TimeSelectorCustomMessagesComponent, DayPeriodService, TimePickerDOMService, HoursService, MinutesService, SecondsService, TimeListComponent, TimeSelectorComponent, TOUCH_ENABLED, ScrollerService, DEFAULT_SCROLLER_FACTORY, SCROLLER_FACTORY_TOKEN, VirtualizationComponent, VirtualizationModule, CalendarComponent, DateInputComponent, DatePickerComponent, TimePickerComponent, DateTimePickerComponent, MultiViewCalendarComponent, DateRangeComponent, DateRangePopupComponent, DateRangeEndInputDirective, DateRangeStartInputDirective, DateRangeSelectionDirective, CalendarModule, CalendarsModule, DateInputModule, DatePickerModule, DateInputsModule, TimePickerModule, DateTimePickerModule, MultiViewCalendarModule, DateRangeModule, DateRangeService, CalendarCustomMessagesComponent, DateInputCustomMessagesComponent, DatePickerCustomMessagesComponent, PreventableEvent, CalendarLocalizedMessagesDirective, MultiViewCalendarLocalizedMessagesDirective, DateInputLocalizedMessagesDirective, DatePickerLocalizedMessagesDirective, TimePickerLocalizedMessagesDirective, TimeSelectorLocalizedMessagesDirective };\n"]},"metadata":{},"sourceType":"module"}