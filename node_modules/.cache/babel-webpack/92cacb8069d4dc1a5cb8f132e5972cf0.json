{"ast":null,"code":"import _toConsumableArray from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Injectable, Component, Input, ViewChild, RendererFactory2, Directive, ComponentFactoryResolver, Injector, ViewContainerRef, ElementRef, HostBinding, ContentChild, TemplateRef, NgModule } from '@angular/core';\nimport { TourService, TourState, TourHotkeyListenerComponent, TourModule } from 'ngx-tour-core';\nimport { MatMenu, MatMenuTrigger, MatMenuModule } from '@angular/material/menu';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport withinviewport from 'withinviewport';\nimport { first } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/menu';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/card';\nimport * as ɵngcc4 from '@angular/material/button';\nimport * as ɵngcc5 from '@angular/material/icon';\n\nfunction TourStepTemplateComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n  }\n}\n\nfunction TourStepTemplateComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mat-card\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function TourStepTemplateComponent_ng_template_2_Template_mat_card_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"mat-card-title\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"mat-card-content\");\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"mat-card-actions\");\n    ɵngcc0.ɵɵelementStart(6, \"button\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function TourStepTemplateComponent_ng_template_2_Template_button_click_6_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.tourService.prev();\n    });\n    ɵngcc0.ɵɵelementStart(7, \"mat-icon\");\n    ɵngcc0.ɵɵtext(8, \"chevron_left\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(9, \"button\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function TourStepTemplateComponent_ng_template_2_Template_button_click_9_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.tourService.next();\n    });\n    ɵngcc0.ɵɵelementStart(10, \"mat-icon\");\n    ɵngcc0.ɵɵtext(11, \"chevron_right\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(12, \"button\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function TourStepTemplateComponent_ng_template_2_Template_button_click_12_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.tourService.end();\n    });\n    ɵngcc0.ɵɵtext(13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var step_r3 = ctx.step;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", step_r3 == null ? null : step_r3.title, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", step_r3 == null ? null : step_r3.content, \" \");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r2.tourService.hasPrev(step_r3));\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"disabled\", !ctx_r2.tourService.hasNext(step_r3));\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", step_r3 == null ? null : step_r3.endBtnTitle, \" \");\n  }\n}\n\nvar _c0 = function _c0(a0) {\n  return {\n    step: a0\n  };\n};\n\nvar NgxmTourService = /*#__PURE__*/function (_TourService) {\n  _inherits(NgxmTourService, _TourService);\n\n  var _super = _createSuper(NgxmTourService);\n\n  function NgxmTourService() {\n    _classCallCheck(this, NgxmTourService);\n\n    return _super.apply(this, arguments);\n  }\n\n  return NgxmTourService;\n}(TourService);\n\nNgxmTourService.ɵfac = function NgxmTourService_Factory(t) {\n  return ɵNgxmTourService_BaseFactory(t || NgxmTourService);\n};\n\nNgxmTourService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NgxmTourService,\n  factory: NgxmTourService.ɵfac\n});\nvar ɵNgxmTourService_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(NgxmTourService);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NgxmTourService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourAnchorOpenerComponent = function TourAnchorOpenerComponent() {\n  _classCallCheck(this, TourAnchorOpenerComponent);\n\n  this.menu = new MatMenu(undefined, undefined, {\n    xPosition: 'after',\n    yPosition: 'below',\n    overlapTrigger: true,\n    backdropClass: ''\n  });\n};\n\nTourAnchorOpenerComponent.ɵfac = function TourAnchorOpenerComponent_Factory(t) {\n  return new (t || TourAnchorOpenerComponent)();\n};\n\nTourAnchorOpenerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TourAnchorOpenerComponent,\n  selectors: [[\"tourAnchorOpener\"]],\n  viewQuery: function TourAnchorOpenerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMenuTrigger, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n    }\n  },\n  inputs: {\n    menu: \"menu\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[3, \"matMenuTriggerFor\"], [\"trigger\", \"matMenuTrigger\"]],\n  template: function TourAnchorOpenerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"span\", 0, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"matMenuTriggerFor\", ctx.menu);\n    }\n  },\n  directives: [ɵngcc1.MatMenuTrigger],\n  styles: [\"[_nghost-%COMP%] {\\n        display: none;\\n      }\"]\n});\nTourAnchorOpenerComponent.propDecorators = {\n  menu: [{\n    type: Input\n  }],\n  trigger: [{\n    type: ViewChild,\n    args: [MatMenuTrigger, {\n      static: false\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourAnchorOpenerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tourAnchorOpener',\n      template: \"\\n    <span [matMenuTriggerFor]=\\\"menu\\\" #trigger=\\\"matMenuTrigger\\\"></span>\\n  \",\n      styles: [\"\\n      :host {\\n        display: none;\\n      }\\n    \"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    menu: [{\n      type: Input\n    }],\n    trigger: [{\n      type: ViewChild,\n      args: [MatMenuTrigger, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TourAnchorOpenerComponent.prototype.menu;\n  /** @type {?} */\n\n  TourAnchorOpenerComponent.prototype.trigger;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourStepTemplateService = function TourStepTemplateService() {\n  _classCallCheck(this, TourStepTemplateService);\n};\n\nTourStepTemplateService.ɵfac = function TourStepTemplateService_Factory(t) {\n  return new (t || TourStepTemplateService)();\n};\n\nTourStepTemplateService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TourStepTemplateService,\n  factory: TourStepTemplateService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourStepTemplateService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  TourStepTemplateService.prototype.templateComponent;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourBackdropService = /*#__PURE__*/function () {\n  /**\n   * @param {?} rendererFactory\n   */\n  function TourBackdropService(rendererFactory) {\n    _classCallCheck(this, TourBackdropService);\n\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n  /**\n   * @param {?} targetElement\n   * @return {?}\n   */\n\n\n  _createClass(TourBackdropService, [{\n    key: \"show\",\n    value: function show(targetElement) {\n      /** @type {?} */\n      var boundingRect = targetElement.nativeElement.getBoundingClientRect();\n\n      if (!this.backdropElement) {\n        this.backdropElement = this.renderer.createElement('div');\n        this.renderer.addClass(this.backdropElement, 'ngx-tour_backdrop');\n        this.renderer.appendChild(document.body, this.backdropElement);\n      }\n\n      this.setStyles(boundingRect);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.backdropElement) {\n        this.renderer.removeChild(document.body, this.backdropElement);\n        this.backdropElement = null;\n      }\n    }\n    /**\n     * @private\n     * @param {?} boundingRect\n     * @return {?}\n     */\n\n  }, {\n    key: \"setStyles\",\n    value: function setStyles(boundingRect) {\n      /** @type {?} */\n      var styles = {\n        position: 'fixed',\n        width: boundingRect.width + 'px',\n        height: boundingRect.height + 'px',\n        top: boundingRect.top + 'px',\n        left: boundingRect.left + 'px',\n        'box-shadow': '0 0 0 9999px rgba(0, 0, 0, 0.7)',\n        'z-index': '100'\n      };\n\n      for (var _i = 0, _Object$keys = Object.keys(styles); _i < _Object$keys.length; _i++) {\n        var name = _Object$keys[_i];\n        this.renderer.setStyle(this.backdropElement, name, styles[name]);\n      }\n    }\n  }]);\n\n  return TourBackdropService;\n}();\n\nTourBackdropService.ɵfac = function TourBackdropService_Factory(t) {\n  return new (t || TourBackdropService)(ɵngcc0.ɵɵinject(RendererFactory2));\n};\n\nTourBackdropService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: TourBackdropService,\n  factory: TourBackdropService.ɵfac\n});\n/** @nocollapse */\n\nTourBackdropService.ctorParameters = function () {\n  return [{\n    type: RendererFactory2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourBackdropService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: RendererFactory2\n    }];\n  }, null);\n})();\n\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  TourBackdropService.prototype.renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourBackdropService.prototype.backdropElement;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourAnchorMatMenuDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} componentFactoryResolver\n   * @param {?} injector\n   * @param {?} viewContainer\n   * @param {?} element\n   * @param {?} tourService\n   * @param {?} tourStepTemplate\n   * @param {?} tourBackdrop\n   */\n  function TourAnchorMatMenuDirective(componentFactoryResolver, injector, viewContainer, element, tourService, tourStepTemplate, tourBackdrop) {\n    _classCallCheck(this, TourAnchorMatMenuDirective);\n\n    this.componentFactoryResolver = componentFactoryResolver;\n    this.injector = injector;\n    this.viewContainer = viewContainer;\n    this.element = element;\n    this.tourService = tourService;\n    this.tourStepTemplate = tourStepTemplate;\n    this.tourBackdrop = tourBackdrop;\n    this.opener = this.viewContainer.createComponent(this.componentFactoryResolver.resolveComponentFactory(TourAnchorOpenerComponent)).instance;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(TourAnchorMatMenuDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.tourService.register(this.tourAnchor, this);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.tourService.unregister(this.tourAnchor);\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"showTourStep\",\n    value: function showTourStep(step) {\n      var _this = this;\n\n      this.isActive = true;\n      this.tourStepTemplate.templateComponent.step = step; // Ignore step.placement\n\n      if (!step.preventScrolling) {\n        if (!withinviewport(this.element.nativeElement, {\n          sides: 'bottom'\n        })) {\n          /** @type {?} */\n          this.element.nativeElement.scrollIntoView(false);\n        } else if (!withinviewport(this.element.nativeElement, {\n          sides: 'left top right'\n        })) {\n          /** @type {?} */\n          this.element.nativeElement.scrollIntoView(true);\n        }\n      }\n\n      /** @type {?} */\n      this.opener.trigger._element = this.element;\n      this.opener.trigger.menu = this.tourStepTemplate.templateComponent.tourStep;\n      this.opener.trigger.ngAfterContentInit();\n      this.opener.trigger.openMenu();\n\n      if (step.enableBackdrop) {\n        this.tourBackdrop.show(this.element);\n      } else {\n        this.tourBackdrop.close();\n      }\n\n      step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n      step.nextBtnTitle = step.nextBtnTitle || 'Next';\n      step.endBtnTitle = step.endBtnTitle || 'End';\n\n      if (this.menuCloseSubscription) {\n        this.menuCloseSubscription.unsubscribe();\n      }\n\n      this.menuCloseSubscription = this.opener.trigger.menuClosed.pipe(first()).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (_this.tourService.getStatus() !== TourState.OFF) {\n          _this.tourService.end();\n        }\n\n        _this.tourBackdrop.close();\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hideTourStep\",\n    value: function hideTourStep() {\n      this.isActive = false;\n\n      if (this.menuCloseSubscription) {\n        this.menuCloseSubscription.unsubscribe();\n      }\n\n      this.opener.trigger.closeMenu();\n\n      if (this.tourService.getStatus() === TourState.OFF) {\n        this.tourBackdrop.close();\n      }\n    }\n  }]);\n\n  return TourAnchorMatMenuDirective;\n}();\n\nTourAnchorMatMenuDirective.ɵfac = function TourAnchorMatMenuDirective_Factory(t) {\n  return new (t || TourAnchorMatMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgxmTourService), ɵngcc0.ɵɵdirectiveInject(TourStepTemplateService), ɵngcc0.ɵɵdirectiveInject(TourBackdropService));\n};\n\nTourAnchorMatMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TourAnchorMatMenuDirective,\n  selectors: [[\"\", \"tourAnchor\", \"\"]],\n  hostVars: 2,\n  hostBindings: function TourAnchorMatMenuDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"touranchor--is-active\", ctx.isActive);\n    }\n  },\n  inputs: {\n    tourAnchor: \"tourAnchor\"\n  }\n});\n/** @nocollapse */\n\nTourAnchorMatMenuDirective.ctorParameters = function () {\n  return [{\n    type: ComponentFactoryResolver\n  }, {\n    type: Injector\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: ElementRef\n  }, {\n    type: NgxmTourService\n  }, {\n    type: TourStepTemplateService\n  }, {\n    type: TourBackdropService\n  }];\n};\n\nTourAnchorMatMenuDirective.propDecorators = {\n  tourAnchor: [{\n    type: Input\n  }],\n  isActive: [{\n    type: HostBinding,\n    args: ['class.touranchor--is-active']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourAnchorMatMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[tourAnchor]'\n    }]\n  }], function () {\n    return [{\n      type: ComponentFactoryResolver\n    }, {\n      type: Injector\n    }, {\n      type: ViewContainerRef\n    }, {\n      type: ElementRef\n    }, {\n      type: NgxmTourService\n    }, {\n      type: TourStepTemplateService\n    }, {\n      type: TourBackdropService\n    }];\n  }, {\n    isActive: [{\n      type: HostBinding,\n      args: ['class.touranchor--is-active']\n    }],\n    tourAnchor: [{\n      type: Input\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TourAnchorMatMenuDirective.prototype.tourAnchor;\n  /** @type {?} */\n\n  TourAnchorMatMenuDirective.prototype.opener;\n  /** @type {?} */\n\n  TourAnchorMatMenuDirective.prototype.menuCloseSubscription;\n  /** @type {?} */\n\n  TourAnchorMatMenuDirective.prototype.isActive;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.injector;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.viewContainer;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.element;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.tourService;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.tourStepTemplate;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourAnchorMatMenuDirective.prototype.tourBackdrop;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourStepTemplateComponent = /*#__PURE__*/function (_TourHotkeyListenerCo) {\n  _inherits(TourStepTemplateComponent, _TourHotkeyListenerCo);\n\n  var _super2 = _createSuper(TourStepTemplateComponent);\n\n  /**\n   * @param {?} tourStepTemplateService\n   * @param {?} tourService\n   */\n  function TourStepTemplateComponent(tourStepTemplateService, tourService) {\n    var _this2;\n\n    _classCallCheck(this, TourStepTemplateComponent);\n\n    _this2 = _super2.call(this, tourService);\n    _this2.tourStepTemplateService = tourStepTemplateService;\n    _this2.tourService = tourService;\n    _this2.step = {};\n    return _this2;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(TourStepTemplateComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.tourStepTemplateService.templateComponent = this;\n    }\n  }]);\n\n  return TourStepTemplateComponent;\n}(TourHotkeyListenerComponent);\n\nTourStepTemplateComponent.ɵfac = function TourStepTemplateComponent_Factory(t) {\n  return new (t || TourStepTemplateComponent)(ɵngcc0.ɵɵdirectiveInject(TourStepTemplateService), ɵngcc0.ɵɵdirectiveInject(NgxmTourService));\n};\n\nTourStepTemplateComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TourStepTemplateComponent,\n  selectors: [[\"tour-step-template\"]],\n  contentQueries: function TourStepTemplateComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepTemplateContent = _t.first);\n    }\n  },\n  viewQuery: function TourStepTemplateComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(MatMenu, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tourStep = _t.first);\n    }\n  },\n  inputs: {\n    stepTemplate: \"stepTemplate\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"tour-step\", 3, \"overlapTrigger\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"defaultTemplate\", \"\"], [3, \"click\"], [\"mat-icon-button\", \"\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function TourStepTemplateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"mat-menu\", 0);\n      ɵngcc0.ɵɵtemplate(1, TourStepTemplateComponent_ng_container_1_Template, 1, 0, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(2, TourStepTemplateComponent_ng_template_2_Template, 14, 5, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      var _r1 = ɵngcc0.ɵɵreference(3);\n\n      ɵngcc0.ɵɵproperty(\"overlapTrigger\", false);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.stepTemplate || ctx.stepTemplateContent || _r1)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.step));\n    }\n  },\n  directives: [ɵngcc1._MatMenu, ɵngcc2.NgTemplateOutlet, ɵngcc3.MatCard, ɵngcc3.MatCardTitle, ɵngcc3.MatCardContent, ɵngcc3.MatCardActions, ɵngcc4.MatButton, ɵngcc5.MatIcon],\n  styles: [\".tour-step .mat-menu-content {\\n        padding: 0 !important;\\n      }\"]\n});\n/** @nocollapse */\n\nTourStepTemplateComponent.ctorParameters = function () {\n  return [{\n    type: TourStepTemplateService\n  }, {\n    type: NgxmTourService\n  }];\n};\n\nTourStepTemplateComponent.propDecorators = {\n  tourStep: [{\n    type: ViewChild,\n    args: [MatMenu, {\n      static: false\n    }]\n  }],\n  stepTemplate: [{\n    type: Input\n  }],\n  stepTemplateContent: [{\n    type: ContentChild,\n    args: [TemplateRef, {\n      static: false\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourStepTemplateComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tour-step-template',\n      template: \"\\n    <mat-menu [overlapTrigger]=\\\"false\\\" class=\\\"tour-step\\\">\\n      <ng-container\\n        *ngTemplateOutlet=\\\"\\n          stepTemplate || stepTemplateContent || defaultTemplate;\\n          context: { step: step }\\n        \\\"\\n      ></ng-container>\\n    </mat-menu>\\n    <ng-template #defaultTemplate let-step=\\\"step\\\">\\n      <mat-card (click)=\\\"$event.stopPropagation()\\\">\\n        <mat-card-title>\\n          {{ step?.title }}\\n        </mat-card-title>\\n        <mat-card-content>\\n          {{ step?.content }}\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button\\n            mat-icon-button\\n            [disabled]=\\\"!tourService.hasPrev(step)\\\"\\n            (click)=\\\"tourService.prev()\\\"\\n          >\\n            <mat-icon>chevron_left</mat-icon>\\n          </button>\\n          <button\\n            mat-icon-button\\n            [disabled]=\\\"!tourService.hasNext(step)\\\"\\n            (click)=\\\"tourService.next()\\\"\\n          >\\n            <mat-icon>chevron_right</mat-icon>\\n          </button>\\n          <button mat-button (click)=\\\"tourService.end()\\\">\\n            {{ step?.endBtnTitle }}\\n          </button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </ng-template>\\n  \",\n      styles: [\"\\n      ::ng-deep .tour-step .mat-menu-content {\\n        padding: 0 !important;\\n      }\\n    \"]\n    }]\n  }], function () {\n    return [{\n      type: TourStepTemplateService\n    }, {\n      type: NgxmTourService\n    }];\n  }, {\n    tourStep: [{\n      type: ViewChild,\n      args: [MatMenu, {\n        static: false\n      }]\n    }],\n    stepTemplate: [{\n      type: Input\n    }],\n    stepTemplateContent: [{\n      type: ContentChild,\n      args: [TemplateRef, {\n        static: false\n      }]\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TourStepTemplateComponent.prototype.tourStep;\n  /** @type {?} */\n\n  TourStepTemplateComponent.prototype.stepTemplate;\n  /** @type {?} */\n\n  TourStepTemplateComponent.prototype.stepTemplateContent;\n  /** @type {?} */\n\n  TourStepTemplateComponent.prototype.step;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourStepTemplateComponent.prototype.tourStepTemplateService;\n  /** @type {?} */\n\n  TourStepTemplateComponent.prototype.tourService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourMatMenuModule = /*#__PURE__*/function () {\n  function TourMatMenuModule() {\n    _classCallCheck(this, TourMatMenuModule);\n  }\n\n  _createClass(TourMatMenuModule, null, [{\n    key: \"forRoot\",\n\n    /**\n     * @return {?}\n     */\n    value: function forRoot() {\n      return {\n        ngModule: TourMatMenuModule,\n        providers: [TourStepTemplateService, TourBackdropService].concat(_toConsumableArray(TourModule.forRoot().providers), [NgxmTourService])\n      };\n    }\n  }]);\n\n  return TourMatMenuModule;\n}();\n\nTourMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TourMatMenuModule\n});\nTourMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TourMatMenuModule_Factory(t) {\n    return new (t || TourMatMenuModule)();\n  },\n  imports: [[CommonModule, TourModule, MatMenuModule, MatCardModule, MatButtonModule, MatIconModule], TourModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TourMatMenuModule, {\n    declarations: function declarations() {\n      return [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, TourModule, MatMenuModule, MatCardModule, MatButtonModule, MatIconModule];\n    },\n    exports: function exports() {\n      return [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TourMatMenuModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent],\n      entryComponents: [TourAnchorOpenerComponent],\n      exports: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule],\n      imports: [CommonModule, TourModule, MatMenuModule, MatCardModule, MatButtonModule, MatIconModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { TourAnchorMatMenuDirective, TourMatMenuModule, NgxmTourService as TourService, TourStepTemplateComponent, NgxmTourService as ɵa, TourStepTemplateService as ɵb, TourBackdropService as ɵc, TourAnchorOpenerComponent as ɵd };","map":{"version":3,"sources":["ngx-tour-md-menu/lib/ngx-md-menu-tour.service.ts","ngx-tour-md-menu/lib/tour-anchor-opener.component.ts","ngx-tour-md-menu/lib/tour-step-template.service.ts","ngx-tour-md-menu/lib/tour-backdrop.service.ts","ngx-tour-md-menu/lib/tour-anchor.directive.ts","ngx-tour-md-menu/lib/tour-step-template.component.ts","ngx-tour-md-menu/lib/md-menu.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TourService } from 'ngx-tour-core';\n\nimport { INgxmStepOption } from './step-option.interface';\n\n@Injectable()\nexport class NgxmTourService extends TourService<INgxmStepOption> {}\n","import { Component, ViewChild, Input } from '@angular/core';\nimport { MatMenuTrigger, MatMenu } from '@angular/material/menu';\n\n@Component({\n  selector: 'tourAnchorOpener',\n  styles: [\n    `\n      :host {\n        display: none;\n      }\n    `\n  ],\n  template: `\n    <span [matMenuTriggerFor]=\"menu\" #trigger=\"matMenuTrigger\"></span>\n  `\n})\nexport class TourAnchorOpenerComponent {\n  @Input() menu: MatMenu = new MatMenu(undefined, undefined, {\n    xPosition: 'after',\n    yPosition: 'below',\n    overlapTrigger: true,\n    backdropClass: ''\n  });\n\n  @ViewChild(MatMenuTrigger, { static: false }) public trigger: MatMenuTrigger;\n}\n","import { Injectable } from '@angular/core';\n\nimport { TourStepTemplateComponent } from './tour-step-template.component';\n\n@Injectable()\nexport class TourStepTemplateService {\n  public templateComponent: TourStepTemplateComponent;\n}\n","import { ElementRef, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable()\nexport class TourBackdropService {\n  private renderer: Renderer2;\n  private backdropElement: HTMLElement;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  public show(targetElement: ElementRef) {\n    const boundingRect = targetElement.nativeElement.getBoundingClientRect();\n\n    if (!this.backdropElement) {\n      this.backdropElement = this.renderer.createElement('div');\n      this.renderer.addClass(this.backdropElement, 'ngx-tour_backdrop');\n      this.renderer.appendChild(document.body, this.backdropElement);\n    }\n\n    this.setStyles(boundingRect);\n  }\n\n  public close() {\n    if (this.backdropElement) {\n      this.renderer.removeChild(document.body, this.backdropElement);\n      this.backdropElement = null;\n    }\n  }\n\n  private setStyles(boundingRect: DOMRect) {\n    const styles = {\n      position: 'fixed',\n      width: boundingRect.width + 'px',\n      height: boundingRect.height + 'px',\n      top: boundingRect.top + 'px',\n      left: boundingRect.left + 'px',\n      'box-shadow': '0 0 0 9999px rgba(0, 0, 0, 0.7)',\n      'z-index': '100'\n    };\n\n    for (const name of Object.keys(styles)) {\n      this.renderer.setStyle(this.backdropElement, name, styles[name]);\n    }\n  }\n}\n","import {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  TourAnchorDirective,\n  TourState\n} from 'ngx-tour-core';\nimport { Subscription } from 'rxjs';\nimport withinviewport from 'withinviewport';\n\nimport { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { first } from 'rxjs/operators';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport { INgxmStepOption as IStepOption } from './step-option.interface';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\n@Directive({\n  selector: '[tourAnchor]'\n})\nexport class TourAnchorMatMenuDirective\n  implements OnInit, OnDestroy, TourAnchorDirective {\n  @Input() public tourAnchor: string;\n  public opener: TourAnchorOpenerComponent;\n  public menuCloseSubscription: Subscription;\n\n  @HostBinding('class.touranchor--is-active') public isActive: boolean;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    private viewContainer: ViewContainerRef,\n    private element: ElementRef,\n    private tourService: NgxmTourService,\n    private tourStepTemplate: TourStepTemplateService,\n    private tourBackdrop: TourBackdropService\n  ) {\n    this.opener = this.viewContainer.createComponent(\n      this.componentFactoryResolver.resolveComponentFactory(\n        TourAnchorOpenerComponent\n      )\n    ).instance;\n  }\n\n  public ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n\n  public ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n\n  public showTourStep(step: IStepOption): void {\n    this.isActive = true;\n    this.tourStepTemplate.templateComponent.step = step;\n    // Ignore step.placement\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(false);\n      } else if (\n        !withinviewport(this.element.nativeElement, { sides: 'left top right' })\n      ) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(true);\n      }\n    }\n    (<any>this.opener.trigger)._element = this.element;\n    this.opener.trigger.menu = this.tourStepTemplate.templateComponent.tourStep;\n    this.opener.trigger.ngAfterContentInit();\n    this.opener.trigger.openMenu();\n\n    if (step.enableBackdrop) {\n      this.tourBackdrop.show(this.element);\n    } else {\n      this.tourBackdrop.close();\n    }\n\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\n    step.endBtnTitle = step.endBtnTitle || 'End';\n\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.menuCloseSubscription = this.opener.trigger.menuClosed\n      .pipe(first())\n      .subscribe(() => {\n        if (this.tourService.getStatus() !== TourState.OFF) {\n          this.tourService.end();\n        }\n        this.tourBackdrop.close();\n      });\n  }\n\n  public hideTourStep(): void {\n    this.isActive = false;\n    if (this.menuCloseSubscription) {\n      this.menuCloseSubscription.unsubscribe();\n    }\n    this.opener.trigger.closeMenu();\n    if (this.tourService.getStatus() === TourState.OFF) {\n      this.tourBackdrop.close();\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { MatMenu } from '@angular/material/menu';\nimport { IStepOption, TourHotkeyListenerComponent } from 'ngx-tour-core';\n\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { NgxmTourService } from './ngx-md-menu-tour.service';\n\n@Component({\n  selector: 'tour-step-template',\n  styles: [\n    `\n      ::ng-deep .tour-step .mat-menu-content {\n        padding: 0 !important;\n      }\n    `\n  ],\n  template: `\n    <mat-menu [overlapTrigger]=\"false\" class=\"tour-step\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          stepTemplate || stepTemplateContent || defaultTemplate;\n          context: { step: step }\n        \"\n      ></ng-container>\n    </mat-menu>\n    <ng-template #defaultTemplate let-step=\"step\">\n      <mat-card (click)=\"$event.stopPropagation()\">\n        <mat-card-title>\n          {{ step?.title }}\n        </mat-card-title>\n        <mat-card-content>\n          {{ step?.content }}\n        </mat-card-content>\n        <mat-card-actions>\n          <button\n            mat-icon-button\n            [disabled]=\"!tourService.hasPrev(step)\"\n            (click)=\"tourService.prev()\"\n          >\n            <mat-icon>chevron_left</mat-icon>\n          </button>\n          <button\n            mat-icon-button\n            [disabled]=\"!tourService.hasNext(step)\"\n            (click)=\"tourService.next()\"\n          >\n            <mat-icon>chevron_right</mat-icon>\n          </button>\n          <button mat-button (click)=\"tourService.end()\">\n            {{ step?.endBtnTitle }}\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </ng-template>\n  `\n})\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent\n  implements AfterViewInit {\n  @ViewChild(MatMenu, { static: false }) public tourStep: MatMenu;\n\n  @Input()\n  public stepTemplate: TemplateRef<{ step: IStepOption }>;\n\n  @ContentChild(TemplateRef, { static: false })\n  public stepTemplateContent: TemplateRef<{ step: IStepOption }>;\n\n  public step: IStepOption = {};\n\n  constructor(\n    private tourStepTemplateService: TourStepTemplateService,\n    public tourService: NgxmTourService\n  ) {\n    super(tourService);\n  }\n\n  public ngAfterViewInit(): void {\n    this.tourStepTemplateService.templateComponent = this;\n  }\n}\n","import { TourAnchorOpenerComponent } from './tour-anchor-opener.component';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { TourModule } from 'ngx-tour-core';\nimport { TourAnchorMatMenuDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport {TourBackdropService} from './tour-backdrop.service';\nimport {NgxmTourService} from './ngx-md-menu-tour.service';\n\nexport { TourAnchorMatMenuDirective, TourStepTemplateComponent, NgxmTourService };\n\n@NgModule({\n  declarations: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent],\n  entryComponents: [TourAnchorOpenerComponent],\n  exports: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule],\n  imports: [CommonModule, TourModule,\n    MatMenuModule, MatCardModule, MatButtonModule, MatIconModule,\n  ],\n})\nexport class TourMatMenuModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourMatMenuModule,\n      providers: [\n        TourStepTemplateService,\n        TourBackdropService,\n        ...TourModule.forRoot().providers,\n          NgxmTourService\n      ],\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}