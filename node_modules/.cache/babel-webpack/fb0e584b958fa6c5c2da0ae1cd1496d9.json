{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport NODE_MAP from './node-map';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\nvar ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n  if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n    return text;\n  }\n\n  var element = decodeEntities._element;\n  ENTITY_REGEX.lastIndex = 0;\n  return text.replace(ENTITY_REGEX, function (match) {\n    element.innerHTML = match;\n    return element.textContent || element.innerText;\n  });\n}\n\nif (typeof document !== \"undefined\") {\n  decodeEntities._element = document.createElement(\"span\");\n}\n\nvar TextNode = /*#__PURE__*/function (_PathNode) {\n  _inherits(TextNode, _PathNode);\n\n  var _super = _createSuper(TextNode);\n\n  function TextNode() {\n    _classCallCheck(this, TextNode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TextNode, [{\n    key: \"geometryChange\",\n    value: function geometryChange() {\n      var pos = this.pos();\n      this.attr(\"x\", pos.x);\n      this.attr(\"y\", pos.y);\n      this.invalidate();\n    }\n  }, {\n    key: \"optionsChange\",\n    value: function optionsChange(e) {\n      if (e.field === \"font\") {\n        this.attr(\"style\", renderStyle(this.mapStyle()));\n        this.geometryChange();\n      } else if (e.field === \"content\") {\n        _get(_getPrototypeOf(TextNode.prototype), \"content\", this).call(this, this.srcElement.content());\n      }\n\n      _get(_getPrototypeOf(TextNode.prototype), \"optionsChange\", this).call(this, e);\n    }\n  }, {\n    key: \"mapStyle\",\n    value: function mapStyle(encode) {\n      var style = _get(_getPrototypeOf(TextNode.prototype), \"mapStyle\", this).call(this, encode);\n\n      var font = this.srcElement.options.font;\n\n      if (encode) {\n        font = htmlEncode(font);\n      }\n\n      style.push([\"font\", font], [\"white-space\", \"pre\"]);\n      return style;\n    }\n  }, {\n    key: \"pos\",\n    value: function pos() {\n      var pos = this.srcElement.position();\n      var size = this.srcElement.measure();\n      return pos.clone().setY(pos.y + size.baseline);\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var content = this.srcElement.content();\n      content = decodeEntities(content);\n      content = htmlEncode(content);\n      return normalizeText(content);\n    }\n  }, {\n    key: \"renderTextAnchor\",\n    value: function renderTextAnchor() {\n      var anchor;\n\n      if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n        anchor = 'end';\n      }\n\n      return renderAttr(\"text-anchor\", anchor);\n    }\n  }, {\n    key: \"template\",\n    value: function template() {\n      return \"<text \".concat(this.renderId(), \" \").concat(this.renderTextAnchor(), \" \").concat(this.renderStyle(), \" \").concat(this.renderOpacity()) + \"x='\".concat(this.pos().x, \"' y='\").concat(this.pos().y, \"' \").concat(this.renderStroke(), \" \").concat(this.renderTransform(), \" \").concat(this.renderDefinitions()) + \"\".concat(this.renderFill(), \">\").concat(this.renderContent(), \"</text>\");\n    }\n  }]);\n\n  return TextNode;\n}(PathNode);\n\nNODE_MAP.Text = TextNode;\nexport default TextNode;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/svg/text-node.js"],"names":["PathNode","renderStyle","renderAttr","NODE_MAP","htmlEncode","support","normalizeText","ENTITY_REGEX","decodeEntities","text","test","element","_element","lastIndex","replace","match","innerHTML","textContent","innerText","document","createElement","TextNode","pos","attr","x","y","invalidate","e","field","mapStyle","geometryChange","srcElement","content","encode","style","font","options","push","position","size","measure","clone","setY","baseline","anchor","rtl","browser","msie","edge","renderId","renderTextAnchor","renderOpacity","renderStroke","renderTransform","renderDefinitions","renderFill","renderContent","Text"],"mappings":"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","sourcesContent":["import PathNode from './path-node';\nimport renderStyle from './utils/render-style';\nimport renderAttr from './utils/render-attribute';\nimport NODE_MAP from './node-map';\nimport { htmlEncode, support } from '../common';\nimport { normalizeText } from '../text-metrics';\n\nconst ENTITY_REGEX = /&(?:[a-zA-Z]+|#\\d+);/g;\n\nfunction decodeEntities(text) {\n    if (!text || typeof text !== \"string\" || !ENTITY_REGEX.test(text)) {\n        return text;\n    }\n\n    const element = decodeEntities._element;\n    ENTITY_REGEX.lastIndex = 0;\n\n    return text.replace(ENTITY_REGEX, (match) => {\n        element.innerHTML = match;\n\n        return element.textContent || element.innerText;\n    });\n}\n\nif (typeof document !== \"undefined\") {\n    decodeEntities._element = document.createElement(\"span\");\n}\n\nclass TextNode extends PathNode {\n\n    geometryChange() {\n        const pos = this.pos();\n        this.attr(\"x\", pos.x);\n        this.attr(\"y\", pos.y);\n        this.invalidate();\n    }\n\n    optionsChange(e) {\n        if (e.field === \"font\") {\n            this.attr(\"style\", renderStyle(this.mapStyle()));\n            this.geometryChange();\n        } else if (e.field === \"content\") {\n            super.content(this.srcElement.content());\n        }\n\n        super.optionsChange(e);\n    }\n\n    mapStyle(encode) {\n        const style = super.mapStyle(encode);\n        let font = this.srcElement.options.font;\n\n        if (encode) {\n            font = htmlEncode(font);\n        }\n\n        style.push([ \"font\", font ], [ \"white-space\", \"pre\" ]);\n\n        return style;\n    }\n\n    pos() {\n        const pos = this.srcElement.position();\n        const size = this.srcElement.measure();\n        return pos.clone().setY(pos.y + size.baseline);\n    }\n\n    renderContent() {\n        let content = this.srcElement.content();\n        content = decodeEntities(content);\n        content = htmlEncode(content);\n\n        return normalizeText(content);\n    }\n\n    renderTextAnchor() {\n        let anchor;\n\n        if ((this.options || {}).rtl && !(support.browser.msie || support.browser.edge)) {\n            anchor = 'end';\n        }\n\n        return renderAttr(\"text-anchor\", anchor);\n    }\n\n    template() {\n        return `<text ${ this.renderId() } ${ this.renderTextAnchor() } ${ this.renderStyle() } ${ this.renderOpacity() }` +\n                    `x='${ this.pos().x }' y='${ this.pos().y }' ${ this.renderStroke() } ${ this.renderTransform() } ${ this.renderDefinitions() }` +\n                    `${ this.renderFill() }>${ this.renderContent() }</text>`;\n    }\n}\n\nNODE_MAP.Text = TextNode;\n\nexport default TextNode;"]},"metadata":{},"sourceType":"module"}