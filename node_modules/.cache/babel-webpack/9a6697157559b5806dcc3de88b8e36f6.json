{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport BaseNode from '../core/base-node';\nimport NODE_MAP from './node-map';\nimport renderPath from './utils/render-path';\nimport { defined } from '../util';\n\nvar Node = /*#__PURE__*/function (_BaseNode) {\n  _inherits(Node, _BaseNode);\n\n  var _super = _createSuper(Node);\n\n  function Node(srcElement) {\n    var _this;\n\n    _classCallCheck(this, Node);\n\n    _this = _super.call(this, srcElement);\n\n    if (srcElement) {\n      _this.initClip();\n    }\n\n    return _this;\n  }\n\n  _createClass(Node, [{\n    key: \"initClip\",\n    value: function initClip() {\n      var clip = this.srcElement.clip();\n\n      if (clip) {\n        this.clip = clip;\n        clip.addObserver(this);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (this.srcElement) {\n        this.srcElement.removeObserver(this);\n      }\n\n      this.clearClip();\n\n      _get(_getPrototypeOf(Node.prototype), \"clear\", this).call(this);\n    }\n  }, {\n    key: \"clearClip\",\n    value: function clearClip() {\n      if (this.clip) {\n        this.clip.removeObserver(this);\n        delete this.clip;\n      }\n    }\n  }, {\n    key: \"setClip\",\n    value: function setClip(ctx) {\n      if (this.clip) {\n        ctx.beginPath();\n        renderPath(ctx, this.clip);\n        ctx.clip();\n      }\n    }\n  }, {\n    key: \"optionsChange\",\n    value: function optionsChange(e) {\n      if (e.field === \"clip\") {\n        this.clearClip();\n        this.initClip();\n      }\n\n      _get(_getPrototypeOf(Node.prototype), \"optionsChange\", this).call(this, e);\n    }\n  }, {\n    key: \"setTransform\",\n    value: function setTransform(ctx) {\n      if (this.srcElement) {\n        var transform = this.srcElement.transform();\n\n        if (transform) {\n          ctx.transform.apply(ctx, transform.matrix().toArray(6));\n        }\n      }\n    }\n  }, {\n    key: \"loadElements\",\n    value: function loadElements(elements, pos, cors) {\n      for (var i = 0; i < elements.length; i++) {\n        var srcElement = elements[i];\n        var children = srcElement.children;\n        var childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n        if (children && children.length > 0) {\n          childNode.load(children, pos, cors);\n        }\n\n        if (defined(pos)) {\n          this.insertAt(childNode, pos);\n        } else {\n          this.append(childNode);\n        }\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(elements, pos, cors) {\n      this.loadElements(elements, pos, cors);\n      this.invalidate();\n    }\n  }, {\n    key: \"setOpacity\",\n    value: function setOpacity(ctx) {\n      if (this.srcElement) {\n        var opacity = this.srcElement.opacity();\n\n        if (defined(opacity)) {\n          this.globalAlpha(ctx, opacity);\n        }\n      }\n    }\n  }, {\n    key: \"globalAlpha\",\n    value: function globalAlpha(ctx, value) {\n      var opactity = value;\n\n      if (opactity && ctx.globalAlpha) {\n        opactity *= ctx.globalAlpha;\n      }\n\n      ctx.globalAlpha = opactity;\n    }\n  }, {\n    key: \"visible\",\n    value: function visible() {\n      var src = this.srcElement;\n      return !src || src && src.options.visible !== false;\n    }\n  }]);\n\n  return Node;\n}(BaseNode);\n\nexport default Node;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/canvas/node.js"],"names":["BaseNode","NODE_MAP","renderPath","defined","Node","srcElement","initClip","clip","addObserver","removeObserver","clearClip","ctx","beginPath","e","field","transform","apply","matrix","toArray","elements","pos","cors","i","length","children","childNode","nodeType","load","insertAt","append","loadElements","invalidate","opacity","globalAlpha","value","opactity","src","options","visible"],"mappings":"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","sourcesContent":["import BaseNode from '../core/base-node';\nimport NODE_MAP from './node-map';\nimport renderPath from './utils/render-path';\nimport { defined } from '../util';\n\nclass Node extends BaseNode {\n    constructor(srcElement) {\n        super(srcElement);\n        if (srcElement) {\n            this.initClip();\n        }\n    }\n\n    initClip() {\n        const clip = this.srcElement.clip();\n        if (clip) {\n            this.clip = clip;\n            clip.addObserver(this);\n        }\n    }\n\n    clear() {\n        if (this.srcElement) {\n            this.srcElement.removeObserver(this);\n        }\n\n        this.clearClip();\n\n        super.clear();\n    }\n\n    clearClip() {\n        if (this.clip) {\n            this.clip.removeObserver(this);\n            delete this.clip;\n        }\n    }\n\n    setClip(ctx) {\n        if (this.clip) {\n            ctx.beginPath();\n            renderPath(ctx, this.clip);\n            ctx.clip();\n        }\n    }\n\n    optionsChange(e) {\n        if (e.field === \"clip\") {\n            this.clearClip();\n            this.initClip();\n        }\n\n        super.optionsChange(e);\n    }\n\n    setTransform(ctx) {\n        if (this.srcElement) {\n            const transform = this.srcElement.transform();\n            if (transform) {\n                ctx.transform.apply(ctx, transform.matrix().toArray(6));\n            }\n        }\n    }\n\n    loadElements(elements, pos, cors) {\n        for (let i = 0; i < elements.length; i++) {\n            let srcElement = elements[i];\n            let children = srcElement.children;\n\n            let childNode = new NODE_MAP[srcElement.nodeType](srcElement, cors);\n\n            if (children && children.length > 0) {\n                childNode.load(children, pos, cors);\n            }\n\n            if (defined(pos)) {\n                this.insertAt(childNode, pos);\n            } else {\n                this.append(childNode);\n            }\n        }\n    }\n\n    load(elements, pos, cors) {\n        this.loadElements(elements, pos, cors);\n\n        this.invalidate();\n    }\n\n    setOpacity(ctx) {\n        if (this.srcElement) {\n            const opacity = this.srcElement.opacity();\n            if (defined(opacity)) {\n                this.globalAlpha(ctx, opacity);\n            }\n        }\n    }\n\n    globalAlpha(ctx, value) {\n        let opactity = value;\n        if (opactity && ctx.globalAlpha) {\n            opactity *= ctx.globalAlpha;\n        }\n        ctx.globalAlpha = opactity;\n    }\n\n    visible() {\n        const src = this.srcElement;\n        return !src || (src && src.options.visible !== false);\n    }\n}\n\nexport default Node;"]},"metadata":{},"sourceType":"module"}