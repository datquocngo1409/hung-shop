{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"(\", \")\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"tolower(\", \")\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { isString, isDate } from './utils';\n/**\n * @hidden\n * Creates a single arity function which wraps the value based on the provided predicate.\n * @example\n * ```\n * wrapIf(() => ignoreCase) `tolower(${field})`\n * //ignoreCase=true -> tolower(${field})`\n * //ignoreCase=false -> ${field}`\n * ```\n */\n\nexport var wrapIf = function wrapIf(predicate) {\n  return function (str) {\n    return predicate() ? \"\".concat(str[0]).concat(arguments.length <= 1 ? undefined : arguments[1]).concat(str[1]) : arguments.length <= 1 ? undefined : arguments[1];\n  };\n};\n/**\n * @hidden\n */\n\nexport var toUTC = function toUTC(date) {\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n};\n/**\n * @hidden\n */\n\nexport var quote = function quote(_ref) {\n  var field = _ref.field,\n      value = _ref.value,\n      ignoreCase = _ref.ignoreCase,\n      operator = _ref.operator;\n  return {\n    value: \"'\".concat(value.replace(/'/g, \"''\"), \"'\"),\n    field: field,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var encodeValue = function encodeValue(_ref2) {\n  var field = _ref2.field,\n      value = _ref2.value,\n      ignoreCase = _ref2.ignoreCase,\n      operator = _ref2.operator;\n  return {\n    value: \"\".concat(encodeURIComponent(value)),\n    field: field,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var toLower = function toLower(_ref3) {\n  var field = _ref3.field,\n      value = _ref3.value,\n      ignoreCase = _ref3.ignoreCase,\n      operator = _ref3.operator;\n  return {\n    field: wrapIf(function () {\n      return ignoreCase;\n    })(_templateObject(), field),\n    value: value,\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var normalizeField = function normalizeField(_ref4) {\n  var field = _ref4.field,\n      value = _ref4.value,\n      ignoreCase = _ref4.ignoreCase,\n      operator = _ref4.operator;\n  return {\n    value: value,\n    field: field.replace(/\\./g, \"/\"),\n    ignoreCase: ignoreCase,\n    operator: operator\n  };\n};\n/**\n * @hidden\n */\n\nexport var isStringValue = function isStringValue(x) {\n  return isString(x.value);\n};\n/**\n * @hidden\n */\n\nexport var isDateValue = function isDateValue(x) {\n  return isDate(x.value);\n};\n/**\n * @hidden\n */\n\nexport var serializeFilters = function serializeFilters(map, join) {\n  return function (filter) {\n    var brackets = wrapIf(function () {\n      return filter.filters.length > 1;\n    });\n    return brackets(_templateObject2(), filter.filters.map(map).join(join(filter)));\n  };\n};","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-data-query/dist/es2015/filter-serialization.common.js"],"names":["isString","isDate","wrapIf","predicate","str","toUTC","date","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","quote","field","value","ignoreCase","operator","replace","encodeValue","encodeURIComponent","toLower","normalizeField","isStringValue","x","isDateValue","serializeFilters","map","join","filter","brackets","filters","length"],"mappings":"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","sourcesContent":["import { isString, isDate } from './utils';\n/**\n * @hidden\n * Creates a single arity function which wraps the value based on the provided predicate.\n * @example\n * ```\n * wrapIf(() => ignoreCase) `tolower(${field})`\n * //ignoreCase=true -> tolower(${field})`\n * //ignoreCase=false -> ${field}`\n * ```\n */\nexport const wrapIf = predicate => (str, ...args) => predicate() ? `${str[0]}${args[0]}${str[1]}` : args[0];\n/**\n * @hidden\n */\nexport const toUTC = (date) => new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n/**\n * @hidden\n */\nexport const quote = ({ field, value, ignoreCase, operator }) => ({\n    value: `'${value.replace(/'/g, \"''\")}'`,\n    field,\n    ignoreCase,\n    operator\n});\n/**\n * @hidden\n */\nexport const encodeValue = ({ field, value, ignoreCase, operator }) => ({\n    value: `${encodeURIComponent(value)}`,\n    field,\n    ignoreCase,\n    operator\n});\n/**\n * @hidden\n */\nexport const toLower = ({ field, value, ignoreCase, operator }) => ({\n    field: wrapIf(() => ignoreCase) `tolower(${field})`,\n    value,\n    ignoreCase,\n    operator\n});\n/**\n * @hidden\n */\nexport const normalizeField = ({ field, value, ignoreCase, operator }) => ({\n    value,\n    field: field.replace(/\\./g, \"/\"),\n    ignoreCase,\n    operator\n});\n/**\n * @hidden\n */\nexport const isStringValue = x => isString(x.value);\n/**\n * @hidden\n */\nexport const isDateValue = x => isDate(x.value);\n/**\n * @hidden\n */\nexport const serializeFilters = (map, join) => (filter) => {\n    const brackets = wrapIf(() => filter.filters.length > 1);\n    return brackets `(${filter.filters\n        .map(map)\n        .join(join(filter))})`;\n};\n"]},"metadata":{},"sourceType":"module"}