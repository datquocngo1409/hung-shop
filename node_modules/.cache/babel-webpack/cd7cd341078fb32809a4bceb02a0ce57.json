{"ast":null,"code":"import { cloneDate } from './clone-date';\nimport { Day } from './day.enum';\n/**\n *  A function which returns the first date of the current week.\n *\n * @param date - The initial date.\n * @param weekStartDay [default: Day.Sunday] - The first day of the week.\n * @returns - The first date of the current week.\n *\n * @example\n * ```ts-no-run\n * firstDayInWeek(new Date(2016, 0, 15)); // 2016-01-10\n * firstDayInWeek(new Date(2016, 0, 15), Day.Monday); // 2016-01-11\n * ```\n */\n\nexport var firstDayInWeek = function firstDayInWeek(date) {\n  var weekStartDay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Day.Sunday;\n  var first = cloneDate(date);\n\n  while (first.getDay() !== weekStartDay) {\n    first.setDate(first.getDate() - 1);\n  }\n\n  return first;\n};","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-date-math/dist/es2015/first-day-in-week.js"],"names":["cloneDate","Day","firstDayInWeek","date","weekStartDay","Sunday","first","getDay","setDate","getDate"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA;;;;;;;;;;;;;;AAaA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAqC;AAAA,MAA9BC,YAA8B,uEAAfH,GAAG,CAACI,MAAW;AAC/D,MAAMC,KAAK,GAAGN,SAAS,CAACG,IAAD,CAAvB;;AACA,SAAOG,KAAK,CAACC,MAAN,OAAmBH,YAA1B,EAAwC;AACpCE,IAAAA,KAAK,CAACE,OAAN,CAAcF,KAAK,CAACG,OAAN,KAAkB,CAAhC;AACH;;AACD,SAAOH,KAAP;AACH,CANM","sourcesContent":["import { cloneDate } from './clone-date';\nimport { Day } from './day.enum';\n/**\n *  A function which returns the first date of the current week.\n *\n * @param date - The initial date.\n * @param weekStartDay [default: Day.Sunday] - The first day of the week.\n * @returns - The first date of the current week.\n *\n * @example\n * ```ts-no-run\n * firstDayInWeek(new Date(2016, 0, 15)); // 2016-01-10\n * firstDayInWeek(new Date(2016, 0, 15), Day.Monday); // 2016-01-11\n * ```\n */\nexport const firstDayInWeek = (date, weekStartDay = Day.Sunday) => {\n    const first = cloneDate(date);\n    while (first.getDay() !== weekStartDay) {\n        first.setDate(first.getDate() - 1);\n    }\n    return first;\n};\n"]},"metadata":{},"sourceType":"module"}