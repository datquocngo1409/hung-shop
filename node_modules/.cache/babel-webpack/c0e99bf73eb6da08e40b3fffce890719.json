{"ast":null,"code":"import _toConsumableArray from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _taggedTemplateLiteral from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\":kendo.combobox.clearTitle|The title of the clear button\\u241F069e8fae80677e3e785861123bef446b3ff41ab4\\u241F2025597431468961462:clear\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\":kendo.multiselect.noDataText|The text displayed in the popup when there are no items\\u241F3cc1323f79a5fe012960578e513f8a35b2af1e96\\u241F1450213984397806503:NO DATA FOUND\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\":kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\\u241F4fc2f70c9c8cf7b18affd6b938105996d6ac3306\\u241F8289552890585138350:NO DATA FOUND\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\":kendo.combobox.clearTitle|The title of the clear button\\u241F069e8fae80677e3e785861123bef446b3ff41ab4\\u241F2025597431468961462:clear\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\":kendo.combobox.noDataText|The text displayed in the popup when there are no items\\u241F2b6e00c74a6d9c98c03a6274d0224e9bd457ff89\\u241F7708502966028483300:NO DATA FOUND\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\":kendo.autocomplete.clearTitle|The title of the clear button\\u241F7cf49cc2d50eebd29f8d61564512383caaaac7a6\\u241F4821453594854847070:clear\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\":kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\\u241F4e9993e088a293543eb0c2801343518c115b6f20\\u241F2690656529626907484:NO DATA FOUND\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Component, Renderer2, Input, Output, ViewChild, HostBinding, Directive, TemplateRef, Injectable, ElementRef, ChangeDetectorRef, NgZone, ViewChildren, forwardRef, isDevMode, ContentChild, ViewContainerRef, InjectionToken, Optional, Inject, KeyValueDiffers, HostListener, NgModule } from '@angular/core';\nimport { isDocumentAvailable, isChanged, hasObservers, KendoInput, ResizeSensorModule, EventsModule } from '@progress/kendo-angular-common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { merge, fromEvent, Subject, Subscription, of, interval } from 'rxjs';\nimport { map, auditTime, tap, filter, partition, throttleTime, catchError, distinctUntilChanged, skipWhile, concatMap, take, takeUntil } from 'rxjs/operators';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@progress/kendo-angular-common';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/forms';\nvar _c0 = [\"input\"];\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    focus: a0,\n    blur: a1\n  };\n};\n\nvar _c2 = [\"content\"];\nvar _c3 = [\"list\"];\n\nfunction ListComponent_div_0_1_ng_template_0_Template(rf, ctx) {}\n\nvar _c4 = function _c4(a0, a1) {\n  return {\n    templateRef: a0,\n    $implicit: a1\n  };\n};\n\nfunction ListComponent_div_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_div_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r6.fixedGroupTemplate.templateRef, ctx_r6.currentGroup));\n  }\n}\n\nfunction ListComponent_div_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.currentGroup);\n  }\n}\n\nvar _c5 = function _c5(a0) {\n  return {\n    \"k-virtual-item\": a0\n  };\n};\n\nvar _c6 = function _c6(a0, a1, a2) {\n  return {\n    \"height.px\": a0,\n    \"minHeight.px\": a1,\n    \"boxSizing\": a2\n  };\n};\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_div_0_1_Template, 1, 4, undefined, 5);\n    ɵngcc0.ɵɵtemplate(2, ListComponent_div_0_ng_template_2_Template, 2, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(4, _c5, ctx_r0.virtual))(\"ngStyle\", ɵngcc0.ɵɵpureFunction3(6, _c6, ctx_r0.virtual == null ? null : ctx_r0.virtual.itemHeight, ctx_r0.virtual == null ? null : ctx_r0.virtual.itemHeight, ctx_r0.virtual ? \"border-box\" : \"inherit\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.fixedGroupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.fixedGroupTemplate);\n  }\n}\n\nfunction ListComponent_5_ng_template_0_1_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_5_ng_template_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_5_ng_template_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var dataItem_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r12.template.templateRef, dataItem_r10));\n  }\n}\n\nfunction ListComponent_5_ng_template_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var dataItem_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r13.getText(dataItem_r10));\n  }\n}\n\nvar _c7 = function _c7(a0, a1) {\n  return {\n    \"k-virtual-item\": a0,\n    \"k-state-disabled\": a1\n  };\n};\n\nfunction ListComponent_5_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_5_ng_template_0_1_Template, 1, 4, undefined, 5);\n    ɵngcc0.ɵɵtemplate(2, ListComponent_5_ng_template_0_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dataItem_r10 = ctx.$implicit;\n    var itemIndex_r11 = ctx.index;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"height\", ctx_r9.virtual == null ? null : ctx_r9.virtual.itemHeight)(\"index\", itemIndex_r11 + ctx_r9.startFrom)(\"multipleSelection\", ctx_r9.multipleSelection)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(8, _c7, ctx_r9.virtual, ctx_r9.isDisabled(itemIndex_r11)));\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r9.optionPrefix + \"-\" + ctx_r9.getValue(dataItem_r10))(\"tabIndex\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.template);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r9.template);\n  }\n}\n\nfunction ListComponent_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_5_ng_template_0_Template, 3, 11, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.data);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_1_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_6_ng_template_0_li_0_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_0_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r22.groupTemplate.templateRef, dataItem_r18.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"strong\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", dataItem_r18.value, \"\");\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 14);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_6_ng_template_0_li_0_1_Template, 1, 4, undefined, 5);\n    ɵngcc0.ɵɵtemplate(2, ListComponent_6_ng_template_0_li_0_ng_template_2_Template, 2, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c5, ctx_r20.virtual))(\"ngStyle\", ɵngcc0.ɵɵpureFunction3(9, _c6, ctx_r20.virtual == null ? null : ctx_r20.virtual.itemHeight, ctx_r20.virtual == null ? null : ctx_r20.virtual.itemHeight, ctx_r20.virtual ? \"border-box\" : \"inherit\"));\n    ɵngcc0.ɵɵattribute(\"group-index\", dataItem_r18.index)(\"id\", ctx_r20.optionPrefix + \"-\" + ctx_r20.getValue(dataItem_r18.value))(\"tabIndex\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r20.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r20.groupTemplate);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_1_ng_template_0_Template(rf, ctx) {}\n\nfunction ListComponent_6_ng_template_0_li_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_1_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r28 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r28.template.templateRef, dataItem_r18.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r29.getText(dataItem_r18.value));\n  }\n}\n\nfunction ListComponent_6_ng_template_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 11);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_6_ng_template_0_li_1_1_Template, 1, 4, undefined, 5);\n    ɵngcc0.ɵɵtemplate(2, ListComponent_6_ng_template_0_li_1_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"height\", ctx_r21.virtual == null ? null : ctx_r21.virtual.itemHeight)(\"index\", dataItem_r18.offsetIndex)(\"multipleSelection\", ctx_r21.multipleSelection)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c7, ctx_r21.virtual, ctx_r21.isDisabled(dataItem_r18.offsetIndex)));\n    ɵngcc0.ɵɵattribute(\"absolute-index\", dataItem_r18.index)(\"id\", ctx_r21.optionPrefix + \"-\" + ctx_r21.getValue(dataItem_r18.value))(\"tabIndex\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r21.template);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r21.template);\n  }\n}\n\nfunction ListComponent_6_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_6_ng_template_0_li_0_Template, 3, 13, \"li\", 12);\n    ɵngcc0.ɵɵtemplate(1, ListComponent_6_ng_template_0_li_1_Template, 3, 12, \"li\", 13);\n  }\n\n  if (rf & 2) {\n    var dataItem_r18 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", dataItem_r18.header && dataItem_r18.index > 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !dataItem_r18.header);\n  }\n}\n\nfunction ListComponent_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ListComponent_6_ng_template_0_Template, 2, 2, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r4.data);\n  }\n}\n\nfunction ListComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r5.scrollHeight, \"px\");\n  }\n}\n\nvar _c8 = function _c8(a0, a1) {\n  return {\n    \"k-virtual-content\": a0,\n    \"k-list-scroller\": a1\n  };\n};\n\nvar _c9 = function _c9(a0) {\n  return {\n    \"k-virtual-list\": a0\n  };\n};\n\nvar _c10 = [\"container\"];\nvar _c11 = [\"popupTemplate\"];\nvar _c12 = [\"optionsList\"];\n\nfunction AutoCompleteComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoCompleteComponent_span_4_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    })(\"mousedown\", function AutoCompleteComponent_span_4_Template_span_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r1.clearTitle);\n  }\n}\n\nfunction AutoCompleteComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 10);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_6_0_ng_template_0_Template(rf, ctx) {}\n\nvar _c17 = function _c17(a0) {\n  return {\n    templateRef: a0\n  };\n};\n\nfunction AutoCompleteComponent_ng_template_6_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_6_0_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_6_div_3_ng_template_1_Template(rf, ctx) {}\n\nfunction AutoCompleteComponent_ng_template_6_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.noDataText);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_6_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(1, AutoCompleteComponent_ng_template_6_div_3_ng_template_1_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵtemplate(2, AutoCompleteComponent_ng_template_6_div_3_ng_template_2_Template, 2, 1, \"ng-template\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.noDataTemplate)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(3, _c17, ctx_r12.noDataTemplate == null ? null : ctx_r12.noDataTemplate.templateRef));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.noDataTemplate);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_6_4_ng_template_0_Template(rf, ctx) {}\n\nfunction AutoCompleteComponent_ng_template_6_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_6_4_ng_template_0_Template, 0, 0, \"ng-template\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r13.footerTemplate.templateRef));\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, AutoCompleteComponent_ng_template_6_0_Template, 1, 3, undefined, 11);\n    ɵngcc0.ɵɵelementStart(1, \"kendo-list\", 12, 13);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function AutoCompleteComponent_ng_template_6_Template_kendo_list_pageChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.pageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, AutoCompleteComponent_ng_template_6_div_3_Template, 3, 5, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(4, AutoCompleteComponent_ng_template_6_4_Template, 1, 3, undefined, 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.valueField)(\"valueField\", ctx_r4.valueField)(\"template\", ctx_r4.template)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction AutoCompleteComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 18);\n    ɵngcc0.ɵɵlistener(\"resize\", function AutoCompleteComponent_ng_template_8_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onResize();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c18 = [\"wrapper\"];\n\nfunction ComboBoxComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function ComboBoxComponent_span_6_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.clearValue($event);\n    })(\"mousedown\", function ComboBoxComponent_span_6_Template_span_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      return $event.preventDefault();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r2.clearTitle);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_0_ng_template_0_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_9_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ComboBoxComponent_ng_template_9_0_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_div_3_ng_template_1_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_9_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.noDataText);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, ComboBoxComponent_ng_template_9_div_3_ng_template_1_Template, 0, 0, \"ng-template\", 19);\n    ɵngcc0.ɵɵtemplate(2, ComboBoxComponent_ng_template_9_div_3_ng_template_2_Template, 2, 1, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r12.noDataTemplate)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(3, _c17, ctx_r12.noDataTemplate ? ctx_r12.noDataTemplate.templateRef : undefined));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r12.noDataTemplate);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_4_ng_template_0_Template(rf, ctx) {}\n\nfunction ComboBoxComponent_ng_template_9_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ComboBoxComponent_ng_template_9_4_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r13.footerTemplate.templateRef));\n  }\n}\n\nfunction ComboBoxComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, ComboBoxComponent_ng_template_9_0_Template, 1, 3, undefined, 13);\n    ɵngcc0.ɵɵelementStart(1, \"kendo-list\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function ComboBoxComponent_ng_template_9_Template_kendo_list_pageChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext();\n      return ctx_r18.pageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, ComboBoxComponent_ng_template_9_div_3_Template, 3, 5, \"div\", 16);\n    ɵngcc0.ɵɵtemplate(4, ComboBoxComponent_ng_template_9_4_Template, 1, 3, undefined, 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"valueField\", ctx_r4.valueField)(\"template\", ctx_r4.template)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction ComboBoxComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 20);\n    ɵngcc0.ɵɵlistener(\"resize\", function ComboBoxComponent_ng_template_11_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r21);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.onResize();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c23 = function _c23(a0, a1) {\n  return {\n    \"k-state-default\": a0,\n    \"k-state-disabled\": a1\n  };\n};\n\nfunction DropDownListComponent_5_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DropDownListComponent_5_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r1.valueTemplate.templateRef, ctx_r1.dataItem));\n  }\n}\n\nfunction DropDownListComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.getText());\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r16 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 15);\n    ɵngcc0.ɵɵlistener(\"click\", function DropDownListComponent_ng_template_9_ng_template_0_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      return $event.stopImmediatePropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"input\", 16);\n    ɵngcc0.ɵɵlistener(\"ngModelChange\", function DropDownListComponent_ng_template_9_ng_template_0_Template_input_ngModelChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r17.filterText = $event;\n    })(\"keydown\", function DropDownListComponent_ng_template_9_ng_template_0_Template_input_keydown_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r18.keydown($event);\n    })(\"input\", function DropDownListComponent_ng_template_9_ng_template_0_Template_input_input_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r19.handleFilter($event);\n    })(\"focus\", function DropDownListComponent_ng_template_9_ng_template_0_Template_input_focus_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r20.onFilterFocus();\n    })(\"blur\", function DropDownListComponent_ng_template_9_ng_template_0_Template_input_blur_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r16);\n      var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r21.blurFilterInput();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(2, \"span\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"filterInput\", ctx_r8.isFocused && !ctx_r8.touchEnabled)(\"dir\", ctx_r8.direction)(\"ngModel\", ctx_r8.filterText);\n    ɵngcc0.ɵɵattribute(\"aria-owns\", ctx_r8.ariaOwns)(\"aria-activedescendant\", ctx_r8.ariaActivedescendant)(\"aria-label\", ctx_r8.noDataLabel);\n  }\n}\n\nvar _c26 = function _c26(a0) {\n  return {\n    \"k-state-disabled\": a0\n  };\n};\n\nfunction DropDownListComponent_ng_template_9_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c26, ctx_r9.isDisabledDefaultItem))(\"index\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r9.getDefaultItemText(), \" \");\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_ng_template_2_ng_template_1_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_9_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(1, DropDownListComponent_ng_template_9_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c26, ctx_r10.isDisabledDefaultItem))(\"index\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(5, _c4, ctx_r10.itemTemplate.templateRef, ctx_r10.defaultItem));\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_3_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_9_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DropDownListComponent_ng_template_9_3_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r11.headerTemplate.templateRef));\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_div_6_ng_template_1_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_9_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r25 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r25.noDataText);\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵtemplate(1, DropDownListComponent_ng_template_9_div_6_ng_template_1_Template, 0, 0, \"ng-template\", 20);\n    ɵngcc0.ɵɵtemplate(2, DropDownListComponent_ng_template_9_div_6_ng_template_2_Template, 2, 1, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.noDataTemplate)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(3, _c17, ctx_r13.noDataTemplate ? ctx_r13.noDataTemplate.templateRef : undefined));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.noDataTemplate);\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_7_ng_template_0_Template(rf, ctx) {}\n\nfunction DropDownListComponent_ng_template_9_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, DropDownListComponent_ng_template_9_7_ng_template_0_Template, 0, 0, \"ng-template\", 11);\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r14.footerTemplate.templateRef));\n  }\n}\n\nfunction DropDownListComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r28 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, DropDownListComponent_ng_template_9_ng_template_0_Template, 3, 6, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(1, DropDownListComponent_ng_template_9_ng_template_1_Template, 2, 5, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(2, DropDownListComponent_ng_template_9_ng_template_2_Template, 2, 8, \"ng-template\", 6);\n    ɵngcc0.ɵɵtemplate(3, DropDownListComponent_ng_template_9_3_Template, 1, 3, undefined, 5);\n    ɵngcc0.ɵɵelementStart(4, \"kendo-list\", 12, 13);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function DropDownListComponent_ng_template_9_Template_kendo_list_pageChange_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r28);\n      var ctx_r27 = ɵngcc0.ɵɵnextContext();\n      return ctx_r27.pageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(6, DropDownListComponent_ng_template_9_div_6_Template, 3, 5, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(7, DropDownListComponent_ng_template_9_7_Template, 1, 3, undefined, 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.filterable);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.defaultItem && !ctx_r4.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.defaultItem && ctx_r4.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r4.listBoxId)(\"optionPrefix\", ctx_r4.optionPrefix)(\"data\", ctx_r4.data)(\"textField\", ctx_r4.textField)(\"valueField\", ctx_r4.valueField)(\"template\", ctx_r4.itemTemplate)(\"groupTemplate\", ctx_r4.groupTemplate)(\"fixedGroupTemplate\", ctx_r4.fixedGroupTemplate)(\"height\", ctx_r4.listHeight)(\"show\", ctx_r4.isOpen)(\"virtual\", ctx_r4.virtual);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.data.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.footerTemplate);\n  }\n}\n\nfunction DropDownListComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r30 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 21);\n    ɵngcc0.ɵɵlistener(\"resize\", function DropDownListComponent_ng_template_11_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r30);\n      var ctx_r29 = ɵngcc0.ɵɵnextContext();\n      return ctx_r29.onResize();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c27 = function _c27(a1, a2) {\n  return {\n    \"k-dropdown-wrap\": true,\n    \"k-state-default\": a1,\n    \"k-state-disabled\": a2\n  };\n};\n\nfunction MultiSelectComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 12);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function MultiSelectComponent_span_7_Template_span_mousedown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.clearAll($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r2.clearTitle);\n  }\n}\n\nfunction MultiSelectComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 13);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_0_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_9_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MultiSelectComponent_ng_template_9_0_ng_template_0_Template, 0, 0, \"ng-template\", 19);\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r10.headerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_div_1_2_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_9_div_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MultiSelectComponent_ng_template_9_div_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 19);\n  }\n\n  if (rf & 2) {\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r16.customItemTemplate.templateRef, ctx_r16.text));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_div_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r18.text);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 21);\n    ɵngcc0.ɵɵtemplate(2, MultiSelectComponent_ng_template_9_div_1_2_Template, 1, 4, undefined, 22);\n    ɵngcc0.ɵɵtemplate(3, MultiSelectComponent_ng_template_9_div_1_ng_template_3_Template, 1, 1, \"ng-template\", null, 23, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelement(5, \"span\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var _r17 = ɵngcc0.ɵɵreference(4);\n\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"multipleSelection\", true)(\"index\", -1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r11.customItemTemplate)(\"ngIfElse\", _r17);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_div_4_ng_template_1_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_9_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r21.noDataText);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵtemplate(1, MultiSelectComponent_ng_template_9_div_4_ng_template_1_Template, 0, 0, \"ng-template\", 26);\n    ɵngcc0.ɵɵtemplate(2, MultiSelectComponent_ng_template_9_div_4_ng_template_2_Template, 2, 1, \"ng-template\", 10);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.noDataTemplate)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(3, _c17, ctx_r13.noDataTemplate ? ctx_r13.noDataTemplate.templateRef : undefined));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.noDataTemplate);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_5_ng_template_0_Template(rf, ctx) {}\n\nfunction MultiSelectComponent_ng_template_9_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MultiSelectComponent_ng_template_9_5_ng_template_0_Template, 0, 0, \"ng-template\", 19);\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction1(1, _c17, ctx_r14.footerTemplate.templateRef));\n  }\n}\n\nfunction MultiSelectComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r24 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, MultiSelectComponent_ng_template_9_0_Template, 1, 3, undefined, 14);\n    ɵngcc0.ɵɵtemplate(1, MultiSelectComponent_ng_template_9_div_1_Template, 6, 4, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"kendo-list\", 16, 17);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function MultiSelectComponent_ng_template_9_Template_kendo_list_pageChange_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r24);\n      var ctx_r23 = ɵngcc0.ɵɵnextContext();\n      return ctx_r23.pageChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, MultiSelectComponent_ng_template_9_div_4_Template, 3, 5, \"div\", 18);\n    ɵngcc0.ɵɵtemplate(5, MultiSelectComponent_ng_template_9_5_Template, 1, 3, undefined, 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.headerTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.allowCustom && ctx_r5.text);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r5.listBoxId)(\"optionPrefix\", ctx_r5.optionPrefix)(\"data\", ctx_r5.data)(\"textField\", ctx_r5.textField)(\"valueField\", ctx_r5.valueField)(\"height\", ctx_r5.listHeight)(\"template\", ctx_r5.template)(\"groupTemplate\", ctx_r5.groupTemplate)(\"fixedGroupTemplate\", ctx_r5.fixedGroupTemplate)(\"show\", ctx_r5.isOpen)(\"multipleSelection\", true)(\"virtual\", ctx_r5.virtual);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.data.length === 0);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.footerTemplate);\n  }\n}\n\nfunction MultiSelectComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r26 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-resize-sensor\", 27);\n    ɵngcc0.ɵɵlistener(\"resize\", function MultiSelectComponent_ng_template_11_Template_kendo_resize_sensor_resize_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r26);\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.onResize();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TagListComponent_li_1_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_li_1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TagListComponent_li_1_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_li_1_ng_template_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TagListComponent_li_1_ng_template_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    var tag_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r9.groupTemplate.templateRef, tag_r1));\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var tag_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵtextInterpolate2(\"\", tag_r1.length, \" \", tag_r1.length === 1 ? \"item\" : \"items\", \" selected\");\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, TagListComponent_li_1_ng_template_2_1_Template, 1, 4, undefined, 8);\n    ɵngcc0.ɵɵtemplate(2, TagListComponent_li_1_ng_template_2_ng_template_2_Template, 1, 2, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.groupTemplate);\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_4_1_ng_template_0_Template(rf, ctx) {}\n\nfunction TagListComponent_li_1_ng_template_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TagListComponent_li_1_ng_template_4_1_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n\n  if (rf & 2) {\n    var tag_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction2(1, _c4, ctx_r14.template.templateRef, tag_r1));\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var tag_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵtextInterpolate(ctx_r15.tagProp(tag_r1, ctx_r15.textField));\n  }\n}\n\nfunction TagListComponent_li_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtemplate(1, TagListComponent_li_1_ng_template_4_1_Template, 1, 4, undefined, 8);\n    ɵngcc0.ɵɵtemplate(2, TagListComponent_li_1_ng_template_4_ng_template_2_Template, 1, 1, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.template);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.template);\n  }\n}\n\nvar _c32 = function _c32(a0) {\n  return {\n    \"k-state-focused\": a0\n  };\n};\n\nfunction TagListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\", 2);\n    ɵngcc0.ɵɵtemplate(1, TagListComponent_li_1_1_Template, 1, 0, undefined, 3);\n    ɵngcc0.ɵɵtemplate(2, TagListComponent_li_1_ng_template_2_Template, 3, 2, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(4, TagListComponent_li_1_ng_template_4_Template, 3, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementStart(6, \"span\", 6);\n    ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function TagListComponent_li_1_Template_span_mousedown_7_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var tag_r1 = ctx.$implicit;\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.deleteTag($event, tag_r1);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var tag_r1 = ctx.$implicit;\n    var i_r2 = ctx.index;\n\n    var _r4 = ɵngcc0.ɵɵreference(3);\n\n    var _r6 = ɵngcc0.ɵɵreference(5);\n\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c32, i_r2 === ctx_r0.focused));\n    ɵngcc0.ɵɵattribute(\"aria-setsize\", ctx_r0.tags == null ? null : ctx_r0.tags.length)(\"id\", ctx_r0.itemId(tag_r1));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isGroupTag(tag_r1))(\"ngIfThen\", _r4)(\"ngIfElse\", _r6);\n    ɵngcc0.ɵɵadvance(5);\n    ɵngcc0.ɵɵattribute(\"aria-hidden\", i_r2 !== ctx_r0.focused);\n  }\n}\n\nexport { PopupComponent } from '@progress/kendo-angular-popup';\nimport { CommonModule } from '@angular/common';\n/**\n * @hidden\n */\n\nvar Keys;\n\n(function (Keys) {\n  Keys[Keys[\"backspace\"] = 8] = \"backspace\";\n  Keys[Keys[\"tab\"] = 9] = \"tab\";\n  Keys[Keys[\"enter\"] = 13] = \"enter\";\n  Keys[Keys[\"shift\"] = 16] = \"shift\";\n  Keys[Keys[\"ctrl\"] = 17] = \"ctrl\";\n  Keys[Keys[\"alt\"] = 18] = \"alt\";\n  Keys[Keys[\"pause/break\"] = 19] = \"pause/break\";\n  Keys[Keys[\"caps lock\"] = 20] = \"caps lock\";\n  Keys[Keys[\"esc\"] = 27] = \"esc\";\n  Keys[Keys[\"space\"] = 32] = \"space\";\n  Keys[Keys[\"page up\"] = 33] = \"page up\";\n  Keys[Keys[\"page down\"] = 34] = \"page down\";\n  Keys[Keys[\"end\"] = 35] = \"end\";\n  Keys[Keys[\"home\"] = 36] = \"home\";\n  Keys[Keys[\"left\"] = 37] = \"left\";\n  Keys[Keys[\"up\"] = 38] = \"up\";\n  Keys[Keys[\"right\"] = 39] = \"right\";\n  Keys[Keys[\"down\"] = 40] = \"down\";\n  Keys[Keys[\"insert\"] = 45] = \"insert\";\n  Keys[Keys[\"delete\"] = 46] = \"delete\";\n  Keys[Keys[\"command\"] = 91] = \"command\";\n  Keys[Keys[\"left command\"] = 91] = \"left command\";\n  Keys[Keys[\"right command\"] = 93] = \"right command\";\n  Keys[Keys[\"numpad *\"] = 106] = \"numpad *\";\n  Keys[Keys[\"numpad +\"] = 107] = \"numpad +\";\n  Keys[Keys[\"numpad -\"] = 109] = \"numpad -\";\n  Keys[Keys[\"numpad .\"] = 110] = \"numpad .\";\n  Keys[Keys[\"numpad /\"] = 111] = \"numpad /\";\n  Keys[Keys[\"num lock\"] = 144] = \"num lock\";\n  Keys[Keys[\"scroll lock\"] = 145] = \"scroll lock\";\n  Keys[Keys[\"my computer\"] = 182] = \"my computer\";\n  Keys[Keys[\"my calculator\"] = 183] = \"my calculator\";\n  Keys[Keys[\";\"] = 186] = \";\";\n  Keys[Keys[\"=\"] = 187] = \"=\";\n  Keys[Keys[\",\"] = 188] = \",\";\n  Keys[Keys[\"-\"] = 189] = \"-\";\n  Keys[Keys[\".\"] = 190] = \".\";\n  Keys[Keys[\"/\"] = 191] = \"/\";\n  Keys[Keys[\"`\"] = 192] = \"`\";\n  Keys[Keys[\"[\"] = 219] = \"[\";\n  Keys[Keys[\"\\\\\"] = 220] = \"\\\\\";\n  Keys[Keys[\"]\"] = 221] = \"]\";\n  Keys[Keys[\"'\"] = 222] = \"'\";\n})(Keys || (Keys = {}));\n/* tslint:disable:no-null-keyword */\n\n/* tslint:disable:no-bitwise */\n\n/* tslint:disable:align */\n\n/**\n * @hidden\n */\n\n\nvar isPresent = function isPresent(value) {\n  return value !== null && value !== undefined;\n};\n/**\n * @hidden\n */\n\n\nvar isNumber = function isNumber(value) {\n  return !isNaN(value);\n};\n/**\n * @hidden\n */\n\n\nvar guid = function guid() {\n  var id = \"\";\n  var i;\n  var random;\n\n  for (i = 0; i < 32; i++) {\n    random = Math.random() * 16 | 0;\n\n    if (i === 8 || i === 12 || i === 16 || i === 20) {\n      id += \"-\";\n    }\n\n    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);\n  }\n\n  return id;\n};\n/**\n * @hidden\n */\n\n\nvar combineStr = function combineStr(begin, end) {\n  return begin.concat(end.substr(end.toLowerCase().indexOf(begin.toLowerCase()) + begin.length));\n};\n/**\n * @hidden\n */\n\n\nvar isWindowAvailable = function isWindowAvailable() {\n  return typeof window !== 'undefined';\n};\n/**\n * @hidden\n */\n\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n/**\n * @hidden\n */\n\n\nvar isObject = function isObject(value) {\n  return isPresent(value) && typeof value === 'object';\n};\n/**\n * @hidden\n */\n\n\nvar isEmptyString = function isEmptyString(value) {\n  return typeof value === 'string' && value.length === 0;\n};\n/**\n * @hidden\n */\n\n\nvar resolveValuesInArray = function resolveValuesInArray(values) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var valueField = arguments.length > 2 ? arguments[2] : undefined;\n  return values.map(function (value) {\n    return data.find(function (item) {\n      return item[valueField] === value;\n    });\n  }).filter(function (value) {\n    return value !== undefined;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar validateComplexValues = function validateComplexValues(values, valueField) {\n  return isArray(values) && values.filter(function (item) {\n    return isObject(item) && item[valueField];\n  });\n};\n/**\n * @hidden\n */\n\n\nvar resolveAllValues = function resolveAllValues(value, data, valueField) {\n  var customValues = validateComplexValues(value, valueField) || [];\n  var resolvedValues = resolveValuesInArray(value, data, valueField) || [];\n  return resolvedValues.concat(customValues);\n};\n/**\n * @hidden\n */\n\n\nvar isObjectArray = function isObjectArray(values) {\n  return isArray(values) && values.every(function (item) {\n    return isObject(item);\n  });\n};\n/**\n * @hidden\n */\n\n\nvar selectedIndices = function selectedIndices(values, data, valueField) {\n  var extractedValues = data.map(function (item) {\n    return isPresent(item) && isPresent(item[valueField]) ? item[valueField] : item;\n  });\n  return values.reduce(function (arr, item) {\n    var value = isPresent(item) && isPresent(item[valueField]) ? item[valueField] : item;\n    var index = extractedValues.indexOf(value);\n\n    if (index !== -1) {\n      arr.push(index);\n    }\n\n    return arr;\n  }, []);\n};\n/**\n * @hidden\n */\n\n\nvar getter = function getter(dataItem, field) {\n  var usePrimitive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (isPresent(dataItem)) {\n    if (usePrimitive) {\n      return field && isPresent(dataItem[field]) ? dataItem[field] : dataItem;\n    } else {\n      return field ? dataItem[field] : dataItem;\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nvar sameCharsOnly = function sameCharsOnly(word, character) {\n  for (var idx = 0; idx < word.length; idx++) {\n    if (word.charAt(idx) !== character) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * @hidden\n */\n\n\nvar shuffleData = function shuffleData(data, splitIndex, defaultItem) {\n  var result = data;\n\n  if (defaultItem) {\n    result = [defaultItem].concat(result);\n  }\n\n  return result.slice(splitIndex).concat(result.slice(0, splitIndex));\n};\n/**\n * @hidden\n */\n\n\nvar matchText = function matchText(text, word, ignoreCase) {\n  if (!isPresent(text)) {\n    return false;\n  }\n\n  var temp = String(text);\n\n  if (ignoreCase) {\n    temp = temp.toLowerCase();\n  }\n\n  return temp.indexOf(word) === 0;\n};\n/**\n * @hidden\n *\n * Checks whether the passed object has all of the listed properties.\n */\n\n\nvar hasProps = function hasProps(obj, props) {\n  if (!isPresent(obj)) {\n    return false;\n  }\n\n  return props.every(function (prop) {\n    return obj.hasOwnProperty(prop);\n  });\n};\n/**\n * @hidden\n *\n * Checks whether an element is untouched by looking for the ng-untouched css class\n */\n\n\nvar isUntouched = function isUntouched(element) {\n  return element.className.includes('ng-untouched');\n};\n/* tslint:disable:member-ordering */\n\n/**\n * @hidden\n */\n\n\nvar SearchBarComponent = /*#__PURE__*/function () {\n  function SearchBarComponent(localization, renderer) {\n    _classCallCheck(this, SearchBarComponent);\n\n    this.localization = localization;\n    this.valueChange = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onClick = new EventEmitter();\n    this.onNavigate = new EventEmitter();\n    this.searchBarClass = true;\n    this._userInput = \"\";\n    this._previousValue = \"\";\n    this._placeholder = \"\";\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.renderer = renderer;\n  }\n\n  _createClass(SearchBarComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.localizationChangeSubscription = this.localization.changes.subscribe(function (_ref) {\n        var rtl = _ref.rtl;\n        return _this.direction = rtl ? 'rtl' : 'ltr';\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var previousUserInput;\n\n      if (this.input && (changes.userInput || changes.suggestedText)) {\n        if (changes.userInput && changes.userInput.previousValue) {\n          if (this._previousValue === changes.userInput.previousValue) {\n            previousUserInput = this._previousValue;\n          } else {\n            previousUserInput = changes.userInput.currentValue || \"\";\n          }\n        } else {\n          previousUserInput = this._previousValue;\n        }\n\n        var caretIndex = this.input.nativeElement.selectionStart;\n        var caretAtEnd = previousUserInput.length === caretIndex;\n        this.writeInputValue(this.suggestedText ? combineStr(this.userInput, this.suggestedText) : this.userInput);\n\n        if (this.suggestedText) {\n          this.setInputSelection(this.userInput.length, this.suggestedText.length);\n        } else if (caretAtEnd) {\n          this.setInputSelection(this.userInput.length, this.userInput.length);\n        } else {\n          this.setInputSelection(caretIndex, caretIndex);\n        }\n\n        this._previousValue = this.userInput;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"writeInputValue\",\n    value: function writeInputValue(text) {\n      if (isDocumentAvailable()) {\n        this.renderer.setProperty(this.input.nativeElement, 'value', text);\n      }\n    }\n  }, {\n    key: \"setInputSelection\",\n    value: function setInputSelection(start, end) {\n      if (isDocumentAvailable() && this.input.nativeElement === document.activeElement) {\n        try {\n          this.input.nativeElement.setSelectionRange(start, end);\n        } catch (e) {//Make sure that the element is in the DOM before you invoke its methods\n        }\n      }\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(event) {\n      var value = event.target.value;\n\n      if (value !== this.userInput) {\n        this._previousValue = value;\n        this.valueChange.emit(value);\n      }\n    }\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus(event) {\n      this.onFocus.emit(event);\n    }\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur(event) {\n      this.onBlur.emit(event);\n    }\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(event) {\n      var keyCode = event.keyCode;\n      var keys = [Keys.up, Keys.down, Keys.left, Keys.right, Keys.enter, Keys.esc, Keys.delete, Keys.backspace, Keys.home, Keys.end];\n\n      if (keys.indexOf(keyCode) > -1) {\n        this.onNavigate.emit(event);\n      }\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (isDocumentAvailable()) {\n        this.input.nativeElement.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (isDocumentAvailable()) {\n        this.input.nativeElement.blur();\n      }\n    }\n  }, {\n    key: \"setInputSize\",\n    value: function setInputSize() {\n      var lengthOf = function lengthOf(x) {\n        return x ? x.length : 0;\n      };\n\n      var input = this.input.nativeElement;\n      var placeholderLength = lengthOf(this.placeholder);\n      var textLength = lengthOf(this.value);\n      var size = Math.max(placeholderLength, textLength, 1);\n      this.renderer.setAttribute(input, 'size', size.toString());\n    }\n  }, {\n    key: \"userInput\",\n    get: function get() {\n      return this._userInput;\n    },\n    set: function set(userInput) {\n      this._userInput = userInput || \"\";\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.input.nativeElement.value;\n    }\n  }, {\n    key: \"placeholder\",\n    set: function set(text) {\n      this._placeholder = text || '';\n      this.setInputSize();\n    },\n    get: function get() {\n      return this._placeholder;\n    }\n  }]);\n\n  return SearchBarComponent;\n}();\n\nSearchBarComponent.ɵfac = function SearchBarComponent_Factory(t) {\n  return new (t || SearchBarComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nSearchBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SearchBarComponent,\n  selectors: [[\"kendo-searchbar\"]],\n  viewQuery: function SearchBarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function SearchBarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-searchbar\", ctx.searchBarClass);\n    }\n  },\n  inputs: {\n    userInput: \"userInput\",\n    placeholder: \"placeholder\",\n    id: \"id\",\n    listId: \"listId\",\n    tagListId: \"tagListId\",\n    activeDescendant: \"activeDescendant\",\n    noDataLabel: \"noDataLabel\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabIndex: \"tabIndex\",\n    popupOpen: \"popupOpen\",\n    role: \"role\",\n    suggestedText: \"suggestedText\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    onBlur: \"onBlur\",\n    onFocus: \"onFocus\",\n    onClick: \"onClick\",\n    onNavigate: \"onNavigate\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 21,\n  consts: [[\"autocomplete\", \"off\", \"aria-haspopup\", \"listbox\", 3, \"id\", \"disabled\", \"readonly\", \"placeholder\", \"kendoEventsOutsideAngular\", \"scope\", \"input\", \"keydown\"], [\"input\", \"\"]],\n  template: function SearchBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"input\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"input\", function SearchBarComponent_Template_input_input_0_listener($event) {\n        return ctx.handleInput($event);\n      })(\"keydown\", function SearchBarComponent_Template_input_keydown_0_listener($event) {\n        return ctx.handleKeydown($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(\"k-input\");\n      ɵngcc0.ɵɵproperty(\"id\", ctx.id)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"placeholder\", ctx.placeholder)(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(18, _c1, ctx.handleFocus, ctx.handleBlur))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"tabIndex\", ctx.tabIndex)(\"dir\", ctx.direction)(\"role\", ctx.role)(\"aria-disabled\", ctx.disabled)(\"aria-readonly\", ctx.readonly)(\"aria-expanded\", ctx.popupOpen)(\"aria-owns\", ctx.listId)(\"aria-describedby\", ctx.tagListId)(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-label\", ctx.noDataLabel);\n    }\n  },\n  directives: [ɵngcc1.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nSearchBarComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: Renderer2\n  }];\n};\n\nSearchBarComponent.propDecorators = {\n  id: [{\n    type: Input\n  }],\n  listId: [{\n    type: Input\n  }],\n  tagListId: [{\n    type: Input\n  }],\n  activeDescendant: [{\n    type: Input\n  }],\n  noDataLabel: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  popupOpen: [{\n    type: Input\n  }],\n  role: [{\n    type: Input\n  }],\n  userInput: [{\n    type: Input\n  }],\n  suggestedText: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  onBlur: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output\n  }],\n  onClick: [{\n    type: Output\n  }],\n  onNavigate: [{\n    type: Output\n  }],\n  input: [{\n    type: ViewChild,\n    args: [\"input\", {\n      static: true\n    }]\n  }],\n  searchBarClass: [{\n    type: HostBinding,\n    args: ['class.k-searchbar']\n  }],\n  placeholder: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SearchBarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-searchbar',\n      template: \"\\n        <input #input\\n            autocomplete=\\\"off\\\"\\n            [id]=\\\"id\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [readonly]=\\\"readonly\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            [class]=\\\"'k-input'\\\"\\n            (input)=\\\"handleInput($event)\\\"\\n            (keydown)=\\\"handleKeydown($event)\\\"\\n            [kendoEventsOutsideAngular]=\\\"{\\n                focus: handleFocus,\\n                blur: handleBlur\\n            }\\\"\\n            [scope]=\\\"this\\\"\\n            [attr.tabIndex]=\\\"tabIndex\\\"\\n            [attr.dir]=\\\"direction\\\"\\n            [attr.role]=\\\"role\\\"\\n            [attr.aria-disabled]=\\\"disabled\\\"\\n            [attr.aria-readonly]=\\\"readonly\\\"\\n            aria-haspopup=\\\"listbox\\\"\\n            [attr.aria-expanded]=\\\"popupOpen\\\"\\n            [attr.aria-owns]=\\\"listId\\\"\\n            [attr.aria-describedby]=\\\"tagListId\\\"\\n            [attr.aria-activedescendant]=\\\"activeDescendant\\\"\\n            [attr.aria-label]=\\\"noDataLabel\\\"\\n        />\\n   \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    valueChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onClick: [{\n      type: Output\n    }],\n    onNavigate: [{\n      type: Output\n    }],\n    searchBarClass: [{\n      type: HostBinding,\n      args: ['class.k-searchbar']\n    }],\n    userInput: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    listId: [{\n      type: Input\n    }],\n    tagListId: [{\n      type: Input\n    }],\n    activeDescendant: [{\n      type: Input\n    }],\n    noDataLabel: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    popupOpen: [{\n      type: Input\n    }],\n    role: [{\n      type: Input\n    }],\n    suggestedText: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: [\"input\", {\n        static: true\n      }]\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the list item content. To define the item template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ItemTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * - [Using `ItemTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-item-template)\n * - [Using `ItemTemplate` with the ComboBox]({% slug templates_combobox %}#toc-item-template)\n * - [Using `ItemTemplate` with the DropDownList]({% slug templates_ddl %}#toc-item-template)\n * - [Using `ItemTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-item-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar ItemTemplateDirective = function ItemTemplateDirective(templateRef) {\n  _classCallCheck(this, ItemTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nItemTemplateDirective.ɵfac = function ItemTemplateDirective_Factory(t) {\n  return new (t || ItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nItemTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ItemTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListItemTemplate\", \"\"], [\"\", \"kendoComboBoxItemTemplate\", \"\"], [\"\", \"kendoAutoCompleteItemTemplate\", \"\"], [\"\", \"kendoMultiSelectItemTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nItemTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListItemTemplate],[kendoComboBoxItemTemplate],[kendoAutoCompleteItemTemplate],[kendoMultiSelectItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the header content of the list. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>HeaderTemplate` directive inside the component tag.\n *\n * - [Using `HeaderTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-header-template)\n * - [Using `HeaderTemplate` with the ComboBox]({% slug templates_combobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownList]({% slug templates_ddl %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-header-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxHeaderTemplate>\n *      <h4>Header template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar HeaderTemplateDirective = function HeaderTemplateDirective(templateRef) {\n  _classCallCheck(this, HeaderTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nHeaderTemplateDirective.ɵfac = function HeaderTemplateDirective_Factory(t) {\n  return new (t || HeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: HeaderTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListHeaderTemplate\", \"\"], [\"\", \"kendoComboBoxHeaderTemplate\", \"\"], [\"\", \"kendoAutoCompleteHeaderTemplate\", \"\"], [\"\", \"kendoMultiSelectHeaderTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nHeaderTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListHeaderTemplate],[kendoComboBoxHeaderTemplate],[kendoAutoCompleteHeaderTemplate],[kendoMultiSelectHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the footer content of the list. To define the footer template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FooterTemplate` directive inside the component tag.\n *\n * - [Using `FooterTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-footer-template)\n * - [Using `FooterTemplate` with the ComboBox]({% slug templates_combobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownList]({% slug templates_ddl %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-footer-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxFooterTemplate>\n *      <h4>Footer template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar FooterTemplateDirective = function FooterTemplateDirective(templateRef) {\n  _classCallCheck(this, FooterTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListFooterTemplate\", \"\"], [\"\", \"kendoComboBoxFooterTemplate\", \"\"], [\"\", \"kendoAutoCompleteFooterTemplate\", \"\"], [\"\", \"kendoMultiSelectFooterTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nFooterTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListFooterTemplate],[kendoComboBoxFooterTemplate],[kendoAutoCompleteFooterTemplate],[kendoMultiSelectFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the group header content. To define the group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>GroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `GroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-group-template)\n * - [Using `GroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" [textField]=\"'name'\" [valueField]=\"'name'\">\n *    <ng-template kendoComboBoxGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\n\n\nvar GroupTemplateDirective = function GroupTemplateDirective(templateRef) {\n  _classCallCheck(this, GroupTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nGroupTemplateDirective.ɵfac = function GroupTemplateDirective_Factory(t) {\n  return new (t || GroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nGroupTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListGroupTemplate\", \"\"], [\"\", \"kendoComboBoxGroupTemplate\", \"\"], [\"\", \"kendoAutoCompleteGroupTemplate\", \"\"], [\"\", \"kendoMultiSelectGroupTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nGroupTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the fixed group header content. To define the fixed group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FixedGroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `FixedGroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-fixed-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" [textField]=\"'name'\" [valueField]=\"'name'\">\n *    <ng-template kendoComboBoxFixedGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\n\n\nvar FixedGroupTemplateDirective = function FixedGroupTemplateDirective(templateRef) {\n  _classCallCheck(this, FixedGroupTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nFixedGroupTemplateDirective.ɵfac = function FixedGroupTemplateDirective_Factory(t) {\n  return new (t || FixedGroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nFixedGroupTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FixedGroupTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListFixedGroupTemplate\", \"\"], [\"\", \"kendoComboBoxFixedGroupTemplate\", \"\"], [\"\", \"kendoAutoCompleteFixedGroupTemplate\", \"\"], [\"\", \"kendoMultiSelectFixedGroupTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nFixedGroupTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FixedGroupTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar SelectionService = /*#__PURE__*/function () {\n  function SelectionService() {\n    _classCallCheck(this, SelectionService);\n\n    this.onSelect = new EventEmitter();\n    this.onChange = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.total = 0;\n    this.selectedIndices = [];\n  }\n\n  _createClass(SelectionService, [{\n    key: \"getTotal\",\n    value: function getTotal() {\n      return this.total;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(index) {\n      return isPresent(this.selectedIndices.find(function (current) {\n        return current === index;\n      }));\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused(index) {\n      return index === this.focused;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus(index) {\n      if (this.isFocused(index)) {\n        return;\n      }\n\n      this.focused = index;\n      this.onFocus.emit(index);\n    }\n  }, {\n    key: \"select\",\n    value: function select(index) {\n      if (this.isSelected(index)) {\n        return;\n      }\n\n      this.selectedIndices = [index];\n      this.focused = index;\n      this.onSelect.emit({\n        indices: [index],\n        newSelection: isPresent(index)\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(index) {\n      if (this.isSelected(index)) {\n        return;\n      }\n\n      this.selectedIndices.push(index);\n      this.focused = index;\n      this.onChange.emit({\n        added: index,\n        indices: this.selectedIndices.slice()\n      });\n    }\n  }, {\n    key: \"unselect\",\n    value: function unselect(index) {\n      if (!this.isSelected(index)) {\n        return;\n      }\n\n      var position = this.selectedIndices.indexOf(index);\n      this.selectedIndices.splice(position, 1);\n      this.focused = index;\n      this.onChange.emit({\n        indices: this.selectedIndices.slice(),\n        removed: index\n      });\n    }\n  }, {\n    key: \"change\",\n    value: function change(index) {\n      var newSelection = isPresent(index) && !this.isSelected(index);\n      this.selectedIndices = [index];\n      this.focused = index;\n      this.onChange.emit({\n        indices: [index],\n        newSelection: newSelection\n      });\n    }\n  }, {\n    key: \"resetSelection\",\n    value: function resetSelection(index) {\n      this.selectedIndices = index instanceof Array ? index : [index];\n      this.focused = this.selectedIndices[this.selectedIndices.length - 1];\n    }\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this.selectedIndices.slice();\n    }\n  }, {\n    key: \"focused\",\n    get: function get() {\n      return this.focusedIndex;\n    },\n    set: function set(index) {\n      if (this.focusedIndex !== index) {\n        this.focusedIndex = index;\n        this.onFocus.emit(index);\n      }\n    }\n  }]);\n\n  return SelectionService;\n}();\n\nSelectionService.ɵfac = function SelectionService_Factory(t) {\n  return new (t || SelectionService)();\n};\n\nSelectionService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SelectionService,\n  factory: SelectionService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectionService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar NavigationAction;\n\n(function (NavigationAction) {\n  NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n  NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n  NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n  NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n  NavigationAction[NavigationAction[\"Tab\"] = 4] = \"Tab\";\n  NavigationAction[NavigationAction[\"Esc\"] = 5] = \"Esc\";\n  NavigationAction[NavigationAction[\"Delete\"] = 6] = \"Delete\";\n  NavigationAction[NavigationAction[\"Backspace\"] = 7] = \"Backspace\";\n  NavigationAction[NavigationAction[\"Home\"] = 8] = \"Home\";\n  NavigationAction[NavigationAction[\"End\"] = 9] = \"End\";\n  NavigationAction[NavigationAction[\"Up\"] = 10] = \"Up\";\n  NavigationAction[NavigationAction[\"Down\"] = 11] = \"Down\";\n  NavigationAction[NavigationAction[\"Left\"] = 12] = \"Left\";\n  NavigationAction[NavigationAction[\"Right\"] = 13] = \"Right\";\n})(NavigationAction || (NavigationAction = {}));\n/**\n * @hidden\n */\n\n\nvar DataService = /*#__PURE__*/function () {\n  function DataService() {\n    _classCallCheck(this, DataService);\n\n    this.grouped = false;\n    this.groupIndices = [];\n  }\n\n  _createClass(DataService, [{\n    key: \"isGrouped\",\n\n    /**\n     * @hidden\n     * Used to determine if the component received grouped data.\n     */\n    value: function isGrouped(data) {\n      // GroupResult { aggregates: AggregateResult, field: string, items: object[], value: any }\n      // https://www.telerik.com/kendo-angular-ui/components/dataquery/api/GroupResult/\n      return isPresent(data) && data.length !== 0 && isPresent(data[0]) && hasProps(data[0], ['aggregates', 'field', 'items', 'value']);\n    }\n    /**\n     * @hidden\n     * Used to calculate the last item index of each group.\n     */\n\n  }, {\n    key: \"getGroupIndices\",\n    value: function getGroupIndices(data) {\n      var groupIndices = [];\n\n      for (var i = 0; i <= data.length - 1; i++) {\n        groupIndices[i] = (groupIndices[i - 1] || 0) + data[i].items.length;\n      }\n\n      return groupIndices;\n    }\n    /**\n     * @hidden\n     * Used to get a flat array containing all items matching certain criteria.\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(predicate) {\n      var result = [];\n\n      if (this.isGrouped(this.data)) {\n        for (var i = 0; i <= this.groupIndices.length - 1; i++) {\n          var matches = this.data[i].items.filter(predicate);\n\n          if (matches) {\n            result = result.concat(matches);\n          }\n        }\n      } else {\n        result = this.data.filter(predicate);\n      }\n\n      return result;\n    }\n    /**\n     * @hidden\n     * Used to get the index of a given data item.\n     */\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(item) {\n      var startFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var predicate = function predicate(element) {\n        return element === item;\n      };\n\n      if (this.grouped) {\n        predicate = function predicate(element) {\n          return element.value === item;\n        };\n      }\n\n      return this.findIndex(predicate, startFrom);\n    }\n    /**\n     * @hidden\n     * Used to get the index of a data item based on an expression.\n     */\n\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(predicate) {\n      var startFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var index = -1;\n\n      if (this.grouped) {\n        var data = this._flatData.filter(function (item) {\n          return !item.header && item.offsetIndex >= startFrom;\n        });\n\n        index = data.findIndex(predicate);\n        index = data[index] ? data[index].offsetIndex : -1;\n      } else {\n        var _data = this.data.slice(startFrom);\n\n        var itemIndex = _data.findIndex(predicate);\n\n        index = itemIndex !== -1 ? itemIndex + startFrom : -1;\n      }\n\n      return index;\n    }\n    /**\n     * @hidden\n     * Used to get the closest group header prior to an item index.\n     */\n\n  }, {\n    key: \"closestGroup\",\n    value: function closestGroup(index) {\n      for (var i = index; i >= 0; i--) {\n        if (this._flatData[i].header) {\n          return this._flatData[i];\n        }\n      }\n    }\n    /**\n     * @hidden\n     * Used to get the first item matching the criteria.\n     */\n\n  }, {\n    key: \"find\",\n    value: function find(predicate) {\n      var index = this.findIndex(predicate);\n      return this.itemAt(index);\n    }\n    /**\n     * @hidden\n     * Used to get the true index in a flattened data array.\n     */\n\n  }, {\n    key: \"flatIndex\",\n    value: function flatIndex(index) {\n      if (this.itemsCount === 0) {\n        return -1;\n      }\n\n      if (this.grouped) {\n        var match = this._flatData.find(function (item) {\n          return !item.header && item.offsetIndex === index;\n        });\n\n        if (match) {\n          return match.index;\n        }\n      } else {\n        return index;\n      }\n\n      return -1;\n    }\n    /**\n     * @hidden\n     * Used to get the item at the provided index.\n     */\n\n  }, {\n    key: \"itemAt\",\n    value: function itemAt(index) {\n      var dataItem;\n\n      if (this.itemsCount === 0) {\n        return dataItem;\n      }\n\n      if (this.grouped) {\n        var match = this._flatData.find(function (item) {\n          return !item.header && item.offsetIndex === index;\n        });\n\n        if (match) {\n          dataItem = match.value;\n        }\n      } else {\n        dataItem = this.data[index];\n      }\n\n      return dataItem;\n    }\n    /**\n     * @hidden\n     * Used to get the group at the provided index.\n     */\n\n  }, {\n    key: \"groupAt\",\n    value: function groupAt(index) {\n      if (this.itemsCount === 0 || !this.isGrouped) {\n        return;\n      }\n\n      return this._flatData.find(function (item) {\n        return item.header && item.index === index;\n      });\n    }\n    /**\n     * @hidden\n     * Used to get the field by which the data is grouped.\n     */\n\n  }, {\n    key: \"groupField\",\n    value: function groupField() {\n      if (this.itemsCount === 0 || !this.isGrouped) {\n        return;\n      }\n\n      return this._data[0].field;\n    }\n    /**\n     * @hidden\n     * Used to get the group to which a dataItem belongs.\n     */\n\n  }, {\n    key: \"itemGroup\",\n    value: function itemGroup(item) {\n      if (!item || this.itemsCount === 0 || !this.isGrouped) {\n        return;\n      }\n\n      var fieldName = this.groupField();\n\n      if (fieldName) {\n        return item[fieldName];\n      }\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten(data) {\n      var group = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var groupIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var flat = [];\n\n      if (isPresent(group)) {\n        flat.push({\n          header: true,\n          index: groupIndex + offset,\n          offsetIndex: groupIndex,\n          value: group\n        });\n      }\n\n      for (var i = 0; i < data.length; i++) {\n        var result = [];\n\n        if (data[i].items) {\n          result = this.flatten(data[i].items, data[i].value, offset, i);\n          offset = offset + data[i].items.length;\n        } else {\n          result.push({\n            header: false,\n            index: groupIndex + offset + i + 1,\n            offsetIndex: offset + i,\n            value: data[i]\n          });\n        }\n\n        flat = flat.concat(result);\n      }\n\n      return flat;\n    }\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this._data = data;\n      this.grouped = this.isGrouped(data);\n\n      if (this.grouped) {\n        this.groupIndices = this.getGroupIndices(data);\n        this._flatData = this.flatten(data);\n      }\n    },\n    get: function get() {\n      if (this.grouped) {\n        return this._flatData;\n      }\n\n      return this._data;\n    }\n    /**\n     * @hidden\n     * Used to get the actual items count, i.e. excluding the header items in case of grouping.\n     */\n\n  }, {\n    key: \"itemsCount\",\n    get: function get() {\n      if (!isPresent(this.data) || this.data.length === 0) {\n        return 0;\n      }\n\n      var items = this.grouped ? this._flatData.filter(function (item) {\n        return !item.header;\n      }) : this.data;\n      return items.length;\n    }\n  }]);\n\n  return DataService;\n}();\n\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)();\n};\n\nDataService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar DisabledItemsService = /*#__PURE__*/function () {\n  function DisabledItemsService(dataService) {\n    _classCallCheck(this, DisabledItemsService);\n\n    this.dataService = dataService;\n    this.itemDisabled = null;\n  }\n\n  _createClass(DisabledItemsService, [{\n    key: \"isIndexDisabled\",\n    value: function isIndexDisabled(index) {\n      if (this.itemDisabled) {\n        var item = this.dataService.itemAt(index);\n\n        if (isPresent(item)) {\n          return this.itemDisabled({\n            dataItem: item,\n            index: index\n          });\n        } else if (isPresent(this.defaultItem)) {\n          return this.itemDisabled({\n            dataItem: this.defaultItem,\n            index: -1\n          });\n        }\n      }\n    }\n  }, {\n    key: \"isItemDisabled\",\n    value: function isItemDisabled(item) {\n      if (this.itemDisabled) {\n        var index = this.dataService.indexOf(item);\n\n        if (index !== -1) {\n          return this.itemDisabled({\n            dataItem: item,\n            index: index\n          });\n        } else if (isPresent(this.defaultItem)) {\n          return this.itemDisabled({\n            dataItem: this.defaultItem,\n            index: -1\n          });\n        }\n      }\n    }\n  }]);\n\n  return DisabledItemsService;\n}();\n\nDisabledItemsService.ɵfac = function DisabledItemsService_Factory(t) {\n  return new (t || DisabledItemsService)(ɵngcc0.ɵɵinject(DataService));\n};\n\nDisabledItemsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DisabledItemsService,\n  factory: DisabledItemsService.ɵfac\n});\n/** @nocollapse */\n\nDisabledItemsService.ctorParameters = function () {\n  return [{\n    type: DataService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DisabledItemsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DataService\n    }];\n  }, null);\n})();\n\nvar MIN_INDEX = 0;\n/**\n * @hidden\n */\n\nvar NavigationEvent =\n/**\n * The index of the item to which the user navigated.\n */\nfunction NavigationEvent(index, originalEvent) {\n  _classCallCheck(this, NavigationEvent);\n\n  this.index = index;\n  this.originalEvent = originalEvent;\n};\n/**\n * @hidden\n */\n\n\nvar NavigationService = /*#__PURE__*/function () {\n  function NavigationService(disabledItemsService, selectionService) {\n    _classCallCheck(this, NavigationService);\n\n    this.disabledItemsService = disabledItemsService;\n    this.selectionService = selectionService;\n    this.open = new EventEmitter();\n    this.close = new EventEmitter();\n    this.enter = new EventEmitter();\n    this.tab = new EventEmitter();\n    this.esc = new EventEmitter();\n    this.up = new EventEmitter();\n    this.right = new EventEmitter();\n    this.down = new EventEmitter();\n    this.left = new EventEmitter();\n    this.delete = new EventEmitter();\n    this.backspace = new EventEmitter();\n    this.home = new EventEmitter();\n    this.end = new EventEmitter();\n  }\n\n  _createClass(NavigationService, [{\n    key: \"process\",\n    value: function process(args) {\n      var keyCode = args.originalEvent.keyCode;\n      var altKey = args.originalEvent.altKey;\n      var index;\n      var action = NavigationAction.Undefined;\n\n      if (altKey && keyCode === Keys.down) {\n        action = NavigationAction.Open;\n      } else if (altKey && keyCode === Keys.up) {\n        action = NavigationAction.Close;\n      } else if (keyCode === Keys.enter) {\n        action = NavigationAction.Enter;\n      } else if (keyCode === Keys.esc) {\n        action = NavigationAction.Esc;\n      } else if (keyCode === Keys.tab) {\n        action = NavigationAction.Tab;\n      } else if (keyCode === Keys.up) {\n        index = this.next({\n          current: args.current,\n          start: args.min,\n          end: args.max,\n          step: -1\n        });\n        action = NavigationAction.Up;\n      } else if (keyCode === Keys.left) {\n        index = this.next({\n          current: args.current,\n          start: args.min,\n          end: args.max,\n          step: -1\n        });\n        action = NavigationAction.Left;\n      } else if (keyCode === Keys.down) {\n        index = this.next({\n          current: args.current,\n          start: args.min,\n          end: args.max,\n          step: 1\n        });\n        action = NavigationAction.Down;\n      } else if (keyCode === Keys.right) {\n        index = this.next({\n          current: args.current,\n          start: args.min,\n          end: args.max,\n          step: 1\n        });\n        action = NavigationAction.Right;\n      } else if (keyCode === Keys.home) {\n        index = this.isDisabled(MIN_INDEX) ? args.current : MIN_INDEX;\n        action = NavigationAction.Home;\n      } else if (keyCode === Keys.end) {\n        index = this.isDisabled(args.max) ? args.current : args.max;\n        action = NavigationAction.End;\n      } else if (keyCode === Keys.delete) {\n        action = NavigationAction.Delete;\n      } else if (keyCode === Keys.backspace) {\n        action = NavigationAction.Backspace;\n      }\n\n      var eventData = new NavigationEvent(index, args.originalEvent);\n\n      if (action !== NavigationAction.Undefined) {\n        this[NavigationAction[action].toLowerCase()].emit(eventData);\n      }\n\n      return action;\n    }\n  }, {\n    key: \"next\",\n    value: function next(args) {\n      var current = args.current,\n          start = args.start,\n          end = args.end,\n          step = args.step;\n      var nextIndex = !isPresent(current) ? start : this.clampIndex(current + step, start, end);\n      var firstFocusableIndex = this.firstFocusableIndex(nextIndex, start, end, step);\n\n      if (isPresent(firstFocusableIndex)) {\n        return firstFocusableIndex;\n      }\n\n      if (this.selectionService.isSelected(current) && current >= start) {\n        return current;\n      }\n\n      var inversedStep = -1 * step;\n      return this.firstFocusableIndex(nextIndex, start, end, inversedStep);\n    }\n  }, {\n    key: \"clampIndex\",\n    value: function clampIndex(index, min, max) {\n      if (!isPresent(index) || index < min) {\n        return min;\n      }\n\n      if (index > max) {\n        return max;\n      }\n\n      return index;\n    }\n  }, {\n    key: \"firstFocusableIndex\",\n    value: function firstFocusableIndex(startIndex, min, max, step) {\n      while (min <= startIndex && startIndex <= max) {\n        if (!this.isDisabled(startIndex)) {\n          return startIndex;\n        }\n\n        startIndex += step;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled(index) {\n      if (this.disabledItemsService) {\n        return this.disabledItemsService.isIndexDisabled(index);\n      }\n    }\n  }]);\n\n  return NavigationService;\n}();\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(ɵngcc0.ɵɵinject(DisabledItemsService), ɵngcc0.ɵɵinject(SelectionService));\n};\n\nNavigationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n/** @nocollapse */\n\nNavigationService.ctorParameters = function () {\n  return [{\n    type: DisabledItemsService\n  }, {\n    type: SelectionService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DisabledItemsService\n    }, {\n      type: SelectionService\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders content when no data is available. To define the no-data template, nest a `<ng-template>` tag\n * with the `kendo<ComponentName>NoDataTemplate` directive inside the component tag.\n *\n * - [Using `NoDataTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the ComboBox]({% slug templates_combobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownList]({% slug templates_ddl %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-no-data-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxNoDataTemplate>\n *      <h4>No data!</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [];\n * }\n * ```\n */\n\n\nvar NoDataTemplateDirective = function NoDataTemplateDirective(templateRef) {\n  _classCallCheck(this, NoDataTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nNoDataTemplateDirective.ɵfac = function NoDataTemplateDirective_Factory(t) {\n  return new (t || NoDataTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nNoDataTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NoDataTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListNoDataTemplate\", \"\"], [\"\", \"kendoComboBoxNoDataTemplate\", \"\"], [\"\", \"kendoAutoCompleteNoDataTemplate\", \"\"], [\"\", \"kendoMultiSelectNoDataTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nNoDataTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NoDataTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListNoDataTemplate],[kendoComboBoxNoDataTemplate],[kendoAutoCompleteNoDataTemplate],[kendoMultiSelectNoDataTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar PreventableEvent = /*#__PURE__*/function () {\n  function PreventableEvent() {\n    _classCallCheck(this, PreventableEvent);\n\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses the built-in behavior that follows the event.\n   */\n\n\n  _createClass(PreventableEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n\n  }, {\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.prevented;\n    }\n  }]);\n\n  return PreventableEvent;\n}();\n/**\n * Defines the mandatory properties of the `kendoDropDownFilter` directive\n * so that `kendoDropDownFilter` can be used with any of the DropDowns components\n * which implement the `FilterableDropDownComponentBase` class.\n *\n * @hidden\n */\n\n\nvar FilterableDropDownComponentBase = function FilterableDropDownComponentBase() {\n  _classCallCheck(this, FilterableDropDownComponentBase);\n};\n/**\n * @hidden\n */\n\n\nvar ListItemDirective = function ListItemDirective(element) {\n  _classCallCheck(this, ListItemDirective);\n\n  this.element = element;\n};\n\nListItemDirective.ɵfac = function ListItemDirective_Factory(t) {\n  return new (t || ListItemDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef));\n};\n\nListItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ListItemDirective,\n  selectors: [[\"li\", \"role\", \"option\"], [\"li\", \"role\", \"group\"]]\n});\n/** @nocollapse */\n\nListItemDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ListItemDirective, [{\n    type: Directive,\n    args: [{\n      selector: '\"li[role=option], li[role=group]\"' // tslint:disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ListComponent = /*#__PURE__*/function () {\n  /* tslint:disable:member-ordering */\n  function ListComponent(dataService, wrapper, selectionService, disabledItemsService, cdr, zone, renderer) {\n    _classCallCheck(this, ListComponent);\n\n    this.dataService = dataService;\n    this.wrapper = wrapper;\n    this.selectionService = selectionService;\n    this.disabledItemsService = disabledItemsService;\n    this.cdr = cdr;\n    this.zone = zone;\n    this.renderer = renderer;\n    this.selected = [];\n    this.focused = -1;\n    this.show = true;\n    this.multipleSelection = false;\n    this.onClick = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.startFrom = 0;\n    this.lastLoaded = 0;\n    this.lastScrollTop = 0;\n    this.scrollToFocused = false;\n    this.selectSubscription = merge(this.selectionService.onSelect.pipe(map(function (args) {\n      return args.indices[0];\n    })), this.selectionService.onFocus).subscribe(this.scrollToItem.bind(this));\n  }\n\n  _createClass(ListComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isChanged('data', changes, false)) {\n        if (this.lastLoaded <= 0) {\n          this.lastLoaded = this.data.length - 1;\n          this.scrollToFocused = !changes.data.isFirstChange();\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      this.zone.runOutsideAngular(function () {\n        _this2.scrollSubscription = fromEvent(_this2.content.nativeElement, \"scroll\").pipe(auditTime(100), tap(_this2.prefetchData.bind(_this2)), tap(_this2.findCurrentGroup.bind(_this2))).subscribe(function () {\n          _this2.lastScrollTop = _this2.content.nativeElement.scrollTop;\n        });\n      });\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      if (this.virtual) {\n        this.positionItems();\n      }\n\n      if (this.items && this.scrollToFocused) {\n        this.scrollToFocused = false;\n        var scrollTarget = this.items.length && this.selectionService.focused === -1 ? 0 : this.selectionService.focused;\n        this.scrollToItem(scrollTarget);\n      }\n\n      if (this.dataService.grouped) {\n        this.findCurrentGroup();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.selectSubscription.unsubscribe();\n\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"firstVisibleItem\",\n    value: function firstVisibleItem() {\n      var _this3 = this;\n\n      var content = this.content.nativeElement;\n      var rect = content.getBoundingClientRect(); // IE9 hack\n\n      var disabled = Array.prototype.slice.call(content.querySelectorAll(\".k-state-disabled\")); // This is a workaround for finding elements with pointer-events: none;\n\n      disabled.forEach(function (el) {\n        return _this3.renderer.setStyle(el, \"pointer-events\", \"auto\");\n      });\n      var item = document.elementFromPoint(rect.left + 1, rect.top + 1);\n      disabled.forEach(function (el) {\n        return _this3.renderer.setStyle(el, \"pointer-events\", \"none\");\n      });\n      return item;\n    }\n  }, {\n    key: \"findCurrentGroup\",\n    value: function findCurrentGroup() {\n      if (!this.dataService.grouped) {\n        this.currentGroup = undefined;\n        return;\n      }\n\n      var item = this.firstVisibleItem();\n\n      if (item) {\n        var index;\n\n        if (item.getAttribute(\"role\") === \"group\") {\n          index = parseInt(item.getAttribute(\"group-index\"), 10);\n          this.currentGroup = this.dataService.groupAt(index).value;\n        } else {\n          index = parseInt(item.getAttribute(\"index\"), 10);\n          this.currentGroup = this.dataService.itemGroup(this.dataService.itemAt(index));\n        }\n      } else {\n        this.currentGroup = undefined;\n      }\n\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"prefetchData\",\n    value: function prefetchData() {\n      if (!this.virtual) {\n        return;\n      }\n\n      var visibleItems = Math.trunc(this.content.nativeElement.clientHeight / this.virtual.itemHeight);\n      var offsetY = this.content.nativeElement.scrollTop;\n      var start = Math.trunc(offsetY / this.virtual.itemHeight);\n      var down = offsetY > this.lastScrollTop;\n      var nextPage = start + visibleItems >= this.lastLoaded && this.lastLoaded < this.virtual.total - 1;\n      var leftOver = this.pageSize - (this.lastLoaded - this.startFrom);\n      var prevPage = this.lastLoaded - this.pageSize + visibleItems >= start - leftOver;\n\n      if (down && nextPage) {\n        this.changePage(start);\n      }\n\n      if (!down && prevPage) {\n        this.changePage(start - this.pageSize + visibleItems + 1);\n      }\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(start) {\n      var _this4 = this;\n\n      this.zone.run(function () {\n        var end = _this4.pageSize + start;\n\n        if (end > _this4.virtual.total) {\n          start--;\n          end = _this4.virtual.total;\n        }\n\n        if (start < 0) {\n          start = 0;\n        }\n\n        _this4.startFrom = start;\n        _this4.lastLoaded = end;\n\n        _this4.pageChange.emit({\n          skip: start,\n          take: _this4.pageSize\n        });\n      });\n    }\n  }, {\n    key: \"index\",\n    value: function index(groupIndex, itemIndex) {\n      return groupIndex > 0 ? this.dataService.groupIndices[groupIndex - 1] + itemIndex : itemIndex;\n    }\n  }, {\n    key: \"getText\",\n    value: function getText(dataItem) {\n      return getter(dataItem, this.textField);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(dataItem) {\n      return getter(dataItem, this.valueField);\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled(index) {\n      if (isPresent(this.virtual)) {\n        index += this.virtual.skip;\n      }\n\n      return this.disabledItemsService.isIndexDisabled(index);\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(index) {\n      var flatIndex = index;\n\n      if (this.dataService.grouped) {\n        // takes into account the group header items\n        flatIndex = this.dataService.flatIndex(index);\n        /* The first group header item is not rendered in the list (see template), so subtract 1 when calulating the flat index.\n           With virtualization enabled, the first group header could be in a previous page, in which case don't subtract anything. */\n\n        var groupHeaderOffset = this.firstGroupHeaderInTargetedPage(flatIndex) ? -1 : 0;\n        flatIndex += groupHeaderOffset;\n      }\n\n      if (this.virtual && flatIndex > -1) {\n        this.scrollToIndex(flatIndex);\n        return;\n      }\n\n      var items = this.items.toArray();\n\n      if (isPresent(items[flatIndex]) && flatIndex !== -1) {\n        this.scroll(items[flatIndex].element);\n      }\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(index) {\n      var content = this.content.nativeElement;\n      var contentScrollTop = content.scrollTop;\n      var itemOffsetTop = index * this.virtual.itemHeight;\n      var itemOffsetHeight = this.virtual.itemHeight;\n      var contentOffsetHeight = content.clientHeight;\n      var bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n      if (contentScrollTop > itemOffsetTop) {\n        contentScrollTop = itemOffsetTop;\n      } else if (bottomDistance > contentScrollTop + contentOffsetHeight) {\n        contentScrollTop = bottomDistance - contentOffsetHeight;\n      }\n\n      content.scrollTop = contentScrollTop;\n    }\n  }, {\n    key: \"scroll\",\n    value: function scroll(item) {\n      if (!item) {\n        return;\n      }\n\n      var nativeElement = item.nativeElement;\n      var content = this.content.nativeElement,\n          itemOffsetTop = nativeElement.offsetTop,\n          itemOffsetHeight = nativeElement.offsetHeight,\n          contentScrollTop = content.scrollTop,\n          contentOffsetHeight = content.clientHeight,\n          bottomDistance = itemOffsetTop + itemOffsetHeight;\n\n      if (contentScrollTop > itemOffsetTop) {\n        contentScrollTop = itemOffsetTop;\n      } else if (bottomDistance > contentScrollTop + contentOffsetHeight) {\n        contentScrollTop = bottomDistance - contentOffsetHeight;\n      }\n\n      content.scrollTop = contentScrollTop;\n    }\n  }, {\n    key: \"positionItems\",\n    value: function positionItems() {\n      var _this5 = this;\n\n      this.items.forEach(function (item, index) {\n        var offsetY = (index + _this5.startFrom) * _this5.virtual.itemHeight;\n\n        _this5.renderer.setStyle(item.element.nativeElement, \"transform\", \"translateY(\".concat(offsetY, \"px\"));\n      });\n    }\n    /**\n     * Indicates whether the first group header from the data set is in the targeted virtual page.\n     */\n\n  }, {\n    key: \"firstGroupHeaderInTargetedPage\",\n    value: function firstGroupHeaderInTargetedPage(itemIndex) {\n      if (!isPresent(this.virtual)) {\n        return true;\n      }\n\n      return this.virtual.skip === 0 && this.virtual.pageSize > itemIndex;\n    }\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this._data = data[0] && data[0].header ? data.slice(0) : data;\n    },\n    get: function get() {\n      return this._data;\n    }\n  }, {\n    key: \"items\",\n    set: function set(items) {\n      this._items = items;\n    },\n    get: function get() {\n      return this._items;\n    }\n  }, {\n    key: \"pageSize\",\n    get: function get() {\n      if (this.virtual.pageSize) {\n        return this.virtual.pageSize;\n      }\n\n      var size = Math.round(this.height / this.virtual.itemHeight);\n      return size;\n    }\n  }, {\n    key: \"scrollHeight\",\n    get: function get() {\n      return (this.dataService.grouped ? this.virtual.total - 1 : this.virtual.total) * this.virtual.itemHeight;\n    }\n  }]);\n\n  return ListComponent;\n}();\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(ɵngcc0.ɵɵdirectiveInject(DataService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(DisabledItemsService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"kendo-list\"]],\n  viewQuery: function ListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n      ɵngcc0.ɵɵviewQuery(ListItemDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  inputs: {\n    selected: \"selected\",\n    focused: \"focused\",\n    show: \"show\",\n    multipleSelection: \"multipleSelection\",\n    data: \"data\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    height: \"height\",\n    template: \"template\",\n    groupTemplate: \"groupTemplate\",\n    fixedGroupTemplate: \"fixedGroupTemplate\",\n    id: \"id\",\n    optionPrefix: \"optionPrefix\",\n    virtual: \"virtual\"\n  },\n  outputs: {\n    onClick: \"onClick\",\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 8,\n  vars: 15,\n  consts: [[\"class\", \"k-outer-group-header k-first\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"unselectable\", \"on\", 3, \"ngClass\"], [\"content\", \"\"], [\"role\", \"listbox\", 1, \"k-list\", \"k-reset\", 3, \"ngClass\"], [\"list\", \"\"], [4, \"ngIf\"], [\"class\", \"k-height-container\", \"role\", \"presentation\", 4, \"ngIf\"], [1, \"k-outer-group-header\", \"k-first\", 3, \"ngClass\", \"ngStyle\"], [3, \"ngIf\"], [3, \"templateContext\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"option\", \"kendoDropDownsSelectable\", \"\", 1, \"k-item\", 3, \"height\", \"index\", \"multipleSelection\", \"ngClass\"], [\"role\", \"group\", \"class\", \"k-outer-group-header\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"role\", \"option\", \"kendoDropDownsSelectable\", \"\", \"class\", \"k-item\", 3, \"height\", \"index\", \"multipleSelection\", \"ngClass\", 4, \"ngIf\"], [\"role\", \"group\", 1, \"k-outer-group-header\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"presentation\", 1, \"k-height-container\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ListComponent_div_0_Template, 3, 10, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n      ɵngcc0.ɵɵelementStart(3, \"ul\", 3, 4);\n      ɵngcc0.ɵɵtemplate(5, ListComponent_5_Template, 1, 1, undefined, 5);\n      ɵngcc0.ɵɵtemplate(6, ListComponent_6_Template, 1, 1, undefined, 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(7, ListComponent_div_7_Template, 2, 2, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataService.grouped);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵstyleProp(\"max-height\", ctx.height, \"px\");\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(10, _c8, ctx.virtual, !ctx.virtual));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(13, _c9, ctx.virtual));\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"aria-hidden\", !ctx.show);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.dataService.grouped && ctx.show);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dataService.grouped);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.virtual);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc2.NgStyle, TemplateContextDirective, ɵngcc2.NgForOf, ListItemDirective, SelectableDirective];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nListComponent.ctorParameters = function () {\n  return [{\n    type: DataService\n  }, {\n    type: ElementRef\n  }, {\n    type: SelectionService\n  }, {\n    type: DisabledItemsService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }];\n};\n\nListComponent.propDecorators = {\n  selected: [{\n    type: Input\n  }],\n  focused: [{\n    type: Input\n  }],\n  textField: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }],\n  groupTemplate: [{\n    type: Input\n  }],\n  fixedGroupTemplate: [{\n    type: Input\n  }],\n  show: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  optionPrefix: [{\n    type: Input\n  }],\n  multipleSelection: [{\n    type: Input\n  }],\n  virtual: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  onClick: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  items: [{\n    type: ViewChildren,\n    args: [ListItemDirective]\n  }],\n  content: [{\n    type: ViewChild,\n    args: ['content']\n  }],\n  list: [{\n    type: ViewChild,\n    args: ['list']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-list',\n      template: \"\\n    <div *ngIf=\\\"dataService.grouped\\\"\\n        class='k-outer-group-header k-first'\\n        [ngClass]=\\\"{'k-virtual-item': virtual}\\\"\\n        [ngStyle]=\\\"{\\n            'height.px': virtual?.itemHeight,\\n            'minHeight.px' : virtual?.itemHeight,\\n            'boxSizing' : virtual ? 'border-box' : 'inherit'}\\\"\\n        >\\n        <ng-template *ngIf=\\\"fixedGroupTemplate\\\"\\n            [templateContext]=\\\"{\\n                templateRef: fixedGroupTemplate.templateRef,\\n                $implicit: currentGroup\\n            }\\\">\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"!fixedGroupTemplate\\\"><strong>{{ currentGroup }}</strong> </ng-template>\\n    </div>\\n    <div #content\\n         [ngClass]=\\\"{ 'k-virtual-content': virtual, 'k-list-scroller': !virtual }\\\"\\n         [style.maxHeight.px]=\\\"height\\\"\\n         unselectable=\\\"on\\\">\\n    <ul #list\\n        role=\\\"listbox\\\"\\n        class=\\\"k-list k-reset\\\"\\n        [ngClass]=\\\"{ 'k-virtual-list': virtual }\\\"\\n        [attr.id]=\\\"id\\\"\\n        [attr.aria-hidden]=\\\"!show\\\">\\n         <ng-template *ngIf=\\\"!dataService.grouped && show\\\" ngFor let-dataItem let-itemIndex=\\\"index\\\" [ngForOf]=\\\"data\\\">\\n            <li\\n                role=\\\"option\\\"\\n                kendoDropDownsSelectable\\n                [height]=\\\"virtual?.itemHeight\\\"\\n                [index]=\\\"itemIndex + startFrom\\\"\\n                [multipleSelection]=\\\"multipleSelection\\\"\\n                [attr.id]=\\\"optionPrefix + '-' + getValue(dataItem)\\\"\\n                [attr.tabIndex]=\\\"-1\\\"\\n                class=\\\"k-item\\\"\\n                [ngClass]=\\\"{ 'k-virtual-item': virtual, 'k-state-disabled': isDisabled(itemIndex) }\\\">\\n                <ng-template *ngIf=\\\"template\\\"\\n                    [templateContext]=\\\"{\\n                        templateRef: template.templateRef,\\n                        $implicit: dataItem\\n                    }\\\">\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"!template\\\">{{ getText(dataItem) }}</ng-template>\\n            </li>\\n         </ng-template>\\n         <ng-template *ngIf=\\\"dataService.grouped\\\" ngFor let-dataItem let-itemIndex=\\\"index\\\" [ngForOf]=\\\"data\\\">\\n            <li\\n                *ngIf=\\\"dataItem.header && dataItem.index > 0\\\"\\n                role=\\\"group\\\"\\n                class='k-outer-group-header'\\n                [ngClass]=\\\"{ 'k-virtual-item': virtual }\\\"\\n                [ngStyle]=\\\"{\\n                    'height.px': virtual?.itemHeight,\\n                    'minHeight.px' : virtual?.itemHeight,\\n                    'boxSizing' : virtual ? 'border-box' : 'inherit'}\\\"\\n                [attr.group-index]=\\\"dataItem.index\\\"\\n                [attr.id]=\\\"optionPrefix + '-' + getValue(dataItem.value)\\\"\\n                [attr.tabIndex]=\\\"-1\\\">\\n                    <ng-template *ngIf=\\\"groupTemplate\\\"\\n                          [templateContext]=\\\"{\\n                            templateRef: groupTemplate.templateRef,\\n                            $implicit: dataItem.value\\n                    }\\\">\\n                    </ng-template>\\n                    <ng-template [ngIf]=\\\"!groupTemplate\\\"><strong> {{ dataItem.value }}</strong> </ng-template>\\n              </li>\\n            <li\\n                *ngIf=\\\"!dataItem.header\\\"\\n                role=\\\"option\\\"\\n                kendoDropDownsSelectable\\n                [height]=\\\"virtual?.itemHeight\\\"\\n                [index]=\\\"dataItem.offsetIndex\\\"\\n                [multipleSelection]=\\\"multipleSelection\\\"\\n                [attr.absolute-index]=\\\"dataItem.index\\\"\\n                [attr.id]=\\\"optionPrefix + '-' + getValue(dataItem.value)\\\"\\n                [attr.tabIndex]=\\\"-1\\\"\\n                class=\\\"k-item\\\"\\n                [ngClass]=\\\"{ 'k-virtual-item': virtual, 'k-state-disabled': isDisabled(dataItem.offsetIndex) }\\\">\\n                <ng-template *ngIf=\\\"template\\\"\\n                    [templateContext]=\\\"{\\n                        templateRef: template.templateRef,\\n                        $implicit: dataItem.value\\n                    }\\\">\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"!template\\\">{{ getText(dataItem.value) }}</ng-template>\\n            </li>\\n        </ng-template>\\n    </ul>\\n    <div *ngIf=\\\"virtual\\\" class=\\\"k-height-container\\\" role=\\\"presentation\\\">\\n        <div [style.height.px]=\\\"scrollHeight\\\"></div>\\n    </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: DataService\n    }, {\n      type: ElementRef\n    }, {\n      type: SelectionService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    selected: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    show: [{\n      type: Input\n    }],\n    multipleSelection: [{\n      type: Input\n    }],\n    onClick: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    data: [{\n      type: Input\n    }],\n    items: [{\n      type: ViewChildren,\n      args: [ListItemDirective]\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    groupTemplate: [{\n      type: Input\n    }],\n    fixedGroupTemplate: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    optionPrefix: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    list: [{\n      type: ViewChild,\n      args: ['list']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar DEFAULTS = {\n  pageSize: 50,\n  itemHeight: 28\n};\n/**\n * @hidden\n */\n\nvar normalizeVirtualizationSettings = function normalizeVirtualizationSettings(settings) {\n  if (settings === true) {\n    return DEFAULTS;\n  }\n\n  if (!settings) {\n    return null;\n  }\n\n  return Object.assign({\n    pageSize: DEFAULTS.pageSize\n  }, settings);\n};\n/* tslint:disable:no-null-keyword */\n\n\nvar NO_VALUE = \"\";\n/**\n * @hidden\n */\n\nvar AUTOCOMPLETE_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(function () {\n    return AutoCompleteComponent;\n  })\n};\n/**\n * Represents the [Kendo UI AutoComplete component for Angular]({% slug overview_autocomplete %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"listItems\"\n *      [placeholder]=\"placeholder\"\n *  >\n * `\n * })\n * class AppComponent {\n *   public placeholder: string = 'Type \"it\" for suggestions';\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nvar AutoCompleteComponent = /*#__PURE__*/function () {\n  function AutoCompleteComponent(localization, dataService, popupService, selectionService, navigationService, disabledItemsService, _zone, cdr, renderer, wrapper) {\n    _classCallCheck(this, AutoCompleteComponent);\n\n    this.localization = localization;\n    this.dataService = dataService;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this._zone = _zone;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    /**\n     * Defines whether the first match from the suggestions list will be automatically focused.\n     * By default, `highlightFirst` is set to `true`.\n     */\n\n    this.highlightFirst = true;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * The hint which is displayed when the component is empty.\n     */\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * @hidden\n     *\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Enables the [filtering]({% slug filtering_autocomplete %}) functionality.\n     * If set to `true`, the component emits the `filterChange` event.\n     */\n\n    this.filterable = false;\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_autocomplete %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value\n     * ([see example]({% slug overview_autocomplete %}#toc-events)).\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the user focuses the AutoComplete.\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the AutoComplete gets blurred.\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    this.widgetClasses = true;\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n\n    this.onChangeCallback = function (_value) {};\n\n    this.onTouchedCallback = function (_) {};\n\n    this.popupMouseDownHandler = function (event) {\n      return event.preventDefault();\n    };\n\n    this._popupSettings = {\n      animate: true\n    };\n    this._open = false;\n    this._value = \"\";\n    this._previousValue = NO_VALUE;\n    this._filtering = false;\n    this.valueChangeSubject = new Subject();\n    this._isFocused = false;\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.wrapper = wrapper.nativeElement;\n    this.data = [];\n    this.subscribeEvents();\n    this.selectionService.resetSelection([-1]);\n  }\n\n  _createClass(AutoCompleteComponent, [{\n    key: \"toggle\",\n\n    /**\n     * Toggles the visibility of the popup.\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    value: function toggle(open) {\n      var _this6 = this;\n\n      Promise.resolve(null).then(function () {\n        var shouldOpen = isPresent(open) ? open : !_this6._open;\n\n        _this6._toggle(shouldOpen);\n      });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"togglePopup\",\n\n    /**\n     * @hidden\n     */\n    value: function togglePopup(open) {\n      var isDisabled = this.disabled || this.readonly;\n      var sameState = this.isOpen === open;\n\n      if (isDisabled || sameState) {\n        return;\n      }\n\n      var isDefaultPrevented = this.triggerPopupEvents(open);\n\n      if (!isDefaultPrevented) {\n        this._toggle(open);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      this.renderer.removeAttribute(this.wrapper, \"tabindex\");\n      this.localizationChangeSubscription = this.localization.changes.subscribe(function (_ref2) {\n        var rtl = _ref2.rtl;\n        _this7.direction = rtl ? 'rtl' : 'ltr';\n\n        _this7.setMessages();\n      });\n      this.setMessages();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyPopup();\n      this.unsubscribeEvents();\n      clearTimeout(this.messagesTimeout);\n\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var virtual = this.virtual;\n      var requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n      if (requestInitialData) {\n        this.pageChange({\n          skip: 0,\n          take: virtual.pageSize\n        });\n      }\n\n      var STATE_PROPS = /(value|valueField)/g;\n\n      if (STATE_PROPS.test(Object.keys(changes).join())) {\n        this.setState(this.value);\n      }\n    }\n    /**\n     * Resets the value of the AutoComplete.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.setState(NO_VALUE);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(event) {\n      event.stopImmediatePropagation();\n      this.focus();\n      this.change(NO_VALUE);\n\n      if (this.filterable) {\n        this.filterChange.emit('');\n      }\n\n      this.selectionService.resetSelection([]);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.setState(value);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * Focuses the AutoComplete.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.disabled) {\n        this.searchbar.focus();\n      }\n    }\n    /**\n     * Blurs the AutoComplete.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.disabled) {\n        this.searchbar.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onResize\",\n    value: function onResize() {\n      if (this._open) {\n        var popupWrapper = this.popupRef.popupElement;\n        var _this$width = this.width,\n            min = _this$width.min,\n            max = _this$width.max;\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n      }\n    }\n  }, {\n    key: \"emitChange\",\n    value: function emitChange() {\n      if (this.value === this._previousValue) {\n        return;\n      }\n\n      this._previousValue = this.value;\n      this.onChangeCallback(this.value);\n      this.valueChange.emit(this.value);\n    }\n  }, {\n    key: \"verifySettings\",\n    value: function verifySettings(newValue) {\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (isPresent(newValue) && typeof newValue !== \"string\") {\n        throw new Error(\"Expected value of type string. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/autocomplete/#toc-value\");\n      }\n    }\n  }, {\n    key: \"search\",\n    value: function search(text) {\n      var startFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var index;\n\n      if (text.length && this.dataService.itemsCount) {\n        index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n      } else {\n        index = -1;\n      }\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        if (index + 1 < this.dataService.itemsCount) {\n          this.search(text, index + 1);\n        } else {\n          this.selectionService.focus(-1);\n        }\n      } else {\n        this.selectionService.focus(index);\n\n        if (this.suggest) {\n          this.suggestedText = getter(this.dataService.itemAt(index), this.valueField);\n        }\n      }\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(index) {\n      if (!this.isOpen) {\n        return;\n      }\n\n      this.selectionService.focus(index);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(event) {\n      var focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n\n      if (this.disabled || this.readonly || isNaN(focused)) {\n        return;\n      }\n\n      var action = this.navigationService.process({\n        current: focused,\n        max: this.dataService.itemsCount - 1,\n        min: 0,\n        originalEvent: event\n      });\n\n      if (action !== NavigationAction.Undefined && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && action !== NavigationAction.Home && action !== NavigationAction.End && action !== NavigationAction.Left && action !== NavigationAction.Right && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(event) {\n      var focused = this.selectionService.focused;\n      var value;\n      this._filtering = false;\n\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n      }\n\n      if (focused >= 0) {\n        value = getter(this.dataService.itemAt(focused), this.valueField);\n      } else {\n        var match = this.suggest && this.suggestedText && this.data.length && getter(this.dataService.itemAt(0), this.valueField, true).toLowerCase() === this.searchbar.value.toLowerCase();\n\n        if (this.isOpen && match) {\n          value = this.suggestedText;\n        } else {\n          value = this.searchbar.value;\n        }\n      }\n\n      this.change(value);\n    }\n  }, {\n    key: \"handleEscape\",\n    value: function handleEscape() {\n      this.togglePopup(false);\n      this.selectionService.focused = -1;\n      this.suggestedText = null;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"searchBarChange\",\n    value: function searchBarChange(text) {\n      var currentTextLength = isPresent(this.text) ? this.text.length : 0;\n      this.backspacePressed = text.length < currentTextLength ? true : false;\n      this.text = text;\n      this.togglePopup(text.length > 0);\n      this._filtering = true;\n\n      if (!this.highlightFirst) {\n        this.selectionService.focused = -1;\n      }\n\n      if (this.filterable) {\n        this.filterChange.emit(text);\n      } else if (this.highlightFirst) {\n        this.search(text);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      var _this8 = this;\n\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(function () {\n          _this8.onFocus.emit();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      var _this9 = this;\n\n      this._filtering = false;\n      var focused = this.filterable ? this.selectionService.focused : -1;\n      this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n\n      var dataItem;\n      var text;\n\n      if (focused !== -1) {\n        dataItem = this.dataService.itemAt(focused);\n        text = getter(dataItem, this.valueField, true) || \"\";\n      } else {\n        text = this.searchbar.value;\n      }\n\n      var exactMatch = text === this.searchbar.value;\n      var insensitiveMatch = text.toLowerCase() === this.searchbar.value.toLowerCase();\n\n      if (!exactMatch && insensitiveMatch) {\n        this.selectionService.resetSelection([]);\n      }\n\n      this.isFocused = false;\n      var valueHasChanged = this.value !== this.text;\n      var runInZone = hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper) || valueHasChanged;\n\n      if (runInZone) {\n        this._zone.run(function () {\n          if (valueHasChanged) {\n            _this9.change(_this9.searchbar.value);\n          }\n\n          _this9.onBlur.emit();\n\n          _this9.onTouchedCallback();\n\n          _this9.togglePopup(false);\n        });\n      } else {\n        this.togglePopup(false);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"pageChange\",\n    value: function pageChange(event) {\n      var virtual = this.virtual;\n      virtual.skip = event.skip;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState(newValue) {\n      if (this._filtering) {\n        return;\n      }\n\n      this.value = newValue;\n      this._previousValue = this.value;\n      this.text = this.value;\n    }\n  }, {\n    key: \"change\",\n    value: function change(value) {\n      this.togglePopup(false);\n      this.valueChangeSubject.next(value);\n    }\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this10 = this;\n\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.valueChangeSubscription = this.valueChangeSubject.pipe(filter(function (candidate) {\n        return !(_this10.value === candidate && _this10.text === candidate);\n      })).subscribe(function (value) {\n        _this10.value = value;\n        _this10.text = value;\n\n        _this10.emitChange();\n      });\n      this.changeSubscription = this.selectionService.onChange.subscribe(this.handleItemChange.bind(this));\n      this.focusSubscription = this.selectionService.onFocus.subscribe(this.handleItemFocus.bind(this));\n      this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down).subscribe(function (event) {\n        return _this10.navigate(event.index);\n      });\n      this.closeSubscription = this.navigationService.close.subscribe(function () {\n        return _this10.togglePopup(false);\n      });\n      this.enterSubscription = this.navigationService.enter.subscribe(this.handleEnter.bind(this));\n      this.escSubscription = this.navigationService.esc.subscribe(this.handleEscape.bind(this));\n    }\n  }, {\n    key: \"unsubscribeEvents\",\n    value: function unsubscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.changeSubscription.unsubscribe();\n      this.navigationSubscription.unsubscribe();\n      this.closeSubscription.unsubscribe();\n      this.enterSubscription.unsubscribe();\n      this.escSubscription.unsubscribe();\n      this.valueChangeSubscription.unsubscribe();\n      this.focusSubscription.unsubscribe();\n    }\n  }, {\n    key: \"handleItemChange\",\n    value: function handleItemChange(event) {\n      var index = event.indices.length ? event.indices[0] : undefined;\n      this._filtering = false;\n      this.selectionService.resetSelection([-1]);\n\n      if (!isPresent(index)) {\n        return;\n      }\n\n      var text = getter(this.dataService.itemAt(index), this.valueField);\n      this.change(text);\n    }\n  }, {\n    key: \"handleItemFocus\",\n    value: function handleItemFocus(_event) {\n      var focused = this.selectionService.focused;\n      var shouldSuggest = Boolean(this.suggest && this.data && this.data.length && focused >= 0);\n\n      if (shouldSuggest) {\n        this.suggestedText = getter(this.dataService.itemAt(focused), this.valueField);\n      }\n    }\n  }, {\n    key: \"createPopup\",\n    value: function createPopup() {\n      var _this11 = this;\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      var horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n      var anchorPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"bottom\"\n      };\n      var popupPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"top\"\n      };\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupClass: this.listContainerClasses,\n        positionMode: 'absolute',\n        popupAlign: popupPosition,\n        anchorAlign: anchorPosition\n      });\n      var popupWrapper = this.popupRef.popupElement;\n      var _this$width2 = this.width,\n          min = _this$width2.min,\n          max = _this$width2.max;\n      popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n      popupWrapper.style.height = this.height;\n      popupWrapper.setAttribute(\"dir\", this.direction);\n      this.popupRef.popupOpen.subscribe(function () {\n        _this11.cdr.detectChanges();\n\n        _this11.optionsList.scrollToItem(_this11.selectionService.focused);\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n        return _this11.togglePopup(false);\n      });\n    }\n  }, {\n    key: \"destroyPopup\",\n    value: function destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(open) {\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n  }, {\n    key: \"triggerPopupEvents\",\n    value: function triggerPopupEvents(open) {\n      var eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      return eventArgs.isDefaultPrevented();\n    }\n  }, {\n    key: \"firstFocusableIndex\",\n    value: function firstFocusableIndex(index) {\n      var maxIndex = this.data.length - 1;\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n      } else {\n        return index;\n      }\n    }\n  }, {\n    key: \"findIndexPredicate\",\n    value: function findIndexPredicate(text) {\n      var _this12 = this;\n\n      if (this.dataService.grouped) {\n        return function (item) {\n          var itemText = getter(item.value, _this12.valueField);\n          itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n          return itemText.startsWith(text.toLowerCase());\n        };\n      } else {\n        return function (item) {\n          var itemText = getter(item, _this12.valueField);\n          itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n          return itemText.startsWith(text.toLowerCase());\n        };\n      }\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages() {\n      var _this13 = this;\n\n      this._zone.runOutsideAngular(function () {\n        clearTimeout(_this13.messagesTimeout);\n        _this13.messagesTimeout = setTimeout(function () {\n          _this13.noDataText = _this13.localization.get('noDataText');\n\n          _this13.cdr.detectChanges();\n        });\n      });\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      var wrapperOffsetWidth = 0;\n\n      if (isDocumentAvailable()) {\n        wrapperOffsetWidth = this.wrapper.offsetWidth;\n      }\n\n      var width = this.popupSettings.width || wrapperOffsetWidth;\n      var minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : \"\".concat(wrapperOffsetWidth, \"px\");\n      var maxWidth = isNaN(width) ? width : \"\".concat(width, \"px\");\n      return {\n        min: minWidth,\n        max: maxWidth\n      };\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      var popupHeight = this.popupSettings.height;\n      return isPresent(popupHeight) ? \"\".concat(popupHeight, \"px\") : 'auto';\n    }\n  }, {\n    key: \"listContainerClasses\",\n    get: function get() {\n      var containerClasses = ['k-list-container', 'k-reset'];\n\n      if (this.popupSettings.popupClass) {\n        containerClasses.push(this.popupSettings.popupClass);\n      }\n\n      return containerClasses;\n    }\n  }, {\n    key: \"suggestion\",\n    get: function get() {\n      if (!this.text || !this.suggestedText) {\n        this.suggestedText = undefined;\n        return;\n      }\n\n      var hasMatch = this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase());\n      var shouldSuggest = this.suggest && !this.backspacePressed;\n\n      if (shouldSuggest && hasMatch) {\n        return this.suggestedText;\n      }\n    }\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this._open;\n    }\n  }, {\n    key: \"activeDescendant\",\n    get: function get() {\n      if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n        return null;\n      }\n\n      var dataItem = this.dataService.itemAt(this.selectionService.focused);\n      return this.optionPrefix + \"-\" + getter(dataItem, this.valueField);\n    }\n  }, {\n    key: \"noDataLabel\",\n    get: function get() {\n      if (this.data.length === 0) {\n        return this.noDataText;\n      }\n    }\n  }, {\n    key: \"clearTitle\",\n    get: function get() {\n      return this.localization.get('clearTitle');\n    }\n    /**\n     * Sets the data of the AutoComplete.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this.dataService.data = data || [];\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      this.setState(this.value);\n\n      if (this.filterable) {\n        this.selectionService.focused = this.isOpen && this.data.length && this.highlightFirst ? this.firstFocusableIndex(0) : -1;\n      }\n\n      if (this.suggest && this.dataService.itemsCount > 0) {\n        this.suggestedText = getter(this.dataService.itemAt(0), this.valueField);\n      }\n    },\n    get: function get() {\n      var virtual = this.virtual;\n\n      if (virtual) {\n        var start = virtual.skip || 0;\n        var end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n        virtual.total = this.dataService.data.length;\n        return this.dataService.data.slice(start, end);\n      }\n\n      return this.dataService.data;\n    }\n    /**\n     * Sets the value of the AutoComplete.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(newValue) {\n      this.verifySettings(newValue);\n      this._value = newValue || NO_VALUE;\n      this.cdr.markForCheck();\n    },\n    get: function get() {\n      return this._value || NO_VALUE;\n    }\n    /**\n     * Configures the popup of the AutoComplete.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_autocomplete %})).\n     * Determines whether the item will be disabled.\n     */\n\n  }, {\n    key: \"itemDisabled\",\n    set: function set(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(\"itemDisabled must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_autocomplete %}) functionality.\n     */\n\n  }, {\n    key: \"virtual\",\n    set: function set(settings) {\n      this._virtualSettings = normalizeVirtualizationSettings(settings);\n    },\n    get: function get() {\n      return this._virtualSettings;\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return this._isFocused;\n    },\n    set: function set(isFocused) {\n      this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper, \"k-state-focused\");\n      this._isFocused = isFocused;\n    }\n  }, {\n    key: \"isDisabled\",\n    get: function get() {\n      return this.disabled;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.direction;\n    }\n  }]);\n\n  return AutoCompleteComponent;\n}();\n\nAutoCompleteComponent.ɵfac = function AutoCompleteComponent_Factory(t) {\n  return new (t || AutoCompleteComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(DataService), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(DisabledItemsService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef));\n};\n\nAutoCompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AutoCompleteComponent,\n  selectors: [[\"kendo-autocomplete\"]],\n  contentQueries: function AutoCompleteComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n    }\n  },\n  viewQuery: function AutoCompleteComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c11, true);\n      ɵngcc0.ɵɵviewQuery(SearchBarComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c12, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function AutoCompleteComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.widgetClasses)(\"k-autocomplete\", ctx.widgetClasses)(\"k-header\", ctx.widgetClasses)(\"k-state-disabled\", ctx.isDisabled);\n    }\n  },\n  inputs: {\n    highlightFirst: \"highlightFirst\",\n    focusableId: \"focusableId\",\n    placeholder: \"placeholder\",\n    listHeight: \"listHeight\",\n    clearButton: \"clearButton\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    filterable: \"filterable\",\n    data: \"data\",\n    value: \"value\",\n    popupSettings: \"popupSettings\",\n    itemDisabled: \"itemDisabled\",\n    tabIndex: \"tabIndex\",\n    virtual: \"virtual\",\n    valueField: \"valueField\",\n    loading: \"loading\",\n    suggest: \"suggest\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    filterChange: \"filterChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoAutoComplete\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.autocomplete'\n  }, {\n    provide: FilterableDropDownComponentBase,\n    useExisting: forwardRef(function () {\n      return AutoCompleteComponent;\n    })\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return AutoCompleteComponent;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 11,\n  vars: 15,\n  consts: function consts() {\n    var i18n_13;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.autocomplete.noDataText\n       */\n      var MSG_EXTERNAL_2690656529626907484$$DIST_FESM2015_INDEX_JS_14 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_13 = MSG_EXTERNAL_2690656529626907484$$DIST_FESM2015_INDEX_JS_14;\n    } else {\n      i18n_13 = $localize(_templateObject());\n    }\n\n    var i18n_15;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.autocomplete.clearTitle\n       */\n      var MSG_EXTERNAL_4821453594854847070$$DIST_FESM2015_INDEX_JS_16 = goog.getMsg(\"clear\");\n      i18n_15 = MSG_EXTERNAL_4821453594854847070$$DIST_FESM2015_INDEX_JS_16;\n    } else {\n      i18n_15 = $localize(_templateObject2());\n    }\n\n    return [[\"kendoAutoCompleteLocalizedMessages\", \"\", 6, \"noDataText\", \"clearTitle\"], [\"noDataText\", i18n_13, \"clearTitle\", i18n_15], [3, \"role\", \"id\", \"listId\", \"activeDescendant\", \"noDataLabel\", \"userInput\", \"suggestedText\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-icon k-clear-value k-i-close\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"click\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"k-icon k-i-loading\", 4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-icon\", \"k-clear-value\", \"k-i-close\", 3, \"click\", \"mousedown\"], [1, \"k-icon\", \"k-i-loading\"], [4, \"ngIf\"], [3, \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-nodata\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-nodata\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function AutoCompleteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"kendo-searchbar\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"onNavigate\", function AutoCompleteComponent_Template_kendo_searchbar_onNavigate_2_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function AutoCompleteComponent_Template_kendo_searchbar_valueChange_2_listener($event) {\n        return ctx.searchBarChange($event);\n      })(\"onBlur\", function AutoCompleteComponent_Template_kendo_searchbar_onBlur_2_listener() {\n        return ctx.handleBlur();\n      })(\"onFocus\", function AutoCompleteComponent_Template_kendo_searchbar_onFocus_2_listener() {\n        return ctx.handleFocus();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, AutoCompleteComponent_span_4_Template, 1, 1, \"span\", 4);\n      ɵngcc0.ɵɵtemplate(5, AutoCompleteComponent_span_5_Template, 1, 0, \"span\", 5);\n      ɵngcc0.ɵɵtemplate(6, AutoCompleteComponent_ng_template_6_Template, 5, 14, \"ng-template\", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(8, AutoCompleteComponent_ng_template_8_Template, 1, 0, \"ng-template\", 7);\n      ɵngcc0.ɵɵelementContainer(9, null, 8);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"role\", \"combobox\")(\"id\", ctx.focusableId)(\"listId\", ctx.listBoxId)(\"activeDescendant\", ctx.activeDescendant)(\"noDataLabel\", ctx.noDataLabel)(\"userInput\", ctx.text)(\"suggestedText\", ctx.suggestion)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && (ctx.text == null ? null : ctx.text.length));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, SearchBarComponent, ɵngcc2.NgIf, ListComponent, TemplateContextDirective, ɵngcc1.ResizeSensorComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nAutoCompleteComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: DataService\n  }, {\n    type: PopupService\n  }, {\n    type: SelectionService\n  }, {\n    type: NavigationService\n  }, {\n    type: DisabledItemsService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nAutoCompleteComponent.propDecorators = {\n  highlightFirst: [{\n    type: Input\n  }],\n  focusableId: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  listHeight: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  clearButton: [{\n    type: Input\n  }],\n  suggest: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  itemDisabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input,\n    args: [\"tabIndex\"]\n  }],\n  filterable: [{\n    type: Input\n  }],\n  virtual: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  filterChange: [{\n    type: Output\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  template: [{\n    type: ContentChild,\n    args: [ItemTemplateDirective]\n  }],\n  headerTemplate: [{\n    type: ContentChild,\n    args: [HeaderTemplateDirective]\n  }],\n  footerTemplate: [{\n    type: ContentChild,\n    args: [FooterTemplateDirective]\n  }],\n  noDataTemplate: [{\n    type: ContentChild,\n    args: [NoDataTemplateDirective]\n  }],\n  groupTemplate: [{\n    type: ContentChild,\n    args: [GroupTemplateDirective]\n  }],\n  fixedGroupTemplate: [{\n    type: ContentChild,\n    args: [FixedGroupTemplateDirective]\n  }],\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  searchbar: [{\n    type: ViewChild,\n    args: [SearchBarComponent]\n  }],\n  optionsList: [{\n    type: ViewChild,\n    args: ['optionsList']\n  }],\n  widgetClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-autocomplete']\n  }, {\n    type: HostBinding,\n    args: ['class.k-header']\n  }],\n  isDisabled: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }],\n  dir: [{\n    type: HostBinding,\n    args: ['attr.dir']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AutoCompleteComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoAutoComplete',\n      providers: [AUTOCOMPLETE_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.autocomplete'\n      }, {\n        provide: FilterableDropDownComponentBase,\n        useExisting: forwardRef(function () {\n          return AutoCompleteComponent;\n        })\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return AutoCompleteComponent;\n        })\n      }],\n      selector: 'kendo-autocomplete',\n      template: \"\\n        <ng-container kendoAutoCompleteLocalizedMessages\\n            i18n-noDataText=\\\"kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\\\"\\n            noDataText=\\\"NO DATA FOUND\\\"\\n\\n            i18n-clearTitle=\\\"kendo.autocomplete.clearTitle|The title of the clear button\\\"\\n            clearTitle=\\\"clear\\\"\\n        >\\n        </ng-container>\\n        <kendo-searchbar #searchbar\\n            [role]=\\\"'combobox'\\\"\\n            [id]=\\\"focusableId\\\"\\n            [listId]=\\\"listBoxId\\\"\\n            [activeDescendant]=\\\"activeDescendant\\\"\\n            [noDataLabel]=\\\"noDataLabel\\\"\\n            [userInput]=\\\"text\\\"\\n            [suggestedText]=\\\"suggestion\\\"\\n            [disabled]=\\\"disabled\\\"\\n            [readonly]=\\\"readonly\\\"\\n            [tabIndex]=\\\"tabIndex\\\"\\n            [popupOpen]=\\\"isOpen\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            (onNavigate)=\\\"handleNavigate($event)\\\"\\n            (valueChange)=\\\"searchBarChange($event)\\\"\\n            (onBlur)=\\\"handleBlur()\\\"\\n            (onFocus)=\\\"handleFocus()\\\"\\n        ></kendo-searchbar>\\n        <span *ngIf=\\\"!loading && !readonly && (clearButton && text?.length)\\\" class=\\\"k-icon k-clear-value k-i-close\\\" [attr.title]=\\\"clearTitle\\\" role=\\\"button\\\" tabindex=\\\"-1\\\" (click)=\\\"clearValue($event)\\\" (mousedown)=\\\"$event.preventDefault()\\\">\\n</span>\\n        <span *ngIf=\\\"loading\\\" class=\\\"k-icon k-i-loading\\\"></span>\\n        <ng-template #popupTemplate>\\n            <!--header template-->\\n            <ng-template *ngIf=\\\"headerTemplate\\\"\\n                [templateContext]=\\\"{\\n                    templateRef: headerTemplate.templateRef\\n                }\\\">\\n            </ng-template>\\n            <!--list-->\\n            <kendo-list\\n                #optionsList\\n                [id]=\\\"listBoxId\\\"\\n                [optionPrefix]=\\\"optionPrefix\\\"\\n                [data]=\\\"data\\\"\\n                [textField]=\\\"valueField\\\"\\n                [valueField]=\\\"valueField\\\"\\n                [template]=\\\"template\\\"\\n                [groupTemplate]=\\\"groupTemplate\\\"\\n                [fixedGroupTemplate]=\\\"fixedGroupTemplate\\\"\\n                [height]=\\\"listHeight\\\"\\n                [show]=\\\"isOpen\\\"\\n                [virtual]=\\\"virtual\\\"\\n                (pageChange)=\\\"pageChange($event)\\\"\\n            >\\n            </kendo-list>\\n            <!--no-data template-->\\n            <div class=\\\"k-nodata\\\" *ngIf=\\\"data.length === 0\\\">\\n                <ng-template [ngIf]=\\\"noDataTemplate\\\"\\n                    [templateContext]=\\\"{\\n                        templateRef: noDataTemplate?.templateRef\\n                    }\\\">\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"!noDataTemplate\\\">\\n                    <div>{{ noDataText }}</div>\\n                </ng-template>\\n            </div>\\n            <!--footer template-->\\n            <ng-template *ngIf=\\\"footerTemplate\\\"\\n                [templateContext]=\\\"{\\n                    templateRef: footerTemplate.templateRef\\n                }\\\">\\n            </ng-template>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"isOpen\\\">\\n            <kendo-resize-sensor (resize)=\\\"onResize()\\\"></kendo-resize-sensor>\\n        </ng-template>\\n        <ng-container #container></ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: DataService\n    }, {\n      type: PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }];\n  }, {\n    highlightFirst: [{\n      type: Input\n    }],\n    focusableId: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-autocomplete']\n    }, {\n      type: HostBinding,\n      args: ['class.k-header']\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    virtual: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    valueField: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    suggest: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar TOUCH_ENABLED = new InjectionToken('dropdowns-touch-enabled');\n/**\n * @hidden\n */\n\n/* tslint:disable:max-line-length */\n\n/* tslint:disable:variable-name */\n\nvar MultiselectMessages = {\n  'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'object': 'Expected values of Object type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\n\n/* tslint:disable:max-line-length */\n\n/* tslint:disable:variable-name */\n\nvar ComboBoxMessages = {\n  'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n  'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-bind-to-arrays-of-complex-data',\n  'noItemHeight': 'Expected virtual.itemHeight of type number.'\n};\n/**\n * @hidden\n */\n\n/* tslint:disable:max-line-length */\n\n/* tslint:disable:variable-name */\n\nvar DropDownListMessages = {\n  'defaultItem': 'defaultItem and data items must be of same type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownListComponent/#toc-defaultitem',\n  'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n  'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n  'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-bind-to-arrays-of-complex-data'\n};\n/* tslint:disable:no-null-keyword */\n\n/**\n * @hidden\n */\n\nvar COMBOBOX_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(function () {\n    return ComboBoxComponent;\n  })\n};\n/**\n * Represents the [Kendo UI ComboBox component for Angular]({% slug overview_combobox %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nvar ComboBoxComponent = /*#__PURE__*/function () {\n  function ComboBoxComponent(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, cdr, renderer, hostElement, touchEnabled) {\n    _classCallCheck(this, ComboBoxComponent);\n\n    this.localization = localization;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.dataService = dataService;\n    this._zone = _zone;\n    this.cdr = cdr;\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.touchEnabled = touchEnabled;\n    this.selected = [];\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Specifies whether the ComboBox allows user-defined values that are not present in the dataset\n     * ([more information and examples]({% slug custom_values_combobox %})).\n     * Defaults to `false`.\n     */\n\n    this.allowCustom = false;\n    /**\n     * A user-defined callback which returns normalized custom values.\n     * Typically used when the data items are different from type `string`.\n     * @param { Any } value - The custom value defined by the user.\n     * @returns { Any }\n     *\n     * @example\n     * ```ts\n     * import { map } from 'rxjs/operators';\n     *\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *   <kendo-combobox\n     *       [allowCustom]=\"true\"\n     *       [data]=\"listItems\"\n     *       [textField]=\"'text'\"\n     *       [valueField]=\"'value'\"\n     *       [valueNormalizer]=\"valueNormalizer\"\n     *       (valueChange)=\"onValueChange($event)\"\n     *   >\n     *   </kendo-combobox>\n     * `\n     * })\n     *\n     * class AppComponent {\n     *   public listItems: Array<{ text: string, value: number }> = [\n     *       { text: \"Small\", value: 1 },\n     *       { text: \"Medium\", value: 2 },\n     *       { text: \"Large\", value: 3 }\n     *   ];\n     *\n     *   public onValueChange(value) {\n     *       console.log(\"valueChange : \", value);\n     *   }\n     *\n     *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n     *      return { ProductID: null, ProductName: text };\n     *   }));\n     *\n     * }\n     * ```\n     */\n\n    this.valueNormalizer = function (text) {\n      return text.pipe(map(function (userInput) {\n        return userInput;\n      }));\n    };\n    /**\n     * The hint that is displayed when the component is empty.\n     *\n     */\n\n\n    this.placeholder = \"\";\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Enables the auto-completion of the text based on the first data item.\n     */\n\n    this.suggest = false;\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Enables the [filtering]({% slug filtering_combobox %}) functionality.\n     * If set to `true`, the component emits the `filterChange` event.\n     */\n\n    this.filterable = false;\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time an item selection is changed\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value\n     * ([see example]({% slug overview_combobox %}#toc-events)).\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the user focuses the ComboBox.\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the ComboBox gets blurred.\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    this.widgetClasses = true;\n    this._isFocused = false;\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n\n    this.onChangeCallback = function (_) {};\n\n    this.onTouchedCallback = function (_) {};\n\n    this._filtering = false;\n    this._text = '';\n    this.filterText = '';\n    this._open = false;\n    this._popupSettings = {\n      animate: true\n    };\n\n    this.popupMouseDownHandler = function (event) {\n      return event.preventDefault();\n    };\n\n    this.customValueSubject = new Subject();\n    this.valueSubject = new Subject();\n    this.clearValueSubject = new Subject();\n    this.selectionSubject = new Subject();\n    this.subs = new Subscription();\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.data = [];\n  }\n\n  _createClass(ComboBoxComponent, [{\n    key: \"togglePopup\",\n\n    /**\n     * @hidden\n     */\n    value: function togglePopup(open) {\n      var isDisabled = this.disabled || this.readonly;\n      var sameState = this.isOpen === open;\n\n      if (isDisabled || sameState) {\n        return;\n      }\n\n      var isDefaultPrevented = this.triggerPopupEvents(open);\n\n      if (!isDefaultPrevented) {\n        this._toggle(open);\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.attachStreams();\n      this.createSelectionStream();\n      this.createValueStream();\n      this.setMessages();\n    }\n  }, {\n    key: \"createValueStream\",\n    value: function createValueStream() {\n      var _this14 = this;\n\n      var valueStream = this.valueSubject.pipe(filter(function (candidate) {\n        var valueFrom = _this14.prop(_this14.valueField, _this14.valuePrimitive);\n\n        var textFrom = _this14.prop(_this14.textField, _this14.valuePrimitive);\n\n        var current = valueFrom(_this14.value);\n        var newValue = valueFrom(candidate);\n        var newText = textFrom(candidate);\n\n        if (!isPresent(_this14.value) && !isPresent(newValue)) {\n          return false;\n        }\n\n        if (isPresent(newText)) {\n          newText = newText.toString();\n        }\n\n        if (current === newValue && _this14.text === newText) {\n          _this14.clearFilter();\n\n          return false;\n        } else {\n          return true;\n        }\n      }), map(function (candidate) {\n        var valueFrom = _this14.prop(_this14.valueField, _this14.valuePrimitive);\n\n        var textFrom = _this14.prop(_this14.textField, _this14.valuePrimitive);\n\n        var newValue = valueFrom(candidate);\n        var newText = textFrom(candidate);\n        return {\n          dataItem: candidate,\n          text: newText,\n          value: _this14.valuePrimitive ? newValue : candidate\n        };\n      }));\n      var customValueStreams = partition(function () {\n        return _this14.allowCustom;\n      })(this.customValueSubject.pipe(throttleTime(300)));\n      var allowCustomValueStream = customValueStreams[0].pipe(tap(function () {\n        _this14.loading = true;\n        _this14.disabled = true;\n\n        _this14.cdr.detectChanges();\n      }), filter(function () {\n        var valueFrom = _this14.prop(_this14.valueField, _this14.valuePrimitive);\n\n        var hasChange = _this14.text !== valueFrom(_this14.value);\n        _this14.loading = hasChange;\n        _this14.disabled = hasChange;\n\n        if (!hasChange) {\n          _this14.clearFilter();\n        }\n\n        return hasChange;\n      }), this.valueNormalizer, map(function (normalizedValue) {\n        return {\n          custom: true,\n          dataItem: normalizedValue,\n          text: _this14.text,\n          value: normalizedValue\n        };\n      }));\n      var disableCustomValueStream = customValueStreams[1].pipe(map(function () {\n        return {\n          custom: true,\n          dataItem: undefined,\n          text: undefined,\n          value: undefined\n        };\n      }));\n      var clearValueStream = this.clearValueSubject.pipe(map(function () {\n        return {\n          dataItem: undefined,\n          text: undefined,\n          value: undefined\n        };\n      }));\n\n      if (this.valueSubscription) {\n        this.valueSubscription.unsubscribe();\n      }\n\n      var merged = merge(valueStream, allowCustomValueStream, disableCustomValueStream, clearValueStream);\n      this.valueSubscription = merged.pipe(catchError(function () {\n        _this14.dataItem = undefined;\n        _this14.value = undefined;\n        _this14.text = undefined;\n        _this14.loading = false;\n        _this14.disabled = false;\n\n        _this14.emitSelectionChange(undefined);\n\n        _this14.emitValueChange();\n\n        _this14.createValueStream();\n\n        return of(null);\n      })).subscribe(function (state) {\n        _this14.dataItem = state.dataItem;\n        _this14.value = state.value;\n        _this14.text = state.text;\n        _this14.loading = false;\n        _this14.disabled = false;\n\n        _this14.clearFilter();\n\n        if (state.custom) {\n          _this14.selectionService.focused = -1;\n        }\n\n        _this14.emitSelectionChange(state.custom ? undefined : _this14.dataItem);\n\n        _this14.emitValueChange();\n      });\n    }\n  }, {\n    key: \"attachStreams\",\n    value: function attachStreams() {\n      var _this15 = this;\n\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.subs.add(this.localization.changes.subscribe(function (_ref3) {\n        var rtl = _ref3.rtl;\n        _this15.direction = rtl ? 'rtl' : 'ltr';\n\n        _this15.setMessages();\n      }));\n      this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.home, this.navigationService.end).pipe(filter(function (event) {\n        return isPresent(event.index);\n      })).subscribe(function (event) {\n        return _this15.navigate(event.index);\n      }));\n      this.subs.add(this.navigationService.open.subscribe(this.handleNavigationOpen.bind(this)));\n      this.subs.add(this.navigationService.close.subscribe(function () {\n        return _this15.togglePopup(false);\n      }));\n      this.subs.add(this.navigationService.esc.subscribe(this.handleEscape.bind(this)));\n      this.subs.add(this.navigationService.enter.pipe(tap(function (event) {\n        if (_this15.isOpen) {\n          event.originalEvent.preventDefault();\n        }\n      })).subscribe(this.handleEnter.bind(this)));\n      this.subs.add(merge(this.selectionService.onChange, this.selectionService.onSelect.pipe(filter(function (_) {\n        return !_this15.isOpen;\n      }))).pipe(tap(function (_) {\n        _this15._filtering = false;\n\n        _this15.togglePopup(false);\n      }), map(function (event) {\n        return _this15.dataService.itemAt(event.indices[0]);\n      })).subscribe(function (dataItem) {\n        _this15.change(dataItem);\n      }));\n      this.subs.add(this.selectionService.onSelect.pipe(filter(function (_) {\n        return _this15.isOpen;\n      }), tap(function (_) {\n        return _this15._filtering = false;\n      }), map(function (event) {\n        return _this15.dataService.itemAt(event.indices[0]);\n      })).subscribe(function (dataItem) {\n        _this15.updateState({\n          dataItem: dataItem\n        });\n\n        _this15.emitSelectionChange(dataItem);\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyPopup();\n      clearTimeout(this.messagesTimeout);\n      this.subs.unsubscribe();\n      [this.valueSubscription, this.selectionSubscription].forEach(function (sub) {\n        return isPresent(sub) && sub.unsubscribe();\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var virtual = this.virtual;\n      var requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n      if (requestInitialData) {\n        this.pageChange({\n          skip: 0,\n          take: virtual.pageSize\n        });\n      }\n\n      if (this.valuePrimitive === undefined) {\n        this.valuePrimitive = this.valueField ? false : true;\n      }\n\n      this.verifySettings(this.value);\n\n      if (isChanged(\"valueNormalizer\", changes)) {\n        this.createValueStream();\n      }\n\n      if (isChanged(\"value\", changes)) {\n        this.createSelectionStream();\n      }\n\n      if (this.valuePrimitive === undefined) {\n        this.valuePrimitive = this.valueField ? false : true;\n      }\n\n      var STATE_PROPS = /(value|textField|valueField|valuePrimitive)/g;\n\n      if (STATE_PROPS.test(Object.keys(changes).join())) {\n        this.setState();\n      }\n    }\n    /**\n     * Focuses the ComboBox.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.disabled) {\n        this.searchbar.focus();\n      }\n    }\n    /**\n     * Blurs the ComboBox.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.disabled) {\n        this.searchbar.blur();\n      }\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to open or close the popup,\n     * the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(open) {\n      var _this16 = this;\n\n      Promise.resolve(null).then(function () {\n        var shouldOpen = isPresent(open) ? open : !_this16._open;\n\n        _this16._toggle(shouldOpen);\n\n        _this16.cdr.markForCheck();\n      });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"reset\",\n\n    /**\n     * Resets the value of the ComboBox.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    value: function reset() {\n      this.value = undefined;\n      this.clearState();\n      this.resetSelection();\n      this.createSelectionStream();\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label\n     * should be rendered in the input when the component is not focused.\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var textEmpty = !isPresent(this.text) || isEmptyString(this.text);\n      var valueEmpty = !isPresent(this.value) || isEmptyString(this.value);\n      return textEmpty && valueEmpty;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearValue\",\n    value: function clearValue(event) {\n      event.stopImmediatePropagation();\n      this.focus();\n      this._filtering = true;\n      this._previousDataItem = undefined;\n      this.selectionService.resetSelection([]);\n      this.clearValueSubject.next();\n      this._filtering = false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.text = \"\";\n      this.value = value === null ? undefined : value;\n      this.setState();\n      this.createSelectionStream();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onResize\",\n\n    /**\n     * @hidden\n     */\n    value: function onResize() {\n      if (this.isOpen) {\n        var popupWrapper = this.popupRef.popupElement;\n        var _this$width3 = this.width,\n            min = _this$width3.min,\n            max = _this$width3.max;\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n      }\n    }\n  }, {\n    key: \"verifySettings\",\n    value: function verifySettings(newValue) {\n      var valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (this.valuePrimitive === true && isPresent(newValue) && typeof newValue === \"object\") {\n        throw new Error(ComboBoxMessages.primitive);\n      }\n\n      if (this.valuePrimitive === false && isPresent(newValue) && typeof newValue !== \"object\") {\n        throw new Error(ComboBoxMessages.object);\n      }\n\n      if (valueOrText) {\n        throw new Error(ComboBoxMessages.textAndValue);\n      }\n\n      if (this.virtual && isNaN(this.virtual.itemHeight)) {\n        throw new Error(ComboBoxMessages.noItemHeight);\n      }\n    }\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      // Filtering in process, do nothing.\n      if (this._filtering) {\n        return;\n      }\n\n      var value = this.value;\n      var valueField = this.valueField;\n      var primitive = this.valuePrimitive;\n      var resolved = this.findDataItem({\n        primitive: primitive,\n        valueField: valueField,\n        value: value\n      });\n\n      if (isPresent(resolved.dataItem)) {\n        this.updateState({\n          dataItem: resolved.dataItem,\n          confirm: true\n        });\n        this.resetSelection(resolved.index);\n      } else if (isPresent(value) && this.allowCustom) {\n        this.updateState({\n          dataItem: value\n        });\n        this.resetSelection(-1);\n      } else if (this._previousDataItem && this.value) {\n        this.updateState({\n          dataItem: this._previousDataItem\n        });\n        this.resetSelection();\n      } else {\n        this.clearState();\n        this.resetSelection(-1);\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref4) {\n      var dataItem = _ref4.dataItem,\n          _ref4$confirm = _ref4.confirm,\n          confirm = _ref4$confirm === void 0 ? false : _ref4$confirm;\n      this.dataItem = dataItem;\n      this.text = this.prop(this.textField, this.valuePrimitive)(dataItem);\n\n      if (confirm) {\n        this._previousDataItem = dataItem;\n      }\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      this.text = undefined;\n      this.dataItem = undefined;\n    }\n  }, {\n    key: \"resetSelection\",\n    value: function resetSelection(index) {\n      var clear = !isPresent(index) || index < 0;\n      this.selectionService.resetSelection(clear ? [] : [index]);\n      this.selectionService.focused = index;\n    }\n  }, {\n    key: \"firstFocusableIndex\",\n    value: function firstFocusableIndex(index) {\n      var maxIndex = this.data.length - 1;\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n      } else {\n        return index;\n      }\n    }\n  }, {\n    key: \"findIndexPredicate\",\n    value: function findIndexPredicate(text) {\n      var _this17 = this;\n\n      if (this.dataService.grouped) {\n        return function (item) {\n          var itemText = _this17.prop(_this17.textField, _this17.valuePrimitive)(item.value);\n\n          itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n          return itemText.startsWith(text.toLowerCase());\n        };\n      } else {\n        return function (item) {\n          var itemText = _this17.prop(_this17.textField, _this17.valuePrimitive)(item);\n\n          itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n          return itemText.startsWith(text.toLowerCase());\n        };\n      }\n    }\n  }, {\n    key: \"prop\",\n    value: function prop(field, usePrimitive) {\n      return function (dataItem) {\n        if (isPresent(dataItem)) {\n          if (usePrimitive) {\n            return field && isObject(dataItem) ? dataItem[field] : dataItem;\n          } else {\n            return dataItem[field];\n          }\n        }\n\n        return null;\n      };\n    }\n  }, {\n    key: \"findDataItem\",\n    value: function findDataItem(_ref5) {\n      var primitive = _ref5.primitive,\n          valueField = _ref5.valueField,\n          value = _ref5.value;\n      var result = {\n        dataItem: null,\n        index: -1\n      };\n      var prop = this.prop(valueField, primitive);\n      var comparer;\n\n      if (this.dataService.grouped) {\n        comparer = function comparer(element) {\n          return prop(element.value) === prop(value);\n        };\n      } else {\n        comparer = function comparer(element) {\n          return prop(element) === prop(value);\n        };\n      }\n\n      var index = this.dataService.findIndex(comparer);\n      result.dataItem = this.dataService.itemAt(index);\n      result.index = index;\n      return result;\n    }\n  }, {\n    key: \"search\",\n    value: function search(text) {\n      var startFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var index;\n\n      if (text.length && this.dataService.itemsCount) {\n        index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n      } else {\n        index = -1;\n      }\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        if (index + 1 < this.dataService.itemsCount) {\n          this.search(text, index + 1);\n        } else {\n          this.selectionService.focus(-1);\n        }\n      } else {\n        this.selectionService.focus(index);\n\n        if (this.suggest) {\n          this.suggestedText = getter(this.dataService.itemAt(index), this.textField);\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"getSuggestion\",\n    value: function getSuggestion() {\n      var hasSelected = !!this.selectionService.selected.length;\n      var shouldSuggest = this.suggest && !this.backspacePressed && this.suggestedText && this.text;\n\n      if (!hasSelected && shouldSuggest && this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase())) {\n        return this.suggestedText;\n      } else {\n        this.suggestedText = undefined;\n      }\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(index) {\n      if (this.dataService.itemsCount === 0) {\n        return;\n      }\n\n      this.text = this.prop(this.textField, this.valuePrimitive)(this.dataService.itemAt(index));\n      this.selectionService.select(index);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(event) {\n      var hasSelected = isPresent(this.selectionService.selected[0]);\n      var focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n      var offset = 0;\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      if (event.keyCode === Keys.home || event.keyCode === Keys.end) {\n        return;\n      }\n\n      if (!hasSelected) {\n        if (event.keyCode === Keys.down) {\n          offset = -1;\n        } else if (event.keyCode === Keys.up) {\n          offset = 1;\n        }\n      }\n\n      var action = this.navigationService.process({\n        current: offset + focused,\n        max: this.dataService.itemsCount - 1,\n        min: 0,\n        originalEvent: event\n      });\n\n      if (action !== NavigationAction.Undefined && action !== NavigationAction.Left && action !== NavigationAction.Right && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter() {\n      var text = this.text;\n      var focused = this.selectionService.focused;\n      var hasFocused = isPresent(focused) && focused !== -1;\n      var previousText = getter(this._previousDataItem, this.textField, this.valuePrimitive) || \"\";\n      var focusedItemText = getter(this.dataService.itemAt(focused), this.textField);\n      var textHasChanged = text !== previousText;\n      this.togglePopup(false);\n      this._filtering = false;\n\n      if (this.allowCustom && textHasChanged) {\n        if (text === focusedItemText || this.useSuggestion()) {\n          this.selectionService.change(focused);\n        } else {\n          this.change(text, true);\n        }\n      }\n\n      if (!this.allowCustom) {\n        if (hasFocused) {\n          this.selectionService.change(focused);\n        } else if (textHasChanged) {\n          this.change(text, true);\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleBlur\",\n    value: function handleBlur() {\n      var _this18 = this;\n\n      this._filtering = false;\n      this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n\n      this.isFocused = false;\n      var valueFrom = this.prop(this.valueField, this.valuePrimitive);\n      var unresolvedSelection = valueFrom(this.dataItem) !== valueFrom(this.value);\n      var currentText = this.searchbar.value;\n      var textFrom = this.prop(this.textField, this.valuePrimitive);\n      var textHasChanged = currentText !== (textFrom(this.dataItem) || '');\n      var valueHasChanged = unresolvedSelection || textHasChanged;\n      var runInZone = valueHasChanged || hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.hostElement.nativeElement);\n\n      if (runInZone) {\n        this._zone.run(function () {\n          if (valueHasChanged) {\n            var lowerCaseMatch = isPresent(_this18.focusedItemText) && _this18.focusedItemText.toLowerCase() === currentText.toLowerCase();\n\n            if (lowerCaseMatch || unresolvedSelection) {\n              _this18.selectionService.change(_this18.selectionService.focused);\n            } else {\n              _this18.change(currentText, true);\n            }\n          }\n\n          _this18.onBlur.emit();\n\n          _this18.onTouchedCallback();\n\n          _this18.togglePopup(false);\n        });\n      } else {\n        this.togglePopup(false);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleEscape\",\n    value: function handleEscape() {\n      this.togglePopup(false); // clear the focus only if the focused item is not selected\n\n      var hasSelected = this.selectionService.selected.length > 0;\n\n      if (!hasSelected) {\n        this.suggestedText = null;\n        this.selectionService.focused = -1;\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNavigationOpen\",\n    value: function handleNavigationOpen() {\n      this.restoreItemFocus();\n      this.togglePopup(true);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"searchBarChange\",\n    value: function searchBarChange(text) {\n      var currentTextLength = this.text ? this.text.length : 0;\n      this.backspacePressed = text.length < currentTextLength ? true : false;\n      this.text = text; // Reset the selection prior to filter. If a match is present, it will be resolved. If a match is not present, it is not needed.\n\n      this.selectionService.resetSelection([]);\n      this.togglePopup(true);\n      this._filtering = true;\n\n      if (this.filterable && this.filterText !== text) {\n        this.filterText = text;\n        this.filterChange.emit(text);\n      } else {\n        this.search(text);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFocus\",\n    value: function handleFocus() {\n      var _this19 = this;\n\n      this.isFocused = true;\n\n      if (hasObservers(this.onFocus)) {\n        this._zone.run(function () {\n          return _this19.onFocus.emit();\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"pageChange\",\n    value: function pageChange(event) {\n      var virtual = this.virtual;\n      virtual.skip = event.skip;\n    }\n  }, {\n    key: \"change\",\n    value: function change(candidate) {\n      var isCustom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (isCustom) {\n        this.customValueSubject.next(candidate);\n      } else {\n        this.valueSubject.next(candidate);\n      }\n    }\n  }, {\n    key: \"emitSelectionChange\",\n    value: function emitSelectionChange(dataItem) {\n      this.selectionSubject.next(dataItem);\n    }\n  }, {\n    key: \"emitValueChange\",\n    value: function emitValueChange() {\n      this.onChangeCallback(this.value);\n      this.valueChange.emit(this.value);\n      this._previousDataItem = this.dataItem;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"selectClick\",\n    value: function selectClick() {\n      if (!this.touchEnabled) {\n        this.searchbar.focus();\n      }\n\n      if (!this.isOpen) {\n        this.restoreItemFocus();\n      }\n\n      this.togglePopup(!this.isOpen);\n    }\n  }, {\n    key: \"restoreItemFocus\",\n\n    /**\n     * Focuses the first match when there's text in the input field, but no focused item.\n     */\n    value: function restoreItemFocus() {\n      var hasFocus = isPresent(this.selectionService.focused) && this.selectionService.focused > -1;\n\n      if (!hasFocus && this.text && this.dataService.itemsCount) {\n        if (this.filterable) {\n          this.selectionService.focused = this.firstFocusableIndex(0);\n        } else {\n          this.search(this.text);\n        }\n      }\n    }\n  }, {\n    key: \"useSuggestion\",\n    value: function useSuggestion() {\n      if (!(this.suggest && isPresent(this.searchbar.value))) {\n        return false;\n      }\n\n      var focusedDataItem = this.dataService.itemAt(this.selectionService.focused);\n      var focusedItemText = this.prop(this.textField, this.valuePrimitive)(focusedDataItem);\n\n      if (!isPresent(focusedItemText)) {\n        return false;\n      }\n\n      return this.searchbar.value.toLowerCase() === focusedItemText.toLowerCase();\n    }\n  }, {\n    key: \"destroyPopup\",\n    value: function destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"createPopup\",\n    value: function createPopup() {\n      var _this20 = this;\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      var horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n      var anchorPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"bottom\"\n      };\n      var popupPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"top\"\n      };\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupClass: this.listContainerClasses,\n        positionMode: 'absolute',\n        anchorAlign: anchorPosition,\n        popupAlign: popupPosition\n      });\n      var popupWrapper = this.popupRef.popupElement;\n      var _this$width4 = this.width,\n          min = _this$width4.min,\n          max = _this$width4.max;\n      popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n      popupWrapper.style.height = this.height;\n      popupWrapper.setAttribute(\"dir\", this.direction);\n      this.popupRef.popupOpen.subscribe(function () {\n        _this20.cdr.detectChanges();\n\n        _this20.optionsList.scrollToItem(_this20.selectionService.focused);\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n        return _this20.togglePopup(false);\n      });\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(open) {\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n  }, {\n    key: \"triggerPopupEvents\",\n    value: function triggerPopupEvents(open) {\n      var eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      return eventArgs.isDefaultPrevented();\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      if (!(this.filterable && this.filterText)) {\n        return;\n      }\n\n      this.filterText = '';\n      this.filterChange.emit(this.filterText);\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages() {\n      var _this21 = this;\n\n      this._zone.runOutsideAngular(function () {\n        clearTimeout(_this21.messagesTimeout);\n        _this21.messagesTimeout = setTimeout(function () {\n          _this21.noDataText = _this21.localization.get('noDataText');\n\n          _this21.cdr.detectChanges();\n        });\n      });\n    }\n  }, {\n    key: \"createSelectionStream\",\n    value: function createSelectionStream() {\n      var _this22 = this;\n\n      if (isPresent(this.selectionSubscription)) {\n        this.selectionSubscription.unsubscribe();\n      }\n\n      this.selectionSubscription = this.selectionSubject.pipe(distinctUntilChanged()).subscribe(function (dataItem) {\n        return _this22.selectionChange.emit(dataItem);\n      });\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      var wrapperOffsetWidth = 0;\n\n      if (isDocumentAvailable()) {\n        wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n      }\n\n      var width = this.popupSettings.width || wrapperOffsetWidth;\n      var minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : \"\".concat(wrapperOffsetWidth, \"px\");\n      var maxWidth = isNaN(width) ? width : \"\".concat(width, \"px\");\n      return {\n        min: minWidth,\n        max: maxWidth\n      };\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      var popupHeight = this.popupSettings.height;\n      return isPresent(popupHeight) ? \"\".concat(popupHeight, \"px\") : 'auto';\n    }\n  }, {\n    key: \"text\",\n    set: function set(text) {\n      this._text = isPresent(text) ? text.toString() : \"\";\n    },\n    get: function get() {\n      return this._text;\n    }\n  }, {\n    key: \"activeDescendant\",\n    get: function get() {\n      if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n        return null;\n      }\n\n      var dataItem = this.dataService.itemAt(this.selectionService.focused);\n      return this.optionPrefix + \"-\" + (dataItem ? getter(dataItem, this.valueField) : \"\");\n    }\n  }, {\n    key: \"noDataLabel\",\n    get: function get() {\n      if (this.data.length === 0) {\n        return this.noDataText;\n      }\n    }\n  }, {\n    key: \"clearTitle\",\n    get: function get() {\n      return this.localization.get('clearTitle');\n    }\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the ComboBox.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this.dataService.data = data || [];\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      this.setState();\n\n      if (this._filtering) {\n        var queryAndDataPresent = this.text.length > 0 && this.dataService.itemsCount > 0;\n        var index = queryAndDataPresent ? this.firstFocusableIndex(0) : -1;\n        this.selectionService.focused = index;\n      }\n\n      if (this.suggest && this.dataService.itemsCount && this.text) {\n        this.suggestedText = getter(this.dataService.itemAt(0), this.textField);\n      }\n    },\n    get: function get() {\n      var virtual = this.virtual;\n\n      if (virtual) {\n        var start = virtual.skip || 0;\n        var end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n        virtual.total = this.dataService.data.length;\n        return this.dataService.data.slice(start, end);\n      }\n\n      return this.dataService.data;\n    }\n    /**\n     * Sets the value of the ComboBox.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the dataset are considered custom values.\n     * > When the `Enter` key is pressed or the component loses focus, custom values get dismissed unless `allowCustom` is set to `true`.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(newValue) {\n      this.verifySettings(newValue);\n      this._value = newValue;\n      this.cdr.markForCheck();\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * Configures the popup of the ComboBox.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_combobox %})). Determines whether the item will be disabled.\n     */\n\n  }, {\n    key: \"itemDisabled\",\n    set: function set(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(\"itemDisabled must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_combobox %}) functionality.\n     */\n\n  }, {\n    key: \"virtual\",\n    set: function set(settings) {\n      this._virtualSettings = normalizeVirtualizationSettings(settings);\n    },\n    get: function get() {\n      return this._virtualSettings;\n    }\n  }, {\n    key: \"clearable\",\n    get: function get() {\n      return this.clearButton;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.direction;\n    }\n  }, {\n    key: \"isFocused\",\n    get: function get() {\n      return this._isFocused;\n    },\n    set: function set(value) {\n      this.renderer[value ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, \"k-state-focused\");\n      this._isFocused = value;\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this._open;\n    }\n  }, {\n    key: \"buttonClasses\",\n    get: function get() {\n      return this.loading ? 'k-i-loading' : this.iconClass || 'k-i-arrow-s';\n    }\n  }, {\n    key: \"listContainerClasses\",\n    get: function get() {\n      var containerClasses = ['k-list-container', 'k-reset'];\n\n      if (this.popupSettings.popupClass) {\n        containerClasses.push(this.popupSettings.popupClass);\n      }\n\n      return containerClasses;\n    }\n  }, {\n    key: \"focusedItemText\",\n    get: function get() {\n      var focused = this.selectionService.focused;\n\n      if (!isPresent(focused) || focused === -1) {\n        return null;\n      }\n\n      var itemText = getter(this.dataService.itemAt(focused), this.textField);\n      return !isPresent(itemText) ? \"\" : itemText.toString();\n    }\n  }]);\n\n  return ComboBoxComponent;\n}();\n\nComboBoxComponent.ɵfac = function ComboBoxComponent_Factory(t) {\n  return new (t || ComboBoxComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(DisabledItemsService), ɵngcc0.ɵɵdirectiveInject(DataService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nComboBoxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ComboBoxComponent,\n  selectors: [[\"kendo-combobox\"]],\n  contentQueries: function ComboBoxComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n    }\n  },\n  viewQuery: function ComboBoxComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c11, true);\n      ɵngcc0.ɵɵviewQuery(SearchBarComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c12, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c18, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function ComboBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.widgetClasses)(\"k-combobox\", ctx.widgetClasses)(\"k-header\", ctx.widgetClasses)(\"k-combobox-clearable\", ctx.clearable);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    allowCustom: \"allowCustom\",\n    valueNormalizer: \"valueNormalizer\",\n    placeholder: \"placeholder\",\n    listHeight: \"listHeight\",\n    suggest: \"suggest\",\n    clearButton: \"clearButton\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    tabindex: \"tabindex\",\n    filterable: \"filterable\",\n    data: \"data\",\n    value: \"value\",\n    popupSettings: \"popupSettings\",\n    itemDisabled: \"itemDisabled\",\n    tabIndex: \"tabIndex\",\n    virtual: \"virtual\",\n    loading: \"loading\",\n    valuePrimitive: \"valuePrimitive\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    iconClass: \"iconClass\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    selectionChange: \"selectionChange\",\n    filterChange: \"filterChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoComboBox\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([COMBOBOX_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.combobox'\n  }, {\n    provide: FilterableDropDownComponentBase,\n    useExisting: forwardRef(function () {\n      return ComboBoxComponent;\n    })\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return ComboBoxComponent;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 19,\n  consts: function consts() {\n    var i18n_19;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.combobox.noDataText\n       */\n      var MSG_EXTERNAL_7708502966028483300$$DIST_FESM2015_INDEX_JS_20 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_19 = MSG_EXTERNAL_7708502966028483300$$DIST_FESM2015_INDEX_JS_20;\n    } else {\n      i18n_19 = $localize(_templateObject3());\n    }\n\n    var i18n_21;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.combobox.clearTitle\n       */\n      var MSG_EXTERNAL_2025597431468961462$$DIST_FESM2015_INDEX_JS_22 = goog.getMsg(\"clear\");\n      i18n_21 = MSG_EXTERNAL_2025597431468961462$$DIST_FESM2015_INDEX_JS_22;\n    } else {\n      i18n_21 = $localize(_templateObject4());\n    }\n\n    return [[\"kendoComboBoxLocalizedMessages\", \"\", 6, \"noDataText\", \"clearTitle\"], [\"noDataText\", i18n_19, \"clearTitle\", i18n_21], [\"unselectable\", \"on\", 1, \"k-dropdown-wrap\", 3, \"ngClass\"], [\"wrapper\", \"\"], [3, \"role\", \"id\", \"listId\", \"activeDescendant\", \"noDataLabel\", \"userInput\", \"suggestedText\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-icon k-clear-value k-i-close\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"click\", \"mousedown\", 4, \"ngIf\"], [\"unselectable\", \"on\", 1, \"k-select\", 3, \"click\", \"mousedown\"], [1, \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-icon\", \"k-clear-value\", \"k-i-close\", 3, \"click\", \"mousedown\"], [4, \"ngIf\"], [3, \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-nodata\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-nodata\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function ComboBoxComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵelementStart(4, \"kendo-searchbar\", 4, 5);\n      ɵngcc0.ɵɵlistener(\"onNavigate\", function ComboBoxComponent_Template_kendo_searchbar_onNavigate_4_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function ComboBoxComponent_Template_kendo_searchbar_valueChange_4_listener($event) {\n        return ctx.searchBarChange($event);\n      })(\"onBlur\", function ComboBoxComponent_Template_kendo_searchbar_onBlur_4_listener() {\n        return ctx.handleBlur();\n      })(\"onFocus\", function ComboBoxComponent_Template_kendo_searchbar_onFocus_4_listener() {\n        return ctx.handleFocus();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, ComboBoxComponent_span_6_Template, 1, 1, \"span\", 6);\n      ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n      ɵngcc0.ɵɵlistener(\"click\", function ComboBoxComponent_Template_span_click_7_listener() {\n        return ctx.selectClick();\n      })(\"mousedown\", function ComboBoxComponent_Template_span_mousedown_7_listener($event) {\n        return $event.preventDefault();\n      });\n      ɵngcc0.ɵɵelement(8, \"span\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, ComboBoxComponent_ng_template_9_Template, 5, 14, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, ComboBoxComponent_ng_template_11_Template, 1, 0, \"ng-template\", 10);\n      ɵngcc0.ɵɵelementContainer(12, null, 11);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(16, _c23, !ctx.disabled, ctx.disabled));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"role\", \"combobox\")(\"id\", ctx.focusableId)(\"listId\", ctx.listBoxId)(\"activeDescendant\", ctx.activeDescendant)(\"noDataLabel\", ctx.noDataLabel)(\"userInput\", ctx.text)(\"suggestedText\", ctx.getSuggestion())(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && (ctx.text == null ? null : ctx.text.length));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, ɵngcc2.NgClass, SearchBarComponent, ɵngcc2.NgIf, ListComponent, TemplateContextDirective, ɵngcc1.ResizeSensorComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nComboBoxComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PopupService\n  }, {\n    type: SelectionService\n  }, {\n    type: NavigationService\n  }, {\n    type: DisabledItemsService\n  }, {\n    type: DataService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }];\n};\n\nComboBoxComponent.propDecorators = {\n  focusableId: [{\n    type: Input\n  }],\n  allowCustom: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  textField: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  valuePrimitive: [{\n    type: Input\n  }],\n  valueNormalizer: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  listHeight: [{\n    type: Input\n  }],\n  iconClass: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  suggest: [{\n    type: Input\n  }],\n  clearButton: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  itemDisabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input,\n    args: [\"tabIndex\"]\n  }],\n  filterable: [{\n    type: Input\n  }],\n  virtual: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  filterChange: [{\n    type: Output\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  template: [{\n    type: ContentChild,\n    args: [ItemTemplateDirective]\n  }],\n  headerTemplate: [{\n    type: ContentChild,\n    args: [HeaderTemplateDirective]\n  }],\n  footerTemplate: [{\n    type: ContentChild,\n    args: [FooterTemplateDirective]\n  }],\n  noDataTemplate: [{\n    type: ContentChild,\n    args: [NoDataTemplateDirective]\n  }],\n  groupTemplate: [{\n    type: ContentChild,\n    args: [GroupTemplateDirective]\n  }],\n  fixedGroupTemplate: [{\n    type: ContentChild,\n    args: [FixedGroupTemplateDirective]\n  }],\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  searchbar: [{\n    type: ViewChild,\n    args: [SearchBarComponent]\n  }],\n  optionsList: [{\n    type: ViewChild,\n    args: ['optionsList']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper', {\n      static: true\n    }]\n  }],\n  widgetClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-combobox']\n  }, {\n    type: HostBinding,\n    args: ['class.k-header']\n  }],\n  clearable: [{\n    type: HostBinding,\n    args: ['class.k-combobox-clearable']\n  }],\n  dir: [{\n    type: HostBinding,\n    args: ['attr.dir']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ComboBoxComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoComboBox',\n      providers: [COMBOBOX_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.combobox'\n      }, {\n        provide: FilterableDropDownComponentBase,\n        useExisting: forwardRef(function () {\n          return ComboBoxComponent;\n        })\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return ComboBoxComponent;\n        })\n      }],\n      selector: 'kendo-combobox',\n      template: \"\\n        <ng-container kendoComboBoxLocalizedMessages\\n            i18n-noDataText=\\\"kendo.combobox.noDataText|The text displayed in the popup when there are no items\\\"\\n            noDataText=\\\"NO DATA FOUND\\\"\\n\\n            i18n-clearTitle=\\\"kendo.combobox.clearTitle|The title of the clear button\\\"\\n            clearTitle=\\\"clear\\\"\\n        >\\n        </ng-container>\\n        <span #wrapper unselectable=\\\"on\\\"\\n            class=\\\"k-dropdown-wrap\\\"\\n            [ngClass]=\\\"{ 'k-state-default': !disabled, 'k-state-disabled': disabled }\\\"\\n        >\\n          <kendo-searchbar #searchbar\\n              [role]=\\\"'combobox'\\\"\\n              [id]=\\\"focusableId\\\"\\n              [listId]=\\\"listBoxId\\\"\\n              [activeDescendant]=\\\"activeDescendant\\\"\\n              [noDataLabel]=\\\"noDataLabel\\\"\\n              [userInput]=\\\"text\\\"\\n              [suggestedText]=\\\"getSuggestion()\\\"\\n              [disabled]=\\\"disabled\\\"\\n              [readonly]=\\\"readonly\\\"\\n              [tabIndex]=\\\"tabIndex\\\"\\n              [popupOpen]=\\\"isOpen\\\"\\n              [placeholder]=\\\"placeholder\\\"\\n              (onNavigate)=\\\"handleNavigate($event)\\\"\\n              (valueChange)=\\\"searchBarChange($event)\\\"\\n              (onBlur)=\\\"handleBlur()\\\"\\n              (onFocus)=\\\"handleFocus()\\\"\\n          ></kendo-searchbar>\\n          <span *ngIf=\\\"!loading && !readonly && (clearButton && text?.length)\\\" class=\\\"k-icon k-clear-value k-i-close\\\" [attr.title]=\\\"clearTitle\\\" role=\\\"button\\\" tabindex=\\\"-1\\\" (click)=\\\"clearValue($event)\\\" (mousedown)=\\\"$event.preventDefault()\\\"></span>\\n          <span unselectable=\\\"on\\\"\\n              class=\\\"k-select\\\"\\n              (click)=\\\"selectClick()\\\"\\n              (mousedown)=\\\"$event.preventDefault()\\\" >\\n              <span class=\\\"k-icon\\\" [ngClass]=\\\"buttonClasses\\\">\\n               </span>\\n          </span>\\n          <ng-template #popupTemplate>\\n              <!--header template-->\\n              <ng-template *ngIf=\\\"headerTemplate\\\"\\n                  [templateContext]=\\\"{\\n                      templateRef: headerTemplate.templateRef\\n                  }\\\">\\n              </ng-template>\\n              <!--list-->\\n              <kendo-list\\n                  #optionsList\\n                  [id]=\\\"listBoxId\\\"\\n                  [optionPrefix]=\\\"optionPrefix\\\"\\n                  [data]=\\\"data\\\"\\n                  [textField]=\\\"textField\\\"\\n                  [valueField]=\\\"valueField\\\"\\n                  [template]=\\\"template\\\"\\n                  [groupTemplate]=\\\"groupTemplate\\\"\\n                  [fixedGroupTemplate]=\\\"fixedGroupTemplate\\\"\\n                  [height]=\\\"listHeight\\\"\\n                  [show]=\\\"isOpen\\\"\\n                  [virtual]=\\\"virtual\\\"\\n                  (pageChange)=\\\"pageChange($event)\\\"\\n              >\\n              </kendo-list>\\n              <!--no-data template-->\\n              <div class=\\\"k-nodata\\\" *ngIf=\\\"data.length === 0\\\">\\n                  <ng-template [ngIf]=\\\"noDataTemplate\\\"\\n                      [templateContext]=\\\"{\\n                          templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\\n                      }\\\">\\n                  </ng-template>\\n                  <ng-template [ngIf]=\\\"!noDataTemplate\\\">\\n                      <div>{{ noDataText }}</div>\\n                  </ng-template>\\n              </div>\\n              <!--footer template-->\\n              <ng-template *ngIf=\\\"footerTemplate\\\"\\n                  [templateContext]=\\\"{\\n                      templateRef: footerTemplate.templateRef\\n                  }\\\">\\n              </ng-template>\\n          </ng-template>\\n        </span>\\n        <ng-template [ngIf]=\\\"isOpen\\\">\\n            <kendo-resize-sensor (resize)=\\\"onResize()\\\"></kendo-resize-sensor>\\n        </ng-template>\\n        <ng-container #container></ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: DataService\n    }, {\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    allowCustom: [{\n      type: Input\n    }],\n    valueNormalizer: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    suggest: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-combobox']\n    }, {\n      type: HostBinding,\n      args: ['class.k-header']\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    virtual: [{\n      type: Input\n    }],\n    clearable: [{\n      type: HostBinding,\n      args: ['class.k-combobox-clearable']\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    loading: [{\n      type: Input\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper', {\n        static: true\n      }]\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the selected value of the DropDownList\n * ([see example]({% slug templates_ddl %}#toc-value-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `ValueTemplate` directive can only be used with the DropDownList component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *    <ng-template kendoDropDownListValueTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar ValueTemplateDirective = function ValueTemplateDirective(templateRef) {\n  _classCallCheck(this, ValueTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nValueTemplateDirective.ɵfac = function ValueTemplateDirective_Factory(t) {\n  return new (t || ValueTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nValueTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ValueTemplateDirective,\n  selectors: [[\"\", \"kendoDropDownListValueTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nValueTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ValueTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownListValueTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * @hidden\n */\n\n\nvar DROPDOWNLIST_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(function () {\n    return DropDownListComponent;\n  })\n};\n/**\n * Represents the [Kendo UI DropDownList component for Angular]({% slug overview_ddl %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nvar DropDownListComponent = /*#__PURE__*/function () {\n  function DropDownListComponent(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, renderer, hostElement, cdr, touchEnabled) {\n    _classCallCheck(this, DropDownListComponent);\n\n    this.localization = localization;\n    this.popupService = popupService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.dataService = dataService;\n    this._zone = _zone;\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this.cdr = cdr;\n    this.touchEnabled = touchEnabled;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Sets the height of the options list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of options and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Enables the [filtering]({% slug filtering_ddl %}) functionality of the DropDownList.\n     */\n\n    this.filterable = false;\n    /**\n     * Enables a case-insensitive search. When filtration is disabled, use this option.\n     */\n\n    this.ignoreCase = true;\n    /**\n     * Sets the delay before an item search is performed. When filtration is disabled, use this option.\n     */\n\n    this.delay = 500;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Fires each time the value is changed ([see example]({% slug overview_ddl %}#toc-events)).\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the user types in the input field\n     * ([see example]({% slug overview_ddl %}#toc-events)).\n     * You can filter the source based on the passed filtration value.\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the item selection is changed\n     * ([see example]({% slug overview_ddl %}#toc-events)).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the user focuses the DropDownList.\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the DropDownList gets blurred.\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    this.widgetClasses = true;\n    this.groupIndices = [];\n    this.listBoxId = guid();\n    this.optionPrefix = guid();\n    this.filterText = \"\";\n    this._isFocused = false;\n\n    this.onTouchedCallback = function (_) {};\n\n    this.onChangeCallback = function (_) {};\n\n    this.word = \"\";\n    this.last = \"\";\n    this.filterFocused = new EventEmitter();\n    this.filterBlurred = new EventEmitter();\n    this.wrapperFocused = new EventEmitter();\n    this.wrapperBlurred = new EventEmitter();\n    this.selectionSubscription = new Subscription();\n    this._open = false;\n    this._popupSettings = {\n      animate: true\n    };\n    this.direction = localization.rtl ? 'rtl' : 'ltr';\n    this.data = [];\n    this.subscribeEvents();\n    this.popupMouseDownHandler = this.onMouseDown.bind(this);\n  }\n\n  _createClass(DropDownListComponent, [{\n    key: \"blurComponent\",\n\n    /**\n     * @hidden\n     */\n    value: function blurComponent() {\n      this.wrapperBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"blurFilterInput\",\n    value: function blurFilterInput() {\n      this.filterBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"focusComponent\",\n    value: function focusComponent() {\n      var _this23 = this;\n\n      this.wrapperFocused.emit();\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n\n        if (hasObservers(this.onFocus)) {\n          this._zone.run(function () {\n            _this23.onFocus.emit();\n          });\n        }\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"keydown\",\n    value: function keydown(event) {\n      var firstIndex = isPresent(this.defaultItem) ? -1 : 0;\n      var focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(firstIndex) : this.selectionService.focused;\n      var offset = 0;\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      var isHomeEnd = event.keyCode === Keys.home || event.keyCode === Keys.end;\n      var isFilterFocused = this.filterable && this.isFocused && this.isOpen;\n\n      if (isFilterFocused && isHomeEnd) {\n        return;\n      }\n\n      var hasSelected = isPresent(this.selectionService.selected[0]);\n      var focusedItemNotSelected = isPresent(this.selectionService.focused) && !this.selectionService.isSelected(this.selectionService.focused);\n\n      if (!hasSelected || focusedItemNotSelected) {\n        if (event.keyCode === Keys.down || event.keyCode === Keys.right) {\n          offset = -1;\n        } else if (event.keyCode === Keys.up || event.keyCode === Keys.left) {\n          offset = 1;\n        }\n      }\n\n      var eventData = event;\n      var action = this.navigationService.process({\n        current: focused + offset,\n        max: this.dataService.itemsCount - 1,\n        min: this.defaultItem ? -1 : 0,\n        originalEvent: eventData\n      });\n      var leftRightKeys = action === NavigationAction.Left || action === NavigationAction.Right;\n\n      if (action !== NavigationAction.Undefined && action !== NavigationAction.Tab && action !== NavigationAction.Backspace && action !== NavigationAction.Delete && !(leftRightKeys && this.filterable) && action !== NavigationAction.Enter //enter when popup is opened is handled before `handleEnter`\n      ) {\n          eventData.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"keypress\",\n    value: function keypress(event) {\n      if (this.disabled || this.readonly || this.filterable) {\n        return;\n      }\n\n      this.onKeyPress(event);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.focus();\n      this.togglePopup(!this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onResize\",\n    value: function onResize() {\n      if (this._open) {\n        var popupWrapper = this.popupRef.popupElement;\n        var _this$width5 = this.width,\n            min = _this$width5.min,\n            max = _this$width5.max;\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this24 = this;\n\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n      this.localizationChangesSubscription = this.localization.changes.subscribe(function (_ref6) {\n        var rtl = _ref6.rtl;\n        _this24.direction = rtl ? 'rtl' : 'ltr';\n\n        _this24.setMessages();\n      });\n      this.setMessages();\n      this.assignAriaDescribedBy();\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      var value = this.value;\n      return !(value === 0 || value === false || value || this.defaultItem);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onFilterFocus\",\n    value: function onFilterFocus() {\n      this.filterFocused.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroyPopup();\n      this.unsubscribeEvents();\n      clearTimeout(this.messagesTimeout);\n\n      if (this.localizationChangesSubscription) {\n        this.localizationChangesSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_changes) {\n      var virtual = this.virtual;\n\n      var requestInitialData = virtual && _changes.data && _changes.data.isFirstChange();\n\n      if (requestInitialData) {\n        this.pageChange({\n          skip: 0,\n          take: virtual.pageSize\n        });\n      }\n\n      if (this.valuePrimitive === undefined) {\n        this.valuePrimitive = this.valueField ? false : true;\n      }\n\n      if (_changes.hasOwnProperty(\"value\")) {\n        this.verifySettings(_changes.value.currentValue);\n\n        if (!isPresent(this.value)) {\n          this._previousDataItem = undefined;\n        }\n      }\n\n      if (_changes.hasOwnProperty(\"defaultItem\")) {\n        this.disabledItemsService.defaultItem = this.defaultItem;\n      }\n\n      var STATE_PROPS = /(value|textField|valueField|valuePrimitive|defaultItem|itemDisabled)/g;\n\n      if (STATE_PROPS.test(Object.keys(_changes).join())) {\n        this.setState();\n      }\n    }\n    /**\n     * Focuses the DropDownList.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (!this.disabled) {\n        this.wrapper.nativeElement.focus();\n      }\n    }\n    /**\n     * Blurs the DropDownList.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.disabled) {\n        this.wrapper.nativeElement.blur();\n      }\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_ddl %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(open) {\n      var _this25 = this;\n\n      // The Promise is required to open the popup on load.\n      // Otherwise, the \"Expression has changed...\" type error will be thrown.\n      Promise.resolve(null).then(function () {\n        var shouldOpen = isPresent(open) ? open : !_this25._open;\n\n        _this25._toggle(shouldOpen);\n      });\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(open) {\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n  }, {\n    key: \"triggerPopupEvents\",\n    value: function triggerPopupEvents(open) {\n      var eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      return eventArgs.isDefaultPrevented();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(open) {\n      var isDisabled = this.disabled || this.readonly;\n      var sameState = this.isOpen === open;\n\n      if (isDisabled || sameState) {\n        return;\n      }\n\n      var isDefaultPrevented = this.triggerPopupEvents(open);\n\n      if (!isDefaultPrevented) {\n        if (!open && this.filterable && this.isFocused) {\n          this.focus();\n        }\n\n        this._toggle(open);\n      }\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"reset\",\n\n    /**\n     * Resets the value of the DropDownList.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    value: function reset() {\n      this._previousDataItem = undefined;\n      this.value = undefined;\n      this.setState();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.verifySettings(value);\n      this.value = value === null ? undefined : value;\n\n      if (!isPresent(value)) {\n        this._previousDataItem = undefined;\n      }\n\n      this.setState();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"getText\",\n\n    /**\n     * @hidden\n     */\n    value: function getText() {\n      return this.text;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"getDefaultItemText\",\n    value: function getDefaultItemText() {\n      return getter(this.defaultItem, this.textField);\n    }\n  }, {\n    key: \"createPopup\",\n    value: function createPopup() {\n      var _this26 = this;\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      var horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n      var anchorPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"bottom\"\n      };\n      var popupPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"top\"\n      };\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        anchorAlign: anchorPosition,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupAlign: popupPosition,\n        popupClass: this.listContainerClasses,\n        positionMode: 'absolute'\n      });\n      var popupWrapper = this.popupRef.popupElement;\n      var _this$width6 = this.width,\n          min = _this$width6.min,\n          max = _this$width6.max;\n      popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n      popupWrapper.style.height = this.height;\n      popupWrapper.setAttribute(\"dir\", this.direction);\n      this.popupRef.popupOpen.subscribe(function () {\n        _this26.cdr.detectChanges();\n\n        _this26.optionsList.scrollToItem(_this26.selectionService.focused);\n      });\n\n      if (!this.filterable) {\n        this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n          return _this26.togglePopup(false);\n        });\n      }\n    }\n  }, {\n    key: \"destroyPopup\",\n    value: function destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(_ref7) {\n      var dataItem = _ref7.dataItem,\n          _ref7$confirm = _ref7.confirm,\n          confirm = _ref7$confirm === void 0 ? false : _ref7$confirm;\n      this.dataItem = dataItem;\n      this.text = this.prop(this.textField, this.valuePrimitive)(dataItem);\n\n      if (confirm) {\n        this._previousDataItem = dataItem;\n      }\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      this.text = undefined;\n      this.dataItem = undefined;\n    }\n  }, {\n    key: \"resetSelection\",\n    value: function resetSelection(index) {\n      var clear = !isPresent(index);\n      this.selectionService.resetSelection(clear ? [] : [index]);\n      this.selectionService.focused = clear ? this.firstFocusableIndex(0) : index;\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(_ref8) {\n      var dataItem = _ref8.dataItem;\n      this.updateState({\n        dataItem: dataItem\n      });\n      this.selectionChange.emit(dataItem); // reassigning the value label ID as aria-deascibedby forces firefox/nvda, forefox/jaws to read\n      // the new value when the popup is closed and the value is changed with the arrow keys (up/down)\n\n      this.assignAriaDescribedBy();\n    }\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this27 = this;\n\n      if (!isDocumentAvailable()) {\n        return;\n      } // Item selection when the popup is open.\n\n\n      this.selectionSubscription.add(this.selectionService.onSelect.pipe(filter(function (_) {\n        return _this27.isOpen;\n      }), map(this.itemFromEvent.bind(this))).subscribe(this.onSelectionChange.bind(this))); // Item selection when the popup is closed | clicked | enter, and so on.\n\n      this.selectionSubscription.add(merge(this.selectionService.onSelect.pipe(filter(function (_) {\n        return !_this27.isOpen;\n      })), this.selectionService.onChange).pipe(map(this.itemFromEvent.bind(this)), tap(function (_) {\n        return _this27.togglePopup(false);\n      })).subscribe(function (_ref9) {\n        var dataItem = _ref9.dataItem,\n            newValue = _ref9.value,\n            newSelection = _ref9.newSelection;\n\n        if (newSelection) {\n          _this27.onSelectionChange({\n            dataItem: dataItem\n          });\n        }\n\n        var shouldUsePrevious = !isPresent(dataItem) && _this27._previousDataItem;\n\n        var shouldUseNewValue = newValue !== _this27.prop(_this27.valueField, _this27.valuePrimitive)(_this27.value);\n\n        if (shouldUsePrevious) {\n          _this27.updateState({\n            dataItem: _this27._previousDataItem\n          });\n\n          _this27.resetSelection();\n        } else if (shouldUseNewValue) {\n          _this27.value = _this27.valuePrimitive ? newValue : dataItem;\n          _this27._previousDataItem = dataItem;\n\n          _this27.emitChange(_this27.value);\n        }\n\n        _this27.clearFilter();\n      }));\n      this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down, this.navigationService.left.pipe(skipWhile(function () {\n        return _this27.filterable;\n      })), this.navigationService.right.pipe(skipWhile(function () {\n        return _this27.filterable;\n      })), this.navigationService.home, this.navigationService.end).pipe(filter(function (event) {\n        return !isNaN(event.index);\n      })).subscribe(function (event) {\n        return _this27.selectionService.select(event.index);\n      });\n      this.openSubscription = this.navigationService.open.subscribe(function () {\n        return _this27.togglePopup(true);\n      });\n      this.closeSubscription = this.navigationService.close.subscribe(function () {\n        _this27.togglePopup(false);\n\n        _this27.focus();\n      });\n      this.enterSubscription = this.navigationService.enter.pipe(tap(function (event) {\n        return event.originalEvent.preventDefault();\n      })).subscribe(this.handleEnter.bind(this));\n      this.escSubscription = this.navigationService.esc.subscribe(this.handleEscape.bind(this));\n      this.filterBlurredSubscription = this.filterBlurred.pipe(concatMap(function () {\n        return interval(10).pipe(take(1), takeUntil(_this27.wrapperFocused));\n      })).subscribe(function () {\n        _this27.wrapperBlurred.emit();\n      });\n\n      this._zone.runOutsideAngular(function () {\n        _this27.componentBlurredSubscription = merge(_this27.wrapperBlurred.pipe(concatMap(function () {\n          return interval(10).pipe(take(1), takeUntil(_this27.filterFocused));\n        })), _this27.navigationService.tab).pipe(tap(function (event) {\n          return event instanceof NavigationEvent && _this27.focus();\n        }), filter(function () {\n          return _this27.isFocused;\n        })).subscribe(function () {\n          return _this27.componentBlur();\n        });\n      });\n    }\n  }, {\n    key: \"unsubscribeEvents\",\n    value: function unsubscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.navigationSubscription.unsubscribe();\n      this.openSubscription.unsubscribe();\n      this.closeSubscription.unsubscribe();\n      this.enterSubscription.unsubscribe();\n      this.escSubscription.unsubscribe();\n      this.componentBlurredSubscription.unsubscribe();\n      this.filterBlurredSubscription.unsubscribe();\n\n      if (this.selectionSubscription) {\n        this.selectionSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"itemFromEvent\",\n    value: function itemFromEvent(event) {\n      var index = event.indices[0];\n      var dataItem = this.dataService.itemAt(index);\n      dataItem = isPresent(dataItem) ? dataItem : this.currentOrDefault(index);\n      var value = this.prop(this.valueField, this.valuePrimitive)(dataItem);\n      var newSelection = event.newSelection;\n      return {\n        dataItem: dataItem,\n        index: index,\n        newSelection: newSelection,\n        value: value\n      };\n    }\n  }, {\n    key: \"currentOrDefault\",\n    value: function currentOrDefault(selectedIndex) {\n      var defaultItemIndex = -1;\n\n      if (isPresent(this.dataItem) && selectedIndex !== defaultItemIndex) {\n        return this.dataItem;\n      } else {\n        return this.defaultItem;\n      }\n    }\n  }, {\n    key: \"firstFocusableIndex\",\n    value: function firstFocusableIndex(index) {\n      var maxIndex = this.dataService.itemsCount - 1;\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        return index < maxIndex ? this.firstFocusableIndex(index + 1) : undefined;\n      } else {\n        return index;\n      }\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter() {\n      if (this.isOpen) {\n        this.selectionService.change(this.selectionService.focused);\n        this.focus();\n      } else {\n        this.togglePopup(true);\n      }\n    }\n  }, {\n    key: \"handleEscape\",\n    value: function handleEscape() {\n      if (isPresent(this.selectionService.selected[0])) {\n        this.selectionService.change(this.selectionService.selected[0]);\n      } else {\n        this.togglePopup(false);\n        this.clearFilter();\n      }\n\n      this.focus();\n    }\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      if (!(this.filterable && this.filterText)) {\n        return;\n      }\n\n      this.filterText = \"\";\n      this.cdr.markForCheck();\n      this.filterChange.emit(this.filterText);\n    }\n  }, {\n    key: \"verifySettings\",\n    value: function verifySettings(newValue) {\n      var valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n      if (!isDevMode()) {\n        return;\n      }\n\n      if (this.defaultItem && this.valueField && typeof this.defaultItem !== \"object\") {\n        throw new Error(DropDownListMessages.defaultItem);\n      }\n\n      if (this.valuePrimitive === true && isPresent(newValue) && typeof newValue === \"object\") {\n        throw new Error(DropDownListMessages.primitive);\n      }\n\n      if (this.valuePrimitive === false && isPresent(newValue) && typeof newValue !== \"object\") {\n        throw new Error(DropDownListMessages.object);\n      }\n\n      if (valueOrText) {\n        throw new Error(DropDownListMessages.textAndValue);\n      }\n    }\n  }, {\n    key: \"componentBlur\",\n    value: function componentBlur() {\n      var _this28 = this;\n\n      this.isFocused = false;\n      var valueFrom = this.prop(this.valueField, this.valuePrimitive);\n      var selectionPresent = isPresent(this.selectionService.selected[0]);\n      var valueHasChanged = selectionPresent && valueFrom(this.value) !== valueFrom(this.dataService.itemAt(this.selectionService.selected[0]));\n\n      if (valueHasChanged || hasObservers(this.close) || hasObservers(this.onBlur) || hasObservers(this.filterChange) || isUntouched(this.hostElement.nativeElement)) {\n        this._zone.run(function () {\n          if (valueHasChanged) {\n            _this28.selectionService.change(_this28.selectionService.selected[0]);\n          }\n\n          _this28.togglePopup(false);\n\n          _this28.clearFilter();\n\n          _this28.onBlur.emit();\n\n          _this28.onTouchedCallback();\n        });\n      } else {\n        this.togglePopup(false);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      var tagName = event.target.tagName.toLowerCase();\n\n      if (tagName !== \"input\") {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      if (event.which === 0 || event.keyCode === Keys.enter) {\n        return;\n      }\n\n      var character = String.fromCharCode(event.charCode || event.keyCode);\n\n      if (this.ignoreCase) {\n        character = character.toLowerCase();\n      }\n\n      if (character === \" \") {\n        event.preventDefault();\n      }\n\n      this.word += character;\n      this.last = character;\n      this.search();\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      var _this29 = this;\n\n      clearTimeout(this.typingTimeout);\n\n      if (!this.filterable) {\n        this.typingTimeout = setTimeout(function () {\n          _this29.word = \"\";\n        }, this.delay);\n        this.selectNext();\n      }\n    }\n  }, {\n    key: \"selectNext\",\n    value: function selectNext() {\n      var _this30 = this;\n\n      var data = this.dataService.filter(function (item) {\n        return isPresent(item) && !item.header && !_this30.disabledItemsService.isItemDisabled(item);\n      }).map(function (item) {\n        if (_this30.dataService.grouped) {\n          return {\n            item: item.value,\n            itemIndex: item.offsetIndex\n          };\n        }\n\n        return {\n          item: item,\n          itemIndex: _this30.dataService.indexOf(item)\n        };\n      });\n      var isInLoop = sameCharsOnly(this.word, this.last);\n      var dataLength = data.length;\n      var hasSelected = !isNaN(this.selectionService.selected[0]);\n      var startIndex = !hasSelected ? 0 : this.selectionService.selected[0];\n      var text, index, defaultItem;\n\n      if (this.defaultItem && !this.disabledItemsService.isItemDisabled(this.defaultItem)) {\n        defaultItem = {\n          item: this.defaultItem,\n          itemIndex: -1\n        };\n        dataLength += 1;\n        startIndex += 1;\n      }\n\n      startIndex += isInLoop && hasSelected ? 1 : 0;\n      data = shuffleData(data, startIndex, defaultItem);\n      index = 0;\n\n      for (; index < dataLength; index++) {\n        text = getter(data[index].item, this.textField);\n        var loopMatch = Boolean(isInLoop && matchText(text, this.last, this.ignoreCase));\n        var nextMatch = Boolean(matchText(text, this.word, this.ignoreCase));\n\n        if (loopMatch || nextMatch) {\n          index = data[index].itemIndex;\n          break;\n        }\n      }\n\n      if (index !== dataLength) {\n        this.navigate(index);\n      }\n    }\n  }, {\n    key: \"emitChange\",\n    value: function emitChange(value) {\n      this.onChangeCallback(value);\n      this.valueChange.emit(value);\n    }\n  }, {\n    key: \"navigate\",\n    value: function navigate(index) {\n      this.selectionService.select(index);\n    }\n  }, {\n    key: \"prop\",\n    value: function prop(field, usePrimitive) {\n      return function (dataItem) {\n        if (isPresent(dataItem)) {\n          if (usePrimitive) {\n            return field && isObject(dataItem) ? dataItem[field] : dataItem;\n          } else {\n            return dataItem[field];\n          }\n        }\n\n        return null;\n      };\n    }\n  }, {\n    key: \"findDataItem\",\n    value: function findDataItem(_ref10) {\n      var primitive = _ref10.primitive,\n          valueField = _ref10.valueField,\n          value = _ref10.value;\n      var result = {\n        dataItem: null,\n        index: -1\n      };\n      var prop = this.prop(valueField, primitive);\n      var comparer;\n\n      if (this.dataService.grouped) {\n        comparer = function comparer(element) {\n          return prop(element.value) === prop(value);\n        };\n      } else {\n        comparer = function comparer(element) {\n          return prop(element) === prop(value);\n        };\n      }\n\n      var index = this.dataService.findIndex(comparer);\n      result.dataItem = this.dataService.itemAt(index);\n      result.index = index;\n      return result;\n    }\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      var value = this.value;\n      var valueField = this.valueField;\n      var textField = this.textField;\n      var primitive = this.valuePrimitive;\n\n      if (this.defaultItem) {\n        var defaultValue = this.prop(valueField, primitive)(this.defaultItem);\n        var currentValue = this.prop(valueField, primitive)(value);\n\n        if (!isPresent(value) || currentValue === defaultValue) {\n          this.updateState({\n            dataItem: this.defaultItem,\n            confirm: true\n          });\n          this.resetSelection(-1);\n\n          if (this.filterable && this.filterText && this.dataService.itemsCount) {\n            this.selectionService.focused = this.firstFocusableIndex(0);\n          }\n\n          return;\n        }\n      }\n\n      var resolved = this.findDataItem({\n        primitive: primitive,\n        valueField: valueField,\n        value: value\n      }); // The data and value are of same shape,\n      // for example, value: 'foo', data: ['foo', 'bar']\n      // or value: { value: 1, text: 'foo' }, data: [{ value: 1, text: 'foo' }].\n\n      var ofSameType = !(primitive && textField);\n\n      if (resolved.dataItem) {\n        this.updateState({\n          dataItem: resolved.dataItem,\n          confirm: true\n        });\n        this.resetSelection(resolved.index);\n      } else if (isPresent(value) && ofSameType) {\n        this.updateState({\n          dataItem: value\n        });\n        this.resetSelection();\n      } else if (this._previousDataItem) {\n        this.updateState({\n          dataItem: this._previousDataItem\n        });\n        this.resetSelection();\n      } else {\n        this.clearState();\n        this.resetSelection();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(event) {\n      this.filterChange.emit(event.target.value);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"pageChange\",\n    value: function pageChange(event) {\n      var virtual = this.virtual;\n      virtual.skip = event.skip;\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages() {\n      var _this31 = this;\n\n      this._zone.runOutsideAngular(function () {\n        clearTimeout(_this31.messagesTimeout);\n        _this31.messagesTimeout = setTimeout(function () {\n          _this31.noDataText = _this31.localization.get('noDataText');\n\n          _this31.cdr.detectChanges();\n        });\n      });\n    }\n  }, {\n    key: \"assignAriaDescribedBy\",\n    value: function assignAriaDescribedBy() {\n      var currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || '';\n      var trimmed = currentValue.replace(this.valueLabelId, '').trim(); // reset the value label ID to force readers to read the new value\n\n      this.valueLabelId = guid(); // add to the current value - don't replace it\n\n      var newValue = \"\".concat(this.valueLabelId, \" \").concat(trimmed).trim();\n      this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      var wrapperWidth = isDocumentAvailable() ? this.wrapper.nativeElement.offsetWidth : 0;\n      var width = this.popupSettings.width || wrapperWidth;\n      var minWidth = isNaN(wrapperWidth) ? wrapperWidth : \"\".concat(wrapperWidth, \"px\");\n      var maxWidth = isNaN(width) ? width : \"\".concat(width, \"px\");\n      return {\n        min: minWidth,\n        max: maxWidth\n      };\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      var popupHeight = this.popupSettings.height;\n      return isPresent(popupHeight) ? \"\".concat(popupHeight, \"px\") : 'auto';\n    }\n  }, {\n    key: \"widgetTabIndex\",\n    get: function get() {\n      if (this.disabled) {\n        return undefined;\n      }\n\n      var providedTabIndex = Number(this.tabIndex);\n      var defaultTabIndex = 0;\n      return !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n    }\n  }, {\n    key: \"ariaExpanded\",\n    get: function get() {\n      return this.isOpen;\n    }\n  }, {\n    key: \"ariaOwns\",\n    get: function get() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      return this.listBoxId;\n    }\n  }, {\n    key: \"ariaActivedescendant\",\n    get: function get() {\n      if (!isPresent(this.dataItem)) {\n        return;\n      }\n\n      return this.optionPrefix + \"-\" + getter(this.dataItem, this.valueField);\n    }\n  }, {\n    key: \"noDataLabel\",\n    get: function get() {\n      if (this.dataService.itemsCount === 0) {\n        return this.noDataText;\n      }\n    }\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the DropDownList.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this.dataService.data = data || [];\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      this.setState();\n    },\n    get: function get() {\n      var virtual = this.virtual;\n\n      if (virtual) {\n        var start = virtual.skip || 0;\n        var end = start + virtual.pageSize; // Use length instead of itemsCount because of the grouping.\n\n        virtual.total = this.dataService.data.length;\n        return this.dataService.data.slice(start, end);\n      }\n\n      return this.dataService.data;\n    }\n    /**\n     * Sets the value of the DropDownList.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(newValue) {\n      this._value = newValue;\n      this.cdr.markForCheck();\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * Configures the popup of the DropDownList.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_ddl %})). Determines whether the item will be disabled.\n     */\n\n  }, {\n    key: \"itemDisabled\",\n    set: function set(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(\"itemDisabled must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_ddl %}) functionality.\n     */\n\n  }, {\n    key: \"virtual\",\n    set: function set(settings) {\n      this._virtualSettings = normalizeVirtualizationSettings(settings);\n    },\n    get: function get() {\n      return this._virtualSettings;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.direction;\n    }\n  }, {\n    key: \"isFocused\",\n    set: function set(isFocused) {\n      this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-state-focused');\n      this._isFocused = isFocused;\n    },\n    get: function get() {\n      return this._isFocused;\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this._open;\n    }\n  }, {\n    key: \"buttonClasses\",\n    get: function get() {\n      return this.loading ? 'k-i-loading' : this.iconClass || 'k-i-arrow-s';\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"listContainerClasses\",\n    get: function get() {\n      var containerClasses = ['k-list-container', 'k-reset'];\n\n      if (this.popupSettings.popupClass) {\n        containerClasses.push(this.popupSettings.popupClass);\n      }\n\n      return containerClasses;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isDisabledDefaultItem\",\n    get: function get() {\n      return this.disabledItemsService.isItemDisabled(this.defaultItem);\n    }\n  }]);\n\n  return DropDownListComponent;\n}();\n\nDropDownListComponent.ɵfac = function DropDownListComponent_Factory(t) {\n  return new (t || DropDownListComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(DisabledItemsService), ɵngcc0.ɵɵdirectiveInject(DataService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nDropDownListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DropDownListComponent,\n  selectors: [[\"kendo-dropdownlist\"]],\n  contentQueries: function DropDownListComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ValueTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.itemTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.valueTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n    }\n  },\n  viewQuery: function DropDownListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(_c11, true);\n      ɵngcc0.ɵɵstaticViewQuery(_c18, true);\n      ɵngcc0.ɵɵviewQuery(_c12, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 7,\n  hostBindings: function DropDownListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.widgetClasses)(\"k-dropdown\", ctx.widgetClasses)(\"k-header\", ctx.widgetClasses);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    listHeight: \"listHeight\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    filterable: \"filterable\",\n    ignoreCase: \"ignoreCase\",\n    delay: \"delay\",\n    tabindex: \"tabindex\",\n    data: \"data\",\n    value: \"value\",\n    popupSettings: \"popupSettings\",\n    itemDisabled: \"itemDisabled\",\n    virtual: \"virtual\",\n    tabIndex: \"tabIndex\",\n    valuePrimitive: \"valuePrimitive\",\n    iconClass: \"iconClass\",\n    loading: \"loading\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    defaultItem: \"defaultItem\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    filterChange: \"filterChange\",\n    selectionChange: \"selectionChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\"\n  },\n  exportAs: [\"kendoDropDownList\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([DROPDOWNLIST_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.dropdownlist'\n  }, {\n    provide: FilterableDropDownComponentBase,\n    useExisting: forwardRef(function () {\n      return DropDownListComponent;\n    })\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return DropDownListComponent;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 24,\n  consts: function consts() {\n    var i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.dropdownlist.noDataText\n       */\n      var MSG_EXTERNAL_8289552890585138350$$DIST_FESM2015_INDEX_JS_25 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_24 = MSG_EXTERNAL_8289552890585138350$$DIST_FESM2015_INDEX_JS_25;\n    } else {\n      i18n_24 = $localize(_templateObject5());\n    }\n\n    return [[\"kendoDropDownListLocalizedMessages\", \"\", 6, \"noDataText\"], [\"noDataText\", i18n_24], [\"unselectable\", \"on\", \"role\", \"listbox\", \"aria-haspopup\", \"listbox\", 3, \"id\", \"ngClass\", \"kendoEventsOutsideAngular\", \"scope\", \"keydown\", \"keypress\", \"click\"], [\"wrapper\", \"\"], [\"unselectable\", \"on\", 1, \"k-input\", 3, \"id\"], [4, \"ngIf\"], [3, \"ngIf\"], [\"unselectable\", \"on\", 1, \"k-select\"], [\"unselectable\", \"on\", 1, \"k-icon\", 3, \"ngClass\"], [\"popupTemplate\", \"\"], [\"container\", \"\"], [3, \"templateContext\"], [3, \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"height\", \"show\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-nodata\", 4, \"ngIf\"], [1, \"k-list-filter\", 3, \"click\"], [\"tabindex\", \"-1\", 1, \"k-textbox\", 3, \"filterInput\", \"dir\", \"ngModel\", \"ngModelChange\", \"keydown\", \"input\", \"focus\", \"blur\"], [\"unselectable\", \"on\", 1, \"k-icon\", \"k-i-search\"], [\"kendoDropDownsSelectable\", \"\", 1, \"k-list-optionlabel\", 3, \"ngClass\", \"index\"], [1, \"k-nodata\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function DropDownListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"span\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"keydown\", function DropDownListComponent_Template_span_keydown_2_listener($event) {\n        return ctx.keydown($event);\n      })(\"keypress\", function DropDownListComponent_Template_span_keypress_2_listener($event) {\n        return ctx.keypress($event);\n      })(\"click\", function DropDownListComponent_Template_span_click_2_listener() {\n        return ctx.click();\n      });\n      ɵngcc0.ɵɵelementStart(4, \"span\", 4);\n      ɵngcc0.ɵɵtemplate(5, DropDownListComponent_5_Template, 1, 4, undefined, 5);\n      ɵngcc0.ɵɵtemplate(6, DropDownListComponent_ng_template_6_Template, 1, 1, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n      ɵngcc0.ɵɵelement(8, \"span\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, DropDownListComponent_ng_template_9_Template, 8, 17, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(11, DropDownListComponent_ng_template_11_Template, 1, 0, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementContainer(12, null, 10);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.focusableId)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(18, _c27, !ctx.disabled, ctx.disabled))(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(21, _c1, ctx.focusComponent, ctx.blurComponent))(\"scope\", ctx);\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.direction)(\"readonly\", ctx.readonly)(\"tabindex\", ctx.widgetTabIndex)(\"aria-disabled\", ctx.disabled)(\"aria-readonly\", ctx.readonly)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"aria-activedescendant\", ctx.ariaActivedescendant)(\"aria-label\", ctx.noDataLabel);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.valueLabelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.valueTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.valueTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.buttonClasses);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, ɵngcc2.NgClass, ɵngcc1.EventsOutsideAngularDirective, ɵngcc2.NgIf, TemplateContextDirective, ListComponent, ɵngcc3.DefaultValueAccessor, FilterInputDirective, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, SelectableDirective, ɵngcc1.ResizeSensorComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDropDownListComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PopupService\n  }, {\n    type: SelectionService\n  }, {\n    type: NavigationService\n  }, {\n    type: DisabledItemsService\n  }, {\n    type: DataService\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }];\n};\n\nDropDownListComponent.propDecorators = {\n  focusableId: [{\n    type: Input\n  }],\n  iconClass: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  textField: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  listHeight: [{\n    type: Input\n  }],\n  defaultItem: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  itemDisabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  virtual: [{\n    type: Input\n  }],\n  ignoreCase: [{\n    type: Input\n  }],\n  delay: [{\n    type: Input\n  }],\n  valuePrimitive: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input,\n    args: [\"tabIndex\"]\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  filterChange: [{\n    type: Output\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  itemTemplate: [{\n    type: ContentChild,\n    args: [ItemTemplateDirective]\n  }],\n  groupTemplate: [{\n    type: ContentChild,\n    args: [GroupTemplateDirective]\n  }],\n  fixedGroupTemplate: [{\n    type: ContentChild,\n    args: [FixedGroupTemplateDirective]\n  }],\n  valueTemplate: [{\n    type: ContentChild,\n    args: [ValueTemplateDirective]\n  }],\n  headerTemplate: [{\n    type: ContentChild,\n    args: [HeaderTemplateDirective]\n  }],\n  footerTemplate: [{\n    type: ContentChild,\n    args: [FooterTemplateDirective]\n  }],\n  noDataTemplate: [{\n    type: ContentChild,\n    args: [NoDataTemplateDirective]\n  }],\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper', {\n      static: true\n    }]\n  }],\n  optionsList: [{\n    type: ViewChild,\n    args: ['optionsList']\n  }],\n  widgetClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-dropdown']\n  }, {\n    type: HostBinding,\n    args: ['class.k-header']\n  }],\n  dir: [{\n    type: HostBinding,\n    args: ['attr.dir']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropDownListComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoDropDownList',\n      providers: [DROPDOWNLIST_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.dropdownlist'\n      }, {\n        provide: FilterableDropDownComponentBase,\n        useExisting: forwardRef(function () {\n          return DropDownListComponent;\n        })\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return DropDownListComponent;\n        })\n      }],\n      selector: 'kendo-dropdownlist',\n      template: \"\\n        <ng-container kendoDropDownListLocalizedMessages\\n            i18n-noDataText=\\\"kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\\\"\\n            noDataText=\\\"NO DATA FOUND\\\"\\n        >\\n        </ng-container>\\n        <span #wrapper unselectable=\\\"on\\\"\\n          role=\\\"listbox\\\"\\n          [id]=\\\"focusableId\\\"\\n          [ngClass]=\\\"{\\n            'k-dropdown-wrap': true,\\n            'k-state-default': !this.disabled,\\n            'k-state-disabled': this.disabled\\n          }\\\"\\n          [attr.dir]=\\\"direction\\\"\\n          [attr.readonly]=\\\"readonly\\\"\\n          [attr.tabindex]=\\\"widgetTabIndex\\\"\\n          [attr.aria-disabled]=\\\"disabled\\\"\\n          [attr.aria-readonly]=\\\"readonly\\\"\\n          aria-haspopup=\\\"listbox\\\"\\n          [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n          [attr.aria-owns]=\\\"ariaOwns\\\"\\n          [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n          [attr.aria-label]=\\\"noDataLabel\\\"\\n          (keydown)=\\\"keydown($event)\\\"\\n          (keypress)=\\\"keypress($event)\\\"\\n          (click)=\\\"click()\\\"\\n          [kendoEventsOutsideAngular]=\\\"{\\n            focus: focusComponent,\\n            blur: blurComponent\\n            }\\\"\\n          [scope]=\\\"this\\\"\\n        >\\n            <span class=\\\"k-input\\\" unselectable=\\\"on\\\" [id]=\\\"valueLabelId\\\">\\n               <ng-template *ngIf=\\\"valueTemplate\\\"\\n                   [templateContext]=\\\"{\\n                       templateRef: valueTemplate.templateRef,\\n                       $implicit: dataItem\\n                   }\\\">\\n               </ng-template>\\n               <ng-template [ngIf]=\\\"!valueTemplate\\\">{{ getText() }}</ng-template>\\n           </span>\\n           <span class=\\\"k-select\\\" unselectable=\\\"on\\\">\\n               <span\\n                    class=\\\"k-icon\\\"\\n                    unselectable=\\\"on\\\"\\n                    [ngClass]=\\\"buttonClasses\\\"\\n                >\\n                </span>\\n           </span>\\n           <ng-template #popupTemplate>\\n               <!--filterable-->\\n\\n               <ng-template [ngIf]=\\\"filterable\\\">\\n                   <span class=\\\"k-list-filter\\\" (click)=\\\"$event.stopImmediatePropagation()\\\">\\n                       <input\\n                           [attr.aria-owns]=\\\"ariaOwns\\\"\\n                           [attr.aria-activedescendant]=\\\"ariaActivedescendant\\\"\\n                           [attr.aria-label]=\\\"noDataLabel\\\"\\n                           tabindex=\\\"-1\\\"\\n                           [filterInput]=\\\"isFocused && !touchEnabled\\\"\\n                           [dir]=\\\"direction\\\"\\n                           [(ngModel)]=\\\"filterText\\\"\\n                           class=\\\"k-textbox\\\"\\n                           (keydown)=\\\"keydown($event)\\\"\\n                           (input)=\\\"handleFilter($event)\\\"\\n                           (focus)=\\\"onFilterFocus()\\\"\\n                           (blur)=\\\"blurFilterInput()\\\" />\\n                       <span class=\\\"k-icon k-i-search\\\" unselectable=\\\"on\\\"></span>\\n                   </span>\\n               </ng-template>\\n               <!--default item-->\\n               <ng-template [ngIf]=\\\"defaultItem && !itemTemplate\\\">\\n                   <div class=\\\"k-list-optionlabel\\\" [ngClass]=\\\"{ 'k-state-disabled': isDisabledDefaultItem }\\\" kendoDropDownsSelectable [index]=\\\"-1\\\">\\n                       {{ getDefaultItemText() }}\\n                   </div>\\n               </ng-template>\\n               <ng-template [ngIf]=\\\"defaultItem && itemTemplate\\\">\\n                   <div class=\\\"k-list-optionlabel\\\" [ngClass]=\\\"{ 'k-state-disabled': isDisabledDefaultItem }\\\" kendoDropDownsSelectable [index]=\\\"-1\\\">\\n                       <ng-template\\n                           [templateContext]=\\\"{\\n                               templateRef: itemTemplate.templateRef,\\n                               $implicit: defaultItem\\n                           }\\\">\\n                       </ng-template>\\n                   </div>\\n               </ng-template>\\n               <!--header template-->\\n               <ng-template *ngIf=\\\"headerTemplate\\\"\\n                   [templateContext]=\\\"{\\n                       templateRef: headerTemplate.templateRef\\n                   }\\\">\\n               </ng-template>\\n               <!--list-->\\n               <kendo-list\\n                   #optionsList\\n                   [id]=\\\"listBoxId\\\"\\n                   [optionPrefix]=\\\"optionPrefix\\\"\\n                   [data]=\\\"data\\\"\\n                   [textField]=\\\"textField\\\"\\n                   [valueField]=\\\"valueField\\\"\\n                   [template]=\\\"itemTemplate\\\"\\n                   [groupTemplate]=\\\"groupTemplate\\\"\\n                   [fixedGroupTemplate]=\\\"fixedGroupTemplate\\\"\\n                   [height]=\\\"listHeight\\\"\\n                   [show]=\\\"isOpen\\\"\\n                   [virtual]=\\\"virtual\\\"\\n                   (pageChange)=\\\"pageChange($event)\\\"\\n                   >\\n               </kendo-list>\\n               <!--no-data template-->\\n               <div class=\\\"k-nodata\\\" *ngIf=\\\"data.length === 0\\\">\\n                   <ng-template [ngIf]=\\\"noDataTemplate\\\"\\n                       [templateContext]=\\\"{\\n                           templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\\n                       }\\\">\\n                   </ng-template>\\n                   <ng-template [ngIf]=\\\"!noDataTemplate\\\">\\n                       <div>{{ noDataText }}</div>\\n                   </ng-template>\\n               </div>\\n               <!--footer template-->\\n               <ng-template *ngIf=\\\"footerTemplate\\\"\\n                   [templateContext]=\\\"{\\n                       templateRef: footerTemplate.templateRef\\n                   }\\\">\\n               </ng-template>\\n            </ng-template>\\n        </span>\\n        <ng-template [ngIf]=\\\"isOpen\\\">\\n            <kendo-resize-sensor (resize)=\\\"onResize()\\\"></kendo-resize-sensor>\\n        </ng-template>\\n        <ng-container #container></ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PopupService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: DataService\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    ignoreCase: [{\n      type: Input\n    }],\n    delay: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-dropdown']\n    }, {\n      type: HostBinding,\n      args: ['class.k-header']\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    iconClass: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    defaultItem: [{\n      type: Input\n    }],\n    itemTemplate: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective]\n    }],\n    valueTemplate: [{\n      type: ContentChild,\n      args: [ValueTemplateDirective]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective]\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper', {\n        static: true\n      }]\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList']\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the content of the custom list item in the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-customizing-the-item-content)).\n * The template context is set to the current component.\n * To get a reference to the current text that is typed by the\n * user, use the `let-customItem` directive.\n *\n * > The `CustomItemTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\" [allowCustom]=\"true\">\n *    <ng-template kendoMultiSelectCustomItemTemplate let-customItem>\n *      <span>New Item: {{customItem}}</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n *\n */\n\n\nvar CustomItemTemplateDirective = function CustomItemTemplateDirective(templateRef) {\n  _classCallCheck(this, CustomItemTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nCustomItemTemplateDirective.ɵfac = function CustomItemTemplateDirective_Factory(t) {\n  return new (t || CustomItemTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nCustomItemTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CustomItemTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectCustomItemTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nCustomItemTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomItemTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectCustomItemTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the selected tag value of the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-tag-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `TagTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"items\">\n *    <ng-template kendoMultiSelectTagTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar TagTemplateDirective = function TagTemplateDirective(templateRef) {\n  _classCallCheck(this, TagTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nTagTemplateDirective.ɵfac = function TagTemplateDirective_Factory(t) {\n  return new (t || TagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nTagTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TagTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectTagTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nTagTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectTagTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Renders the grouped tag values in the MultiSelect\n * ([see example]({% slug summarytagmode_multiselect %})).\n * The template context is set to the current component.\n * To get a reference to the current grouped\n * data items collection, use the `let-dataItems` directive.\n *\n * > The `GroupTagTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"items\">\n *    <ng-template kendoMultiSelectGroupTagTemplate let-dataItems>\n *      <span>{{dataItems.length}} item(s) selected</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\n\nvar GroupTagTemplateDirective = function GroupTagTemplateDirective(templateRef) {\n  _classCallCheck(this, GroupTagTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nGroupTagTemplateDirective.ɵfac = function GroupTagTemplateDirective_Factory(t) {\n  return new (t || GroupTagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef));\n};\n\nGroupTagTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupTagTemplateDirective,\n  selectors: [[\"\", \"kendoMultiSelectGroupTagTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nGroupTagTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupTagTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectGroupTagTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef\n    }];\n  }, null);\n})();\n/**\n * Arguments for the `removeTag` event. The `removeTag` event fires when a tag is about\n * to the removed. If you cancel the event, the removal is prevented.\n */\n\n\nvar RemoveTagEvent = /*#__PURE__*/function (_PreventableEvent) {\n  _inherits(RemoveTagEvent, _PreventableEvent);\n\n  var _super = _createSuper(RemoveTagEvent);\n\n  /**\n   * Constructs the event arguments for the `remove` event.\n   * @param dataItem - The data item or an array of data items that will be removed.\n   */\n  function RemoveTagEvent(dataItem) {\n    var _this32;\n\n    _classCallCheck(this, RemoveTagEvent);\n\n    _this32 = _super.call(this);\n    _this32.dataItem = dataItem;\n    return _this32;\n  }\n\n  return RemoveTagEvent;\n}(PreventableEvent);\n/* tslint:disable:max-line-length */\n\n\nvar MULTISELECT_VALUE_ACCESSOR = {\n  multi: true,\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line:no-use-before-declare\n  useExisting: forwardRef(function () {\n    return MultiSelectComponent;\n  })\n};\n/**\n * Represents the [Kendo UI MultiSelect component for Angular]({% slug overview_multiselect %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\">\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\n\nvar MultiSelectComponent = /*#__PURE__*/function () {\n  function MultiSelectComponent(localization, popupService, dataService, selectionService, navigationService, disabledItemsService, cdr, differs, renderer, hostElement, _zone, touchEnabled) {\n    var _this33 = this;\n\n    _classCallCheck(this, MultiSelectComponent);\n\n    this.localization = localization;\n    this.popupService = popupService;\n    this.dataService = dataService;\n    this.selectionService = selectionService;\n    this.navigationService = navigationService;\n    this.disabledItemsService = disabledItemsService;\n    this.cdr = cdr;\n    this.differs = differs;\n    this.renderer = renderer;\n    this.hostElement = hostElement;\n    this._zone = _zone;\n    this.touchEnabled = touchEnabled;\n    this.listBoxId = guid();\n    this.tagListId = guid();\n    this.tagPrefix = \"tag-\" + guid();\n    this.optionPrefix = \"option-\" + guid();\n    this.focusedTagIndex = undefined;\n    /**\n     * @hidden\n     */\n\n    this.focusableId = \"k-\".concat(guid());\n    /**\n     * Determines whether to close the options list of the MultiSelect after the item selection is finished\n     * ([see example]({% slug openstate_multiselect %}#toc-keeping-the-options-list-open-while-on-focus)).\n     * @default true\n     */\n\n    this.autoClose = true;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n\n    this.tabindex = 0;\n    /**\n     * Sets the disabled state of the component.\n     */\n\n    this.disabled = false;\n    /**\n     * Sets the read-only state of the component.\n     */\n\n    this.readonly = false;\n    /**\n     * Enables the [filtering]({% slug filtering_multiselect %}) functionality of the MultiSelect.\n     */\n\n    this.filterable = false;\n    /**\n     * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n     *\n     * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n     * > To set the height of the popup container, use `popupSettings.height`.\n     */\n\n    this.listHeight = 200;\n    /**\n     * If set to `true`, renders a button on hovering over the component.\n     * Clicking this button resets the value of the component to an empty array and triggers the `change` event.\n     */\n\n    this.clearButton = true;\n    /**\n     * A user-defined callback function which receives an array of selected data items and maps them to an array of tags.\n     *\n     * @param { Any[] } dataItems - The selected data items from the list.\n     * @returns { Any[] } - The tags that will be rendered by the component.\n     */\n\n    this.tagMapper = function (tags) {\n      return tags || [];\n    };\n    /**\n     * Specifies whether the MultiSelect allows user-defined values that are not present in the dataset\n     * ([more information and examples]({% slug custom_values_multiselect %})).\n     * Defaults to `false`.\n     */\n\n\n    this.allowCustom = false;\n    /**\n     * A user-defined callback function which returns normalized custom values.\n     * Typically used when the data items are different from type `string`.\n     *\n     * @param { Any } value - The custom value that is defined by the user.\n     * @returns { Any }\n     *\n     * @example\n     * ```ts\n     * import { map } from 'rxjs/operators';\n     *\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *   <kendo-multiselect\n     *       [allowCustom]=\"true\"\n     *       [data]=\"listItems\"\n     *       [textField]=\"'text'\"\n     *       [valueField]=\"'value'\"\n     *       [valueNormalizer]=\"valueNormalizer\"\n     *       (valueChange)=\"onValueChange($event)\"\n     *   >\n     *   </kendo-multiselect>\n     * `\n     * })\n     *\n     * class AppComponent {\n     *   public listItems: Array<{ text: string, value: number }> = [\n     *       { text: \"Small\", value: 1 },\n     *       { text: \"Medium\", value: 2 },\n     *       { text: \"Large\", value: 3 }\n     *   ];\n     *\n     *   public onValueChange(value) {\n     *       console.log(\"valueChange : \", value);\n     *   }\n     *\n     *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n     *      return {\n     *         value: Math.floor(Math.random() * (1000 - 100) + 1000), //generate unique valueField\n     *         text: text };\n     *   }));\n     *\n     * }\n     * ```\n     */\n\n    this.valueNormalizer = function (text) {\n      return text.pipe(map(function (userInput) {\n        var comparer = function comparer(item) {\n          return typeof item === 'string' && userInput.toLowerCase() === item.toLowerCase();\n        };\n\n        var matchingValue = _this33.value.find(comparer);\n\n        if (matchingValue) {\n          return matchingValue;\n        }\n\n        var matchingItem = _this33.dataService.find(comparer);\n\n        return matchingItem ? matchingItem : userInput;\n      }));\n    };\n    /**\n     * Fires each time the user types in the input field.\n     * You can filter the source based on the passed filtration value.\n     */\n\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires each time the value is changed&mdash;\n     * when the component is blurred or the value is cleared through the **Clear** button\n     * ([see example]({% slug overview_multiselect %}#toc-events)).\n     * When the value of the component is programmatically changed to `ngModel` or `formControl`\n     * through its API or form binding, the `valueChange` event is not triggered because it\n     * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires each time the popup is about to open\n     * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain closed.\n     */\n\n    this.open = new EventEmitter();\n    /**\n     * Fires each time the popup is about to close\n     * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n     * This event is preventable. If you cancel it, the popup will remain open.\n     */\n\n    this.close = new EventEmitter();\n    /**\n     * Fires each time the user focuses the MultiSelect.\n     */\n\n    this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time the MultiSelect gets blurred.\n     */\n\n    this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n\n    /**\n     * Fires each time a tag is about to be removed.\n     * This event is preventable. If you cancel it, the tag will not be removed.\n     */\n\n    this.removeTag = new EventEmitter();\n    this.widgetClasses = true;\n\n    this.onChangeCallback = function (_) {};\n\n    this.onTouchedCallback = function (_) {};\n\n    this._placeholder = '';\n    this._open = false;\n    this._value = [];\n    this._popupSettings = {\n      animate: true\n    };\n    this._isFocused = false;\n    this.selectedDataItems = [];\n    this.customValueSubject = new Subject();\n    this.observableSubscriptions = new Subscription();\n    this.popupMouseDownHandler = this.onMouseDown.bind(this);\n    this.data = [];\n    this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n    this.subscribeEvents();\n  }\n  /**\n   * Focuses the MultiSelect.\n   */\n\n\n  _createClass(MultiSelectComponent, [{\n    key: \"focus\",\n    value: function focus() {\n      if (!this.disabled) {\n        this.searchbar.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onSearchBarFocus\",\n    value: function onSearchBarFocus() {\n      var _this34 = this;\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n\n        if (hasObservers(this.onFocus)) {\n          this._zone.run(function () {\n            _this34.onFocus.emit();\n          });\n        }\n      }\n    }\n    /**\n     * Blurs the MultiSelect.\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      if (!this.disabled) {\n        this.searchbar.blur();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onSearchBarBlur\",\n    value: function onSearchBarBlur() {\n      var _this35 = this;\n\n      if (!this.isFocused) {\n        return;\n      }\n\n      this.isFocused = false;\n\n      if (hasObservers(this.onBlur) || hasObservers(this.filterChange) || hasObservers(this.close) || isUntouched(this.hostElement.nativeElement)) {\n        this._zone.run(function () {\n          if (!_this35.allowCustom) {\n            _this35.clearFilter();\n          }\n\n          _this35.closePopup();\n\n          _this35.onBlur.emit();\n\n          _this35.onTouchedCallback();\n        });\n      } else {\n        if (!this.allowCustom) {\n          this.clearFilter();\n        }\n\n        this.closePopup();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"wrapperMousedown\",\n    value: function wrapperMousedown(event) {\n      var inputElement = this.searchbar.input.nativeElement;\n\n      if (event.button === 0) {\n        if (this.isFocused && this.isOpen && event.target === inputElement) {\n          return;\n        }\n\n        if (!this.touchEnabled || this.touchEnabled && event.target.tagName !== 'SPAN') {\n          this.searchbar.focus();\n        }\n\n        this.togglePopup(!this.isOpen);\n        event.preventDefault();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(event) {\n      event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onResize\",\n    value: function onResize() {\n      if (this._open) {\n        var popupWrapper = this.popupRef.popupElement;\n        var _this$width7 = this.width,\n            min = _this$width7.min,\n            max = _this$width7.max;\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n      }\n    }\n  }, {\n    key: \"verifySettings\",\n\n    /**\n     * @hidden\n     */\n    value: function verifySettings() {\n      var valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n\n      if (!isDevMode() || this.value.length === 0) {\n        return;\n      }\n\n      if (!isArray(this.value)) {\n        throw new Error(MultiselectMessages.array);\n      }\n\n      if (this.valuePrimitive === true && isObjectArray(this.value)) {\n        throw new Error(MultiselectMessages.primitive);\n      }\n\n      if (this.valuePrimitive === false && !isObjectArray(this.value)) {\n        throw new Error(MultiselectMessages.object);\n      }\n\n      if (valueOrText) {\n        throw new Error(MultiselectMessages.textAndValue);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"change\",\n    value: function change(event) {\n      var isCustomItem = (isPresent(event.added) || isPresent(event.removed)) && (event.added === -1 || event.removed === -1);\n\n      if (isCustomItem) {\n        this.addCustomValue(this.text);\n        return; // The change is emited asynchronosly.\n      } // Existing items.\n\n\n      if (isPresent(event.added)) {\n        var dataItem = this.dataService.itemAt(event.added);\n        var newItem = this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField]) ? dataItem[this.valueField] : dataItem;\n        this.value = [].concat(_toConsumableArray(this.value), [newItem]);\n        this.cdr.markForCheck();\n      }\n\n      if (isPresent(event.removed)) {\n        var _dataItem = this.dataService.itemAt(event.removed);\n\n        var prop = this.prop(this.valueField, this.valuePrimitive);\n\n        var filter$$1 = function filter$$1(item) {\n          return prop(item) !== prop(_dataItem);\n        };\n\n        this.value = this.value.filter(filter$$1);\n        this.selectedDataItems = this.selectedDataItems.filter(filter$$1);\n        this.tags = this.tagMapper(this.selectedDataItems.slice());\n        this.cdr.detectChanges();\n      }\n\n      this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(value) {\n      var _this36 = this;\n\n      var objectArray = isObjectArray(value);\n      var data = this.dataService.data;\n\n      if (this.dataService.grouped) {\n        data = data.filter(function (item) {\n          return !item.header;\n        }).map(function (item) {\n          return item.value;\n        });\n      }\n\n      var selection = selectedIndices(this.value, data, this.valueField);\n      this.selectionService.resetSelection(selection);\n\n      if (this.isOpen && this.selectionService.focused === undefined) {\n        this.selectionService.focused = this.dataService.itemsCount ? this.firstFocusableIndex(0) : this.allowCustom ? -1 : undefined;\n      }\n\n      if (!this.text) {\n        if (!(isPresent(value) && value.length)) {\n          this.selectedDataItems = [];\n        }\n\n        if (this.valuePrimitive && !this.valueField) {\n          this.selectedDataItems = value.slice();\n        }\n\n        if (objectArray || this.valuePrimitive && this.valueField) {\n          this.selectedDataItems = resolveAllValues(value, data, this.valueField);\n        }\n\n        if (this.selectedDataItems.length < value.length) {\n          var prop = this.prop(this.valueField, this.valuePrimitive);\n          var dataItems = value.map(function (current) {\n            var dataItem = _this36.selectedDataItems.find(function (item) {\n              return prop(item) === prop(current);\n            });\n\n            return isPresent(dataItem) ? dataItem : _this36.resolveDataItemFromTags(current);\n          }).filter(function (dataItem) {\n            return isPresent(dataItem);\n          });\n          this.selectedDataItems = dataItems;\n        }\n      }\n\n      this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(text) {\n      this.text = text;\n\n      if (text && !this.isOpen) {\n        this.openPopup();\n      }\n\n      if (this.filterable) {\n        this.filterChange.emit(text);\n      } else {\n        this.searchTextAndFocus(text);\n      }\n\n      this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"pageChange\",\n    value: function pageChange(event) {\n      var virtual = this.virtual;\n      virtual.skip = event.skip;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearFilter\",\n    value: function clearFilter() {\n      if (this.filterable && this.text) {\n        this.filterChange.emit(\"\");\n      }\n\n      this.text = \"\";\n      /* Clearing the value from the input as the setInputSize calculation will be incorrect otherwise.\n       Calling cdr.detectChanges to clear the input value as a result of property binding\n       causes JAWS to read outdated tag values in IE upon tag selection for some reason. */\n\n      this.searchbar.input.nativeElement.value = \"\";\n      this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleNavigate\",\n    value: function handleNavigate(event) {\n      var navigateInput = this.text && event.keyCode !== Keys.down && event.keyCode !== Keys.up;\n      var selectValue = this.text && event.keyCode === Keys.enter || event.keyCode === Keys.esc;\n      var deleteTag = !this.text && event.keyCode === Keys.backspace && this.tags.length > 0;\n\n      if (deleteTag) {\n        this.handleBackspace();\n        return;\n      }\n\n      if (this.disabled || navigateInput && !selectValue) {\n        return;\n      }\n\n      var eventData = event;\n      var focused = isNaN(this.selectionService.focused) ? -1 : this.selectionService.focused;\n      var action = this.navigationService.process({\n        current: focused,\n        max: this.dataService.itemsCount - 1,\n        min: this.allowCustom && this.text ? -1 : 0,\n        open: this.isOpen,\n        originalEvent: eventData\n      });\n\n      if (action !== NavigationAction.Undefined && (action === NavigationAction.Enter && this.isOpen || action !== NavigationAction.Enter)) {\n        event.preventDefault();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"handleRemoveTag\",\n    value: function handleRemoveTag(tagData) {\n      var eventArgs = new RemoveTagEvent(tagData);\n\n      if (this.disabled || this.readonly) {\n        return;\n      }\n\n      this.focus();\n      this.removeTag.emit(eventArgs);\n\n      if (eventArgs.isDefaultPrevented()) {\n        return;\n      }\n\n      if (tagData instanceof Array) {\n        this.removeGroupTag(tagData);\n      } else {\n        this.removeSingleTag(tagData);\n      }\n\n      this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearAll\",\n    value: function clearAll(event) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n      this.focus();\n      this.clearFilter();\n      this.reset();\n      this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"addCustomValue\",\n    value: function addCustomValue(text) {\n      this.customValueSubject.next(text);\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      this.verifySettings();\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      var _this37 = this;\n\n      if (this.differ) {\n        var valueChanges = this.differ.diff(this.value);\n\n        if (valueChanges && !this.valueChangeDetected) {\n          this.selectedDataItems = this.getSelectedDataItems(valueChanges);\n          this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n\n          if (!(this.tags && this.dataService.data)) {\n            return;\n          }\n\n          var isValueCustom = function isValueCustom(value) {\n            return _this37.dataService.indexOf(value) === -1;\n          };\n\n          var isValueSelected = function isValueSelected(value) {\n            return _this37.selectionService.isSelected(_this37.dataService.indexOf(value));\n          };\n\n          var reselectionRequired = this.selectedDataItems.some(function (value) {\n            return !(isValueCustom(value) || isValueSelected(value));\n          });\n\n          if (reselectionRequired) {\n            this.setState(this.value);\n          }\n        }\n      }\n\n      this.valueChangeDetected = false;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this38 = this;\n\n      this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n      this.createCustomValueStream();\n      this.localizationChangeSubscription = this.localization.changes.subscribe(function (_ref11) {\n        var rtl = _ref11.rtl;\n        _this38.direction = rtl ? 'rtl' : 'ltr';\n\n        _this38.setMessages();\n      });\n      this.setMessages();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var virtual = this.virtual;\n      var requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n\n      if (requestInitialData) {\n        this.pageChange({\n          skip: 0,\n          take: virtual.pageSize\n        });\n      }\n\n      if (this.valuePrimitive === undefined) {\n        this.valuePrimitive = !this.valueField;\n      }\n\n      if (isChanged(\"valueNormalizer\", changes)) {\n        this.createCustomValueStream();\n      }\n\n      var STATE_PROPS = /(data|textField|valueField|valuePrimitive|value)/g;\n\n      if (changes.hasOwnProperty(\"value\")) {\n        this.valueChangeDetected = true;\n      }\n\n      if (STATE_PROPS.test(Object.keys(changes).join())) {\n        this.setState(this.value);\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.searchbar.setInputSize();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._toggle(false);\n\n      this.unsubscribeEvents();\n      clearTimeout(this.messagesTimeout);\n\n      if (this.localizationChangeSubscription) {\n        this.localizationChangeSubscription.unsubscribe();\n      }\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_multiselect %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the respective `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(open) {\n      var _this39 = this;\n\n      // The Promise is required for opening the popup on load.\n      // Otherwise, the \"Expression has changed...\" type error will be thrown.\n      Promise.resolve(null).then(function () {\n        var shouldOpen = isPresent(open) ? open : !_this39._open;\n\n        _this39._toggle(shouldOpen);\n\n        _this39.cdr.markForCheck();\n      });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n\n  }, {\n    key: \"reset\",\n\n    /**\n     * Resets the value of the MultiSelect.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    value: function reset() {\n      this.text = \"\";\n      this.value = [];\n      this.selectedDataItems = [];\n      this.setState([]);\n      this.cdr.markForCheck();\n    } // NG MODEL BINDINGS\n\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(value) {\n      this.value = value || [];\n      this.setState(this.value);\n      this.verifySettings();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onTagMapperChange\",\n    value: function onTagMapperChange() {\n      this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n      this.cdr.markForCheck();\n    }\n  }, {\n    key: \"prop\",\n    value: function prop(field, usePrimitive) {\n      return function (dataItem) {\n        if (isPresent(dataItem)) {\n          if (usePrimitive) {\n            return field && isObject(dataItem) ? dataItem[field] : dataItem;\n          } else {\n            return dataItem[field];\n          }\n        }\n\n        return null;\n      };\n    }\n  }, {\n    key: \"subscribeEvents\",\n    value: function subscribeEvents() {\n      var _this40 = this;\n\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      var isOpen = function isOpen() {\n        return _this40.isOpen;\n      };\n\n      var isClosed = function isClosed() {\n        return !_this40.isOpen;\n      };\n\n      var isTagFocused = function isTagFocused() {\n        return !_this40.isOpen && _this40.focusedTagIndex !== undefined;\n      };\n\n      [this.selectionService.onChange.subscribe(this.handleItemChange.bind(this)), this.navigationService.esc.subscribe(this.closePopup.bind(this)), this.navigationService.enter.pipe(filter(isOpen)).subscribe(this.handleEnter.bind(this)), this.navigationService.open.subscribe(this.openPopup.bind(this)), this.navigationService.close.subscribe(this.handleClose.bind(this)), this.navigationService.up.pipe(filter(isOpen)).subscribe(function (event) {\n        return _this40.handleUp(event.index);\n      }), this.navigationService.home.pipe(filter(function () {\n        return isClosed;\n      })).subscribe(this.handleHome.bind(this)), this.navigationService.end.pipe(filter(function () {\n        return isClosed;\n      })).subscribe(this.handleEnd.bind(this)), this.navigationService.backspace.pipe(filter(isTagFocused)).subscribe(this.handleBackspace.bind(this)), this.navigationService.delete.pipe(filter(isTagFocused)).subscribe(this.handleDelete.bind(this)), this.navigationService.left.subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)), this.navigationService.right.subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)), this.navigationService.down.subscribe(function (event) {\n        return _this40.handleDownKey(event.index);\n      })].forEach(function (s) {\n        return _this40.observableSubscriptions.add(s);\n      });\n    }\n  }, {\n    key: \"unsubscribeEvents\",\n    value: function unsubscribeEvents() {\n      if (!isDocumentAvailable()) {\n        return;\n      }\n\n      this.observableSubscriptions.unsubscribe();\n\n      if (this.customValueSubscription) {\n        this.customValueSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"removeGroupTag\",\n    value: function removeGroupTag(dataItems) {\n      var prop = this.prop(this.valueField, this.valuePrimitive);\n      var data = this.dataService.data;\n\n      if (this.dataService.grouped) {\n        data = data.filter(function (item) {\n          return !item.header;\n        }).map(function (item) {\n          return item.value;\n        });\n      }\n\n      var dataItemValues = new Set(dataItems.map(function (item) {\n        return prop(item);\n      }));\n      this.value = this.value.filter(function (value) {\n        return !dataItemValues.has(prop(value));\n      });\n      this.selectedDataItems = this.selectedDataItems.filter(function (value) {\n        return !dataItemValues.has(prop(value));\n      });\n      var selection = selectedIndices(this.value, data, this.valueField);\n      this.selectionService.resetSelection(selection);\n      this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n      this.cdr.markForCheck();\n      this.emitValueChange();\n    }\n  }, {\n    key: \"removeSingleTag\",\n    value: function removeSingleTag(dataItem) {\n      var prop = this.prop(this.valueField, this.valuePrimitive);\n      var data = this.dataService.data;\n\n      if (this.dataService.grouped) {\n        data = data.filter(function (item) {\n          return !item.header;\n        }).map(function (item) {\n          return item.value;\n        });\n      }\n\n      var index = selectedIndices([dataItem], data, this.valueField)[0];\n\n      if (isNumber(index)) {\n        this.selectionService.unselect(index);\n        this.togglePopup(false);\n      } else {\n        // the deleted item is not present in the source\n        var filter$$1 = function filter$$1(item) {\n          return prop(item) !== prop(dataItem);\n        };\n\n        this.value = this.value.filter(filter$$1);\n        this.selectedDataItems = this.selectedDataItems.filter(filter$$1);\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.cdr.markForCheck();\n        this.emitValueChange();\n      }\n    }\n  }, {\n    key: \"createCustomValueStream\",\n    value: function createCustomValueStream() {\n      var _this41 = this;\n\n      if (this.customValueSubscription) {\n        this.customValueSubscription.unsubscribe();\n      }\n\n      this.customValueSubscription = this.customValueSubject.pipe(tap(function () {\n        _this41.loading = true;\n        _this41.disabled = true;\n\n        _this41.cdr.detectChanges();\n      }), this.valueNormalizer, catchError(function () {\n        _this41.loading = false;\n        _this41.disabled = false;\n\n        _this41.clearFilter();\n\n        if (_this41.autoClose) {\n          _this41.togglePopup(false);\n\n          _this41.nextTick(function () {\n            _this41.searchbar.focus();\n          });\n        }\n\n        _this41.createCustomValueStream();\n\n        return of(null);\n      })).subscribe(function (normalizedValue) {\n        _this41.loading = false;\n        _this41.disabled = false;\n\n        _this41.clearFilter();\n\n        if (isPresent(normalizedValue)) {\n          //if valueNormalizer returns `null` or `undefined` custom value is discarded\n          var newValue = _this41.valuePrimitive ? getter(normalizedValue, _this41.valueField) : normalizedValue;\n\n          var itemIndex = _this41.dataService.indexOf(newValue);\n\n          var customItem = itemIndex === -1;\n\n          if (_this41.value.indexOf(newValue) === -1) {\n            if (!customItem) {\n              _this41.selectionService.add(itemIndex);\n            } else {\n              _this41.value = [].concat(_toConsumableArray(_this41.value), [newValue]);\n            }\n\n            _this41.selectedDataItems = [].concat(_toConsumableArray(_this41.selectedDataItems), [normalizedValue]);\n          } else {\n            if (!customItem && _this41.selectionService.isSelected(itemIndex)) {\n              _this41.selectionService.unselect(itemIndex);\n            } else {\n              _this41.value.splice(_this41.value.indexOf(newValue), 1);\n\n              _this41.selectedDataItems = _this41.selectedDataItems.filter(function (item) {\n                return getter(item, _this41.valueField) !== newValue;\n              });\n            }\n          }\n\n          _this41.tags = _this41.tagMapper(_this41.selectedDataItems.slice(0));\n\n          _this41.emitValueChange();\n        }\n\n        if (_this41.autoClose) {\n          _this41.togglePopup(false);\n\n          _this41.nextTick(function () {\n            _this41.searchbar.focus();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleItemChange\",\n    value: function handleItemChange(event) {\n      this.change(event);\n\n      if (this.autoClose) {\n        this.togglePopup(false);\n      }\n\n      if (isPresent(event.added) && event.added !== -1) {\n        this.clearFilter();\n      }\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(event) {\n      var service = this.selectionService;\n      var focusedIndex = this.selectionService.focused;\n\n      if (this.isOpen) {\n        event.originalEvent.preventDefault();\n      }\n\n      if (focusedIndex === -1) {\n        if (this.allowCustom && this.text) {\n          this.addCustomValue(this.text);\n        }\n\n        return; // Clear filter & close are done at customValueSubscription due to race conditions.\n      }\n\n      if (service.isSelected(focusedIndex)) {\n        service.unselect(focusedIndex);\n      } else {\n        service.add(focusedIndex);\n      }\n\n      this.clearFilter();\n\n      if (this.autoClose) {\n        this.togglePopup(false);\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.closePopup();\n      this.searchbar.focus();\n    }\n  }, {\n    key: \"handleEnd\",\n    value: function handleEnd() {\n      this.focusedTagIndex = this.tags.length - 1;\n    }\n  }, {\n    key: \"handleHome\",\n    value: function handleHome() {\n      this.focusedTagIndex = 0;\n    }\n  }, {\n    key: \"handleUp\",\n    value: function handleUp(index) {\n      this.selectionService.focused = index;\n    }\n  }, {\n    key: \"handleBackspace\",\n    value: function handleBackspace() {\n      if (this.focusedTagIndex !== undefined) {\n        this.handleDelete();\n      } else {\n        this.handleRemoveTag(this.tags[this.tags.length - 1]);\n        this.searchbar.focus();\n      }\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete() {\n      this.handleRemoveTag(this.tags[this.focusedTagIndex]);\n\n      if (this.focusedTagIndex === this.tags.length) {\n        this.focusedTagIndex = undefined;\n      }\n    }\n  }, {\n    key: \"handleLeftKey\",\n    value: function handleLeftKey() {\n      if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n        this.focusedTagIndex = this.tags.length - 1;\n      } else if (this.focusedTagIndex !== 0) {\n        this.focusedTagIndex--;\n      }\n    }\n  }, {\n    key: \"handleDownKey\",\n    value: function handleDownKey(index) {\n      if (this.isOpen) {\n        this.selectionService.focused = index || this.firstFocusableIndex(0);\n      } else {\n        this.openPopup();\n      }\n    }\n  }, {\n    key: \"handleRightKey\",\n    value: function handleRightKey() {\n      var last = this.tags.length - 1;\n\n      if (this.focusedTagIndex === last) {\n        this.focusedTagIndex = undefined;\n      } else if (this.focusedTagIndex < last) {\n        this.focusedTagIndex++;\n      }\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(text) {\n      var _this42 = this;\n\n      var startsFrom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var itemText;\n      text = text.toLowerCase();\n      var index = this.dataService.findIndex(function (item) {\n        if (_this42.dataService.grouped) {\n          itemText = _this42.prop(_this42.textField, _this42.valuePrimitive)(item.value);\n        } else {\n          itemText = _this42.prop(_this42.textField, _this42.valuePrimitive)(item);\n        }\n\n        itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n        return text && itemText.startsWith(text);\n      }, startsFrom);\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        return index + 1 > this.dataService.itemsCount ? -1 : this.findIndex(text, index + 1);\n      } else {\n        return index;\n      }\n    }\n  }, {\n    key: \"searchTextAndFocus\",\n    value: function searchTextAndFocus(text) {\n      var index = this.findIndex(text);\n      this.selectionService.focused = index;\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup() {\n      this.togglePopup(false);\n      this.focusedTagIndex = undefined;\n    }\n  }, {\n    key: \"openPopup\",\n    value: function openPopup() {\n      this.togglePopup(true);\n      this.focusedTagIndex = undefined;\n    }\n  }, {\n    key: \"togglePopup\",\n    value: function togglePopup(open) {\n      var isDisabled = this.disabled || this.readonly;\n      var sameState = this.isOpen === open;\n\n      if (isDisabled || sameState) {\n        return;\n      }\n\n      var isDefaultPrevented = this.triggerPopupEvents(open);\n\n      if (!isDefaultPrevented) {\n        this._toggle(open);\n      }\n    }\n  }, {\n    key: \"triggerPopupEvents\",\n    value: function triggerPopupEvents(open) {\n      var eventArgs = new PreventableEvent();\n\n      if (open) {\n        this.open.emit(eventArgs);\n      } else {\n        this.close.emit(eventArgs);\n      }\n\n      return eventArgs.isDefaultPrevented();\n    }\n  }, {\n    key: \"_toggle\",\n    value: function _toggle(open) {\n      this._open = open;\n      this.destroyPopup();\n\n      if (this._open) {\n        this.createPopup();\n      }\n    }\n  }, {\n    key: \"destroyPopup\",\n    value: function destroyPopup() {\n      if (this.popupRef) {\n        this.popupRef.popupElement.removeEventListener('mousedown', this.popupMouseDownHandler);\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"createPopup\",\n    value: function createPopup() {\n      var _this43 = this;\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      var horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n      var anchorPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"bottom\"\n      };\n      var popupPosition = {\n        horizontal: horizontalAlign,\n        vertical: \"top\"\n      };\n      this.popupRef = this.popupService.open({\n        anchor: this.wrapper,\n        anchorAlign: anchorPosition,\n        animate: this.popupSettings.animate,\n        appendTo: this.appendTo,\n        content: this.popupTemplate,\n        popupAlign: popupPosition,\n        popupClass: this.listContainerClasses,\n        positionMode: 'absolute'\n      });\n      var popupWrapper = this.popupRef.popupElement;\n      var _this$width8 = this.width,\n          min = _this$width8.min,\n          max = _this$width8.max;\n      popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n      popupWrapper.style.minWidth = min;\n      popupWrapper.style.width = max;\n      popupWrapper.style.height = this.height;\n      popupWrapper.setAttribute(\"dir\", this.direction);\n      this.popupRef.popupOpen.subscribe(function () {\n        _this43.cdr.detectChanges();\n\n        _this43.optionsList.scrollToItem(_this43.selectionService.focused);\n      });\n      this.popupRef.popupAnchorViewportLeave.subscribe(function () {\n        _this43.togglePopup(false);\n      });\n    }\n  }, {\n    key: \"emitValueChange\",\n    value: function emitValueChange() {\n      this.onChangeCallback(this.value);\n      this.valueChange.emit(this.value);\n    }\n  }, {\n    key: \"getSelectedDataItems\",\n    value: function getSelectedDataItems(valueChanges) {\n      var _this44 = this;\n\n      var isBoundToComplexData = isObjectArray(this.data);\n      var prop = this.prop(this.valueField, this.valuePrimitive);\n      var currentValue;\n      var index;\n      var selectedDataItems = [];\n      valueChanges.forEachItem(function (value) {\n        currentValue = value.currentValue;\n\n        if (_this44.dataService.grouped) {\n          index = _this44.dataService.findIndex(function (item) {\n            return prop(item.value) === prop(currentValue);\n          });\n        } else {\n          index = _this44.dataService.findIndex(function (item) {\n            return prop(item) === prop(currentValue);\n          });\n        }\n\n        if (index !== -1) {\n          selectedDataItems.push(_this44.dataService.itemAt(index));\n        } else if (isPresent(value) && !(isBoundToComplexData && _this44.valuePrimitive)) {\n          //value is not present in the data\n          selectedDataItems.push(currentValue);\n        } else {\n          // value is primitive, dataItem is an object, dataItem is not present in the current data set\n          var item = _this44.resolveDataItemFromTags(currentValue);\n\n          if (isPresent(item)) {\n            selectedDataItems.push(item);\n          }\n        }\n      });\n      return selectedDataItems;\n    }\n  }, {\n    key: \"resolveDataItemFromTags\",\n    value: function resolveDataItemFromTags(value) {\n      if (!(this.tags && this.tags.length && isPresent(value))) {\n        return undefined;\n      } // Flattening the tags array in case of a summary tag occurrence.\n\n\n      var tags = this.tags.reduce(function (acc, tag) {\n        var items = isArray(tag) ? tag : [tag];\n        acc.push.apply(acc, _toConsumableArray(items));\n        return acc;\n      }, []);\n      var prop = this.prop(this.valueField, this.valuePrimitive);\n      return tags.find(function (tag) {\n        return prop(tag) === prop(value);\n      });\n    }\n  }, {\n    key: \"firstFocusableIndex\",\n    value: function firstFocusableIndex(index) {\n      var maxIndex = this.dataService.itemsCount;\n\n      if (this.disabledItemsService.isIndexDisabled(index)) {\n        var nextIndex = index + 1;\n        return nextIndex < maxIndex ? this.firstFocusableIndex(nextIndex) : undefined;\n      } else {\n        return index;\n      }\n    }\n  }, {\n    key: \"nextTick\",\n    value: function nextTick(f) {\n      var _this45 = this;\n\n      this._zone.runOutsideAngular(function () {\n        // Use `setTimeout` instead of a resolved promise\n        // because the latter does not wait long enough.\n        setTimeout(function () {\n          return _this45._zone.run(f);\n        });\n      });\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages() {\n      var _this46 = this;\n\n      this._zone.runOutsideAngular(function () {\n        clearTimeout(_this46.messagesTimeout);\n        _this46.messagesTimeout = setTimeout(function () {\n          _this46.noDataText = _this46.localization.get('noDataText');\n\n          _this46.cdr.detectChanges();\n        });\n      });\n    }\n  }, {\n    key: \"appendTo\",\n    get: function get() {\n      var appendTo = this.popupSettings.appendTo;\n\n      if (!appendTo || appendTo === 'root') {\n        return undefined;\n      }\n\n      return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the MultiSelect.\n     *\n     * > The data has to be provided in an array-like list of items.\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this.dataService.data = data || [];\n\n      if (this.virtual) {\n        this.virtual.skip = 0;\n      }\n\n      this.setState(this.value);\n    },\n    get: function get() {\n      var virtual = this.virtual;\n\n      if (virtual) {\n        var start = virtual.skip || 0;\n        var end = start + virtual.pageSize; //Use length instead of itemsCount because of grouping\n\n        virtual.total = this.dataService.data.length;\n        return this.dataService.data.slice(start, end);\n      }\n\n      return this.dataService.data;\n    }\n    /**\n     * Sets the value of the MultiSelect. It can be either of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n\n  }, {\n    key: \"value\",\n    set: function set(values) {\n      this._value = values ? values : [];\n\n      if (!this.differ && this.value) {\n        this.differ = this.differs.find(this.value).create();\n      }\n    },\n    get: function get() {\n      return this._value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"tabIndex\",\n    set: function set(tabIndex) {\n      this.tabindex = tabIndex;\n    },\n    get: function get() {\n      return this.tabindex;\n    }\n    /**\n     * The hint which is displayed when the component is empty.\n     * When the values are selected, it disappears.\n     */\n\n  }, {\n    key: \"placeholder\",\n    set: function set(text) {\n      this._placeholder = text || '';\n    },\n    get: function get() {\n      return this.selectedDataItems.length ? '' : this._placeholder;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_multiselect %})). Determines whether the item will be disabled.\n     */\n\n  }, {\n    key: \"itemDisabled\",\n    set: function set(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(\"itemDisabled must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_multiselect %}) functionality.\n     */\n\n  }, {\n    key: \"virtual\",\n    set: function set(settings) {\n      this._virtualSettings = normalizeVirtualizationSettings(settings);\n    },\n    get: function get() {\n      return this._virtualSettings;\n    }\n    /**\n     * Configures the popup of the MultiSelect.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n\n  }, {\n    key: \"popupSettings\",\n    set: function set(settings) {\n      this._popupSettings = Object.assign({\n        animate: true\n      }, settings);\n    },\n    get: function get() {\n      return this._popupSettings;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.direction;\n    }\n  }, {\n    key: \"disabledClass\",\n    get: function get() {\n      return this.disabled;\n    }\n  }, {\n    key: \"listContainerClasses\",\n    get: function get() {\n      var containerClasses = ['k-list-container', 'k-reset'];\n\n      if (this.popupSettings.popupClass) {\n        containerClasses.push(this.popupSettings.popupClass);\n      }\n\n      return containerClasses;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      var wrapperOffsetWidth = 0;\n\n      if (isDocumentAvailable()) {\n        wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n      }\n\n      var width = this.popupSettings.width || wrapperOffsetWidth;\n      var minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : \"\".concat(wrapperOffsetWidth, \"px\");\n      var maxWidth = isNaN(width) ? width : \"\".concat(width, \"px\");\n      return {\n        min: minWidth,\n        max: maxWidth\n      };\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      var popupHeight = this.popupSettings.height;\n      return isPresent(popupHeight) ? \"\".concat(popupHeight, \"px\") : 'auto';\n    }\n  }, {\n    key: \"activeDescendant\",\n    get: function get() {\n      var focusedTagIndex = this.focusedTagIndex;\n      var focusedListIndex = this.selectionService.focused;\n      var prefix;\n      var item;\n\n      if (isPresent(focusedTagIndex) && !this.isOpen) {\n        item = this.tags[focusedTagIndex];\n        prefix = this.tagPrefix;\n      } else if (isPresent(focusedListIndex) && focusedListIndex !== -1 && this.isOpen) {\n        item = this.dataService.itemAt(focusedListIndex);\n        prefix = this.optionPrefix;\n      } else {\n        return null;\n      }\n\n      return prefix + \"-\" + this.prop(this.valueField, this.valuePrimitive)(item);\n    }\n  }, {\n    key: \"noDataLabel\",\n    get: function get() {\n      if (this.dataService.itemsCount === 0) {\n        return this.noDataText;\n      }\n    }\n  }, {\n    key: \"clearTitle\",\n    get: function get() {\n      return this.localization.get('clearTitle');\n    }\n  }, {\n    key: \"isOpen\",\n    get: function get() {\n      return this._open;\n    }\n  }, {\n    key: \"isFocused\",\n    set: function set(isFocused) {\n      this.renderer[isFocused ? 'addClass' : 'removeClass'](this.hostElement.nativeElement, 'k-state-focused');\n      this._isFocused = isFocused;\n    },\n    get: function get() {\n      return this._isFocused;\n    }\n  }]);\n\n  return MultiSelectComponent;\n}();\n\nMultiSelectComponent.ɵfac = function MultiSelectComponent_Factory(t) {\n  return new (t || MultiSelectComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(DataService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(DisabledItemsService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(TOUCH_ENABLED, 8));\n};\n\nMultiSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MultiSelectComponent,\n  selectors: [[\"kendo-multiselect\"]],\n  contentQueries: function MultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ItemTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CustomItemTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FixedGroupTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TagTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupTagTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NoDataTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customItemTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fixedGroupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tagTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupTagTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noDataTemplate = _t.first);\n    }\n  },\n  viewQuery: function MultiSelectComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c10, true, ViewContainerRef);\n      ɵngcc0.ɵɵviewQuery(SearchBarComponent, true);\n      ɵngcc0.ɵɵviewQuery(_c11, true);\n      ɵngcc0.ɵɵviewQuery(_c18, true);\n      ɵngcc0.ɵɵviewQuery(_c12, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchbar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popupTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionsList = _t.first);\n    }\n  },\n  hostVars: 9,\n  hostBindings: function MultiSelectComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.widgetClasses)(\"k-multiselect\", ctx.widgetClasses)(\"k-header\", ctx.widgetClasses)(\"k-state-disabled\", ctx.disabledClass);\n    }\n  },\n  inputs: {\n    focusableId: \"focusableId\",\n    autoClose: \"autoClose\",\n    tabindex: \"tabindex\",\n    disabled: \"disabled\",\n    readonly: \"readonly\",\n    filterable: \"filterable\",\n    listHeight: \"listHeight\",\n    clearButton: \"clearButton\",\n    tagMapper: \"tagMapper\",\n    allowCustom: \"allowCustom\",\n    valueNormalizer: \"valueNormalizer\",\n    data: \"data\",\n    value: \"value\",\n    tabIndex: \"tabIndex\",\n    placeholder: \"placeholder\",\n    itemDisabled: \"itemDisabled\",\n    virtual: \"virtual\",\n    popupSettings: \"popupSettings\",\n    valuePrimitive: \"valuePrimitive\",\n    loading: \"loading\",\n    valueField: \"valueField\",\n    textField: \"textField\"\n  },\n  outputs: {\n    filterChange: \"filterChange\",\n    valueChange: \"valueChange\",\n    open: \"open\",\n    close: \"close\",\n    onFocus: \"focus\",\n    onBlur: \"blur\",\n    removeTag: \"removeTag\"\n  },\n  exportAs: [\"kendoMultiSelect\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MULTISELECT_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.multiselect'\n  }, {\n    provide: FilterableDropDownComponentBase,\n    useExisting: forwardRef(function () {\n      return MultiSelectComponent;\n    })\n  }, {\n    provide: KendoInput,\n    useExisting: forwardRef(function () {\n      return MultiSelectComponent;\n    })\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 23,\n  consts: function consts() {\n    var i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text displayed in the popup when there are no items\n       * @meaning kendo.multiselect.noDataText\n       */\n      var MSG_EXTERNAL_1450213984397806503$$DIST_FESM2015_INDEX_JS_29 = goog.getMsg(\"NO DATA FOUND\");\n      i18n_28 = MSG_EXTERNAL_1450213984397806503$$DIST_FESM2015_INDEX_JS_29;\n    } else {\n      i18n_28 = $localize(_templateObject6());\n    }\n\n    var i18n_30;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the clear button\n       * @meaning kendo.combobox.clearTitle\n       */\n      var MSG_EXTERNAL_2025597431468961462$$DIST_FESM2015_INDEX_JS_31 = goog.getMsg(\"clear\");\n      i18n_30 = MSG_EXTERNAL_2025597431468961462$$DIST_FESM2015_INDEX_JS_31;\n    } else {\n      i18n_30 = $localize(_templateObject7());\n    }\n\n    return [[\"kendoMultiSelectLocalizedMessages\", \"\", 6, \"noDataText\", \"clearTitle\"], [\"noDataText\", i18n_28, \"clearTitle\", i18n_30], [1, \"k-multiselect-wrap\", \"k-floatwrap\", 3, \"mousedown\"], [\"wrapper\", \"\"], [3, \"id\", \"tags\", \"textField\", \"valueField\", \"focused\", \"disabled\", \"template\", \"groupTemplate\", \"tagPrefix\", \"removeTag\"], [3, \"id\", \"role\", \"tagListId\", \"activeDescendant\", \"noDataLabel\", \"userInput\", \"disabled\", \"readonly\", \"tabIndex\", \"popupOpen\", \"placeholder\", \"onNavigate\", \"valueChange\", \"onBlur\", \"onFocus\"], [\"searchbar\", \"\"], [\"class\", \"k-icon k-clear-value k-i-close\", \"role\", \"button\", \"tabindex\", \"-1\", 3, \"mousedown\", 4, \"ngIf\"], [\"class\", \"k-icon k-i-loading\", 4, \"ngIf\"], [\"popupTemplate\", \"\"], [3, \"ngIf\"], [\"container\", \"\"], [\"role\", \"button\", \"tabindex\", \"-1\", 1, \"k-icon\", \"k-clear-value\", \"k-i-close\", 3, \"mousedown\"], [1, \"k-icon\", \"k-i-loading\"], [4, \"ngIf\"], [\"class\", \"k-list\", 4, \"ngIf\"], [3, \"id\", \"optionPrefix\", \"data\", \"textField\", \"valueField\", \"height\", \"template\", \"groupTemplate\", \"fixedGroupTemplate\", \"show\", \"multipleSelection\", \"virtual\", \"pageChange\"], [\"optionsList\", \"\"], [\"class\", \"k-nodata\", 4, \"ngIf\"], [3, \"templateContext\"], [1, \"k-list\"], [\"kendoDropDownsSelectable\", \"\", 1, \"k-item\", \"k-custom-item\", 3, \"multipleSelection\", \"index\"], [4, \"ngIf\", \"ngIfElse\"], [\"default_custom_item_template\", \"\"], [1, \"k-icon\", \"k-i-plus\", 2, \"float\", \"right\"], [1, \"k-nodata\"], [3, \"ngIf\", \"templateContext\"], [3, \"resize\"]];\n  },\n  template: function MultiSelectComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MultiSelectComponent_Template_div_mousedown_2_listener($event) {\n        return ctx.wrapperMousedown($event);\n      });\n      ɵngcc0.ɵɵelementStart(4, \"kendo-taglist\", 4);\n      ɵngcc0.ɵɵlistener(\"removeTag\", function MultiSelectComponent_Template_kendo_taglist_removeTag_4_listener($event) {\n        return ctx.handleRemoveTag($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"kendo-searchbar\", 5, 6);\n      ɵngcc0.ɵɵlistener(\"onNavigate\", function MultiSelectComponent_Template_kendo_searchbar_onNavigate_5_listener($event) {\n        return ctx.handleNavigate($event);\n      })(\"valueChange\", function MultiSelectComponent_Template_kendo_searchbar_valueChange_5_listener($event) {\n        return ctx.handleFilter($event);\n      })(\"onBlur\", function MultiSelectComponent_Template_kendo_searchbar_onBlur_5_listener() {\n        return ctx.onSearchBarBlur();\n      })(\"onFocus\", function MultiSelectComponent_Template_kendo_searchbar_onFocus_5_listener() {\n        return ctx.onSearchBarFocus();\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(7, MultiSelectComponent_span_7_Template, 1, 1, \"span\", 7);\n      ɵngcc0.ɵɵtemplate(8, MultiSelectComponent_span_8_Template, 1, 0, \"span\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, MultiSelectComponent_ng_template_9_Template, 6, 16, \"ng-template\", null, 9, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(11, MultiSelectComponent_ng_template_11_Template, 1, 0, \"ng-template\", 10);\n      ɵngcc0.ɵɵelementContainer(12, null, 11);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(4);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.tagListId)(\"tags\", ctx.tags)(\"textField\", ctx.textField)(\"valueField\", ctx.valueField)(\"focused\", ctx.focusedTagIndex)(\"disabled\", ctx.disabled)(\"template\", ctx.tagTemplate)(\"groupTemplate\", ctx.groupTagTemplate)(\"tagPrefix\", ctx.tagPrefix);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"id\", ctx.focusableId)(\"role\", \"listbox\")(\"tagListId\", ctx.tagListId)(\"activeDescendant\", ctx.activeDescendant)(\"noDataLabel\", ctx.noDataLabel)(\"userInput\", ctx.text)(\"disabled\", ctx.disabled)(\"readonly\", ctx.readonly)(\"tabIndex\", ctx.tabIndex)(\"popupOpen\", ctx.isOpen)(\"placeholder\", ctx.placeholder);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.readonly && ctx.clearButton && ((ctx.tags == null ? null : ctx.tags.length) || (ctx.text == null ? null : ctx.text.length)));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, TagListComponent, SearchBarComponent, ɵngcc2.NgIf, ListComponent, TemplateContextDirective, SelectableDirective, ɵngcc1.ResizeSensorComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nMultiSelectComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PopupService\n  }, {\n    type: DataService\n  }, {\n    type: SelectionService\n  }, {\n    type: NavigationService\n  }, {\n    type: DisabledItemsService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: KeyValueDiffers\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [TOUCH_ENABLED]\n    }]\n  }];\n};\n\nMultiSelectComponent.propDecorators = {\n  focusableId: [{\n    type: Input\n  }],\n  autoClose: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  textField: [{\n    type: Input\n  }],\n  tabindex: [{\n    type: Input\n  }],\n  tabIndex: [{\n    type: Input,\n    args: [\"tabIndex\"]\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  itemDisabled: [{\n    type: Input\n  }],\n  readonly: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  virtual: [{\n    type: Input\n  }],\n  popupSettings: [{\n    type: Input\n  }],\n  listHeight: [{\n    type: Input\n  }],\n  valuePrimitive: [{\n    type: Input\n  }],\n  clearButton: [{\n    type: Input\n  }],\n  tagMapper: [{\n    type: Input\n  }],\n  allowCustom: [{\n    type: Input\n  }],\n  valueNormalizer: [{\n    type: Input\n  }],\n  filterChange: [{\n    type: Output\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  open: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }],\n  onFocus: [{\n    type: Output,\n    args: ['focus']\n  }],\n  onBlur: [{\n    type: Output,\n    args: ['blur']\n  }],\n  removeTag: [{\n    type: Output\n  }],\n  container: [{\n    type: ViewChild,\n    args: ['container', {\n      read: ViewContainerRef\n    }]\n  }],\n  searchbar: [{\n    type: ViewChild,\n    args: [SearchBarComponent]\n  }],\n  popupTemplate: [{\n    type: ViewChild,\n    args: ['popupTemplate']\n  }],\n  wrapper: [{\n    type: ViewChild,\n    args: ['wrapper']\n  }],\n  optionsList: [{\n    type: ViewChild,\n    args: ['optionsList']\n  }],\n  template: [{\n    type: ContentChild,\n    args: [ItemTemplateDirective]\n  }],\n  customItemTemplate: [{\n    type: ContentChild,\n    args: [CustomItemTemplateDirective]\n  }],\n  groupTemplate: [{\n    type: ContentChild,\n    args: [GroupTemplateDirective]\n  }],\n  fixedGroupTemplate: [{\n    type: ContentChild,\n    args: [FixedGroupTemplateDirective]\n  }],\n  headerTemplate: [{\n    type: ContentChild,\n    args: [HeaderTemplateDirective]\n  }],\n  footerTemplate: [{\n    type: ContentChild,\n    args: [FooterTemplateDirective]\n  }],\n  tagTemplate: [{\n    type: ContentChild,\n    args: [TagTemplateDirective]\n  }],\n  groupTagTemplate: [{\n    type: ContentChild,\n    args: [GroupTagTemplateDirective]\n  }],\n  noDataTemplate: [{\n    type: ContentChild,\n    args: [NoDataTemplateDirective]\n  }],\n  widgetClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-multiselect']\n  }, {\n    type: HostBinding,\n    args: ['class.k-header']\n  }],\n  dir: [{\n    type: HostBinding,\n    args: ['attr.dir']\n  }],\n  disabledClass: [{\n    type: HostBinding,\n    args: ['class.k-state-disabled']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiSelectComponent, [{\n    type: Component,\n    args: [{\n      exportAs: 'kendoMultiSelect',\n      providers: [MULTISELECT_VALUE_ACCESSOR, DataService, SelectionService, NavigationService, DisabledItemsService, LocalizationService, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.multiselect'\n      }, {\n        provide: FilterableDropDownComponentBase,\n        useExisting: forwardRef(function () {\n          return MultiSelectComponent;\n        })\n      }, {\n        provide: KendoInput,\n        useExisting: forwardRef(function () {\n          return MultiSelectComponent;\n        })\n      }],\n      selector: 'kendo-multiselect',\n      template: \"\\n        <ng-container kendoMultiSelectLocalizedMessages\\n            i18n-noDataText=\\\"kendo.multiselect.noDataText|The text displayed in the popup when there are no items\\\"\\n            noDataText=\\\"NO DATA FOUND\\\"\\n\\n            i18n-clearTitle=\\\"kendo.combobox.clearTitle|The title of the clear button\\\"\\n            clearTitle=\\\"clear\\\"\\n        >\\n        </ng-container>\\n        <div class=\\\"k-multiselect-wrap k-floatwrap\\\"\\n            #wrapper\\n            (mousedown)=\\\"wrapperMousedown($event)\\\"\\n        >\\n            <kendo-taglist\\n                [id]=\\\"tagListId\\\"\\n                [tags]=\\\"tags\\\"\\n                [textField]=\\\"textField\\\"\\n                [valueField]=\\\"valueField\\\"\\n                [focused]=\\\"focusedTagIndex\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [template]=\\\"tagTemplate\\\"\\n                [groupTemplate]=\\\"groupTagTemplate\\\"\\n                [tagPrefix]=\\\"tagPrefix\\\"\\n                (removeTag)=\\\"handleRemoveTag($event)\\\"\\n            >\\n            </kendo-taglist>\\n            <kendo-searchbar\\n                #searchbar\\n                [id]=\\\"focusableId\\\"\\n                [role]=\\\"'listbox'\\\"\\n                [tagListId]=\\\"tagListId\\\"\\n                [activeDescendant]=\\\"activeDescendant\\\"\\n                [noDataLabel]=\\\"noDataLabel\\\"\\n                [userInput]=\\\"text\\\"\\n                [disabled]=\\\"disabled\\\"\\n                [readonly]=\\\"readonly\\\"\\n                [tabIndex]=\\\"tabIndex\\\"\\n                [popupOpen]=\\\"isOpen\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                (onNavigate)=\\\"handleNavigate($event)\\\"\\n                (valueChange)=\\\"handleFilter($event)\\\"\\n                (onBlur)=\\\"onSearchBarBlur()\\\"\\n                (onFocus)=\\\"onSearchBarFocus()\\\"\\n            >\\n            </kendo-searchbar>\\n            <span\\n                *ngIf=\\\"!loading && !readonly && clearButton && (tags?.length || text?.length)\\\"\\n                class=\\\"k-icon k-clear-value k-i-close\\\"\\n                [attr.title]=\\\"clearTitle\\\"\\n                role=\\\"button\\\"\\n                tabindex=\\\"-1\\\"\\n                (mousedown)=\\\"clearAll($event)\\\"\\n            >\\n            </span>\\n            <span *ngIf=\\\"loading\\\" class=\\\"k-icon k-i-loading\\\"></span>\\n        </div>\\n        <ng-template #popupTemplate>\\n            <!--header template-->\\n            <ng-template *ngIf=\\\"headerTemplate\\\"\\n                [templateContext]=\\\"{\\n                    templateRef: headerTemplate.templateRef\\n                }\\\">\\n            </ng-template>\\n            <!--custom item template-->\\n            <div class=\\\"k-list\\\" *ngIf=\\\"allowCustom && text\\\">\\n                <div class=\\\"k-item k-custom-item\\\" kendoDropDownsSelectable [multipleSelection]=\\\"true\\\" [index]=\\\"-1\\\">\\n                    <ng-template *ngIf=\\\"customItemTemplate;else default_custom_item_template\\\"\\n                        [templateContext]=\\\"{\\n                            templateRef: customItemTemplate.templateRef,\\n                            $implicit: text\\n                        }\\\">\\n                    </ng-template>\\n                    <ng-template #default_custom_item_template>{{ text }}</ng-template>\\n                    <span class=\\\"k-icon k-i-plus\\\" style=\\\"float: right\\\"></span>\\n                </div>\\n            </div>\\n            <!--list-->\\n            <kendo-list\\n                #optionsList\\n                [id]=\\\"listBoxId\\\"\\n                [optionPrefix]=\\\"optionPrefix\\\"\\n                [data]=\\\"data\\\"\\n                [textField]=\\\"textField\\\"\\n                [valueField]=\\\"valueField\\\"\\n                [height]=\\\"listHeight\\\"\\n                [template]=\\\"template\\\"\\n                [groupTemplate]=\\\"groupTemplate\\\"\\n                [fixedGroupTemplate]=\\\"fixedGroupTemplate\\\"\\n                [show]=\\\"isOpen\\\"\\n                [multipleSelection]=\\\"true\\\"\\n                [virtual]=\\\"virtual\\\"\\n                (pageChange)=\\\"pageChange($event)\\\"\\n                >\\n            </kendo-list>\\n            <!--no data template-->\\n            <div class=\\\"k-nodata\\\" *ngIf=\\\"data.length === 0\\\">\\n                <ng-template [ngIf]=\\\"noDataTemplate\\\"\\n                    [templateContext]=\\\"{\\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\\n                    }\\\">\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"!noDataTemplate\\\">\\n                    <div>{{ noDataText }}</div>\\n                </ng-template>\\n            </div>\\n            <!--footer template-->\\n            <ng-template *ngIf=\\\"footerTemplate\\\"\\n                [templateContext]=\\\"{\\n                    templateRef: footerTemplate.templateRef\\n                }\\\">\\n            </ng-template>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"isOpen\\\">\\n            <kendo-resize-sensor (resize)=\\\"onResize()\\\"></kendo-resize-sensor>\\n        </ng-template>\\n        <ng-container #container></ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PopupService\n    }, {\n      type: DataService\n    }, {\n      type: SelectionService\n    }, {\n      type: NavigationService\n    }, {\n      type: DisabledItemsService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: KeyValueDiffers\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [TOUCH_ENABLED]\n      }]\n    }];\n  }, {\n    focusableId: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    listHeight: [{\n      type: Input\n    }],\n    clearButton: [{\n      type: Input\n    }],\n    tagMapper: [{\n      type: Input\n    }],\n    allowCustom: [{\n      type: Input\n    }],\n    valueNormalizer: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    open: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output,\n      args: ['focus']\n    }],\n    onBlur: [{\n      type: Output,\n      args: ['blur']\n    }],\n    removeTag: [{\n      type: Output\n    }],\n    widgetClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-multiselect']\n    }, {\n      type: HostBinding,\n      args: ['class.k-header']\n    }],\n    data: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [\"tabIndex\"]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    itemDisabled: [{\n      type: Input\n    }],\n    virtual: [{\n      type: Input\n    }],\n    popupSettings: [{\n      type: Input\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    disabledClass: [{\n      type: HostBinding,\n      args: ['class.k-state-disabled']\n    }],\n    valuePrimitive: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: ['container', {\n        read: ViewContainerRef\n      }]\n    }],\n    searchbar: [{\n      type: ViewChild,\n      args: [SearchBarComponent]\n    }],\n    popupTemplate: [{\n      type: ViewChild,\n      args: ['popupTemplate']\n    }],\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    optionsList: [{\n      type: ViewChild,\n      args: ['optionsList']\n    }],\n    template: [{\n      type: ContentChild,\n      args: [ItemTemplateDirective]\n    }],\n    customItemTemplate: [{\n      type: ContentChild,\n      args: [CustomItemTemplateDirective]\n    }],\n    groupTemplate: [{\n      type: ContentChild,\n      args: [GroupTemplateDirective]\n    }],\n    fixedGroupTemplate: [{\n      type: ContentChild,\n      args: [FixedGroupTemplateDirective]\n    }],\n    headerTemplate: [{\n      type: ContentChild,\n      args: [HeaderTemplateDirective]\n    }],\n    footerTemplate: [{\n      type: ContentChild,\n      args: [FooterTemplateDirective]\n    }],\n    tagTemplate: [{\n      type: ContentChild,\n      args: [TagTemplateDirective]\n    }],\n    groupTagTemplate: [{\n      type: ContentChild,\n      args: [GroupTagTemplateDirective]\n    }],\n    noDataTemplate: [{\n      type: ContentChild,\n      args: [NoDataTemplateDirective]\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * @hidden\n */\n\n\nvar TagListComponent = /*#__PURE__*/function () {\n  function TagListComponent() {\n    _classCallCheck(this, TagListComponent);\n\n    this.removeTag = new EventEmitter();\n  }\n\n  _createClass(TagListComponent, [{\n    key: \"tagProp\",\n    value: function tagProp(tag, prop) {\n      return prop && isObject(tag) ? tag[prop] : tag;\n    }\n  }, {\n    key: \"deleteTag\",\n    value: function deleteTag(event, tag) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n\n      if (!this.disabled && event.which === 1) {\n        this.removeTag.emit(tag);\n      }\n    }\n  }, {\n    key: \"itemId\",\n    value: function itemId(tag) {\n      if (tag) {\n        //because of custom values\n        return this.tagPrefix + \"-\" + this.tagProp(tag, this.valueField);\n      }\n    }\n  }, {\n    key: \"isGroupTag\",\n    value: function isGroupTag(tag) {\n      return tag instanceof Array;\n    }\n  }]);\n\n  return TagListComponent;\n}();\n\nTagListComponent.ɵfac = function TagListComponent_Factory(t) {\n  return new (t || TagListComponent)();\n};\n\nTagListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagListComponent,\n  selectors: [[\"kendo-taglist\"]],\n  inputs: {\n    tags: \"tags\",\n    textField: \"textField\",\n    valueField: \"valueField\",\n    focused: \"focused\",\n    template: \"template\",\n    groupTemplate: \"groupTemplate\",\n    disabled: \"disabled\",\n    tagPrefix: \"tagPrefix\",\n    id: \"id\"\n  },\n  outputs: {\n    removeTag: \"removeTag\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"k-reset\"], [\"role\", \"option\", \"aria-selected\", \"true\", \"class\", \"k-button\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"aria-selected\", \"true\", 1, \"k-button\", 3, \"ngClass\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"groupTag\", \"\"], [\"singleTag\", \"\"], [\"aria-label\", \"delete\", 1, \"k-select\"], [1, \"k-icon\", \"k-i-close\", 3, \"mousedown\"], [4, \"ngIf\"], [3, \"ngIf\"], [3, \"templateContext\"]],\n  template: function TagListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, TagListComponent_li_1_Template, 8, 9, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tags);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgForOf, ListItemDirective, ɵngcc2.NgClass, ɵngcc2.NgIf, TemplateContextDirective];\n  },\n  encapsulation: 2\n});\nTagListComponent.propDecorators = {\n  tags: [{\n    type: Input\n  }],\n  textField: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }],\n  focused: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }],\n  groupTemplate: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  tagPrefix: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  removeTag: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-taglist',\n      template: \"\\n        <ul [attr.id]=\\\"id\\\" class=\\\"k-reset\\\">\\n            <li role=\\\"option\\\" *ngFor=\\\"let tag of tags; let i = index;\\\" aria-selected=\\\"true\\\" [attr.aria-setsize]=\\\"tags?.length\\\"\\n                class=\\\"k-button\\\" [ngClass]=\\\"{ 'k-state-focused': i === focused }\\\" [attr.id]=\\\"itemId(tag)\\\"\\n            >\\n                <ng-template *ngIf=\\\"isGroupTag(tag); then groupTag else singleTag\\\"></ng-template>\\n                    <ng-template #groupTag>\\n                        <span>\\n                            <ng-template *ngIf=\\\"groupTemplate\\\"\\n                                [templateContext]=\\\"{\\n                                templateRef: groupTemplate.templateRef,\\n                                $implicit: tag\\n                            }\\\">\\n                            </ng-template>\\n                            <ng-template [ngIf]=\\\"!groupTemplate\\\">{{ tag.length }} {{ tag.length === 1 ? 'item' : 'items' }} selected</ng-template>\\n                        </span>\\n                    </ng-template>\\n                    <ng-template #singleTag>\\n                        <span>\\n                        <ng-template *ngIf=\\\"template\\\"\\n                                [templateContext]=\\\"{\\n                                templateRef: template.templateRef,\\n                                $implicit: tag\\n                            }\\\">\\n                            </ng-template>\\n                            <ng-template [ngIf]=\\\"!template\\\">{{ tagProp(tag, textField) }}</ng-template>\\n                        </span>\\n                    </ng-template>\\n\\n                <span aria-label=\\\"delete\\\" [attr.aria-hidden]=\\\"i !== focused\\\" class=\\\"k-select\\\">\\n                    <span class=\\\"k-icon k-i-close\\\" (mousedown)=\\\"deleteTag($event, tag)\\\">\\n                    </span>\\n                </span>\\n            </li>\\n        </ul>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    removeTag: [{\n      type: Output\n    }],\n    tags: [{\n      type: Input\n    }],\n    textField: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    focused: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    groupTemplate: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    tagPrefix: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar TemplateContextDirective = /*#__PURE__*/function () {\n  function TemplateContextDirective(viewContainerRef) {\n    _classCallCheck(this, TemplateContextDirective);\n\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  _createClass(TemplateContextDirective, [{\n    key: \"templateContext\",\n    set: function set(context) {\n      if (this.insertedViewRef) {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n        this.insertedViewRef = undefined;\n      }\n\n      if (context.templateRef) {\n        this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n      }\n    }\n  }]);\n\n  return TemplateContextDirective;\n}();\n\nTemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n  return new (t || TemplateContextDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef));\n};\n\nTemplateContextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TemplateContextDirective,\n  selectors: [[\"\", \"templateContext\", \"\"]],\n  inputs: {\n    templateContext: \"templateContext\"\n  }\n});\n/** @nocollapse */\n\nTemplateContextDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }];\n};\n\nTemplateContextDirective.propDecorators = {\n  templateContext: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TemplateContextDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[templateContext]' // tslint:disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: ViewContainerRef\n    }];\n  }, {\n    templateContext: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar SelectableDirective = /*#__PURE__*/function () {\n  function SelectableDirective(selectionService) {\n    _classCallCheck(this, SelectableDirective);\n\n    // @HostBinding('attr.offset-index')\n    // @Input() public offsetIndex: number;\n    this.multipleSelection = false;\n    this.selectionService = selectionService;\n  }\n\n  _createClass(SelectableDirective, [{\n    key: \"onClick\",\n    value: function onClick(event) {\n      event.stopPropagation();\n\n      if (this.multipleSelection) {\n        if (this.selectionService.isSelected(this.index)) {\n          this.selectionService.unselect(this.index);\n        } else {\n          this.selectionService.add(this.index);\n        }\n      } else {\n        this.selectionService.change(this.index);\n      }\n    }\n  }, {\n    key: \"focusedClassName\",\n    get: function get() {\n      return this.selectionService.isFocused(this.index);\n    }\n  }, {\n    key: \"selectedClassName\",\n    get: function get() {\n      return this.selectionService.isSelected(this.index);\n    }\n  }]);\n\n  return SelectableDirective;\n}();\n\nSelectableDirective.ɵfac = function SelectableDirective_Factory(t) {\n  return new (t || SelectableDirective)(ɵngcc0.ɵɵdirectiveInject(SelectionService));\n};\n\nSelectableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectableDirective,\n  selectors: [[\"\", \"kendoDropDownsSelectable\", \"\"]],\n  hostVars: 9,\n  hostBindings: function SelectableDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function SelectableDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"index\", ctx.index);\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.height, \"px\")(\"min-height\", ctx.height, \"px\");\n      ɵngcc0.ɵɵclassProp(\"k-state-focused\", ctx.focusedClassName)(\"k-state-selected\", ctx.selectedClassName);\n    }\n  },\n  inputs: {\n    multipleSelection: \"multipleSelection\",\n    index: \"index\",\n    height: \"height\"\n  }\n});\n/** @nocollapse */\n\nSelectableDirective.ctorParameters = function () {\n  return [{\n    type: SelectionService\n  }];\n};\n\nSelectableDirective.propDecorators = {\n  index: [{\n    type: HostBinding,\n    args: ['attr.index']\n  }, {\n    type: Input\n  }],\n  height: [{\n    type: HostBinding,\n    args: ['style.height.px']\n  }, {\n    type: HostBinding,\n    args: ['style.minHeight.px']\n  }, {\n    type: Input\n  }],\n  multipleSelection: [{\n    type: Input\n  }],\n  focusedClassName: [{\n    type: HostBinding,\n    args: ['class.k-state-focused']\n  }],\n  selectedClassName: [{\n    type: HostBinding,\n    args: ['class.k-state-selected']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownsSelectable]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }];\n  }, {\n    multipleSelection: [{\n      type: Input\n    }],\n    focusedClassName: [{\n      type: HostBinding,\n      args: ['class.k-state-focused']\n    }],\n    selectedClassName: [{\n      type: HostBinding,\n      args: ['class.k-state-selected']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    index: [{\n      type: HostBinding,\n      args: ['attr.index']\n    }, {\n      type: Input\n    }],\n    height: [{\n      type: HostBinding,\n      args: ['style.height.px']\n    }, {\n      type: HostBinding,\n      args: ['style.minHeight.px']\n    }, {\n      type: Input\n    }]\n  });\n})();\n/**\n * A directive which configures the MultiSelect to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug summarytagmode_multiselect %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"data\"></kendo-multiselect>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect [kendoMultiSelectSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselect>\n * ```\n */\n\n\nvar SummaryTagDirective = /*#__PURE__*/function () {\n  function SummaryTagDirective(multiSelectComponent) {\n    _classCallCheck(this, SummaryTagDirective);\n\n    this.multiSelectComponent = multiSelectComponent;\n    /**\n     * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n     */\n\n    this.showAfter = 0; // tslint:disable-line:no-input-rename\n\n    this.createTagMapper();\n  }\n\n  _createClass(SummaryTagDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isPresent(changes.showAfter)) {\n        this.createTagMapper();\n        this.multiSelectComponent.onTagMapperChange();\n      }\n    }\n  }, {\n    key: \"createTagMapper\",\n    value: function createTagMapper() {\n      var _this47 = this;\n\n      this.multiSelectComponent.tagMapper = function (tags) {\n        if (tags.length > _this47.showAfter) {\n          var result;\n          result = tags.slice(0, _this47.showAfter);\n          result.push(tags.slice(_this47.showAfter, tags.length));\n          return result;\n        } else {\n          return tags;\n        }\n      };\n    }\n  }]);\n\n  return SummaryTagDirective;\n}();\n\nSummaryTagDirective.ɵfac = function SummaryTagDirective_Factory(t) {\n  return new (t || SummaryTagDirective)(ɵngcc0.ɵɵdirectiveInject(MultiSelectComponent));\n};\n\nSummaryTagDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SummaryTagDirective,\n  selectors: [[\"\", \"kendoMultiSelectSummaryTag\", \"\"]],\n  inputs: {\n    showAfter: [\"kendoMultiSelectSummaryTag\", \"showAfter\"]\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nSummaryTagDirective.ctorParameters = function () {\n  return [{\n    type: MultiSelectComponent\n  }];\n};\n\nSummaryTagDirective.propDecorators = {\n  showAfter: [{\n    type: Input,\n    args: ['kendoMultiSelectSummaryTag']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SummaryTagDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoMultiSelectSummaryTag]'\n    }]\n  }], function () {\n    return [{\n      type: MultiSelectComponent\n    }];\n  }, {\n    showAfter: [{\n      type: Input,\n      args: ['kendoMultiSelectSummaryTag']\n    }]\n  });\n})();\n\nvar DEFAULT_FILTER_SETTINGS = {\n  caseSensitive: false,\n  operator: 'startsWith'\n};\n/**\n * Implements an event handler for the `filterChange` event of a DropDowns component\n * which performs simple data filtering.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"data\"\n *      kendoDropDownFilter\n *      placeholder=\"e.g. Andorra\">\n *  </kendo-autocomplete>\n * `\n * })\n * class AppComponent {\n *     public data: Array<string> = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\"];\n * }\n * ```\n */\n\nvar FilterDirective = /*#__PURE__*/function () {\n  function FilterDirective(component) {\n    _classCallCheck(this, FilterDirective);\n\n    this.component = component;\n    /**\n     * @hidden\n     *\n     * Sets whether the filtering functionality is enabled on component init.\n     */\n\n    this.filterable = true;\n    this._data = [];\n    this._filterSettings = DEFAULT_FILTER_SETTINGS;\n  }\n  /**\n   * The initial data that will be used as a source array for the filtering operations.\n   */\n\n\n  _createClass(FilterDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this48 = this;\n\n      this.component.filterable = this.filterable;\n      this.filterChangeSubscription = this.component.filterChange.subscribe(function (query) {\n        return _this48.component.data = _this48.getFilteredData(query);\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.filterChangeSubscription.unsubscribe();\n    }\n  }, {\n    key: \"getFilteredData\",\n    value: function getFilteredData(query) {\n      var _this49 = this;\n\n      var field = this.component.textField || this.component.valueField;\n      return this.data.filter(function (item) {\n        return _this49.checkItem(getter(item, field), query);\n      });\n    }\n  }, {\n    key: \"checkItem\",\n    value: function checkItem(target, query) {\n      target = this.normalizeValue(target);\n      query = this.normalizeValue(query);\n      return this.filterSettings.operator === 'contains' ? target.indexOf(query) !== -1 : target.indexOf(query) === 0;\n    }\n  }, {\n    key: \"normalizeValue\",\n    value: function normalizeValue(value) {\n      var normalizedValue = isPresent(value) ? value.toString() : '';\n      return this.filterSettings.caseSensitive ? normalizedValue : normalizedValue.toLowerCase();\n    }\n  }, {\n    key: \"data\",\n    set: function set(data) {\n      this._data = data || [];\n    },\n    get: function get() {\n      return this._data;\n    }\n    /**\n     * The configuration object which sets the behavior of the `kendoDropDownFilter` directive.\n     */\n\n  }, {\n    key: \"filterSettings\",\n    set: function set(settings) {\n      this._filterSettings = Object.assign({}, DEFAULT_FILTER_SETTINGS, settings);\n    },\n    get: function get() {\n      return this._filterSettings;\n    }\n  }]);\n\n  return FilterDirective;\n}();\n\nFilterDirective.ɵfac = function FilterDirective_Factory(t) {\n  return new (t || FilterDirective)(ɵngcc0.ɵɵdirectiveInject(FilterableDropDownComponentBase));\n};\n\nFilterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterDirective,\n  selectors: [[\"\", \"kendoDropDownFilter\", \"\"]],\n  inputs: {\n    filterable: \"filterable\",\n    data: \"data\",\n    filterSettings: [\"kendoDropDownFilter\", \"filterSettings\"]\n  }\n});\n/** @nocollapse */\n\nFilterDirective.ctorParameters = function () {\n  return [{\n    type: FilterableDropDownComponentBase\n  }];\n};\n\nFilterDirective.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  filterSettings: [{\n    type: Input,\n    args: ['kendoDropDownFilter']\n  }],\n  filterable: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropDownFilter]'\n    }]\n  }], function () {\n    return [{\n      type: FilterableDropDownComponentBase\n    }];\n  }, {\n    filterable: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    filterSettings: [{\n      type: Input,\n      args: ['kendoDropDownFilter']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar Messages = /*#__PURE__*/function (_ComponentMessages) {\n  _inherits(Messages, _ComponentMessages);\n\n  var _super2 = _createSuper(Messages);\n\n  function Messages() {\n    _classCallCheck(this, Messages);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return Messages;\n}(ComponentMessages);\n\nMessages.ɵfac = function Messages_Factory(t) {\n  return ɵMessages_BaseFactory(t || Messages);\n};\n\nMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Messages,\n  inputs: {\n    noDataText: \"noDataText\",\n    clearTitle: \"clearTitle\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMessages.propDecorators = {\n  noDataText: [{\n    type: Input\n  }],\n  clearTitle: [{\n    type: Input\n  }]\n};\nvar ɵMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(Messages);\n/**\n * @hidden\n */\n\nvar LocalizedMessagesDirective = /*#__PURE__*/function (_Messages) {\n  _inherits(LocalizedMessagesDirective, _Messages);\n\n  var _super3 = _createSuper(LocalizedMessagesDirective);\n\n  function LocalizedMessagesDirective(service) {\n    var _this50;\n\n    _classCallCheck(this, LocalizedMessagesDirective);\n\n    _this50 = _super3.call(this);\n    _this50.service = service;\n    return _this50;\n  }\n\n  return LocalizedMessagesDirective;\n}(Messages);\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoDropDownListLocalizedMessages\", \"\"], [\"\", \"kendoComboBoxLocalizedMessages\", \"\"], [\"\", \"kendoAutoCompleteLocalizedMessages\", \"\"], [\"\", \"kendoMultiSelectLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return LocalizedMessagesDirective;\n    }) // tslint:disable-line:no-forward-ref\n\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return LocalizedMessagesDirective;\n        }) // tslint:disable-line:no-forward-ref\n\n      }],\n      selector: \"\\n    [kendoDropDownListLocalizedMessages],\\n    [kendoComboBoxLocalizedMessages],\\n    [kendoAutoCompleteLocalizedMessages],\\n    [kendoMultiSelectLocalizedMessages]\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_dropdowns %}#toc-messages)).\n */\n\n\nvar CustomMessagesComponent = /*#__PURE__*/function (_Messages2) {\n  _inherits(CustomMessagesComponent, _Messages2);\n\n  var _super4 = _createSuper(CustomMessagesComponent);\n\n  function CustomMessagesComponent(service) {\n    var _this51;\n\n    _classCallCheck(this, CustomMessagesComponent);\n\n    _this51 = _super4.call(this);\n    _this51.service = service;\n    return _this51;\n  }\n\n  _createClass(CustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return CustomMessagesComponent;\n}(Messages);\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-dropdownlist-messages\"], [\"kendo-combobox-messages\"], [\"kendo-autocomplete-messages\"], [\"kendo-multiselect-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return CustomMessagesComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return CustomMessagesComponent;\n        })\n      }],\n      selector: 'kendo-dropdownlist-messages, kendo-combobox-messages, kendo-autocomplete-messages, kendo-multiselect-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar SHARED_DIRECTIVES = [HeaderTemplateDirective, FooterTemplateDirective, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, NoDataTemplateDirective, LocalizedMessagesDirective, CustomMessagesComponent, FilterDirective];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The noData template directive.\n */\n\nvar SharedDirectivesModule = function SharedDirectivesModule() {\n  _classCallCheck(this, SharedDirectivesModule);\n};\n\nSharedDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SharedDirectivesModule\n});\nSharedDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SharedDirectivesModule_Factory(t) {\n    return new (t || SharedDirectivesModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedDirectivesModule, {\n    declarations: [HeaderTemplateDirective, FooterTemplateDirective, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, NoDataTemplateDirective, LocalizedMessagesDirective, CustomMessagesComponent, FilterDirective],\n    exports: [HeaderTemplateDirective, FooterTemplateDirective, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, NoDataTemplateDirective, LocalizedMessagesDirective, CustomMessagesComponent, FilterDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedDirectivesModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [SHARED_DIRECTIVES],\n      exports: [SHARED_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n\nvar INTERNAL_DIRECTIVES = [ListComponent, ListItemDirective, SelectableDirective, SearchBarComponent, TemplateContextDirective];\n/**\n * @hidden\n */\n\nvar SharedModule = function SharedModule() {\n  _classCallCheck(this, SharedModule);\n};\n\nSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SharedModule_Factory(t) {\n    return new (t || SharedModule)();\n  },\n  imports: [[CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule], CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, {\n    declarations: function declarations() {\n      return [ListComponent, ListItemDirective, SelectableDirective, SearchBarComponent, TemplateContextDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule];\n    },\n    exports: function exports() {\n      return [ListComponent, ListItemDirective, SelectableDirective, SearchBarComponent, TemplateContextDirective, CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_DIRECTIVES],\n      exports: [INTERNAL_DIRECTIVES, CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule],\n      imports: [CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n    }]\n  }], null, null);\n})();\n\nvar AUTOCOMPLETE_DIRECTIVES = [AutoCompleteComponent];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `AutoCompleteComponent`&mdash;The AutoComplete component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\n\nvar AutoCompleteModule = function AutoCompleteModule() {\n  _classCallCheck(this, AutoCompleteModule);\n};\n\nAutoCompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AutoCompleteModule\n});\nAutoCompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AutoCompleteModule_Factory(t) {\n    return new (t || AutoCompleteModule)();\n  },\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutoCompleteModule, {\n    declarations: [AutoCompleteComponent],\n    imports: [SharedModule],\n    exports: [AutoCompleteComponent, SharedDirectivesModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AutoCompleteModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AUTOCOMPLETE_DIRECTIVES],\n      exports: [AUTOCOMPLETE_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule]\n    }]\n  }], null, null);\n})();\n/* tslint:disable:object-literal-sort-keys */\n\n\nvar agentRxs = {\n  wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n  ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n  meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n  webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n  tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n  sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n  ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nvar osRxs = {\n  ios: /^i(phone|pad|pod)$/i,\n  android: /^android|fire$/i,\n  blackberry: /^blackberry|playbook/i,\n  windows: /windows/,\n  wp: /wp/,\n  flat: /sailfish|ffos|tizen/i,\n  meego: /meego/\n};\nvar desktopBrowserRxs = {\n  edge: /(edge)[ \\/]([\\w.]+)/i,\n  webkit: /(chrome)[ \\/]([\\w.]+)/i,\n  safari: /(webkit)[ \\/]([\\w.]+)/i,\n  opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n  msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n  mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nvar mobileBrowserRxs = {\n  omini: /Opera\\sMini/i,\n  omobile: /Opera\\sMobi/i,\n  firefox: /Firefox|Fennec/i,\n  mobilesafari: /version\\/.*safari/i,\n  ie: /MSIE|Windows\\sPhone/i,\n  chrome: /chrome|crios/i,\n  webkit: /webkit/i\n};\n\nvar testRx = function testRx(agent, rxs, dflt) {\n  for (var rx in rxs) {\n    if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n      return rx;\n    }\n  }\n\n  return dflt !== undefined ? dflt : agent;\n};\n/**\n * @hidden\n */\n\n\nvar detectMobileOS = function detectMobileOS(ua) {\n  var minorVersion;\n  var match = [];\n\n  for (var agent in agentRxs) {\n    if (agentRxs.hasOwnProperty(agent)) {\n      match = ua.match(agentRxs[agent]);\n\n      if (!match) {\n        continue;\n      }\n\n      if (agent === 'windows' && 'plugins' in window.navigator) {\n        return null;\n      } // Break if not Metro/Mobile Windows\n\n\n      var os = {};\n      os.device = agent;\n      os.browser = testRx(ua, mobileBrowserRxs, 'default');\n      os.name = testRx(agent, osRxs);\n      os[os.name] = true;\n      os.majorVersion = match[2];\n      os.minorVersion = match[3].replace('_', '.');\n      minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n      os.flatVersion = os.majorVersion + minorVersion + new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0');\n      os.cordova = typeof window.PhoneGap !== undefined || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n\n      os.appMode = window.navigator.standalone || /file|local|wmapp/.test(window.location.protocol) || os.cordova; // Use file protocol to detect appModes.\n\n      return os;\n    }\n  }\n\n  return null;\n};\n/**\n * @hidden\n */\n\n\nvar detectDesktopBrowser = function detectDesktopBrowser(ua) {\n  var browserInfo = null;\n  var match = [];\n\n  for (var agent in desktopBrowserRxs) {\n    if (desktopBrowserRxs.hasOwnProperty(agent)) {\n      match = ua.match(desktopBrowserRxs[agent]);\n\n      if (match) {\n        browserInfo = {};\n        browserInfo[agent] = true;\n        browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n        browserInfo.version = parseInt(document.documentMode || match[2], 10);\n        break;\n      }\n    }\n  }\n\n  return browserInfo;\n};\n\nvar userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n/**\n * @hidden\n */\n\nvar browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n/**\n * @hidden\n */\n\nvar mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n/**\n * @hidden\n */\n\nvar touch = isWindowAvailable() && 'ontouchstart' in window;\n/**\n * @hidden\n */\n\nvar msPointers = browser && !browser.chrome && window.MSPointerEvent;\n/**\n * @hidden\n */\n\nvar pointers = browser && !browser.chrome && window.PointerEvent;\n/**\n * @hidden\n */\n\nvar touchEnabled = mobileOS && (touch || msPointers || pointers);\nvar COMBOBOX_DIRECTIVES = [ComboBoxComponent];\nvar ɵ0$1 = touchEnabled;\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ComboBoxComponent`&mdash;The ComboBox component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\n\nvar ComboBoxModule = function ComboBoxModule() {\n  _classCallCheck(this, ComboBoxModule);\n};\n\nComboBoxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ComboBoxModule\n});\nComboBoxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ComboBoxModule_Factory(t) {\n    return new (t || ComboBoxModule)();\n  },\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: ɵ0$1\n  }],\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ComboBoxModule, {\n    declarations: [ComboBoxComponent],\n    imports: [SharedModule],\n    exports: [ComboBoxComponent, SharedDirectivesModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ComboBoxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMBOBOX_DIRECTIVES],\n      exports: [COMBOBOX_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar FilterInputDirective = /*#__PURE__*/function () {\n  function FilterInputDirective(element, zone) {\n    _classCallCheck(this, FilterInputDirective);\n\n    this.element = element;\n    this.zone = zone;\n  }\n\n  _createClass(FilterInputDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      var _this52 = this;\n\n      if (this.focused) {\n        this.nextTick(function () {\n          return _this52.element.nativeElement.focus();\n        });\n      }\n    }\n  }, {\n    key: \"nextTick\",\n    value: function nextTick(fn) {\n      this.zone.runOutsideAngular(function () {\n        return setTimeout(fn);\n      });\n    }\n  }]);\n\n  return FilterInputDirective;\n}();\n\nFilterInputDirective.ɵfac = function FilterInputDirective_Factory(t) {\n  return new (t || FilterInputDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nFilterInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterInputDirective,\n  selectors: [[\"\", \"filterInput\", \"\"]],\n  inputs: {\n    focused: [\"filterInput\", \"focused\"]\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nFilterInputDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }];\n};\n\nFilterInputDirective.propDecorators = {\n  focused: [{\n    type: Input,\n    args: ['filterInput']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[filterInput]' // tslint:disable-line\n\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }];\n  }, {\n    focused: [{\n      type: Input,\n      args: ['filterInput']\n    }]\n  });\n})();\n\nvar DROPDOWNLIST_DIRECTIVES = [DropDownListComponent, ValueTemplateDirective, FilterInputDirective];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownListComponent`&mdash;The DropDownList component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\n\nvar DropDownListModule = function DropDownListModule() {\n  _classCallCheck(this, DropDownListModule);\n};\n\nDropDownListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DropDownListModule\n});\nDropDownListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DropDownListModule_Factory(t) {\n    return new (t || DropDownListModule)();\n  },\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropDownListModule, {\n    declarations: [DropDownListComponent, ValueTemplateDirective, FilterInputDirective],\n    imports: [SharedModule],\n    exports: [DropDownListComponent, ValueTemplateDirective, FilterInputDirective, SharedDirectivesModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropDownListModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DROPDOWNLIST_DIRECTIVES],\n      exports: [DROPDOWNLIST_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule]\n    }]\n  }], null, null);\n})();\n\nvar MULTISELECT_DIRECTIVES = [MultiSelectComponent, TagListComponent, TagTemplateDirective, GroupTagTemplateDirective, SummaryTagDirective, CustomItemTemplateDirective];\nvar ɵ0$2 = touchEnabled;\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `MultiSelectComponent`&mdash;The MultiSelect component class.\n * - `SummaryTagDirective`&mdash;The MultiSelect summary tag directive.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `CustomItemTemplateDirective`&mdash;The custom item template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The no-data template directive.\n */\n\nvar MultiSelectModule = function MultiSelectModule() {\n  _classCallCheck(this, MultiSelectModule);\n};\n\nMultiSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MultiSelectModule\n});\nMultiSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MultiSelectModule_Factory(t) {\n    return new (t || MultiSelectModule)();\n  },\n  providers: [{\n    provide: TOUCH_ENABLED,\n    useValue: ɵ0$2\n  }],\n  imports: [[SharedModule], SharedDirectivesModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MultiSelectModule, {\n    declarations: [MultiSelectComponent, TagListComponent, TagTemplateDirective, GroupTagTemplateDirective, SummaryTagDirective, CustomItemTemplateDirective],\n    imports: [SharedModule],\n    exports: [MultiSelectComponent, TagListComponent, TagTemplateDirective, GroupTagTemplateDirective, SummaryTagDirective, CustomItemTemplateDirective, SharedDirectivesModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MultiSelectModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MULTISELECT_DIRECTIVES],\n      exports: [MULTISELECT_DIRECTIVES, SharedDirectivesModule],\n      imports: [SharedModule],\n      providers: [{\n        provide: TOUCH_ENABLED,\n        useValue: ɵ0$2\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Dropdowns components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Dropdowns module\n * import { DropDownsModule } from '@progress/kendo-angular-dropdowns';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DropDownsModule], // import the Dropdowns module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\n\nvar DropDownsModule = function DropDownsModule() {\n  _classCallCheck(this, DropDownsModule);\n};\n\nDropDownsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DropDownsModule\n});\nDropDownsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DropDownsModule_Factory(t) {\n    return new (t || DropDownsModule)();\n  },\n  imports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropDownsModule, {\n    exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropDownsModule, [{\n    type: NgModule,\n    args: [{\n      exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, COMBOBOX_VALUE_ACCESSOR, DataService, DisabledItemsService, DROPDOWNLIST_VALUE_ACCESSOR, FilterInputDirective, FilterableDropDownComponentBase, ListItemDirective, CustomMessagesComponent, LocalizedMessagesDirective, Messages, NavigationService, SearchBarComponent, SelectionService, browser, detectDesktopBrowser, detectMobileOS, mobileOS, msPointers, pointers, touch, touchEnabled, NoDataTemplateDirective, TagTemplateDirective, TOUCH_ENABLED, isWindowAvailable, AutoCompleteComponent, ComboBoxComponent, DropDownListComponent, MultiSelectComponent, TagListComponent, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, CustomItemTemplateDirective, HeaderTemplateDirective, FooterTemplateDirective, ValueTemplateDirective, TemplateContextDirective, GroupTagTemplateDirective, SelectableDirective, SummaryTagDirective, FilterDirective, DropDownsModule, MultiSelectModule, SharedModule, AutoCompleteModule, ComboBoxModule, DropDownListModule, SharedDirectivesModule, ListComponent, PreventableEvent };","map":{"version":3,"sources":["index.js"],"names":[],"mappings":"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AA,GAAA,GAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,aAAA,CAAA,GAAA,GAAA,CAAA,GAAA,aAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,eAAA,CAAA,GAAA,GAAA,CAAA,GAAA,eAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,GAAA,CAAA,GAAA,IAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AACA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,GAAA;AA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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Component, Renderer2, Input, Output, ViewChild, HostBinding, Directive, TemplateRef, Injectable, ElementRef, ChangeDetectorRef, NgZone, ViewChildren, forwardRef, isDevMode, ContentChild, ViewContainerRef, InjectionToken, Optional, Inject, KeyValueDiffers, HostListener, NgModule } from '@angular/core';\nimport { isDocumentAvailable, isChanged, hasObservers, KendoInput, ResizeSensorModule, EventsModule } from '@progress/kendo-angular-common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { merge, fromEvent, Subject, Subscription, of, interval } from 'rxjs';\nimport { map, auditTime, tap, filter, partition, throttleTime, catchError, distinctUntilChanged, skipWhile, concatMap, take, takeUntil } from 'rxjs/operators';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nexport { PopupComponent } from '@progress/kendo-angular-popup';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @hidden\n */\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"backspace\"] = 8] = \"backspace\";\n    Keys[Keys[\"tab\"] = 9] = \"tab\";\n    Keys[Keys[\"enter\"] = 13] = \"enter\";\n    Keys[Keys[\"shift\"] = 16] = \"shift\";\n    Keys[Keys[\"ctrl\"] = 17] = \"ctrl\";\n    Keys[Keys[\"alt\"] = 18] = \"alt\";\n    Keys[Keys[\"pause/break\"] = 19] = \"pause/break\";\n    Keys[Keys[\"caps lock\"] = 20] = \"caps lock\";\n    Keys[Keys[\"esc\"] = 27] = \"esc\";\n    Keys[Keys[\"space\"] = 32] = \"space\";\n    Keys[Keys[\"page up\"] = 33] = \"page up\";\n    Keys[Keys[\"page down\"] = 34] = \"page down\";\n    Keys[Keys[\"end\"] = 35] = \"end\";\n    Keys[Keys[\"home\"] = 36] = \"home\";\n    Keys[Keys[\"left\"] = 37] = \"left\";\n    Keys[Keys[\"up\"] = 38] = \"up\";\n    Keys[Keys[\"right\"] = 39] = \"right\";\n    Keys[Keys[\"down\"] = 40] = \"down\";\n    Keys[Keys[\"insert\"] = 45] = \"insert\";\n    Keys[Keys[\"delete\"] = 46] = \"delete\";\n    Keys[Keys[\"command\"] = 91] = \"command\";\n    Keys[Keys[\"left command\"] = 91] = \"left command\";\n    Keys[Keys[\"right command\"] = 93] = \"right command\";\n    Keys[Keys[\"numpad *\"] = 106] = \"numpad *\";\n    Keys[Keys[\"numpad +\"] = 107] = \"numpad +\";\n    Keys[Keys[\"numpad -\"] = 109] = \"numpad -\";\n    Keys[Keys[\"numpad .\"] = 110] = \"numpad .\";\n    Keys[Keys[\"numpad /\"] = 111] = \"numpad /\";\n    Keys[Keys[\"num lock\"] = 144] = \"num lock\";\n    Keys[Keys[\"scroll lock\"] = 145] = \"scroll lock\";\n    Keys[Keys[\"my computer\"] = 182] = \"my computer\";\n    Keys[Keys[\"my calculator\"] = 183] = \"my calculator\";\n    Keys[Keys[\";\"] = 186] = \";\";\n    Keys[Keys[\"=\"] = 187] = \"=\";\n    Keys[Keys[\",\"] = 188] = \",\";\n    Keys[Keys[\"-\"] = 189] = \"-\";\n    Keys[Keys[\".\"] = 190] = \".\";\n    Keys[Keys[\"/\"] = 191] = \"/\";\n    Keys[Keys[\"`\"] = 192] = \"`\";\n    Keys[Keys[\"[\"] = 219] = \"[\";\n    Keys[Keys[\"\\\\\"] = 220] = \"\\\\\";\n    Keys[Keys[\"]\"] = 221] = \"]\";\n    Keys[Keys[\"'\"] = 222] = \"'\";\n})(Keys || (Keys = {}));\n\n/* tslint:disable:no-null-keyword */\n/* tslint:disable:no-bitwise */\n/* tslint:disable:align */\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst isNumber = (value) => !isNaN(value);\n/**\n * @hidden\n */\nconst guid = () => {\n    let id = \"\";\n    let i;\n    let random;\n    for (i = 0; i < 32; i++) {\n        random = Math.random() * 16 | 0;\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            id += \"-\";\n        }\n        id += (i === 12 ? 4 : (i === 16 ? (random & 3 | 8) : random)).toString(16);\n    }\n    return id;\n};\n/**\n * @hidden\n */\nconst combineStr = (begin, end) => {\n    return begin.concat(end.substr(end.toLowerCase().indexOf(begin.toLowerCase()) + begin.length));\n};\n/**\n * @hidden\n */\nconst isWindowAvailable = () => typeof window !== 'undefined';\n/**\n * @hidden\n */\nconst isArray = (value) => Array.isArray(value);\n/**\n * @hidden\n */\nconst isObject = (value) => isPresent(value) && typeof value === 'object';\n/**\n * @hidden\n */\nconst isEmptyString = (value) => typeof value === 'string' && value.length === 0;\n/**\n * @hidden\n */\nconst resolveValuesInArray = (values, data = [], valueField) => values\n    .map(value => {\n    return data.find(item => item[valueField] === value);\n})\n    .filter(value => value !== undefined);\n/**\n * @hidden\n */\nconst validateComplexValues = (values, valueField) => isArray(values) && values.filter(item => {\n    return isObject(item) && item[valueField];\n});\n/**\n * @hidden\n */\nconst resolveAllValues = (value, data, valueField) => {\n    const customValues = validateComplexValues(value, valueField) || [];\n    const resolvedValues = resolveValuesInArray(value, data, valueField) || [];\n    return resolvedValues.concat(customValues);\n};\n/**\n * @hidden\n */\nconst isObjectArray = (values) => {\n    return isArray(values) && values.every(item => isObject(item));\n};\n/**\n * @hidden\n */\nconst selectedIndices = (values, data, valueField) => {\n    const extractedValues = data.map(item => {\n        return isPresent(item) && isPresent(item[valueField]) ? item[valueField] : item;\n    });\n    return values.reduce((arr, item) => {\n        const value = isPresent(item) && isPresent(item[valueField]) ? item[valueField] : item;\n        const index = extractedValues.indexOf(value);\n        if (index !== -1) {\n            arr.push(index);\n        }\n        return arr;\n    }, []);\n};\n/**\n * @hidden\n */\nconst getter = (dataItem, field, usePrimitive = false) => {\n    if (isPresent(dataItem)) {\n        if (usePrimitive) {\n            return field && isPresent(dataItem[field]) ? dataItem[field] : dataItem;\n        }\n        else {\n            return field ? dataItem[field] : dataItem;\n        }\n    }\n};\n/**\n * @hidden\n */\nconst sameCharsOnly = (word, character) => {\n    for (let idx = 0; idx < word.length; idx++) {\n        if (word.charAt(idx) !== character) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @hidden\n */\nconst shuffleData = (data, splitIndex, defaultItem) => {\n    let result = data;\n    if (defaultItem) {\n        result = [defaultItem].concat(result);\n    }\n    return result.slice(splitIndex).concat(result.slice(0, splitIndex));\n};\n/**\n * @hidden\n */\nconst matchText = (text, word, ignoreCase) => {\n    if (!isPresent(text)) {\n        return false;\n    }\n    let temp = String(text);\n    if (ignoreCase) {\n        temp = temp.toLowerCase();\n    }\n    return temp.indexOf(word) === 0;\n};\n/**\n * @hidden\n *\n * Checks whether the passed object has all of the listed properties.\n */\nconst hasProps = (obj, props) => {\n    if (!isPresent(obj)) {\n        return false;\n    }\n    return props.every(prop => obj.hasOwnProperty(prop));\n};\n/**\n * @hidden\n *\n * Checks whether an element is untouched by looking for the ng-untouched css class\n */\nconst isUntouched = (element) => element.className.includes('ng-untouched');\n\n/* tslint:disable:member-ordering */\n/**\n * @hidden\n */\nclass SearchBarComponent {\n    constructor(localization, renderer) {\n        this.localization = localization;\n        this.valueChange = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onClick = new EventEmitter();\n        this.onNavigate = new EventEmitter();\n        this.searchBarClass = true;\n        this._userInput = \"\";\n        this._previousValue = \"\";\n        this._placeholder = \"\";\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.renderer = renderer;\n    }\n    get userInput() {\n        return this._userInput;\n    }\n    set userInput(userInput) {\n        this._userInput = userInput || \"\";\n    }\n    get value() {\n        return this.input.nativeElement.value;\n    }\n    set placeholder(text) {\n        this._placeholder = text || '';\n        this.setInputSize();\n    }\n    get placeholder() {\n        return this._placeholder;\n    }\n    ngOnInit() {\n        this.localizationChangeSubscription = this.localization\n            .changes.subscribe(({ rtl }) => this.direction = rtl ? 'rtl' : 'ltr');\n    }\n    ngOnChanges(changes) {\n        let previousUserInput;\n        if (this.input && (changes.userInput || changes.suggestedText)) {\n            if (changes.userInput && changes.userInput.previousValue) {\n                if (this._previousValue === changes.userInput.previousValue) {\n                    previousUserInput = this._previousValue;\n                }\n                else {\n                    previousUserInput = changes.userInput.currentValue || \"\";\n                }\n            }\n            else {\n                previousUserInput = this._previousValue;\n            }\n            const caretIndex = this.input.nativeElement.selectionStart;\n            const caretAtEnd = previousUserInput.length === caretIndex;\n            this.writeInputValue(this.suggestedText ? combineStr(this.userInput, this.suggestedText) : this.userInput);\n            if (this.suggestedText) {\n                this.setInputSelection(this.userInput.length, this.suggestedText.length);\n            }\n            else if (caretAtEnd) {\n                this.setInputSelection(this.userInput.length, this.userInput.length);\n            }\n            else {\n                this.setInputSelection(caretIndex, caretIndex);\n            }\n            this._previousValue = this.userInput;\n        }\n    }\n    ngOnDestroy() {\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    }\n    writeInputValue(text) {\n        if (isDocumentAvailable()) {\n            this.renderer.setProperty(this.input.nativeElement, 'value', text);\n        }\n    }\n    setInputSelection(start, end) {\n        if (isDocumentAvailable() && this.input.nativeElement === document.activeElement) {\n            try {\n                this.input.nativeElement.setSelectionRange(start, end);\n            }\n            catch (e) {\n                //Make sure that the element is in the DOM before you invoke its methods\n            }\n        }\n    }\n    handleInput(event) {\n        const value = event.target.value;\n        if (value !== this.userInput) {\n            this._previousValue = value;\n            this.valueChange.emit(value);\n        }\n    }\n    handleFocus(event) {\n        this.onFocus.emit(event);\n    }\n    handleBlur(event) {\n        this.onBlur.emit(event);\n    }\n    handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const keys = [Keys.up, Keys.down, Keys.left, Keys.right, Keys.enter,\n            Keys.esc, Keys.delete, Keys.backspace, Keys.home, Keys.end];\n        if (keys.indexOf(keyCode) > -1) {\n            this.onNavigate.emit(event);\n        }\n    }\n    focus() {\n        if (isDocumentAvailable()) {\n            this.input.nativeElement.focus();\n        }\n    }\n    blur() {\n        if (isDocumentAvailable()) {\n            this.input.nativeElement.blur();\n        }\n    }\n    setInputSize() {\n        const lengthOf = x => x ? x.length : 0;\n        const input = this.input.nativeElement;\n        const placeholderLength = lengthOf(this.placeholder);\n        const textLength = lengthOf(this.value);\n        const size = Math.max(placeholderLength, textLength, 1);\n        this.renderer.setAttribute(input, 'size', size.toString());\n    }\n}\nSearchBarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-searchbar',\n                template: `\n        <input #input\n            autocomplete=\"off\"\n            [id]=\"id\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [placeholder]=\"placeholder\"\n            [class]=\"'k-input'\"\n            (input)=\"handleInput($event)\"\n            (keydown)=\"handleKeydown($event)\"\n            [kendoEventsOutsideAngular]=\"{\n                focus: handleFocus,\n                blur: handleBlur\n            }\"\n            [scope]=\"this\"\n            [attr.tabIndex]=\"tabIndex\"\n            [attr.dir]=\"direction\"\n            [attr.role]=\"role\"\n            [attr.aria-disabled]=\"disabled\"\n            [attr.aria-readonly]=\"readonly\"\n            aria-haspopup=\"listbox\"\n            [attr.aria-expanded]=\"popupOpen\"\n            [attr.aria-owns]=\"listId\"\n            [attr.aria-describedby]=\"tagListId\"\n            [attr.aria-activedescendant]=\"activeDescendant\"\n            [attr.aria-label]=\"noDataLabel\"\n        />\n   `\n            },] },\n];\n/** @nocollapse */\nSearchBarComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: Renderer2 }\n];\nSearchBarComponent.propDecorators = {\n    id: [{ type: Input }],\n    listId: [{ type: Input }],\n    tagListId: [{ type: Input }],\n    activeDescendant: [{ type: Input }],\n    noDataLabel: [{ type: Input }],\n    disabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    popupOpen: [{ type: Input }],\n    role: [{ type: Input }],\n    userInput: [{ type: Input }],\n    suggestedText: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onClick: [{ type: Output }],\n    onNavigate: [{ type: Output }],\n    input: [{ type: ViewChild, args: [\"input\", { static: true },] }],\n    searchBarClass: [{ type: HostBinding, args: ['class.k-searchbar',] }],\n    placeholder: [{ type: Input }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the list item content. To define the item template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>ItemTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * - [Using `ItemTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-item-template)\n * - [Using `ItemTemplate` with the ComboBox]({% slug templates_combobox %}#toc-item-template)\n * - [Using `ItemTemplate` with the DropDownList]({% slug templates_ddl %}#toc-item-template)\n * - [Using `ItemTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-item-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxItemTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nItemTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListItemTemplate],[kendoComboBoxItemTemplate],[kendoAutoCompleteItemTemplate],[kendoMultiSelectItemTemplate]'\n            },] },\n];\n/** @nocollapse */\nItemTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the header content of the list. To define the header template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>HeaderTemplate` directive inside the component tag.\n *\n * - [Using `HeaderTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-header-template)\n * - [Using `HeaderTemplate` with the ComboBox]({% slug templates_combobox %}#toc-header-template)\n * - [Using `HeaderTemplate` with the DropDownList]({% slug templates_ddl %}#toc-header-template)\n * - [Using `HeaderTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-header-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxHeaderTemplate>\n *      <h4>Header template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass HeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListHeaderTemplate],[kendoComboBoxHeaderTemplate],[kendoAutoCompleteHeaderTemplate],[kendoMultiSelectHeaderTemplate]'\n            },] },\n];\n/** @nocollapse */\nHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the footer content of the list. To define the footer template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FooterTemplate` directive inside the component tag.\n *\n * - [Using `FooterTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-footer-template)\n * - [Using `FooterTemplate` with the ComboBox]({% slug templates_combobox %}#toc-footer-template)\n * - [Using `FooterTemplate` with the DropDownList]({% slug templates_ddl %}#toc-footer-template)\n * - [Using `FooterTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-footer-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxFooterTemplate>\n *      <h4>Footer template</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListFooterTemplate],[kendoComboBoxFooterTemplate],[kendoAutoCompleteFooterTemplate],[kendoMultiSelectFooterTemplate]'\n            },] },\n];\n/** @nocollapse */\nFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the group header content. To define the group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>GroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `GroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-group-template)\n * - [Using `GroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-group-template)\n * - [Using `GroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-group-template)\n * - [Using `GroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" [textField]=\"'name'\" [valueField]=\"'name'\">\n *    <ng-template kendoComboBoxGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\nclass GroupTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListGroupTemplate],[kendoComboBoxGroupTemplate],[kendoAutoCompleteGroupTemplate],[kendoMultiSelectGroupTemplate]'\n            },] },\n];\n/** @nocollapse */\nGroupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the fixed group header content. To define the fixed group template, nest an `<ng-template>` tag\n * with the `kendo<ComponentName>FixedGroupTemplate` directive inside the component tag. The template context is\n * set to the current component. To get a reference to the current data item, use the `let-groupName` directive.\n *\n * - [Using `FixedGroupTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the ComboBox]({% slug templates_combobox %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the DropDownList]({% slug templates_ddl %}#toc-fixed-group-template)\n * - [Using `FixedGroupTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-fixed-group-template)\n *\n * @example\n * ```ts\n * import { groupBy } from '@progress/kendo-data-query';\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"groupedData\" [textField]=\"'name'\" [valueField]=\"'name'\">\n *    <ng-template kendoComboBoxFixedGroupTemplate let-groupName>\n *      <span>Food type: {{groupName}} option</span>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public data = [\n *       { name: \"Pork\", category: \"Food\", subcategory: \"Meat\" },\n *       { name: \"Pepper\", category: \"Food\", subcategory: \"Vegetables\" },\n *       { name: \"Beef\", category: \"Food\", subcategory: \"Meat\" }\n *   ];\n *   public groupedData = groupBy(this.data, [{field: \"subcategory\"}]);\n * }\n * ```\n */\nclass FixedGroupTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFixedGroupTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListFixedGroupTemplate],[kendoComboBoxFixedGroupTemplate],[kendoAutoCompleteFixedGroupTemplate],[kendoMultiSelectFixedGroupTemplate]'\n            },] },\n];\n/** @nocollapse */\nFixedGroupTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @hidden\n */\nclass SelectionService {\n    constructor() {\n        this.onSelect = new EventEmitter();\n        this.onChange = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.total = 0;\n        this.selectedIndices = [];\n    }\n    getTotal() {\n        return this.total;\n    }\n    isSelected(index) {\n        return isPresent(this.selectedIndices.find(current => current === index));\n    }\n    isFocused(index) {\n        return index === this.focused;\n    }\n    focus(index) {\n        if (this.isFocused(index)) {\n            return;\n        }\n        this.focused = index;\n        this.onFocus.emit(index);\n    }\n    select(index) {\n        if (this.isSelected(index)) {\n            return;\n        }\n        this.selectedIndices = [index];\n        this.focused = index;\n        this.onSelect.emit({\n            indices: [index],\n            newSelection: isPresent(index)\n        });\n    }\n    add(index) {\n        if (this.isSelected(index)) {\n            return;\n        }\n        this.selectedIndices.push(index);\n        this.focused = index;\n        this.onChange.emit({\n            added: index,\n            indices: this.selectedIndices.slice()\n        });\n    }\n    unselect(index) {\n        if (!this.isSelected(index)) {\n            return;\n        }\n        const position = this.selectedIndices.indexOf(index);\n        this.selectedIndices.splice(position, 1);\n        this.focused = index;\n        this.onChange.emit({\n            indices: this.selectedIndices.slice(),\n            removed: index\n        });\n    }\n    change(index) {\n        const newSelection = isPresent(index) && !this.isSelected(index);\n        this.selectedIndices = [index];\n        this.focused = index;\n        this.onChange.emit({\n            indices: [index],\n            newSelection: newSelection\n        });\n    }\n    resetSelection(index) {\n        this.selectedIndices = index instanceof Array ? index : [index];\n        this.focused = this.selectedIndices[this.selectedIndices.length - 1];\n    }\n    get selected() {\n        return this.selectedIndices.slice();\n    }\n    get focused() {\n        return this.focusedIndex;\n    }\n    set focused(index) {\n        if (this.focusedIndex !== index) {\n            this.focusedIndex = index;\n            this.onFocus.emit(index);\n        }\n    }\n}\nSelectionService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nvar NavigationAction;\n(function (NavigationAction) {\n    NavigationAction[NavigationAction[\"Undefined\"] = 0] = \"Undefined\";\n    NavigationAction[NavigationAction[\"Open\"] = 1] = \"Open\";\n    NavigationAction[NavigationAction[\"Close\"] = 2] = \"Close\";\n    NavigationAction[NavigationAction[\"Enter\"] = 3] = \"Enter\";\n    NavigationAction[NavigationAction[\"Tab\"] = 4] = \"Tab\";\n    NavigationAction[NavigationAction[\"Esc\"] = 5] = \"Esc\";\n    NavigationAction[NavigationAction[\"Delete\"] = 6] = \"Delete\";\n    NavigationAction[NavigationAction[\"Backspace\"] = 7] = \"Backspace\";\n    NavigationAction[NavigationAction[\"Home\"] = 8] = \"Home\";\n    NavigationAction[NavigationAction[\"End\"] = 9] = \"End\";\n    NavigationAction[NavigationAction[\"Up\"] = 10] = \"Up\";\n    NavigationAction[NavigationAction[\"Down\"] = 11] = \"Down\";\n    NavigationAction[NavigationAction[\"Left\"] = 12] = \"Left\";\n    NavigationAction[NavigationAction[\"Right\"] = 13] = \"Right\";\n})(NavigationAction || (NavigationAction = {}));\n\n/**\n * @hidden\n */\nclass DataService {\n    constructor() {\n        this.grouped = false;\n        this.groupIndices = [];\n    }\n    set data(data) {\n        this._data = data;\n        this.grouped = this.isGrouped(data);\n        if (this.grouped) {\n            this.groupIndices = this.getGroupIndices(data);\n            this._flatData = this.flatten(data);\n        }\n    }\n    get data() {\n        if (this.grouped) {\n            return this._flatData;\n        }\n        return this._data;\n    }\n    /**\n     * @hidden\n     * Used to get the actual items count, i.e. excluding the header items in case of grouping.\n     */\n    get itemsCount() {\n        if (!isPresent(this.data) || this.data.length === 0) {\n            return 0;\n        }\n        const items = this.grouped ? this._flatData.filter(item => !item.header) : this.data;\n        return items.length;\n    }\n    /**\n     * @hidden\n     * Used to determine if the component received grouped data.\n     */\n    isGrouped(data) {\n        // GroupResult { aggregates: AggregateResult, field: string, items: object[], value: any }\n        // https://www.telerik.com/kendo-angular-ui/components/dataquery/api/GroupResult/\n        return (isPresent(data) && data.length !== 0) && isPresent(data[0]) && hasProps(data[0], ['aggregates', 'field', 'items', 'value']);\n    }\n    /**\n     * @hidden\n     * Used to calculate the last item index of each group.\n     */\n    getGroupIndices(data) {\n        let groupIndices = [];\n        for (let i = 0; i <= data.length - 1; i++) {\n            groupIndices[i] = (groupIndices[i - 1] || 0) + data[i].items.length;\n        }\n        return groupIndices;\n    }\n    /**\n     * @hidden\n     * Used to get a flat array containing all items matching certain criteria.\n     */\n    filter(predicate) {\n        let result = [];\n        if (this.isGrouped(this.data)) {\n            for (let i = 0; i <= this.groupIndices.length - 1; i++) {\n                const matches = this.data[i].items.filter(predicate);\n                if (matches) {\n                    result = result.concat(matches);\n                }\n            }\n        }\n        else {\n            result = this.data.filter(predicate);\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     * Used to get the index of a given data item.\n     */\n    indexOf(item, startFrom = 0) {\n        let predicate = (element) => {\n            return element === item;\n        };\n        if (this.grouped) {\n            predicate = (element) => {\n                return element.value === item;\n            };\n        }\n        return this.findIndex(predicate, startFrom);\n    }\n    /**\n     * @hidden\n     * Used to get the index of a data item based on an expression.\n     */\n    findIndex(predicate, startFrom = 0) {\n        let index = -1;\n        if (this.grouped) {\n            const data = this._flatData.filter(item => !item.header && item.offsetIndex >= startFrom);\n            index = data.findIndex(predicate);\n            index = data[index] ? data[index].offsetIndex : -1;\n        }\n        else {\n            const data = this.data.slice(startFrom);\n            const itemIndex = data.findIndex(predicate);\n            index = itemIndex !== -1 ? itemIndex + startFrom : -1;\n        }\n        return index;\n    }\n    /**\n     * @hidden\n     * Used to get the closest group header prior to an item index.\n     */\n    closestGroup(index) {\n        for (let i = index; i >= 0; i--) {\n            if (this._flatData[i].header) {\n                return this._flatData[i];\n            }\n        }\n    }\n    /**\n     * @hidden\n     * Used to get the first item matching the criteria.\n     */\n    find(predicate) {\n        const index = this.findIndex(predicate);\n        return this.itemAt(index);\n    }\n    /**\n     * @hidden\n     * Used to get the true index in a flattened data array.\n     */\n    flatIndex(index) {\n        if (this.itemsCount === 0) {\n            return -1;\n        }\n        if (this.grouped) {\n            const match = this._flatData.find((item) => !item.header && item.offsetIndex === index);\n            if (match) {\n                return match.index;\n            }\n        }\n        else {\n            return index;\n        }\n        return -1;\n    }\n    /**\n     * @hidden\n     * Used to get the item at the provided index.\n     */\n    itemAt(index) {\n        let dataItem;\n        if (this.itemsCount === 0) {\n            return dataItem;\n        }\n        if (this.grouped) {\n            const match = this._flatData.find((item) => !item.header && item.offsetIndex === index);\n            if (match) {\n                dataItem = match.value;\n            }\n        }\n        else {\n            dataItem = this.data[index];\n        }\n        return dataItem;\n    }\n    /**\n     * @hidden\n     * Used to get the group at the provided index.\n     */\n    groupAt(index) {\n        if (this.itemsCount === 0 || !this.isGrouped) {\n            return;\n        }\n        return this._flatData.find((item) => item.header && item.index === index);\n    }\n    /**\n     * @hidden\n     * Used to get the field by which the data is grouped.\n     */\n    groupField() {\n        if (this.itemsCount === 0 || !this.isGrouped) {\n            return;\n        }\n        return this._data[0].field;\n    }\n    /**\n     * @hidden\n     * Used to get the group to which a dataItem belongs.\n     */\n    itemGroup(item) {\n        if (!item || this.itemsCount === 0 || !this.isGrouped) {\n            return;\n        }\n        const fieldName = this.groupField();\n        if (fieldName) {\n            return item[fieldName];\n        }\n    }\n    flatten(data, group = undefined, offset = 0, groupIndex = 0) {\n        let flat = [];\n        if (isPresent(group)) {\n            flat.push({\n                header: true,\n                index: groupIndex + offset,\n                offsetIndex: groupIndex,\n                value: group\n            });\n        }\n        for (let i = 0; i < data.length; i++) {\n            let result = [];\n            if (data[i].items) {\n                result = this.flatten(data[i].items, data[i].value, offset, i);\n                offset = offset + data[i].items.length;\n            }\n            else {\n                result.push({\n                    header: false,\n                    index: groupIndex + offset + i + 1,\n                    offsetIndex: offset + i,\n                    value: data[i]\n                });\n            }\n            flat = flat.concat(result);\n        }\n        return flat;\n    }\n}\nDataService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass DisabledItemsService {\n    constructor(dataService) {\n        this.dataService = dataService;\n        this.itemDisabled = null;\n    }\n    isIndexDisabled(index) {\n        if (this.itemDisabled) {\n            const item = this.dataService.itemAt(index);\n            if (isPresent(item)) {\n                return this.itemDisabled({ dataItem: item, index });\n            }\n            else if (isPresent(this.defaultItem)) {\n                return this.itemDisabled({ dataItem: this.defaultItem, index: -1 });\n            }\n        }\n    }\n    isItemDisabled(item) {\n        if (this.itemDisabled) {\n            const index = this.dataService.indexOf(item);\n            if (index !== -1) {\n                return this.itemDisabled({ dataItem: item, index });\n            }\n            else if (isPresent(this.defaultItem)) {\n                return this.itemDisabled({ dataItem: this.defaultItem, index: -1 });\n            }\n        }\n    }\n}\nDisabledItemsService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nDisabledItemsService.ctorParameters = () => [\n    { type: DataService }\n];\n\nconst MIN_INDEX = 0;\n/**\n * @hidden\n */\nclass NavigationEvent {\n    /**\n     * The index of the item to which the user navigated.\n     */\n    constructor(index, originalEvent) {\n        this.index = index;\n        this.originalEvent = originalEvent;\n    }\n}\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(disabledItemsService, selectionService) {\n        this.disabledItemsService = disabledItemsService;\n        this.selectionService = selectionService;\n        this.open = new EventEmitter();\n        this.close = new EventEmitter();\n        this.enter = new EventEmitter();\n        this.tab = new EventEmitter();\n        this.esc = new EventEmitter();\n        this.up = new EventEmitter();\n        this.right = new EventEmitter();\n        this.down = new EventEmitter();\n        this.left = new EventEmitter();\n        this.delete = new EventEmitter();\n        this.backspace = new EventEmitter();\n        this.home = new EventEmitter();\n        this.end = new EventEmitter();\n    }\n    process(args) {\n        const keyCode = args.originalEvent.keyCode;\n        const altKey = args.originalEvent.altKey;\n        let index;\n        let action = NavigationAction.Undefined;\n        if (altKey && keyCode === Keys.down) {\n            action = NavigationAction.Open;\n        }\n        else if (altKey && keyCode === Keys.up) {\n            action = NavigationAction.Close;\n        }\n        else if (keyCode === Keys.enter) {\n            action = NavigationAction.Enter;\n        }\n        else if (keyCode === Keys.esc) {\n            action = NavigationAction.Esc;\n        }\n        else if (keyCode === Keys.tab) {\n            action = NavigationAction.Tab;\n        }\n        else if (keyCode === Keys.up) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: -1 });\n            action = NavigationAction.Up;\n        }\n        else if (keyCode === Keys.left) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: -1 });\n            action = NavigationAction.Left;\n        }\n        else if (keyCode === Keys.down) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: 1 });\n            action = NavigationAction.Down;\n        }\n        else if (keyCode === Keys.right) {\n            index = this.next({ current: args.current, start: args.min, end: args.max, step: 1 });\n            action = NavigationAction.Right;\n        }\n        else if (keyCode === Keys.home) {\n            index = this.isDisabled(MIN_INDEX) ? args.current : MIN_INDEX;\n            action = NavigationAction.Home;\n        }\n        else if (keyCode === Keys.end) {\n            index = this.isDisabled(args.max) ? args.current : args.max;\n            action = NavigationAction.End;\n        }\n        else if (keyCode === Keys.delete) {\n            action = NavigationAction.Delete;\n        }\n        else if (keyCode === Keys.backspace) {\n            action = NavigationAction.Backspace;\n        }\n        const eventData = new NavigationEvent(index, args.originalEvent);\n        if (action !== NavigationAction.Undefined) {\n            this[NavigationAction[action].toLowerCase()].emit(eventData);\n        }\n        return action;\n    }\n    next(args) {\n        const { current, start, end, step } = args;\n        const nextIndex = !isPresent(current) ? start : this.clampIndex(current + step, start, end);\n        const firstFocusableIndex = this.firstFocusableIndex(nextIndex, start, end, step);\n        if (isPresent(firstFocusableIndex)) {\n            return firstFocusableIndex;\n        }\n        if (this.selectionService.isSelected(current) && current >= start) {\n            return current;\n        }\n        const inversedStep = -1 * step;\n        return this.firstFocusableIndex(nextIndex, start, end, inversedStep);\n    }\n    clampIndex(index, min, max) {\n        if (!isPresent(index) || index < min) {\n            return min;\n        }\n        if (index > max) {\n            return max;\n        }\n        return index;\n    }\n    firstFocusableIndex(startIndex, min, max, step) {\n        while (min <= startIndex && startIndex <= max) {\n            if (!this.isDisabled(startIndex)) {\n                return startIndex;\n            }\n            startIndex += step;\n        }\n        return undefined;\n    }\n    isDisabled(index) {\n        if (this.disabledItemsService) {\n            return this.disabledItemsService.isIndexDisabled(index);\n        }\n    }\n}\nNavigationService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNavigationService.ctorParameters = () => [\n    { type: DisabledItemsService },\n    { type: SelectionService }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders content when no data is available. To define the no-data template, nest a `<ng-template>` tag\n * with the `kendo<ComponentName>NoDataTemplate` directive inside the component tag.\n *\n * - [Using `NoDataTemplate` with the AutoComplete]({% slug templates_autocomplete %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the ComboBox]({% slug templates_combobox %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the DropDownList]({% slug templates_ddl %}#toc-no-data-template)\n * - [Using `NoDataTemplate` with the MultiSelect]({% slug templates_multiselect %}#toc-no-data-template)\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *    <ng-template kendoComboBoxNoDataTemplate>\n *      <h4>No data!</h4>\n *    </ng-template>\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [];\n * }\n * ```\n */\nclass NoDataTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNoDataTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListNoDataTemplate],[kendoComboBoxNoDataTemplate],[kendoAutoCompleteNoDataTemplate],[kendoMultiSelectNoDataTemplate]'\n            },] },\n];\n/** @nocollapse */\nNoDataTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * If the event is prevented by any of its subscribers, returns `true`.\n     *\n     * @returns `true` if the default action was prevented. Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * Defines the mandatory properties of the `kendoDropDownFilter` directive\n * so that `kendoDropDownFilter` can be used with any of the DropDowns components\n * which implement the `FilterableDropDownComponentBase` class.\n *\n * @hidden\n */\nclass FilterableDropDownComponentBase {\n}\n\n/**\n * @hidden\n */\nclass ListItemDirective {\n    constructor(element) {\n        this.element = element;\n    }\n}\nListItemDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '\"li[role=option], li[role=group]\"' // tslint:disable-line\n            },] },\n];\n/** @nocollapse */\nListItemDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\n\n/**\n * @hidden\n */\nclass ListComponent {\n    /* tslint:disable:member-ordering */\n    constructor(dataService, wrapper, selectionService, disabledItemsService, cdr, zone, renderer) {\n        this.dataService = dataService;\n        this.wrapper = wrapper;\n        this.selectionService = selectionService;\n        this.disabledItemsService = disabledItemsService;\n        this.cdr = cdr;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.selected = [];\n        this.focused = -1;\n        this.show = true;\n        this.multipleSelection = false;\n        this.onClick = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.startFrom = 0;\n        this.lastLoaded = 0;\n        this.lastScrollTop = 0;\n        this.scrollToFocused = false;\n        this.selectSubscription = merge(this.selectionService.onSelect.pipe(map((args) => args.indices[0])), this.selectionService.onFocus).subscribe(this.scrollToItem.bind(this));\n    }\n    set data(data) {\n        this._data = data[0] && data[0].header ? data.slice(0) : data;\n    }\n    get data() {\n        return this._data;\n    }\n    set items(items) {\n        this._items = items;\n    }\n    get items() {\n        return this._items;\n    }\n    get pageSize() {\n        if (this.virtual.pageSize) {\n            return this.virtual.pageSize;\n        }\n        let size = Math.round(this.height / this.virtual.itemHeight);\n        return size;\n    }\n    get scrollHeight() {\n        return (this.dataService.grouped ? this.virtual.total - 1 : this.virtual.total) * this.virtual.itemHeight;\n    }\n    ngOnChanges(changes) {\n        if (isChanged('data', changes, false)) {\n            if (this.lastLoaded <= 0) {\n                this.lastLoaded = this.data.length - 1;\n                this.scrollToFocused = !changes.data.isFirstChange();\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            this.scrollSubscription = fromEvent(this.content.nativeElement, \"scroll\").pipe(auditTime(100), tap(this.prefetchData.bind(this)), tap(this.findCurrentGroup.bind(this))).subscribe(() => {\n                this.lastScrollTop = this.content.nativeElement.scrollTop;\n            });\n        });\n    }\n    ngAfterViewChecked() {\n        if (this.virtual) {\n            this.positionItems();\n        }\n        if (this.items && this.scrollToFocused) {\n            this.scrollToFocused = false;\n            const scrollTarget = this.items.length && this.selectionService.focused === -1 ? 0 : this.selectionService.focused;\n            this.scrollToItem(scrollTarget);\n        }\n        if (this.dataService.grouped) {\n            this.findCurrentGroup();\n        }\n    }\n    ngOnDestroy() {\n        this.selectSubscription.unsubscribe();\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n        }\n    }\n    firstVisibleItem() {\n        const content = this.content.nativeElement;\n        const rect = content.getBoundingClientRect();\n        // IE9 hack\n        const disabled = Array.prototype.slice.call(content.querySelectorAll(\".k-state-disabled\"));\n        // This is a workaround for finding elements with pointer-events: none;\n        disabled.forEach((el) => this.renderer.setStyle(el, \"pointer-events\", \"auto\"));\n        const item = document.elementFromPoint(rect.left + 1, rect.top + 1);\n        disabled.forEach((el) => this.renderer.setStyle(el, \"pointer-events\", \"none\"));\n        return item;\n    }\n    findCurrentGroup() {\n        if (!this.dataService.grouped) {\n            this.currentGroup = undefined;\n            return;\n        }\n        const item = this.firstVisibleItem();\n        if (item) {\n            let index;\n            if (item.getAttribute(\"role\") === \"group\") {\n                index = parseInt(item.getAttribute(\"group-index\"), 10);\n                this.currentGroup = this.dataService.groupAt(index).value;\n            }\n            else {\n                index = parseInt(item.getAttribute(\"index\"), 10);\n                this.currentGroup = this.dataService.itemGroup(this.dataService.itemAt(index));\n            }\n        }\n        else {\n            this.currentGroup = undefined;\n        }\n        this.cdr.detectChanges();\n    }\n    prefetchData() {\n        if (!this.virtual) {\n            return;\n        }\n        const visibleItems = Math.trunc(this.content.nativeElement.clientHeight / this.virtual.itemHeight);\n        const offsetY = this.content.nativeElement.scrollTop;\n        const start = Math.trunc(offsetY / this.virtual.itemHeight);\n        const down = offsetY > this.lastScrollTop;\n        const nextPage = (start + visibleItems >= this.lastLoaded) && this.lastLoaded < this.virtual.total - 1;\n        const leftOver = this.pageSize - (this.lastLoaded - this.startFrom);\n        const prevPage = this.lastLoaded - this.pageSize + visibleItems >= start - leftOver;\n        if (down && nextPage) {\n            this.changePage(start);\n        }\n        if (!down && prevPage) {\n            this.changePage(start - this.pageSize + visibleItems + 1);\n        }\n    }\n    changePage(start) {\n        this.zone.run(() => {\n            let end = this.pageSize + start;\n            if (end > this.virtual.total) {\n                start--;\n                end = this.virtual.total;\n            }\n            if (start < 0) {\n                start = 0;\n            }\n            this.startFrom = start;\n            this.lastLoaded = end;\n            this.pageChange.emit({ skip: start, take: this.pageSize });\n        });\n    }\n    index(groupIndex, itemIndex) {\n        return groupIndex > 0 ? (this.dataService.groupIndices[groupIndex - 1] + itemIndex) : itemIndex;\n    }\n    getText(dataItem) {\n        return getter(dataItem, this.textField);\n    }\n    getValue(dataItem) {\n        return getter(dataItem, this.valueField);\n    }\n    isDisabled(index) {\n        if (isPresent(this.virtual)) {\n            index += this.virtual.skip;\n        }\n        return this.disabledItemsService.isIndexDisabled(index);\n    }\n    scrollToItem(index) {\n        let flatIndex = index;\n        if (this.dataService.grouped) {\n            // takes into account the group header items\n            flatIndex = this.dataService.flatIndex(index);\n            /* The first group header item is not rendered in the list (see template), so subtract 1 when calulating the flat index.\n               With virtualization enabled, the first group header could be in a previous page, in which case don't subtract anything. */\n            const groupHeaderOffset = this.firstGroupHeaderInTargetedPage(flatIndex) ? -1 : 0;\n            flatIndex += groupHeaderOffset;\n        }\n        if (this.virtual && flatIndex > -1) {\n            this.scrollToIndex(flatIndex);\n            return;\n        }\n        const items = this.items.toArray();\n        if (isPresent(items[flatIndex]) && flatIndex !== -1) {\n            this.scroll(items[flatIndex].element);\n        }\n    }\n    scrollToIndex(index) {\n        let content = this.content.nativeElement;\n        let contentScrollTop = content.scrollTop;\n        const itemOffsetTop = index * this.virtual.itemHeight;\n        const itemOffsetHeight = this.virtual.itemHeight;\n        const contentOffsetHeight = content.clientHeight;\n        const bottomDistance = itemOffsetTop + itemOffsetHeight;\n        if (contentScrollTop > itemOffsetTop) {\n            contentScrollTop = itemOffsetTop;\n        }\n        else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n            contentScrollTop = (bottomDistance - contentOffsetHeight);\n        }\n        content.scrollTop = contentScrollTop;\n    }\n    scroll(item) {\n        if (!item) {\n            return;\n        }\n        const nativeElement = item.nativeElement;\n        let content = this.content.nativeElement, itemOffsetTop = nativeElement.offsetTop, itemOffsetHeight = nativeElement.offsetHeight, contentScrollTop = content.scrollTop, contentOffsetHeight = content.clientHeight, bottomDistance = itemOffsetTop + itemOffsetHeight;\n        if (contentScrollTop > itemOffsetTop) {\n            contentScrollTop = itemOffsetTop;\n        }\n        else if (bottomDistance > (contentScrollTop + contentOffsetHeight)) {\n            contentScrollTop = (bottomDistance - contentOffsetHeight);\n        }\n        content.scrollTop = contentScrollTop;\n    }\n    positionItems() {\n        this.items.forEach((item, index) => {\n            const offsetY = (index + this.startFrom) * this.virtual.itemHeight;\n            this.renderer.setStyle(item.element.nativeElement, \"transform\", `translateY(${offsetY}px`);\n        });\n    }\n    /**\n     * Indicates whether the first group header from the data set is in the targeted virtual page.\n     */\n    firstGroupHeaderInTargetedPage(itemIndex) {\n        if (!isPresent(this.virtual)) {\n            return true;\n        }\n        return this.virtual.skip === 0 && (this.virtual.pageSize > itemIndex);\n    }\n}\nListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-list',\n                template: `\n    <div *ngIf=\"dataService.grouped\"\n        class='k-outer-group-header k-first'\n        [ngClass]=\"{'k-virtual-item': virtual}\"\n        [ngStyle]=\"{\n            'height.px': virtual?.itemHeight,\n            'minHeight.px' : virtual?.itemHeight,\n            'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n        >\n        <ng-template *ngIf=\"fixedGroupTemplate\"\n            [templateContext]=\"{\n                templateRef: fixedGroupTemplate.templateRef,\n                $implicit: currentGroup\n            }\">\n        </ng-template>\n        <ng-template [ngIf]=\"!fixedGroupTemplate\"><strong>{{ currentGroup }}</strong> </ng-template>\n    </div>\n    <div #content\n         [ngClass]=\"{ 'k-virtual-content': virtual, 'k-list-scroller': !virtual }\"\n         [style.maxHeight.px]=\"height\"\n         unselectable=\"on\">\n    <ul #list\n        role=\"listbox\"\n        class=\"k-list k-reset\"\n        [ngClass]=\"{ 'k-virtual-list': virtual }\"\n        [attr.id]=\"id\"\n        [attr.aria-hidden]=\"!show\">\n         <ng-template *ngIf=\"!dataService.grouped && show\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                role=\"option\"\n                kendoDropDownsSelectable\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"itemIndex + startFrom\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem)\"\n                [attr.tabIndex]=\"-1\"\n                class=\"k-item\"\n                [ngClass]=\"{ 'k-virtual-item': virtual, 'k-state-disabled': isDisabled(itemIndex) }\">\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\">{{ getText(dataItem) }}</ng-template>\n            </li>\n         </ng-template>\n         <ng-template *ngIf=\"dataService.grouped\" ngFor let-dataItem let-itemIndex=\"index\" [ngForOf]=\"data\">\n            <li\n                *ngIf=\"dataItem.header && dataItem.index > 0\"\n                role=\"group\"\n                class='k-outer-group-header'\n                [ngClass]=\"{ 'k-virtual-item': virtual }\"\n                [ngStyle]=\"{\n                    'height.px': virtual?.itemHeight,\n                    'minHeight.px' : virtual?.itemHeight,\n                    'boxSizing' : virtual ? 'border-box' : 'inherit'}\"\n                [attr.group-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\">\n                    <ng-template *ngIf=\"groupTemplate\"\n                          [templateContext]=\"{\n                            templateRef: groupTemplate.templateRef,\n                            $implicit: dataItem.value\n                    }\">\n                    </ng-template>\n                    <ng-template [ngIf]=\"!groupTemplate\"><strong> {{ dataItem.value }}</strong> </ng-template>\n              </li>\n            <li\n                *ngIf=\"!dataItem.header\"\n                role=\"option\"\n                kendoDropDownsSelectable\n                [height]=\"virtual?.itemHeight\"\n                [index]=\"dataItem.offsetIndex\"\n                [multipleSelection]=\"multipleSelection\"\n                [attr.absolute-index]=\"dataItem.index\"\n                [attr.id]=\"optionPrefix + '-' + getValue(dataItem.value)\"\n                [attr.tabIndex]=\"-1\"\n                class=\"k-item\"\n                [ngClass]=\"{ 'k-virtual-item': virtual, 'k-state-disabled': isDisabled(dataItem.offsetIndex) }\">\n                <ng-template *ngIf=\"template\"\n                    [templateContext]=\"{\n                        templateRef: template.templateRef,\n                        $implicit: dataItem.value\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!template\">{{ getText(dataItem.value) }}</ng-template>\n            </li>\n        </ng-template>\n    </ul>\n    <div *ngIf=\"virtual\" class=\"k-height-container\" role=\"presentation\">\n        <div [style.height.px]=\"scrollHeight\"></div>\n    </div>\n    </div>\n  `\n            },] },\n];\n/** @nocollapse */\nListComponent.ctorParameters = () => [\n    { type: DataService },\n    { type: ElementRef },\n    { type: SelectionService },\n    { type: DisabledItemsService },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: Renderer2 }\n];\nListComponent.propDecorators = {\n    selected: [{ type: Input }],\n    focused: [{ type: Input }],\n    textField: [{ type: Input }],\n    valueField: [{ type: Input }],\n    height: [{ type: Input }],\n    template: [{ type: Input }],\n    groupTemplate: [{ type: Input }],\n    fixedGroupTemplate: [{ type: Input }],\n    show: [{ type: Input }],\n    id: [{ type: Input }],\n    optionPrefix: [{ type: Input }],\n    multipleSelection: [{ type: Input }],\n    virtual: [{ type: Input }],\n    data: [{ type: Input }],\n    onClick: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    items: [{ type: ViewChildren, args: [ListItemDirective,] }],\n    content: [{ type: ViewChild, args: ['content',] }],\n    list: [{ type: ViewChild, args: ['list',] }]\n};\n\n/**\n * @hidden\n */\nconst DEFAULTS = {\n    pageSize: 50,\n    itemHeight: 28\n};\n/**\n * @hidden\n */\nconst normalizeVirtualizationSettings = (settings) => {\n    if (settings === true) {\n        return DEFAULTS;\n    }\n    if (!settings) {\n        return null;\n    }\n    return Object.assign({ pageSize: DEFAULTS.pageSize }, settings);\n};\n\n/* tslint:disable:no-null-keyword */\nconst NO_VALUE = \"\";\n/**\n * @hidden\n */\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line:no-use-before-declare\n    useExisting: forwardRef(() => AutoCompleteComponent)\n};\n/**\n * Represents the [Kendo UI AutoComplete component for Angular]({% slug overview_autocomplete %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"listItems\"\n *      [placeholder]=\"placeholder\"\n *  >\n * `\n * })\n * class AppComponent {\n *   public placeholder: string = 'Type \"it\" for suggestions';\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass AutoCompleteComponent {\n    constructor(localization, dataService, popupService, selectionService, navigationService, disabledItemsService, _zone, cdr, renderer, wrapper) {\n        this.localization = localization;\n        this.dataService = dataService;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this._zone = _zone;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        /**\n         * Defines whether the first match from the suggestions list will be automatically focused.\n         * By default, `highlightFirst` is set to `true`.\n         */\n        this.highlightFirst = true;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * The hint which is displayed when the component is empty.\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * @hidden\n         *\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Enables the [filtering]({% slug filtering_autocomplete %}) functionality.\n         * If set to `true`, the component emits the `filterChange` event.\n         */\n        this.filterable = false;\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_autocomplete %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value\n         * ([see example]({% slug overview_autocomplete %}#toc-events)).\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the user focuses the AutoComplete.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the AutoComplete gets blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        this.widgetClasses = true;\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.onChangeCallback = (_value) => { };\n        this.onTouchedCallback = (_) => { };\n        this.popupMouseDownHandler = (event) => event.preventDefault();\n        this._popupSettings = { animate: true };\n        this._open = false;\n        this._value = \"\";\n        this._previousValue = NO_VALUE;\n        this._filtering = false;\n        this.valueChangeSubject = new Subject();\n        this._isFocused = false;\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.wrapper = wrapper.nativeElement;\n        this.data = [];\n        this.subscribeEvents();\n        this.selectionService.resetSelection([-1]);\n    }\n    get width() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    get suggestion() {\n        if (!this.text || !this.suggestedText) {\n            this.suggestedText = undefined;\n            return;\n        }\n        const hasMatch = this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase());\n        const shouldSuggest = this.suggest && !this.backspacePressed;\n        if (shouldSuggest && hasMatch) {\n            return this.suggestedText;\n        }\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Toggles the visibility of the popup.\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    get activeDescendant() {\n        if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n            return null;\n        }\n        const dataItem = this.dataService.itemAt(this.selectionService.focused);\n        return this.optionPrefix + \"-\" + getter(dataItem, this.valueField);\n    }\n    get noDataLabel() {\n        if (this.data.length === 0) {\n            return this.noDataText;\n        }\n    }\n    get clearTitle() {\n        return this.localization.get('clearTitle');\n    }\n    /**\n     * Sets the data of the AutoComplete.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState(this.value);\n        if (this.filterable) {\n            this.selectionService.focused = this.isOpen && this.data.length && this.highlightFirst ? this.firstFocusableIndex(0) : -1;\n        }\n        if (this.suggest && this.dataService.itemsCount > 0) {\n            this.suggestedText = getter(this.dataService.itemAt(0), this.valueField);\n        }\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the AutoComplete.\n     */\n    set value(newValue) {\n        this.verifySettings(newValue);\n        this._value = newValue || NO_VALUE;\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value || NO_VALUE;\n    }\n    /**\n     * Configures the popup of the AutoComplete.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_autocomplete %})).\n     * Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_autocomplete %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper, \"k-state-focused\");\n        this._isFocused = isFocused;\n    }\n    get isDisabled() {\n        return this.disabled;\n    }\n    get dir() {\n        return this.direction;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.wrapper, \"tabindex\");\n        this.localizationChangeSubscription = this.localization\n            .changes\n            .subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.setMessages();\n        });\n        this.setMessages();\n    }\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.unsubscribeEvents();\n        clearTimeout(this.messagesTimeout);\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        const STATE_PROPS = /(value|valueField)/g;\n        if (STATE_PROPS.test(Object.keys(changes).join())) {\n            this.setState(this.value);\n        }\n    }\n    /**\n     * Resets the value of the AutoComplete.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.setState(NO_VALUE);\n    }\n    /**\n     * @hidden\n     */\n    clearValue(event) {\n        event.stopImmediatePropagation();\n        this.focus();\n        this.change(NO_VALUE);\n        if (this.filterable) {\n            this.filterChange.emit('');\n        }\n        this.selectionService.resetSelection([]);\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.setState(value);\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Focuses the AutoComplete.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * Blurs the AutoComplete.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    emitChange() {\n        if (this.value === this._previousValue) {\n            return;\n        }\n        this._previousValue = this.value;\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n    }\n    verifySettings(newValue) {\n        if (!isDevMode()) {\n            return;\n        }\n        if (isPresent(newValue) && typeof newValue !== \"string\") {\n            throw new Error(\"Expected value of type string. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/autocomplete/#toc-value\");\n        }\n    }\n    search(text, startFrom = 0) {\n        let index;\n        if (text.length && this.dataService.itemsCount) {\n            index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n        }\n        else {\n            index = -1;\n        }\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            if (index + 1 < this.dataService.itemsCount) {\n                this.search(text, index + 1);\n            }\n            else {\n                this.selectionService.focus(-1);\n            }\n        }\n        else {\n            this.selectionService.focus(index);\n            if (this.suggest) {\n                this.suggestedText = getter(this.dataService.itemAt(index), this.valueField);\n            }\n        }\n    }\n    navigate(index) {\n        if (!this.isOpen) {\n            return;\n        }\n        this.selectionService.focus(index);\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n        if (this.disabled || this.readonly || isNaN(focused)) {\n            return;\n        }\n        const action = this.navigationService.process({\n            current: focused,\n            max: this.dataService.itemsCount - 1,\n            min: 0,\n            originalEvent: event\n        });\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            action !== NavigationAction.Home &&\n            action !== NavigationAction.End &&\n            action !== NavigationAction.Left &&\n            action !== NavigationAction.Right &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    handleEnter(event) {\n        const focused = this.selectionService.focused;\n        let value;\n        this._filtering = false;\n        if (this.isOpen) {\n            event.originalEvent.preventDefault();\n        }\n        if (focused >= 0) {\n            value = getter(this.dataService.itemAt(focused), this.valueField);\n        }\n        else {\n            const match = this.suggest && this.suggestedText && this.data.length &&\n                getter(this.dataService.itemAt(0), this.valueField, true).toLowerCase() === this.searchbar.value.toLowerCase();\n            if (this.isOpen && match) {\n                value = this.suggestedText;\n            }\n            else {\n                value = this.searchbar.value;\n            }\n        }\n        this.change(value);\n    }\n    handleEscape() {\n        this.togglePopup(false);\n        this.selectionService.focused = -1;\n        this.suggestedText = null;\n    }\n    /**\n     * @hidden\n     */\n    searchBarChange(text) {\n        const currentTextLength = isPresent(this.text) ? this.text.length : 0;\n        this.backspacePressed = (text.length < currentTextLength) ? true : false;\n        this.text = text;\n        this.togglePopup(text.length > 0);\n        this._filtering = true;\n        if (!this.highlightFirst) {\n            this.selectionService.focused = -1;\n        }\n        if (this.filterable) {\n            this.filterChange.emit(text);\n        }\n        else if (this.highlightFirst) {\n            this.search(text);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        this.isFocused = true;\n        if (hasObservers(this.onFocus)) {\n            this._zone.run(() => {\n                this.onFocus.emit();\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur() {\n        this._filtering = false;\n        const focused = this.filterable ? this.selectionService.focused : -1;\n        this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n        let dataItem;\n        let text;\n        if (focused !== -1) {\n            dataItem = this.dataService.itemAt(focused);\n            text = getter(dataItem, this.valueField, true) || \"\";\n        }\n        else {\n            text = this.searchbar.value;\n        }\n        const exactMatch = text === this.searchbar.value;\n        const insensitiveMatch = text.toLowerCase() === this.searchbar.value.toLowerCase();\n        if (!exactMatch && insensitiveMatch) {\n            this.selectionService.resetSelection([]);\n        }\n        this.isFocused = false;\n        const valueHasChanged = this.value !== this.text;\n        const runInZone = hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.wrapper) || valueHasChanged;\n        if (runInZone) {\n            this._zone.run(() => {\n                if (valueHasChanged) {\n                    this.change(this.searchbar.value);\n                }\n                this.onBlur.emit();\n                this.onTouchedCallback();\n                this.togglePopup(false);\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    setState(newValue) {\n        if (this._filtering) {\n            return;\n        }\n        this.value = newValue;\n        this._previousValue = this.value;\n        this.text = this.value;\n    }\n    change(value) {\n        this.togglePopup(false);\n        this.valueChangeSubject.next(value);\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.valueChangeSubscription = this.valueChangeSubject.pipe(filter((candidate) => {\n            return !(this.value === candidate && this.text === candidate);\n        }))\n            .subscribe((value) => {\n            this.value = value;\n            this.text = value;\n            this.emitChange();\n        });\n        this.changeSubscription = this.selectionService.onChange.subscribe(this.handleItemChange.bind(this));\n        this.focusSubscription = this.selectionService.onFocus.subscribe(this.handleItemFocus.bind(this));\n        this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down).subscribe((event) => this.navigate(event.index));\n        this.closeSubscription = this.navigationService.close.subscribe(() => this.togglePopup(false));\n        this.enterSubscription = this.navigationService.enter.subscribe(this.handleEnter.bind(this));\n        this.escSubscription = this.navigationService.esc.subscribe(this.handleEscape.bind(this));\n    }\n    unsubscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.changeSubscription.unsubscribe();\n        this.navigationSubscription.unsubscribe();\n        this.closeSubscription.unsubscribe();\n        this.enterSubscription.unsubscribe();\n        this.escSubscription.unsubscribe();\n        this.valueChangeSubscription.unsubscribe();\n        this.focusSubscription.unsubscribe();\n    }\n    handleItemChange(event) {\n        const index = event.indices.length ? event.indices[0] : undefined;\n        this._filtering = false;\n        this.selectionService.resetSelection([-1]);\n        if (!isPresent(index)) {\n            return;\n        }\n        let text = getter(this.dataService.itemAt(index), this.valueField);\n        this.change(text);\n    }\n    handleItemFocus(_event) {\n        const focused = this.selectionService.focused;\n        const shouldSuggest = Boolean(this.suggest && this.data && this.data.length && focused >= 0);\n        if (shouldSuggest) {\n            this.suggestedText = getter(this.dataService.itemAt(focused), this.valueField);\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute',\n            popupAlign: popupPosition,\n            anchorAlign: anchorPosition\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.data.length - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    findIndexPredicate(text) {\n        if (this.dataService.grouped) {\n            return (item) => {\n                let itemText = getter(item.value, this.valueField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n        else {\n            return (item) => {\n                let itemText = getter(item, this.valueField);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n    }\n    setMessages() {\n        this._zone.runOutsideAngular(() => {\n            clearTimeout(this.messagesTimeout);\n            this.messagesTimeout = setTimeout(() => {\n                this.noDataText = this.localization.get('noDataText');\n                this.cdr.detectChanges();\n            });\n        });\n    }\n}\nAutoCompleteComponent.decorators = [\n    { type: Component, args: [{\n                exportAs: 'kendoAutoComplete',\n                providers: [\n                    AUTOCOMPLETE_VALUE_ACCESSOR,\n                    DataService,\n                    SelectionService,\n                    NavigationService,\n                    DisabledItemsService,\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.autocomplete'\n                    },\n                    {\n                        provide: FilterableDropDownComponentBase, useExisting: forwardRef(() => AutoCompleteComponent)\n                    },\n                    {\n                        provide: KendoInput, useExisting: forwardRef(() => AutoCompleteComponent)\n                    }\n                ],\n                selector: 'kendo-autocomplete',\n                template: `\n        <ng-container kendoAutoCompleteLocalizedMessages\n            i18n-noDataText=\"kendo.autocomplete.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.autocomplete.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <kendo-searchbar #searchbar\n            [role]=\"'combobox'\"\n            [id]=\"focusableId\"\n            [listId]=\"listBoxId\"\n            [activeDescendant]=\"activeDescendant\"\n            [noDataLabel]=\"noDataLabel\"\n            [userInput]=\"text\"\n            [suggestedText]=\"suggestion\"\n            [disabled]=\"disabled\"\n            [readonly]=\"readonly\"\n            [tabIndex]=\"tabIndex\"\n            [popupOpen]=\"isOpen\"\n            [placeholder]=\"placeholder\"\n            (onNavigate)=\"handleNavigate($event)\"\n            (valueChange)=\"searchBarChange($event)\"\n            (onBlur)=\"handleBlur()\"\n            (onFocus)=\"handleFocus()\"\n        ></kendo-searchbar>\n        <span *ngIf=\"!loading && !readonly && (clearButton && text?.length)\" class=\"k-icon k-clear-value k-i-close\" [attr.title]=\"clearTitle\" role=\"button\" tabindex=\"-1\" (click)=\"clearValue($event)\" (mousedown)=\"$event.preventDefault()\">\n</span>\n        <span *ngIf=\"loading\" class=\"k-icon k-i-loading\"></span>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"valueField\"\n                [valueField]=\"valueField\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [height]=\"listHeight\"\n                [show]=\"isOpen\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n            >\n            </kendo-list>\n            <!--no-data template-->\n            <div class=\"k-nodata\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate?.templateRef\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ noDataText }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n            },] },\n];\n/** @nocollapse */\nAutoCompleteComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: DataService },\n    { type: PopupService },\n    { type: SelectionService },\n    { type: NavigationService },\n    { type: DisabledItemsService },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nAutoCompleteComponent.propDecorators = {\n    highlightFirst: [{ type: Input }],\n    focusableId: [{ type: Input }],\n    data: [{ type: Input }],\n    value: [{ type: Input }],\n    valueField: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    listHeight: [{ type: Input }],\n    loading: [{ type: Input }],\n    clearButton: [{ type: Input }],\n    suggest: [{ type: Input }],\n    disabled: [{ type: Input }],\n    itemDisabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input, args: [\"tabIndex\",] }],\n    filterable: [{ type: Input }],\n    virtual: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    filterChange: [{ type: Output }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    template: [{ type: ContentChild, args: [ItemTemplateDirective,] }],\n    headerTemplate: [{ type: ContentChild, args: [HeaderTemplateDirective,] }],\n    footerTemplate: [{ type: ContentChild, args: [FooterTemplateDirective,] }],\n    noDataTemplate: [{ type: ContentChild, args: [NoDataTemplateDirective,] }],\n    groupTemplate: [{ type: ContentChild, args: [GroupTemplateDirective,] }],\n    fixedGroupTemplate: [{ type: ContentChild, args: [FixedGroupTemplateDirective,] }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    searchbar: [{ type: ViewChild, args: [SearchBarComponent,] }],\n    optionsList: [{ type: ViewChild, args: ['optionsList',] }],\n    widgetClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-autocomplete',] }, { type: HostBinding, args: ['class.k-header',] }],\n    isDisabled: [{ type: HostBinding, args: ['class.k-state-disabled',] }],\n    dir: [{ type: HostBinding, args: ['attr.dir',] }]\n};\n\n/**\n * @hidden\n */\nconst TOUCH_ENABLED = new InjectionToken('dropdowns-touch-enabled');\n\n/**\n * @hidden\n */\n/* tslint:disable:max-line-length */\n/* tslint:disable:variable-name */\nconst MultiselectMessages = {\n    'array': 'Expected values of array type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'object': 'Expected values of Object type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'primitive': 'Expected values of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/multiselect/#toc-bind-to-arrays-of-complex-data'\n};\n/**\n * @hidden\n */\n/* tslint:disable:max-line-length */\n/* tslint:disable:variable-name */\nconst ComboBoxMessages = {\n    'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n    'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/combobox/#toc-bind-to-arrays-of-complex-data',\n    'noItemHeight': 'Expected virtual.itemHeight of type number.'\n};\n/**\n * @hidden\n */\n/* tslint:disable:max-line-length */\n/* tslint:disable:variable-name */\nconst DropDownListMessages = {\n    'defaultItem': 'defaultItem and data items must be of same type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/api/DropDownListComponent/#toc-defaultitem',\n    'object': 'Expected value of type Object. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n    'primitive': 'Expected value of primitive type. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-value-selection',\n    'textAndValue': 'Expected textField and valueField options to be set. See http://www.telerik.com/kendo-angular-ui/components/dropdowns/dropdownlist/#toc-bind-to-arrays-of-complex-data'\n};\n\n/* tslint:disable:no-null-keyword */\n/**\n * @hidden\n */\nconst COMBOBOX_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line:no-use-before-declare\n    useExisting: forwardRef(() => ComboBoxComponent)\n};\n/**\n * Represents the [Kendo UI ComboBox component for Angular]({% slug overview_combobox %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-combobox [data]=\"listItems\">\n *  </kendo-combobox>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ComboBoxComponent {\n    constructor(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, cdr, renderer, hostElement, touchEnabled) {\n        this.localization = localization;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.dataService = dataService;\n        this._zone = _zone;\n        this.cdr = cdr;\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.touchEnabled = touchEnabled;\n        this.selected = [];\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Specifies whether the ComboBox allows user-defined values that are not present in the dataset\n         * ([more information and examples]({% slug custom_values_combobox %})).\n         * Defaults to `false`.\n         */\n        this.allowCustom = false;\n        /**\n         * A user-defined callback which returns normalized custom values.\n         * Typically used when the data items are different from type `string`.\n         * @param { Any } value - The custom value defined by the user.\n         * @returns { Any }\n         *\n         * @example\n         * ```ts\n         * import { map } from 'rxjs/operators';\n         *\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *   <kendo-combobox\n         *       [allowCustom]=\"true\"\n         *       [data]=\"listItems\"\n         *       [textField]=\"'text'\"\n         *       [valueField]=\"'value'\"\n         *       [valueNormalizer]=\"valueNormalizer\"\n         *       (valueChange)=\"onValueChange($event)\"\n         *   >\n         *   </kendo-combobox>\n         * `\n         * })\n         *\n         * class AppComponent {\n         *   public listItems: Array<{ text: string, value: number }> = [\n         *       { text: \"Small\", value: 1 },\n         *       { text: \"Medium\", value: 2 },\n         *       { text: \"Large\", value: 3 }\n         *   ];\n         *\n         *   public onValueChange(value) {\n         *       console.log(\"valueChange : \", value);\n         *   }\n         *\n         *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n         *      return { ProductID: null, ProductName: text };\n         *   }));\n         *\n         * }\n         * ```\n         */\n        this.valueNormalizer = (text) => text.pipe(map((userInput) => userInput));\n        /**\n         * The hint that is displayed when the component is empty.\n         *\n         */\n        this.placeholder = \"\";\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Enables the auto-completion of the text based on the first data item.\n         */\n        this.suggest = false;\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to `undefined` and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Enables the [filtering]({% slug filtering_combobox %}) functionality.\n         * If set to `true`, the component emits the `filterChange` event.\n         */\n        this.filterable = false;\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time an item selection is changed\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value\n         * ([see example]({% slug overview_combobox %}#toc-events)).\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open.\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close.\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the user focuses the ComboBox.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the ComboBox gets blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        this.widgetClasses = true;\n        this._isFocused = false;\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.onChangeCallback = (_) => { };\n        this.onTouchedCallback = (_) => { };\n        this._filtering = false;\n        this._text = '';\n        this.filterText = '';\n        this._open = false;\n        this._popupSettings = { animate: true };\n        this.popupMouseDownHandler = (event) => event.preventDefault();\n        this.customValueSubject = new Subject();\n        this.valueSubject = new Subject();\n        this.clearValueSubject = new Subject();\n        this.selectionSubject = new Subject();\n        this.subs = new Subscription();\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.data = [];\n    }\n    get width() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    set text(text) {\n        this._text = isPresent(text) ? text.toString() : \"\";\n    }\n    get text() {\n        return this._text;\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    get activeDescendant() {\n        if (!this.isOpen || !isPresent(this.selectionService.focused) || this.selectionService.focused === -1) {\n            return null;\n        }\n        const dataItem = this.dataService.itemAt(this.selectionService.focused);\n        return this.optionPrefix + \"-\" + (dataItem ? getter(dataItem, this.valueField) : \"\");\n    }\n    get noDataLabel() {\n        if (this.data.length === 0) {\n            return this.noDataText;\n        }\n    }\n    get clearTitle() {\n        return this.localization.get('clearTitle');\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the ComboBox.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState();\n        if (this._filtering) {\n            const queryAndDataPresent = this.text.length > 0 && this.dataService.itemsCount > 0;\n            const index = queryAndDataPresent ? this.firstFocusableIndex(0) : -1;\n            this.selectionService.focused = index;\n        }\n        if (this.suggest && this.dataService.itemsCount && this.text) {\n            this.suggestedText = getter(this.dataService.itemAt(0), this.textField);\n        }\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the ComboBox.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the dataset are considered custom values.\n     * > When the `Enter` key is pressed or the component loses focus, custom values get dismissed unless `allowCustom` is set to `true`.\n     */\n    set value(newValue) {\n        this.verifySettings(newValue);\n        this._value = newValue;\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Configures the popup of the ComboBox.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_combobox %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_combobox %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    get clearable() {\n        return this.clearButton;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    set isFocused(value) {\n        this.renderer[value ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, \"k-state-focused\");\n        this._isFocused = value;\n    }\n    ngOnInit() {\n        this.attachStreams();\n        this.createSelectionStream();\n        this.createValueStream();\n        this.setMessages();\n    }\n    createValueStream() {\n        const valueStream = this.valueSubject.pipe(filter((candidate) => {\n            const valueFrom = this.prop(this.valueField, this.valuePrimitive);\n            const textFrom = this.prop(this.textField, this.valuePrimitive);\n            const current = valueFrom(this.value);\n            const newValue = valueFrom(candidate);\n            let newText = textFrom(candidate);\n            if (!isPresent(this.value) && !isPresent(newValue)) {\n                return false;\n            }\n            if (isPresent(newText)) {\n                newText = newText.toString();\n            }\n            if (current === newValue && this.text === newText) {\n                this.clearFilter();\n                return false;\n            }\n            else {\n                return true;\n            }\n        }), map((candidate) => {\n            const valueFrom = this.prop(this.valueField, this.valuePrimitive);\n            const textFrom = this.prop(this.textField, this.valuePrimitive);\n            const newValue = valueFrom(candidate);\n            const newText = textFrom(candidate);\n            return {\n                dataItem: candidate,\n                text: newText,\n                value: this.valuePrimitive ? newValue : candidate\n            };\n        }));\n        const customValueStreams = partition(() => this.allowCustom)(this.customValueSubject.pipe(throttleTime(300)));\n        const allowCustomValueStream = customValueStreams[0].pipe(tap(() => {\n            this.loading = true;\n            this.disabled = true;\n            this.cdr.detectChanges();\n        }), filter(() => {\n            const valueFrom = this.prop(this.valueField, this.valuePrimitive);\n            const hasChange = this.text !== valueFrom(this.value);\n            this.loading = hasChange;\n            this.disabled = hasChange;\n            if (!hasChange) {\n                this.clearFilter();\n            }\n            return hasChange;\n        }), this.valueNormalizer, map((normalizedValue) => {\n            return {\n                custom: true,\n                dataItem: normalizedValue,\n                text: this.text,\n                value: normalizedValue\n            };\n        }));\n        const disableCustomValueStream = customValueStreams[1].pipe(map(() => {\n            return {\n                custom: true,\n                dataItem: undefined,\n                text: undefined,\n                value: undefined\n            };\n        }));\n        const clearValueStream = this.clearValueSubject.pipe(map(() => ({\n            dataItem: undefined,\n            text: undefined,\n            value: undefined\n        })));\n        if (this.valueSubscription) {\n            this.valueSubscription.unsubscribe();\n        }\n        const merged = merge(valueStream, allowCustomValueStream, disableCustomValueStream, clearValueStream);\n        this.valueSubscription = merged.pipe(catchError(() => {\n            this.dataItem = undefined;\n            this.value = undefined;\n            this.text = undefined;\n            this.loading = false;\n            this.disabled = false;\n            this.emitSelectionChange(undefined);\n            this.emitValueChange();\n            this.createValueStream();\n            return of(null);\n        }))\n            .subscribe((state) => {\n            this.dataItem = state.dataItem;\n            this.value = state.value;\n            this.text = state.text;\n            this.loading = false;\n            this.disabled = false;\n            this.clearFilter();\n            if (state.custom) {\n                this.selectionService.focused = -1;\n            }\n            this.emitSelectionChange(state.custom ? undefined : this.dataItem);\n            this.emitValueChange();\n        });\n    }\n    attachStreams() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.subs.add(this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.setMessages();\n        }));\n        this.subs.add(merge(this.navigationService.up, this.navigationService.down, this.navigationService.home, this.navigationService.end)\n            .pipe(filter((event) => isPresent(event.index)))\n            .subscribe((event) => this.navigate(event.index)));\n        this.subs.add(this.navigationService.open.subscribe(this.handleNavigationOpen.bind(this)));\n        this.subs.add(this.navigationService.close.subscribe(() => this.togglePopup(false)));\n        this.subs.add(this.navigationService.esc.subscribe(this.handleEscape.bind(this)));\n        this.subs.add(this.navigationService.enter.pipe(tap((event) => {\n            if (this.isOpen) {\n                event.originalEvent.preventDefault();\n            }\n        }))\n            .subscribe(this.handleEnter.bind(this)));\n        this.subs.add(merge(this.selectionService.onChange, this.selectionService.onSelect.pipe(filter(_ => !this.isOpen)))\n            .pipe(tap(_ => {\n            this._filtering = false;\n            this.togglePopup(false);\n        }), map((event) => this.dataService.itemAt(event.indices[0])))\n            .subscribe(dataItem => {\n            this.change(dataItem);\n        }));\n        this.subs.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), tap(_ => this._filtering = false), map((event) => this.dataService.itemAt(event.indices[0])))\n            .subscribe(dataItem => {\n            this.updateState({ dataItem });\n            this.emitSelectionChange(dataItem);\n        }));\n    }\n    ngOnDestroy() {\n        this.destroyPopup();\n        clearTimeout(this.messagesTimeout);\n        this.subs.unsubscribe();\n        [this.valueSubscription, this.selectionSubscription].forEach(sub => isPresent(sub) && sub.unsubscribe());\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (this.valuePrimitive === undefined) {\n            this.valuePrimitive = this.valueField ? false : true;\n        }\n        this.verifySettings(this.value);\n        if (isChanged(\"valueNormalizer\", changes)) {\n            this.createValueStream();\n        }\n        if (isChanged(\"value\", changes)) {\n            this.createSelectionStream();\n        }\n        if (this.valuePrimitive === undefined) {\n            this.valuePrimitive = this.valueField ? false : true;\n        }\n        const STATE_PROPS = /(value|textField|valueField|valuePrimitive)/g;\n        if (STATE_PROPS.test(Object.keys(changes).join())) {\n            this.setState();\n        }\n    }\n    /**\n     * Focuses the ComboBox.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * Blurs the ComboBox.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to open or close the popup,\n     * the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n            this.cdr.markForCheck();\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the ComboBox.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.value = undefined;\n        this.clearState();\n        this.resetSelection();\n        this.createSelectionStream();\n    }\n    /**\n     * @hidden\n     *\n     * Used by the TextBoxContainer to determine if the floating label\n     * should be rendered in the input when the component is not focused.\n     */\n    isEmpty() {\n        const textEmpty = !isPresent(this.text) || isEmptyString(this.text);\n        const valueEmpty = !isPresent(this.value) || isEmptyString(this.value);\n        return textEmpty && valueEmpty;\n    }\n    /**\n     * @hidden\n     */\n    clearValue(event) {\n        event.stopImmediatePropagation();\n        this.focus();\n        this._filtering = true;\n        this._previousDataItem = undefined;\n        this.selectionService.resetSelection([]);\n        this.clearValueSubject.next();\n        this._filtering = false;\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.text = \"\";\n        this.value = value === null ? undefined : value;\n        this.setState();\n        this.createSelectionStream();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    get buttonClasses() {\n        return this.loading ? 'k-i-loading' : this.iconClass || 'k-i-arrow-s';\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this.isOpen) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    verifySettings(newValue) {\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.valuePrimitive === true && isPresent(newValue) && typeof newValue === \"object\") {\n            throw new Error(ComboBoxMessages.primitive);\n        }\n        if (this.valuePrimitive === false && isPresent(newValue) && typeof newValue !== \"object\") {\n            throw new Error(ComboBoxMessages.object);\n        }\n        if (valueOrText) {\n            throw new Error(ComboBoxMessages.textAndValue);\n        }\n        if (this.virtual && isNaN(this.virtual.itemHeight)) {\n            throw new Error(ComboBoxMessages.noItemHeight);\n        }\n    }\n    setState() {\n        // Filtering in process, do nothing.\n        if (this._filtering) {\n            return;\n        }\n        const value = this.value;\n        const valueField = this.valueField;\n        const primitive = this.valuePrimitive;\n        const resolved = this.findDataItem({ primitive, valueField, value });\n        if (isPresent(resolved.dataItem)) {\n            this.updateState({ dataItem: resolved.dataItem, confirm: true });\n            this.resetSelection(resolved.index);\n        }\n        else if (isPresent(value) && this.allowCustom) {\n            this.updateState({ dataItem: value });\n            this.resetSelection(-1);\n        }\n        else if (this._previousDataItem && this.value) {\n            this.updateState({ dataItem: this._previousDataItem });\n            this.resetSelection();\n        }\n        else {\n            this.clearState();\n            this.resetSelection(-1);\n        }\n    }\n    updateState({ dataItem, confirm = false }) {\n        this.dataItem = dataItem;\n        this.text = this.prop(this.textField, this.valuePrimitive)(dataItem);\n        if (confirm) {\n            this._previousDataItem = dataItem;\n        }\n    }\n    clearState() {\n        this.text = undefined;\n        this.dataItem = undefined;\n    }\n    resetSelection(index) {\n        const clear = !isPresent(index) || index < 0;\n        this.selectionService.resetSelection(clear ? [] : [index]);\n        this.selectionService.focused = index;\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.data.length - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    findIndexPredicate(text) {\n        if (this.dataService.grouped) {\n            return (item) => {\n                let itemText = this.prop(this.textField, this.valuePrimitive)(item.value);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n        else {\n            return (item) => {\n                let itemText = this.prop(this.textField, this.valuePrimitive)(item);\n                itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n                return itemText.startsWith(text.toLowerCase());\n            };\n        }\n    }\n    prop(field, usePrimitive) {\n        return (dataItem) => {\n            if (isPresent(dataItem)) {\n                if (usePrimitive) {\n                    return field && isObject(dataItem) ? dataItem[field] : dataItem;\n                }\n                else {\n                    return dataItem[field];\n                }\n            }\n            return null;\n        };\n    }\n    findDataItem({ primitive, valueField, value }) {\n        const result = {\n            dataItem: null,\n            index: -1\n        };\n        const prop = this.prop(valueField, primitive);\n        let comparer;\n        if (this.dataService.grouped) {\n            comparer = (element) => {\n                return prop(element.value) === prop(value);\n            };\n        }\n        else {\n            comparer = (element) => {\n                return prop(element) === prop(value);\n            };\n        }\n        const index = this.dataService.findIndex(comparer);\n        result.dataItem = this.dataService.itemAt(index);\n        result.index = index;\n        return result;\n    }\n    search(text, startFrom = 0) {\n        let index;\n        if (text.length && this.dataService.itemsCount) {\n            index = this.dataService.findIndex(this.findIndexPredicate(text), startFrom);\n        }\n        else {\n            index = -1;\n        }\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            if (index + 1 < this.dataService.itemsCount) {\n                this.search(text, index + 1);\n            }\n            else {\n                this.selectionService.focus(-1);\n            }\n        }\n        else {\n            this.selectionService.focus(index);\n            if (this.suggest) {\n                this.suggestedText = getter(this.dataService.itemAt(index), this.textField);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    getSuggestion() {\n        const hasSelected = !!this.selectionService.selected.length;\n        const shouldSuggest = this.suggest && !this.backspacePressed && this.suggestedText && this.text;\n        if (!hasSelected && shouldSuggest && this.suggestedText.toLowerCase().startsWith(this.text.toLowerCase())) {\n            return this.suggestedText;\n        }\n        else {\n            this.suggestedText = undefined;\n        }\n    }\n    navigate(index) {\n        if (this.dataService.itemsCount === 0) {\n            return;\n        }\n        this.text = this.prop(this.textField, this.valuePrimitive)(this.dataService.itemAt(index));\n        this.selectionService.select(index);\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const hasSelected = isPresent(this.selectionService.selected[0]);\n        const focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(0) : this.selectionService.focused;\n        let offset = 0;\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        if (event.keyCode === Keys.home || event.keyCode === Keys.end) {\n            return;\n        }\n        if (!hasSelected) {\n            if (event.keyCode === Keys.down) {\n                offset = -1;\n            }\n            else if (event.keyCode === Keys.up) {\n                offset = 1;\n            }\n        }\n        const action = this.navigationService.process({\n            current: offset + focused,\n            max: this.dataService.itemsCount - 1,\n            min: 0,\n            originalEvent: event\n        });\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Left &&\n            action !== NavigationAction.Right &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    handleEnter() {\n        const text = this.text;\n        const focused = this.selectionService.focused;\n        const hasFocused = isPresent(focused) && focused !== -1;\n        const previousText = getter(this._previousDataItem, this.textField, this.valuePrimitive) || \"\";\n        const focusedItemText = getter(this.dataService.itemAt(focused), this.textField);\n        const textHasChanged = text !== previousText;\n        this.togglePopup(false);\n        this._filtering = false;\n        if (this.allowCustom && textHasChanged) {\n            if (text === focusedItemText || this.useSuggestion()) {\n                this.selectionService.change(focused);\n            }\n            else {\n                this.change(text, true);\n            }\n        }\n        if (!this.allowCustom) {\n            if (hasFocused) {\n                this.selectionService.change(focused);\n            }\n            else if (textHasChanged) {\n                this.change(text, true);\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleBlur() {\n        this._filtering = false;\n        this.searchbar.input.nativeElement.scrollLeft = 0; // Firefox doesn't auto-scroll to the left on blur like other browsers\n        this.isFocused = false;\n        const valueFrom = this.prop(this.valueField, this.valuePrimitive);\n        const unresolvedSelection = valueFrom(this.dataItem) !== valueFrom(this.value);\n        const currentText = this.searchbar.value;\n        const textFrom = this.prop(this.textField, this.valuePrimitive);\n        const textHasChanged = currentText !== (textFrom(this.dataItem) || '');\n        const valueHasChanged = unresolvedSelection || textHasChanged;\n        const runInZone = valueHasChanged || hasObservers(this.onBlur) || hasObservers(this.close) || isUntouched(this.hostElement.nativeElement);\n        if (runInZone) {\n            this._zone.run(() => {\n                if (valueHasChanged) {\n                    const lowerCaseMatch = isPresent(this.focusedItemText) && this.focusedItemText.toLowerCase() === currentText.toLowerCase();\n                    if (lowerCaseMatch || unresolvedSelection) {\n                        this.selectionService.change(this.selectionService.focused);\n                    }\n                    else {\n                        this.change(currentText, true);\n                    }\n                }\n                this.onBlur.emit();\n                this.onTouchedCallback();\n                this.togglePopup(false);\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleEscape() {\n        this.togglePopup(false);\n        // clear the focus only if the focused item is not selected\n        const hasSelected = this.selectionService.selected.length > 0;\n        if (!hasSelected) {\n            this.suggestedText = null;\n            this.selectionService.focused = -1;\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleNavigationOpen() {\n        this.restoreItemFocus();\n        this.togglePopup(true);\n    }\n    /**\n     * @hidden\n     */\n    searchBarChange(text) {\n        const currentTextLength = this.text ? this.text.length : 0;\n        this.backspacePressed = (text.length < currentTextLength) ? true : false;\n        this.text = text;\n        // Reset the selection prior to filter. If a match is present, it will be resolved. If a match is not present, it is not needed.\n        this.selectionService.resetSelection([]);\n        this.togglePopup(true);\n        this._filtering = true;\n        if (this.filterable && this.filterText !== text) {\n            this.filterText = text;\n            this.filterChange.emit(text);\n        }\n        else {\n            this.search(text);\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFocus() {\n        this.isFocused = true;\n        if (hasObservers(this.onFocus)) {\n            this._zone.run(() => this.onFocus.emit());\n        }\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    change(candidate, isCustom = false) {\n        if (isCustom) {\n            this.customValueSubject.next(candidate);\n        }\n        else {\n            this.valueSubject.next(candidate);\n        }\n    }\n    emitSelectionChange(dataItem) {\n        this.selectionSubject.next(dataItem);\n    }\n    emitValueChange() {\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n        this._previousDataItem = this.dataItem;\n    }\n    /**\n     * @hidden\n     */\n    selectClick() {\n        if (!this.touchEnabled) {\n            this.searchbar.focus();\n        }\n        if (!this.isOpen) {\n            this.restoreItemFocus();\n        }\n        this.togglePopup(!this.isOpen);\n    }\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    get focusedItemText() {\n        const focused = this.selectionService.focused;\n        if (!isPresent(focused) || focused === -1) {\n            return null;\n        }\n        const itemText = getter(this.dataService.itemAt(focused), this.textField);\n        return !isPresent(itemText) ? \"\" : itemText.toString();\n    }\n    /**\n     * Focuses the first match when there's text in the input field, but no focused item.\n     */\n    restoreItemFocus() {\n        const hasFocus = isPresent(this.selectionService.focused) && this.selectionService.focused > -1;\n        if (!hasFocus && this.text && this.dataService.itemsCount) {\n            if (this.filterable) {\n                this.selectionService.focused = this.firstFocusableIndex(0);\n            }\n            else {\n                this.search(this.text);\n            }\n        }\n    }\n    useSuggestion() {\n        if (!(this.suggest && isPresent(this.searchbar.value))) {\n            return false;\n        }\n        const focusedDataItem = this.dataService.itemAt(this.selectionService.focused);\n        const focusedItemText = this.prop(this.textField, this.valuePrimitive)(focusedDataItem);\n        if (!isPresent(focusedItemText)) {\n            return false;\n        }\n        return this.searchbar.value.toLowerCase() === focusedItemText.toLowerCase();\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute',\n            anchorAlign: anchorPosition,\n            popupAlign: popupPosition\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    clearFilter() {\n        if (!(this.filterable && this.filterText)) {\n            return;\n        }\n        this.filterText = '';\n        this.filterChange.emit(this.filterText);\n    }\n    setMessages() {\n        this._zone.runOutsideAngular(() => {\n            clearTimeout(this.messagesTimeout);\n            this.messagesTimeout = setTimeout(() => {\n                this.noDataText = this.localization.get('noDataText');\n                this.cdr.detectChanges();\n            });\n        });\n    }\n    createSelectionStream() {\n        if (isPresent(this.selectionSubscription)) {\n            this.selectionSubscription.unsubscribe();\n        }\n        this.selectionSubscription = this.selectionSubject\n            .pipe(distinctUntilChanged())\n            .subscribe(dataItem => this.selectionChange.emit(dataItem));\n    }\n}\nComboBoxComponent.decorators = [\n    { type: Component, args: [{\n                exportAs: 'kendoComboBox',\n                providers: [\n                    COMBOBOX_VALUE_ACCESSOR,\n                    DataService,\n                    SelectionService,\n                    NavigationService,\n                    DisabledItemsService,\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.combobox'\n                    },\n                    {\n                        provide: FilterableDropDownComponentBase, useExisting: forwardRef(() => ComboBoxComponent)\n                    },\n                    {\n                        provide: KendoInput, useExisting: forwardRef(() => ComboBoxComponent)\n                    }\n                ],\n                selector: 'kendo-combobox',\n                template: `\n        <ng-container kendoComboBoxLocalizedMessages\n            i18n-noDataText=\"kendo.combobox.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.combobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <span #wrapper unselectable=\"on\"\n            class=\"k-dropdown-wrap\"\n            [ngClass]=\"{ 'k-state-default': !disabled, 'k-state-disabled': disabled }\"\n        >\n          <kendo-searchbar #searchbar\n              [role]=\"'combobox'\"\n              [id]=\"focusableId\"\n              [listId]=\"listBoxId\"\n              [activeDescendant]=\"activeDescendant\"\n              [noDataLabel]=\"noDataLabel\"\n              [userInput]=\"text\"\n              [suggestedText]=\"getSuggestion()\"\n              [disabled]=\"disabled\"\n              [readonly]=\"readonly\"\n              [tabIndex]=\"tabIndex\"\n              [popupOpen]=\"isOpen\"\n              [placeholder]=\"placeholder\"\n              (onNavigate)=\"handleNavigate($event)\"\n              (valueChange)=\"searchBarChange($event)\"\n              (onBlur)=\"handleBlur()\"\n              (onFocus)=\"handleFocus()\"\n          ></kendo-searchbar>\n          <span *ngIf=\"!loading && !readonly && (clearButton && text?.length)\" class=\"k-icon k-clear-value k-i-close\" [attr.title]=\"clearTitle\" role=\"button\" tabindex=\"-1\" (click)=\"clearValue($event)\" (mousedown)=\"$event.preventDefault()\"></span>\n          <span unselectable=\"on\"\n              class=\"k-select\"\n              (click)=\"selectClick()\"\n              (mousedown)=\"$event.preventDefault()\" >\n              <span class=\"k-icon\" [ngClass]=\"buttonClasses\">\n               </span>\n          </span>\n          <ng-template #popupTemplate>\n              <!--header template-->\n              <ng-template *ngIf=\"headerTemplate\"\n                  [templateContext]=\"{\n                      templateRef: headerTemplate.templateRef\n                  }\">\n              </ng-template>\n              <!--list-->\n              <kendo-list\n                  #optionsList\n                  [id]=\"listBoxId\"\n                  [optionPrefix]=\"optionPrefix\"\n                  [data]=\"data\"\n                  [textField]=\"textField\"\n                  [valueField]=\"valueField\"\n                  [template]=\"template\"\n                  [groupTemplate]=\"groupTemplate\"\n                  [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                  [height]=\"listHeight\"\n                  [show]=\"isOpen\"\n                  [virtual]=\"virtual\"\n                  (pageChange)=\"pageChange($event)\"\n              >\n              </kendo-list>\n              <!--no-data template-->\n              <div class=\"k-nodata\" *ngIf=\"data.length === 0\">\n                  <ng-template [ngIf]=\"noDataTemplate\"\n                      [templateContext]=\"{\n                          templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                      }\">\n                  </ng-template>\n                  <ng-template [ngIf]=\"!noDataTemplate\">\n                      <div>{{ noDataText }}</div>\n                  </ng-template>\n              </div>\n              <!--footer template-->\n              <ng-template *ngIf=\"footerTemplate\"\n                  [templateContext]=\"{\n                      templateRef: footerTemplate.templateRef\n                  }\">\n              </ng-template>\n          </ng-template>\n        </span>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n            },] },\n];\n/** @nocollapse */\nComboBoxComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PopupService },\n    { type: SelectionService },\n    { type: NavigationService },\n    { type: DisabledItemsService },\n    { type: DataService },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [TOUCH_ENABLED,] }] }\n];\nComboBoxComponent.propDecorators = {\n    focusableId: [{ type: Input }],\n    allowCustom: [{ type: Input }],\n    data: [{ type: Input }],\n    value: [{ type: Input }],\n    textField: [{ type: Input }],\n    valueField: [{ type: Input }],\n    valuePrimitive: [{ type: Input }],\n    valueNormalizer: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    listHeight: [{ type: Input }],\n    iconClass: [{ type: Input }],\n    loading: [{ type: Input }],\n    suggest: [{ type: Input }],\n    clearButton: [{ type: Input }],\n    disabled: [{ type: Input }],\n    itemDisabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input, args: [\"tabIndex\",] }],\n    filterable: [{ type: Input }],\n    virtual: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    selectionChange: [{ type: Output }],\n    filterChange: [{ type: Output }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    template: [{ type: ContentChild, args: [ItemTemplateDirective,] }],\n    headerTemplate: [{ type: ContentChild, args: [HeaderTemplateDirective,] }],\n    footerTemplate: [{ type: ContentChild, args: [FooterTemplateDirective,] }],\n    noDataTemplate: [{ type: ContentChild, args: [NoDataTemplateDirective,] }],\n    groupTemplate: [{ type: ContentChild, args: [GroupTemplateDirective,] }],\n    fixedGroupTemplate: [{ type: ContentChild, args: [FixedGroupTemplateDirective,] }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    searchbar: [{ type: ViewChild, args: [SearchBarComponent,] }],\n    optionsList: [{ type: ViewChild, args: ['optionsList',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper', { static: true },] }],\n    widgetClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-combobox',] }, { type: HostBinding, args: ['class.k-header',] }],\n    clearable: [{ type: HostBinding, args: ['class.k-combobox-clearable',] }],\n    dir: [{ type: HostBinding, args: ['attr.dir',] }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the selected value of the DropDownList\n * ([see example]({% slug templates_ddl %}#toc-value-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `ValueTemplate` directive can only be used with the DropDownList component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *    <ng-template kendoDropDownListValueTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass ValueTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nValueTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownListValueTemplate]'\n            },] },\n];\n/** @nocollapse */\nValueTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * @hidden\n */\nconst DROPDOWNLIST_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line:no-use-before-declare\n    useExisting: forwardRef(() => DropDownListComponent)\n};\n/**\n * Represents the [Kendo UI DropDownList component for Angular]({% slug overview_ddl %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-dropdownlist [data]=\"listItems\">\n *  </kendo-dropdownlist>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass DropDownListComponent {\n    constructor(localization, popupService, selectionService, navigationService, disabledItemsService, dataService, _zone, renderer, hostElement, cdr, touchEnabled) {\n        this.localization = localization;\n        this.popupService = popupService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.dataService = dataService;\n        this._zone = _zone;\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this.cdr = cdr;\n        this.touchEnabled = touchEnabled;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Sets the height of the options list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of options and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Enables the [filtering]({% slug filtering_ddl %}) functionality of the DropDownList.\n         */\n        this.filterable = false;\n        /**\n         * Enables a case-insensitive search. When filtration is disabled, use this option.\n         */\n        this.ignoreCase = true;\n        /**\n         * Sets the delay before an item search is performed. When filtration is disabled, use this option.\n         */\n        this.delay = 500;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Fires each time the value is changed ([see example]({% slug overview_ddl %}#toc-events)).\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the user types in the input field\n         * ([see example]({% slug overview_ddl %}#toc-events)).\n         * You can filter the source based on the passed filtration value.\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the item selection is changed\n         * ([see example]({% slug overview_ddl %}#toc-events)).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_ddl %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the user focuses the DropDownList.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the DropDownList gets blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        this.widgetClasses = true;\n        this.groupIndices = [];\n        this.listBoxId = guid();\n        this.optionPrefix = guid();\n        this.filterText = \"\";\n        this._isFocused = false;\n        this.onTouchedCallback = (_) => { };\n        this.onChangeCallback = (_) => { };\n        this.word = \"\";\n        this.last = \"\";\n        this.filterFocused = new EventEmitter();\n        this.filterBlurred = new EventEmitter();\n        this.wrapperFocused = new EventEmitter();\n        this.wrapperBlurred = new EventEmitter();\n        this.selectionSubscription = new Subscription();\n        this._open = false;\n        this._popupSettings = { animate: true };\n        this.direction = localization.rtl ? 'rtl' : 'ltr';\n        this.data = [];\n        this.subscribeEvents();\n        this.popupMouseDownHandler = this.onMouseDown.bind(this);\n    }\n    get width() {\n        const wrapperWidth = isDocumentAvailable() ? this.wrapper.nativeElement.offsetWidth : 0;\n        const width = this.popupSettings.width || wrapperWidth;\n        const minWidth = isNaN(wrapperWidth) ? wrapperWidth : `${wrapperWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get widgetTabIndex() {\n        if (this.disabled) {\n            return undefined;\n        }\n        const providedTabIndex = Number(this.tabIndex);\n        const defaultTabIndex = 0;\n        return !isNaN(providedTabIndex) ? providedTabIndex : defaultTabIndex;\n    }\n    get ariaExpanded() {\n        return this.isOpen;\n    }\n    get ariaOwns() {\n        if (!this.isOpen) {\n            return;\n        }\n        return this.listBoxId;\n    }\n    get ariaActivedescendant() {\n        if (!isPresent(this.dataItem)) {\n            return;\n        }\n        return this.optionPrefix + \"-\" + getter(this.dataItem, this.valueField);\n    }\n    get noDataLabel() {\n        if (this.dataService.itemsCount === 0) {\n            return this.noDataText;\n        }\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the DropDownList.\n     *\n     * > The data has to be provided in an array-like list.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState();\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            // Use length instead of itemsCount because of the grouping.\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the DropDownList.\n     * It can either be of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n    set value(newValue) {\n        this._value = newValue;\n        this.cdr.markForCheck();\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * Configures the popup of the DropDownList.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_ddl %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_ddl %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * @hidden\n     */\n    blurComponent() {\n        this.wrapperBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n    blurFilterInput() {\n        this.filterBlurred.emit();\n    }\n    /**\n     * @hidden\n     */\n    focusComponent() {\n        this.wrapperFocused.emit();\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        }\n    }\n    /**\n     * @hidden\n     */\n    keydown(event) {\n        const firstIndex = isPresent(this.defaultItem) ? -1 : 0;\n        let focused = isNaN(this.selectionService.focused) ? this.firstFocusableIndex(firstIndex) : this.selectionService.focused;\n        let offset = 0;\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        const isHomeEnd = event.keyCode === Keys.home || event.keyCode === Keys.end;\n        const isFilterFocused = this.filterable && this.isFocused && this.isOpen;\n        if (isFilterFocused && isHomeEnd) {\n            return;\n        }\n        const hasSelected = isPresent(this.selectionService.selected[0]);\n        const focusedItemNotSelected = isPresent(this.selectionService.focused) && !this.selectionService.isSelected(this.selectionService.focused);\n        if (!hasSelected || focusedItemNotSelected) {\n            if (event.keyCode === Keys.down || event.keyCode === Keys.right) {\n                offset = -1;\n            }\n            else if (event.keyCode === Keys.up || event.keyCode === Keys.left) {\n                offset = 1;\n            }\n        }\n        const eventData = event;\n        const action = this.navigationService.process({\n            current: focused + offset,\n            max: this.dataService.itemsCount - 1,\n            min: this.defaultItem ? -1 : 0,\n            originalEvent: eventData\n        });\n        const leftRightKeys = (action === NavigationAction.Left) || (action === NavigationAction.Right);\n        if (action !== NavigationAction.Undefined &&\n            action !== NavigationAction.Tab &&\n            action !== NavigationAction.Backspace &&\n            action !== NavigationAction.Delete &&\n            !(leftRightKeys && this.filterable) &&\n            action !== NavigationAction.Enter //enter when popup is opened is handled before `handleEnter`\n        ) {\n            eventData.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    keypress(event) {\n        if (this.disabled || this.readonly || this.filterable) {\n            return;\n        }\n        this.onKeyPress(event);\n    }\n    /**\n     * @hidden\n     */\n    click() {\n        this.focus();\n        this.togglePopup(!this.isOpen);\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    get dir() {\n        return this.direction;\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.wrapper.nativeElement, 'k-state-focused');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        this.localizationChangesSubscription = this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.setMessages();\n        });\n        this.setMessages();\n        this.assignAriaDescribedBy();\n    }\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty() {\n        const value = this.value;\n        return !(value === 0 || value === false || value || this.defaultItem);\n    }\n    /**\n     * @hidden\n     */\n    onFilterFocus() {\n        this.filterFocused.emit();\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.destroyPopup();\n        this.unsubscribeEvents();\n        clearTimeout(this.messagesTimeout);\n        if (this.localizationChangesSubscription) {\n            this.localizationChangesSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(_changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && _changes.data && _changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (this.valuePrimitive === undefined) {\n            this.valuePrimitive = this.valueField ? false : true;\n        }\n        if (_changes.hasOwnProperty(\"value\")) {\n            this.verifySettings(_changes.value.currentValue);\n            if (!isPresent(this.value)) {\n                this._previousDataItem = undefined;\n            }\n        }\n        if (_changes.hasOwnProperty(\"defaultItem\")) {\n            this.disabledItemsService.defaultItem = this.defaultItem;\n        }\n        const STATE_PROPS = /(value|textField|valueField|valuePrimitive|defaultItem|itemDisabled)/g;\n        if (STATE_PROPS.test(Object.keys(_changes).join())) {\n            this.setState();\n        }\n    }\n    /**\n     * Focuses the DropDownList.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.focus();\n        }\n    }\n    /**\n     * Blurs the DropDownList.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.wrapper.nativeElement.blur();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_ddl %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required to open the popup on load.\n        // Otherwise, the \"Expression has changed...\" type error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n        });\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    /**\n     * @hidden\n     */\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            if (!open && this.filterable && this.isFocused) {\n                this.focus();\n            }\n            this._toggle(open);\n        }\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the DropDownList.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this._previousDataItem = undefined;\n        this.value = undefined;\n        this.setState();\n    }\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.verifySettings(value);\n        this.value = value === null ? undefined : value;\n        if (!isPresent(value)) {\n            this._previousDataItem = undefined;\n        }\n        this.setState();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    get buttonClasses() {\n        return this.loading ? 'k-i-loading' : this.iconClass || 'k-i-arrow-s';\n    }\n    /**\n     * @hidden\n     */\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    /**\n     * @hidden\n     */\n    get isDisabledDefaultItem() {\n        return this.disabledItemsService.isItemDisabled(this.defaultItem);\n    }\n    /**\n     * @hidden\n     */\n    getText() {\n        return this.text;\n    }\n    /**\n     * @hidden\n     */\n    getDefaultItemText() {\n        return getter(this.defaultItem, this.textField);\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            anchorAlign: anchorPosition,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute'\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n        });\n        if (!this.filterable) {\n            this.popupRef.popupAnchorViewportLeave.subscribe(() => this.togglePopup(false));\n        }\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    updateState({ dataItem, confirm = false }) {\n        this.dataItem = dataItem;\n        this.text = this.prop(this.textField, this.valuePrimitive)(dataItem);\n        if (confirm) {\n            this._previousDataItem = dataItem;\n        }\n    }\n    clearState() {\n        this.text = undefined;\n        this.dataItem = undefined;\n    }\n    resetSelection(index) {\n        const clear = !isPresent(index);\n        this.selectionService.resetSelection(clear ? [] : [index]);\n        this.selectionService.focused = clear ? this.firstFocusableIndex(0) : index;\n    }\n    onSelectionChange({ dataItem }) {\n        this.updateState({ dataItem });\n        this.selectionChange.emit(dataItem);\n        // reassigning the value label ID as aria-deascibedby forces firefox/nvda, forefox/jaws to read\n        // the new value when the popup is closed and the value is changed with the arrow keys (up/down)\n        this.assignAriaDescribedBy();\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        // Item selection when the popup is open.\n        this.selectionSubscription.add(this.selectionService.onSelect.pipe(filter(_ => this.isOpen), map(this.itemFromEvent.bind(this)))\n            .subscribe(this.onSelectionChange.bind(this)));\n        // Item selection when the popup is closed | clicked | enter, and so on.\n        this.selectionSubscription.add(merge(this.selectionService.onSelect.pipe(filter(_ => !this.isOpen)), this.selectionService.onChange).pipe(map(this.itemFromEvent.bind(this)), tap(_ => this.togglePopup(false)))\n            .subscribe(({ dataItem, value: newValue, newSelection }) => {\n            if (newSelection) {\n                this.onSelectionChange({ dataItem });\n            }\n            const shouldUsePrevious = !isPresent(dataItem) && this._previousDataItem;\n            const shouldUseNewValue = newValue !== this.prop(this.valueField, this.valuePrimitive)(this.value);\n            if (shouldUsePrevious) {\n                this.updateState({ dataItem: this._previousDataItem });\n                this.resetSelection();\n            }\n            else if (shouldUseNewValue) {\n                this.value = this.valuePrimitive ? newValue : dataItem;\n                this._previousDataItem = dataItem;\n                this.emitChange(this.value);\n            }\n            this.clearFilter();\n        }));\n        this.navigationSubscription = merge(this.navigationService.up, this.navigationService.down, this.navigationService.left.pipe(skipWhile(() => this.filterable)), this.navigationService.right.pipe(skipWhile(() => this.filterable)), this.navigationService.home, this.navigationService.end)\n            .pipe(filter((event) => !isNaN(event.index)))\n            .subscribe((event) => this.selectionService.select(event.index));\n        this.openSubscription = this.navigationService.open.subscribe(() => this.togglePopup(true));\n        this.closeSubscription = this.navigationService.close.subscribe(() => {\n            this.togglePopup(false);\n            this.focus();\n        });\n        this.enterSubscription = this.navigationService.enter\n            .pipe(tap((event) => event.originalEvent.preventDefault()))\n            .subscribe(this.handleEnter.bind(this));\n        this.escSubscription = this.navigationService.esc\n            .subscribe(this.handleEscape.bind(this));\n        this.filterBlurredSubscription = this.filterBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.wrapperFocused))))\n            .subscribe(() => {\n            this.wrapperBlurred.emit();\n        });\n        this._zone.runOutsideAngular(() => {\n            this.componentBlurredSubscription =\n                merge(this.wrapperBlurred.pipe(concatMap(() => interval(10).pipe(take(1), takeUntil(this.filterFocused)))), this.navigationService.tab).pipe(tap(event => event instanceof NavigationEvent && this.focus()), filter(() => this.isFocused))\n                    .subscribe(() => this.componentBlur());\n        });\n    }\n    unsubscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.navigationSubscription.unsubscribe();\n        this.openSubscription.unsubscribe();\n        this.closeSubscription.unsubscribe();\n        this.enterSubscription.unsubscribe();\n        this.escSubscription.unsubscribe();\n        this.componentBlurredSubscription.unsubscribe();\n        this.filterBlurredSubscription.unsubscribe();\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n    }\n    itemFromEvent(event) {\n        const index = event.indices[0];\n        let dataItem = this.dataService.itemAt(index);\n        dataItem = isPresent(dataItem) ? dataItem : this.currentOrDefault(index);\n        const value = this.prop(this.valueField, this.valuePrimitive)(dataItem);\n        const newSelection = event.newSelection;\n        return {\n            dataItem,\n            index,\n            newSelection,\n            value\n        };\n    }\n    currentOrDefault(selectedIndex) {\n        const defaultItemIndex = -1;\n        if (isPresent(this.dataItem) && selectedIndex !== defaultItemIndex) {\n            return this.dataItem;\n        }\n        else {\n            return this.defaultItem;\n        }\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.dataService.itemsCount - 1;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index < maxIndex) ? this.firstFocusableIndex(index + 1) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    handleEnter() {\n        if (this.isOpen) {\n            this.selectionService.change(this.selectionService.focused);\n            this.focus();\n        }\n        else {\n            this.togglePopup(true);\n        }\n    }\n    handleEscape() {\n        if (isPresent(this.selectionService.selected[0])) {\n            this.selectionService.change(this.selectionService.selected[0]);\n        }\n        else {\n            this.togglePopup(false);\n            this.clearFilter();\n        }\n        this.focus();\n    }\n    clearFilter() {\n        if (!(this.filterable && this.filterText)) {\n            return;\n        }\n        this.filterText = \"\";\n        this.cdr.markForCheck();\n        this.filterChange.emit(this.filterText);\n    }\n    verifySettings(newValue) {\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (!isDevMode()) {\n            return;\n        }\n        if (this.defaultItem && this.valueField && typeof this.defaultItem !== \"object\") {\n            throw new Error(DropDownListMessages.defaultItem);\n        }\n        if (this.valuePrimitive === true && isPresent(newValue) && typeof newValue === \"object\") {\n            throw new Error(DropDownListMessages.primitive);\n        }\n        if (this.valuePrimitive === false && isPresent(newValue) && typeof newValue !== \"object\") {\n            throw new Error(DropDownListMessages.object);\n        }\n        if (valueOrText) {\n            throw new Error(DropDownListMessages.textAndValue);\n        }\n    }\n    componentBlur() {\n        this.isFocused = false;\n        const valueFrom = this.prop(this.valueField, this.valuePrimitive);\n        const selectionPresent = isPresent(this.selectionService.selected[0]);\n        const valueHasChanged = selectionPresent && valueFrom(this.value) !== valueFrom(this.dataService.itemAt(this.selectionService.selected[0]));\n        if (valueHasChanged ||\n            hasObservers(this.close) ||\n            hasObservers(this.onBlur) ||\n            hasObservers(this.filterChange) ||\n            isUntouched(this.hostElement.nativeElement)) {\n            this._zone.run(() => {\n                if (valueHasChanged) {\n                    this.selectionService.change(this.selectionService.selected[0]);\n                }\n                this.togglePopup(false);\n                this.clearFilter();\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n        else {\n            this.togglePopup(false);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onMouseDown(event) {\n        const tagName = event.target.tagName.toLowerCase();\n        if (tagName !== \"input\") {\n            event.preventDefault();\n        }\n    }\n    onKeyPress(event) {\n        if (event.which === 0 || event.keyCode === Keys.enter) {\n            return;\n        }\n        let character = String.fromCharCode(event.charCode || event.keyCode);\n        if (this.ignoreCase) {\n            character = character.toLowerCase();\n        }\n        if (character === \" \") {\n            event.preventDefault();\n        }\n        this.word += character;\n        this.last = character;\n        this.search();\n    }\n    search() {\n        clearTimeout(this.typingTimeout);\n        if (!this.filterable) {\n            this.typingTimeout = setTimeout(() => { this.word = \"\"; }, this.delay);\n            this.selectNext();\n        }\n    }\n    selectNext() {\n        let data = this.dataService\n            .filter((item) => isPresent(item) && !item.header && !this.disabledItemsService.isItemDisabled(item))\n            .map((item) => {\n            if (this.dataService.grouped) {\n                return { item: item.value, itemIndex: item.offsetIndex };\n            }\n            return { item: item, itemIndex: this.dataService.indexOf(item) };\n        });\n        const isInLoop = sameCharsOnly(this.word, this.last);\n        let dataLength = data.length;\n        let hasSelected = !isNaN(this.selectionService.selected[0]);\n        let startIndex = !hasSelected ? 0 : this.selectionService.selected[0];\n        let text, index, defaultItem;\n        if (this.defaultItem && !this.disabledItemsService.isItemDisabled(this.defaultItem)) {\n            defaultItem = { item: this.defaultItem, itemIndex: -1 };\n            dataLength += 1;\n            startIndex += 1;\n        }\n        startIndex += isInLoop && hasSelected ? 1 : 0;\n        data = shuffleData(data, startIndex, defaultItem);\n        index = 0;\n        for (; index < dataLength; index++) {\n            text = getter(data[index].item, this.textField);\n            const loopMatch = Boolean(isInLoop && matchText(text, this.last, this.ignoreCase));\n            const nextMatch = Boolean(matchText(text, this.word, this.ignoreCase));\n            if (loopMatch || nextMatch) {\n                index = data[index].itemIndex;\n                break;\n            }\n        }\n        if (index !== dataLength) {\n            this.navigate(index);\n        }\n    }\n    emitChange(value) {\n        this.onChangeCallback(value);\n        this.valueChange.emit(value);\n    }\n    navigate(index) {\n        this.selectionService.select(index);\n    }\n    prop(field, usePrimitive) {\n        return (dataItem) => {\n            if (isPresent(dataItem)) {\n                if (usePrimitive) {\n                    return field && isObject(dataItem) ? dataItem[field] : dataItem;\n                }\n                else {\n                    return dataItem[field];\n                }\n            }\n            return null;\n        };\n    }\n    findDataItem({ primitive, valueField, value }) {\n        const result = {\n            dataItem: null,\n            index: -1\n        };\n        const prop = this.prop(valueField, primitive);\n        let comparer;\n        if (this.dataService.grouped) {\n            comparer = (element) => {\n                return prop(element.value) === prop(value);\n            };\n        }\n        else {\n            comparer = (element) => {\n                return prop(element) === prop(value);\n            };\n        }\n        const index = this.dataService.findIndex(comparer);\n        result.dataItem = this.dataService.itemAt(index);\n        result.index = index;\n        return result;\n    }\n    setState() {\n        const value = this.value;\n        const valueField = this.valueField;\n        const textField = this.textField;\n        const primitive = this.valuePrimitive;\n        if (this.defaultItem) {\n            const defaultValue = this.prop(valueField, primitive)(this.defaultItem);\n            const currentValue = this.prop(valueField, primitive)(value);\n            if (!isPresent(value) || (currentValue === defaultValue)) {\n                this.updateState({ dataItem: this.defaultItem, confirm: true });\n                this.resetSelection(-1);\n                if (this.filterable && this.filterText && this.dataService.itemsCount) {\n                    this.selectionService.focused = this.firstFocusableIndex(0);\n                }\n                return;\n            }\n        }\n        const resolved = this.findDataItem({ primitive, valueField, value });\n        // The data and value are of same shape,\n        // for example, value: 'foo', data: ['foo', 'bar']\n        // or value: { value: 1, text: 'foo' }, data: [{ value: 1, text: 'foo' }].\n        const ofSameType = !(primitive && textField);\n        if (resolved.dataItem) {\n            this.updateState({ dataItem: resolved.dataItem, confirm: true });\n            this.resetSelection(resolved.index);\n        }\n        else if (isPresent(value) && ofSameType) {\n            this.updateState({ dataItem: value });\n            this.resetSelection();\n        }\n        else if (this._previousDataItem) {\n            this.updateState({ dataItem: this._previousDataItem });\n            this.resetSelection();\n        }\n        else {\n            this.clearState();\n            this.resetSelection();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleFilter(event) {\n        this.filterChange.emit(event.target.value);\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    setMessages() {\n        this._zone.runOutsideAngular(() => {\n            clearTimeout(this.messagesTimeout);\n            this.messagesTimeout = setTimeout(() => {\n                this.noDataText = this.localization.get('noDataText');\n                this.cdr.detectChanges();\n            });\n        });\n    }\n    assignAriaDescribedBy() {\n        const currentValue = this.wrapper.nativeElement.getAttribute('aria-describedby') || '';\n        const trimmed = currentValue.replace(this.valueLabelId, '').trim();\n        // reset the value label ID to force readers to read the new value\n        this.valueLabelId = guid();\n        // add to the current value - don't replace it\n        const newValue = `${this.valueLabelId} ${trimmed}`.trim();\n        this.renderer.setAttribute(this.wrapper.nativeElement, 'aria-describedby', newValue);\n    }\n}\nDropDownListComponent.decorators = [\n    { type: Component, args: [{\n                exportAs: 'kendoDropDownList',\n                providers: [\n                    DROPDOWNLIST_VALUE_ACCESSOR,\n                    DataService,\n                    SelectionService,\n                    NavigationService,\n                    DisabledItemsService,\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.dropdownlist'\n                    },\n                    {\n                        provide: FilterableDropDownComponentBase, useExisting: forwardRef(() => DropDownListComponent)\n                    },\n                    {\n                        provide: KendoInput, useExisting: forwardRef(() => DropDownListComponent)\n                    }\n                ],\n                selector: 'kendo-dropdownlist',\n                template: `\n        <ng-container kendoDropDownListLocalizedMessages\n            i18n-noDataText=\"kendo.dropdownlist.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n        >\n        </ng-container>\n        <span #wrapper unselectable=\"on\"\n          role=\"listbox\"\n          [id]=\"focusableId\"\n          [ngClass]=\"{\n            'k-dropdown-wrap': true,\n            'k-state-default': !this.disabled,\n            'k-state-disabled': this.disabled\n          }\"\n          [attr.dir]=\"direction\"\n          [attr.readonly]=\"readonly\"\n          [attr.tabindex]=\"widgetTabIndex\"\n          [attr.aria-disabled]=\"disabled\"\n          [attr.aria-readonly]=\"readonly\"\n          aria-haspopup=\"listbox\"\n          [attr.aria-expanded]=\"ariaExpanded\"\n          [attr.aria-owns]=\"ariaOwns\"\n          [attr.aria-activedescendant]=\"ariaActivedescendant\"\n          [attr.aria-label]=\"noDataLabel\"\n          (keydown)=\"keydown($event)\"\n          (keypress)=\"keypress($event)\"\n          (click)=\"click()\"\n          [kendoEventsOutsideAngular]=\"{\n            focus: focusComponent,\n            blur: blurComponent\n            }\"\n          [scope]=\"this\"\n        >\n            <span class=\"k-input\" unselectable=\"on\" [id]=\"valueLabelId\">\n               <ng-template *ngIf=\"valueTemplate\"\n                   [templateContext]=\"{\n                       templateRef: valueTemplate.templateRef,\n                       $implicit: dataItem\n                   }\">\n               </ng-template>\n               <ng-template [ngIf]=\"!valueTemplate\">{{ getText() }}</ng-template>\n           </span>\n           <span class=\"k-select\" unselectable=\"on\">\n               <span\n                    class=\"k-icon\"\n                    unselectable=\"on\"\n                    [ngClass]=\"buttonClasses\"\n                >\n                </span>\n           </span>\n           <ng-template #popupTemplate>\n               <!--filterable-->\n\n               <ng-template [ngIf]=\"filterable\">\n                   <span class=\"k-list-filter\" (click)=\"$event.stopImmediatePropagation()\">\n                       <input\n                           [attr.aria-owns]=\"ariaOwns\"\n                           [attr.aria-activedescendant]=\"ariaActivedescendant\"\n                           [attr.aria-label]=\"noDataLabel\"\n                           tabindex=\"-1\"\n                           [filterInput]=\"isFocused && !touchEnabled\"\n                           [dir]=\"direction\"\n                           [(ngModel)]=\"filterText\"\n                           class=\"k-textbox\"\n                           (keydown)=\"keydown($event)\"\n                           (input)=\"handleFilter($event)\"\n                           (focus)=\"onFilterFocus()\"\n                           (blur)=\"blurFilterInput()\" />\n                       <span class=\"k-icon k-i-search\" unselectable=\"on\"></span>\n                   </span>\n               </ng-template>\n               <!--default item-->\n               <ng-template [ngIf]=\"defaultItem && !itemTemplate\">\n                   <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-state-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                       {{ getDefaultItemText() }}\n                   </div>\n               </ng-template>\n               <ng-template [ngIf]=\"defaultItem && itemTemplate\">\n                   <div class=\"k-list-optionlabel\" [ngClass]=\"{ 'k-state-disabled': isDisabledDefaultItem }\" kendoDropDownsSelectable [index]=\"-1\">\n                       <ng-template\n                           [templateContext]=\"{\n                               templateRef: itemTemplate.templateRef,\n                               $implicit: defaultItem\n                           }\">\n                       </ng-template>\n                   </div>\n               </ng-template>\n               <!--header template-->\n               <ng-template *ngIf=\"headerTemplate\"\n                   [templateContext]=\"{\n                       templateRef: headerTemplate.templateRef\n                   }\">\n               </ng-template>\n               <!--list-->\n               <kendo-list\n                   #optionsList\n                   [id]=\"listBoxId\"\n                   [optionPrefix]=\"optionPrefix\"\n                   [data]=\"data\"\n                   [textField]=\"textField\"\n                   [valueField]=\"valueField\"\n                   [template]=\"itemTemplate\"\n                   [groupTemplate]=\"groupTemplate\"\n                   [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                   [height]=\"listHeight\"\n                   [show]=\"isOpen\"\n                   [virtual]=\"virtual\"\n                   (pageChange)=\"pageChange($event)\"\n                   >\n               </kendo-list>\n               <!--no-data template-->\n               <div class=\"k-nodata\" *ngIf=\"data.length === 0\">\n                   <ng-template [ngIf]=\"noDataTemplate\"\n                       [templateContext]=\"{\n                           templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                       }\">\n                   </ng-template>\n                   <ng-template [ngIf]=\"!noDataTemplate\">\n                       <div>{{ noDataText }}</div>\n                   </ng-template>\n               </div>\n               <!--footer template-->\n               <ng-template *ngIf=\"footerTemplate\"\n                   [templateContext]=\"{\n                       templateRef: footerTemplate.templateRef\n                   }\">\n               </ng-template>\n            </ng-template>\n        </span>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n            },] },\n];\n/** @nocollapse */\nDropDownListComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PopupService },\n    { type: SelectionService },\n    { type: NavigationService },\n    { type: DisabledItemsService },\n    { type: DataService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [TOUCH_ENABLED,] }] }\n];\nDropDownListComponent.propDecorators = {\n    focusableId: [{ type: Input }],\n    iconClass: [{ type: Input }],\n    loading: [{ type: Input }],\n    data: [{ type: Input }],\n    value: [{ type: Input }],\n    textField: [{ type: Input }],\n    valueField: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    listHeight: [{ type: Input }],\n    defaultItem: [{ type: Input }],\n    disabled: [{ type: Input }],\n    itemDisabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    filterable: [{ type: Input }],\n    virtual: [{ type: Input }],\n    ignoreCase: [{ type: Input }],\n    delay: [{ type: Input }],\n    valuePrimitive: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input, args: [\"tabIndex\",] }],\n    valueChange: [{ type: Output }],\n    filterChange: [{ type: Output }],\n    selectionChange: [{ type: Output }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    itemTemplate: [{ type: ContentChild, args: [ItemTemplateDirective,] }],\n    groupTemplate: [{ type: ContentChild, args: [GroupTemplateDirective,] }],\n    fixedGroupTemplate: [{ type: ContentChild, args: [FixedGroupTemplateDirective,] }],\n    valueTemplate: [{ type: ContentChild, args: [ValueTemplateDirective,] }],\n    headerTemplate: [{ type: ContentChild, args: [HeaderTemplateDirective,] }],\n    footerTemplate: [{ type: ContentChild, args: [FooterTemplateDirective,] }],\n    noDataTemplate: [{ type: ContentChild, args: [NoDataTemplateDirective,] }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper', { static: true },] }],\n    optionsList: [{ type: ViewChild, args: ['optionsList',] }],\n    widgetClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-dropdown',] }, { type: HostBinding, args: ['class.k-header',] }],\n    dir: [{ type: HostBinding, args: ['attr.dir',] }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the content of the custom list item in the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-customizing-the-item-content)).\n * The template context is set to the current component.\n * To get a reference to the current text that is typed by the\n * user, use the `let-customItem` directive.\n *\n * > The `CustomItemTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\" [allowCustom]=\"true\">\n *    <ng-template kendoMultiSelectCustomItemTemplate let-customItem>\n *      <span>New Item: {{customItem}}</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n *\n */\nclass CustomItemTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCustomItemTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoMultiSelectCustomItemTemplate]'\n            },] },\n];\n/** @nocollapse */\nCustomItemTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the selected tag value of the MultiSelect\n * ([see example]({% slug templates_multiselect %}#toc-tag-template)).\n * The template context is set to the current component.\n * To get a reference to the current data item, use the `let-dataItem` directive.\n *\n * > The `TagTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"items\">\n *    <ng-template kendoMultiSelectTagTemplate let-dataItem>\n *      <span>{{dataItem}} option</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass TagTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nTagTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoMultiSelectTagTemplate]'\n            },] },\n];\n/** @nocollapse */\nTagTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Renders the grouped tag values in the MultiSelect\n * ([see example]({% slug summarytagmode_multiselect %})).\n * The template context is set to the current component.\n * To get a reference to the current grouped\n * data items collection, use the `let-dataItems` directive.\n *\n * > The `GroupTagTemplate` directive can only be used with the MultiSelect component.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"items\">\n *    <ng-template kendoMultiSelectGroupTagTemplate let-dataItems>\n *      <span>{{dataItems.length}} item(s) selected</span>\n *    </ng-template>\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public items: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass GroupTagTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupTagTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoMultiSelectGroupTagTemplate]'\n            },] },\n];\n/** @nocollapse */\nGroupTagTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef }\n];\n\n/**\n * Arguments for the `removeTag` event. The `removeTag` event fires when a tag is about\n * to the removed. If you cancel the event, the removal is prevented.\n */\nclass RemoveTagEvent extends PreventableEvent {\n    /**\n     * Constructs the event arguments for the `remove` event.\n     * @param dataItem - The data item or an array of data items that will be removed.\n     */\n    constructor(dataItem) {\n        super();\n        this.dataItem = dataItem;\n    }\n}\n\n/* tslint:disable:max-line-length */\nconst MULTISELECT_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line:no-use-before-declare\n    useExisting: forwardRef(() => MultiSelectComponent)\n};\n/**\n * Represents the [Kendo UI MultiSelect component for Angular]({% slug overview_multiselect %}).\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-multiselect [data]=\"listItems\">\n *  </kendo-multiselect>\n * `\n * })\n * class AppComponent {\n *   public listItems: Array<string> = [\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\"];\n * }\n * ```\n */\nclass MultiSelectComponent {\n    constructor(localization, popupService, dataService, selectionService, navigationService, disabledItemsService, cdr, differs, renderer, hostElement, _zone, touchEnabled) {\n        this.localization = localization;\n        this.popupService = popupService;\n        this.dataService = dataService;\n        this.selectionService = selectionService;\n        this.navigationService = navigationService;\n        this.disabledItemsService = disabledItemsService;\n        this.cdr = cdr;\n        this.differs = differs;\n        this.renderer = renderer;\n        this.hostElement = hostElement;\n        this._zone = _zone;\n        this.touchEnabled = touchEnabled;\n        this.listBoxId = guid();\n        this.tagListId = guid();\n        this.tagPrefix = \"tag-\" + guid();\n        this.optionPrefix = \"option-\" + guid();\n        this.focusedTagIndex = undefined;\n        /**\n         * @hidden\n         */\n        this.focusableId = `k-${guid()}`;\n        /**\n         * Determines whether to close the options list of the MultiSelect after the item selection is finished\n         * ([see example]({% slug openstate_multiselect %}#toc-keeping-the-options-list-open-while-on-focus)).\n         * @default true\n         */\n        this.autoClose = true;\n        /**\n         * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n         */\n        this.tabindex = 0;\n        /**\n         * Sets the disabled state of the component.\n         */\n        this.disabled = false;\n        /**\n         * Sets the read-only state of the component.\n         */\n        this.readonly = false;\n        /**\n         * Enables the [filtering]({% slug filtering_multiselect %}) functionality of the MultiSelect.\n         */\n        this.filterable = false;\n        /**\n         * Sets the height of the suggestions list. By default, `listHeight` is 200px.\n         *\n         * > The `listHeight` property affects only the list of suggestions and not the whole popup container.\n         * > To set the height of the popup container, use `popupSettings.height`.\n         */\n        this.listHeight = 200;\n        /**\n         * If set to `true`, renders a button on hovering over the component.\n         * Clicking this button resets the value of the component to an empty array and triggers the `change` event.\n         */\n        this.clearButton = true;\n        /**\n         * A user-defined callback function which receives an array of selected data items and maps them to an array of tags.\n         *\n         * @param { Any[] } dataItems - The selected data items from the list.\n         * @returns { Any[] } - The tags that will be rendered by the component.\n         */\n        this.tagMapper = (tags) => tags || [];\n        /**\n         * Specifies whether the MultiSelect allows user-defined values that are not present in the dataset\n         * ([more information and examples]({% slug custom_values_multiselect %})).\n         * Defaults to `false`.\n         */\n        this.allowCustom = false;\n        /**\n         * A user-defined callback function which returns normalized custom values.\n         * Typically used when the data items are different from type `string`.\n         *\n         * @param { Any } value - The custom value that is defined by the user.\n         * @returns { Any }\n         *\n         * @example\n         * ```ts\n         * import { map } from 'rxjs/operators';\n         *\n         * _@Component({\n         * selector: 'my-app',\n         * template: `\n         *   <kendo-multiselect\n         *       [allowCustom]=\"true\"\n         *       [data]=\"listItems\"\n         *       [textField]=\"'text'\"\n         *       [valueField]=\"'value'\"\n         *       [valueNormalizer]=\"valueNormalizer\"\n         *       (valueChange)=\"onValueChange($event)\"\n         *   >\n         *   </kendo-multiselect>\n         * `\n         * })\n         *\n         * class AppComponent {\n         *   public listItems: Array<{ text: string, value: number }> = [\n         *       { text: \"Small\", value: 1 },\n         *       { text: \"Medium\", value: 2 },\n         *       { text: \"Large\", value: 3 }\n         *   ];\n         *\n         *   public onValueChange(value) {\n         *       console.log(\"valueChange : \", value);\n         *   }\n         *\n         *   public valueNormalizer = (text$: Observable<string>) => text$.pipe(map((text: string) => {\n         *      return {\n         *         value: Math.floor(Math.random() * (1000 - 100) + 1000), //generate unique valueField\n         *         text: text };\n         *   }));\n         *\n         * }\n         * ```\n         */\n        this.valueNormalizer = (text) => text.pipe(map((userInput) => {\n            const comparer = (item) => typeof item === 'string' && userInput.toLowerCase() === item.toLowerCase();\n            const matchingValue = this.value.find(comparer);\n            if (matchingValue) {\n                return matchingValue;\n            }\n            const matchingItem = this.dataService.find(comparer);\n            return matchingItem ? matchingItem : userInput;\n        }));\n        /**\n         * Fires each time the user types in the input field.\n         * You can filter the source based on the passed filtration value.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires each time the value is changed&mdash;\n         * when the component is blurred or the value is cleared through the **Clear** button\n         * ([see example]({% slug overview_multiselect %}#toc-events)).\n         * When the value of the component is programmatically changed to `ngModel` or `formControl`\n         * through its API or form binding, the `valueChange` event is not triggered because it\n         * might cause a mix-up with the built-in `valueChange` mechanisms of the `ngModel` or `formControl` bindings.\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires each time the popup is about to open\n         * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain closed.\n         */\n        this.open = new EventEmitter();\n        /**\n         * Fires each time the popup is about to close\n         * ([see example]({% slug openstate_multiselect %}#toc-preventing-opening-and-closing)).\n         * This event is preventable. If you cancel it, the popup will remain open.\n         */\n        this.close = new EventEmitter();\n        /**\n         * Fires each time the user focuses the MultiSelect.\n         */\n        this.onFocus = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time the MultiSelect gets blurred.\n         */\n        this.onBlur = new EventEmitter(); //tslint:disable-line:no-output-rename\n        /**\n         * Fires each time a tag is about to be removed.\n         * This event is preventable. If you cancel it, the tag will not be removed.\n         */\n        this.removeTag = new EventEmitter();\n        this.widgetClasses = true;\n        this.onChangeCallback = (_) => { };\n        this.onTouchedCallback = (_) => { };\n        this._placeholder = '';\n        this._open = false;\n        this._value = [];\n        this._popupSettings = { animate: true };\n        this._isFocused = false;\n        this.selectedDataItems = [];\n        this.customValueSubject = new Subject();\n        this.observableSubscriptions = new Subscription();\n        this.popupMouseDownHandler = this.onMouseDown.bind(this);\n        this.data = [];\n        this.direction = this.localization.rtl ? 'rtl' : 'ltr';\n        this.subscribeEvents();\n    }\n    /**\n     * Focuses the MultiSelect.\n     */\n    focus() {\n        if (!this.disabled) {\n            this.searchbar.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onSearchBarFocus() {\n        if (!this.isFocused) {\n            this.isFocused = true;\n            if (hasObservers(this.onFocus)) {\n                this._zone.run(() => {\n                    this.onFocus.emit();\n                });\n            }\n        }\n    }\n    /**\n     * Blurs the MultiSelect.\n     */\n    blur() {\n        if (!this.disabled) {\n            this.searchbar.blur();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onSearchBarBlur() {\n        if (!this.isFocused) {\n            return;\n        }\n        this.isFocused = false;\n        if (hasObservers(this.onBlur) ||\n            hasObservers(this.filterChange) ||\n            hasObservers(this.close) ||\n            isUntouched(this.hostElement.nativeElement)) {\n            this._zone.run(() => {\n                if (!this.allowCustom) {\n                    this.clearFilter();\n                }\n                this.closePopup();\n                this.onBlur.emit();\n                this.onTouchedCallback();\n            });\n        }\n        else {\n            if (!this.allowCustom) {\n                this.clearFilter();\n            }\n            this.closePopup();\n        }\n    }\n    /**\n     * @hidden\n     */\n    wrapperMousedown(event) {\n        const inputElement = this.searchbar.input.nativeElement;\n        if (event.button === 0) {\n            if (this.isFocused && this.isOpen && event.target === inputElement) {\n                return;\n            }\n            if (!this.touchEnabled || (this.touchEnabled && event.target.tagName !== 'SPAN')) {\n                this.searchbar.focus();\n            }\n            this.togglePopup(!this.isOpen);\n            event.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onMouseDown(event) {\n        event.preventDefault();\n    }\n    /**\n     * @hidden\n     */\n    onResize() {\n        if (this._open) {\n            const popupWrapper = this.popupRef.popupElement;\n            const { min, max } = this.width;\n            popupWrapper.style.minWidth = min;\n            popupWrapper.style.width = max;\n        }\n    }\n    get appendTo() {\n        const { appendTo } = this.popupSettings;\n        if (!appendTo || appendTo === 'root') {\n            return undefined;\n        }\n        return appendTo === 'component' ? this.container : appendTo;\n    }\n    /**\n     * Sets the data of the MultiSelect.\n     *\n     * > The data has to be provided in an array-like list of items.\n     */\n    set data(data) {\n        this.dataService.data = data || [];\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        this.setState(this.value);\n    }\n    get data() {\n        const virtual = this.virtual;\n        if (virtual) {\n            const start = virtual.skip || 0;\n            const end = start + virtual.pageSize;\n            //Use length instead of itemsCount because of grouping\n            virtual.total = this.dataService.data.length;\n            return this.dataService.data.slice(start, end);\n        }\n        return this.dataService.data;\n    }\n    /**\n     * Sets the value of the MultiSelect. It can be either of the primitive (string, numbers) or of the complex (objects) type.\n     * To define the type, use the `valuePrimitive` option.\n     *\n     * > All selected values which are not present in the source are ignored.\n     */\n    set value(values) {\n        this._value = values ? values : [];\n        if (!this.differ && this.value) {\n            this.differ = this.differs.find(this.value).create();\n        }\n    }\n    get value() {\n        return this._value;\n    }\n    /**\n     * @hidden\n     */\n    set tabIndex(tabIndex) {\n        this.tabindex = tabIndex;\n    }\n    get tabIndex() {\n        return this.tabindex;\n    }\n    /**\n     * The hint which is displayed when the component is empty.\n     * When the values are selected, it disappears.\n     */\n    set placeholder(text) {\n        this._placeholder = text || '';\n    }\n    get placeholder() {\n        return this.selectedDataItems.length ? '' : this._placeholder;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data item in the component\n     * ([see examples]({% slug disableditems_multiselect %})). Determines whether the item will be disabled.\n     */\n    set itemDisabled(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`itemDisabled must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this.disabledItemsService.itemDisabled = fn;\n    }\n    /**\n     * Enables the [virtualization]({% slug virtualization_multiselect %}) functionality.\n     */\n    set virtual(settings) {\n        this._virtualSettings = normalizeVirtualizationSettings(settings);\n    }\n    get virtual() {\n        return this._virtualSettings;\n    }\n    /**\n     * Configures the popup of the MultiSelect.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `width: Number | String`&mdash;Sets the width of the popup container. By default, the width of the host element is used. If set to `auto`, the component automatically adjusts the width of the popup and no item labels are wrapped. The `auto` mode is not supported when virtual scrolling is enabled.\n     * - `height: Number`&mdash;Sets the height of the popup container.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     * - `appendTo: \"root\" | \"component\" | ViewContainerRef`&mdash;Specifies the component to which the popup will be appended.\n     */\n    set popupSettings(settings) {\n        this._popupSettings = Object.assign({ animate: true }, settings);\n    }\n    get popupSettings() {\n        return this._popupSettings;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get disabledClass() {\n        return this.disabled;\n    }\n    get listContainerClasses() {\n        const containerClasses = ['k-list-container', 'k-reset'];\n        if (this.popupSettings.popupClass) {\n            containerClasses.push(this.popupSettings.popupClass);\n        }\n        return containerClasses;\n    }\n    get width() {\n        let wrapperOffsetWidth = 0;\n        if (isDocumentAvailable()) {\n            wrapperOffsetWidth = this.wrapper.nativeElement.offsetWidth;\n        }\n        const width = this.popupSettings.width || wrapperOffsetWidth;\n        const minWidth = isNaN(wrapperOffsetWidth) ? wrapperOffsetWidth : `${wrapperOffsetWidth}px`;\n        const maxWidth = isNaN(width) ? width : `${width}px`;\n        return { min: minWidth, max: maxWidth };\n    }\n    get height() {\n        const popupHeight = this.popupSettings.height;\n        return isPresent(popupHeight) ? `${popupHeight}px` : 'auto';\n    }\n    get activeDescendant() {\n        const focusedTagIndex = this.focusedTagIndex;\n        const focusedListIndex = this.selectionService.focused;\n        let prefix;\n        let item;\n        if (isPresent(focusedTagIndex) && !this.isOpen) {\n            item = this.tags[focusedTagIndex];\n            prefix = this.tagPrefix;\n        }\n        else if (isPresent(focusedListIndex) && focusedListIndex !== -1 && this.isOpen) {\n            item = this.dataService.itemAt(focusedListIndex);\n            prefix = this.optionPrefix;\n        }\n        else {\n            return null;\n        }\n        return prefix + \"-\" + this.prop(this.valueField, this.valuePrimitive)(item);\n    }\n    get noDataLabel() {\n        if (this.dataService.itemsCount === 0) {\n            return this.noDataText;\n        }\n    }\n    get clearTitle() {\n        return this.localization.get('clearTitle');\n    }\n    /**\n     * @hidden\n     */\n    verifySettings() {\n        const valueOrText = !isPresent(this.valueField) !== !isPresent(this.textField);\n        if (!isDevMode() || this.value.length === 0) {\n            return;\n        }\n        if (!isArray(this.value)) {\n            throw new Error(MultiselectMessages.array);\n        }\n        if (this.valuePrimitive === true && isObjectArray(this.value)) {\n            throw new Error(MultiselectMessages.primitive);\n        }\n        if (this.valuePrimitive === false && !isObjectArray(this.value)) {\n            throw new Error(MultiselectMessages.object);\n        }\n        if (valueOrText) {\n            throw new Error(MultiselectMessages.textAndValue);\n        }\n    }\n    /**\n     * @hidden\n     */\n    change(event) {\n        const isCustomItem = (isPresent(event.added) || isPresent(event.removed)) && (event.added === -1 || event.removed === -1);\n        if (isCustomItem) {\n            this.addCustomValue(this.text);\n            return; // The change is emited asynchronosly.\n        }\n        // Existing items.\n        if (isPresent(event.added)) {\n            const dataItem = this.dataService.itemAt(event.added);\n            const newItem = (this.valuePrimitive && isPresent(dataItem) && isPresent(dataItem[this.valueField])) ? dataItem[this.valueField] : dataItem;\n            this.value = [...this.value, newItem];\n            this.cdr.markForCheck();\n        }\n        if (isPresent(event.removed)) {\n            const dataItem = this.dataService.itemAt(event.removed);\n            const prop = this.prop(this.valueField, this.valuePrimitive);\n            const filter$$1 = (item) => prop(item) !== prop(dataItem);\n            this.value = this.value.filter(filter$$1);\n            this.selectedDataItems = this.selectedDataItems.filter(filter$$1);\n            this.tags = this.tagMapper(this.selectedDataItems.slice());\n            this.cdr.detectChanges();\n        }\n        this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n    setState(value) {\n        const objectArray = isObjectArray(value);\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const selection = selectedIndices(this.value, data, this.valueField);\n        this.selectionService.resetSelection(selection);\n        if (this.isOpen && this.selectionService.focused === undefined) {\n            this.selectionService.focused = this.dataService.itemsCount ? this.firstFocusableIndex(0) : this.allowCustom ? -1 : undefined;\n        }\n        if (!this.text) {\n            if (!(isPresent(value) && value.length)) {\n                this.selectedDataItems = [];\n            }\n            if (this.valuePrimitive && !this.valueField) {\n                this.selectedDataItems = value.slice();\n            }\n            if (objectArray || this.valuePrimitive && this.valueField) {\n                this.selectedDataItems = resolveAllValues(value, data, this.valueField);\n            }\n            if (this.selectedDataItems.length < value.length) {\n                const prop = this.prop(this.valueField, this.valuePrimitive);\n                const dataItems = value\n                    .map(current => {\n                    const dataItem = this.selectedDataItems.find(item => prop(item) === prop(current));\n                    return isPresent(dataItem) ? dataItem : this.resolveDataItemFromTags(current);\n                })\n                    .filter(dataItem => isPresent(dataItem));\n                this.selectedDataItems = dataItems;\n            }\n        }\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     */\n    handleFilter(text) {\n        this.text = text;\n        if (text && !this.isOpen) {\n            this.openPopup();\n        }\n        if (this.filterable) {\n            this.filterChange.emit(text);\n        }\n        else {\n            this.searchTextAndFocus(text);\n        }\n        this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n    pageChange(event) {\n        const virtual = this.virtual;\n        virtual.skip = event.skip;\n    }\n    /**\n     * @hidden\n     */\n    clearFilter() {\n        if (this.filterable && this.text) {\n            this.filterChange.emit(\"\");\n        }\n        this.text = \"\";\n        /* Clearing the value from the input as the setInputSize calculation will be incorrect otherwise.\n         Calling cdr.detectChanges to clear the input value as a result of property binding\n         causes JAWS to read outdated tag values in IE upon tag selection for some reason. */\n        this.searchbar.input.nativeElement.value = \"\";\n        this.searchbar.setInputSize();\n    }\n    /**\n     * @hidden\n     */\n    handleNavigate(event) {\n        const navigateInput = this.text && event.keyCode !== Keys.down && event.keyCode !== Keys.up;\n        const selectValue = this.text && event.keyCode === Keys.enter || event.keyCode === Keys.esc;\n        const deleteTag = !this.text && event.keyCode === Keys.backspace && this.tags.length > 0;\n        if (deleteTag) {\n            this.handleBackspace();\n            return;\n        }\n        if (this.disabled || navigateInput && !selectValue) {\n            return;\n        }\n        const eventData = event;\n        const focused = isNaN(this.selectionService.focused) ? -1 : this.selectionService.focused;\n        const action = this.navigationService.process({\n            current: focused,\n            max: this.dataService.itemsCount - 1,\n            min: this.allowCustom && this.text ? -1 : 0,\n            open: this.isOpen,\n            originalEvent: eventData\n        });\n        if (action !== NavigationAction.Undefined &&\n            ((action === NavigationAction.Enter && this.isOpen) || action !== NavigationAction.Enter)) {\n            event.preventDefault();\n        }\n    }\n    /**\n     * @hidden\n     */\n    handleRemoveTag(tagData) {\n        const eventArgs = new RemoveTagEvent(tagData);\n        if (this.disabled || this.readonly) {\n            return;\n        }\n        this.focus();\n        this.removeTag.emit(eventArgs);\n        if (eventArgs.isDefaultPrevented()) {\n            return;\n        }\n        if (tagData instanceof Array) {\n            this.removeGroupTag(tagData);\n        }\n        else {\n            this.removeSingleTag(tagData);\n        }\n        this.cdr.detectChanges();\n    }\n    /**\n     * @hidden\n     */\n    clearAll(event) {\n        event.stopImmediatePropagation();\n        event.preventDefault();\n        this.focus();\n        this.clearFilter();\n        this.reset();\n        this.emitValueChange();\n    }\n    /**\n     * @hidden\n     */\n    addCustomValue(text) {\n        this.customValueSubject.next(text);\n    }\n    ngAfterContentChecked() {\n        this.verifySettings();\n    }\n    ngDoCheck() {\n        if (this.differ) {\n            const valueChanges = this.differ.diff(this.value);\n            if (valueChanges && !this.valueChangeDetected) {\n                this.selectedDataItems = this.getSelectedDataItems(valueChanges);\n                this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n                if (!(this.tags && this.dataService.data)) {\n                    return;\n                }\n                const isValueCustom = (value) => this.dataService.indexOf(value) === -1;\n                const isValueSelected = (value) => this.selectionService.isSelected(this.dataService.indexOf(value));\n                const reselectionRequired = this.selectedDataItems.some(value => !(isValueCustom(value) || isValueSelected(value)));\n                if (reselectionRequired) {\n                    this.setState(this.value);\n                }\n            }\n        }\n        this.valueChangeDetected = false;\n    }\n    ngOnInit() {\n        this.renderer.removeAttribute(this.hostElement.nativeElement, \"tabindex\");\n        this.createCustomValueStream();\n        this.localizationChangeSubscription = this.localization\n            .changes.subscribe(({ rtl }) => {\n            this.direction = rtl ? 'rtl' : 'ltr';\n            this.setMessages();\n        });\n        this.setMessages();\n    }\n    ngOnChanges(changes) {\n        const virtual = this.virtual;\n        const requestInitialData = virtual && changes.data && changes.data.isFirstChange();\n        if (requestInitialData) {\n            this.pageChange({ skip: 0, take: virtual.pageSize });\n        }\n        if (this.valuePrimitive === undefined) {\n            this.valuePrimitive = !this.valueField;\n        }\n        if (isChanged(\"valueNormalizer\", changes)) {\n            this.createCustomValueStream();\n        }\n        const STATE_PROPS = /(data|textField|valueField|valuePrimitive|value)/g;\n        if (changes.hasOwnProperty(\"value\")) {\n            this.valueChangeDetected = true;\n        }\n        if (STATE_PROPS.test(Object.keys(changes).join())) {\n            this.setState(this.value);\n        }\n    }\n    ngAfterViewInit() {\n        this.searchbar.setInputSize();\n    }\n    ngOnDestroy() {\n        this._toggle(false);\n        this.unsubscribeEvents();\n        clearTimeout(this.messagesTimeout);\n        if (this.localizationChangeSubscription) {\n            this.localizationChangeSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Toggles the visibility of the popup\n     * ([see example]({% slug openstate_multiselect %}#toc-setting-the-initially-opened-component)).\n     * If you use the `toggle` method to open or close the popup, the respective `open` and `close` events will not be fired.\n     *\n     * @param open - The state of the popup.\n     */\n    toggle(open) {\n        // The Promise is required for opening the popup on load.\n        // Otherwise, the \"Expression has changed...\" type error will be thrown.\n        Promise.resolve(null).then(() => {\n            const shouldOpen = isPresent(open) ? open : !this._open;\n            this._toggle(shouldOpen);\n            this.cdr.markForCheck();\n        });\n    }\n    /**\n     * Returns the current open state of the popup.\n     */\n    get isOpen() {\n        return this._open;\n    }\n    /**\n     * Resets the value of the MultiSelect.\n     * If you use the `reset` method to clear the value of the component,\n     * the model will not update automatically and the `selectionChange` and `valueChange` events will not be fired.\n     */\n    reset() {\n        this.text = \"\";\n        this.value = [];\n        this.selectedDataItems = [];\n        this.setState([]);\n        this.cdr.markForCheck();\n    }\n    // NG MODEL BINDINGS\n    /**\n     * @hidden\n     */\n    writeValue(value) {\n        this.value = value || [];\n        this.setState(this.value);\n        this.verifySettings();\n    }\n    /**\n     * @hidden\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @hidden\n     */\n    onTagMapperChange() {\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.cdr.markForCheck();\n    }\n    prop(field, usePrimitive) {\n        return (dataItem) => {\n            if (isPresent(dataItem)) {\n                if (usePrimitive) {\n                    return field && isObject(dataItem) ? dataItem[field] : dataItem;\n                }\n                else {\n                    return dataItem[field];\n                }\n            }\n            return null;\n        };\n    }\n    set isFocused(isFocused) {\n        this.renderer[isFocused ? 'addClass' : 'removeClass'](this.hostElement.nativeElement, 'k-state-focused');\n        this._isFocused = isFocused;\n    }\n    get isFocused() {\n        return this._isFocused;\n    }\n    subscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        const isOpen = () => this.isOpen;\n        const isClosed = () => !this.isOpen;\n        const isTagFocused = () => !this.isOpen && this.focusedTagIndex !== undefined;\n        [\n            this.selectionService.onChange.subscribe(this.handleItemChange.bind(this)),\n            this.navigationService.esc.subscribe(this.closePopup.bind(this)),\n            this.navigationService.enter.pipe(filter(isOpen)).subscribe(this.handleEnter.bind(this)),\n            this.navigationService.open.subscribe(this.openPopup.bind(this)),\n            this.navigationService.close.subscribe(this.handleClose.bind(this)),\n            this.navigationService.up.pipe(filter(isOpen)).subscribe((event) => this.handleUp(event.index)),\n            this.navigationService.home.pipe(filter(() => isClosed)).subscribe(this.handleHome.bind(this)),\n            this.navigationService.end.pipe(filter(() => isClosed)).subscribe(this.handleEnd.bind(this)),\n            this.navigationService.backspace.pipe(filter(isTagFocused)).subscribe(this.handleBackspace.bind(this)),\n            this.navigationService.delete.pipe(filter(isTagFocused)).subscribe(this.handleDelete.bind(this)),\n            this.navigationService.left.subscribe(this.direction === 'rtl' ? this.handleRightKey.bind(this) : this.handleLeftKey.bind(this)),\n            this.navigationService.right.subscribe(this.direction === 'rtl' ? this.handleLeftKey.bind(this) : this.handleRightKey.bind(this)),\n            this.navigationService.down.subscribe((event) => this.handleDownKey(event.index))\n        ].forEach(s => this.observableSubscriptions.add(s));\n    }\n    unsubscribeEvents() {\n        if (!isDocumentAvailable()) {\n            return;\n        }\n        this.observableSubscriptions.unsubscribe();\n        if (this.customValueSubscription) {\n            this.customValueSubscription.unsubscribe();\n        }\n    }\n    removeGroupTag(dataItems) {\n        const prop = this.prop(this.valueField, this.valuePrimitive);\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const dataItemValues = new Set(dataItems.map(item => prop(item)));\n        this.value = this.value.filter(value => !dataItemValues.has(prop(value)));\n        this.selectedDataItems = this.selectedDataItems.filter(value => !dataItemValues.has(prop(value)));\n        const selection = selectedIndices(this.value, data, this.valueField);\n        this.selectionService.resetSelection(selection);\n        this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n        this.cdr.markForCheck();\n        this.emitValueChange();\n    }\n    removeSingleTag(dataItem) {\n        const prop = this.prop(this.valueField, this.valuePrimitive);\n        let data = this.dataService.data;\n        if (this.dataService.grouped) {\n            data = data.filter(item => !item.header).map(item => item.value);\n        }\n        const index = selectedIndices([dataItem], data, this.valueField)[0];\n        if (isNumber(index)) {\n            this.selectionService.unselect(index);\n            this.togglePopup(false);\n        }\n        else { // the deleted item is not present in the source\n            const filter$$1 = item => prop(item) !== prop(dataItem);\n            this.value = this.value.filter(filter$$1);\n            this.selectedDataItems = this.selectedDataItems.filter(filter$$1);\n            this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n            this.cdr.markForCheck();\n            this.emitValueChange();\n        }\n    }\n    createCustomValueStream() {\n        if (this.customValueSubscription) {\n            this.customValueSubscription.unsubscribe();\n        }\n        this.customValueSubscription = this.customValueSubject.pipe(tap(() => {\n            this.loading = true;\n            this.disabled = true;\n            this.cdr.detectChanges();\n        }), this.valueNormalizer, catchError(() => {\n            this.loading = false;\n            this.disabled = false;\n            this.clearFilter();\n            if (this.autoClose) {\n                this.togglePopup(false);\n                this.nextTick(() => {\n                    this.searchbar.focus();\n                });\n            }\n            this.createCustomValueStream();\n            return of(null);\n        }))\n            .subscribe((normalizedValue) => {\n            this.loading = false;\n            this.disabled = false;\n            this.clearFilter();\n            if (isPresent(normalizedValue)) { //if valueNormalizer returns `null` or `undefined` custom value is discarded\n                const newValue = this.valuePrimitive ? getter(normalizedValue, this.valueField) : normalizedValue;\n                const itemIndex = this.dataService.indexOf(newValue);\n                const customItem = itemIndex === -1;\n                if (this.value.indexOf(newValue) === -1) {\n                    if (!customItem) {\n                        this.selectionService.add(itemIndex);\n                    }\n                    else {\n                        this.value = [...this.value, newValue];\n                    }\n                    this.selectedDataItems = [...this.selectedDataItems, normalizedValue];\n                }\n                else {\n                    if (!customItem && this.selectionService.isSelected(itemIndex)) {\n                        this.selectionService.unselect(itemIndex);\n                    }\n                    else {\n                        this.value.splice(this.value.indexOf(newValue), 1);\n                        this.selectedDataItems = this.selectedDataItems.filter(item => getter(item, this.valueField) !== newValue);\n                    }\n                }\n                this.tags = this.tagMapper(this.selectedDataItems.slice(0));\n                this.emitValueChange();\n            }\n            if (this.autoClose) {\n                this.togglePopup(false);\n                this.nextTick(() => {\n                    this.searchbar.focus();\n                });\n            }\n        });\n    }\n    handleItemChange(event) {\n        this.change(event);\n        if (this.autoClose) {\n            this.togglePopup(false);\n        }\n        if (isPresent(event.added) && event.added !== -1) {\n            this.clearFilter();\n        }\n    }\n    handleEnter(event) {\n        const service = this.selectionService;\n        const focusedIndex = this.selectionService.focused;\n        if (this.isOpen) {\n            event.originalEvent.preventDefault();\n        }\n        if (focusedIndex === -1) {\n            if (this.allowCustom && this.text) {\n                this.addCustomValue(this.text);\n            }\n            return; // Clear filter & close are done at customValueSubscription due to race conditions.\n        }\n        if (service.isSelected(focusedIndex)) {\n            service.unselect(focusedIndex);\n        }\n        else {\n            service.add(focusedIndex);\n        }\n        this.clearFilter();\n        if (this.autoClose) {\n            this.togglePopup(false);\n        }\n    }\n    handleClose() {\n        this.closePopup();\n        this.searchbar.focus();\n    }\n    handleEnd() {\n        this.focusedTagIndex = this.tags.length - 1;\n    }\n    handleHome() {\n        this.focusedTagIndex = 0;\n    }\n    handleUp(index) {\n        this.selectionService.focused = index;\n    }\n    handleBackspace() {\n        if (this.focusedTagIndex !== undefined) {\n            this.handleDelete();\n        }\n        else {\n            this.handleRemoveTag(this.tags[this.tags.length - 1]);\n            this.searchbar.focus();\n        }\n    }\n    handleDelete() {\n        this.handleRemoveTag(this.tags[this.focusedTagIndex]);\n        if (this.focusedTagIndex === this.tags.length) {\n            this.focusedTagIndex = undefined;\n        }\n    }\n    handleLeftKey() {\n        if (this.focusedTagIndex === undefined || this.focusedTagIndex < 0) {\n            this.focusedTagIndex = this.tags.length - 1;\n        }\n        else if (this.focusedTagIndex !== 0) {\n            this.focusedTagIndex--;\n        }\n    }\n    handleDownKey(index) {\n        if (this.isOpen) {\n            this.selectionService.focused = index || this.firstFocusableIndex(0);\n        }\n        else {\n            this.openPopup();\n        }\n    }\n    handleRightKey() {\n        const last = this.tags.length - 1;\n        if (this.focusedTagIndex === last) {\n            this.focusedTagIndex = undefined;\n        }\n        else if (this.focusedTagIndex < last) {\n            this.focusedTagIndex++;\n        }\n    }\n    findIndex(text, startsFrom = 0) {\n        let itemText;\n        text = text.toLowerCase();\n        let index = this.dataService.findIndex(item => {\n            if (this.dataService.grouped) {\n                itemText = this.prop(this.textField, this.valuePrimitive)(item.value);\n            }\n            else {\n                itemText = this.prop(this.textField, this.valuePrimitive)(item);\n            }\n            itemText = !isPresent(itemText) ? \"\" : itemText.toString().toLowerCase();\n            return text && itemText.startsWith(text);\n        }, startsFrom);\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            return (index + 1 > this.dataService.itemsCount) ? -1 : this.findIndex(text, index + 1);\n        }\n        else {\n            return index;\n        }\n    }\n    searchTextAndFocus(text) {\n        const index = this.findIndex(text);\n        this.selectionService.focused = index;\n    }\n    closePopup() {\n        this.togglePopup(false);\n        this.focusedTagIndex = undefined;\n    }\n    openPopup() {\n        this.togglePopup(true);\n        this.focusedTagIndex = undefined;\n    }\n    togglePopup(open) {\n        const isDisabled = this.disabled || this.readonly;\n        const sameState = this.isOpen === open;\n        if (isDisabled || sameState) {\n            return;\n        }\n        const isDefaultPrevented = this.triggerPopupEvents(open);\n        if (!isDefaultPrevented) {\n            this._toggle(open);\n        }\n    }\n    triggerPopupEvents(open) {\n        const eventArgs = new PreventableEvent();\n        if (open) {\n            this.open.emit(eventArgs);\n        }\n        else {\n            this.close.emit(eventArgs);\n        }\n        return eventArgs.isDefaultPrevented();\n    }\n    _toggle(open) {\n        this._open = open;\n        this.destroyPopup();\n        if (this._open) {\n            this.createPopup();\n        }\n    }\n    destroyPopup() {\n        if (this.popupRef) {\n            this.popupRef.popupElement\n                .removeEventListener('mousedown', this.popupMouseDownHandler);\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    createPopup() {\n        if (this.virtual) {\n            this.virtual.skip = 0;\n        }\n        const horizontalAlign = this.direction === \"rtl\" ? \"right\" : \"left\";\n        const anchorPosition = { horizontal: horizontalAlign, vertical: \"bottom\" };\n        const popupPosition = { horizontal: horizontalAlign, vertical: \"top\" };\n        this.popupRef = this.popupService.open({\n            anchor: this.wrapper,\n            anchorAlign: anchorPosition,\n            animate: this.popupSettings.animate,\n            appendTo: this.appendTo,\n            content: this.popupTemplate,\n            popupAlign: popupPosition,\n            popupClass: this.listContainerClasses,\n            positionMode: 'absolute'\n        });\n        const popupWrapper = this.popupRef.popupElement;\n        const { min, max } = this.width;\n        popupWrapper.addEventListener('mousedown', this.popupMouseDownHandler);\n        popupWrapper.style.minWidth = min;\n        popupWrapper.style.width = max;\n        popupWrapper.style.height = this.height;\n        popupWrapper.setAttribute(\"dir\", this.direction);\n        this.popupRef.popupOpen.subscribe(() => {\n            this.cdr.detectChanges();\n            this.optionsList.scrollToItem(this.selectionService.focused);\n        });\n        this.popupRef.popupAnchorViewportLeave.subscribe(() => {\n            this.togglePopup(false);\n        });\n    }\n    emitValueChange() {\n        this.onChangeCallback(this.value);\n        this.valueChange.emit(this.value);\n    }\n    getSelectedDataItems(valueChanges) {\n        const isBoundToComplexData = isObjectArray(this.data);\n        const prop = this.prop(this.valueField, this.valuePrimitive);\n        let currentValue;\n        let index;\n        let selectedDataItems = [];\n        valueChanges.forEachItem((value) => {\n            currentValue = value.currentValue;\n            if (this.dataService.grouped) {\n                index = this.dataService.findIndex((item) => {\n                    return prop(item.value) === prop(currentValue);\n                });\n            }\n            else {\n                index = this.dataService.findIndex((item) => {\n                    return prop(item) === prop(currentValue);\n                });\n            }\n            if (index !== -1) {\n                selectedDataItems.push(this.dataService.itemAt(index));\n            }\n            else if (isPresent(value) && !(isBoundToComplexData && this.valuePrimitive)) { //value is not present in the data\n                selectedDataItems.push(currentValue);\n            }\n            else { // value is primitive, dataItem is an object, dataItem is not present in the current data set\n                const item = this.resolveDataItemFromTags(currentValue);\n                if (isPresent(item)) {\n                    selectedDataItems.push(item);\n                }\n            }\n        });\n        return selectedDataItems;\n    }\n    resolveDataItemFromTags(value) {\n        if (!(this.tags && this.tags.length && isPresent(value))) {\n            return undefined;\n        }\n        // Flattening the tags array in case of a summary tag occurrence.\n        const tags = this.tags.reduce((acc, tag) => {\n            const items = isArray(tag) ? tag : [tag];\n            acc.push(...items);\n            return acc;\n        }, []);\n        const prop = this.prop(this.valueField, this.valuePrimitive);\n        return tags.find(tag => prop(tag) === prop(value));\n    }\n    firstFocusableIndex(index) {\n        const maxIndex = this.dataService.itemsCount;\n        if (this.disabledItemsService.isIndexDisabled(index)) {\n            const nextIndex = index + 1;\n            return (nextIndex < maxIndex) ? this.firstFocusableIndex(nextIndex) : undefined;\n        }\n        else {\n            return index;\n        }\n    }\n    nextTick(f) {\n        this._zone.runOutsideAngular(() => {\n            // Use `setTimeout` instead of a resolved promise\n            // because the latter does not wait long enough.\n            setTimeout(() => this._zone.run(f));\n        });\n    }\n    setMessages() {\n        this._zone.runOutsideAngular(() => {\n            clearTimeout(this.messagesTimeout);\n            this.messagesTimeout = setTimeout(() => {\n                this.noDataText = this.localization.get('noDataText');\n                this.cdr.detectChanges();\n            });\n        });\n    }\n}\nMultiSelectComponent.decorators = [\n    { type: Component, args: [{\n                exportAs: 'kendoMultiSelect',\n                providers: [\n                    MULTISELECT_VALUE_ACCESSOR,\n                    DataService,\n                    SelectionService,\n                    NavigationService,\n                    DisabledItemsService,\n                    LocalizationService,\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.multiselect'\n                    },\n                    {\n                        provide: FilterableDropDownComponentBase, useExisting: forwardRef(() => MultiSelectComponent)\n                    },\n                    {\n                        provide: KendoInput, useExisting: forwardRef(() => MultiSelectComponent)\n                    }\n                ],\n                selector: 'kendo-multiselect',\n                template: `\n        <ng-container kendoMultiSelectLocalizedMessages\n            i18n-noDataText=\"kendo.multiselect.noDataText|The text displayed in the popup when there are no items\"\n            noDataText=\"NO DATA FOUND\"\n\n            i18n-clearTitle=\"kendo.combobox.clearTitle|The title of the clear button\"\n            clearTitle=\"clear\"\n        >\n        </ng-container>\n        <div class=\"k-multiselect-wrap k-floatwrap\"\n            #wrapper\n            (mousedown)=\"wrapperMousedown($event)\"\n        >\n            <kendo-taglist\n                [id]=\"tagListId\"\n                [tags]=\"tags\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [focused]=\"focusedTagIndex\"\n                [disabled]=\"disabled\"\n                [template]=\"tagTemplate\"\n                [groupTemplate]=\"groupTagTemplate\"\n                [tagPrefix]=\"tagPrefix\"\n                (removeTag)=\"handleRemoveTag($event)\"\n            >\n            </kendo-taglist>\n            <kendo-searchbar\n                #searchbar\n                [id]=\"focusableId\"\n                [role]=\"'listbox'\"\n                [tagListId]=\"tagListId\"\n                [activeDescendant]=\"activeDescendant\"\n                [noDataLabel]=\"noDataLabel\"\n                [userInput]=\"text\"\n                [disabled]=\"disabled\"\n                [readonly]=\"readonly\"\n                [tabIndex]=\"tabIndex\"\n                [popupOpen]=\"isOpen\"\n                [placeholder]=\"placeholder\"\n                (onNavigate)=\"handleNavigate($event)\"\n                (valueChange)=\"handleFilter($event)\"\n                (onBlur)=\"onSearchBarBlur()\"\n                (onFocus)=\"onSearchBarFocus()\"\n            >\n            </kendo-searchbar>\n            <span\n                *ngIf=\"!loading && !readonly && clearButton && (tags?.length || text?.length)\"\n                class=\"k-icon k-clear-value k-i-close\"\n                [attr.title]=\"clearTitle\"\n                role=\"button\"\n                tabindex=\"-1\"\n                (mousedown)=\"clearAll($event)\"\n            >\n            </span>\n            <span *ngIf=\"loading\" class=\"k-icon k-i-loading\"></span>\n        </div>\n        <ng-template #popupTemplate>\n            <!--header template-->\n            <ng-template *ngIf=\"headerTemplate\"\n                [templateContext]=\"{\n                    templateRef: headerTemplate.templateRef\n                }\">\n            </ng-template>\n            <!--custom item template-->\n            <div class=\"k-list\" *ngIf=\"allowCustom && text\">\n                <div class=\"k-item k-custom-item\" kendoDropDownsSelectable [multipleSelection]=\"true\" [index]=\"-1\">\n                    <ng-template *ngIf=\"customItemTemplate;else default_custom_item_template\"\n                        [templateContext]=\"{\n                            templateRef: customItemTemplate.templateRef,\n                            $implicit: text\n                        }\">\n                    </ng-template>\n                    <ng-template #default_custom_item_template>{{ text }}</ng-template>\n                    <span class=\"k-icon k-i-plus\" style=\"float: right\"></span>\n                </div>\n            </div>\n            <!--list-->\n            <kendo-list\n                #optionsList\n                [id]=\"listBoxId\"\n                [optionPrefix]=\"optionPrefix\"\n                [data]=\"data\"\n                [textField]=\"textField\"\n                [valueField]=\"valueField\"\n                [height]=\"listHeight\"\n                [template]=\"template\"\n                [groupTemplate]=\"groupTemplate\"\n                [fixedGroupTemplate]=\"fixedGroupTemplate\"\n                [show]=\"isOpen\"\n                [multipleSelection]=\"true\"\n                [virtual]=\"virtual\"\n                (pageChange)=\"pageChange($event)\"\n                >\n            </kendo-list>\n            <!--no data template-->\n            <div class=\"k-nodata\" *ngIf=\"data.length === 0\">\n                <ng-template [ngIf]=\"noDataTemplate\"\n                    [templateContext]=\"{\n                        templateRef: noDataTemplate ? noDataTemplate.templateRef : undefined\n                    }\">\n                </ng-template>\n                <ng-template [ngIf]=\"!noDataTemplate\">\n                    <div>{{ noDataText }}</div>\n                </ng-template>\n            </div>\n            <!--footer template-->\n            <ng-template *ngIf=\"footerTemplate\"\n                [templateContext]=\"{\n                    templateRef: footerTemplate.templateRef\n                }\">\n            </ng-template>\n        </ng-template>\n        <ng-template [ngIf]=\"isOpen\">\n            <kendo-resize-sensor (resize)=\"onResize()\"></kendo-resize-sensor>\n        </ng-template>\n        <ng-container #container></ng-container>\n  `\n            },] },\n];\n/** @nocollapse */\nMultiSelectComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PopupService },\n    { type: DataService },\n    { type: SelectionService },\n    { type: NavigationService },\n    { type: DisabledItemsService },\n    { type: ChangeDetectorRef },\n    { type: KeyValueDiffers },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [TOUCH_ENABLED,] }] }\n];\nMultiSelectComponent.propDecorators = {\n    focusableId: [{ type: Input }],\n    autoClose: [{ type: Input }],\n    loading: [{ type: Input }],\n    data: [{ type: Input }],\n    value: [{ type: Input }],\n    valueField: [{ type: Input }],\n    textField: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    tabIndex: [{ type: Input, args: [\"tabIndex\",] }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    itemDisabled: [{ type: Input }],\n    readonly: [{ type: Input }],\n    filterable: [{ type: Input }],\n    virtual: [{ type: Input }],\n    popupSettings: [{ type: Input }],\n    listHeight: [{ type: Input }],\n    valuePrimitive: [{ type: Input }],\n    clearButton: [{ type: Input }],\n    tagMapper: [{ type: Input }],\n    allowCustom: [{ type: Input }],\n    valueNormalizer: [{ type: Input }],\n    filterChange: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    open: [{ type: Output }],\n    close: [{ type: Output }],\n    onFocus: [{ type: Output, args: ['focus',] }],\n    onBlur: [{ type: Output, args: ['blur',] }],\n    removeTag: [{ type: Output }],\n    container: [{ type: ViewChild, args: ['container', { read: ViewContainerRef },] }],\n    searchbar: [{ type: ViewChild, args: [SearchBarComponent,] }],\n    popupTemplate: [{ type: ViewChild, args: ['popupTemplate',] }],\n    wrapper: [{ type: ViewChild, args: ['wrapper',] }],\n    optionsList: [{ type: ViewChild, args: ['optionsList',] }],\n    template: [{ type: ContentChild, args: [ItemTemplateDirective,] }],\n    customItemTemplate: [{ type: ContentChild, args: [CustomItemTemplateDirective,] }],\n    groupTemplate: [{ type: ContentChild, args: [GroupTemplateDirective,] }],\n    fixedGroupTemplate: [{ type: ContentChild, args: [FixedGroupTemplateDirective,] }],\n    headerTemplate: [{ type: ContentChild, args: [HeaderTemplateDirective,] }],\n    footerTemplate: [{ type: ContentChild, args: [FooterTemplateDirective,] }],\n    tagTemplate: [{ type: ContentChild, args: [TagTemplateDirective,] }],\n    groupTagTemplate: [{ type: ContentChild, args: [GroupTagTemplateDirective,] }],\n    noDataTemplate: [{ type: ContentChild, args: [NoDataTemplateDirective,] }],\n    widgetClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-multiselect',] }, { type: HostBinding, args: ['class.k-header',] }],\n    dir: [{ type: HostBinding, args: ['attr.dir',] }],\n    disabledClass: [{ type: HostBinding, args: ['class.k-state-disabled',] }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * @hidden\n */\nclass TagListComponent {\n    constructor() {\n        this.removeTag = new EventEmitter();\n    }\n    tagProp(tag, prop) {\n        return prop && isObject(tag) ? tag[prop] : tag;\n    }\n    deleteTag(event, tag) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        if (!this.disabled && event.which === 1) {\n            this.removeTag.emit(tag);\n        }\n    }\n    itemId(tag) {\n        if (tag) { //because of custom values\n            return this.tagPrefix + \"-\" + this.tagProp(tag, this.valueField);\n        }\n    }\n    isGroupTag(tag) {\n        return tag instanceof Array;\n    }\n}\nTagListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-taglist',\n                template: `\n        <ul [attr.id]=\"id\" class=\"k-reset\">\n            <li role=\"option\" *ngFor=\"let tag of tags; let i = index;\" aria-selected=\"true\" [attr.aria-setsize]=\"tags?.length\"\n                class=\"k-button\" [ngClass]=\"{ 'k-state-focused': i === focused }\" [attr.id]=\"itemId(tag)\"\n            >\n                <ng-template *ngIf=\"isGroupTag(tag); then groupTag else singleTag\"></ng-template>\n                    <ng-template #groupTag>\n                        <span>\n                            <ng-template *ngIf=\"groupTemplate\"\n                                [templateContext]=\"{\n                                templateRef: groupTemplate.templateRef,\n                                $implicit: tag\n                            }\">\n                            </ng-template>\n                            <ng-template [ngIf]=\"!groupTemplate\">{{ tag.length }} {{ tag.length === 1 ? 'item' : 'items' }} selected</ng-template>\n                        </span>\n                    </ng-template>\n                    <ng-template #singleTag>\n                        <span>\n                        <ng-template *ngIf=\"template\"\n                                [templateContext]=\"{\n                                templateRef: template.templateRef,\n                                $implicit: tag\n                            }\">\n                            </ng-template>\n                            <ng-template [ngIf]=\"!template\">{{ tagProp(tag, textField) }}</ng-template>\n                        </span>\n                    </ng-template>\n\n                <span aria-label=\"delete\" [attr.aria-hidden]=\"i !== focused\" class=\"k-select\">\n                    <span class=\"k-icon k-i-close\" (mousedown)=\"deleteTag($event, tag)\">\n                    </span>\n                </span>\n            </li>\n        </ul>\n  `\n            },] },\n];\nTagListComponent.propDecorators = {\n    tags: [{ type: Input }],\n    textField: [{ type: Input }],\n    valueField: [{ type: Input }],\n    focused: [{ type: Input }],\n    template: [{ type: Input }],\n    groupTemplate: [{ type: Input }],\n    disabled: [{ type: Input }],\n    tagPrefix: [{ type: Input }],\n    id: [{ type: Input }],\n    removeTag: [{ type: Output }]\n};\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    set templateContext(context) {\n        if (this.insertedViewRef) {\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n            this.insertedViewRef = undefined;\n        }\n        if (context.templateRef) {\n            this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n        }\n    }\n}\nTemplateContextDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[templateContext]' // tslint:disable-line\n            },] },\n];\n/** @nocollapse */\nTemplateContextDirective.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nTemplateContextDirective.propDecorators = {\n    templateContext: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass SelectableDirective {\n    constructor(selectionService) {\n        // @HostBinding('attr.offset-index')\n        // @Input() public offsetIndex: number;\n        this.multipleSelection = false;\n        this.selectionService = selectionService;\n    }\n    get focusedClassName() {\n        return this.selectionService.isFocused(this.index);\n    }\n    get selectedClassName() {\n        return this.selectionService.isSelected(this.index);\n    }\n    onClick(event) {\n        event.stopPropagation();\n        if (this.multipleSelection) {\n            if (this.selectionService.isSelected(this.index)) {\n                this.selectionService.unselect(this.index);\n            }\n            else {\n                this.selectionService.add(this.index);\n            }\n        }\n        else {\n            this.selectionService.change(this.index);\n        }\n    }\n}\nSelectableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownsSelectable]'\n            },] },\n];\n/** @nocollapse */\nSelectableDirective.ctorParameters = () => [\n    { type: SelectionService }\n];\nSelectableDirective.propDecorators = {\n    index: [{ type: HostBinding, args: ['attr.index',] }, { type: Input }],\n    height: [{ type: HostBinding, args: ['style.height.px',] }, { type: HostBinding, args: ['style.minHeight.px',] }, { type: Input }],\n    multipleSelection: [{ type: Input }],\n    focusedClassName: [{ type: HostBinding, args: ['class.k-state-focused',] }],\n    selectedClassName: [{ type: HostBinding, args: ['class.k-state-selected',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * A directive which configures the MultiSelect to show one single summary tag for all selected data items.\n * When a number is provided, the summary tag is displayed after the given amount of data items are selected\n * ([more information and examples]({% slug summarytagmode_multiselect %})).\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect kendoMultiSelectSummaryTag [data]=\"data\"></kendo-multiselect>\n * ```\n *\n * @example\n * ```ts-no-run\n * <kendo-multiselect [kendoMultiSelectSummaryTag]=\"2\" [data]=\"data\"></kendo-multiselect>\n * ```\n */\nclass SummaryTagDirective {\n    constructor(multiSelectComponent) {\n        this.multiSelectComponent = multiSelectComponent;\n        /**\n         * A numeric value that indicates the number of selected data items after which the summary tag will appear.\n         */\n        this.showAfter = 0; // tslint:disable-line:no-input-rename\n        this.createTagMapper();\n    }\n    ngOnChanges(changes) {\n        if (isPresent(changes.showAfter)) {\n            this.createTagMapper();\n            this.multiSelectComponent.onTagMapperChange();\n        }\n    }\n    createTagMapper() {\n        this.multiSelectComponent.tagMapper = (tags) => {\n            if (tags.length > this.showAfter) {\n                let result;\n                result = tags.slice(0, this.showAfter);\n                result.push(tags.slice(this.showAfter, tags.length));\n                return result;\n            }\n            else {\n                return tags;\n            }\n        };\n    }\n}\nSummaryTagDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoMultiSelectSummaryTag]'\n            },] },\n];\n/** @nocollapse */\nSummaryTagDirective.ctorParameters = () => [\n    { type: MultiSelectComponent }\n];\nSummaryTagDirective.propDecorators = {\n    showAfter: [{ type: Input, args: ['kendoMultiSelectSummaryTag',] }]\n};\n\nconst DEFAULT_FILTER_SETTINGS = {\n    caseSensitive: false,\n    operator: 'startsWith'\n};\n/**\n * Implements an event handler for the `filterChange` event of a DropDowns component\n * which performs simple data filtering.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"data\"\n *      kendoDropDownFilter\n *      placeholder=\"e.g. Andorra\">\n *  </kendo-autocomplete>\n * `\n * })\n * class AppComponent {\n *     public data: Array<string> = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\"];\n * }\n * ```\n */\nclass FilterDirective {\n    constructor(component) {\n        this.component = component;\n        /**\n         * @hidden\n         *\n         * Sets whether the filtering functionality is enabled on component init.\n         */\n        this.filterable = true;\n        this._data = [];\n        this._filterSettings = DEFAULT_FILTER_SETTINGS;\n    }\n    /**\n     * The initial data that will be used as a source array for the filtering operations.\n     */\n    set data(data) {\n        this._data = data || [];\n    }\n    get data() {\n        return this._data;\n    }\n    /**\n     * The configuration object which sets the behavior of the `kendoDropDownFilter` directive.\n     */\n    set filterSettings(settings) {\n        this._filterSettings = Object.assign({}, DEFAULT_FILTER_SETTINGS, settings);\n    }\n    get filterSettings() {\n        return this._filterSettings;\n    }\n    ngOnInit() {\n        this.component.filterable = this.filterable;\n        this.filterChangeSubscription = this.component.filterChange\n            .subscribe(query => this.component.data = this.getFilteredData(query));\n    }\n    ngOnDestroy() {\n        this.filterChangeSubscription.unsubscribe();\n    }\n    getFilteredData(query) {\n        const field = this.component.textField || this.component.valueField;\n        return this.data.filter(item => this.checkItem(getter(item, field), query));\n    }\n    checkItem(target, query) {\n        target = this.normalizeValue(target);\n        query = this.normalizeValue(query);\n        return this.filterSettings.operator === 'contains' ? target.indexOf(query) !== -1 : target.indexOf(query) === 0;\n    }\n    normalizeValue(value) {\n        const normalizedValue = isPresent(value) ? value.toString() : '';\n        return this.filterSettings.caseSensitive ? normalizedValue : normalizedValue.toLowerCase();\n    }\n}\nFilterDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropDownFilter]'\n            },] },\n];\n/** @nocollapse */\nFilterDirective.ctorParameters = () => [\n    { type: FilterableDropDownComponentBase }\n];\nFilterDirective.propDecorators = {\n    data: [{ type: Input }],\n    filterSettings: [{ type: Input, args: ['kendoDropDownFilter',] }],\n    filterable: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.propDecorators = {\n    noDataText: [{ type: Input }],\n    clearTitle: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => LocalizedMessagesDirective) // tslint:disable-line:no-forward-ref\n                    }\n                ],\n                selector: `\n    [kendoDropDownListLocalizedMessages],\n    [kendoComboBoxLocalizedMessages],\n    [kendoAutoCompleteLocalizedMessages],\n    [kendoMultiSelectLocalizedMessages]\n  `\n            },] },\n];\n/** @nocollapse */\nLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug rtl_dropdowns %}#toc-messages)).\n */\nclass CustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => CustomMessagesComponent)\n                    }\n                ],\n                selector: 'kendo-dropdownlist-messages, kendo-combobox-messages, kendo-autocomplete-messages, kendo-multiselect-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst SHARED_DIRECTIVES = [\n    HeaderTemplateDirective,\n    FooterTemplateDirective,\n    ItemTemplateDirective,\n    GroupTemplateDirective,\n    FixedGroupTemplateDirective,\n    NoDataTemplateDirective,\n    LocalizedMessagesDirective,\n    CustomMessagesComponent,\n    FilterDirective\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The noData template directive.\n */\nclass SharedDirectivesModule {\n}\nSharedDirectivesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [SHARED_DIRECTIVES],\n                exports: [SHARED_DIRECTIVES]\n            },] },\n];\n\nconst INTERNAL_DIRECTIVES = [\n    ListComponent,\n    ListItemDirective,\n    SelectableDirective,\n    SearchBarComponent,\n    TemplateContextDirective\n];\n/**\n * @hidden\n */\nclass SharedModule {\n}\nSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [INTERNAL_DIRECTIVES],\n                exports: [INTERNAL_DIRECTIVES, CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule],\n                imports: [CommonModule, FormsModule, PopupModule, ResizeSensorModule, SharedDirectivesModule, EventsModule]\n            },] },\n];\n\nconst AUTOCOMPLETE_DIRECTIVES = [\n    AutoCompleteComponent\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `AutoCompleteComponent`&mdash;The AutoComplete component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\nclass AutoCompleteModule {\n}\nAutoCompleteModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [AUTOCOMPLETE_DIRECTIVES],\n                exports: [AUTOCOMPLETE_DIRECTIVES, SharedDirectivesModule],\n                imports: [SharedModule]\n            },] },\n];\n\n/* tslint:disable:object-literal-sort-keys */\nconst agentRxs = {\n    wp: /(Windows Phone(?: OS)?)\\s(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    fire: /(Silk)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    android: /(Android|Android.*(?:Opera|Firefox).*?\\/)\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    iphone: /(iPhone|iPod).*OS\\s+(\\d+)[\\._]([\\d\\._]+)/,\n    ipad: /(iPad).*OS\\s+(\\d+)[\\._]([\\d_]+)/,\n    meego: /(MeeGo).+NokiaBrowser\\/(\\d+)\\.([\\d\\._]+)/,\n    webos: /(webOS)\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    blackberry: /(BlackBerry|BB10).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    playbook: /(PlayBook).*?Tablet\\s*OS\\s*(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    windows: /(MSIE)\\s+(\\d+)\\.(\\d+(\\.\\d+)?)/,\n    tizen: /(tizen).*?Version\\/(\\d+)\\.(\\d+(\\.\\d+)?)/i,\n    sailfish: /(sailfish).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*firefox/i,\n    ffos: /(Mobile).*rv:(\\d+)\\.(\\d+(\\.\\d+)?).*Firefox/\n};\nconst osRxs = {\n    ios: /^i(phone|pad|pod)$/i,\n    android: /^android|fire$/i,\n    blackberry: /^blackberry|playbook/i,\n    windows: /windows/,\n    wp: /wp/,\n    flat: /sailfish|ffos|tizen/i,\n    meego: /meego/\n};\nconst desktopBrowserRxs = {\n    edge: /(edge)[ \\/]([\\w.]+)/i,\n    webkit: /(chrome)[ \\/]([\\w.]+)/i,\n    safari: /(webkit)[ \\/]([\\w.]+)/i,\n    opera: /(opera)(?:.*version|)[ \\/]([\\w.]+)/i,\n    msie: /(msie\\s|trident.*? rv:)([\\w.]+)/i,\n    mozilla: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\nconst mobileBrowserRxs = {\n    omini: /Opera\\sMini/i,\n    omobile: /Opera\\sMobi/i,\n    firefox: /Firefox|Fennec/i,\n    mobilesafari: /version\\/.*safari/i,\n    ie: /MSIE|Windows\\sPhone/i,\n    chrome: /chrome|crios/i,\n    webkit: /webkit/i\n};\nconst testRx = (agent, rxs, dflt) => {\n    for (let rx in rxs) {\n        if (rxs.hasOwnProperty(rx) && rxs[rx].test(agent)) {\n            return rx;\n        }\n    }\n    return dflt !== undefined ? dflt : agent;\n};\n/**\n * @hidden\n */\nconst detectMobileOS = (ua) => {\n    let minorVersion;\n    let match = [];\n    for (let agent in agentRxs) {\n        if (agentRxs.hasOwnProperty(agent)) {\n            match = ua.match(agentRxs[agent]);\n            if (!match) {\n                continue;\n            }\n            if (agent === 'windows' && 'plugins' in window.navigator) {\n                return null;\n            } // Break if not Metro/Mobile Windows\n            const os = {};\n            os.device = agent;\n            os.browser = testRx(ua, mobileBrowserRxs, 'default');\n            os.name = testRx(agent, osRxs);\n            os[os.name] = true;\n            os.majorVersion = match[2];\n            os.minorVersion = match[3].replace('_', '.');\n            minorVersion = os.minorVersion.replace('.', '').substr(0, 2);\n            os.flatVersion = os.majorVersion + minorVersion +\n                (new Array(3 - (minorVersion.length < 3 ? minorVersion.length : 2)).join('0'));\n            os.cordova = typeof window.PhoneGap !== undefined\n                || typeof window.cordova !== undefined; // Use file protocol to detect appModes.\n            os.appMode = window.navigator.standalone\n                || (/file|local|wmapp/).test(window.location.protocol)\n                || os.cordova; // Use file protocol to detect appModes.\n            return os;\n        }\n    }\n    return null;\n};\n/**\n * @hidden\n */\nconst detectDesktopBrowser = (ua) => {\n    let browserInfo = null;\n    let match = [];\n    for (let agent in desktopBrowserRxs) {\n        if (desktopBrowserRxs.hasOwnProperty(agent)) {\n            match = ua.match(desktopBrowserRxs[agent]);\n            if (match) {\n                browserInfo = {};\n                browserInfo[agent] = true;\n                browserInfo[match[1].toLowerCase().split(' ')[0].split('/')[0]] = true;\n                browserInfo.version = parseInt(document.documentMode || match[2], 10);\n                break;\n            }\n        }\n    }\n    return browserInfo;\n};\nconst userAgent = isWindowAvailable() && window.navigator ? window.navigator.userAgent : null;\n/**\n * @hidden\n */\nconst browser = userAgent ? detectDesktopBrowser(userAgent) : null;\n/**\n * @hidden\n */\nconst mobileOS = userAgent ? detectMobileOS(userAgent) : null;\n/**\n * @hidden\n */\nconst touch = isWindowAvailable() && 'ontouchstart' in window;\n/**\n * @hidden\n */\nconst msPointers = browser && !browser.chrome && window.MSPointerEvent;\n/**\n * @hidden\n */\nconst pointers = browser && !browser.chrome && window.PointerEvent;\n/**\n * @hidden\n */\nconst touchEnabled = mobileOS && (touch || msPointers || pointers);\n\nconst COMBOBOX_DIRECTIVES = [\n    ComboBoxComponent\n];\nconst ɵ0$1 = touchEnabled;\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `ComboBoxComponent`&mdash;The ComboBox component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\nclass ComboBoxModule {\n}\nComboBoxModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMBOBOX_DIRECTIVES],\n                exports: [COMBOBOX_DIRECTIVES, SharedDirectivesModule],\n                imports: [SharedModule],\n                providers: [{ provide: TOUCH_ENABLED, useValue: ɵ0$1 }]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass FilterInputDirective {\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n    }\n    ngOnChanges() {\n        if (this.focused) {\n            this.nextTick(() => this.element.nativeElement.focus());\n        }\n    }\n    nextTick(fn) {\n        this.zone.runOutsideAngular(() => setTimeout(fn));\n    }\n}\nFilterInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[filterInput]' // tslint:disable-line\n            },] },\n];\n/** @nocollapse */\nFilterInputDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nFilterInputDirective.propDecorators = {\n    focused: [{ type: Input, args: ['filterInput',] }]\n};\n\nconst DROPDOWNLIST_DIRECTIVES = [\n    DropDownListComponent,\n    ValueTemplateDirective,\n    FilterInputDirective\n];\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `DropDownListComponent`&mdash;The DropDownList component class.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `ValueTemplateDirective`&mdash;The value template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n */\nclass DropDownListModule {\n}\nDropDownListModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [DROPDOWNLIST_DIRECTIVES],\n                exports: [DROPDOWNLIST_DIRECTIVES, SharedDirectivesModule],\n                imports: [SharedModule]\n            },] },\n];\n\nconst MULTISELECT_DIRECTIVES = [\n    MultiSelectComponent,\n    TagListComponent,\n    TagTemplateDirective,\n    GroupTagTemplateDirective,\n    SummaryTagDirective,\n    CustomItemTemplateDirective\n];\nconst ɵ0$2 = touchEnabled;\n/**\n * @hidden\n *\n * The exported package module.\n *\n * The package exports:\n * - `MultiSelectComponent`&mdash;The MultiSelect component class.\n * - `SummaryTagDirective`&mdash;The MultiSelect summary tag directive.\n * - `ItemTemplateDirective`&mdash;The item template directive.\n * - `CustomItemTemplateDirective`&mdash;The custom item template directive.\n * - `TagTemplateDirective`&mdash;The tag template directive.\n * - `SummaryTagTemplateDirective`&mdash;The summary tag template directive.\n * - `HeaderTemplateDirective`&mdash;The header template directive.\n * - `FooterTemplateDirective`&mdash;The footer template directive.\n * - `NoDataTemplateDirective`&mdash;The no-data template directive.\n */\nclass MultiSelectModule {\n}\nMultiSelectModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [MULTISELECT_DIRECTIVES],\n                exports: [MULTISELECT_DIRECTIVES, SharedDirectivesModule],\n                imports: [SharedModule],\n                providers: [{ provide: TOUCH_ENABLED, useValue: ɵ0$2 }]\n            },] },\n];\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Dropdowns components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Dropdowns module\n * import { DropDownsModule } from '@progress/kendo-angular-dropdowns';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare the app component\n *     imports:      [BrowserModule, DropDownsModule], // import the Dropdowns module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass DropDownsModule {\n}\nDropDownsModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [AutoCompleteModule, ComboBoxModule, DropDownListModule, MultiSelectModule]\n            },] },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, COMBOBOX_VALUE_ACCESSOR, DataService, DisabledItemsService, DROPDOWNLIST_VALUE_ACCESSOR, FilterInputDirective, FilterableDropDownComponentBase, ListItemDirective, CustomMessagesComponent, LocalizedMessagesDirective, Messages, NavigationService, SearchBarComponent, SelectionService, browser, detectDesktopBrowser, detectMobileOS, mobileOS, msPointers, pointers, touch, touchEnabled, NoDataTemplateDirective, TagTemplateDirective, TOUCH_ENABLED, isWindowAvailable, AutoCompleteComponent, ComboBoxComponent, DropDownListComponent, MultiSelectComponent, TagListComponent, ItemTemplateDirective, GroupTemplateDirective, FixedGroupTemplateDirective, CustomItemTemplateDirective, HeaderTemplateDirective, FooterTemplateDirective, ValueTemplateDirective, TemplateContextDirective, GroupTagTemplateDirective, SelectableDirective, SummaryTagDirective, FilterDirective, DropDownsModule, MultiSelectModule, SharedModule, AutoCompleteModule, ComboBoxModule, DropDownListModule, SharedDirectivesModule, ListComponent, PreventableEvent };\n"]},"metadata":{},"sourceType":"module"}