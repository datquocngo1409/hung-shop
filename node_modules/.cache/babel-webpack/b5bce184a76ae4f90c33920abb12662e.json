{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { CommonModule } from '@angular/common';\nimport { Injectable, Component, HostListener, NgModule } from '@angular/core';\nimport { NavigationStart, Router, RouterModule } from '@angular/router';\nimport { Subject, merge } from 'rxjs';\nimport { map, filter, first } from 'rxjs/operators';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\nimport * as Éµngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\n\nfunction IStepOption() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  IStepOption.prototype.stepId;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.anchorId;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.title;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.content;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.route;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.nextStep;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.prevStep;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.placement;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.preventScrolling;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.prevBtnTitle;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.nextBtnTitle;\n  /** @type {?|undefined} */\n\n  IStepOption.prototype.endBtnTitle;\n}\n/** @enum {number} */\n\n\nvar TourState = {\n  OFF: 0,\n  ON: 1,\n  PAUSED: 2\n};\nTourState[TourState.OFF] = 'OFF';\nTourState[TourState.ON] = 'ON';\nTourState[TourState.PAUSED] = 'PAUSED';\n/**\n * @template T\n */\n\nvar TourService = /*#__PURE__*/function () {\n  /**\n   * @param {?} router\n   */\n  function TourService(router) {\n    _classCallCheck(this, TourService);\n\n    this.router = router;\n    this.stepShow$ = new Subject();\n    this.stepHide$ = new Subject();\n    this.initialize$ = new Subject();\n    this.start$ = new Subject();\n    this.end$ = new Subject();\n    this.pause$ = new Subject();\n    this.resume$ = new Subject();\n    this.anchorRegister$ = new Subject();\n    this.anchorUnregister$ = new Subject();\n    this.events$ = merge(this.stepShow$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'stepShow',\n        value: value\n      };\n    })), this.stepHide$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'stepHide',\n        value: value\n      };\n    })), this.initialize$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'initialize',\n        value: value\n      };\n    })), this.start$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'start',\n        value: value\n      };\n    })), this.end$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'end',\n        value: value\n      };\n    })), this.pause$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'pause',\n        value: value\n      };\n    })), this.resume$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'resume',\n        value: value\n      };\n    })), this.anchorRegister$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'anchorRegister',\n        value: value\n      };\n    })), this.anchorUnregister$.pipe(map(\n    /**\n    * @param {?} value\n    * @return {?}\n    */\n    function (value) {\n      return {\n        name: 'anchorUnregister',\n        value: value\n      };\n    })));\n    this.steps = [];\n    this.anchors = {};\n    this.status = TourState.OFF;\n    this.isHotKeysEnabled = true;\n  }\n  /**\n   * @param {?} steps\n   * @param {?=} stepDefaults\n   * @return {?}\n   */\n\n\n  _createClass(TourService, [{\n    key: \"initialize\",\n    value: function initialize(steps, stepDefaults) {\n      if (steps && steps.length > 0) {\n        this.status = TourState.OFF;\n        this.steps = steps.map(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          return Object.assign({}, stepDefaults, step);\n        });\n        this.initialize$.next(this.steps);\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableHotkeys\",\n    value: function disableHotkeys() {\n      this.isHotKeysEnabled = false;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"enableHotkeys\",\n    value: function enableHotkeys() {\n      this.isHotKeysEnabled = true;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.startAt(0);\n    }\n    /**\n     * @param {?} stepId\n     * @return {?}\n     */\n\n  }, {\n    key: \"startAt\",\n    value: function startAt(stepId) {\n      var _this = this;\n\n      this.status = TourState.ON;\n      this.goToStep(this.loadStep(stepId));\n      this.start$.next();\n      this.router.events.pipe(filter(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        return event instanceof NavigationStart;\n      }), first()).subscribe(\n      /**\n      * @return {?}\n      */\n      function () {\n        if (_this.currentStep && _this.currentStep.hasOwnProperty('route')) {\n          _this.hideStep(_this.currentStep);\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.status = TourState.OFF;\n      this.hideStep(this.currentStep);\n      this.currentStep = undefined;\n      this.end$.next();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.status = TourState.PAUSED;\n      this.hideStep(this.currentStep);\n      this.pause$.next();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.status = TourState.ON;\n      this.showStep(this.currentStep);\n      this.resume$.next();\n    }\n    /**\n     * @param {?=} pause\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(pause) {\n      if (pause) {\n        if (this.currentStep) {\n          this.pause();\n        } else {\n          this.resume();\n        }\n      } else {\n        if (this.currentStep) {\n          this.end();\n        } else {\n          this.start();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.hasNext(this.currentStep)) {\n        this.goToStep(this.loadStep(this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1));\n      }\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasNext\",\n    value: function hasNext(step) {\n      if (!step) {\n        console.warn('Can\\'t get next step. No currentStep.');\n        return false;\n      }\n\n      return step.nextStep !== undefined || this.steps.indexOf(step) < this.steps.length - 1;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      if (this.hasPrev(this.currentStep)) {\n        this.goToStep(this.loadStep(this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1));\n      }\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"hasPrev\",\n    value: function hasPrev(step) {\n      if (!step) {\n        console.warn('Can\\'t get previous step. No currentStep.');\n        return false;\n      }\n\n      return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n    }\n    /**\n     * @param {?} stepId\n     * @return {?}\n     */\n\n  }, {\n    key: \"goto\",\n    value: function goto(stepId) {\n      this.goToStep(this.loadStep(stepId));\n    }\n    /**\n     * @param {?} anchorId\n     * @param {?} anchor\n     * @return {?}\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(anchorId, anchor) {\n      if (!anchorId) return;\n\n      if (this.anchors[anchorId]) {\n        throw new Error('anchorId ' + anchorId + ' already registered!');\n      }\n\n      this.anchors[anchorId] = anchor;\n      this.anchorRegister$.next(anchorId);\n    }\n    /**\n     * @param {?} anchorId\n     * @return {?}\n     */\n\n  }, {\n    key: \"unregister\",\n    value: function unregister(anchorId) {\n      if (!anchorId) return;\n      delete this.anchors[anchorId];\n      this.anchorUnregister$.next(anchorId);\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return this.status;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"isHotkeysEnabled\",\n    value: function isHotkeysEnabled() {\n      return this.isHotKeysEnabled;\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"goToStep\",\n    value: function goToStep(step) {\n      var _this2 = this;\n\n      if (!step) {\n        console.warn('Can\\'t go to non-existent step');\n        this.end();\n        return;\n      }\n      /** @type {?} */\n\n\n      var navigatePromise = new Promise(\n      /**\n      * @param {?} resolve\n      * @return {?}\n      */\n      function (resolve) {\n        return resolve(true);\n      });\n\n      if (step.route !== undefined && typeof step.route === 'string') {\n        navigatePromise = this.router.navigateByUrl(step.route);\n      } else if (step.route && Array.isArray(step.route)) {\n        navigatePromise = this.router.navigate(step.route);\n      }\n\n      navigatePromise.then(\n      /**\n      * @param {?} navigated\n      * @return {?}\n      */\n      function (navigated) {\n        if (navigated !== false) {\n          setTimeout(\n          /**\n          * @return {?}\n          */\n          function () {\n            return _this2.setCurrentStep(step);\n          });\n        }\n      });\n    }\n    /**\n     * @private\n     * @param {?} stepId\n     * @return {?}\n     */\n\n  }, {\n    key: \"loadStep\",\n    value: function loadStep(stepId) {\n      if (typeof stepId === 'number') {\n        return this.steps[stepId];\n      } else {\n        return this.steps.find(\n        /**\n        * @param {?} step\n        * @return {?}\n        */\n        function (step) {\n          return step.stepId === stepId;\n        });\n      }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"setCurrentStep\",\n    value: function setCurrentStep(step) {\n      var _this3 = this;\n\n      if (this.currentStep) {\n        this.hideStep(this.currentStep);\n      }\n\n      this.currentStep = step;\n      this.showStep(this.currentStep);\n      this.router.events.pipe(filter(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        return event instanceof NavigationStart;\n      }), first()).subscribe(\n      /**\n      * @param {?} event\n      * @return {?}\n      */\n      function (event) {\n        if (_this3.currentStep && _this3.currentStep.hasOwnProperty('route')) {\n          _this3.hideStep(_this3.currentStep);\n        }\n      });\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"showStep\",\n    value: function showStep(step) {\n      /** @type {?} */\n      var anchor = this.anchors[step && step.anchorId];\n\n      if (!anchor) {\n        console.warn('Can\\'t attach to unregistered anchor with id ' + step.anchorId);\n        this.end();\n        return;\n      }\n\n      anchor.showTourStep(step);\n      this.stepShow$.next(step);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @return {?}\n     */\n\n  }, {\n    key: \"hideStep\",\n    value: function hideStep(step) {\n      /** @type {?} */\n      var anchor = this.anchors[step && step.anchorId];\n\n      if (!anchor) {\n        return;\n      }\n\n      anchor.hideTourStep();\n      this.stepHide$.next(step);\n    }\n  }]);\n\n  return TourService;\n}();\n\nTourService.Éµfac = function TourService_Factory(t) {\n  return new (t || TourService)(Éµngcc0.ÉµÉµinject(Router));\n};\n\nTourService.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({\n  token: TourService,\n  factory: TourService.Éµfac\n});\n/** @nocollapse */\n\nTourService.ctorParameters = function () {\n  return [{\n    type: Router\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(TourService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Router\n    }];\n  }, null);\n})();\n\nif (false) {\n  /** @type {?} */\n  TourService.prototype.stepShow$;\n  /** @type {?} */\n\n  TourService.prototype.stepHide$;\n  /** @type {?} */\n\n  TourService.prototype.initialize$;\n  /** @type {?} */\n\n  TourService.prototype.start$;\n  /** @type {?} */\n\n  TourService.prototype.end$;\n  /** @type {?} */\n\n  TourService.prototype.pause$;\n  /** @type {?} */\n\n  TourService.prototype.resume$;\n  /** @type {?} */\n\n  TourService.prototype.anchorRegister$;\n  /** @type {?} */\n\n  TourService.prototype.anchorUnregister$;\n  /** @type {?} */\n\n  TourService.prototype.events$;\n  /** @type {?} */\n\n  TourService.prototype.steps;\n  /** @type {?} */\n\n  TourService.prototype.currentStep;\n  /** @type {?} */\n\n  TourService.prototype.anchors;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourService.prototype.status;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourService.prototype.isHotKeysEnabled;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  TourService.prototype.router;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourHotkeyListenerComponent = /*#__PURE__*/function () {\n  /**\n   * @param {?} tourService\n   */\n  function TourHotkeyListenerComponent(tourService) {\n    _classCallCheck(this, TourHotkeyListenerComponent);\n\n    this.tourService = tourService;\n  }\n  /**\n   * Configures hot keys for controlling the tour with the keyboard\n   * @return {?}\n   */\n\n\n  _createClass(TourHotkeyListenerComponent, [{\n    key: \"onEscapeKey\",\n    value: function onEscapeKey() {\n      if (this.tourService.getStatus() === TourState.ON && this.tourService.isHotkeysEnabled()) {\n        this.tourService.end();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onArrowRightKey\",\n    value: function onArrowRightKey() {\n      if (this.tourService.getStatus() === TourState.ON && this.tourService.hasNext(this.tourService.currentStep) && this.tourService.isHotkeysEnabled()) {\n        this.tourService.next();\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onArrowLeftKey\",\n    value: function onArrowLeftKey() {\n      if (this.tourService.getStatus() === TourState.ON && this.tourService.hasPrev(this.tourService.currentStep) && this.tourService.isHotkeysEnabled()) {\n        this.tourService.prev();\n      }\n    }\n  }]);\n\n  return TourHotkeyListenerComponent;\n}();\n\nTourHotkeyListenerComponent.Éµfac = function TourHotkeyListenerComponent_Factory(t) {\n  return new (t || TourHotkeyListenerComponent)(Éµngcc0.ÉµÉµdirectiveInject(TourService));\n};\n\nTourHotkeyListenerComponent.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({\n  type: TourHotkeyListenerComponent,\n  selectors: [[\"tour-hotkey-listener\"]],\n  hostBindings: function TourHotkeyListenerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµlistener(\"keydown.Escape\", function TourHotkeyListenerComponent_keydown_Escape_HostBindingHandler() {\n        return ctx.onEscapeKey();\n      }, false, Éµngcc0.ÉµÉµresolveWindow)(\"keydown.ArrowRight\", function TourHotkeyListenerComponent_keydown_ArrowRight_HostBindingHandler() {\n        return ctx.onArrowRightKey();\n      }, false, Éµngcc0.ÉµÉµresolveWindow)(\"keydown.ArrowLeft\", function TourHotkeyListenerComponent_keydown_ArrowLeft_HostBindingHandler() {\n        return ctx.onArrowLeftKey();\n      }, false, Éµngcc0.ÉµÉµresolveWindow);\n    }\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function TourHotkeyListenerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      Éµngcc0.ÉµÉµprojectionDef();\n      Éµngcc0.ÉµÉµprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTourHotkeyListenerComponent.ctorParameters = function () {\n  return [{\n    type: TourService\n  }];\n};\n\nTourHotkeyListenerComponent.propDecorators = {\n  onEscapeKey: [{\n    type: HostListener,\n    args: ['window:keydown.Escape']\n  }],\n  onArrowRightKey: [{\n    type: HostListener,\n    args: ['window:keydown.ArrowRight']\n  }],\n  onArrowLeftKey: [{\n    type: HostListener,\n    args: ['window:keydown.ArrowLeft']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(TourHotkeyListenerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tour-hotkey-listener',\n      template: \"<ng-content></ng-content>\"\n    }]\n  }], function () {\n    return [{\n      type: TourService\n    }];\n  }, {\n    /**\n     * Configures hot keys for controlling the tour with the keyboard\n     * @return {?}\n     */\n    onEscapeKey: [{\n      type: HostListener,\n      args: ['window:keydown.Escape']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onArrowRightKey: [{\n      type: HostListener,\n      args: ['window:keydown.ArrowRight']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onArrowLeftKey: [{\n      type: HostListener,\n      args: ['window:keydown.ArrowLeft']\n    }]\n  });\n})();\n\nif (false) {\n  /** @type {?} */\n  TourHotkeyListenerComponent.prototype.tourService;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar TourModule = /*#__PURE__*/function () {\n  function TourModule() {\n    _classCallCheck(this, TourModule);\n  }\n\n  _createClass(TourModule, null, [{\n    key: \"forRoot\",\n\n    /**\n     * @return {?}\n     */\n    value: function forRoot() {\n      return {\n        ngModule: TourModule,\n        providers: [TourService]\n      };\n    }\n  }]);\n\n  return TourModule;\n}();\n\nTourModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({\n  type: TourModule\n});\nTourModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({\n  factory: function TourModule_Factory(t) {\n    return new (t || TourModule)();\n  },\n  imports: [[CommonModule, RouterModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(TourModule, {\n    declarations: function declarations() {\n      return [TourHotkeyListenerComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, RouterModule];\n    },\n    exports: function exports() {\n      return [TourHotkeyListenerComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  Éµngcc0.ÉµsetClassMetadata(TourModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TourHotkeyListenerComponent],\n      exports: [TourHotkeyListenerComponent],\n      imports: [CommonModule, RouterModule]\n    }]\n  }], null, null);\n})();\n\n;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { TourHotkeyListenerComponent, TourModule, TourService, TourState };","map":{"version":3,"sources":["ngx-tour-core/lib/tour.service.ts","ngx-tour-core/lib/tour-hotkey-listener.component.ts","ngx-tour-core/lib/tour.module.ts"],"names":["mergeStatic"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\nimport { Subject, Observable, merge as mergeStatic } from 'rxjs';\nimport { first, map, filter } from 'rxjs/operators';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: any;\n  preventScrolling?: boolean;\n  prevBtnTitle?: string;\n  nextBtnTitle?: string;\n  endBtnTitle?: string;\n}\n\nexport enum TourState {\n  OFF,\n  ON,\n  PAUSED\n}\n\n@Injectable()\nexport class TourService<T extends IStepOption = IStepOption> {\n  public stepShow$: Subject<T> = new Subject();\n  public stepHide$: Subject<T> = new Subject();\n  public initialize$: Subject<T[]> = new Subject();\n  public start$: Subject<T> = new Subject();\n  public end$: Subject<any> = new Subject();\n  public pause$: Subject<T> = new Subject();\n  public resume$: Subject<T> = new Subject();\n  public anchorRegister$: Subject<string> = new Subject();\n  public anchorUnregister$: Subject<string> = new Subject();\n  public events$: Observable<{ name: string; value: any }> = mergeStatic(\n    this.stepShow$.pipe(map(value => ({ name: 'stepShow', value }))),\n    this.stepHide$.pipe(map(value => ({ name: 'stepHide', value }))),\n    this.initialize$.pipe(map(value => ({ name: 'initialize', value }))),\n    this.start$.pipe(map(value => ({ name: 'start', value }))),\n    this.end$.pipe(map(value => ({ name: 'end', value }))),\n    this.pause$.pipe(map(value => ({ name: 'pause', value }))),\n    this.resume$.pipe(map(value => ({ name: 'resume', value }))),\n    this.anchorRegister$.pipe(\n      map(value => ({\n        name: 'anchorRegister',\n        value\n      }))\n    ),\n    this.anchorUnregister$.pipe(\n      map(value => ({\n        name: 'anchorUnregister',\n        value\n      }))\n    )\n  );\n\n  public steps: T[] = [];\n  public currentStep: T;\n\n  public anchors: { [anchorId: string]: TourAnchorDirective } = {};\n  private status: TourState = TourState.OFF;\n  private isHotKeysEnabled = true;\n\n  constructor(private router: Router) {}\n\n  public initialize(steps: T[], stepDefaults?: T): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n\n  public disableHotkeys(): void {\n    this.isHotKeysEnabled = false;\n  }\n\n  public enableHotkeys(): void {\n    this.isHotKeysEnabled = true;\n  }\n\n  public start(): void {\n    this.startAt(0);\n  }\n\n  public startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart), first())\n      .subscribe(() => {\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\n          this.hideStep(this.currentStep);\n        }\n      });\n  }\n\n  public end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n\n  public pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n\n  public resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n\n  public toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n\n  public next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(\n        this.loadStep(\n          this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1\n        )\n      );\n    }\n  }\n\n  public hasNext(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return (\n      step.nextStep !== undefined ||\n      this.steps.indexOf(step) < this.steps.length - 1\n    );\n  }\n\n  public prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(\n        this.loadStep(\n          this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1\n        )\n      );\n    }\n  }\n\n  public hasPrev(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n\n  public goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n\n  public register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (!anchorId)\n      return;\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n\n  public unregister(anchorId: string): void {\n    if (!anchorId)\n      return;\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n\n  public getStatus(): TourState {\n    return this.status;\n  }\n\n  public isHotkeysEnabled(): boolean {\n    return this.isHotKeysEnabled;\n  }\n\n  private goToStep(step: T): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let navigatePromise: Promise<boolean> = new Promise(resolve =>\n      resolve(true)\n    );\n    if (step.route !== undefined && typeof step.route === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n\n  private loadStep(stepId: number | string): T {\n    if (typeof stepId === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n\n  private setCurrentStep(step: T): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart), first())\n      .subscribe((event) => {\n        if (this.currentStep && this.currentStep.hasOwnProperty('route')) {\n          this.hideStep(this.currentStep);\n        }\n      });\n  }\n\n  private showStep(step: T): void {\n    const anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      console.warn(\n        'Can\\'t attach to unregistered anchor with id ' + step.anchorId\n      );\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n\n  private hideStep(step: T): void {\n    const anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\n\n@Component({\n  selector: 'tour-hotkey-listener',\n  template: `<ng-content></ng-content>`\n})\nexport class TourHotkeyListenerComponent {\n  constructor(public tourService: TourService) {}\n\n  /**\n   * Configures hot keys for controlling the tour with the keyboard\n   */\n  @HostListener('window:keydown.Escape')\n  public onEscapeKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.end();\n    }\n  }\n\n  @HostListener('window:keydown.ArrowRight')\n  public onArrowRightKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.hasNext(this.tourService.currentStep) &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.next();\n    }\n  }\n\n  @HostListener('window:keydown.ArrowLeft')\n  public onArrowLeftKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.hasPrev(this.tourService.currentStep) &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.prev();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\n\n@NgModule({\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n})\nexport class TourModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\n};\n\nexport { TourService };\n"]},"metadata":{},"sourceType":"module"}