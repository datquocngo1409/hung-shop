{"ast":null,"code":"/**\n * @hidden\n */\nexport var ifElse = function ifElse(predicate, right, left) {\n  return function (value) {\n    return predicate(value) ? right(value) : left(value);\n  };\n};\n/**\n * @hidden\n * Performs the right-to-left function composition. Functions should have a unary.\n */\n\nexport var compose = function compose() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return function (data) {\n    return args.reduceRight(function (acc, curr) {\n      return curr(acc);\n    }, data);\n  };\n};\n/**\n * @hidden\n */\n\nexport var constant = function constant(x) {\n  return function () {\n    return x;\n  };\n};\n/**\n * @hidden\n */\n\nexport var identity = function identity(x) {\n  return x;\n};","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-data-query/dist/es2015/funcs.js"],"names":["ifElse","predicate","right","left","value","compose","args","data","reduceRight","acc","curr","constant","x","identity"],"mappings":"AAAA;;;AAGA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,IAAnB;AAAA,SAA4B,UAAAC,KAAK;AAAA,WAAIH,SAAS,CAACG,KAAD,CAAT,GAAmBF,KAAK,CAACE,KAAD,CAAxB,GAAkCD,IAAI,CAACC,KAAD,CAA1C;AAAA,GAAjC;AAAA,CAAf;AACP;;;;;AAIA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,oCAAIC,IAAJ;AAAIA,IAAAA,IAAJ;AAAA;;AAAA,SAAa,UAACC,IAAD;AAAA,WAAUD,IAAI,CAACE,WAAL,CAAiB,UAACC,GAAD,EAAMC,IAAN;AAAA,aAAeA,IAAI,CAACD,GAAD,CAAnB;AAAA,KAAjB,EAA2CF,IAA3C,CAAV;AAAA,GAAb;AAAA,CAAhB;AACP;;;;AAGA,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAC,CAAC;AAAA,SAAI;AAAA,WAAMA,CAAN;AAAA,GAAJ;AAAA,CAAlB;AACP;;;;AAGA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAD,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAAlB","sourcesContent":["/**\n * @hidden\n */\nexport const ifElse = (predicate, right, left) => value => predicate(value) ? right(value) : left(value);\n/**\n * @hidden\n * Performs the right-to-left function composition. Functions should have a unary.\n */\nexport const compose = (...args) => (data) => args.reduceRight((acc, curr) => curr(acc), data);\n/**\n * @hidden\n */\nexport const constant = x => () => x;\n/**\n * @hidden\n */\nexport const identity = x => x;\n"]},"metadata":{},"sourceType":"module"}