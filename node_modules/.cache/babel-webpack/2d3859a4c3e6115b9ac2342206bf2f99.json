{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { defined } from '../util';\n\nfunction geometryAccessor(name) {\n  var fieldName = \"_\" + name;\n  return function (value) {\n    if (defined(value)) {\n      this._observerField(fieldName, value);\n\n      this.geometryChange();\n      return this;\n    }\n\n    return this[fieldName];\n  };\n}\n\nfunction defineGeometryAccessors(fn, names) {\n  for (var i = 0; i < names.length; i++) {\n    fn[names[i]] = geometryAccessor(names[i]);\n  }\n}\n\nvar withGeometry = function withGeometry(TBase) {\n  var names = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [\"geometry\"];\n\n  var result = /*#__PURE__*/function (_TBase) {\n    _inherits(result, _TBase);\n\n    var _super = _createSuper(result);\n\n    function result() {\n      _classCallCheck(this, result);\n\n      return _super.apply(this, arguments);\n    }\n\n    return result;\n  }(TBase);\n\n  defineGeometryAccessors(result.prototype, names);\n  return result;\n};\n\nexport default withGeometry;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/mixins/with-geometry.js"],"names":["defined","geometryAccessor","name","fieldName","value","_observerField","geometryChange","defineGeometryAccessors","fn","names","i","length","withGeometry","TBase","result","prototype"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,SAAxB;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC5B,MAAMC,SAAS,GAAG,MAAMD,IAAxB;AACA,SAAO,UAASE,KAAT,EAAgB;AACnB,QAAIJ,OAAO,CAACI,KAAD,CAAX,EAAoB;AAChB,WAAKC,cAAL,CAAoBF,SAApB,EAA+BC,KAA/B;;AACA,WAAKE,cAAL;AACA,aAAO,IAAP;AACH;;AAED,WAAO,KAAKH,SAAL,CAAP;AACH,GARD;AASH;;AAED,SAASI,uBAAT,CAAiCC,EAAjC,EAAqCC,KAArC,EAA4C;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCF,IAAAA,EAAE,CAACC,KAAK,CAACC,CAAD,CAAN,CAAF,GAAeT,gBAAgB,CAACQ,KAAK,CAACC,CAAD,CAAN,CAA/B;AACH;AACJ;;AAED,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAmC;AAAA,MAA3BJ,KAA2B,uEAAnB,CAAE,UAAF,CAAmB;;AACpD,MAAMK,MAAM;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,IAAiBD,KAAjB,CAAZ;;AACAN,EAAAA,uBAAuB,CAACO,MAAM,CAACC,SAAR,EAAmBN,KAAnB,CAAvB;AAEA,SAAOK,MAAP;AACH,CALD;;AAOA,eAAeF,YAAf","sourcesContent":["import { defined } from '../util';\n\nfunction geometryAccessor(name) {\n    const fieldName = \"_\" + name;\n    return function(value) {\n        if (defined(value)) {\n            this._observerField(fieldName, value);\n            this.geometryChange();\n            return this;\n        }\n\n        return this[fieldName];\n    };\n}\n\nfunction defineGeometryAccessors(fn, names) {\n    for (let i = 0; i < names.length; i++) {\n        fn[names[i]] = geometryAccessor(names[i]);\n    }\n}\n\nconst withGeometry = (TBase, names = [ \"geometry\" ]) => {\n    const result = class extends TBase {};\n    defineGeometryAccessors(result.prototype, names);\n\n    return result;\n};\n\nexport default withGeometry;\n"]},"metadata":{},"sourceType":"module"}