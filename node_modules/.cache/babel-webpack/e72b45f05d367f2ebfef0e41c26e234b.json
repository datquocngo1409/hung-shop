{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata } from 'tslib';\nimport { NgModule } from '@angular/core';\nimport { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, Router, RouterModule } from '@angular/router';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as ɵngcc0 from '@angular/core';\n\nvar LoadingBarRouterModule = /*#__PURE__*/function () {\n  function LoadingBarRouterModule(router, loader) {\n    var _this = this;\n\n    _classCallCheck(this, LoadingBarRouterModule);\n\n    var ref = loader.useRef('router');\n    router.events.subscribe(function (event) {\n      var navState = _this.getCurrentNavigationState(router);\n\n      if (navState && navState.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        ref.start();\n      }\n\n      if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n        ref.complete();\n      }\n    });\n  }\n\n  _createClass(LoadingBarRouterModule, [{\n    key: \"getCurrentNavigationState\",\n    value: function getCurrentNavigationState(router) {\n      // `getCurrentNavigation` only available in angular `7.2`\n      var currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n\n      if (currentNavigation && currentNavigation.extras) {\n        return currentNavigation.extras.state;\n      }\n\n      return {};\n    }\n  }]);\n\n  return LoadingBarRouterModule;\n}();\n\nLoadingBarRouterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: LoadingBarRouterModule\n});\nLoadingBarRouterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function LoadingBarRouterModule_Factory(t) {\n    return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(Router), ɵngcc0.ɵɵinject(LoadingBarService));\n  },\n  imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n});\n\nLoadingBarRouterModule.ctorParameters = function () {\n  return [{\n    type: Router\n  }, {\n    type: LoadingBarService\n  }];\n};\n\nLoadingBarRouterModule = __decorate([__metadata(\"design:paramtypes\", [Router, LoadingBarService])], LoadingBarRouterModule);\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, {\n    imports: function imports() {\n      return [RouterModule, LoadingBarModule];\n    },\n    exports: function exports() {\n      return [RouterModule, LoadingBarModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LoadingBarRouterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [RouterModule, LoadingBarModule],\n      exports: [RouterModule, LoadingBarModule]\n    }]\n  }], function () {\n    return [{\n      type: Router\n    }, {\n      type: LoadingBarService\n    }];\n  }, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadingBarRouterModule };","map":{"version":3,"sources":["@ngx-loading-bar/router/router.module.ts","@ngx-loading-bar/router/ngx-loading-bar-router.ts"],"names":[],"mappings":";;;;;;;;IAea,sBAAb;AACE,kCAAY,MAAZ,EAA4B,MAA5B,EAAqD;AAAA;;AAAA;;AACnD,QAAM,GAAG,GAAG,MAAM,CAAC,MAAP,CAAc,QAAd,CAAZ;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,SAAd,CAAwB,UAAC,KAAD,EAAM;AAC5B,UAAM,QAAQ,GAAG,KAAI,CAAC,yBAAL,CAA+B,MAA/B,CAAjB;;AACA,UAAI,QAAQ,IAAI,QAAQ,CAAC,gBAAzB,EAA2C;AACzC;AACD;;AAED,UAAI,KAAK,YAAY,eAArB,EAAsC;AACpC,QAAA,GAAG,CAAC,KAAJ;AACD;;AAED,UAAI,KAAK,YAAY,eAAjB,IAAoC,KAAK,YAAY,aAArD,IAAsE,KAAK,YAAY,gBAA3F,EAA6G;AAC3G,QAAA,GAAG,CAAC,QAAJ;AACD;AACF,KAbD;AAcD;;AAjBH;AAAA;AAAA,8CAmBoC,MAnBpC,EAmB+C;AAC/C;AACI,UAAM,iBAAiB,GAAG,MAAM,CAAC,oBAAP,IAA+B,MAAM,CAAC,oBAAP,EAAzD;;AACA,UAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAA3C,EAAmD;AACjD,eAAO,iBAAiB,CAAC,MAAlB,CAAyB,KAAhC;AACD;;AAED,aAAO,EAAP;AACD;AA3BH;;AAAA;AAAA,G;;;;;;;;;4DA4BC,gB;;;AACD,sBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAAgD;AAAA,IAAA,IAAA,EA5B1B;AA4B0B,GAAhD,EA5BgC;AAAA,IAAA,IAAA,EAAM;AAAN,GA4BhC,CAAA;AAAA,CAAA;;AA7Ba,sBAAsB,GAAA,UAAA,CAA/B,CAJH,UAAA,CAAA,mBAAA,EACU,CAIW,MAJX,EAAa,iBAAb,CADV,CAIG,CAA+B,EAFjC,sBAEiC,CAAtB;;CAFW,YAAE;AAAA,GAAA,OAAA,SAAA,KACxB,WADwB,IACxB,SADwB,KACxB,MAAA,CAAA,kBAAA,CAAA,sBAAA,EAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,gBAAA,CAAA;AAAA,KAAA;AAAA,IAAA,OAAA,EAAA,mBAAA;AAAA,aAAA,CAAA,YAAA,EAAA,gBAAA,CAAA;AAAA;AAAA,GAAA,CADwB;AACxB,C;;;;;;;;;;;;;;;;;;AA8BF,C;AC5CA;;;;;AAIA,SAAA,sBAAA","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Router,\n  NavigationStart,\n  NavigationError,\n  NavigationEnd,\n  NavigationCancel,\n} from '@angular/router';\nimport { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\n\n@NgModule({\n  imports: [RouterModule, LoadingBarModule],\n  exports: [RouterModule, LoadingBarModule],\n})\nexport class LoadingBarRouterModule {\n  constructor(router: Router, loader: LoadingBarService) {\n    const ref = loader.useRef('router');\n    router.events.subscribe((event) => {\n      const navState = this.getCurrentNavigationState(router);\n      if (navState && navState.ignoreLoadingBar) {\n        return;\n      }\n\n      if (event instanceof NavigationStart) {\n        ref.start();\n      }\n\n      if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n        ref.complete();\n      }\n    });\n  }\n\n  private getCurrentNavigationState(router: any) {\n    // `getCurrentNavigation` only available in angular `7.2`\n    const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n    if (currentNavigation && currentNavigation.extras) {\n      return currentNavigation.extras.state;\n    }\n\n    return {};\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]},"metadata":{},"sourceType":"module"}