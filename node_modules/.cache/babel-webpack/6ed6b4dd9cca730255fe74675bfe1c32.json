{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\nvar instance;\nvar support;\n\nvar hasDocument = function hasDocument() {\n  return typeof document !== \"undefined\";\n};\n\nvar supportsCanvas = function supportsCanvas() {\n  return hasDocument() && document.createElement(\"canvas\").getContext;\n};\n\nvar supportsSVG = function supportsSVG() {\n  return hasDocument() && document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n};\n\nvar SurfaceFactory = /*#__PURE__*/function (_Class) {\n  _inherits(SurfaceFactory, _Class);\n\n  var _super = _createSuper(SurfaceFactory);\n\n  _createClass(SurfaceFactory, null, [{\n    key: \"support\",\n    get: function get() {\n      if (!support) {\n        support = {\n          canvas: supportsCanvas(),\n          svg: supportsSVG()\n        };\n      }\n\n      return support;\n    }\n  }, {\n    key: \"current\",\n    get: function get() {\n      if (!instance) {\n        instance = new SurfaceFactory();\n      }\n\n      return instance;\n    }\n  }]);\n\n  function SurfaceFactory() {\n    var _this;\n\n    _classCallCheck(this, SurfaceFactory);\n\n    _this = _super.call(this);\n    _this._items = [{\n      name: \"svg\",\n      type: SVGSurface\n    }, {\n      name: \"canvas\",\n      type: CanvasSurface\n    }];\n    return _this;\n  }\n\n  _createClass(SurfaceFactory, [{\n    key: \"create\",\n    value: function create(element, options) {\n      var items = this._items;\n      var match = items[0];\n\n      if (options && options.type) {\n        var preferred = options.type.toLowerCase();\n\n        for (var i = 0; i < items.length; i++) {\n          if (items[i].name === preferred) {\n            match = items[i];\n            break;\n          }\n        }\n      }\n\n      if (match) {\n        return new match.type(element, options);\n      }\n\n      logToConsole(\"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" + \"- The browser does not support SVG and Canvas. User agent: \".concat(navigator.userAgent));\n    }\n  }]);\n\n  return SurfaceFactory;\n}(Class);\n\nexport default SurfaceFactory;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/surface-factory.js"],"names":["Class","logToConsole","SVGSurface","CanvasSurface","instance","support","hasDocument","document","supportsCanvas","createElement","getContext","supportsSVG","implementation","hasFeature","SurfaceFactory","canvas","svg","_items","name","type","element","options","items","match","preferred","toLowerCase","i","length","navigator","userAgent"],"mappings":";;;;AAAA,SAASA,KAAT,EAAgBC,YAAhB,QAAoC,UAApC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,IAAIC,QAAJ;AACA,IAAIC,OAAJ;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,OAAOC,QAAP,KAAoB,WAA1B;AAAA,CAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMF,WAAW,MACpCC,QAAQ,CAACE,aAAT,CAAuB,QAAvB,EAAiCC,UADd;AAAA,CAAvB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAML,WAAW,MACjCC,QAAQ,CAACK,cAAT,CAAwBC,UAAxB,CAAmC,mDAAnC,EAAwF,KAAxF,CADgB;AAAA,CAApB;;IAGMC,c;;;;;;;wBACmB;AACjB,UAAI,CAACT,OAAL,EAAc;AACVA,QAAAA,OAAO,GAAG;AACNU,UAAAA,MAAM,EAAEP,cAAc,EADhB;AAENQ,UAAAA,GAAG,EAAEL,WAAW;AAFV,SAAV;AAIH;;AAED,aAAON,OAAP;AACH;;;wBAEoB;AACjB,UAAI,CAACD,QAAL,EAAe;AACXA,QAAAA,QAAQ,GAAG,IAAIU,cAAJ,EAAX;AACH;;AAED,aAAOV,QAAP;AACH;;;AAED,4BAAc;AAAA;;AAAA;;AACV;AAEA,UAAKa,MAAL,GAAc,CAAE;AACZC,MAAAA,IAAI,EAAE,KADM;AAEZC,MAAAA,IAAI,EAAEjB;AAFM,KAAF,EAGX;AACCgB,MAAAA,IAAI,EAAE,QADP;AAECC,MAAAA,IAAI,EAAEhB;AAFP,KAHW,CAAd;AAHU;AAUb;;;;2BAEMiB,O,EAASC,O,EAAS;AACrB,UAAMC,KAAK,GAAG,KAAKL,MAAnB;AACA,UAAIM,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAjB;;AAEA,UAAID,OAAO,IAAIA,OAAO,CAACF,IAAvB,EAA6B;AACzB,YAAMK,SAAS,GAAGH,OAAO,CAACF,IAAR,CAAaM,WAAb,EAAlB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,cAAIJ,KAAK,CAACI,CAAD,CAAL,CAASR,IAAT,KAAkBM,SAAtB,EAAiC;AAC7BD,YAAAA,KAAK,GAAGD,KAAK,CAACI,CAAD,CAAb;AACA;AACH;AACJ;AACJ;;AAED,UAAIH,KAAJ,EAAW;AACP,eAAO,IAAIA,KAAK,CAACJ,IAAV,CAAeC,OAAf,EAAwBC,OAAxB,CAAP;AACH;;AAEDpB,MAAAA,YAAY,CACR,gJAC+D2B,SAAS,CAACC,SADzE,CADQ,CAAZ;AAGH;;;;EArDwB7B,K;;AAwD7B,eAAec,cAAf","sourcesContent":["import { Class, logToConsole } from './common';\nimport SVGSurface from './svg/surface';\nimport CanvasSurface from './canvas/surface';\n\nlet instance;\nlet support;\n\nconst hasDocument = () => typeof document !== \"undefined\";\n\nconst supportsCanvas = () => hasDocument() &&\n    document.createElement(\"canvas\").getContext;\n\nconst supportsSVG = () => hasDocument() &&\n    document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n\nclass SurfaceFactory extends Class {\n    static get support() {\n        if (!support) {\n            support = {\n                canvas: supportsCanvas(),\n                svg: supportsSVG()\n            };\n        }\n\n        return support;\n    }\n\n    static get current() {\n        if (!instance) {\n            instance = new SurfaceFactory();\n        }\n\n        return instance;\n    }\n\n    constructor() {\n        super();\n\n        this._items = [ {\n            name: \"svg\",\n            type: SVGSurface\n        }, {\n            name: \"canvas\",\n            type: CanvasSurface\n        } ];\n    }\n\n    create(element, options) {\n        const items = this._items;\n        let match = items[0];\n\n        if (options && options.type) {\n            const preferred = options.type.toLowerCase();\n            for (let i = 0; i < items.length; i++) {\n                if (items[i].name === preferred) {\n                    match = items[i];\n                    break;\n                }\n            }\n        }\n\n        if (match) {\n            return new match.type(element, options);\n        }\n\n        logToConsole(\n            \"Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\\n\" +\n            `- The browser does not support SVG and Canvas. User agent: ${ navigator.userAgent }`);\n    }\n}\n\nexport default SurfaceFactory;\n\n"]},"metadata":{},"sourceType":"module"}