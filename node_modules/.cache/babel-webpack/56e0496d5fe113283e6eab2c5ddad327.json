{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\nvar events = [\"click\", \"mouseenter\", \"mouseleave\", \"mousemove\", \"resize\"];\n\nvar Surface = /*#__PURE__*/function (_Observable) {\n  _inherits(Surface, _Observable);\n\n  var _super = _createSuper(Surface);\n\n  function Surface(element, options) {\n    var _this;\n\n    _classCallCheck(this, Surface);\n\n    _this = _super.call(this);\n    _this.options = Object.assign({}, options);\n    _this.element = element;\n    _this.element._kendoExportVisual = _this.exportVisual.bind(_assertThisInitialized(_this));\n    _this._click = _this._handler(\"click\");\n    _this._mouseenter = _this._handler(\"mouseenter\");\n    _this._mouseleave = _this._handler(\"mouseleave\");\n    _this._mousemove = _this._handler(\"mousemove\");\n    _this._visual = new Group();\n    elementSize(element, _this.options);\n\n    _this.bind(events, _this.options);\n\n    _this._enableTracking();\n\n    return _this;\n  }\n\n  _createClass(Surface, [{\n    key: \"draw\",\n    value: function draw(element) {\n      this._visual.children.push(element);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._visual.children = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._visual = null;\n      this.element._kendoExportVisual = null;\n      this.unbind();\n    }\n  }, {\n    key: \"eventTarget\",\n    value: function eventTarget(e) {\n      var domNode = eventElement(e);\n      var node;\n\n      while (!node && domNode) {\n        node = domNode._kendoNode;\n\n        if (domNode === this.element) {\n          break;\n        }\n\n        domNode = domNode.parentElement;\n      }\n\n      if (node) {\n        return node.srcElement;\n      }\n    }\n  }, {\n    key: \"exportVisual\",\n    value: function exportVisual() {\n      return this._visual;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return elementSize(this.element);\n    }\n  }, {\n    key: \"currentSize\",\n    value: function currentSize(size) {\n      if (size) {\n        this._size = size;\n      } else {\n        return this._size;\n      }\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(size) {\n      elementSize(this.element, size);\n      this.currentSize(size);\n\n      this._resize();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(force) {\n      var size = this.getSize();\n      var currentSize = this.currentSize();\n\n      if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n        this.currentSize(size);\n\n        this._resize(size, force);\n\n        this.trigger(\"resize\", size);\n      }\n    }\n  }, {\n    key: \"size\",\n    value: function size(value) {\n      if (!value) {\n        return this.getSize();\n      }\n\n      this.setSize(value);\n    }\n  }, {\n    key: \"suspendTracking\",\n    value: function suspendTracking() {\n      this._suspendedTracking = true;\n    }\n  }, {\n    key: \"resumeTracking\",\n    value: function resumeTracking() {\n      this._suspendedTracking = false;\n    }\n  }, {\n    key: \"_enableTracking\",\n    value: function _enableTracking() {}\n  }, {\n    key: \"_resize\",\n    value: function _resize() {}\n  }, {\n    key: \"_handler\",\n    value: function _handler(eventName) {\n      var _this2 = this;\n\n      return function (e) {\n        var node = _this2.eventTarget(e);\n\n        if (node && !_this2._suspendedTracking) {\n          _this2.trigger(eventName, {\n            element: node,\n            originalEvent: e,\n            type: eventName\n          });\n        }\n      };\n    }\n  }, {\n    key: \"_elementOffset\",\n    value: function _elementOffset() {\n      var element = this.element;\n      var padding = elementPadding(element);\n\n      var _elementOffset2 = elementOffset(element),\n          left = _elementOffset2.left,\n          top = _elementOffset2.top;\n\n      return {\n        left: left + padding.left,\n        top: top + padding.top\n      };\n    }\n  }, {\n    key: \"_surfacePoint\",\n    value: function _surfacePoint(e) {\n      var offset = this._elementOffset();\n\n      var coord = eventCoordinates(e);\n      var x = coord.x - offset.left;\n      var y = coord.y - offset.top;\n      var inverseTransform = elementScale(this.element).invert();\n      var point = new Point(x, y).transform(inverseTransform);\n      return point;\n    }\n  }]);\n\n  return Surface;\n}(Observable);\n\nexport default Surface;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/core/surface.js"],"names":["Group","Point","Observable","eventElement","eventCoordinates","elementPadding","elementScale","elementSize","elementOffset","events","Surface","element","options","Object","assign","_kendoExportVisual","exportVisual","bind","_click","_handler","_mouseenter","_mouseleave","_mousemove","_visual","_enableTracking","children","push","unbind","e","domNode","node","_kendoNode","parentElement","srcElement","size","_size","currentSize","_resize","force","getSize","width","height","trigger","value","setSize","_suspendedTracking","eventName","eventTarget","originalEvent","type","padding","left","top","offset","_elementOffset","coord","x","y","inverseTransform","invert","point","transform"],"mappings":"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","sourcesContent":["import Group from '../shapes/group';\nimport Point from '../geometry/point';\nimport { Observable } from '../common';\nimport { eventElement, eventCoordinates, elementPadding, elementScale, elementSize, elementOffset } from '../util';\n\nconst events = [\n    \"click\",\n    \"mouseenter\",\n    \"mouseleave\",\n    \"mousemove\",\n    \"resize\"\n];\n\nclass Surface extends Observable {\n    constructor(element, options) {\n        super();\n\n        this.options = Object.assign({}, options);\n        this.element = element;\n        this.element._kendoExportVisual = this.exportVisual.bind(this);\n\n        this._click = this._handler(\"click\");\n        this._mouseenter = this._handler(\"mouseenter\");\n        this._mouseleave = this._handler(\"mouseleave\");\n        this._mousemove = this._handler(\"mousemove\");\n\n        this._visual = new Group();\n\n        elementSize(element, this.options);\n\n        this.bind(events, this.options);\n\n        this._enableTracking();\n    }\n\n    draw(element) {\n        this._visual.children.push(element);\n    }\n\n    clear() {\n        this._visual.children = [];\n    }\n\n    destroy() {\n        this._visual = null;\n        this.element._kendoExportVisual = null;\n        this.unbind();\n    }\n\n    eventTarget(e) {\n        let domNode = eventElement(e);\n        let node;\n\n        while (!node && domNode) {\n            node = domNode._kendoNode;\n            if (domNode === this.element) {\n                break;\n            }\n\n            domNode = domNode.parentElement;\n        }\n\n        if (node) {\n            return node.srcElement;\n        }\n    }\n\n    exportVisual() {\n        return this._visual;\n    }\n\n    getSize() {\n        return elementSize(this.element);\n    }\n\n    currentSize(size) {\n        if (size) {\n            this._size = size;\n        } else {\n            return this._size;\n        }\n    }\n\n    setSize(size) {\n        elementSize(this.element, size);\n\n        this.currentSize(size);\n        this._resize();\n    }\n\n    resize(force) {\n        const size = this.getSize();\n        const currentSize = this.currentSize();\n\n        if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n            this.currentSize(size);\n            this._resize(size, force);\n            this.trigger(\"resize\", size);\n        }\n    }\n\n    size(value) {\n        if (!value) {\n            return this.getSize();\n        }\n\n        this.setSize(value);\n    }\n\n    suspendTracking() {\n        this._suspendedTracking = true;\n    }\n\n    resumeTracking() {\n        this._suspendedTracking = false;\n    }\n\n    _enableTracking() {}\n\n    _resize() {}\n\n    _handler(eventName) {\n        return (e) => {\n            const node = this.eventTarget(e);\n            if (node && !this._suspendedTracking) {\n                this.trigger(eventName, {\n                    element: node,\n                    originalEvent: e,\n                    type: eventName\n                });\n            }\n        };\n    }\n\n    _elementOffset() {\n        const element = this.element;\n        const padding = elementPadding(element);\n        const { left, top } = elementOffset(element);\n\n        return {\n            left: left + padding.left,\n            top: top + padding.top\n        };\n    }\n\n    _surfacePoint(e) {\n        const offset = this._elementOffset();\n        const coord = eventCoordinates(e);\n        const x = coord.x - offset.left;\n        const y = coord.y - offset.top;\n\n        const inverseTransform = elementScale(this.element).invert();\n        const point = new Point(\n            x,\n            y\n        ).transform(inverseTransform);\n\n        return point;\n    }\n}\n\nexport default Surface;\n"]},"metadata":{},"sourceType":"module"}