{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport { Path } from './path';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport { defined } from '../util';\nvar DEFAULT_STROKE = \"#000\";\n\nvar Arc = /*#__PURE__*/function (_paintable) {\n  _inherits(Arc, _paintable);\n\n  var _super = _createSuper(Arc);\n\n  _createClass(Arc, [{\n    key: \"nodeType\",\n    get: function get() {\n      return \"Arc\";\n    }\n  }]);\n\n  function Arc() {\n    var _this;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new GeometryArc();\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Arc);\n\n    _this = _super.call(this, options);\n\n    _this.geometry(geometry);\n\n    if (!defined(_this.options.stroke)) {\n      _this.stroke(DEFAULT_STROKE);\n    }\n\n    return _this;\n  }\n\n  _createClass(Arc, [{\n    key: \"_bbox\",\n    value: function _bbox(matrix) {\n      return this._geometry.bbox(matrix);\n    }\n  }, {\n    key: \"rawBBox\",\n    value: function rawBBox() {\n      return this.geometry().bbox();\n    }\n  }, {\n    key: \"toPath\",\n    value: function toPath() {\n      var path = new Path();\n      var curvePoints = this.geometry().curvePoints();\n\n      if (curvePoints.length > 0) {\n        path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n        for (var i = 1; i < curvePoints.length; i += 3) {\n          path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n        }\n      }\n\n      return path;\n    }\n  }, {\n    key: \"_containsPoint\",\n    value: function _containsPoint(point) {\n      return this.geometry().containsPoint(point);\n    }\n  }, {\n    key: \"_isOnPath\",\n    value: function _isOnPath(point) {\n      return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    }\n  }]);\n\n  return Arc;\n}(paintable(measurable(withGeometry(Element))));\n\nexport default Arc;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/shapes/arc.js"],"names":["GeometryArc","Element","Path","paintable","measurable","withGeometry","defined","DEFAULT_STROKE","Arc","geometry","options","stroke","matrix","_geometry","bbox","path","curvePoints","length","moveTo","x","y","i","curveTo","point","containsPoint","_isOnPath","width"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,iBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAGA,IAAMC,cAAc,GAAG,MAAvB;;IAEMC,G;;;;;;;wBACa;AACX,aAAO,KAAP;AACH;;;AAED,iBAAwD;AAAA;;AAAA,QAA5CC,QAA4C,uEAAjC,IAAIT,WAAJ,EAAiC;AAAA,QAAdU,OAAc,uEAAJ,EAAI;;AAAA;;AACpD,8BAAMA,OAAN;;AAEA,UAAKD,QAAL,CAAcA,QAAd;;AAEA,QAAI,CAACH,OAAO,CAAC,MAAKI,OAAL,CAAaC,MAAd,CAAZ,EAAmC;AAC/B,YAAKA,MAAL,CAAYJ,cAAZ;AACH;;AAPmD;AAQvD;;;;0BAEKK,M,EAAQ;AACV,aAAO,KAAKC,SAAL,CAAeC,IAAf,CAAoBF,MAApB,CAAP;AACH;;;8BAES;AACN,aAAO,KAAKH,QAAL,GAAgBK,IAAhB,EAAP;AACH;;;6BAEQ;AACL,UAAMC,IAAI,GAAG,IAAIb,IAAJ,EAAb;AACA,UAAMc,WAAW,GAAG,KAAKP,QAAL,GAAgBO,WAAhB,EAApB;;AAEA,UAAIA,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;AACxBF,QAAAA,IAAI,CAACG,MAAL,CAAYF,WAAW,CAAC,CAAD,CAAX,CAAeG,CAA3B,EAA8BH,WAAW,CAAC,CAAD,CAAX,CAAeI,CAA7C;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,WAAW,CAACC,MAAhC,EAAwCI,CAAC,IAAI,CAA7C,EAAgD;AAC5CN,UAAAA,IAAI,CAACO,OAAL,CAAaN,WAAW,CAACK,CAAD,CAAxB,EAA6BL,WAAW,CAACK,CAAC,GAAG,CAAL,CAAxC,EAAiDL,WAAW,CAACK,CAAC,GAAG,CAAL,CAA5D;AACH;AACJ;;AAED,aAAON,IAAP;AACH;;;mCAEcQ,K,EAAO;AAClB,aAAO,KAAKd,QAAL,GAAgBe,aAAhB,CAA8BD,KAA9B,CAAP;AACH;;;8BAESA,K,EAAO;AACb,aAAO,KAAKd,QAAL,GAAgBgB,SAAhB,CAA0BF,KAA1B,EAAiC,KAAKb,OAAL,CAAaC,MAAb,CAAoBe,KAApB,GAA4B,CAA7D,CAAP;AACH;;;;EA5CavB,SAAS,CAACC,UAAU,CAACC,YAAY,CAACJ,OAAD,CAAb,CAAX,C;;AA+C3B,eAAeO,GAAf","sourcesContent":["import GeometryArc from '../geometry/arc';\nimport Element from './element';\nimport { Path } from './path';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport { defined } from '../util';\n\n\nconst DEFAULT_STROKE = \"#000\";\n\nclass Arc extends paintable(measurable(withGeometry(Element))) {\n    get nodeType() {\n        return \"Arc\";\n    }\n\n    constructor(geometry = new GeometryArc(), options = {}) {\n        super(options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE);\n        }\n    }\n\n    _bbox(matrix) {\n        return this._geometry.bbox(matrix);\n    }\n\n    rawBBox() {\n        return this.geometry().bbox();\n    }\n\n    toPath() {\n        const path = new Path();\n        const curvePoints = this.geometry().curvePoints();\n\n        if (curvePoints.length > 0) {\n            path.moveTo(curvePoints[0].x, curvePoints[0].y);\n\n            for (let i = 1; i < curvePoints.length; i += 3) {\n                path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);\n            }\n        }\n\n        return path;\n    }\n\n    _containsPoint(point) {\n        return this.geometry().containsPoint(point);\n    }\n\n    _isOnPath(point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    }\n}\n\nexport default Arc;\n"]},"metadata":{},"sourceType":"module"}