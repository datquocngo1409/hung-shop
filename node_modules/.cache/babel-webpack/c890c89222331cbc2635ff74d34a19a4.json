{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\n\nvar QuadNode = /*#__PURE__*/function (_QuadRoot) {\n  _inherits(QuadNode, _QuadRoot);\n\n  var _super = _createSuper(QuadNode);\n\n  function QuadNode(rect) {\n    var _this;\n\n    _classCallCheck(this, QuadNode);\n\n    _this = _super.call(this);\n    _this.children = [];\n    _this.rect = rect;\n    return _this;\n  }\n\n  _createClass(QuadNode, [{\n    key: \"inBounds\",\n    value: function inBounds(rect) {\n      var nodeRect = this.rect;\n      var nodeBottomRight = nodeRect.bottomRight();\n      var bottomRight = rect.bottomRight();\n      var inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;\n      return inBounds;\n    }\n  }, {\n    key: \"pointShapes\",\n    value: function pointShapes(point) {\n      var children = this.children;\n      var length = children.length;\n\n      var result = _get(_getPrototypeOf(QuadNode.prototype), \"pointShapes\", this).call(this, point);\n\n      for (var idx = 0; idx < length; idx++) {\n        append(result, children[idx].pointShapes(point));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(shape, bbox) {\n      var children = this.children;\n      var inserted = false;\n\n      if (this.inBounds(bbox)) {\n        if (this.shapes.length < 4) {\n          this._add(shape, bbox);\n        } else {\n          if (!children.length) {\n            this._initChildren();\n          }\n\n          for (var idx = 0; idx < children.length; idx++) {\n            if (children[idx].insert(shape, bbox)) {\n              inserted = true;\n              break;\n            }\n          }\n\n          if (!inserted) {\n            this._add(shape, bbox);\n          }\n        }\n\n        inserted = true;\n      }\n\n      return inserted;\n    }\n  }, {\n    key: \"_initChildren\",\n    value: function _initChildren() {\n      var rect = this.rect,\n          children = this.children;\n      var center = rect.center();\n      var halfWidth = rect.width() / 2;\n      var halfHeight = rect.height() / 2;\n      children.push(new QuadNode(new Rect([rect.origin.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, rect.origin.y], [halfWidth, halfHeight])), new QuadNode(new Rect([rect.origin.x, center.y], [halfWidth, halfHeight])), new QuadNode(new Rect([center.x, center.y], [halfWidth, halfHeight])));\n    }\n  }]);\n\n  return QuadNode;\n}(QuadRoot);\n\nexport default QuadNode;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/search/quad-node.js"],"names":["QuadRoot","Rect","append","QuadNode","rect","children","nodeRect","nodeBottomRight","bottomRight","inBounds","origin","x","y","point","length","result","idx","pointShapes","shape","bbox","inserted","shapes","_add","_initChildren","insert","center","halfWidth","width","halfHeight","height","push"],"mappings":"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","sourcesContent":["import QuadRoot from './quad-root';\nimport { Rect } from '../geometry';\nimport { append } from '../util';\n\nclass QuadNode extends QuadRoot {\n    constructor(rect) {\n        super();\n        this.children = [];\n        this.rect = rect;\n    }\n\n    inBounds(rect) {\n        const nodeRect = this.rect;\n        const nodeBottomRight = nodeRect.bottomRight();\n        const bottomRight = rect.bottomRight();\n        const inBounds = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x &&\n            bottomRight.y <= nodeBottomRight.y;\n        return inBounds;\n    }\n\n    pointShapes(point) {\n        const children = this.children;\n        const length = children.length;\n        const result = super.pointShapes(point);\n        for (let idx = 0; idx < length; idx++) {\n            append(result, children[idx].pointShapes(point));\n        }\n        return result;\n    }\n\n    insert(shape, bbox) {\n        const children = this.children;\n        let inserted = false;\n\n        if (this.inBounds(bbox)) {\n            if (this.shapes.length < 4) {\n                this._add(shape, bbox);\n            } else {\n                if (!children.length) {\n                    this._initChildren();\n                }\n\n                for (let idx = 0; idx < children.length; idx++) {\n                    if (children[idx].insert(shape, bbox)) {\n                        inserted = true;\n                        break;\n                    }\n                }\n\n                if (!inserted) {\n                    this._add(shape, bbox);\n                }\n            }\n            inserted = true;\n        }\n\n        return inserted;\n    }\n\n    _initChildren() {\n        const { rect, children } = this;\n        const center = rect.center();\n        const halfWidth = rect.width() / 2;\n        const halfHeight = rect.height() / 2;\n\n        children.push(\n            new QuadNode(new Rect([ rect.origin.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ center.x, rect.origin.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ rect.origin.x, center.y ], [ halfWidth, halfHeight ])),\n            new QuadNode(new Rect([ center.x, center.y ], [ halfWidth, halfHeight ]))\n        );\n    }\n}\n\nexport default QuadNode;"]},"metadata":{},"sourceType":"module"}