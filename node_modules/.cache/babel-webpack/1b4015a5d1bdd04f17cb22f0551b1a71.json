{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport Element from './element';\nimport traversable from '../mixins/traversable';\nimport { append as _append } from '../util';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\n\nvar Group = /*#__PURE__*/function (_traversable) {\n  _inherits(Group, _traversable);\n\n  var _super = _createSuper(Group);\n\n  _createClass(Group, [{\n    key: \"nodeType\",\n    get: function get() {\n      return \"Group\";\n    }\n  }]);\n\n  function Group(options) {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    _this = _super.call(this, options);\n    _this.children = [];\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"childrenChange\",\n    value: function childrenChange(action, items, index) {\n      this.trigger(\"childrenChange\", {\n        action: action,\n        items: items,\n        index: index\n      });\n    }\n  }, {\n    key: \"append\",\n    value: function append() {\n      _append(this.children, arguments);\n\n      this._reparent(arguments, this);\n\n      this.childrenChange(\"add\", arguments);\n      return this;\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(index, element) {\n      this.children.splice(index, 0, element);\n      element.parent = this;\n      this.childrenChange(\"add\", [element], index);\n      return this;\n    }\n  }, {\n    key: \"insertAt\",\n    value: function insertAt(element, index) {\n      return this.insert(index, element);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(element) {\n      var index = this.children.indexOf(element);\n\n      if (index >= 0) {\n        this.children.splice(index, 1);\n        element.parent = null;\n        this.childrenChange(\"remove\", [element], index);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      if (0 <= index && index < this.children.length) {\n        var element = this.children[index];\n        this.children.splice(index, 1);\n        element.parent = null;\n        this.childrenChange(\"remove\", [element], index);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var items = this.children;\n      this.children = [];\n\n      this._reparent(items, null);\n\n      this.childrenChange(\"remove\", items, 0);\n      return this;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox(transformation) {\n      return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n    }\n  }, {\n    key: \"rawBBox\",\n    value: function rawBBox() {\n      return elementsBoundingBox(this.children, false);\n    }\n  }, {\n    key: \"_clippedBBox\",\n    value: function _clippedBBox(transformation) {\n      return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n    }\n  }, {\n    key: \"currentTransform\",\n    value: function currentTransform(transformation) {\n      return Element.prototype.currentTransform.call(this, transformation) || null;\n    }\n  }, {\n    key: \"containsPoint\",\n    value: function containsPoint(point, parentTransform) {\n      if (this.visible()) {\n        var children = this.children;\n        var transform = this.currentTransform(parentTransform);\n\n        for (var idx = 0; idx < children.length; idx++) {\n          if (children[idx].containsPoint(point, transform)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_reparent\",\n    value: function _reparent(elements, newParent) {\n      for (var i = 0; i < elements.length; i++) {\n        var child = elements[i];\n        var parent = child.parent;\n\n        if (parent && parent !== this && parent.remove) {\n          parent.remove(child);\n        }\n\n        child.parent = newParent;\n      }\n    }\n  }]);\n\n  return Group;\n}(traversable(Element, \"children\"));\n\nexport default Group;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/shapes/group.js"],"names":["Element","traversable","append","elementsBoundingBox","elementsClippedBoundingBox","Group","options","children","action","items","index","trigger","arguments","_reparent","childrenChange","element","splice","parent","insert","indexOf","length","transformation","currentTransform","prototype","call","point","parentTransform","visible","transform","idx","containsPoint","elements","newParent","i","child","remove"],"mappings":"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","sourcesContent":["import Element from './element';\nimport traversable from '../mixins/traversable';\nimport { append } from '../util';\nimport elementsBoundingBox from './utils/elements-bounding-box';\nimport elementsClippedBoundingBox from './utils/elements-clippend-bounding-box';\n\n\nclass Group extends traversable(Element, \"children\") {\n    get nodeType() {\n        return \"Group\";\n    }\n\n    constructor(options) {\n        super(options);\n        this.children = [];\n    }\n\n    childrenChange(action, items, index) {\n        this.trigger(\"childrenChange\",{\n            action: action,\n            items: items,\n            index: index\n        });\n    }\n\n    append() {\n        append(this.children, arguments);\n        this._reparent(arguments, this);\n\n        this.childrenChange(\"add\", arguments);\n\n        return this;\n    }\n\n    insert(index, element) {\n        this.children.splice(index, 0, element);\n        element.parent = this;\n\n        this.childrenChange(\"add\", [ element ], index);\n\n        return this;\n    }\n\n    insertAt(element, index) {\n        return this.insert(index, element);\n    }\n\n    remove(element) {\n        const index = this.children.indexOf(element);\n        if (index >= 0) {\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    }\n\n    removeAt(index) {\n        if (0 <= index && index < this.children.length) {\n            let element = this.children[index];\n            this.children.splice(index, 1);\n            element.parent = null;\n            this.childrenChange(\"remove\", [ element ], index);\n        }\n\n        return this;\n    }\n\n    clear() {\n        const items = this.children;\n        this.children = [];\n        this._reparent(items, null);\n\n        this.childrenChange(\"remove\", items, 0);\n\n        return this;\n    }\n\n    bbox(transformation) {\n        return elementsBoundingBox(this.children, true, this.currentTransform(transformation));\n    }\n\n    rawBBox() {\n        return elementsBoundingBox(this.children, false);\n    }\n\n    _clippedBBox(transformation) {\n        return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));\n    }\n\n    currentTransform(transformation) {\n        return Element.prototype.currentTransform.call(this, transformation) || null;\n    }\n\n    containsPoint(point, parentTransform) {\n        if (this.visible()) {\n            const children = this.children;\n            const transform = this.currentTransform(parentTransform);\n            for (let idx = 0; idx < children.length; idx++) {\n                if (children[idx].containsPoint(point, transform)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    _reparent(elements, newParent) {\n        for (let i = 0; i < elements.length; i++) {\n            const child = elements[i];\n            const parent = child.parent;\n            if (parent && parent !== this && parent.remove) {\n                parent.remove(child);\n            }\n\n            child.parent = newParent;\n        }\n    }\n}\n\nexport default Group;"]},"metadata":{},"sourceType":"module"}