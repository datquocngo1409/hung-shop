{"ast":null,"code":"import _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Directive, TemplateRef, Optional, Component, Input, ElementRef, ContentChild, NgModule } from '@angular/core';\nimport { drawDOM, exportPDF } from '@progress/kendo-drawing';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\"];\n\nvar PDFTemplateDirective = function PDFTemplateDirective(templateRef) {\n  _classCallCheck(this, PDFTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nPDFTemplateDirective.ɵfac = function PDFTemplateDirective_Factory(t) {\n  return new (t || PDFTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nPDFTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PDFTemplateDirective,\n  selectors: [[\"\", \"kendoPDFTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nPDFTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoPDFTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nvar FIELDS = ['bottom', 'left', 'right', 'top'];\n/**\n * Represents the Kendo UI PDFMargin component for Angular.\n */\n\nvar PDFMarginComponent = /*#__PURE__*/function () {\n  function PDFMarginComponent() {\n    _classCallCheck(this, PDFMarginComponent);\n  }\n\n  _createClass(PDFMarginComponent, [{\n    key: \"options\",\n\n    /**\n     * @hidden\n     */\n    get: function get() {\n      var options = {};\n\n      for (var idx = 0; idx < FIELDS.length; idx++) {\n        var field = FIELDS[idx];\n        var value = this[field];\n\n        if (typeof value !== 'undefined') {\n          options[field] = value;\n        }\n      }\n\n      return options;\n    }\n  }]);\n\n  return PDFMarginComponent;\n}();\n\nPDFMarginComponent.ɵfac = function PDFMarginComponent_Factory(t) {\n  return new (t || PDFMarginComponent)();\n};\n\nPDFMarginComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PDFMarginComponent,\n  selectors: [[\"kendo-pdf-export-margin\"]],\n  inputs: {\n    left: \"left\",\n    top: \"top\",\n    right: \"right\",\n    bottom: \"bottom\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function PDFMarginComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\nPDFMarginComponent.propDecorators = {\n  left: [{\n    type: Input\n  }],\n  top: [{\n    type: Input\n  }],\n  right: [{\n    type: Input\n  }],\n  bottom: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFMarginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pdf-export-margin',\n      template: \"\"\n    }]\n  }], null, {\n    left: [{\n      type: Input\n    }],\n    top: [{\n      type: Input\n    }],\n    right: [{\n      type: Input\n    }],\n    bottom: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar compileTemplate = function compileTemplate(templateRef) {\n  var context = {};\n  var embeddedView = templateRef.createEmbeddedView(context);\n\n  var result = function result(data) {\n    Object.assign(context, data);\n    embeddedView.detectChanges();\n    var templateWrap = document.createElement('span');\n    embeddedView.rootNodes.forEach(function (rootNode) {\n      templateWrap.appendChild(rootNode.cloneNode(true));\n    });\n    return templateWrap;\n  };\n\n  result.destroy = function () {\n    embeddedView.destroy();\n    embeddedView = null;\n  };\n\n  return result;\n};\n/**\n * Represents the [Kendo UI PDF Export component for Angular]({% slug overview_pdfexport %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <div class=\"example-config\">\n *       <button class=\"k-button\" (click)=\"pdf.saveAs('document.pdf')\">\n *         Save As PDF...\n *       </button>\n *     </div>\n *\n *     <kendo-pdf-export #pdf paperSize=\"A4\" margin=\"2cm\">\n *       Content goes here\n *     </kendo-pdf-export>\n *   `\n * })\n * export class AppComponent {\n * }\n * ```\n */\n\n\nvar PDFExportComponent = /*#__PURE__*/function () {\n  function PDFExportComponent(element) {\n    _classCallCheck(this, PDFExportComponent);\n\n    this.element = element;\n    /**\n     * The creator of the PDF document.\n     * @default \"Kendo UI PDF Generator\"\n     */\n\n    this.creator = 'Kendo UI PDF Generator';\n    /**\n     * Specifies the name of the exported PDF file.\n     * @default \"Export.pdf\"\n     */\n\n    this.fileName = 'export.pdf';\n  }\n\n  _createClass(PDFExportComponent, [{\n    key: \"saveAs\",\n\n    /**\n     * Saves the content as a PDF file with the specified name.\n     * @param fileName - The name of the exported file.\n     */\n    value: function saveAs() {\n      var fileName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.fileName;\n      this.save(this.element.nativeElement, fileName);\n    }\n    /**\n     * Exports the content as a `Group` for further processing.\n     *\n     * @return - The root group of the exported scene.\n     */\n\n  }, {\n    key: \"export\",\n    value: function _export() {\n      return this.exportElement(this.element.nativeElement);\n    }\n  }, {\n    key: \"save\",\n    value: function save(element, fileName) {\n      var _this = this;\n\n      this.exportElement(element).then(function (group) {\n        return _this.exportGroup(group, _this.pdfOptions());\n      }).then(function (dataUri) {\n        return _this.saveDataUri(dataUri, fileName, _this.saveOptions());\n      });\n    }\n  }, {\n    key: \"exportElement\",\n    value: function exportElement(element) {\n      var promise = this.drawElement(element, this.drawOptions());\n      var cleanup = this.cleanup.bind(this);\n      promise.then(cleanup, cleanup);\n      return promise;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      if (this.pageTemplate) {\n        this.pageTemplate.destroy();\n        delete this.pageTemplate;\n      }\n    }\n  }, {\n    key: \"drawOptions\",\n    value: function drawOptions() {\n      if (this.pageTemplateDirective) {\n        this.pageTemplate = compileTemplate(this.pageTemplateDirective.templateRef);\n      }\n\n      return {\n        avoidLinks: this.avoidLinks,\n        forcePageBreak: this.forcePageBreak,\n        keepTogether: this.keepTogether,\n        margin: this.drawMargin,\n        paperSize: this.paperSize,\n        landscape: this.landscape,\n        repeatHeaders: this.repeatHeaders,\n        scale: this.scale,\n        template: this.pageTemplate\n      };\n    }\n  }, {\n    key: \"pdfOptions\",\n    value: function pdfOptions() {\n      return {\n        author: this.author,\n        creator: this.creator,\n        date: this.date,\n        imgDPI: this.imageResolution,\n        keywords: this.keywords,\n        landscape: this.landscape,\n        margin: this.drawMargin,\n        multiPage: true,\n        paperSize: this.paperSize,\n        producer: this.producer,\n        subject: this.subject,\n        title: this.title\n      };\n    }\n  }, {\n    key: \"saveOptions\",\n    value: function saveOptions() {\n      return {\n        forceProxy: this.forceProxy,\n        proxyData: this.proxyData,\n        proxyTarget: this.proxyTarget,\n        proxyURL: this.proxyURL\n      };\n    }\n  }, {\n    key: \"drawElement\",\n    value: function drawElement(element, options) {\n      return drawDOM(element, options);\n    }\n  }, {\n    key: \"exportGroup\",\n    value: function exportGroup(group, options) {\n      return exportPDF(group, options);\n    }\n  }, {\n    key: \"saveDataUri\",\n    value: function saveDataUri(dataUri, fileName, options) {\n      saveAs(dataUri, fileName, options);\n    }\n  }, {\n    key: \"drawMargin\",\n    get: function get() {\n      var marginComponent = this.marginComponent;\n      var margin = this.margin;\n\n      if (marginComponent) {\n        margin = Object.assign(margin || {}, marginComponent.options);\n      }\n\n      return margin;\n    }\n  }]);\n\n  return PDFExportComponent;\n}();\n\nPDFExportComponent.ɵfac = function PDFExportComponent_Factory(t) {\n  return new (t || PDFExportComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef));\n};\n\nPDFExportComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PDFExportComponent,\n  selectors: [[\"kendo-pdf-export\"]],\n  contentQueries: function PDFExportComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PDFTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PDFMarginComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pageTemplateDirective = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.marginComponent = _t.first);\n    }\n  },\n  inputs: {\n    creator: \"creator\",\n    fileName: \"fileName\",\n    author: \"author\",\n    avoidLinks: \"avoidLinks\",\n    forcePageBreak: \"forcePageBreak\",\n    keepTogether: \"keepTogether\",\n    date: \"date\",\n    imageResolution: \"imageResolution\",\n    forceProxy: \"forceProxy\",\n    keywords: \"keywords\",\n    landscape: \"landscape\",\n    margin: \"margin\",\n    paperSize: \"paperSize\",\n    repeatHeaders: \"repeatHeaders\",\n    scale: \"scale\",\n    proxyData: \"proxyData\",\n    proxyURL: \"proxyURL\",\n    proxyTarget: \"proxyTarget\",\n    producer: \"producer\",\n    subject: \"subject\",\n    title: \"title\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  template: function PDFExportComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nPDFExportComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nPDFExportComponent.propDecorators = {\n  author: [{\n    type: Input\n  }],\n  avoidLinks: [{\n    type: Input\n  }],\n  forcePageBreak: [{\n    type: Input\n  }],\n  keepTogether: [{\n    type: Input\n  }],\n  creator: [{\n    type: Input\n  }],\n  date: [{\n    type: Input\n  }],\n  imageResolution: [{\n    type: Input\n  }],\n  fileName: [{\n    type: Input\n  }],\n  forceProxy: [{\n    type: Input\n  }],\n  keywords: [{\n    type: Input\n  }],\n  landscape: [{\n    type: Input\n  }],\n  margin: [{\n    type: Input\n  }],\n  paperSize: [{\n    type: Input\n  }],\n  repeatHeaders: [{\n    type: Input\n  }],\n  scale: [{\n    type: Input\n  }],\n  proxyData: [{\n    type: Input\n  }],\n  proxyURL: [{\n    type: Input\n  }],\n  proxyTarget: [{\n    type: Input\n  }],\n  producer: [{\n    type: Input\n  }],\n  subject: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  pageTemplateDirective: [{\n    type: ContentChild,\n    args: [PDFTemplateDirective]\n  }],\n  marginComponent: [{\n    type: ContentChild,\n    args: [PDFMarginComponent]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFExportComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pdf-export',\n      template: \"<div><ng-content></ng-content></div>\"\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }];\n  }, {\n    creator: [{\n      type: Input\n    }],\n    fileName: [{\n      type: Input\n    }],\n    author: [{\n      type: Input\n    }],\n    avoidLinks: [{\n      type: Input\n    }],\n    forcePageBreak: [{\n      type: Input\n    }],\n    keepTogether: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    imageResolution: [{\n      type: Input\n    }],\n    forceProxy: [{\n      type: Input\n    }],\n    keywords: [{\n      type: Input\n    }],\n    landscape: [{\n      type: Input\n    }],\n    margin: [{\n      type: Input\n    }],\n    paperSize: [{\n      type: Input\n    }],\n    repeatHeaders: [{\n      type: Input\n    }],\n    scale: [{\n      type: Input\n    }],\n    proxyData: [{\n      type: Input\n    }],\n    proxyURL: [{\n      type: Input\n    }],\n    proxyTarget: [{\n      type: Input\n    }],\n    producer: [{\n      type: Input\n    }],\n    subject: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    pageTemplateDirective: [{\n      type: ContentChild,\n      args: [PDFTemplateDirective]\n    }],\n    marginComponent: [{\n      type: ContentChild,\n      args: [PDFMarginComponent]\n    }]\n  });\n})();\n\nvar COMPONENT_DIRECTIVES = [PDFExportComponent, PDFMarginComponent, PDFTemplateDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }}) definition for the PDF Export directive.\n */\n\nvar PDFExportModule = function PDFExportModule() {\n  _classCallCheck(this, PDFExportModule);\n};\n\nPDFExportModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PDFExportModule\n});\nPDFExportModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PDFExportModule_Factory(t) {\n    return new (t || PDFExportModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PDFExportModule, {\n    declarations: [PDFExportComponent, PDFMarginComponent, PDFTemplateDirective],\n    exports: [PDFExportComponent, PDFMarginComponent, PDFTemplateDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFExportModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENT_DIRECTIVES],\n      exports: [COMPONENT_DIRECTIVES]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PDFExportComponent, PDFExportModule, PDFMarginComponent, PDFTemplateDirective, compileTemplate };","map":{"version":3,"sources":["index.js"],"names":[],"mappings":"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { Directive, TemplateRef, Optional, Component, Input, ElementRef, ContentChild, NgModule } from '@angular/core';\nimport { drawDOM, exportPDF } from '@progress/kendo-drawing';\nimport { saveAs } from '@progress/kendo-file-saver';\n\nclass PDFTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nPDFTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoPDFTemplate]'\n            },] },\n];\n/** @nocollapse */\nPDFTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\nconst FIELDS = ['bottom', 'left', 'right', 'top'];\n/**\n * Represents the Kendo UI PDFMargin component for Angular.\n */\nclass PDFMarginComponent {\n    /**\n     * @hidden\n     */\n    get options() {\n        const options = {};\n        for (let idx = 0; idx < FIELDS.length; idx++) {\n            const field = FIELDS[idx];\n            const value = this[field];\n            if (typeof value !== 'undefined') {\n                options[field] = value;\n            }\n        }\n        return options;\n    }\n}\nPDFMarginComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-pdf-export-margin',\n                template: ``\n            },] },\n];\nPDFMarginComponent.propDecorators = {\n    left: [{ type: Input }],\n    top: [{ type: Input }],\n    right: [{ type: Input }],\n    bottom: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nconst compileTemplate = (templateRef) => {\n    const context = {};\n    let embeddedView = templateRef.createEmbeddedView(context);\n    const result = (data) => {\n        Object.assign(context, data);\n        embeddedView.detectChanges();\n        const templateWrap = document.createElement('span');\n        embeddedView.rootNodes.forEach((rootNode) => {\n            templateWrap.appendChild(rootNode.cloneNode(true));\n        });\n        return templateWrap;\n    };\n    result.destroy = () => {\n        embeddedView.destroy();\n        embeddedView = null;\n    };\n    return result;\n};\n\n/**\n * Represents the [Kendo UI PDF Export component for Angular]({% slug overview_pdfexport %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <div class=\"example-config\">\n *       <button class=\"k-button\" (click)=\"pdf.saveAs('document.pdf')\">\n *         Save As PDF...\n *       </button>\n *     </div>\n *\n *     <kendo-pdf-export #pdf paperSize=\"A4\" margin=\"2cm\">\n *       Content goes here\n *     </kendo-pdf-export>\n *   `\n * })\n * export class AppComponent {\n * }\n * ```\n */\nclass PDFExportComponent {\n    constructor(element) {\n        this.element = element;\n        /**\n         * The creator of the PDF document.\n         * @default \"Kendo UI PDF Generator\"\n         */\n        this.creator = 'Kendo UI PDF Generator';\n        /**\n         * Specifies the name of the exported PDF file.\n         * @default \"Export.pdf\"\n         */\n        this.fileName = 'export.pdf';\n    }\n    get drawMargin() {\n        const marginComponent = this.marginComponent;\n        let margin = this.margin;\n        if (marginComponent) {\n            margin = Object.assign(margin || {}, marginComponent.options);\n        }\n        return margin;\n    }\n    /**\n     * Saves the content as a PDF file with the specified name.\n     * @param fileName - The name of the exported file.\n     */\n    saveAs(fileName = this.fileName) {\n        this.save(this.element.nativeElement, fileName);\n    }\n    /**\n     * Exports the content as a `Group` for further processing.\n     *\n     * @return - The root group of the exported scene.\n     */\n    export() {\n        return this.exportElement(this.element.nativeElement);\n    }\n    save(element, fileName) {\n        this.exportElement(element)\n            .then(group => this.exportGroup(group, this.pdfOptions()))\n            .then(dataUri => this.saveDataUri(dataUri, fileName, this.saveOptions()));\n    }\n    exportElement(element) {\n        const promise = this.drawElement(element, this.drawOptions());\n        const cleanup = this.cleanup.bind(this);\n        promise.then(cleanup, cleanup);\n        return promise;\n    }\n    cleanup() {\n        if (this.pageTemplate) {\n            this.pageTemplate.destroy();\n            delete this.pageTemplate;\n        }\n    }\n    drawOptions() {\n        if (this.pageTemplateDirective) {\n            this.pageTemplate = compileTemplate(this.pageTemplateDirective.templateRef);\n        }\n        return {\n            avoidLinks: this.avoidLinks,\n            forcePageBreak: this.forcePageBreak,\n            keepTogether: this.keepTogether,\n            margin: this.drawMargin,\n            paperSize: this.paperSize,\n            landscape: this.landscape,\n            repeatHeaders: this.repeatHeaders,\n            scale: this.scale,\n            template: this.pageTemplate\n        };\n    }\n    pdfOptions() {\n        return {\n            author: this.author,\n            creator: this.creator,\n            date: this.date,\n            imgDPI: this.imageResolution,\n            keywords: this.keywords,\n            landscape: this.landscape,\n            margin: this.drawMargin,\n            multiPage: true,\n            paperSize: this.paperSize,\n            producer: this.producer,\n            subject: this.subject,\n            title: this.title\n        };\n    }\n    saveOptions() {\n        return {\n            forceProxy: this.forceProxy,\n            proxyData: this.proxyData,\n            proxyTarget: this.proxyTarget,\n            proxyURL: this.proxyURL\n        };\n    }\n    drawElement(element, options) {\n        return drawDOM(element, options);\n    }\n    exportGroup(group, options) {\n        return exportPDF(group, options);\n    }\n    saveDataUri(dataUri, fileName, options) {\n        saveAs(dataUri, fileName, options);\n    }\n}\nPDFExportComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-pdf-export',\n                template: `<div><ng-content></ng-content></div>`\n            },] },\n];\n/** @nocollapse */\nPDFExportComponent.ctorParameters = () => [\n    { type: ElementRef }\n];\nPDFExportComponent.propDecorators = {\n    author: [{ type: Input }],\n    avoidLinks: [{ type: Input }],\n    forcePageBreak: [{ type: Input }],\n    keepTogether: [{ type: Input }],\n    creator: [{ type: Input }],\n    date: [{ type: Input }],\n    imageResolution: [{ type: Input }],\n    fileName: [{ type: Input }],\n    forceProxy: [{ type: Input }],\n    keywords: [{ type: Input }],\n    landscape: [{ type: Input }],\n    margin: [{ type: Input }],\n    paperSize: [{ type: Input }],\n    repeatHeaders: [{ type: Input }],\n    scale: [{ type: Input }],\n    proxyData: [{ type: Input }],\n    proxyURL: [{ type: Input }],\n    proxyTarget: [{ type: Input }],\n    producer: [{ type: Input }],\n    subject: [{ type: Input }],\n    title: [{ type: Input }],\n    pageTemplateDirective: [{ type: ContentChild, args: [PDFTemplateDirective,] }],\n    marginComponent: [{ type: ContentChild, args: [PDFMarginComponent,] }]\n};\n\nconst COMPONENT_DIRECTIVES = [\n    PDFExportComponent,\n    PDFMarginComponent,\n    PDFTemplateDirective\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }}) definition for the PDF Export directive.\n */\nclass PDFExportModule {\n}\nPDFExportModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENT_DIRECTIVES],\n                exports: [COMPONENT_DIRECTIVES]\n            },] },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PDFExportComponent, PDFExportModule, PDFMarginComponent, PDFTemplateDirective, compileTemplate };\n"]},"metadata":{},"sourceType":"module"}