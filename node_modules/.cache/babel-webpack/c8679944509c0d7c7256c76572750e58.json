{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport PathNode from './path-node';\nimport NODE_MAP from './node-map';\nimport { createPromise } from '../util';\n\nvar ImageNode = /*#__PURE__*/function (_PathNode) {\n  _inherits(ImageNode, _PathNode);\n\n  var _super = _createSuper(ImageNode);\n\n  function ImageNode(srcElement, cors) {\n    var _this;\n\n    _classCallCheck(this, ImageNode);\n\n    _this = _super.call(this, srcElement);\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_this));\n    _this.onError = _this.onError.bind(_assertThisInitialized(_this));\n    _this.loading = createPromise();\n    var img = _this.img = new Image();\n\n    if (cors && !/^data:/i.test(srcElement.src())) {\n      img.crossOrigin = cors;\n    }\n\n    img.src = srcElement.src();\n\n    if (img.complete) {\n      _this.onLoad();\n    } else {\n      img.onload = _this.onLoad;\n      img.onerror = _this.onError;\n    }\n\n    return _this;\n  }\n\n  _createClass(ImageNode, [{\n    key: \"renderTo\",\n    value: function renderTo(ctx) {\n      if (this.loading.state() === \"resolved\") {\n        ctx.save();\n        this.setTransform(ctx);\n        this.setClip(ctx);\n        this.drawImage(ctx);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"optionsChange\",\n    value: function optionsChange(e) {\n      if (e.field === \"src\") {\n        this.loading = createPromise();\n        this.img.src = this.srcElement.src();\n      } else {\n        _get(_getPrototypeOf(ImageNode.prototype), \"optionsChange\", this).call(this, e);\n      }\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      this.loading.resolve();\n      this.invalidate();\n    }\n  }, {\n    key: \"onError\",\n    value: function onError() {\n      this.loading.reject(new Error(\"Unable to load image '\" + this.img.src + \"'. Check for connectivity and verify CORS headers.\"));\n    }\n  }, {\n    key: \"drawImage\",\n    value: function drawImage(ctx) {\n      var rect = this.srcElement.rect();\n      var topLeft = rect.topLeft();\n      ctx.drawImage(this.img, topLeft.x, topLeft.y, rect.width(), rect.height());\n    }\n  }]);\n\n  return ImageNode;\n}(PathNode);\n\nNODE_MAP.Image = ImageNode;\nexport default ImageNode;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/canvas/image-node.js"],"names":["PathNode","NODE_MAP","createPromise","ImageNode","srcElement","cors","onLoad","bind","onError","loading","img","Image","test","src","crossOrigin","complete","onload","onerror","ctx","state","save","setTransform","setClip","drawImage","restore","e","field","resolve","invalidate","reject","Error","rect","topLeft","x","y","width","height"],"mappings":";;;;;;;AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAT,QAA8B,SAA9B;;IAEMC,S;;;;;AACF,qBAAYC,UAAZ,EAAwBC,IAAxB,EAA8B;AAAA;;AAAA;;AAC1B,8BAAMD,UAAN;AAEA,UAAKE,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,+BAAf;AAEA,UAAKE,OAAL,GAAeP,aAAa,EAA5B;AAEA,QAAMQ,GAAG,GAAG,MAAKA,GAAL,GAAW,IAAIC,KAAJ,EAAvB;;AAEA,QAAIN,IAAI,IAAI,CAAE,UAAUO,IAAV,CAAeR,UAAU,CAACS,GAAX,EAAf,CAAd,EAAiD;AAC7CH,MAAAA,GAAG,CAACI,WAAJ,GAAkBT,IAAlB;AACH;;AAEDK,IAAAA,GAAG,CAACG,GAAJ,GAAUT,UAAU,CAACS,GAAX,EAAV;;AAEA,QAAIH,GAAG,CAACK,QAAR,EAAkB;AACd,YAAKT,MAAL;AACH,KAFD,MAEO;AACHI,MAAAA,GAAG,CAACM,MAAJ,GAAa,MAAKV,MAAlB;AACAI,MAAAA,GAAG,CAACO,OAAJ,GAAc,MAAKT,OAAnB;AACH;;AArByB;AAsB7B;;;;6BAEQU,G,EAAK;AACV,UAAI,KAAKT,OAAL,CAAaU,KAAb,OAAyB,UAA7B,EAAyC;AACrCD,QAAAA,GAAG,CAACE,IAAJ;AAEA,aAAKC,YAAL,CAAkBH,GAAlB;AACA,aAAKI,OAAL,CAAaJ,GAAb;AAEA,aAAKK,SAAL,CAAeL,GAAf;AAEAA,QAAAA,GAAG,CAACM,OAAJ;AACH;AACJ;;;kCAEaC,C,EAAG;AACb,UAAIA,CAAC,CAACC,KAAF,KAAY,KAAhB,EAAuB;AACnB,aAAKjB,OAAL,GAAeP,aAAa,EAA5B;AACA,aAAKQ,GAAL,CAASG,GAAT,GAAe,KAAKT,UAAL,CAAgBS,GAAhB,EAAf;AACH,OAHD,MAGO;AACH,qFAAoBY,CAApB;AACH;AACJ;;;6BAEQ;AACL,WAAKhB,OAAL,CAAakB,OAAb;AACA,WAAKC,UAAL;AACH;;;8BAES;AACN,WAAKnB,OAAL,CAAaoB,MAAb,CAAoB,IAAIC,KAAJ,CAChB,2BAA2B,KAAKpB,GAAL,CAASG,GAApC,GACA,oDAFgB,CAApB;AAIH;;;8BAESK,G,EAAK;AACX,UAAMa,IAAI,GAAG,KAAK3B,UAAL,CAAgB2B,IAAhB,EAAb;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACC,OAAL,EAAhB;AAEAd,MAAAA,GAAG,CAACK,SAAJ,CACI,KAAKb,GADT,EACcsB,OAAO,CAACC,CADtB,EACyBD,OAAO,CAACE,CADjC,EACoCH,IAAI,CAACI,KAAL,EADpC,EACkDJ,IAAI,CAACK,MAAL,EADlD;AAGH;;;;EAlEmBpC,Q;;AAqExBC,QAAQ,CAACU,KAAT,GAAiBR,SAAjB;AAEA,eAAeA,SAAf","sourcesContent":["import PathNode from './path-node';\nimport NODE_MAP from './node-map';\nimport { createPromise } from '../util';\n\nclass ImageNode extends PathNode {\n    constructor(srcElement, cors) {\n        super(srcElement);\n\n        this.onLoad = this.onLoad.bind(this);\n        this.onError = this.onError.bind(this);\n\n        this.loading = createPromise();\n\n        const img = this.img = new Image();\n\n        if (cors && !(/^data:/i.test(srcElement.src()))) {\n            img.crossOrigin = cors;\n        }\n\n        img.src = srcElement.src();\n\n        if (img.complete) {\n            this.onLoad();\n        } else {\n            img.onload = this.onLoad;\n            img.onerror = this.onError;\n        }\n    }\n\n    renderTo(ctx) {\n        if (this.loading.state() === \"resolved\") {\n            ctx.save();\n\n            this.setTransform(ctx);\n            this.setClip(ctx);\n\n            this.drawImage(ctx);\n\n            ctx.restore();\n        }\n    }\n\n    optionsChange(e) {\n        if (e.field === \"src\") {\n            this.loading = createPromise();\n            this.img.src = this.srcElement.src();\n        } else {\n            super.optionsChange(e);\n        }\n    }\n\n    onLoad() {\n        this.loading.resolve();\n        this.invalidate();\n    }\n\n    onError() {\n        this.loading.reject(new Error(\n            \"Unable to load image '\" + this.img.src +\n            \"'. Check for connectivity and verify CORS headers.\"\n        ));\n    }\n\n    drawImage(ctx) {\n        const rect = this.srcElement.rect();\n        const topLeft = rect.topLeft();\n\n        ctx.drawImage(\n            this.img, topLeft.x, topLeft.y, rect.width(), rect.height()\n        );\n    }\n}\n\nNODE_MAP.Image = ImageNode;\n\nexport default ImageNode;"]},"metadata":{},"sourceType":"module"}