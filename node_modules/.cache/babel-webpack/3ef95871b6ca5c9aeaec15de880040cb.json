{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/Hung/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { PRECISION } from '../constants';\nimport { Class } from '../../common';\nimport { round } from '../../util';\n\nvar ComplexNumber = /*#__PURE__*/function (_Class) {\n  _inherits(ComplexNumber, _Class);\n\n  var _super = _createSuper(ComplexNumber);\n\n  function ComplexNumber() {\n    var _this;\n\n    var real = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var img = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, ComplexNumber);\n\n    _this = _super.call(this);\n    _this.real = real;\n    _this.img = img;\n    return _this;\n  }\n\n  _createClass(ComplexNumber, [{\n    key: \"add\",\n    value: function add(cNumber) {\n      return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n    }\n  }, {\n    key: \"addConstant\",\n    value: function addConstant(value) {\n      return new ComplexNumber(this.real + value, this.img);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return new ComplexNumber(-this.real, -this.img);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(cNumber) {\n      return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img, this.real * cNumber.img + this.img * cNumber.real);\n    }\n  }, {\n    key: \"multiplyConstant\",\n    value: function multiplyConstant(value) {\n      return new ComplexNumber(this.real * value, this.img * value);\n    }\n  }, {\n    key: \"nthRoot\",\n    value: function nthRoot(n) {\n      var rad = Math.atan2(this.img, this.real);\n      var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n      var nthR = Math.pow(r, 1 / n);\n      return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(cNumber) {\n      return this.real === cNumber.real && this.img === cNumber.img;\n    }\n  }, {\n    key: \"isReal\",\n    value: function isReal() {\n      return this.img === 0;\n    }\n  }]);\n\n  return ComplexNumber;\n}(Class);\n\nexport default ComplexNumber;","map":{"version":3,"sources":["/home/datquocngo/Project/Hung/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/geometry/math/complex-number.js"],"names":["PRECISION","Class","round","ComplexNumber","real","img","cNumber","value","n","rad","Math","atan2","r","sqrt","pow","nthR","cos","sin"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,YAAtB;;IAEMC,a;;;;;AAEF,2BAA+B;AAAA;;AAAA,QAAnBC,IAAmB,uEAAZ,CAAY;AAAA,QAATC,GAAS,uEAAH,CAAG;;AAAA;;AAC3B;AAEA,UAAKD,IAAL,GAAYA,IAAZ;AACA,UAAKC,GAAL,GAAWA,GAAX;AAJ2B;AAK9B;;;;wBAEGC,O,EAAS;AACT,aAAO,IAAIH,aAAJ,CAAkBD,KAAK,CAAC,KAAKE,IAAL,GAAYE,OAAO,CAACF,IAArB,EAA2BJ,SAA3B,CAAvB,EAA8DE,KAAK,CAAC,KAAKG,GAAL,GAAWC,OAAO,CAACD,GAApB,EAAyBL,SAAzB,CAAnE,CAAP;AACH;;;gCAEWO,K,EAAO;AACf,aAAO,IAAIJ,aAAJ,CAAkB,KAAKC,IAAL,GAAYG,KAA9B,EAAqC,KAAKF,GAA1C,CAAP;AACH;;;6BAEQ;AACL,aAAO,IAAIF,aAAJ,CAAkB,CAAC,KAAKC,IAAxB,EAA8B,CAAC,KAAKC,GAApC,CAAP;AACH;;;6BAEQC,O,EAAS;AACd,aAAO,IAAIH,aAAJ,CAAkB,KAAKC,IAAL,GAAYE,OAAO,CAACF,IAApB,GAA2B,KAAKC,GAAL,GAAWC,OAAO,CAACD,GAAhE,EACH,KAAKD,IAAL,GAAYE,OAAO,CAACD,GAApB,GAA0B,KAAKA,GAAL,GAAWC,OAAO,CAACF,IAD1C,CAAP;AAEH;;;qCAEgBG,K,EAAO;AACpB,aAAO,IAAIJ,aAAJ,CAAkB,KAAKC,IAAL,GAAYG,KAA9B,EAAqC,KAAKF,GAAL,GAAWE,KAAhD,CAAP;AACH;;;4BAEOC,C,EAAG;AACP,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKN,GAAhB,EAAqB,KAAKD,IAA1B,CAAZ;AACA,UAAMQ,CAAC,GAAGF,IAAI,CAACG,IAAL,CAAUH,IAAI,CAACI,GAAL,CAAS,KAAKT,GAAd,EAAmB,CAAnB,IAAwBK,IAAI,CAACI,GAAL,CAAS,KAAKV,IAAd,EAAoB,CAApB,CAAlC,CAAV;AACA,UAAMW,IAAI,GAAGL,IAAI,CAACI,GAAL,CAASF,CAAT,EAAY,IAAIJ,CAAhB,CAAb;AAEA,aAAO,IAAIL,aAAJ,CAAkBY,IAAI,GAAGL,IAAI,CAACM,GAAL,CAASP,GAAG,GAAGD,CAAf,CAAzB,EAA4CO,IAAI,GAAGL,IAAI,CAACO,GAAL,CAASR,GAAG,GAAGD,CAAf,CAAnD,CAAP,CALO,CAKuE;AACjF;;;2BAEMF,O,EAAS;AACZ,aAAO,KAAKF,IAAL,KAAcE,OAAO,CAACF,IAAtB,IAA8B,KAAKC,GAAL,KAAaC,OAAO,CAACD,GAA1D;AACH;;;6BAEQ;AACL,aAAO,KAAKA,GAAL,KAAa,CAApB;AACH;;;;EA5CuBJ,K;;AA+C5B,eAAeE,aAAf","sourcesContent":["import { PRECISION } from '../constants';\nimport { Class } from '../../common';\nimport { round } from '../../util';\n\nclass ComplexNumber extends Class {\n\n    constructor(real = 0, img = 0) {\n        super();\n\n        this.real = real;\n        this.img = img;\n    }\n\n    add(cNumber) {\n        return new ComplexNumber(round(this.real + cNumber.real, PRECISION), round(this.img + cNumber.img, PRECISION));\n    }\n\n    addConstant(value) {\n        return new ComplexNumber(this.real + value, this.img);\n    }\n\n    negate() {\n        return new ComplexNumber(-this.real, -this.img);\n    }\n\n    multiply(cNumber) {\n        return new ComplexNumber(this.real * cNumber.real - this.img * cNumber.img,\n            this.real * cNumber.img + this.img * cNumber.real);\n    }\n\n    multiplyConstant(value) {\n        return new ComplexNumber(this.real * value, this.img * value);\n    }\n\n    nthRoot(n) {\n        const rad = Math.atan2(this.img, this.real);\n        const r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));\n        const nthR = Math.pow(r, 1 / n);\n\n        return new ComplexNumber(nthR * Math.cos(rad / n), nthR * Math.sin(rad / n)); //Moivre's formula\n    }\n\n    equals(cNumber) {\n        return this.real === cNumber.real && this.img === cNumber.img;\n    }\n\n    isReal() {\n        return this.img === 0;\n    }\n}\n\nexport default ComplexNumber;"]},"metadata":{},"sourceType":"module"}