{"ast":null,"code":"import _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport GeometryCircle from '../geometry/circle';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport { defined } from '../util';\nvar DEFAULT_STROKE = \"#000\";\n\nvar Circle = /*#__PURE__*/function (_paintable) {\n  _inherits(Circle, _paintable);\n\n  var _super = _createSuper(Circle);\n\n  _createClass(Circle, [{\n    key: \"nodeType\",\n    get: function get() {\n      return \"Circle\";\n    }\n  }]);\n\n  function Circle() {\n    var _this;\n\n    var geometry = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new GeometryCircle();\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Circle);\n\n    _this = _super.call(this, options);\n\n    _this.geometry(geometry);\n\n    if (!defined(_this.options.stroke)) {\n      _this.stroke(DEFAULT_STROKE);\n    }\n\n    return _this;\n  }\n\n  _createClass(Circle, [{\n    key: \"rawBBox\",\n    value: function rawBBox() {\n      return this._geometry.bbox();\n    }\n  }, {\n    key: \"_bbox\",\n    value: function _bbox(matrix) {\n      return this._geometry.bbox(matrix);\n    }\n  }, {\n    key: \"_containsPoint\",\n    value: function _containsPoint(point) {\n      return this.geometry().containsPoint(point);\n    }\n  }, {\n    key: \"_isOnPath\",\n    value: function _isOnPath(point) {\n      return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    }\n  }]);\n\n  return Circle;\n}(paintable(measurable(withGeometry(Element))));\n\nexport default Circle;","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-drawing/dist/es2015/shapes/circle.js"],"names":["GeometryCircle","paintable","measurable","withGeometry","Element","defined","DEFAULT_STROKE","Circle","geometry","options","stroke","_geometry","bbox","matrix","point","containsPoint","_isOnPath","width"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,oBAA3B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,SAAxB;AAEA,IAAMC,cAAc,GAAG,MAAvB;;IAEMC,M;;;;;;;wBACa;AACX,aAAO,QAAP;AACH;;;AAED,oBAA2D;AAAA;;AAAA,QAA/CC,QAA+C,uEAApC,IAAIR,cAAJ,EAAoC;AAAA,QAAdS,OAAc,uEAAJ,EAAI;;AAAA;;AACvD,8BAAMA,OAAN;;AAEA,UAAKD,QAAL,CAAcA,QAAd;;AAEA,QAAI,CAACH,OAAO,CAAC,MAAKI,OAAL,CAAaC,MAAd,CAAZ,EAAmC;AAC/B,YAAKA,MAAL,CAAYJ,cAAZ;AACH;;AAPsD;AAQ1D;;;;8BAES;AACN,aAAO,KAAKK,SAAL,CAAeC,IAAf,EAAP;AACH;;;0BAEKC,M,EAAQ;AACV,aAAO,KAAKF,SAAL,CAAeC,IAAf,CAAoBC,MAApB,CAAP;AACH;;;mCAEcC,K,EAAO;AAClB,aAAO,KAAKN,QAAL,GAAgBO,aAAhB,CAA8BD,KAA9B,CAAP;AACH;;;8BAESA,K,EAAO;AACb,aAAO,KAAKN,QAAL,GAAgBQ,SAAhB,CAA0BF,KAA1B,EAAiC,KAAKL,OAAL,CAAaC,MAAb,CAAoBO,KAApB,GAA4B,CAA7D,CAAP;AACH;;;;EA7BgBhB,SAAS,CAACC,UAAU,CAACC,YAAY,CAACC,OAAD,CAAb,CAAX,C;;AAgC9B,eAAeG,MAAf","sourcesContent":["import GeometryCircle from '../geometry/circle';\nimport paintable from '../mixins/paintable';\nimport measurable from '../mixins/measurable';\nimport withGeometry from '../mixins/with-geometry';\nimport Element from './element';\nimport { defined } from '../util';\n\nconst DEFAULT_STROKE = \"#000\";\n\nclass Circle extends paintable(measurable(withGeometry(Element))) {\n    get nodeType() {\n        return \"Circle\";\n    }\n\n    constructor(geometry = new GeometryCircle(), options = {}) {\n        super(options);\n\n        this.geometry(geometry);\n\n        if (!defined(this.options.stroke)) {\n            this.stroke(DEFAULT_STROKE);\n        }\n    }\n\n    rawBBox() {\n        return this._geometry.bbox();\n    }\n\n    _bbox(matrix) {\n        return this._geometry.bbox(matrix);\n    }\n\n    _containsPoint(point) {\n        return this.geometry().containsPoint(point);\n    }\n\n    _isOnPath(point) {\n        return this.geometry()._isOnPath(point, this.options.stroke.width / 2);\n    }\n}\n\nexport default Circle;\n"]},"metadata":{},"sourceType":"module"}