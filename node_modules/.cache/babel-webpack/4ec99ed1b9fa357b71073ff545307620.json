{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _assertThisInitialized from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/datquocngo/Project/UET/gts-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nfunction _templateObject56() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\\u241F25bc8b86968819d3f687aa6dde652800bd4b6b2a\\u241F5462143714591662391:Increment\"]);\n\n  _templateObject56 = function _templateObject56() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject55() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\\u241F7f991d698abebb2e50570f9aef14126ae931c513\\u241F534533728304192410:Decrement\"]);\n\n  _templateObject55 = function _templateObject55() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject54() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\\u241F2c916ea2cbd37665e512219650c37dc17b9ef0c0\\u241F15438307630389352:Toggle Calendar\"]);\n\n  _templateObject54 = function _templateObject54() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject53() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterDateToday|The text of the Today button of the Date filter.\\u241F745058f85d92ee5228977277195262978828c4c8\\u241F1656723147090613075:TODAY\"]);\n\n  _templateObject53 = function _templateObject53() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject52() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\\u241Face0c0a58fbb211e8678efb3bd6ac9bb587144c3\\u241F6065477639036399169:Collapse Details\"]);\n\n  _templateObject52 = function _templateObject52() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject51() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.detailExpand|The title of the expand icon of detail rows.\\u241Fad6629bb6e79235623cfce486ef48087dbe96fb5\\u241F6952757249912226136:Expand Details\"]);\n\n  _templateObject51 = function _templateObject51() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject50() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\\u241F94d3b472d99994a5cca9930afd4cf0ac2774c382\\u241F4465838259914958827:Reset\"]);\n\n  _templateObject50 = function _templateObject50() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject49() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\\u241F04600bd6e362cf9da9f7f9c4666eab2c88eb6a90\\u241F34213208292862969:Apply\"]);\n\n  _templateObject49 = function _templateObject49() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject48() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\\u241F66e99ea340974022c07c52a6f668f5573e7edab0\\u241F5229177293891232538:Not Sorted\"]);\n\n  _templateObject48 = function _templateObject48() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject47() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortedDescending|The status announcement when a column is sorted descending\\u241F092a688d1b2b6d873bdc29beaaf43c3f45336581\\u241F8155280769473236383:Sorted Descending\"]);\n\n  _templateObject47 = function _templateObject47() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject46() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\\u241F947c64329461efd9f8a9aa2c51acbbd099170aa5\\u241F6275944032047713540:Sorted Ascending\"]);\n\n  _templateObject46 = function _templateObject46() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject45() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\\u241F208d0538d4c2537a1cbf456941e34a2884053d52\\u241F5605073536641230977:Sort Descending\"]);\n\n  _templateObject45 = function _templateObject45() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject44() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\\u241F96beffd8446c5455f3bbdc313c946db32df7dcc2\\u241F6297762560864270240:Sort Ascending\"]);\n\n  _templateObject44 = function _templateObject44() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject43() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.sortable|The label of the sort icon\\u241Fa692ba271be066ce379f942ff67094e1ea989f4c\\u241F3824304972336788145:Sortable\"]);\n\n  _templateObject43 = function _templateObject43() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject42() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.unlock|The text shown in the column menu for the unlock item\\u241Ff33355540003068372e39ba7f3def794869ea9f8\\u241F6968586378603932789:Unlock\"]);\n\n  _templateObject42 = function _templateObject42() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject41() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.lock|The text shown in the column menu for the lock item\\u241Ff356cae509dec3dc1b7156326b9a0328a79c62a8\\u241F5849203148124173556:Lock\"]);\n\n  _templateObject41 = function _templateObject41() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject40() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.columns|The text shown in the column menu for the columns item\\u241F9b841399fbb3d81f2401f98b4f4763834b72a1e5\\u241F5332162737795508854:Columns\"]);\n\n  _templateObject40 = function _templateObject40() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject39() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.columnMenu|The title of the column menu icon\\u241F3596c6b21d39223adc5c352daec9938474a8cc0d\\u241F2820335494528144626:Column Menu\"]);\n\n  _templateObject39 = function _templateObject39() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject38() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.loading|The loading text\\u241F781c049cc69efc30bc8053af9ace3cb4b04bd438\\u241F5425510787229531767:Loading\"]);\n\n  _templateObject38 = function _templateObject38() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject37() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterOrLogic|The text of the Or filter logic\\u241F04e64780de0fc1c3a9986997e0808ec53a5f2a63\\u241F1964926727342405367:Or\"]);\n\n  _templateObject37 = function _templateObject37() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject36() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterAndLogic|The text of the And filter logic\\u241Ff73fbcc2f813d469e4a34491950ca01ea1ac8f60\\u241F512662285155477884:And\"]);\n\n  _templateObject36 = function _templateObject36() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject35() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterClearButton|The text of the clear filter button\\u241F06e4e4dadede6f91f261cdbb7fb174246a135238\\u241F3031209415830321799:Clear\"]);\n\n  _templateObject35 = function _templateObject35() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject34() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterFilterButton|The text of the filter button\\u241F4f1c08d0b056646cdb668da669e2e15825adfe4d\\u241F5185263258022896121:Filter\"]);\n\n  _templateObject34 = function _templateObject34() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject33() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\\u241F27a6b29ffbc1eb498de8d7af20051461a2e842ec\\u241F6582064037090631388:Is before or equal to\"]);\n\n  _templateObject33 = function _templateObject33() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject32() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterBeforeOperator|The text of the before date filter operator\\u241F35ef5cf367670f15432c9f8761bc85fbdb2b1830\\u241F3348865631071358219:Is before\"]);\n\n  _templateObject32 = function _templateObject32() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject31() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterAfterOperator|The text of the after date filter operator\\u241Fbff777df0d0831cc02679227422fab4ef2763fa9\\u241F3078502182807244703:Is after\"]);\n\n  _templateObject31 = function _templateObject31() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject30() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\\u241Fd7dac1bbc2372d578a9d2bca099de766043aed7e\\u241F1964413288176201979:Is after or equal to\"]);\n\n  _templateObject30 = function _templateObject30() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject29() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\\u241F4da1456a62bafe2614ed2bc05a2c790a64a4dd0b\\u241F9215343856736761875:(All)\"]);\n\n  _templateObject29 = function _templateObject29() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\\u241F6d34731320e2536fd78f4a9e08f0b8dcd01edf3d\\u241F7759366406135608407:Is False\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\\u241Fd5f1e9028bc60c30e8f8e0f9cfeb872512446cea\\u241F2361673238316312251:Is True\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterLtOperator|The text of the less than filter operator\\u241Fc4d58f0e509cb7e37014715dd91546a724210d70\\u241F498627126459578706:Is less than\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterLteOperator|The text of the less than or equal filter operator\\u241Fe48d50a6422c616a00b95025adc5283aff4fa8cb\\u241F4840714404733417604:Is less than or equal to\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterGtOperator|The text of the greater than filter operator\\u241Fae68acc0e18252a348bdfb32112996d81e5305de\\u241F1527483349261806183:Is greater than\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\\u241F68471603db771d0304d02fe086da9701c16911c3\\u241F4542824413455511831:Is greater than or equal to\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\\u241Fa54b2ecffb41f0603ceedc7ea5a40b7d130e2fa1\\u241F3662435311670509156:Ends with\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\\u241Fbe06aa4fde7fa722c9de5a45f241ff595071d718\\u241F7331253838216904826:Does not contain\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterContainsOperator|The text of the contains filter operator\\u241F5b568a46d2e34ebde7dd53a7e599cbbb7dc6bae1\\u241F3831180413287131758:Contains\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\\u241Fda43b363b636156e3ccdbb64a0788bdeab51e992\\u241F6087783423599420507:Starts with\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\\u241Fdee7553c341248e90aef4a8e7438c52e667e68be\\u241F8245213618709258015:Is not empty\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\\u241Fa4e77e444b4e9b63851ac818e20136212b06c750\\u241F4762263229995523226:Is empty\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\\u241F70b39eeaf2674907b2e59b414baf17e032b464dc\\u241F8362279767336741540:Is not null\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterIsNullOperator|The text of the is null filter operator\\u241F078c50eb1fe8b2b43fcc40c5e7f4493152310c2f\\u241F1298299704757177797:Is null\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterNotEqOperator|The text of the not equal filter operator\\u241Fd46e14d35d89d2fadf5c852abf5557643510a013\\u241F8497658332767349737:Is not equal to\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filterEqOperator|The text of the equal filter operator\\u241F8b31e1604d10a2f8709dcb1ed5c237e33cffc135\\u241F4328959145426393682:Is equal to\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.filter|The label of the filter cell or icon\\u241F21a04b7b090dac60e0449cb6e435b7e879173c75\\u241F7977992299945497789:Filter\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\\u241F3331fe7ec45f299afaa4c1e08ea25c493eda9144\\u241F8838594644885628398:items per page\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\\u241Ff8bad8f2c7345e4fe531480e3034f7d3e954d383\\u241F2090461908134774363:Page Number\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerItems|The label after the total pages number in the Grid pager\\u241F7c1704d11bfb77340485acd891439c2b6c6616ca\\u241F700193548223931835:items\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerOf|The label before the total pages number in the Grid pager\\u241F0c9abe48f5d4bd2cb51846712e41864fc64aad6a\\u241F7004642096327889102:of\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerPage|The label before the current page number in the Grid pager\\u241F89c1f616c25bb610824cd8a26473a03921df48bd\\u241F5228228287003939680:Page\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerLastPage|The label for the last page button in Grid pager\\u241Ffe84f2ea868286ce03e50b6e55558c16d675c753\\u241F4539768510520419313:Go to the last page\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerNextPage|The label for the next page button in Grid pager\\u241F90031133fca899b4e491d9fc51128c1a184afb30\\u241F5510985262435270859:Go to the next page\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\\u241F47aa4fe05f5a2577d3336971d7c44ce48802b860\\u241F6745088753482690847:Go to the previous page\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\\u241Fb405dfc5ee42415daa08d54847d3010de1821111\\u241F5647145449685906398:Go to the first page\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.noRecords|The label visible in the Grid when there are no records\\u241Fff9cfd4bf3e40305db251f2b6961796c0550b4b0\\u241F1243399825085142134:No records available.\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\":kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\\u241F30bcb3a2fbc22fcab6ca805e74b90adb8ba1ae96\\u241F1430663748859427158:Drag a column header and drop it here to group by that column\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Injectable, InjectionToken, Directive, HostBinding, TemplateRef, Optional, QueryList, Input, ContentChildren, ContentChild, Component, forwardRef, SkipSelf, Host, NgZone, ChangeDetectorRef, Output, Inject, isDevMode, Renderer2, SecurityContext, ElementRef, ViewEncapsulation, ViewChild, ViewChildren, Self, ViewContainerRef, Pipe, NgModule, ComponentFactoryResolver, ChangeDetectionStrategy, HostListener } from '@angular/core';\nimport { DraggableDirective, isDocumentAvailable, Keys, isChanged, anyChanged, hasObservers, ResizeSensorComponent, DraggableModule, EventsModule, guid, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport { merge, of, fromEvent, Subject, Subscription, zip, from, interval, BehaviorSubject, Observable } from 'rxjs';\nimport { take, delay, auditTime, switchMap, map, distinctUntilChanged, filter, tap, throttleTime, takeUntil, switchMapTo, debounceTime, bufferCount } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { orderBy, process as _process, isCompositeFilterDescriptor, filterBy } from '@progress/kendo-data-query';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { getter } from '@progress/kendo-common';\nimport { DropDownListModule, AutoCompleteModule } from '@progress/kendo-angular-dropdowns';\nimport { InputsModule, NumericTextBoxComponent, NumericTextBoxModule } from '@progress/kendo-angular-inputs';\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { PDFMarginComponent, PDFTemplateDirective, PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { workbookOptions, toDataURL, ColumnBase, ExcelExportModule } from '@progress/kendo-angular-excel-export';\n/**\n * @hidden\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@progress/kendo-angular-common';\nimport * as ɵngcc3 from '@progress/kendo-angular-inputs';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@progress/kendo-angular-dropdowns';\nimport * as ɵngcc6 from '@progress/kendo-angular-dateinputs';\nvar _c0 = [\"lockedHeader\"];\nvar _c1 = [\"header\"];\nvar _c2 = [\"ariaRoot\"];\nvar _c3 = [\"footer\"];\n\nfunction GridComponent_kendo_grid_toolbar_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-toolbar\", 9);\n  }\n}\n\nfunction GridComponent_kendo_grid_group_panel_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-group-panel\", 10);\n    ɵngcc0.ɵɵlistener(\"change\", function GridComponent_kendo_grid_group_panel_3_Template_kendo_grid_group_panel_change_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.groupChange.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"text\", ctx_r1.groupableEmptyText)(\"groups\", ctx_r1.group);\n  }\n}\n\nfunction GridComponent_ng_template_6_div_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 22, 23);\n    ɵngcc0.ɵɵelementStart(2, \"table\", 24);\n    ɵngcc0.ɵɵelement(3, \"colgroup\", 19);\n    ɵngcc0.ɵɵelement(4, \"thead\", 25);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r11.lockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r11.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r11.lockedLeafColumns)(\"groups\", ctx_r11.group)(\"detailTemplate\", ctx_r11.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r11.resizable)(\"scrollable\", true)(\"columns\", ctx_r11.lockedColumns)(\"totalColumnLevels\", ctx_r11.totalColumnLevels)(\"sort\", ctx_r11.sort)(\"groups\", ctx_r11.group)(\"filter\", ctx_r11.filter)(\"filterable\", ctx_r11.filterable)(\"groupable\", ctx_r11.showGroupPanel)(\"reorderable\", ctx_r11.reorderable)(\"sortable\", ctx_r11.sortable)(\"columnMenu\", ctx_r11.columnMenuOptions)(\"columnMenuTemplate\", ctx_r11.columnMenuTemplate)(\"totalColumnsCount\", ctx_r11.leafColumns.length)(\"detailTemplate\", ctx_r11.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_6_div_0_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 26);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r13.columnsContainer.unlockedWidth, \"px\");\n  }\n}\n\nvar _c116 = function _c116() {\n  return [];\n};\n\nfunction GridComponent_ng_template_6_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtemplate(1, GridComponent_ng_template_6_div_0_div_1_Template, 5, 23, \"div\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 16, 17);\n    ɵngcc0.ɵɵelementStart(4, \"table\", 18);\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 19);\n    ɵngcc0.ɵɵelement(6, \"thead\", 20);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(7, GridComponent_ng_template_6_div_0_div_7_Template, 2, 2, \"div\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding\", ctx_r9.headerPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.isLocked);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r9.lockedLeafColumns.length)(\"lockedWidth\", ctx_r9.lockedWidth + ctx_r9.scrollbarWidth + 2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r9.nonLockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"virtualColumns\", ctx_r9.virtualColumns);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r9.headerLeafColumns)(\"groups\", ctx_r9.isLocked ? ɵngcc0.ɵɵpureFunction0(28, _c116) : ctx_r9.group)(\"detailTemplate\", ctx_r9.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r9.resizable)(\"scrollable\", true)(\"columns\", ctx_r9.headerColumns)(\"totalColumnLevels\", ctx_r9.totalColumnLevels)(\"sort\", ctx_r9.sort)(\"filter\", ctx_r9.filter)(\"filterable\", ctx_r9.filterable)(\"groupable\", ctx_r9.showGroupPanel)(\"reorderable\", ctx_r9.reorderable)(\"groups\", ctx_r9.isLocked ? ɵngcc0.ɵɵpureFunction0(29, _c116) : ctx_r9.group)(\"sortable\", ctx_r9.sortable)(\"columnMenu\", ctx_r9.columnMenuOptions)(\"columnMenuTemplate\", ctx_r9.columnMenuTemplate)(\"lockedColumnsCount\", ctx_r9.lockedLeafColumns.length)(\"totalColumnsCount\", ctx_r9.leafColumns.length)(\"detailTemplate\", ctx_r9.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.virtualColumns);\n  }\n}\n\nfunction GridComponent_ng_template_6_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 33);\n    ɵngcc0.ɵɵelementStart(1, \"table\", 34);\n    ɵngcc0.ɵɵelement(2, \"colgroup\", 31);\n    ɵngcc0.ɵɵelement(3, \"tfoot\", 35);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r15.lockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r15.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r15.lockedLeafColumns)(\"groups\", ctx_r15.group)(\"detailTemplate\", ctx_r15.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"scrollable\", true)(\"groups\", ctx_r15.group)(\"columns\", ctx_r15.lockedLeafColumns)(\"detailTemplate\", ctx_r15.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 27);\n    ɵngcc0.ɵɵtemplate(1, GridComponent_ng_template_6_div_2_div_1_Template, 4, 12, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 29, 30);\n    ɵngcc0.ɵɵelementStart(4, \"table\");\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 31);\n    ɵngcc0.ɵɵelement(6, \"tfoot\", 32);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"padding\", ctx_r10.headerPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r10.lockedLeafColumns.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx_r10.lockedLeafColumns.length)(\"lockedWidth\", ctx_r10.lockedWidth + ctx_r10.scrollbarWidth + 3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r10.nonLockedWidth, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r10.nonLockedLeafColumns)(\"groups\", ctx_r10.isLocked ? ɵngcc0.ɵɵpureFunction0(15, _c116) : ctx_r10.group)(\"detailTemplate\", ctx_r10.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"scrollable\", true)(\"groups\", ctx_r10.isLocked ? ɵngcc0.ɵɵpureFunction0(16, _c116) : ctx_r10.group)(\"columns\", ctx_r10.nonLockedLeafColumns)(\"lockedColumnsCount\", ctx_r10.lockedLeafColumns.length)(\"detailTemplate\", ctx_r10.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r18 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵtemplate(0, GridComponent_ng_template_6_div_0_Template, 8, 30, \"div\", 11);\n    ɵngcc0.ɵɵelementStart(1, \"kendo-grid-list\", 12);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function GridComponent_ng_template_6_Template_kendo_grid_list_pageChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r17 = ɵngcc0.ɵɵnextContext();\n      return ctx_r17.notifyPageChange(\"list\", $event);\n    })(\"scrollBottom\", function GridComponent_ng_template_6_Template_kendo_grid_list_scrollBottom_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r19 = ɵngcc0.ɵɵnextContext();\n      return ctx_r19.notifyScrollBottom();\n    })(\"contentScroll\", function GridComponent_ng_template_6_Template_kendo_grid_list_contentScroll_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r18);\n      var ctx_r20 = ɵngcc0.ɵɵnextContext();\n      return ctx_r20.contentScroll.emit($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, GridComponent_ng_template_6_div_2_Template, 7, 17, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.hideHeader);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r3.view)(\"rowHeight\", ctx_r3.rowHeight)(\"detailRowHeight\", ctx_r3.detailRowHeight)(\"total\", ctx_r3.totalCount)(\"take\", ctx_r3.pageSize)(\"groups\", ctx_r3.group)(\"groupable\", ctx_r3.groupable)(\"skip\", ctx_r3.skip)(\"trackBy\", ctx_r3.trackBy)(\"columns\", ctx_r3.columnsContainer)(\"selectable\", ctx_r3.selectable)(\"filterable\", ctx_r3.filterable)(\"detailTemplate\", ctx_r3.detailTemplate)(\"noRecordsTemplate\", ctx_r3.noRecordsTemplate)(\"rowClass\", ctx_r3.rowClass)(\"loading\", ctx_r3.loading)(\"isVirtual\", ctx_r3.isVirtual)(\"virtualColumns\", ctx_r3.virtualColumns)(\"enableDrag\", ctx_r3.marqueeSelection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r3.showFooter);\n  }\n}\n\nfunction GridComponent_ng_template_7_thead_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"thead\", 40);\n  }\n\n  if (rf & 2) {\n    var ctx_r21 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"resizable\", ctx_r21.resizable)(\"scrollable\", false)(\"columns\", ctx_r21.visibleColumns)(\"totalColumnLevels\", ctx_r21.totalColumnLevels)(\"groups\", ctx_r21.group)(\"groupable\", ctx_r21.showGroupPanel)(\"reorderable\", ctx_r21.reorderable)(\"sort\", ctx_r21.sort)(\"sortable\", ctx_r21.sortable)(\"filter\", ctx_r21.filter)(\"filterable\", ctx_r21.filterable)(\"columnMenu\", ctx_r21.columnMenuOptions)(\"columnMenuTemplate\", ctx_r21.columnMenuTemplate)(\"detailTemplate\", ctx_r21.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_7_tfoot_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tfoot\", 35);\n  }\n\n  if (rf & 2) {\n    var ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"scrollable\", false)(\"groups\", ctx_r22.group)(\"columns\", ctx_r22.leafColumns)(\"detailTemplate\", ctx_r22.detailTemplate);\n  }\n}\n\nfunction GridComponent_ng_template_7_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 41);\n  }\n}\n\nfunction GridComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"table\");\n    ɵngcc0.ɵɵelement(1, \"colgroup\", 31);\n    ɵngcc0.ɵɵtemplate(2, GridComponent_ng_template_7_thead_2_Template, 1, 14, \"thead\", 36);\n    ɵngcc0.ɵɵelement(3, \"tbody\", 37);\n    ɵngcc0.ɵɵtemplate(4, GridComponent_ng_template_7_tfoot_4_Template, 1, 4, \"tfoot\", 38);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, GridComponent_ng_template_7_div_5_Template, 1, 0, \"div\", 39);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"table-layout\", ctx_r4.resizable ? \"fixed\" : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r4.leafColumns)(\"groups\", ctx_r4.group)(\"detailTemplate\", ctx_r4.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideHeader);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"groups\", ctx_r4.group)(\"data\", ctx_r4.view)(\"skip\", ctx_r4.skip)(\"columns\", ctx_r4.leafColumns)(\"selectable\", ctx_r4.selectable)(\"filterable\", ctx_r4.filterable)(\"noRecordsTemplate\", ctx_r4.noRecordsTemplate)(\"detailTemplate\", ctx_r4.detailTemplate)(\"showGroupFooters\", ctx_r4.showGroupFooters)(\"trackBy\", ctx_r4.trackBy)(\"rowClass\", ctx_r4.rowClass)(\"enableDrag\", ctx_r4.marqueeSelection);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.showFooter);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.loading);\n  }\n}\n\nfunction GridComponent_kendo_pager_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-pager\", 42);\n    ɵngcc0.ɵɵlistener(\"pageChange\", function GridComponent_kendo_pager_8_Template_kendo_pager_pageChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      var ctx_r24 = ɵngcc0.ɵɵnextContext();\n      return ctx_r24.notifyPageChange(\"pager\", $event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r5.pagerTemplate)(\"pageSize\", ctx_r5.pageSize)(\"total\", ctx_r5.view.total)(\"skip\", ctx_r5.skip)(\"options\", ctx_r5.pageable);\n  }\n}\n\nfunction GridComponent_kendo_grid_toolbar_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-toolbar\", 43);\n  }\n}\n\nvar _c117 = [\"container\"];\nvar _c118 = [\"lockedContainer\"];\nvar _c119 = [\"lockedTable\"];\nvar _c120 = [\"table\"];\n\nvar _c121 = function _c121(a0, a1, a2, a3) {\n  return {\n    keydown: a0,\n    scroll: a1,\n    mousewheel: a2,\n    DOMMouseScroll: a3\n  };\n};\n\nfunction ListComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12, 13);\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"table\", 14, 15);\n    ɵngcc0.ɵɵelement(5, \"colgroup\", 6);\n    ɵngcc0.ɵɵelement(6, \"tbody\", 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(7, \"kendo-resize-sensor\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"div\", 9);\n    ɵngcc0.ɵɵelement(9, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction4(25, _c121, ctx_r0.lockedKeydown, ctx_r0.lockedScroll, ctx_r0.lockedMousewheel, ctx_r0.lockedMousewheel))(\"scope\", ctx_r0);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r0.lockedWidth, \"px\");\n    ɵngcc0.ɵɵproperty(\"locked\", true);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"columns\", ctx_r0.lockedLeafColumns)(\"detailTemplate\", ctx_r0.detailTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"groups\", ctx_r0.groups)(\"isLocked\", true)(\"data\", ctx_r0.data)(\"noRecordsText\", \"\")(\"columns\", ctx_r0.lockedLeafColumns)(\"totalColumnsCount\", ctx_r0.leafColumns.length)(\"detailTemplate\", ctx_r0.detailTemplate)(\"showGroupFooters\", ctx_r0.showFooter)(\"skip\", ctx_r0.skip)(\"selectable\", ctx_r0.selectable)(\"trackBy\", ctx_r0.trackBy)(\"filterable\", ctx_r0.filterable)(\"rowClass\", ctx_r0.rowClass);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r0.totalHeight, \"px\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_kendo_resize_sensor_9_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-resize-sensor\");\n  }\n}\n\nfunction ListComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 17);\n    ɵngcc0.ɵɵelement(1, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"width\", ctx_r5.totalWidth, \"px\");\n  }\n}\n\nfunction ListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 18);\n  }\n}\n\nvar _c122 = [\"kendoGridFilterRow\", \"\"];\n\nfunction FilterRowComponent_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FilterRowComponent_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 4);\n  }\n\n  if (rf & 2) {\n    var column_r4 = ctx.$implicit;\n    var columnIndex_r5 = ctx.index;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"column\", column_r4)(\"filter\", ctx_r2.filter)(\"logicalRowIndex\", ctx_r2.logicalRowIndex)(\"logicalColIndex\", ctx_r2.lockedColumnsCount + columnIndex_r5);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.filterLabel);\n  }\n}\n\nvar _c123 = [\"kendoGridFilterCell\", \"\"];\n\nfunction FilterCellComponent_ng_template_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FilterCellComponent_ng_template_0_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.column.filterCellTemplateRef)(\"ngTemplateOutletContext\", ctx_r3.templateContext);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FilterCellComponent_ng_template_0_ng_container_2_1_Template, 1, 2, undefined, 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.column.filterCellTemplateRef);\n  }\n}\n\nfunction FilterCellComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 1);\n    ɵngcc0.ɵɵtemplate(1, FilterCellComponent_ng_template_0_ng_container_1_Template, 2, 2, \"ng-container\", 2);\n    ɵngcc0.ɵɵtemplate(2, FilterCellComponent_ng_template_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r0.hasTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n  }\n}\n\nvar _c124 = [\"*\"];\nvar _c125 = [\"dropdown\"];\n\nvar _c126 = function _c126() {\n  return {\n    width: \"auto\"\n  };\n};\n\nfunction FilterCellOperatorsComponent_kendo_dropdownlist_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3, 4);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onChange($event);\n    })(\"keydown\", function FilterCellOperatorsComponent_kendo_dropdownlist_0_Template_kendo_dropdownlist_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.dropdownKeydown($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r0.operators)(\"value\", ctx_r0.value)(\"valuePrimitive\", true)(\"popupSettings\", ɵngcc0.ɵɵpureFunction0(4, _c126));\n  }\n}\n\nvar _c127 = function _c127(a0) {\n  return {\n    \"k-clear-button-visible\": a0\n  };\n};\n\nvar _c128 = [\"kendoGridColGroup\", \"\"];\n\nfunction ColGroupComponent_ng_template_0_col_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-col\", true);\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_col_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-col\", true);\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"col\");\n  }\n\n  if (rf & 2) {\n    var column_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵstyleProp(\"width\", column_r5.width, \"px\");\n  }\n}\n\nfunction ColGroupComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ColGroupComponent_ng_template_0_col_0_Template, 1, 2, \"col\", 1);\n    ɵngcc0.ɵɵtemplate(1, ColGroupComponent_ng_template_0_col_1_Template, 1, 2, \"col\", 2);\n    ɵngcc0.ɵɵtemplate(2, ColGroupComponent_ng_template_0_col_2_Template, 1, 2, \"col\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnsToRender)(\"ngForTrackBy\", ctx_r0.trackBy);\n  }\n}\n\nvar _c129 = [\"kendoGridLoading\", \"\"];\n\nfunction PagerComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.template.templateRef)(\"ngTemplateOutletContext\", ctx_r0.templateContext);\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_prev_buttons_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-prev-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_numeric_buttons_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-numeric-buttons\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"buttonCount\", ctx_r3.settings.buttonCount);\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-input\");\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_next_buttons_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-next-buttons\");\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_info_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-info\");\n  }\n}\n\nfunction PagerComponent_ng_container_1_kendo_pager_page_sizes_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-pager-page-sizes\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"pageSizes\", ctx_r7.settings.pageSizes);\n  }\n}\n\nfunction PagerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, PagerComponent_ng_container_1_kendo_pager_prev_buttons_1_Template, 1, 0, \"kendo-pager-prev-buttons\", 1);\n    ɵngcc0.ɵɵtemplate(2, PagerComponent_ng_container_1_kendo_pager_numeric_buttons_2_Template, 1, 1, \"kendo-pager-numeric-buttons\", 3);\n    ɵngcc0.ɵɵtemplate(3, PagerComponent_ng_container_1_kendo_pager_input_3_Template, 1, 0, \"kendo-pager-input\", 1);\n    ɵngcc0.ɵɵtemplate(4, PagerComponent_ng_container_1_kendo_pager_next_buttons_4_Template, 1, 0, \"kendo-pager-next-buttons\", 1);\n    ɵngcc0.ɵɵtemplate(5, PagerComponent_ng_container_1_kendo_pager_info_5_Template, 1, 0, \"kendo-pager-info\", 1);\n    ɵngcc0.ɵɵtemplate(6, PagerComponent_ng_container_1_kendo_pager_page_sizes_6_Template, 1, 1, \"kendo-pager-page-sizes\", 4);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.previousNext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.type === \"numeric\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.type === \"input\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.previousNext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.info);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.settings.pageSizes);\n  }\n}\n\nvar _c130 = function _c130(a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"k-pager-first\": true\n  };\n};\n\nvar _c131 = function _c131() {\n  return {\n    \"k-icon\": true,\n    \"k-i-seek-w\": true\n  };\n};\n\nvar _c132 = function _c132(a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"\": true\n  };\n};\n\nvar _c133 = function _c133() {\n  return {\n    \"k-icon\": true,\n    \"k-i-arrow-w\": true\n  };\n};\n\nvar _c134 = function _c134() {\n  return {\n    \"k-icon\": true,\n    \"k-i-arrow-e\": true\n  };\n};\n\nvar _c135 = function _c135(a2) {\n  return {\n    \"k-link\": true,\n    \"k-pager-nav\": true,\n    \"k-state-disabled\": a2,\n    \"k-pager-last\": true\n  };\n};\n\nvar _c136 = function _c136() {\n  return {\n    \"k-icon\": true,\n    \"k-i-seek-e\": true\n  };\n};\n\nfunction PagerNumericButtonsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_1_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.changePage(ctx_r3.start - 2);\n    });\n    ɵngcc0.ɵɵtext(2, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.pageLabel(ctx_r0.start - 1));\n  }\n}\n\nvar _c137 = function _c137(a1) {\n  return {\n    \"k-link\": true,\n    \"k-state-selected\": a1\n  };\n};\n\nfunction PagerNumericButtonsComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_2_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r7);\n      var num_r5 = ctx.$implicit;\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.changePage(num_r5 - 1);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var num_r5 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c137, ctx_r1.currentPage == num_r5));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1.pageLabel(num_r5));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", num_r5, \" \");\n  }\n}\n\nfunction PagerNumericButtonsComponent_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"click\", function PagerNumericButtonsComponent_li_3_Template_a_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.changePage(ctx_r8.end);\n    });\n    ɵngcc0.ɵɵtext(2, \"...\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2.pageLabel(ctx_r2.end + 1));\n  }\n}\n\nvar _c138 = function _c138() {\n  return {\n    \"k-pager-numbers\": true,\n    \"k-reset\": true\n  };\n};\n\nvar _c139 = function _c139() {\n  return {\n    \"k-pager-input\": true,\n    \"k-label\": true\n  };\n};\n\nvar _c140 = function _c140(a0, a1) {\n  return {\n    keydown: a0,\n    focusout: a1\n  };\n};\n\nfunction PagerPageSizesComponent_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r1.pageSize);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.pageSize);\n  }\n}\n\nfunction PagerPageSizesComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 5);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var page_r3 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r2.getValue(page_r3))(\"selected\", ctx_r2.getSelectedState(page_r3));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r3[\"text\"], \" \");\n  }\n}\n\nvar _c141 = [\"kendoGridGroupHeader\", \"\"];\n\nfunction GroupHeaderComponent_ng_template_0_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 4);\n  }\n}\n\nfunction GroupHeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, GroupHeaderComponent_ng_template_0_td_0_Template, 1, 0, \"td\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.prefixGroupCell(ctx_r0.item));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r6.groupTitle(ctx_r6.item), \": \", ɵngcc0.ɵɵpipeBind3(1, 2, ctx_r6.item.data, \"value\", ctx_r6.formatForGroup(ctx_r6.item)), \" \");\n  }\n}\n\nfunction GroupHeaderComponent_td_1_ng_template_2_ng_template_2_Template(rf, ctx) {}\n\nvar _c142 = function _c142(a0, a1) {\n  return {\n    \"k-i-collapse\": a0,\n    \"k-i-expand\": a1\n  };\n};\n\nvar _c143 = function _c143(a0, a1, a2, a3, a4, a5, a6, a7) {\n  return {\n    templateRef: a0,\n    group: a1,\n    aggregates: a2,\n    value: a3,\n    field: a4,\n    index: a5,\n    expanded: a6,\n    $implicit: a7\n  };\n};\n\nfunction GroupHeaderComponent_td_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function GroupHeaderComponent_td_1_ng_template_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r8.toggleGroup(ctx_r8.item);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_td_1_ng_template_2_ng_template_1_Template, 2, 6, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c142, ctx_r5.isExpanded, !ctx_r5.isExpanded));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.groupHeaderTemplate(ctx_r5.item));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction8(6, _c143, ctx_r5.groupHeaderTemplate(ctx_r5.item), ctx_r5.item.data, ctx_r5.item.data == null ? null : ctx_r5.item.data.aggregates, ctx_r5.item.data == null ? null : ctx_r5.item.data.value, ctx_r5.item.data == null ? null : ctx_r5.item.data.field, ctx_r5.item.index, ctx_r5.isExpanded, ctx_r5.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"p\", 6);\n    ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_td_1_ng_template_2_Template, 3, 15, \"ng-template\", 0);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r1.logicalRowIndex)(\"logicalColIndex\", 0)(\"logicalSlaveCell\", ctx_r1.skipGroupDecoration)(\"groupItem\", ctx_r1.item)(\"colSpan\", ctx_r1.logicalColSpan());\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.groupSpan(ctx_r1.item))(\"role\", ctx_r1.ariaRole())(\"aria-expanded\", ctx_r1.isExpanded);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.skipGroupDecoration);\n  }\n}\n\nvar _c144 = function _c144(a0, a1, a2, a3, a4, a5) {\n  return {\n    group: a0,\n    aggregates: a1,\n    value: a2,\n    field: a3,\n    index: a4,\n    $implicit: a5\n  };\n};\n\nfunction GroupHeaderComponent_ng_container_2_td_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 12);\n  }\n\n  if (rf & 2) {\n    var column_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", column_r11.groupHeaderColumnTemplateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction6(2, _c144, ctx_r13.item.data, ctx_r13.item.data == null ? null : ctx_r13.item.data.aggregates, ctx_r13.item.data == null ? null : ctx_r13.item.data.value, ctx_r13.item.data == null ? null : ctx_r13.item.data.field, ctx_r13.item.index, ctx_r13.item.data));\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 10);\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_ng_container_1_Template, 1, 9, \"ng-container\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r11 = ctx.$implicit;\n    var index_r12 = ctx.index;\n    var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r10.logicalRowIndex)(\"logicalColIndex\", index_r12 + 1)(\"logicalSlaveCell\", false)(\"groupItem\", ctx_r10.item)(\"colSpan\", 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", column_r11.groupHeaderColumnTemplateRef);\n  }\n}\n\nfunction GroupHeaderComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_ng_container_2_td_1_Template, 2, 6, \"td\", 9);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.groupHeaderColumns);\n  }\n}\n\nvar _c145 = function _c145() {\n  return {\n    lastTarget: true\n  };\n};\n\nfunction GroupPanelComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction0(2, _c145));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.text, \" \");\n  }\n}\n\nvar _c146 = function _c146(a0) {\n  return {\n    field: a0\n  };\n};\n\nvar _c147 = function _c147(a0, a2) {\n  return {\n    field: a0,\n    type: \"groupIndicator\",\n    hint: a2\n  };\n};\n\nfunction GroupPanelComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"directionChange\", function GroupPanelComponent_div_1_Template_div_directionChange_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.directionChange($event);\n    })(\"remove\", function GroupPanelComponent_div_1_Template_div_remove_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.remove($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var group_r3 = ctx.$implicit;\n    var index_r4 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction1(5, _c146, group_r3.field));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"enableDrag\", true)(\"context\", ɵngcc0.ɵɵpureFunction2(7, _c147, group_r3.field, ctx_r1.groupTitles[index_r4]))(\"group\", group_r3)(\"groupTitle\", ctx_r1.groupTitles[index_r4]);\n  }\n}\n\nfunction GroupPanelComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵtext(1, \"\\xA0\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵproperty(\"context\", ɵngcc0.ɵɵpureFunction0(1, _c145));\n  }\n}\n\nvar _c148 = [\"kendoGroupIndicator\", \"\"];\nvar _c149 = [\"kendoGridHeader\", \"\"];\n\nfunction HeaderComponent_ng_template_0_tr_0_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 7);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"th\", 8);\n  }\n\n  if (rf & 2) {\n    var levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", 0);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_kendo_grid_filter_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-filter-menu\", 15);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r15 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"filter\", ctx_r15.filter);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_kendo_grid_column_menu_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-column-menu\", 16);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r16.columnMenu)(\"column\", column_r10)(\"columnMenuTemplate\", ctx_r16.columnMenuTemplate)(\"sort\", ctx_r16.sort)(\"filter\", ctx_r16.filter)(\"sortable\", ctx_r16.sortable);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_ng_template_0_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nvar _c150 = function _c150(a0, a1, a2, a3) {\n  return {\n    templateRef: a0,\n    columnIndex: a1,\n    column: a2,\n    $implicit: a3\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_ng_template_0_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(2, _c150, column_r10.headerTemplateRef, column_r10.leafIndex, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_ng_template_2_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    var ctx_r30 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r30.sortOrder(column_r10.field));\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r35 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 18, 19);\n    ɵngcc0.ɵɵlistener(\"click\", function HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_Template_span_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r35);\n\n      var _r27 = ɵngcc0.ɵɵreference(1);\n\n      var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n      var ctx_r33 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r33.onSortClick(column_r10, $event, _r27);\n    });\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_ng_template_3_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵelement(4, \"span\", 20);\n    ɵngcc0.ɵɵtemplate(5, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_span_5_Template, 2, 1, \"span\", 21);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(6, \"span\", 22);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r18 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(6, _c150, column_r10.headerTemplateRef, column_r10.leafIndex, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r18.sortIcon(column_r10.field));\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r18.sortableLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r18.showSortNumbering(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", ctx_r18.sortStatus(column_r10), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 24);\n    ɵngcc0.ɵɵelement(1, \"label\", 25);\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(5);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r19.selectAllCheckboxId());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r19.selectAllCheckboxId());\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 26);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"columns\", ctx_r20.columns);\n  }\n}\n\nvar _c151 = function _c151(a0, a2, a3, a4) {\n  return {\n    field: a0,\n    type: \"column\",\n    column: a2,\n    hint: a3,\n    lastColumn: a4\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r40 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"th\", 11);\n    ɵngcc0.ɵɵlistener(\"keydown\", function HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template_th_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r40);\n      var column_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r38 = ɵngcc0.ɵɵnextContext(3);\n      return ctx_r38.onHeaderKeydown(column_r10, $event);\n    });\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_kendo_grid_filter_menu_1_Template, 1, 2, \"kendo-grid-filter-menu\", 12);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_kendo_grid_column_menu_2_Template, 1, 7, \"kendo-grid-column-menu\", 13);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_3_Template, 2, 7, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(4, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_4_Template, 7, 11, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(5, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_ng_template_5_Template, 2, 2, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(6, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_span_6_Template, 1, 2, \"span\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r41 = ɵngcc0.ɵɵnextContext();\n    var column_r10 = ctx_r41.$implicit;\n    var columnIndex_r11 = ctx_r41.index;\n    var last_r12 = ctx_r41.last;\n    var levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"k-filterable\", ctx_r13.showFilterMenu && ctx_r13.isFilterable(column_r10) || ctx_r13.showColumnMenu(column_r10))(\"k-first\", ctx_r13.isFirstOnRow(column_r10, columnIndex_r11));\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", ctx_r13.logicalColumnIndex(column_r10))(\"colSpan\", column_r10.colspan)(\"rowSpan\", column_r10.rowspan(ctx_r13.totalColumnLevels))(\"enableDrag\", ctx_r13.shouldActivate(column_r10))(\"context\", ɵngcc0.ɵɵpureFunction4(21, _c151, column_r10.field, column_r10, column_r10.title || column_r10.field, last_r12 && columnIndex_r11 === 0))(\"ngClass\", column_r10.headerClass)(\"ngStyle\", column_r10.headerStyle);\n    ɵngcc0.ɵɵattribute(\"aria-sort\", ctx_r13.sortState(column_r10))(\"rowspan\", column_r10.rowspan(ctx_r13.totalColumnLevels))(\"colspan\", column_r10.colspan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.showFilterMenu && ctx_r13.isFilterable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.showColumnMenu(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r13.isSortable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.isSortable(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.isCheckboxColumn(column_r10) && !column_r10.headerTemplateRef && column_r10.showSelectAll);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13.resizable);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_kendo_grid_column_menu_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-column-menu\", 29);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r43 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"standalone\", false)(\"settings\", ctx_r43.columnMenu)(\"column\", column_r10)(\"columnMenuTemplate\", ctx_r43.columnMenuTemplate);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_2_Template(rf, ctx) {}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    ɵngcc0.ɵɵtextInterpolate(column_r10.displayTitle);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 26);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    var ctx_r46 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"column\", column_r10)(\"columns\", ctx_r46.columns);\n  }\n}\n\nvar _c152 = function _c152(a1, a2, a3) {\n  return {\n    type: \"columnGroup\",\n    column: a1,\n    hint: a2,\n    lastColumn: a3\n  };\n};\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 27);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_kendo_grid_column_menu_1_Template, 1, 4, \"kendo-grid-column-menu\", 28);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_2_Template, 0, 0, \"ng-template\", 17);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_ng_template_3_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(4, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_span_4_Template, 1, 2, \"span\", 14);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r50 = ɵngcc0.ɵɵnextContext();\n    var column_r10 = ctx_r50.$implicit;\n    var columnIndex_r11 = ctx_r50.index;\n    var last_r12 = ctx_r50.last;\n    var levelIndex_r4 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"k-first\", ctx_r14.isFirstOnRow(column_r10, columnIndex_r11))(\"k-filterable\", ctx_r14.showColumnMenu(column_r10));\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalColIndex\", ctx_r14.logicalColumnIndex(column_r10))(\"rowSpan\", column_r10.rowspan(ctx_r14.totalColumnLevels))(\"colSpan\", column_r10.colspan)(\"enableDrag\", ctx_r14.shouldActivate(column_r10))(\"context\", ɵngcc0.ɵɵpureFunction3(18, _c152, column_r10, column_r10.title, last_r12 && columnIndex_r11 === 0))(\"ngClass\", column_r10.headerClass)(\"ngStyle\", column_r10.headerStyle);\n    ɵngcc0.ɵɵattribute(\"rowspan\", column_r10.rowspan(ctx_r14.totalColumnLevels))(\"colspan\", column_r10.colspan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.showColumnMenu(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(22, _c150, column_r10.headerTemplateRef, ctx_r14.lockedColumnsCount + columnIndex_r11, column_r10, column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !column_r10.headerTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.resizable);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_0_Template, 7, 26, \"th\", 9);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_ng_template_3_th_1_Template, 5, 27, \"th\", 10);\n  }\n\n  if (rf & 2) {\n    var column_r10 = ctx.$implicit;\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r7.isColumnGroupComponent(column_r10));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r7.isColumnGroupComponent(column_r10));\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_0_th_1_Template, 1, 0, \"th\", 4);\n    ɵngcc0.ɵɵtemplate(2, HeaderComponent_ng_template_0_tr_0_th_2_Template, 1, 2, \"th\", 5);\n    ɵngcc0.ɵɵtemplate(3, HeaderComponent_ng_template_0_tr_0_ng_template_3_Template, 2, 2, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var levelIndex_r4 = ctx.index;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", levelIndex_r4)(\"logicalSlaveRow\", ctx_r1.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r1.columns.length)(\"logicalSlaveCellsCount\", ctx_r1.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.detailTemplate == null ? null : ctx_r1.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.columnsForLevel(levelIndex_r4))(\"ngForTrackBy\", ctx_r1.trackByIndex);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 30);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r2.leafColumns)(\"filter\", ctx_r2.filter)(\"groups\", ctx_r2.groups)(\"detailTemplate\", ctx_r2.detailTemplate)(\"lockedColumnsCount\", ctx_r2.lockedColumnsCount)(\"logicalRowIndex\", ctx_r2.totalColumnLevels + 1)(\"logicalSlaveRow\", ctx_r2.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r2.columns.length)(\"logicalSlaveCellsCount\", ctx_r2.unlockedColumnsCount);\n  }\n}\n\nfunction HeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_tr_0_Template, 4, 8, \"tr\", 1);\n    ɵngcc0.ɵɵtemplate(1, HeaderComponent_ng_template_0_tr_1_Template, 1, 9, \"tr\", 2);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnLevels);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showFilterRow);\n  }\n}\n\nfunction FilterMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 4);\n    ɵngcc0.ɵɵlistener(\"close\", function FilterMenuComponent_ng_template_3_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.close();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r2.column)(\"filter\", ctx_r2.filter);\n  }\n}\n\nvar _c153 = function _c153(a1) {\n  return {\n    \"k-grid-filter\": true,\n    \"k-state-active\": a1\n  };\n};\n\nfunction FilterMenuContainerComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementContainer(1, 7);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"filterService\", ctx_r0.childService)(\"column\", ctx_r0.column)(\"filter\", ctx_r0.childFilter);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\n\nfunction FilterMenuContainerComponent_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, FilterMenuContainerComponent_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.column.filterMenuTemplateRef)(\"ngTemplateOutletContext\", ctx_r2.templateContext);\n  }\n}\n\nfunction FilterMenuContainerComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, FilterMenuContainerComponent_ng_container_4_1_Template, 1, 2, undefined, 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.filterMenuTemplateRef);\n  }\n}\n\nfunction StringFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function StringFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function NumericFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"format\", ctx_r1.format)(\"decimals\", ctx_r1.decimals)(\"spinners\", ctx_r1.spinners)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"step\", ctx_r1.step);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_dropdownlist_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 3);\n    ɵngcc0.ɵɵlistener(\"valueChange\", function DateFilterMenuComponent_kendo_dropdownlist_1_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.logicChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"data\", ctx_r0.logicOperators)(\"valuePrimitive\", true)(\"value\", ctx_r0.filter == null ? null : ctx_r0.filter.logic);\n  }\n}\n\nfunction DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"operators\", ctx_r1.operators)(\"currentFilter\", ctx_r1.secondFilter)(\"filterService\", ctx_r1.filterService)(\"column\", ctx_r1.column)(\"filter\", ctx_r1.filter)(\"activeView\", ctx_r1.activeView)(\"bottomView\", ctx_r1.bottomView)(\"topView\", ctx_r1.topView)(\"format\", ctx_r1.format)(\"formatPlaceholder\", ctx_r1.formatPlaceholder)(\"placeholder\", ctx_r1.placeholder)(\"min\", ctx_r1.min)(\"max\", ctx_r1.max)(\"weekNumber\", ctx_r1.weekNumber);\n  }\n}\n\nfunction BooleanFilterMenuComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"li\");\n    ɵngcc0.ɵɵelementStart(1, \"input\", 2);\n    ɵngcc0.ɵɵlistener(\"change\", function BooleanFilterMenuComponent_li_1_Template_input_change_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var item_r1 = ctx.$implicit;\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onChange(item_r1.value);\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"label\", 3);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"name\", ctx_r0.idPrefix)(\"checked\", ctx_r0.isSelected(item_r1.value));\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r0.radioId(item_r1.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r0.radioId(item_r1.value));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(item_r1.text);\n  }\n}\n\nfunction ColumnListComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"label\", 3);\n    ɵngcc0.ɵɵelement(1, \"input\", 4);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 5);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r2 = ctx.$implicit;\n    var index_r3 = ctx.index;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"checked\", !column_r2.hidden)(\"disabled\", ctx_r0.isDisabled(column_r2));\n    ɵngcc0.ɵɵattribute(\"data-index\", index_r3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(column_r2.displayTitle);\n  }\n}\n\nfunction ColumnListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnListComponent_div_2_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.cancelChanges();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function ColumnListComponent_div_2_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.applyChanges();\n    });\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r1.actionsClass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.resetText);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.applyText);\n  }\n}\n\nfunction ColumnChooserComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"span\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"kendo-grid-columnlist\", 5);\n    ɵngcc0.ɵɵlistener(\"apply\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_apply_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onApply($event);\n    })(\"columnChange\", function ColumnChooserComponent_ng_template_3_Template_kendo_grid_columnlist_columnChange_2_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.localization.get(\"columns\"));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r2.columns)(\"applyText\", ctx_r2.localization.get(\"columnsApply\"))(\"resetText\", ctx_r2.localization.get(\"columnsReset\"))(\"autoSync\", ctx_r2.autoSync)(\"allowHideAll\", ctx_r2.allowHideAll);\n  }\n}\n\nfunction ColumnMenuChooserComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnlist\", 2);\n    ɵngcc0.ɵɵlistener(\"apply\", function ColumnMenuChooserComponent_ng_template_1_Template_kendo_grid_columnlist_apply_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.onApply($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"applyText\", ctx_r0.localization.get(\"columnsApply\"))(\"resetText\", ctx_r0.localization.get(\"columnsReset\"))(\"columns\", ctx_r0.columns)(\"autoSync\", false)(\"allowHideAll\", false)(\"actionsClass\", ctx_r0.actionsClass);\n  }\n}\n\nfunction ColumnMenuFilterComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-container\", 2);\n    ɵngcc0.ɵɵlistener(\"close\", function ColumnMenuFilterComponent_ng_template_1_Template_kendo_grid_filter_menu_container_close_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.close();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"column\", ctx_r0.service.column)(\"filter\", ctx_r0.service.filter)(\"actionsClass\", ctx_r0.actionsClass);\n  }\n}\n\nfunction ColumnMenuItemComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0.iconClass);\n  }\n}\n\nfunction ColumnMenuItemComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵelementContainer(1, 5);\n    ɵngcc0.ɵɵelement(2, \"div\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@state\", ctx_r1.contentState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate.templateRef);\n  }\n}\n\nvar _c154 = function _c154(a0, a1) {\n  return {\n    service: a0,\n    column: a1\n  };\n};\n\nfunction ColumnMenuComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r3 = ɵngcc0.ɵɵreference(6);\n\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.column.columnMenuTemplateRef || ctx_r2.columnMenuTemplate || _r3)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c154, ctx_r2.service, ctx_r2.column));\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-sort\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r5.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-grid-columnmenu-lock\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r6.service);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-chooser\", 9);\n    ɵngcc0.ɵɵlistener(\"expand\", function ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_2_Template_kendo_grid_columnmenu_chooser_expand_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.onColumnsExpand();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r7.service)(\"expanded\", ctx_r7.expandedColumns);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-filter\", 9);\n    ɵngcc0.ɵɵlistener(\"expand\", function ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_3_Template_kendo_grid_columnmenu_filter_expand_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onFilterExpand();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"service\", ctx_r8.service)(\"expanded\", ctx_r8.expandedFilter);\n  }\n}\n\nfunction ColumnMenuComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_sort_0_Template, 1, 1, \"kendo-grid-columnmenu-sort\", 6);\n    ɵngcc0.ɵɵtemplate(1, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_lock_1_Template, 1, 1, \"kendo-grid-columnmenu-lock\", 6);\n    ɵngcc0.ɵɵtemplate(2, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_chooser_2_Template, 1, 2, \"kendo-grid-columnmenu-chooser\", 7);\n    ɵngcc0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_5_kendo_grid_columnmenu_filter_3_Template, 1, 2, \"kendo-grid-columnmenu-filter\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasSort);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasLock);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasColumnChooser);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.hasFilter);\n  }\n}\n\nvar _c155 = function _c155(a0) {\n  return {\n    \"k-state-active\": a0\n  };\n};\n\nvar _c156 = [\"kendoGridTableBody\", \"\"];\n\nfunction TableBodyComponent_ng_template_0_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 7);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_0_ng_template_1_td_0_Template, 1, 0, \"td\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 8);\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r4.addRowLogicalIndex())(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 9);\n  }\n\n  if (rf & 2) {\n    var column_r8 = ctx.$implicit;\n    var columnIndex_r9 = ctx.index;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"rowIndex\", -1)(\"columnIndex\", ctx_r5.lockedColumnsCount + columnIndex_r9)(\"isNew\", true)(\"column\", column_r8)(\"dataItem\", ctx_r5.newDataItem)(\"ngClass\", column_r8.cssClass)(\"ngStyle\", column_r8.style)(\"logicalRowIndex\", ctx_r5.addRowLogicalIndex())(\"logicalColIndex\", ctx_r5.logicalColIndex(column_r8))(\"colSpan\", column_r8.colspan);\n    ɵngcc0.ɵɵattribute(\"colspan\", column_r8.colspan);\n  }\n}\n\nfunction TableBodyComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 3);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_0_td_2_Template, 1, 2, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_0_td_3_Template, 1, 11, \"td\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r0.addRowLogicalIndex())(\"logicalSlaveRow\", ctx_r0.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r0.columns.length)(\"logicalSlaveCellsCount\", ctx_r0.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columns)(\"ngForTrackBy\", ctx_r0.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_tr_1_ng_template_2_Template(rf, ctx) {}\n\nfunction TableBodyComponent_tr_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r11.noRecordsText, \" \");\n  }\n}\n\nvar _c157 = function _c157(a0) {\n  return {\n    templateRef: a0\n  };\n};\n\nfunction TableBodyComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"td\");\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_tr_1_ng_template_2_Template, 0, 0, \"ng-template\", 11);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_tr_1_ng_container_3_Template, 2, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r1.colSpan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef)(\"templateContext\", ɵngcc0.ɵɵpureFunction1(4, _c157, ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx_r1.noRecordsTemplate == null ? null : ctx_r1.noRecordsTemplate.templateRef));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tr\", 17);\n  }\n\n  if (rf & 2) {\n    var ctx_r18 = ɵngcc0.ɵɵnextContext();\n    var item_r12 = ctx_r18.$implicit;\n    var rowIndex_r13 = ctx_r18.index;\n    var ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"columns\", ctx_r14.columns)(\"groups\", ctx_r14.groups)(\"item\", item_r12)(\"hasDetails\", ctx_r14.detailTemplate == null ? null : ctx_r14.detailTemplate.templateRef)(\"skipGroupDecoration\", ctx_r14.skipGroupDecoration)(\"hasGroupHeaderColumn\", ctx_r14.hasGroupHeaderColumn)(\"groupHeaderColumns\", ctx_r14.groupHeaderColumns)(\"rowIndex\", rowIndex_r13 + 1)(\"totalColumnsCount\", ctx_r14.totalColumnsCount)(\"logicalRowIndex\", ctx_r14.logicalRowIndex(rowIndex_r13))(\"logicalSlaveRow\", ctx_r14.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r14.columns.length)(\"logicalSlaveCellsCount\", ctx_r14.groupHeaderSlaveCellsCount);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 7);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_1_ng_template_1_td_0_Template, 1, 0, \"td\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r19 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r19.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r27 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r27);\n      var item_r12 = ɵngcc0.ɵɵnextContext(3).$implicit;\n      var ctx_r25 = ɵngcc0.ɵɵnextContext();\n      return ctx_r25.toggleRow(item_r12.index, item_r12.data);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r12 = ɵngcc0.ɵɵnextContext(3).$implicit;\n    var ctx_r24 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r24.detailButtonStyles(item_r12));\n    ɵngcc0.ɵɵattribute(\"title\", ctx_r24.detailButtonTitle(item_r12));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 21);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_td_2_a_1_Template, 1, 2, \"a\", 22);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r29 = ɵngcc0.ɵɵnextContext(2);\n    var rowIndex_r13 = ctx_r29.index;\n    var item_r12 = ctx_r29.$implicit;\n    var ctx_r20 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r20.logicalRowIndex(rowIndex_r13))(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r12.index)(\"dataItem\", item_r12.data)(\"detailExpandCell\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r20.detailTemplate.showIf(item_r12.data, item_r12.index));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_1_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 24);\n  }\n\n  if (rf & 2) {\n    var column_r30 = ctx.$implicit;\n    var columnIndex_r31 = ctx.index;\n    var ctx_r32 = ɵngcc0.ɵɵnextContext(2);\n    var item_r12 = ctx_r32.$implicit;\n    var rowIndex_r13 = ctx_r32.index;\n    var ctx_r21 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-grid-edit-cell\", ctx_r21.isEditingCell(item_r12.index, column_r30))(\"k-state-selected\", ctx_r21.cellSelectionService.isCellSelected(item_r12, column_r30));\n    ɵngcc0.ɵɵproperty(\"rowIndex\", item_r12.index)(\"columnIndex\", ctx_r21.lockedColumnsCount + columnIndex_r31)(\"column\", column_r30)(\"dataItem\", item_r12.data)(\"logicalRowIndex\", ctx_r21.logicalRowIndex(rowIndex_r13))(\"logicalColIndex\", ctx_r21.logicalColIndex(column_r30))(\"dataRowIndex\", item_r12.index)(\"dataItem\", item_r12.data)(\"colIndex\", columnIndex_r31)(\"colSpan\", column_r30.colspan)(\"ngClass\", column_r30.cssClass)(\"ngStyle\", column_r30.style);\n    ɵngcc0.ɵɵattribute(\"data-kendo-grid-column-index\", ctx_r21.lockedColumnsCount + columnIndex_r31)(\"colspan\", column_r30.colspan);\n  }\n}\n\nvar _c158 = function _c158(a0, a1) {\n  return {\n    dataItem: a0,\n    index: a1\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 18);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_1_td_2_Template, 2, 6, \"td\", 19);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_1_td_3_Template, 1, 18, \"td\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r33 = ɵngcc0.ɵɵnextContext();\n    var item_r12 = ctx_r33.$implicit;\n    var rowIndex_r13 = ctx_r33.index;\n    var ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-alt\", ctx_r15.isOdd(item_r12))(\"k-master-row\", ctx_r15.detailTemplate == null ? null : ctx_r15.detailTemplate.templateRef)(\"k-grid-edit-row\", ctx_r15.isEditingRow(item_r12.index))(\"k-state-selected\", ctx_r15.isSelectable() && ctx_r15.isRowSelected(item_r12));\n    ɵngcc0.ɵɵproperty(\"dataRowIndex\", item_r12.index)(\"dataItem\", item_r12.data)(\"logicalRowIndex\", ctx_r15.logicalRowIndex(rowIndex_r13))(\"logicalSlaveRow\", ctx_r15.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r15.columns.length)(\"logicalSlaveCellsCount\", ctx_r15.unlockedColumnsCount)(\"ngClass\", ctx_r15.rowClass(ɵngcc0.ɵɵpureFunction2(20, _c158, item_r12.data, item_r12.index)));\n    ɵngcc0.ɵɵattribute(\"data-kendo-grid-item-index\", item_r12.index);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r15.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r15.detailTemplate == null ? null : ctx_r15.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r15.columns)(\"ngForTrackBy\", ctx_r15.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 30);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_2_ng_template_4_Template(rf, ctx) {}\n\nvar _c159 = function _c159(a0, a1, a2) {\n  return {\n    dataItem: a0,\n    rowIndex: a1,\n    $implicit: a2\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 25);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_2_td_1_Template, 1, 0, \"td\", 26);\n    ɵngcc0.ɵɵelement(2, \"td\", 27);\n    ɵngcc0.ɵɵelementStart(3, \"td\", 28);\n    ɵngcc0.ɵɵtemplate(4, TableBodyComponent_ng_template_2_tr_2_ng_template_4_Template, 0, 0, \"ng-template\", 29);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r37 = ɵngcc0.ɵɵnextContext();\n    var item_r12 = ctx_r37.$implicit;\n    var rowIndex_r13 = ctx_r37.index;\n    var ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-alt\", ctx_r16.isOdd(item_r12));\n    ɵngcc0.ɵɵproperty(\"dataRowIndex\", item_r12.index)(\"dataItem\", item_r12.data)(\"logicalRowIndex\", ctx_r16.logicalRowIndex(rowIndex_r13) + 1)(\"logicalSlaveRow\", false)(\"logicalCellsCount\", 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r16.groups);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r16.logicalRowIndex(rowIndex_r13) + 1)(\"logicalColIndex\", 0)(\"dataRowIndex\", item_r12.index)(\"dataItem\", item_r12.data)(\"colIndex\", 0)(\"colSpan\", ctx_r16.allColumnsSpan + 1);\n    ɵngcc0.ɵɵattribute(\"colspan\", ctx_r16.columnsSpan);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.detailTemplate.templateRef)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(17, _c159, item_r12.data, item_r12.index, item_r12.data));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_ng_template_1_td_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 30);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_3_ng_template_1_td_0_Template, 1, 0, \"td\", 26);\n  }\n\n  if (rf & 2) {\n    var ctx_r38 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r38.groups);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\", 8);\n  }\n\n  if (rf & 2) {\n    var rowIndex_r13 = ɵngcc0.ɵɵnextContext(2).index;\n    var ctx_r39 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r39.logicalRowIndex(rowIndex_r13))(\"logicalColIndex\", 0);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_3_ng_template_1_Template(rf, ctx) {}\n\nvar _c160 = function _c160(a0, a1, a2, a3, a4, a5) {\n  return {\n    templateRef: a0,\n    group: a1,\n    field: a2,\n    column: a3,\n    aggregates: a4,\n    $implicit: a5\n  };\n};\n\nfunction TableBodyComponent_ng_template_2_tr_3_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 33);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_3_td_3_ng_template_1_Template, 0, 0, \"ng-template\", 34);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r44 = ctx.$implicit;\n    var ctx_r47 = ɵngcc0.ɵɵnextContext(2);\n    var rowIndex_r13 = ctx_r47.index;\n    var item_r12 = ctx_r47.$implicit;\n    var ctx_r40 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r40.logicalRowIndex(rowIndex_r13))(\"logicalColIndex\", ctx_r40.logicalColIndex(column_r44));\n    ɵngcc0.ɵɵattribute(\"data-skip\", ctx_r40.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction6(4, _c160, column_r44.groupFooterTemplateRef, item_r12.data, column_r44.field, column_r44, item_r12.data == null ? null : item_r12.data.aggregates, item_r12.data == null ? null : item_r12.data.aggregates));\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", 31);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_3_ng_template_1_Template, 1, 1, \"ng-template\", 0);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_3_td_2_Template, 1, 2, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_3_td_3_Template, 2, 11, \"td\", 32);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var rowIndex_r13 = ɵngcc0.ɵɵnextContext().index;\n    var ctx_r17 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"logicalRowIndex\", ctx_r17.logicalRowIndex(rowIndex_r13))(\"logicalSlaveRow\", ctx_r17.lockedColumnsCount > 0)(\"logicalCellsCount\", ctx_r17.columns.length)(\"logicalSlaveCellsCount\", ctx_r17.unlockedColumnsCount);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.skipGroupDecoration);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r17.detailTemplate == null ? null : ctx_r17.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r17.footerColumns)(\"ngForTrackBy\", ctx_r17.trackByColumns);\n  }\n}\n\nfunction TableBodyComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_2_tr_0_Template, 1, 13, \"tr\", 13);\n    ɵngcc0.ɵɵtemplate(1, TableBodyComponent_ng_template_2_tr_1_Template, 4, 23, \"tr\", 14);\n    ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_tr_2_Template, 5, 21, \"tr\", 15);\n    ɵngcc0.ɵɵtemplate(3, TableBodyComponent_ng_template_2_tr_3_Template, 4, 8, \"tr\", 16);\n  }\n\n  if (rf & 2) {\n    var item_r12 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isGroup(item_r12) && ctx_r2.isParentGroupExpanded(item_r12) && ctx_r2.showGroupHeader(item_r12));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r12) && ctx_r2.isInExpandedGroup(item_r12));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isDataItem(item_r12) && ctx_r2.isInExpandedGroup(item_r12) && (ctx_r2.detailTemplate == null ? null : ctx_r2.detailTemplate.templateRef) && ctx_r2.detailTemplate.showIf(item_r12.data, item_r12.index) && ctx_r2.isExpanded(item_r12));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r2.isFooter(item_r12) && (ctx_r2.isInExpandedGroup(item_r12) || ctx_r2.showGroupFooters && ctx_r2.isParentGroupExpanded(item_r12)) && !item_r12.data.hideFooter);\n  }\n}\n\nvar _c161 = [\"kendoGridCell\", \"\"];\n\nfunction CellComponent_ng_container_1_ng_template_1_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_1_ng_template_2_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    var childColumn_r7 = ctx.$implicit;\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind3(1, 1, ctx_r6.dataItem, childColumn_r7.field, childColumn_r7.format), \" \");\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_1_ng_template_2_ng_template_0_Template, 2, 5, \"ng-template\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3.childColumns);\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵpipe(1, \"valueOf\");\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(1, 1, ctx_r4.dataItem, ctx_r4.column.field, ctx_r4.column.format));\n  }\n}\n\nfunction CellComponent_ng_container_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 5);\n    ɵngcc0.ɵɵelement(1, \"label\", 6);\n  }\n\n  if (rf & 2) {\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"kendoGridSelectionCheckbox\", ctx_r5.rowIndex);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r5.selectionCheckboxId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r5.selectionCheckboxId);\n  }\n}\n\nfunction CellComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_ng_template_1_Template, 0, 0, \"ng-template\", 2);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_1_ng_template_2_Template, 1, 1, \"ng-template\", 3);\n    ɵngcc0.ɵɵtemplate(3, CellComponent_ng_container_1_ng_template_3_Template, 2, 5, \"ng-template\", 3);\n    ɵngcc0.ɵɵtemplate(4, CellComponent_ng_container_1_ng_template_4_Template, 2, 3, \"ng-template\", 3);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.column.templateRef)(\"ngTemplateOutlet\", ctx_r0.column.templateRef)(\"ngTemplateOutletContext\", ctx_r0.templateContext);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isSpanColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isBoundColumn);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.isCheckboxColumn && !ctx_r0.isNew);\n  }\n}\n\nfunction CellComponent_ng_container_2_1_ng_template_0_Template(rf, ctx) {}\n\nfunction CellComponent_ng_container_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CellComponent_ng_container_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r8.column.editTemplateRef)(\"ngTemplateOutletContext\", ctx_r8.editTemplateContext);\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-numerictextbox\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"format\", ctx_r11.format)(\"formControl\", ctx_r11.formGroup.get(ctx_r11.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"kendo-datepicker\", 13);\n  }\n\n  if (rf & 2) {\n    var ctx_r12 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"format\", ctx_r12.format)(\"formControl\", ctx_r12.formGroup.get(ctx_r12.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 14);\n  }\n\n  if (rf & 2) {\n    var ctx_r13 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r13.formGroup.get(ctx_r13.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 15);\n  }\n\n  if (rf & 2) {\n    var ctx_r14 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"formControl\", ctx_r14.formGroup.get(ctx_r14.column.field));\n  }\n}\n\nfunction CellComponent_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_2_ng_container_2_kendo_numerictextbox_1_Template, 1, 2, \"kendo-numerictextbox\", 10);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_kendo_datepicker_2_Template, 1, 2, \"kendo-datepicker\", 10);\n    ɵngcc0.ɵɵtemplate(3, CellComponent_ng_container_2_ng_container_2_input_3_Template, 1, 1, \"input\", 11);\n    ɵngcc0.ɵɵtemplate(4, CellComponent_ng_container_2_ng_container_2_input_4_Template, 1, 1, \"input\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r9.column.editor);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n  }\n}\n\nfunction CellComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_2_1_Template, 1, 2, undefined, 7);\n    ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_ng_container_2_Template, 5, 4, \"ng-container\", 8);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.column.editTemplateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.column.editTemplateRef);\n  }\n}\n\nvar _c162 = [\"kendoGridFooter\", \"\"];\n\nfunction FooterComponent_ng_template_0_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-group-cell\", true);\n  }\n}\n\nfunction FooterComponent_ng_template_0_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"td\");\n  }\n\n  if (rf & 2) {\n    ɵngcc0.ɵɵclassProp(\"k-hierarchy-cell\", true);\n  }\n}\n\nfunction FooterComponent_ng_template_0_td_3_ng_template_1_Template(rf, ctx) {}\n\nfunction FooterComponent_ng_template_0_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtemplate(1, FooterComponent_ng_template_0_td_3_ng_template_1_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var column_r5 = ctx.$implicit;\n    var columnIndex_r6 = ctx.index;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", column_r5.footerClass)(\"ngStyle\", column_r5.footerStyle);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"templateContext\", ɵngcc0.ɵɵpureFunction4(3, _c150, column_r5.footerTemplateRef, ctx_r3.lockedColumnsCount + columnIndex_r6, column_r5, column_r5));\n  }\n}\n\nfunction FooterComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, FooterComponent_ng_template_0_td_1_Template, 1, 2, \"td\", 1);\n    ɵngcc0.ɵɵtemplate(2, FooterComponent_ng_template_0_td_2_Template, 1, 2, \"td\", 2);\n    ɵngcc0.ɵɵtemplate(3, FooterComponent_ng_template_0_td_3_Template, 2, 8, \"td\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"k-footer-template\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.groups);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.detailTemplate == null ? null : ctx_r0.detailTemplate.templateRef);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.columnsToRender);\n  }\n}\n\nfunction ToolbarComponent_0_ng_template_0_Template(rf, ctx) {}\n\nfunction ToolbarComponent_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, ToolbarComponent_0_ng_template_0_Template, 0, 0, \"ng-template\", 1);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.toolbarTemplateRef)(\"ngTemplateOutletContext\", ctx_r0.context);\n  }\n}\n\nvar DomEventsService = function DomEventsService() {\n  _classCallCheck(this, DomEventsService);\n\n  this.cellClick = new EventEmitter();\n  this.cellMousedown = new EventEmitter();\n  this.cellMouseup = new EventEmitter();\n  this.click = new EventEmitter();\n  this.keydown = new EventEmitter();\n  this.focus = new EventEmitter();\n  this.focusIn = new EventEmitter();\n  this.focusOut = new EventEmitter();\n  this.windowBlur = new EventEmitter();\n};\n\nDomEventsService.ɵfac = function DomEventsService_Factory(t) {\n  return new (t || DomEventsService)();\n};\n\nDomEventsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsService,\n  factory: DomEventsService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DomEventsService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar EMPTY_REGEX = /^\\s*$/;\n/**\n * @hidden\n */\n\nvar isPresent = function isPresent(value) {\n  return value !== null && value !== undefined;\n};\n/**\n * @hidden\n */\n\n\nvar isBlank = function isBlank(value) {\n  return value === null || value === undefined;\n};\n/**\n * @hidden\n */\n\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n};\n/**\n * @hidden\n */\n\n\nvar isTruthy = function isTruthy(value) {\n  return !!value;\n};\n/**\n * @hidden\n */\n\n\nvar isNullOrEmptyString = function isNullOrEmptyString(value) {\n  return isBlank(value) || EMPTY_REGEX.test(value);\n};\n/**\n * @hidden\n */\n\n\nvar observe = function observe(list) {\n  return merge(of(list), list.changes);\n};\n/**\n * @hidden\n */\n\n\nvar isUniversal = function isUniversal() {\n  return typeof document === 'undefined';\n};\n/**\n * @hidden\n */\n\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n/**\n * @hidden\n */\n\n\nvar isNumber = function isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n};\n/**\n * @hidden\n */\n\n\nvar extractFormat = function extractFormat(format) {\n  if (isString(format) && !isNullOrEmptyString(format) && format.startsWith('{0:')) {\n    return format.slice(3, format.length - 1);\n  }\n\n  return format;\n};\n/**\n * @hidden\n */\n\n\nvar not = function not(fn) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return !fn.apply(null, args);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar or = function or() {\n  for (var _len2 = arguments.length, conditions = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    conditions[_key2] = arguments[_key2];\n  }\n\n  return function (value) {\n    return conditions.reduce(function (acc, x) {\n      return acc || x(value);\n    }, false);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar and = function and() {\n  for (var _len3 = arguments.length, conditions = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    conditions[_key3] = arguments[_key3];\n  }\n\n  return function (value) {\n    return conditions.reduce(function (acc, x) {\n      return acc && x(value);\n    }, true);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar Skip = new InjectionToken(\"Skip\"); // tslint:disable-line:variable-name\n\n/**\n * @hidden\n */\n\nvar createPromise = function createPromise() {\n  var resolveFn, rejectFn;\n  var promise = new Promise(function (resolve, reject) {\n    resolveFn = function resolveFn(data) {\n      resolve(data);\n      return promise;\n    };\n\n    rejectFn = function rejectFn(data) {\n      reject(data);\n      return promise;\n    };\n  });\n  promise.resolve = resolveFn;\n  promise.reject = rejectFn;\n  return promise;\n};\n/** @hidden */\n\n\nvar iterator = getIterator(); // TODO: Move to kendo-common\n\nfunction getIterator() {\n  if (typeof Symbol === 'function' && Symbol.iterator) {\n    return Symbol.iterator;\n  }\n\n  var keys = Object.getOwnPropertyNames(Map.prototype);\n  var proto = Map.prototype;\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (key !== 'entries' && key !== 'size' && proto[key] === proto.entries) {\n      return key;\n    }\n  }\n}\n\nvar FRAME_DURATION = 1000 / 60;\nvar wnd = typeof window !== 'undefined' ? window : {};\n/** @hidden */\n\nvar requestAnimationFrame = wnd.requestAnimationFrame || wnd.msRequestAnimationFrame || function (callback) {\n  return setTimeout(callback, FRAME_DURATION);\n};\n/** @hidden */\n\n\nvar cancelAnimationFrame = wnd.cancelAnimationFrame || wnd.msCancelRequestAnimationFrame || clearTimeout;\n/**\n * @hidden\n */\n\nvar LocalDataChangesService = function LocalDataChangesService() {\n  _classCallCheck(this, LocalDataChangesService);\n\n  this.changes = new EventEmitter();\n};\n\nLocalDataChangesService.ɵfac = function LocalDataChangesService_Factory(t) {\n  return new (t || LocalDataChangesService)();\n};\n\nLocalDataChangesService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: LocalDataChangesService,\n  factory: LocalDataChangesService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LocalDataChangesService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar SelectionService = /*#__PURE__*/function () {\n  function SelectionService(domEvents, localDataChangesService) {\n    _classCallCheck(this, SelectionService);\n\n    this.domEvents = domEvents;\n    this.localDataChangesService = localDataChangesService;\n    this.changes = new EventEmitter();\n    this.lastSelectionStartIndex = 0;\n    this.currentSelection = [];\n    this.selectAllChecked = false;\n    this.active = false;\n    this.dragging = false;\n    this.addSubscriptions();\n  }\n\n  _createClass(SelectionService, [{\n    key: \"init\",\n    value: function init(settings) {\n      this.settings = settings;\n      this.currentSelection = [];\n\n      if (settings.selectable && settings.selectable.enabled !== false) {\n        var iterator$$1 = this.getIterator();\n        this._selectAllState = true;\n        var item = iterator$$1.next();\n\n        while (!item.done) {\n          if (item.value && item.value.type === \"data\") {\n            var rowArgs = {\n              dataItem: item.value.data,\n              index: item.value.index\n            };\n\n            if (settings.rowSelected(rowArgs)) {\n              this.currentSelection[item.value.index] = rowArgs;\n            } else {\n              this._selectAllState = undefined;\n            }\n          }\n\n          item = iterator$$1.next();\n        }\n\n        if (this.currentSelection.length === 0) {\n          this._selectAllState = false;\n        }\n      }\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(index) {\n      if (this.settings && this.active) {\n        return this.options.enabled && isPresent(this.currentSelection[index]);\n      }\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(item, event) {\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      }\n\n      var ev;\n      var ctrlKey = event.ctrlKey || event.metaKey;\n\n      if (this.options.mode === \"single\" && ctrlKey && this.isSelected(item.index)) {\n        ev = this.toggle(item);\n      } else if (this.options.mode === \"multiple\") {\n        if (ctrlKey && !event.shiftKey) {\n          ev = this.toggle(item);\n        } else if (event.shiftKey) {\n          ev = this.addAllTo(item, ctrlKey);\n        }\n      }\n\n      if (!isPresent(ev)) {\n        ev = this.select(item);\n        this.currentSelection[item.index] = {\n          dataItem: item.data,\n          index: item.index\n        };\n      }\n\n      if (!ev.selectedRows.length && !ev.deselectedRows.length) {\n        return;\n      }\n\n      ev.ctrlKey = ctrlKey;\n      ev.shiftKey = event.shiftKey;\n      this.changes.emit(ev);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(item) {\n      var selectedRows = [];\n      var deselectedRows = [];\n      this.lastSelectionStartIndex = item.index;\n      var rowArgs = {\n        dataItem: item.data,\n        index: item.index\n      };\n\n      if (this.isSelected(item.index)) {\n        deselectedRows.push(rowArgs);\n      } else {\n        selectedRows.push(rowArgs);\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n  }, {\n    key: \"toggleByIndex\",\n    value: function toggleByIndex(index) {\n      var iterator$$1 = this.getIterator();\n\n      if (this.selectAllChecked && this.isSelected(index)) {\n        this.selectAllChecked = false;\n      }\n\n      var item = iterator$$1.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.index === index) {\n          var itemToToggle = {\n            data: item.value.data,\n            index: item.value.index\n          };\n\n          if (this.isSelected(index) || this.options.mode === \"multiple\") {\n            return this.toggle(itemToToggle);\n          } else {\n            return this.select(itemToToggle);\n          }\n        }\n\n        item = iterator$$1.next();\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      var deselectedRows = [];\n      var selectedRows = [];\n      this.lastSelectionStartIndex = item.index;\n\n      if (!this.isSelected(item.index)) {\n        selectedRows.push({\n          dataItem: item.data,\n          index: item.index\n        });\n      }\n\n      this.currentSelection.forEach(function (row) {\n        if (row.index !== item.index) {\n          deselectedRows.push(row);\n        }\n      });\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    } //Used to manually deselect removed items\n\n  }, {\n    key: \"deselect\",\n    value: function deselect(removedItem) {\n      var iterator$$1 = this.getIterator();\n      var item = iterator$$1.next();\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n          var rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n\n          if (this.isSelected(rowArgs.index)) {\n            var ev = {\n              ctrlKey: false,\n              deselectedRows: [rowArgs],\n              selectedRows: []\n            };\n            this.changes.emit(ev);\n          }\n        }\n\n        item = iterator$$1.next();\n      }\n    }\n  }, {\n    key: \"addAllTo\",\n    value: function addAllTo(item, ctrlKey) {\n      var selectedRows = [];\n      var deselectedRows = [];\n      var start = Math.min(this.lastSelectionStartIndex, item.index);\n      var end = Math.max(this.lastSelectionStartIndex, item.index);\n      var iterator$$1 = this.getIterator();\n      var next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          var idx = next.value.index;\n          var rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if ((idx < start || idx > end) && this.isSelected(idx) && !ctrlKey) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (idx >= start && idx <= end && !this.isSelected(idx)) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n  }, {\n    key: \"updateAll\",\n    value: function updateAll(selectAllChecked) {\n      this.selectAllChecked = selectAllChecked;\n      var selectedRows = [];\n      var deselectedRows = [];\n      var iterator$$1 = this.getIterator();\n      var next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          var idx = next.value.index;\n          var rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if (this.isSelected(idx) && !selectAllChecked) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (!this.isSelected(idx) && selectAllChecked) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      if (!selectedRows.length && !deselectedRows.length) {\n        return;\n      }\n\n      var ev = {\n        ctrlKey: true,\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows,\n        shiftKey: true\n      };\n      this.changes.emit(ev);\n    }\n  }, {\n    key: \"selectRange\",\n    value: function selectRange(startIndex, endIndex) {\n      var selectedRows = [];\n      var deselectedRows = [];\n      var start = Math.min(startIndex, endIndex);\n      var end = Math.max(startIndex, endIndex);\n      var iterator$$1 = this.getIterator();\n      var next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          var idx = next.value.index;\n          var rowArgs = {\n            dataItem: next.value.data,\n            index: idx\n          };\n\n          if ((idx < start || idx > end) && this.isSelected(idx)) {\n            deselectedRows.push(rowArgs);\n          }\n\n          if (idx >= start && idx <= end && !this.isSelected(idx)) {\n            selectedRows.push(rowArgs);\n          }\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedRows: deselectedRows,\n        selectedRows: selectedRows\n      };\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeSubscriptions();\n    }\n  }, {\n    key: \"targetArgs\",\n    value: function targetArgs() {\n      return {\n        index: this.mouseDownEventArgs.rowIndex,\n        dataItem: this.mouseDownEventArgs.dataItem\n      };\n    }\n  }, {\n    key: \"addSubscriptions\",\n    value: function addSubscriptions() {\n      var _this = this;\n\n      if (!this.cellClickSubscription) {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe(function (args) {\n          if (_this.options.enabled && !_this.options.checkboxOnly && args.type !== 'contextmenu') {\n            if (_this.active) {\n              _this.handleClick({\n                index: args.rowIndex,\n                data: args.dataItem\n              }, args.originalEvent);\n            }\n          }\n        });\n      }\n\n      if (!this.mousedownSubscription) {\n        this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(function (args) {\n          _this.mouseDownEventArgs = args;\n\n          if (_this.options.enabled && (!_this.options.mode || _this.options.mode === \"multiple\") && !_this.options.checkboxOnly && args.originalEvent.shiftKey) {\n            if (_this.active) {\n              args.originalEvent.preventDefault();\n            }\n          }\n        });\n      }\n\n      if (this.localDataChangesService && !this.dataChangedSubscription) {\n        this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(function (args) {\n          if (_this.active) {\n            if (isPresent(args.action) && args.action === 'remove') {\n              _this.deselect(args.item);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      var accessor = this.settings.view.accessor();\n\n      if (!accessor) {\n        return;\n      }\n\n      return accessor[iterator]();\n    }\n  }, {\n    key: \"removeSubscriptions\",\n    value: function removeSubscriptions() {\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n        this.cellClickSubscription = null;\n      }\n\n      if (this.mousedownSubscription) {\n        this.mousedownSubscription.unsubscribe();\n        this.mousedownSubscription = null;\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n        this.dataChangedSubscription = null;\n      }\n    }\n  }, {\n    key: \"enableMarquee\",\n    get: function get() {\n      var checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n      if (!this.settings || checkboxOnly) {\n        return false;\n      }\n\n      var selectableSettings = this.settings.selectable;\n      var dragAndMultiple = typeof selectableSettings === 'object' && selectableSettings.mode === 'multiple' && !selectableSettings.checkboxOnly && selectableSettings.drag;\n      return this.active && dragAndMultiple;\n    }\n  }, {\n    key: \"selectAllState\",\n    get: function get() {\n      return this._selectAllState;\n    }\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this.currentSelection.map(function (item) {\n        return item.index;\n      }).filter(function (n) {\n        return typeof n === \"number\";\n      });\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      var defaultOptions = {\n        checkboxOnly: false,\n        enabled: true,\n        mode: \"multiple\"\n      };\n\n      if (!isPresent(this.settings)) {\n        return defaultOptions;\n      }\n\n      if (typeof this.settings.selectable === 'boolean') {\n        return {\n          checkboxOnly: false,\n          enabled: this.settings.selectable,\n          mode: \"multiple\"\n        };\n      } else {\n        return Object.assign(defaultOptions, this.settings.selectable);\n      }\n    }\n  }]);\n\n  return SelectionService;\n}();\n\nSelectionService.ɵfac = function SelectionService_Factory(t) {\n  return new (t || SelectionService)(ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(LocalDataChangesService));\n};\n\nSelectionService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SelectionService,\n  factory: SelectionService.ɵfac\n});\n/** @nocollapse */\n\nSelectionService.ctorParameters = function () {\n  return [{\n    type: DomEventsService\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DomEventsService\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar CellSelectionService = /*#__PURE__*/function () {\n  function CellSelectionService(domEvents, localDataChangesService) {\n    _classCallCheck(this, CellSelectionService);\n\n    this.domEvents = domEvents;\n    this.localDataChangesService = localDataChangesService;\n    this.changes = new EventEmitter();\n    this.mouseUpEvent = new EventEmitter();\n    this.currentSelection = [];\n    this.active = false;\n    this.dragging = false;\n    this.dragSelectDeselect = false;\n    this.lastSelectionItem = {\n      itemKey: 0,\n      columnKey: 0\n    };\n    this.lastSelectionItemRowIndex = 0;\n    this.lastSelectionItemColIndex = 0;\n    this.addSubscriptions();\n  }\n\n  _createClass(CellSelectionService, [{\n    key: \"init\",\n    value: function init(settings) {\n      var _this2 = this;\n\n      this.settings = settings;\n      this.currentSelection = [];\n\n      if (settings.selectable && settings.selectable.enabled !== false) {\n        var iterator$$1 = this.getIterator();\n        var item = iterator$$1.next();\n\n        while (!item.done) {\n          if (item.value && item.value.type === \"data\") {\n            (function () {\n              var rowArgs = {\n                dataItem: item.value.data,\n                index: item.value.index\n              };\n              settings.columns.forEach(function (col) {\n                var selectedCellArgs = settings.cellSelected(rowArgs, col, col.leafIndex);\n\n                if (selectedCellArgs.selected) {\n                  _this2.currentSelection.push(selectedCellArgs.item);\n                }\n              });\n            })();\n          }\n\n          item = iterator$$1.next();\n        }\n      }\n    }\n  }, {\n    key: \"isCellSelected\",\n    value: function isCellSelected(item, col) {\n      if (this.settings && this.active) {\n        var selectedCellArgs = this.settings.cellSelected({\n          dataItem: item.data,\n          index: item.index\n        }, col, col.leafIndex);\n        return selectedCellArgs.selected;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(item, event) {\n      if (this.dragging) {\n        this.dragging = false;\n        return;\n      }\n\n      var ev;\n      var ctrlKey = event.ctrlKey || event.metaKey;\n\n      if (this.options.mode === \"single\" && ctrlKey && this.isCellSelected(item, item.column)) {\n        ev = this.toggle(item);\n      } else if (this.options.mode === \"multiple\") {\n        if (ctrlKey && !event.shiftKey) {\n          ev = this.toggle(item);\n        } else if (event.shiftKey) {\n          var startRowIndex = Math.min(this.lastSelectionItemRowIndex, item.index);\n          var startColIndex = Math.min(this.lastSelectionItemColIndex, item.column.leafIndex);\n          var endRowIndex = Math.max(this.lastSelectionItemRowIndex, item.index);\n          var endColIndex = Math.max(this.lastSelectionItemColIndex, item.column.leafIndex);\n          ev = this.selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex);\n        }\n      }\n\n      if (!isPresent(ev)) {\n        ev = this.select(item);\n        this.currentSelection = [this.lastSelectionItem];\n      }\n\n      if (!ev.selectedCells.length && !ev.deselectedCells.length) {\n        return;\n      }\n\n      ev.ctrlKey = ctrlKey;\n      ev.shiftKey = event.shiftKey;\n      this.changes.emit(ev);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(item) {\n      var selectedCells = [];\n      var deselectedCells = [];\n      this.lastSelectionItem = this.settings.cellSelected({\n        dataItem: item.data,\n        index: item.index\n      }, item.column, item.column.leafIndex).item;\n      this.lastSelectionItemRowIndex = item.index;\n      this.lastSelectionItemColIndex = item.column.leafIndex;\n\n      if (this.isCellSelected(item, item.column)) {\n        deselectedCells.push(this.lastSelectionItem);\n      } else {\n        selectedCells.push(this.lastSelectionItem);\n      }\n\n      return {\n        deselectedCells: deselectedCells,\n        selectedCells: selectedCells\n      };\n    }\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      var _this3 = this;\n\n      var selectedCells = [];\n      var deselectedCells = [];\n      this.lastSelectionItem = this.settings.cellSelected({\n        dataItem: item.data,\n        index: item.index\n      }, item.column, item.column.leafIndex).item;\n      this.lastSelectionItemRowIndex = item.index;\n      this.lastSelectionItemColIndex = item.column.leafIndex;\n\n      if (!this.isCellSelected(item, item.column)) {\n        selectedCells.push(this.lastSelectionItem);\n      }\n\n      this.currentSelection.forEach(function (selectedItem) {\n        if (selectedItem.itemKey !== _this3.lastSelectionItem.itemKey || selectedItem.columnKey !== _this3.lastSelectionItem.columnKey) {\n          deselectedCells.push(selectedItem);\n        }\n      });\n      return {\n        deselectedCells: deselectedCells,\n        selectedCells: selectedCells\n      };\n    } //Used to manually deselect removed items\n\n  }, {\n    key: \"deselect\",\n    value: function deselect(removedItem) {\n      var _this4 = this;\n\n      var iterator$$1 = this.getIterator();\n      var item = iterator$$1.next();\n      var rowArgs;\n\n      while (!item.done) {\n        if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n          rowArgs = {\n            dataItem: item.value.data,\n            index: item.value.index\n          };\n          break;\n        }\n\n        item = iterator$$1.next();\n      }\n\n      if (rowArgs) {\n        var cellsToRemove = this.currentSelection.filter(function (selectedItem) {\n          var contender = _this4.settings.cellSelected(rowArgs, null, null).item;\n\n          return selectedItem.itemKey === contender.itemKey;\n        });\n\n        if (cellsToRemove.length) {\n          var ev = {\n            ctrlKey: false,\n            deselectedCells: cellsToRemove,\n            selectedCells: []\n          };\n          this.changes.emit(ev);\n        }\n      }\n    }\n  }, {\n    key: \"selectRange\",\n    value: function selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex) {\n      var _this5 = this;\n\n      var selectedCells = [];\n      var deselectedCells = [];\n      var selectionStartRow = Math.min(startRowIndex, endRowIndex);\n      var selectionStartCol = Math.min(startColIndex, endColIndex);\n      var selectionEndRow = Math.max(startRowIndex, endRowIndex);\n      var selectionEndCol = Math.max(startColIndex, endColIndex);\n      var iterator$$1 = this.getIterator();\n      var next = iterator$$1.next();\n\n      while (!next.done) {\n        if (next.value && next.value.type === \"data\") {\n          (function () {\n            var idx = next.value.index;\n            var data = next.value.data;\n            var rowArgs = {\n              dataItem: data,\n              index: idx\n            };\n\n            _this5.settings.columns.forEach(function (col) {\n              var _this5$settings$cellS = _this5.settings.cellSelected(rowArgs, col, col.leafIndex),\n                  item = _this5$settings$cellS.item;\n\n              var selected = _this5.isCellSelected(next.value, col);\n\n              var isInRowRange = selectionStartRow <= idx && idx <= selectionEndRow;\n              var isInColRange = selectionStartCol <= col.leafIndex && col.leafIndex <= selectionEndCol;\n              var isInSelectionRect = isInRowRange && isInColRange;\n\n              if (!isInSelectionRect && selected) {\n                deselectedCells.push(item);\n              }\n\n              if (isInSelectionRect && !selected) {\n                selectedCells.push(item);\n              }\n            });\n          })();\n        }\n\n        next = iterator$$1.next();\n      }\n\n      return {\n        deselectedCells: deselectedCells,\n        selectedCells: selectedCells\n      };\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeSubscriptions();\n    }\n  }, {\n    key: \"addSubscriptions\",\n    value: function addSubscriptions() {\n      var _this6 = this;\n\n      if (!this.cellClickSubscription) {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe(function (args) {\n          if (_this6.options.enabled && !_this6.options.checkboxOnly && args.type !== 'contextmenu') {\n            if (_this6.active) {\n              _this6.handleClick({\n                index: args.rowIndex,\n                data: args.dataItem,\n                column: args.column\n              }, args.originalEvent);\n            }\n          }\n        });\n      }\n\n      if (!this.mousedownSubscription) {\n        this.mousedownSubscription = this.domEvents.cellMousedown.subscribe(function (args) {\n          _this6.mouseDownEventArgs = args;\n\n          if (_this6.options.enabled && (!_this6.options.mode || _this6.options.mode === \"multiple\") && !_this6.options.checkboxOnly && args.originalEvent.shiftKey) {\n            if (_this6.active) {\n              args.originalEvent.preventDefault();\n            }\n          }\n        });\n      }\n\n      if (this.localDataChangesService && !this.dataChangedSubscription) {\n        this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(function (args) {\n          if (_this6.active) {\n            if (isPresent(args.action) && args.action === 'remove') {\n              _this6.deselect(args.item);\n            }\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getIterator\",\n    value: function getIterator() {\n      var accessor = this.settings.view.accessor();\n\n      if (!accessor) {\n        return;\n      }\n\n      return accessor[iterator]();\n    }\n  }, {\n    key: \"removeSubscriptions\",\n    value: function removeSubscriptions() {\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n        this.cellClickSubscription = null;\n      }\n\n      if (this.mousedownSubscription) {\n        this.mousedownSubscription.unsubscribe();\n        this.mousedownSubscription = null;\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n        this.dataChangedSubscription = null;\n      }\n    }\n  }, {\n    key: \"enableMarquee\",\n    get: function get() {\n      var checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n\n      if (!this.settings || checkboxOnly) {\n        return false;\n      }\n\n      var selectableSettings = this.settings.selectable;\n      var dragAndMultiple = typeof selectableSettings === 'object' && selectableSettings.mode === 'multiple' && selectableSettings.cell && selectableSettings.drag;\n      return this.active && dragAndMultiple;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      var defaultOptions = {\n        checkboxOnly: false,\n        enabled: true,\n        mode: \"multiple\"\n      };\n\n      if (!isPresent(this.settings)) {\n        return defaultOptions;\n      }\n\n      if (typeof this.settings.selectable === 'boolean') {\n        return {\n          checkboxOnly: false,\n          enabled: this.settings.selectable,\n          mode: \"multiple\"\n        };\n      } else {\n        return Object.assign(defaultOptions, this.settings.selectable);\n      }\n    }\n  }]);\n\n  return CellSelectionService;\n}();\n\nCellSelectionService.ɵfac = function CellSelectionService_Factory(t) {\n  return new (t || CellSelectionService)(ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(LocalDataChangesService));\n};\n\nCellSelectionService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CellSelectionService,\n  factory: CellSelectionService.ɵfac\n});\n/** @nocollapse */\n\nCellSelectionService.ctorParameters = function () {\n  return [{\n    type: DomEventsService\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellSelectionService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DomEventsService\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, null);\n})();\n\nvar createElement = function createElement() {\n  var marquee = document.createElement(\"div\");\n  marquee.className = \"k-marquee\";\n  var marqueeColor = document.createElement(\"div\");\n  marqueeColor.className = \"k-marquee-color\";\n  marquee.appendChild(marqueeColor);\n  return marquee;\n};\n\nvar POINTER_OFFSET = 2;\nvar MINIMAL_DRAG_DISTANCE = 5;\nvar offsets = {\n  topLeft: {\n    x: POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  topRight: {\n    x: -POINTER_OFFSET,\n    y: POINTER_OFFSET\n  },\n  bottomLeft: {\n    x: POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  },\n  bottomRight: {\n    x: -POINTER_OFFSET,\n    y: -POINTER_OFFSET\n  }\n};\n/**\n * @hidden\n */\n\nvar GridMarqueeDirective = /*#__PURE__*/function () {\n  function GridMarqueeDirective(draggable, selection, cellSelection, domEvents) {\n    _classCallCheck(this, GridMarqueeDirective);\n\n    this.draggable = draggable;\n    this.selection = selection;\n    this.cellSelection = cellSelection;\n    this.domEvents = domEvents;\n    this.selectionStarted = false;\n  }\n\n  _createClass(GridMarqueeDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscriptions = this.draggable.kendoPress.subscribe(this.start.bind(this));\n      this.subscriptions.add(this.draggable.kendoDrag.subscribe(this.moveMarquee.bind(this)));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n      this.clean();\n    }\n  }, {\n    key: \"start\",\n    value: function start(args) {\n      if (args.originalEvent.target.classList.contains('k-checkbox')) {\n        this.pressArgs = null;\n        return;\n      }\n\n      this.pressArgs = args;\n      this.pressTarget = null;\n    }\n  }, {\n    key: \"moveMarquee\",\n    value: function moveMarquee(args) {\n      if (!this.pressTarget) {\n        this.pressTarget = this.cellSelection.active ? this.cellSelection.mouseDownEventArgs : this.selection.mouseDownEventArgs;\n      }\n\n      var press = this.pressArgs;\n\n      if (!press) {\n        return;\n      }\n\n      if (!this.selectionStarted) {\n        var distance = Math.sqrt(Math.pow(args.pageX - press.pageX, 2) + Math.pow(args.pageY - press.pageY, 2));\n\n        if (distance > MINIMAL_DRAG_DISTANCE) {\n          this.selectionStarted = true;\n          this.dragEndSubscription = merge(this.domEvents.cellMouseup.pipe(take(1)), this.draggable.kendoRelease.pipe(delay(1), take(1))).subscribe(this.endSelection.bind(this));\n        } else {\n          return;\n        }\n      }\n\n      this.initMarquee();\n      var element = this.marqueeElement;\n      var marqueeQuadrant = this.getMarqueeQuadrant(args.pageX, args.pageY, press.pageX, press.pageY);\n      var left = Math.min(args.pageX, press.pageX);\n      var top = Math.min(args.pageY, press.pageY);\n      var width = Math.abs(args.pageX - press.pageX);\n      var height = Math.abs(args.pageY - press.pageY);\n\n      if (marqueeQuadrant) {\n        left += offsets[marqueeQuadrant].x;\n        top += offsets[marqueeQuadrant].y;\n      }\n\n      element.style.left = \"\".concat(left, \"px\");\n      element.style.top = \"\".concat(top, \"px\");\n      element.style.width = \"\".concat(width, \"px\");\n      element.style.height = \"\".concat(height, \"px\");\n    }\n  }, {\n    key: \"endSelection\",\n    value: function endSelection(args) {\n      if (args.type === 'mouseup') {\n        var mouseUpArgs = args;\n\n        if (this.cellSelection.active) {\n          this.cellSelection.dragging = true;\n          this.cellSelection.changes.emit(this.cellSelection.selectRange(this.pressTarget.rowIndex, this.pressTarget.column.leafIndex, mouseUpArgs.rowIndex, mouseUpArgs.column.leafIndex));\n        } else if (this.selection.active) {\n          this.selection.dragging = true;\n          this.selection.changes.emit(this.selection.selectRange(this.pressTarget.rowIndex, mouseUpArgs.rowIndex));\n        }\n      }\n\n      this.clean();\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      if (this.marqueeElement) {\n        document.body.removeChild(this.marqueeElement);\n        this.marqueeElement = null;\n      }\n\n      if (this.dragEndSubscription) {\n        this.dragEndSubscription.unsubscribe();\n      }\n\n      this.dragEndSubscription = null;\n      this.pressTarget = null;\n      this.pressArgs = null;\n      this.selectionStarted = false;\n      this.cellSelection.active ? this.cellSelection.dragging = false : this.selection.dragging = false;\n    }\n  }, {\n    key: \"initMarquee\",\n    value: function initMarquee() {\n      if (!this.marqueeElement) {\n        this.marqueeElement = createElement();\n        document.body.appendChild(this.marqueeElement);\n      }\n    }\n  }, {\n    key: \"getMarqueeQuadrant\",\n    value: function getMarqueeQuadrant(pointerX, pointerY, startX, startY) {\n      var leftHalf = pointerX < startX;\n      var rightHalf = pointerX > startX;\n      var topHalf = pointerY < startY;\n      var bottomHalf = pointerY > startY;\n\n      if (leftHalf && topHalf) {\n        return 'topLeft';\n      }\n\n      if (leftHalf && bottomHalf) {\n        return 'bottomLeft';\n      }\n\n      if (rightHalf && topHalf) {\n        return 'topRight';\n      }\n\n      if (rightHalf && bottomHalf) {\n        return 'bottomRight';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"userSelection\",\n    get: function get() {\n      return this.cellSelection.enableMarquee || this.selection.enableMarquee ? 'none' : null;\n    }\n  }]);\n\n  return GridMarqueeDirective;\n}();\n\nGridMarqueeDirective.ɵfac = function GridMarqueeDirective_Factory(t) {\n  return new (t || GridMarqueeDirective)(ɵngcc0.ɵɵdirectiveInject(DraggableDirective), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(DomEventsService));\n};\n\nGridMarqueeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GridMarqueeDirective,\n  selectors: [[\"\", \"kendoGridSelectionMarquee\", \"\"]],\n  hostVars: 2,\n  hostBindings: function GridMarqueeDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"user-select\", ctx.userSelection);\n    }\n  }\n});\n/** @nocollapse */\n\nGridMarqueeDirective.ctorParameters = function () {\n  return [{\n    type: DraggableDirective\n  }, {\n    type: SelectionService\n  }, {\n    type: CellSelectionService\n  }, {\n    type: DomEventsService\n  }];\n};\n\nGridMarqueeDirective.propDecorators = {\n  userSelection: [{\n    type: HostBinding,\n    args: ['style.user-select']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GridMarqueeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectionMarquee]'\n    }]\n  }], function () {\n    return [{\n      type: DraggableDirective\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: DomEventsService\n    }];\n  }, {\n    userSelection: [{\n      type: HostBinding,\n      args: ['style.user-select']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar ZoneAwareEventEmitter = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(ZoneAwareEventEmitter, _EventEmitter);\n\n  var _super = _createSuper(ZoneAwareEventEmitter);\n\n  function ZoneAwareEventEmitter(ngZone) {\n    var _this7;\n\n    var isAsync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    _classCallCheck(this, ZoneAwareEventEmitter);\n\n    _this7 = _super.call(this, isAsync);\n    _this7.ngZone = ngZone;\n    return _this7;\n  }\n\n  _createClass(ZoneAwareEventEmitter, [{\n    key: \"subscribe\",\n    value: function subscribe(generatorOrNext, error, complete) {\n      var _this8 = this;\n\n      var schedulerFn;\n\n      var errorFn = function errorFn(_) {\n        return null;\n      };\n\n      var completeFn = function completeFn() {\n        return null;\n      };\n\n      if (generatorOrNext && typeof generatorOrNext === 'object') {\n        schedulerFn = function schedulerFn(value) {\n          _this8.ngZone.run(function () {\n            return generatorOrNext.next(value);\n          });\n        };\n\n        if (generatorOrNext.error) {\n          errorFn = function errorFn(err) {\n            _this8.ngZone.run(function () {\n              return generatorOrNext.error(err);\n            });\n          };\n        }\n\n        if (generatorOrNext.complete) {\n          completeFn = function completeFn() {\n            _this8.ngZone.run(function () {\n              return generatorOrNext.complete();\n            });\n          };\n        }\n      } else {\n        schedulerFn = function schedulerFn(value) {\n          _this8.ngZone.run(function () {\n            return generatorOrNext(value);\n          });\n        };\n\n        if (error) {\n          errorFn = function errorFn(err) {\n            _this8.ngZone.run(function () {\n              return error(err);\n            });\n          };\n        }\n\n        if (complete) {\n          completeFn = function completeFn() {\n            _this8.ngZone.run(function () {\n              return complete();\n            });\n          };\n        }\n      }\n\n      return _get(_getPrototypeOf(ZoneAwareEventEmitter.prototype), \"subscribe\", this).call(this, schedulerFn, errorFn, completeFn);\n    }\n  }]);\n\n  return ZoneAwareEventEmitter;\n}(EventEmitter);\n/**\n * Represents the column cell template of the Grid ([more information and example]({% slug templates_columns_grid %}#toc-cell-template)).\n * Helps to customize the content of the cells. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoGridCellTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index. Use it as an alias for a template variable by utilizing the `let-columnIndex=\"columnIndex\"` syntax.\n * - `rowIndex`&mdash;The current data row index. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-dataItem`.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\n *                     Data Row #: {{rowIndex}} /\n *                     <strong>{{dataItem.ProductName}}</strong>\n *                     ({{dataItem.Discontinued ? \"discontinued\" : \"active\"}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nvar CellTemplateDirective = function CellTemplateDirective(templateRef) {\n  _classCallCheck(this, CellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nCellTemplateDirective.ɵfac = function CellTemplateDirective_Factory(t) {\n  return new (t || CellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CellTemplateDirective,\n  selectors: [[\"\", \"kendoGridCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group-header cell template of the Grid which helps to customize the content of the group header item.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n * - `index`&mdash;The index of the current group.\n * - `expanded`&mdash;A boolean value indicating if the group is currently expanded.\n * ([see example]({% slug groupable_grid_with_aggregates %})).\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupHeaderTemplate let-group let-field=\"field\" let-value=\"value\">\n *                    <strong>{{field}}</strong>: {{value}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\" }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n *\n * ```\n */\n\n\nvar GroupHeaderTemplateDirective = function GroupHeaderTemplateDirective(templateRef) {\n  _classCallCheck(this, GroupHeaderTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nGroupHeaderTemplateDirective.ɵfac = function GroupHeaderTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nGroupHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupHeaderTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupHeaderTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nGroupHeaderTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupHeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the group-header column template of the Grid which helps to customize the content of the group headers.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderColumnTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * {% meta height:600 %}\n * {% embed_file grouping/app.component.ts preview %}\n * {% embed_file grouping/app.module.ts %}\n * {% embed_file grouping/main.ts %}\n * {% endmeta %}\n *\n * ```\n */\n\n\nvar GroupHeaderColumnTemplateDirective = function GroupHeaderColumnTemplateDirective(templateRef) {\n  _classCallCheck(this, GroupHeaderColumnTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nGroupHeaderColumnTemplateDirective.ɵfac = function GroupHeaderColumnTemplateDirective_Factory(t) {\n  return new (t || GroupHeaderColumnTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nGroupHeaderColumnTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupHeaderColumnTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupHeaderColumnTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nGroupHeaderColumnTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupHeaderColumnTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupHeaderColumnTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column edit-cell template of the Grid ([see example]({% slug editing_template_forms_grid %})).\n * Helps to customize the content of the edited cells. To define the cell template, nest an `<ng-template>`\n * tag with the `kendoGridEditTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context contains the following fields:\n * - `formGroup`&mdash;The current [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }}).\n * If you use the Grid inside [Template-Driven Forms]({{ site.data.urls.angular['forms'] }}), it will be `undefined`.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex` is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n */\n\n\nvar EditTemplateDirective = function EditTemplateDirective(templateRef) {\n  _classCallCheck(this, EditTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nEditTemplateDirective.ɵfac = function EditTemplateDirective_Factory(t) {\n  return new (t || EditTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nEditTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EditTemplateDirective,\n  selectors: [[\"\", \"kendoGridEditTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nEditTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridEditTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column group footer cell template of the Grid which helps to customize the group footer cell for the column.\n * To define the group footer template, nest an `<ng-template>` tag with the `kendoGridGroupFooterTemplate` directive\n * inside `<kendo-grid-column>`.\n *\n * The template context is set to the current aggregates and the following additional fields are passed:\n * - `column`&mdash;Defines an instance of the `ColumnComponent` option.\n * - `field`&mdash;The current column field name.\n * - `group`&mdash;The current group data item.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupFooterTemplate let-aggregates let-field=\"field\">\n *                    Count: {{aggregates[field].count}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\", aggregates: [{ field: \"ProductName\", aggregate: \"count\" }] }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n * ```\n */\n\n\nvar GroupFooterTemplateDirective = function GroupFooterTemplateDirective(templateRef) {\n  _classCallCheck(this, GroupFooterTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nGroupFooterTemplateDirective.ɵfac = function GroupFooterTemplateDirective_Factory(t) {\n  return new (t || GroupFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nGroupFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupFooterTemplateDirective,\n  selectors: [[\"\", \"kendoGridGroupFooterTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nGroupFooterTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupFooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column header cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-header-template)).\n * Helps to customize the table header cell for the column.\n * To define a header template, nest an `<ng-template>` tag with the\n * [`kendoGridHeaderTemplate`]({% slug api_grid_headertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n *  The template context is set to the current column and then the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [`ColumnComponent`]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nvar HeaderTemplateDirective = function HeaderTemplateDirective(templateRef) {\n  _classCallCheck(this, HeaderTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nHeaderTemplateDirective.ɵfac = function HeaderTemplateDirective_Factory(t) {\n  return new (t || HeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nHeaderTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: HeaderTemplateDirective,\n  selectors: [[\"\", \"kendoGridHeaderTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nHeaderTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridHeaderTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the column footer cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-footer-template)).\n * Helps to customize the table footer cell for the column.\n * To define a footer template, nest an `<ng-template>` tag with the\n * [`kendoGridFooterTemplate`]({% slug api_grid_footertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n * The template context is set to the current column and the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [`ColumnComponent`]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * For more information on how to display aggregates in the footer of the Grid,\n * refer to the article on [aggregates]({% slug groupable_grid_with_aggregates %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" scrollable=\"none\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nvar FooterTemplateDirective = function FooterTemplateDirective(templateRef) {\n  _classCallCheck(this, FooterTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nFooterTemplateDirective.ɵfac = function FooterTemplateDirective_Factory(t) {\n  return new (t || FooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nFooterTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FooterTemplateDirective,\n  selectors: [[\"\", \"kendoGridFooterTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nFooterTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FooterTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFooterTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Represents the template for the column menu in the Grid. Provides an option for\n * customizing the content of the column menu for all or for specific columns.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuTemplate` directive inside the `kendo-grid` or the `<kendo-grid-column>` component.\n *\n * The template context is passes through the following fields:\n * - `service`&mdash;Represents the [ColumnMenuService]({% slug api_grid_columnmenuservice %}).\n * - `column`&mdash;Represents the Grid column.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\">\n *              <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *                  <kendo-grid-columnmenu-lock [service]=\"service\">\n *                  </kendo-grid-columnmenu-lock>\n *                  <kendo-grid-columnmenu-sort [service]=\"service\">\n *                  </kendo-grid-columnmenu-sort>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuTemplateDirective = function ColumnMenuTemplateDirective(templateRef) {\n  _classCallCheck(this, ColumnMenuTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nColumnMenuTemplateDirective.ɵfac = function ColumnMenuTemplateDirective_Factory(t) {\n  return new (t || ColumnMenuTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nColumnMenuTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ColumnMenuTemplateDirective,\n  selectors: [[\"\", \"kendoGridColumnMenuTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nColumnMenuTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnMenuTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar isSpanColumn = function isSpanColumn(column) {\n  return column.isSpanColumn;\n};\n/**\n * @hidden\n */\n\n\nvar _isCheckboxColumn = function isCheckboxColumn(column) {\n  return column.isCheckboxColumn;\n};\n\nvar isColumnContainer = function isColumnContainer(column) {\n  return column.isColumnGroup || isSpanColumn(column);\n};\n/**\n * The base class for the column components of the Grid.\n */\n\n\nvar ColumnBase$1 = /*#__PURE__*/function () {\n  function ColumnBase$1(parent) {\n    _classCallCheck(this, ColumnBase$1);\n\n    this.parent = parent;\n    /**\n     * @hidden\n     */\n\n    this.matchesMedia = true;\n    /**\n     * The column index after reordering.\n     *\n     * > `orderIndex` is a read-only property. Setting this field does not affect column order.\n     */\n\n    this.orderIndex = 0;\n    /**\n     * @hidden\n     */\n\n    this.isColumnGroup = false;\n    /**\n     * @hidden\n     */\n\n    this.isSpanColumn = false;\n    /**\n     * Indicates whether the column is resizable.\n     * @default true\n     */\n\n    this.resizable = true;\n    /**\n     * Indicates whether the column is reorderable.\n     * @default true\n     */\n\n    this.reorderable = true;\n    /**\n     * The width (in pixels) below which the user is not able to resize the column by using the UI.\n     */\n\n    this.minResizableWidth = 10;\n    /**\n     * Toggles the locked (frozen) state of the columns ([more information and example]({% slug locked_columns_grid %})).\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\" [locked]=\"true\">\n     *          </kendo-grid-column>\n     *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n     *          </kendo-grid-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n\n    this.locked = false;\n    /**\n     * Specifies if the column can be locked or unlocked from the column menu or by reordering the columns.\n     */\n\n    this.lockable = true;\n    /**\n     * Specifies if the column menu will be shown for the column.\n     */\n\n    this.columnMenu = true;\n    /**\n     * Specifies if the column will be included in the column-chooser list.\n     */\n\n    this.includeInChooser = true;\n    /**\n     * @hidden\n     */\n\n    this.headerTemplates = new QueryList();\n    /**\n     * @hidden\n     */\n\n    this.columnMenuTemplates = new QueryList();\n\n    if (parent && !isColumnContainer(parent)) {\n      throw new Error('Columns can be nested only inside ColumnGroupComponent');\n    }\n  }\n  /**\n   * The width of the column (in pixels).\n   */\n\n\n  _createClass(ColumnBase$1, [{\n    key: \"rowspan\",\n\n    /**\n     * @hidden\n     */\n    value: function rowspan(totalColumnLevels) {\n      return this.level < totalColumnLevels ? totalColumnLevels - this.level + 1 : 1;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"width\",\n    set: function set(value) {\n      this._width = parseInt(value, 10);\n    },\n    get: function get() {\n      return this._width;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"level\",\n    get: function get() {\n      if (this.parent && isSpanColumn(this.parent)) {\n        return this.parent.level;\n      }\n\n      return this.parent ? this.parent.level + 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isLocked\",\n    get: function get() {\n      return this.parent ? this.parent.isLocked : this.locked;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"colspan\",\n    get: function get() {\n      return 1;\n    }\n  }, {\n    key: \"headerTemplateRef\",\n    get: function get() {\n      var template = this.headerTemplates.first;\n      return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"footerTemplateRef\",\n    get: function get() {\n      return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"columnMenuTemplateRef\",\n    get: function get() {\n      var template = this.columnMenuTemplates.first;\n      return template ? template.templateRef : null;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"displayTitle\",\n    get: function get() {\n      return this.title;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return !this.hidden && this.matchesMedia;\n    }\n  }]);\n\n  return ColumnBase$1;\n}();\n\nColumnBase$1.ɵfac = function ColumnBase$1_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nColumnBase$1.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ColumnBase$1,\n  contentQueries: function ColumnBase$1_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, HeaderTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTemplates = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n    }\n  },\n  inputs: {\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    minResizableWidth: \"minResizableWidth\",\n    locked: \"locked\",\n    lockable: \"lockable\",\n    columnMenu: \"columnMenu\",\n    includeInChooser: \"includeInChooser\",\n    width: \"width\",\n    title: \"title\",\n    autoSize: \"autoSize\",\n    hidden: \"hidden\",\n    media: \"media\",\n    style: \"style\",\n    headerStyle: \"headerStyle\",\n    footerStyle: \"footerStyle\",\n    cssClass: [\"class\", \"cssClass\"],\n    headerClass: \"headerClass\",\n    footerClass: \"footerClass\"\n  }\n});\nColumnBase$1.propDecorators = {\n  resizable: [{\n    type: Input\n  }],\n  reorderable: [{\n    type: Input\n  }],\n  minResizableWidth: [{\n    type: Input\n  }],\n  title: [{\n    type: Input\n  }],\n  width: [{\n    type: Input\n  }],\n  autoSize: [{\n    type: Input\n  }],\n  locked: [{\n    type: Input\n  }],\n  hidden: [{\n    type: Input\n  }],\n  media: [{\n    type: Input\n  }],\n  lockable: [{\n    type: Input\n  }],\n  columnMenu: [{\n    type: Input\n  }],\n  includeInChooser: [{\n    type: Input\n  }],\n  style: [{\n    type: Input\n  }],\n  headerStyle: [{\n    type: Input\n  }],\n  footerStyle: [{\n    type: Input\n  }],\n  cssClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  headerClass: [{\n    type: Input\n  }],\n  footerClass: [{\n    type: Input\n  }],\n  headerTemplates: [{\n    type: ContentChildren,\n    args: [HeaderTemplateDirective, {\n      descendants: false\n    }]\n  }],\n  footerTemplate: [{\n    type: ContentChild,\n    args: [FooterTemplateDirective]\n  }],\n  columnMenuTemplates: [{\n    type: ContentChildren,\n    args: [ColumnMenuTemplateDirective]\n  }]\n};\n/**\n * Represents the filter-cell template ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-rows)).\n */\n\nvar FilterCellTemplateDirective = function FilterCellTemplateDirective(templateRef) {\n  _classCallCheck(this, FilterCellTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nFilterCellTemplateDirective.ɵfac = function FilterCellTemplateDirective_Factory(t) {\n  return new (t || FilterCellTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nFilterCellTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterCellTemplateDirective,\n  selectors: [[\"\", \"kendoGridFilterCellTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nFilterCellTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterCellTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFilterCellTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents the filter-menu template\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-menus)).\n */\n\n\nvar FilterMenuTemplateDirective = function FilterMenuTemplateDirective(templateRef) {\n  _classCallCheck(this, FilterMenuTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nFilterMenuTemplateDirective.ɵfac = function FilterMenuTemplateDirective_Factory(t) {\n  return new (t || FilterMenuTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nFilterMenuTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterMenuTemplateDirective,\n  selectors: [[\"\", \"kendoGridFilterMenuTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nFilterMenuTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFilterMenuTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nfunction isColumnComponent(column) {\n  return isPresent(column.field);\n}\n/**\n * Represents the columns of the [Angular Data Grid]({% slug overview_grid %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nvar ColumnComponent = /*#__PURE__*/function (_ColumnBase$) {\n  _inherits(ColumnComponent, _ColumnBase$);\n\n  var _super2 = _createSuper(ColumnComponent);\n\n  function ColumnComponent(parent) {\n    var _this9;\n\n    _classCallCheck(this, ColumnComponent);\n\n    _this9 = _super2.call(this, parent);\n    /**\n     * Allows the column headers to be clicked and the `sortChange` event emitted.\n     * You have to handle the `sortChange` event yourself and sort the data.\n     */\n\n    _this9.sortable = true;\n    /**\n     * Determines if the column can be dragged to the group panel. The default value is `true`.\n     * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n     */\n\n    _this9.groupable = true;\n    /**\n     * Defines the editor type ([see example]({% slug editing_reactive_forms_grid %}#toc-setup)).\n     * Used when the column enters the edit mode. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" editor=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    _this9.editor = 'text';\n    /**\n     * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" filter=\"numeric\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    _this9.filter = 'text';\n    /**\n     * Defines if a filter UI will be displayed for this column. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    _this9.filterable = true;\n    /**\n     * Defines whether the column is editable. The default value is `true`.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n     *    </kendo-grid-column>\n     * </kendo-grid>\n     * ```\n     */\n\n    _this9.editable = true;\n    return _this9;\n  }\n\n  _createClass(ColumnComponent, [{\n    key: \"templateRef\",\n    get: function get() {\n      return this.template ? this.template.templateRef : undefined;\n    }\n  }, {\n    key: \"groupHeaderTemplateRef\",\n    get: function get() {\n      return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"groupHeaderColumnTemplateRef\",\n    get: function get() {\n      return this.groupHeaderColumnTemplate ? this.groupHeaderColumnTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"groupFooterTemplateRef\",\n    get: function get() {\n      return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"editTemplateRef\",\n    get: function get() {\n      return this.editTemplate ? this.editTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"filterCellTemplateRef\",\n    get: function get() {\n      return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"filterMenuTemplateRef\",\n    get: function get() {\n      return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n    }\n  }, {\n    key: \"displayTitle\",\n    get: function get() {\n      return this.title === undefined ? this.field : this.title;\n    }\n  }]);\n\n  return ColumnComponent;\n}(ColumnBase$1);\n\nColumnComponent.ɵfac = function ColumnComponent_Factory(t) {\n  return new (t || ColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnComponent,\n  selectors: [[\"kendo-grid-column\"]],\n  contentQueries: function ColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupHeaderTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupHeaderColumnTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, GroupFooterTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterCellTemplateDirective, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterMenuTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeaderTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupHeaderColumnTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.groupFooterTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterCellTemplate = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filterMenuTemplate = _t.first);\n    }\n  },\n  inputs: {\n    sortable: \"sortable\",\n    groupable: \"groupable\",\n    editor: \"editor\",\n    filter: \"filter\",\n    filterable: \"filterable\",\n    editable: \"editable\",\n    field: \"field\",\n    format: \"format\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(function () {\n      return ColumnComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnComponent.ctorParameters = function () {\n  return [{\n    type: ColumnBase$1,\n    decorators: [{\n      type: SkipSelf\n    }, {\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nColumnComponent.propDecorators = {\n  field: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  sortable: [{\n    type: Input\n  }],\n  groupable: [{\n    type: Input\n  }],\n  editor: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  template: [{\n    type: ContentChild,\n    args: [CellTemplateDirective]\n  }],\n  groupHeaderTemplate: [{\n    type: ContentChild,\n    args: [GroupHeaderTemplateDirective]\n  }],\n  groupHeaderColumnTemplate: [{\n    type: ContentChild,\n    args: [GroupHeaderColumnTemplateDirective]\n  }],\n  groupFooterTemplate: [{\n    type: ContentChild,\n    args: [GroupFooterTemplateDirective]\n  }],\n  editTemplate: [{\n    type: ContentChild,\n    args: [EditTemplateDirective]\n  }],\n  filterCellTemplate: [{\n    type: ContentChild,\n    args: [FilterCellTemplateDirective]\n  }],\n  filterMenuTemplate: [{\n    type: ContentChild,\n    args: [FilterMenuTemplateDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase$1,\n        useExisting: forwardRef(function () {\n          return ColumnComponent;\n        })\n      }],\n      selector: 'kendo-grid-column',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase$1,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    sortable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    editor: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    field: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective]\n    }],\n    groupHeaderTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderTemplateDirective]\n    }],\n    groupHeaderColumnTemplate: [{\n      type: ContentChild,\n      args: [GroupHeaderColumnTemplateDirective]\n    }],\n    groupFooterTemplate: [{\n      type: ContentChild,\n      args: [GroupFooterTemplateDirective]\n    }],\n    editTemplate: [{\n      type: ContentChild,\n      args: [EditTemplateDirective]\n    }],\n    filterCellTemplate: [{\n      type: ContentChild,\n      args: [FilterCellTemplateDirective]\n    }],\n    filterMenuTemplate: [{\n      type: ContentChild,\n      args: [FilterMenuTemplateDirective]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nfunction isSpanColumnComponent(column) {\n  return column.isSpanColumn;\n}\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug groupingbasics_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" width=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\n\n\nvar SpanColumnComponent = /*#__PURE__*/function (_ColumnBase$2) {\n  _inherits(SpanColumnComponent, _ColumnBase$2);\n\n  var _super3 = _createSuper(SpanColumnComponent);\n\n  function SpanColumnComponent(parent) {\n    var _this10;\n\n    _classCallCheck(this, SpanColumnComponent);\n\n    _this10 = _super3.call(this, parent);\n    /*\n     * @hidden\n     */\n\n    _this10.isSpanColumn = true;\n    _this10.template = new QueryList();\n    _this10.editTemplate = new QueryList();\n    /**\n     * @hidden\n     */\n\n    _this10.childColumns = new QueryList();\n    /**\n     * @hidden\n     */\n\n    _this10.includeInChooser = false;\n    _this10._editable = true;\n    _this10._locked = false;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('SpanColumn cannot be nested inside another SpanColumn');\n    }\n\n    return _this10;\n  }\n  /**\n   * Defines whether the edit template of the column will be rendered. The default value is `false`.\n   *\n   * > To enable the editing functionality for a spanned column, set an edit template for it.\n   *\n   * @example\n   * ```html-no-run\n   * <kendo-grid>\n   *    <kendo-grid-span-column [editable]=\"false\">\n   *      <kendo-grid-column field=\"UnitPrice\">\n   *      </kendo-grid-column>\n   *      <kendo-grid-column field=\"ProductName\">\n   *      </kendo-grid-column>\n   *      <ng-template kendoGridEditTemplate>\n   *         .....\n   *      </ng-template>\n   *    </kendo-grid-span-column>\n   * </kendo-grid>\n   * ```\n   */\n\n\n  _createClass(SpanColumnComponent, [{\n    key: \"editable\",\n    set: function set(value) {\n      this._editable = value;\n    },\n    get: function get() {\n      return isPresent(this.editTemplateRef) && this._editable;\n    }\n    /**\n     * @hidden\n     * added for backwards compitability\n     */\n\n  }, {\n    key: \"width\",\n    set: function set(_value) {},\n    get: function get() {\n      return this.childColumns.reduce(function (total, column) {\n        return total + column.width;\n      }, 0);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"leafIndex\",\n    get: function get() {\n      return this.childColumns.first.leafIndex;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"templateRef\",\n    get: function get() {\n      var template = this.template.first;\n      return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"editTemplateRef\",\n    get: function get() {\n      var editTemplate = this.editTemplate.first;\n      return editTemplate ? editTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"colspan\",\n    get: function get() {\n      return this.childColumns.filter(function (c) {\n        return c.isVisible;\n      }).length;\n    }\n    /**\n     * Toggles the locked (frozen) state of the columns. Locked columns are visible\n     * at all times during the horizontal scrolling of the Grid.\n     *\n     * For the option to work properly, make sure that:\n     * - Scrolling is enabled.\n     * - The `height` option of the Grid is set.\n     * - The widths of all Grid columns are explicitly set in pixels. In this way,\n     * the Grid adjusts the layout of the locked and unlocked columns.\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-span-column [locked]=\"true\">\n     *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n     *             </kendo-grid-column>\n     *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n     *             </kendo-grid-column>\n     *          </kendo-grid-span-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n\n  }, {\n    key: \"locked\",\n    set: function set(value) {\n      this._locked = value;\n    },\n    get: function get() {\n      return this._locked || this.childColumns.some(function (c) {\n        return c.locked;\n      });\n    }\n  }, {\n    key: \"childrenArray\",\n    get: function get() {\n      return this.childColumns.toArray();\n    }\n  }, {\n    key: \"hasChildren\",\n    get: function get() {\n      return this.childColumns.length > 0;\n    }\n  }]);\n\n  return SpanColumnComponent;\n}(ColumnBase$1);\n\nSpanColumnComponent.ɵfac = function SpanColumnComponent_Factory(t) {\n  return new (t || SpanColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nSpanColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: SpanColumnComponent,\n  selectors: [[\"kendo-grid-span-column\"]],\n  contentQueries: function SpanColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, EditTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnComponent, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.editTemplate = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childColumns = _t);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    locked: \"locked\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(function () {\n      return SpanColumnComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function SpanColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nSpanColumnComponent.ctorParameters = function () {\n  return [{\n    type: ColumnBase$1,\n    decorators: [{\n      type: SkipSelf\n    }, {\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nSpanColumnComponent.propDecorators = {\n  template: [{\n    type: ContentChildren,\n    args: [CellTemplateDirective, {\n      descendants: false\n    }]\n  }],\n  editTemplate: [{\n    type: ContentChildren,\n    args: [EditTemplateDirective, {\n      descendants: false\n    }]\n  }],\n  childColumns: [{\n    type: ContentChildren,\n    args: [ColumnComponent]\n  }],\n  editable: [{\n    type: Input\n  }],\n  locked: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SpanColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase$1,\n        useExisting: forwardRef(function () {\n          return SpanColumnComponent;\n        })\n      }],\n      selector: 'kendo-grid-span-column',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase$1,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    template: [{\n      type: ContentChildren,\n      args: [CellTemplateDirective, {\n        descendants: false\n      }]\n    }],\n    editTemplate: [{\n      type: ContentChildren,\n      args: [EditTemplateDirective, {\n        descendants: false\n      }]\n    }],\n    childColumns: [{\n      type: ContentChildren,\n      args: [ColumnComponent]\n    }],\n    editable: [{\n      type: Input\n    }],\n    locked: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar expandColumns = function expandColumns(columns) {\n  return columns.reduce(function (acc, column) {\n    return acc.concat(isSpanColumnComponent(column) ? column.childrenArray : [column]);\n  }, []) // tslint:disable-line:align\n  ;\n};\n/**\n * @hidden\n */\n\n\nvar expandColumnsWithSpan = function expandColumnsWithSpan(columns) {\n  return columns.reduce(function (acc, column) {\n    return acc.concat(isSpanColumnComponent(column) ? [column].concat(column.childrenArray) : [column]);\n  }, []) // tslint:disable-line:align\n  ;\n};\n/**\n * @hidden\n */\n\n\nvar columnsToRender = function columnsToRender(columns) {\n  return expandColumns(columns).filter(function (x) {\n    return x.isVisible;\n  });\n};\n\nvar sumProp = function sumProp(prop) {\n  return function (array) {\n    return (array || []).reduce(function (prev, curr) {\n      return prev + (curr[prop] || 0);\n    }, 0);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar sumColumnWidths = sumProp('width');\n/**\n * @hidden\n */\n\nvar columnsSpan = sumProp('colspan'); // tslint:disable-next-line:max-line-length\n\nvar validField = new RegExp(\"^[$A-Z_a-z][$A-Z_a-z0-9\\\\.]*$\");\n/**\n * @hidden\n */\n\nvar isValidFieldName = function isValidFieldName(fieldName) {\n  return !isNullOrEmptyString(fieldName) && validField.test(fieldName) && fieldName[0] !== \".\" && fieldName[fieldName.length - 1] !== \".\";\n};\n/**\n * @hidden\n */\n\n\nvar children = function children(column) {\n  return column.children.filter(function (child) {\n    return child !== column;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar leafColumns = function leafColumns(columns) {\n  return columns.reduce(function (acc, column) {\n    if (column.isColumnGroup) {\n      acc = acc.concat(leafColumns(children(column)));\n    } else if (column.isSpanColumn) {\n      acc = acc.concat(column.childrenArray);\n    } else {\n      acc.push(column);\n    }\n\n    return acc;\n  }, []).filter(function (x) {\n    return x.isVisible;\n  }); // tslint:disable-line:align\n};\n/**\n * @hidden\n */\n\n\nvar someLeafColumn = function someLeafColumn(callback) {\n  for (var _len4 = arguments.length, columns = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    columns[_key4 - 1] = arguments[_key4];\n  }\n\n  return leafColumns(columns).some(callback);\n};\n/**\n * @hidden\n */\n\n\nvar resizableColumns = function resizableColumns(columns) {\n  return columns.filter(function (column) {\n    return isTruthy(column.resizable) && column.isVisible;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar sortColumns = function sortColumns(columns) {\n  return orderBy(columns, [{\n    field: 'orderIndex',\n    dir: 'asc'\n  }]);\n};\n/**\n * @hidden\n */\n\n\nvar isInSpanColumn = function isInSpanColumn(column) {\n  return isTruthy(column.parent) && isSpanColumnComponent(column.parent);\n};\n/**\n * @hidden\n */\n\n\nfunction _isColumnGroupComponent(column) {\n  return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid\n * ([more information and examples]({% slug multicolumnheaders_columns_grid %})).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nvar ColumnGroupComponent = /*#__PURE__*/function (_ColumnBase$3) {\n  _inherits(ColumnGroupComponent, _ColumnBase$3);\n\n  var _super4 = _createSuper(ColumnGroupComponent);\n\n  function ColumnGroupComponent(parent) {\n    var _this11;\n\n    _classCallCheck(this, ColumnGroupComponent);\n\n    _this11 = _super4.call(this, parent);\n    _this11.parent = parent;\n    /**\n     * @hidden\n     */\n\n    _this11.includeInChooser = false;\n    /**\n     * @hidden\n     */\n\n    _this11.isColumnGroup = true;\n    /**\n     * @hidden\n     */\n\n    _this11.minResizableWidth = 10;\n\n    if (parent && parent.isSpanColumn) {\n      throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n    }\n\n    return _this11;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(ColumnGroupComponent, [{\n    key: \"rowspan\",\n    value: function rowspan() {\n      return 1;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"colspan\",\n    get: function get() {\n      var _this12 = this;\n\n      if (!this.children || this.children.length === 1) {\n        return 1;\n      }\n\n      return columnsSpan(this.children.filter(function (child) {\n        return child !== _this12 && child.isVisible;\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"leafIndex\",\n    get: function get() {\n      return this.children ? (this.firstChild || {}).leafIndex : -1;\n    }\n  }, {\n    key: \"childrenArray\",\n    get: function get() {\n      var _this13 = this;\n\n      return this.children.filter(function (c) {\n        return c !== _this13;\n      });\n    }\n  }, {\n    key: \"hasChildren\",\n    get: function get() {\n      return Boolean(this.firstChild);\n    }\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      var _this14 = this;\n\n      return this.children.find(function (column) {\n        return column !== _this14;\n      });\n    }\n  }]);\n\n  return ColumnGroupComponent;\n}(ColumnBase$1);\n\nColumnGroupComponent.ɵfac = function ColumnGroupComponent_Factory(t) {\n  return new (t || ColumnGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nColumnGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnGroupComponent,\n  selectors: [[\"kendo-grid-column-group\"]],\n  contentQueries: function ColumnGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.children = _t);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(function () {\n      return ColumnGroupComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ColumnGroupComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnGroupComponent.ctorParameters = function () {\n  return [{\n    type: ColumnBase$1,\n    decorators: [{\n      type: SkipSelf\n    }, {\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nColumnGroupComponent.propDecorators = {\n  children: [{\n    type: ContentChildren,\n    args: [ColumnBase$1]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnGroupComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase$1,\n        useExisting: forwardRef(function () {\n          return ColumnGroupComponent;\n        })\n      }],\n      selector: 'kendo-grid-column-group',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase$1,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    children: [{\n      type: ContentChildren,\n      args: [ColumnBase$1]\n    }]\n  });\n})();\n/**\n * Represents the detail template of the Grid ([more information and examples]({% slug detailrowtemplate_grid %})).\n * To define the detail template, nest an `<ng-template>` tag with the `kendoGridDetailTemplate` directive inside a `<kendo-grid>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid\n *         [data]=\"data\"\n *         selectable=\"true\"\n *         style=\"height: 160px\"\n *         >\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridDetailTemplate let-dataItem>\n *           <div *ngIf=\"dataItem.Category\">\n *             <header>{{dataItem.Category?.CategoryName}}</header>\n *             <span>{{dataItem.Category?.Description}}</span>\n *           </div>\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 3,\n *         \"ProductName\": \"Aniseed Syrup\",\n *         \"UnitPrice\": 10.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 2,\n *             \"CategoryName\": \"Condiments\",\n *             \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *         }\n *     }];\n *\n * }\n *\n * ```\n *\n */\n\n\nvar DetailTemplateDirective = /*#__PURE__*/function () {\n  function DetailTemplateDirective(templateRef) {\n    _classCallCheck(this, DetailTemplateDirective);\n\n    this.templateRef = templateRef;\n\n    this._condition = function () {\n      return true;\n    };\n  }\n  /**\n   * Defines the function that indicates if a given detail row and the associated **Expand** or **Collapse** button will be displayed.\n   */\n\n\n  _createClass(DetailTemplateDirective, [{\n    key: \"showIf\",\n    set: function set(fn) {\n      if (typeof fn !== 'function') {\n        throw new Error(\"showIf must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this._condition = fn;\n    },\n    get: function get() {\n      return this._condition;\n    }\n  }]);\n\n  return DetailTemplateDirective;\n}();\n\nDetailTemplateDirective.ɵfac = function DetailTemplateDirective_Factory(t) {\n  return new (t || DetailTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nDetailTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DetailTemplateDirective,\n  selectors: [[\"\", \"kendoGridDetailTemplate\", \"\"]],\n  inputs: {\n    showIf: [\"kendoGridDetailTemplateShowIf\", \"showIf\"]\n  }\n});\n/** @nocollapse */\n\nDetailTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nDetailTemplateDirective.propDecorators = {\n  showIf: [{\n    type: Input,\n    args: [\"kendoGridDetailTemplateShowIf\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DetailTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridDetailTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    showIf: [{\n      type: Input,\n      args: [\"kendoGridDetailTemplateShowIf\"]\n    }]\n  });\n})();\n\nvar canCreateElement = function canCreateElement() {\n  return isDocumentAvailable() && document.createElement;\n};\n\nvar cachedScrollbarWidth = null;\nvar cachedPixelRatio;\nvar cachedRtlScrollLeft = null;\n\nfunction scrollbarWidth() {\n  if (cachedScrollbarWidth === null && canCreateElement()) {\n    cachedPixelRatio = window.devicePixelRatio || 1;\n    var div = document.createElement(\"div\");\n    div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n    div.innerHTML = \"&nbsp;\";\n    document.body.appendChild(div);\n    cachedScrollbarWidth = div.offsetWidth - div.scrollWidth;\n    document.body.removeChild(div);\n  }\n\n  return cachedScrollbarWidth;\n}\n\nfunction rtlScrollLeft() {\n  if (cachedRtlScrollLeft === null && canCreateElement()) {\n    var div = document.createElement(\"div\");\n    div.style.cssText = \"overflow:scroll;zoom:1;clear:both;display:block;width:100px;visibility:hidden;position:absolute;left:-10000px;direction:rtl;\";\n    div.innerHTML = \"<div style='width:200px;height:1px;'</div>\";\n    document.body.appendChild(div);\n    var initial = div.scrollLeft;\n    div.scrollLeft = -1;\n    cachedRtlScrollLeft = div.scrollLeft < 0 ? div.scrollLeft : initial;\n    document.body.removeChild(div);\n  }\n\n  return cachedRtlScrollLeft;\n}\n/**\n * @hidden\n * move to kendo-common\n */\n\n\nvar BrowserSupportService = /*#__PURE__*/function () {\n  function BrowserSupportService(zone, changeDetector) {\n    var _this15 = this;\n\n    _classCallCheck(this, BrowserSupportService);\n\n    this.zone = zone;\n    this.changeDetector = changeDetector;\n    this.changes = new EventEmitter();\n\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    this.zone.runOutsideAngular(function () {\n      _this15.subscriptions = fromEvent(window, 'resize').pipe(auditTime(100)).subscribe(function () {\n        if (cachedPixelRatio !== window.devicePixelRatio) {\n          zone.run(function () {\n            cachedScrollbarWidth = null;\n\n            _this15.changes.emit();\n\n            _this15.changeDetector.markForCheck();\n          });\n        }\n      });\n    });\n  }\n\n  _createClass(BrowserSupportService, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n        this.subscriptions = null;\n      }\n    }\n  }, {\n    key: \"scrollbarWidth\",\n    get: function get() {\n      return scrollbarWidth();\n    }\n  }, {\n    key: \"rtlScrollLeft\",\n    get: function get() {\n      return rtlScrollLeft();\n    }\n  }]);\n\n  return BrowserSupportService;\n}();\n\nBrowserSupportService.ɵfac = function BrowserSupportService_Factory(t) {\n  return new (t || BrowserSupportService)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(ChangeDetectorRef));\n};\n\nBrowserSupportService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: BrowserSupportService,\n  factory: BrowserSupportService.ɵfac\n});\n/** @nocollapse */\n\nBrowserSupportService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BrowserSupportService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})();\n/* tslint:disable:use-life-cycle-interface */\n\n\nvar isGroupItem = function isGroupItem(source) {\n  return source.items !== undefined && source.field !== undefined;\n};\n\nvar isVirtualGroupItem = function isVirtualGroupItem(source) {\n  return source.offset !== undefined && source.skipHeader !== undefined;\n};\n\nvar flattenGroups = function flattenGroups(groups) {\n  return groups.reduce(function (acc, curr) {\n    if (isGroupItem(curr)) {\n      return acc.concat(flattenGroups(curr.items));\n    }\n\n    return acc.concat([curr]);\n  }, []) // tslint:disable-line:align\n  ;\n};\n/**\n * @hidden\n */\n\n\nvar itemAt = function itemAt(data, index) {\n  var first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    return flattenGroups(data)[index];\n  }\n\n  return data[index];\n};\n/**\n * @hidden\n */\n\n\nvar getIterator$1 = function getIterator$1(data, _ref) {\n  var footers = _ref.footers,\n      level = _ref.level,\n      dataIndex = _ref.dataIndex,\n      parentGroupIndex = _ref.parentGroupIndex,\n      groupIndex = _ref.groupIndex;\n  var first = data[0];\n\n  if (isPresent(first) && isGroupItem(first)) {\n    if (isVirtualGroupItem(first)) {\n      groupIndex = isPresent(first.offset) ? first.offset : groupIndex;\n    } //tslint:disable-next-line:no-use-before-declare\n\n\n    return new GroupIterator(data, footers, level, dataIndex, parentGroupIndex, groupIndex);\n  } //tslint:disable-next-line:no-use-before-declare\n\n\n  return new ItemIterator(data, dataIndex, parentGroupIndex);\n};\n\nvar ArrayIterator = /*#__PURE__*/function () {\n  function ArrayIterator(arr) {\n    var idx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, ArrayIterator);\n\n    this.arr = arr;\n    this.idx = idx;\n    this.arr = arr || [];\n  }\n\n  _createClass(ArrayIterator, [{\n    key: iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      return this.idx < this.arr.length ? {\n        done: false,\n        value: this.arr[this.idx++]\n      } : {\n        done: true,\n        value: undefined\n      };\n    }\n  }]);\n\n  return ArrayIterator;\n}();\n/**\n * @hidden\n */\n\n\nvar Iterator = /*#__PURE__*/function () {\n  function Iterator(arr) {\n    var dataIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var resultMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (x) {\n      return x;\n    };\n\n    _classCallCheck(this, Iterator);\n\n    this.dataIndex = dataIndex;\n    this.resultMap = resultMap;\n    var iter = arr[iterator];\n    this._innerIterator = iter ? arr[iterator]() : new ArrayIterator(arr);\n  }\n\n  _createClass(Iterator, [{\n    key: iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      return this.resultMap(this._innerIterator.next(), this.dataIndex++);\n    }\n  }]);\n\n  return Iterator;\n}();\n/**\n * @hidden\n */\n\n\nvar ItemIterator = /*#__PURE__*/function (_Iterator) {\n  _inherits(ItemIterator, _Iterator);\n\n  var _super5 = _createSuper(ItemIterator);\n\n  function ItemIterator(arr, dataIndex, groupIndex) {\n    _classCallCheck(this, ItemIterator);\n\n    return _super5.call(this, arr, dataIndex, function (x, idx) {\n      return {\n        done: x.done,\n        value: {\n          data: x.value,\n          groupIndex: groupIndex,\n          index: idx,\n          type: 'data'\n        }\n      };\n    });\n  }\n  /**\n   * The index of the next record.\n   * @readonly\n   * @type {number}\n   */\n\n\n  _createClass(ItemIterator, [{\n    key: \"index\",\n    get: function get() {\n      return this.dataIndex;\n    }\n  }]);\n\n  return ItemIterator;\n}(Iterator);\n\nvar prefix = function prefix(s, n) {\n  var p = s ? s + \"_\" : s;\n  return \"\".concat(p).concat(n);\n};\n/**\n * @hidden\n */\n\n\nvar GroupIterator = /*#__PURE__*/function () {\n  function GroupIterator(arr) {\n    var outputFooters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var dataIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var parentIndex = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : \"\";\n    var groupIndex = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    _classCallCheck(this, GroupIterator);\n\n    this.arr = arr;\n    this.outputFooters = outputFooters;\n    this.level = level;\n    this.dataIndex = dataIndex;\n    this.parentIndex = parentIndex;\n    this.groupIndex = groupIndex;\n    this.currentGroupIndex = \"\";\n    this.arr = arr || [];\n    this._iterator = new Iterator(this.arr, this.dataIndex);\n  }\n\n  _createClass(GroupIterator, [{\n    key: iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"nextGroupItem\",\n    value: function nextGroupItem() {\n      this.current = this._iterator.next().value;\n      this._innerIterator = null;\n\n      if (this.current) {\n        this.currentGroupIndex = prefix(this.parentIndex, this.groupIndex++);\n        return {\n          done: false,\n          value: {\n            data: this.current,\n            index: this.currentGroupIndex,\n            level: this.level,\n            type: 'group'\n          }\n        };\n      } else {\n        this.current = null;\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    }\n  }, {\n    key: \"footerItem\",\n    value: function footerItem() {\n      if (this.current) {\n        var group = this.current;\n        this.current = null;\n        return {\n          done: false,\n          value: {\n            data: group,\n            groupIndex: this.currentGroupIndex,\n            level: this.level,\n            type: 'footer'\n          }\n        };\n      } else {\n        this.current = null;\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n    }\n  }, {\n    key: \"innerIterator\",\n    value: function innerIterator(group) {\n      if (!this._innerIterator) {\n        this._innerIterator = getIterator$1(group.items, {\n          dataIndex: this.dataIndex,\n          footers: this.outputFooters,\n          level: this.level + 1,\n          parentGroupIndex: this.currentGroupIndex\n        });\n      }\n\n      return this._innerIterator;\n    }\n  }, {\n    key: \"nextDataItem\",\n    value: function nextDataItem(group) {\n      var iterator$$1 = this.innerIterator(group);\n      var result = iterator$$1.next();\n\n      if (isPresent(result.value) && !result.done && result.value.type === \"data\") {\n        this.dataIndex = result.value.index + 1;\n      }\n\n      return !result.done ? result : undefined;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (!isPresent(this.current)) {\n        return this.nextGroupItem();\n      }\n\n      var item = this.nextDataItem(this.current);\n      return item ? item : this.outputFooters ? this.footerItem() : this.nextGroupItem();\n    }\n    /**\n     * The index of the last iterated data record.\n     * @readonly\n     * @type {number}\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this.dataIndex + 1;\n    }\n  }]);\n\n  return GroupIterator;\n}();\n/**\n * @hidden\n */\n\n\nvar DataResultIterator = /*#__PURE__*/function () {\n  function DataResultIterator(source) {\n    var skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var groupFooters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, DataResultIterator);\n\n    this.source = source;\n    this.skip = skip;\n    this.groupFooters = groupFooters;\n    this.source = this.source ? this.source : [];\n    this.isObject = this.isGridDataResult(this.source);\n  }\n\n  _createClass(DataResultIterator, [{\n    key: \"isGridDataResult\",\n    value: function isGridDataResult(source) {\n      return source.total !== undefined && source.data !== undefined;\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return this.data.map(fn);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      return this.data.filter(fn);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn, init) {\n      return this.data.reduce(fn, init);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      this.data.forEach(fn);\n    }\n  }, {\n    key: \"some\",\n    value: function some(fn) {\n      return this.data.some(fn);\n    }\n  }, {\n    key: iterator,\n    value: function value() {\n      return getIterator$1(this.data, {\n        dataIndex: this.skip,\n        footers: this.groupFooters,\n        groupIndex: this.skip\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.data.toString();\n    }\n  }, {\n    key: \"total\",\n    get: function get() {\n      return this.isObject ? this.source.total : this.source.length;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.isObject ? this.source.data : this.source;\n    }\n  }]);\n\n  return DataResultIterator;\n}();\n/**\n * @hidden\n */\n\n\nvar DataCollection = /*#__PURE__*/function () {\n  function DataCollection(accessor) {\n    _classCallCheck(this, DataCollection);\n\n    this.accessor = accessor;\n  }\n\n  _createClass(DataCollection, [{\n    key: \"at\",\n    value: function at(index) {\n      return itemAt(this.accessor().data, index);\n    }\n  }, {\n    key: \"map\",\n    value: function map(fn) {\n      return this.accessor().map(fn);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(fn) {\n      return this.accessor().filter(fn);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(fn, init) {\n      return this.accessor().reduce(fn, init);\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      this.accessor().forEach(fn);\n    }\n  }, {\n    key: \"some\",\n    value: function some(fn) {\n      return this.accessor().some(fn);\n    }\n  }, {\n    key: iterator,\n    value: function value() {\n      return this.accessor()[iterator]();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.accessor().toString();\n    }\n  }, {\n    key: \"total\",\n    get: function get() {\n      return this.accessor().total;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.accessor().data.length;\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      return this.accessor().data[0];\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.accessor().data[this.length - 1];\n    }\n  }]);\n\n  return DataCollection;\n}();\n/* tslint:disable:no-input-rename */\n\n/**\n * @hidden\n */\n\n\nvar Selection = /*#__PURE__*/function () {\n  function Selection(grid, cd) {\n    _classCallCheck(this, Selection);\n\n    this.grid = grid;\n    this.cd = cd;\n    /**\n     * Defines the collection that will store the selected item keys.\n     */\n\n    this.selectedKeys = [];\n    /**\n     * Fires when the `selectedKeys` collection has been updated.\n     */\n\n    this.selectedKeysChange = new EventEmitter();\n    this.init();\n  }\n\n  _createClass(Selection, [{\n    key: \"init\",\n    value: function init() {\n      var _this16 = this;\n\n      if (!isPresent(this.grid.rowSelected)) {\n        this.grid.rowSelected = function (row) {\n          return _this16.selectedKeys.indexOf(_this16.getItemKey(row)) >= 0;\n        };\n      }\n\n      if (!isPresent(this.grid.cellSelected)) {\n        this.grid.cellSelected = function (row, column, colIndex) {\n          var contender = _this16.getSelectionItem(row, column, colIndex);\n\n          return {\n            selected: _this16.selectedKeys.some(function (item) {\n              return item.columnKey === contender.columnKey && item.itemKey === contender.itemKey;\n            }),\n            item: contender\n          };\n        };\n      }\n\n      this.selectionChangeSubscription = this.grid.selectionChange.subscribe(this.onSelectionChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.selectionChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.selectedKeys = [];\n    }\n  }, {\n    key: \"getItemKey\",\n    value: function getItemKey(row) {\n      if (this.selectionKey) {\n        if (typeof this.selectionKey === \"string\") {\n          return row.dataItem[this.selectionKey];\n        }\n\n        if (typeof this.selectionKey === \"function\") {\n          return this.selectionKey(row);\n        }\n      }\n\n      return row.index;\n    }\n  }, {\n    key: \"getSelectionItem\",\n    value: function getSelectionItem(row, col, colIndex) {\n      var itemIdentifiers = {};\n      itemIdentifiers.itemKey = this.getItemKey(row);\n\n      if (!isPresent(col) && !isPresent(colIndex)) {\n        return itemIdentifiers;\n      }\n\n      if (this.columnKey) {\n        if (typeof this.columnKey === \"string\") {\n          itemIdentifiers.columnKey = row.dataItem[this.columnKey];\n        }\n\n        if (typeof this.columnKey === \"function\") {\n          itemIdentifiers.columnKey = this.columnKey(col, colIndex);\n        }\n      }\n\n      return {\n        itemKey: itemIdentifiers.itemKey,\n        columnKey: itemIdentifiers.columnKey ? itemIdentifiers.columnKey : colIndex\n      };\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(selection) {\n      var _this17 = this;\n\n      if (selection.selectedRows) {\n        selection.deselectedRows.forEach(function (item) {\n          var itemKey = _this17.getItemKey(item);\n\n          var itemIndex = _this17.selectedKeys.indexOf(itemKey);\n\n          if (itemIndex >= 0) {\n            _this17.selectedKeys.splice(itemIndex, 1);\n          }\n        });\n\n        if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n          this.reset();\n        }\n\n        selection.selectedRows.forEach(function (item) {\n          var itemKey = _this17.getItemKey(item);\n\n          if (_this17.selectedKeys.indexOf(itemKey) < 0) {\n            _this17.selectedKeys.push(itemKey);\n          }\n        });\n      } else {\n        selection.deselectedCells.forEach(function (item) {\n          var itemIndex = _this17.getCellSelectionItemIndex(item);\n\n          if (itemIndex >= 0) {\n            _this17.selectedKeys.splice(itemIndex, 1);\n          }\n        });\n\n        if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n          this.reset();\n        }\n\n        selection.selectedCells.forEach(function (item) {\n          var itemIndex = _this17.getCellSelectionItemIndex(item);\n\n          if (itemIndex < 0) {\n            _this17.selectedKeys.push(item);\n          }\n        });\n      }\n\n      this.cd.markForCheck();\n      this.selectedKeysChange.emit(this.selectedKeys);\n    }\n  }, {\n    key: \"getCellSelectionItemIndex\",\n    value: function getCellSelectionItemIndex(item) {\n      return this.selectedKeys.findIndex(function (selectedItem) {\n        return selectedItem.itemKey === item.itemKey && selectedItem.columnKey === item.columnKey;\n      });\n    }\n  }]);\n\n  return Selection;\n}();\n\nSelection.ɵfac = function Selection_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nSelection.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Selection,\n  inputs: {\n    selectedKeys: \"selectedKeys\",\n    selectionKey: [\"kendoGridSelectBy\", \"selectionKey\"],\n    columnKey: \"columnKey\"\n  },\n  outputs: {\n    selectedKeysChange: \"selectedKeysChange\"\n  }\n});\nSelection.propDecorators = {\n  selectedKeys: [{\n    type: Input\n  }],\n  selectionKey: [{\n    type: Input,\n    args: [\"kendoGridSelectBy\"]\n  }],\n  columnKey: [{\n    type: Input\n  }],\n  selectedKeysChange: [{\n    type: Output\n  }]\n};\n/**\n * @hidden\n */\n\nvar PreventableEvent = /*#__PURE__*/function () {\n  function PreventableEvent() {\n    _classCallCheck(this, PreventableEvent);\n\n    this.prevented = false;\n  }\n  /**\n   * Prevents the default action for a specified event.\n   * In this way, the source component suppresses\n   * the built-in behavior that follows the event.\n   */\n\n\n  _createClass(PreventableEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.prevented = true;\n    }\n    /**\n     * Returns `true` if the event was prevented\n     * by any of its subscribers.\n     *\n     * @returns `true` if the default action was prevented.\n     * Otherwise, returns `false`.\n     */\n\n  }, {\n    key: \"isDefaultPrevented\",\n    value: function isDefaultPrevented() {\n      return this.prevented;\n    }\n  }]);\n\n  return PreventableEvent;\n}();\n/**\n * Arguments for the `cellClose` event.\n */\n\n\nvar CellCloseEvent = /*#__PURE__*/function (_PreventableEvent) {\n  _inherits(CellCloseEvent, _PreventableEvent);\n\n  var _super6 = _createSuper(CellCloseEvent);\n\n  function CellCloseEvent(options) {\n    var _this18;\n\n    _classCallCheck(this, CellCloseEvent);\n\n    _this18 = _super6.call(this);\n    /**\n     * @hidden\n     */\n\n    _this18.action = 'cellClose';\n    Object.assign(_assertThisInitialized(_this18), options);\n    return _this18;\n  }\n\n  return CellCloseEvent;\n}(PreventableEvent);\n/**\n * @hidden\n */\n\n\nvar isEqual = function isEqual(index) {\n  return function (item) {\n    return item.index === index;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar isNotEqual = function isNotEqual(index) {\n  return function (item) {\n    return item.index !== index;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar isNewRow = function isNewRow(index) {\n  return index === -1 || index === undefined;\n};\n/**\n * @hidden\n */\n\n\nvar EditService = /*#__PURE__*/function () {\n  function EditService(ngZone) {\n    var _this19 = this;\n\n    _classCallCheck(this, EditService);\n\n    this.ngZone = ngZone;\n    this.changes = new EventEmitter();\n    this.editedIndices = [];\n    this.keepEditCell = false;\n    this.closingCell = false;\n    this.changedSource = new Subject();\n    this.changed = this.changedSource.asObservable().pipe(switchMap(function () {\n      return _this19.ngZone.onStable.asObservable().pipe(take(1));\n    }));\n  }\n\n  _createClass(EditService, [{\n    key: \"editRow\",\n    value: function editRow(index) {\n      var group = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      this.editedIndices.push({\n        index: index,\n        group: group\n      });\n      this.onChanged();\n    }\n  }, {\n    key: \"addRow\",\n    value: function addRow(group) {\n      this.newItemGroup = {\n        group: group\n      };\n      this.onChanged();\n    }\n  }, {\n    key: \"editCell\",\n    value: function editCell(rowIndex, column, group) {\n      if (isNewRow(rowIndex) || column.editable === false || !(column.editTemplate || column.field)) {\n        return;\n      }\n\n      this.preventCellClose();\n\n      if (!this.closeCell()) {\n        this.editRow(rowIndex, group);\n        this.column = column;\n        this.onChanged();\n      }\n    }\n  }, {\n    key: \"isEditing\",\n    value: function isEditing() {\n      return this.editedIndices.length > 0;\n    }\n  }, {\n    key: \"isEditingCell\",\n    value: function isEditingCell() {\n      return this.isEditing() && this.column !== undefined;\n    }\n  }, {\n    key: \"close\",\n    value: function close(index) {\n      if (isNewRow(index)) {\n        this.newItemGroup = undefined;\n        return;\n      }\n\n      this.editedIndices = this.editedIndices.filter(isNotEqual(index));\n      delete this.column;\n      this.onChanged();\n    }\n  }, {\n    key: \"closeCell\",\n    value: function closeCell(originalEvent) {\n      var _this20 = this;\n\n      if (this.column && !this.closingCell) {\n        return this.ngZone.run(function () {\n          var _this20$editedIndices = _this20.editedIndices[0],\n              index = _this20$editedIndices.index,\n              group = _this20$editedIndices.group;\n          var args = new CellCloseEvent({\n            column: _this20.column,\n            formGroup: group,\n            originalEvent: originalEvent,\n            rowIndex: index\n          });\n          _this20.closingCell = true;\n\n          _this20.changes.emit(args);\n\n          _this20.closingCell = false;\n\n          if (!args.isDefaultPrevented()) {\n            _this20.cancelCell();\n          }\n\n          return args.isDefaultPrevented();\n        });\n      }\n    }\n  }, {\n    key: \"cancelCell\",\n    value: function cancelCell() {\n      if (this.column) {\n        this.editedIndices = [];\n        delete this.column;\n        this.onChanged();\n      }\n    }\n  }, {\n    key: \"shouldCloseCell\",\n    value: function shouldCloseCell() {\n      return this.column && !this.keepEditCell;\n    }\n  }, {\n    key: \"preventCellClose\",\n    value: function preventCellClose() {\n      var _this21 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        window.clearTimeout(_this21.keepCellTimeout);\n        _this21.keepEditCell = true;\n        _this21.keepCellTimeout = window.setTimeout(function () {\n          _this21.keepEditCell = false;\n        }, 0); // tslint:disable-line:align\n      });\n    }\n  }, {\n    key: \"context\",\n    value: function context(index) {\n      if (isNewRow(index)) {\n        return this.newItemGroup;\n      }\n\n      return this.findByIndex(index);\n    }\n  }, {\n    key: \"columnContext\",\n    value: function columnContext(index, column) {\n      if (isNewRow(index)) {\n        return this.newItemGroup;\n      }\n\n      if (!this.column || column === this.column) {\n        return this.findByIndex(index);\n      }\n    }\n  }, {\n    key: \"isEdited\",\n    value: function isEdited(index) {\n      if (isNewRow(index) && isPresent(this.newItemGroup)) {\n        return true;\n      }\n\n      return !this.column && isPresent(this.findByIndex(index));\n    }\n  }, {\n    key: \"hasEdited\",\n    value: function hasEdited(index) {\n      return isPresent(this.context(index));\n    }\n  }, {\n    key: \"isEditedColumn\",\n    value: function isEditedColumn(index, column) {\n      if (this.column && this.column === column) {\n        return isPresent(this.findByIndex(index));\n      }\n\n      return false;\n    }\n  }, {\n    key: \"beginEdit\",\n    value: function beginEdit(rowIndex) {\n      this.changes.emit({\n        action: 'edit',\n        rowIndex: rowIndex\n      });\n    }\n  }, {\n    key: \"beginAdd\",\n    value: function beginAdd() {\n      this.changes.emit({\n        action: 'add'\n      });\n    }\n  }, {\n    key: \"endEdit\",\n    value: function endEdit(rowIndex) {\n      var _this$context = this.context(rowIndex),\n          formGroup = _this$context.group;\n\n      this.changes.emit({\n        action: 'cancel',\n        rowIndex: rowIndex,\n        formGroup: formGroup,\n        isNew: isNewRow(rowIndex)\n      });\n    }\n  }, {\n    key: \"save\",\n    value: function save(rowIndex) {\n      var _this$context2 = this.context(rowIndex),\n          formGroup = _this$context2.group;\n\n      this.changes.emit({\n        action: 'save',\n        rowIndex: rowIndex,\n        formGroup: formGroup,\n        isNew: isNewRow(rowIndex)\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(rowIndex) {\n      this.changes.emit({\n        action: 'remove',\n        rowIndex: rowIndex\n      });\n    }\n  }, {\n    key: \"findByIndex\",\n    value: function findByIndex(index) {\n      return this.editedIndices.find(isEqual(index));\n    }\n  }, {\n    key: \"onChanged\",\n    value: function onChanged() {\n      var _this22 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        _this22.changedSource.next();\n      });\n    }\n  }, {\n    key: \"hasNewItem\",\n    get: function get() {\n      return isPresent(this.newItemGroup);\n    }\n  }, {\n    key: \"newDataItem\",\n    get: function get() {\n      if (this.hasNewItem) {\n        return this.newItemGroup.group.value;\n      }\n\n      return {};\n    }\n  }]);\n\n  return EditService;\n}();\n\nEditService.ɵfac = function EditService_Factory(t) {\n  return new (t || EditService)(ɵngcc0.ɵɵinject(NgZone));\n};\n\nEditService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: EditService,\n  factory: EditService.ɵfac\n});\n/** @nocollapse */\n\nEditService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }];\n  }, null);\n})();\n/**\n * Arguments for the `detailCollapse` event.\n */\n\n\nvar DetailCollapseEvent = /*#__PURE__*/function (_PreventableEvent2) {\n  _inherits(DetailCollapseEvent, _PreventableEvent2);\n\n  var _super7 = _createSuper(DetailCollapseEvent);\n\n  function DetailCollapseEvent(args) {\n    var _this23;\n\n    _classCallCheck(this, DetailCollapseEvent);\n\n    _this23 = _super7.call(this);\n    Object.assign(_assertThisInitialized(_this23), args);\n    return _this23;\n  }\n\n  return DetailCollapseEvent;\n}(PreventableEvent);\n/**\n * Arguments for the `detailExpand` event.\n */\n\n\nvar DetailExpandEvent = /*#__PURE__*/function (_PreventableEvent3) {\n  _inherits(DetailExpandEvent, _PreventableEvent3);\n\n  var _super8 = _createSuper(DetailExpandEvent);\n\n  function DetailExpandEvent(args) {\n    var _this24;\n\n    _classCallCheck(this, DetailExpandEvent);\n\n    _this24 = _super8.call(this);\n    Object.assign(_assertThisInitialized(_this24), args);\n    return _this24;\n  }\n\n  return DetailExpandEvent;\n}(PreventableEvent);\n/**\n * @hidden\n */\n\n\nvar DetailsService = /*#__PURE__*/function () {\n  function DetailsService() {\n    _classCallCheck(this, DetailsService);\n\n    this.changes = new Subject();\n    this.rowState = new Set();\n  }\n\n  _createClass(DetailsService, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.rowState.clear();\n    }\n  }, {\n    key: \"isExpanded\",\n    value: function isExpanded(index, dataItem) {\n      if (this.userCallback) {\n        return this.userCallback({\n          index: index,\n          dataItem: dataItem\n        });\n      }\n\n      return this.rowState.has(index);\n    }\n  }, {\n    key: \"toggleRow\",\n    value: function toggleRow(index, dataItem) {\n      if (this.isExpanded(index, dataItem)) {\n        this.collapseRow(index, dataItem);\n      } else {\n        this.expandRow(index, dataItem);\n      }\n    }\n  }, {\n    key: \"expandRow\",\n    value: function expandRow(index, dataItem) {\n      var prevented = this.emitEvent({\n        dataItem: dataItem,\n        index: index,\n        expand: true\n      });\n\n      if (!prevented && !this.userCallback) {\n        this.rowState.add(index);\n      }\n    }\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(index, dataItem) {\n      var prevented = this.emitEvent({\n        dataItem: dataItem,\n        index: index,\n        expand: false\n      });\n\n      if (!prevented && !this.userCallback) {\n        this.rowState.delete(index);\n      }\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(args) {\n      var eventArg = new (args.expand ? DetailExpandEvent : DetailCollapseEvent)(args);\n      this.changes.next(eventArg);\n      return eventArg.isDefaultPrevented();\n    }\n  }]);\n\n  return DetailsService;\n}();\n\nDetailsService.ɵfac = function DetailsService_Factory(t) {\n  return new (t || DetailsService)();\n};\n\nDetailsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DetailsService,\n  factory: DetailsService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DetailsService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ExpandStateService = /*#__PURE__*/function () {\n  function ExpandStateService(isInitiallyCollapsed) {\n    _classCallCheck(this, ExpandStateService);\n\n    this.isInitiallyCollapsed = isInitiallyCollapsed;\n    this.changes = new Subject();\n    this.rowState = new Set();\n  }\n\n  _createClass(ExpandStateService, [{\n    key: \"toggleRow\",\n    value: function toggleRow(index, dataItem) {\n      var found = this.rowState.has(index);\n      var expand = !this.isInitiallyCollapsed ? found : !found;\n      var prevented = this.emitEvent({\n        dataItem: dataItem,\n        expand: expand,\n        index: index\n      });\n\n      if (prevented) {\n        return;\n      }\n\n      if (found) {\n        this.rowState.delete(index);\n      } else {\n        this.rowState.add(index);\n      }\n    }\n  }, {\n    key: \"isExpanded\",\n    value: function isExpanded(index) {\n      var found = this.rowState.has(index);\n      return this.isInitiallyCollapsed ? found : !found;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.rowState.clear();\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(args) {\n      this.changes.next(args);\n      return false;\n    }\n  }]);\n\n  return ExpandStateService;\n}();\n\nvar removeLast = function removeLast(groupIndex) {\n  return groupIndex.lastIndexOf(\"_\") > -1 ? groupIndex.slice(0, groupIndex.lastIndexOf(\"_\")) : \"\";\n};\n\nvar isChildIndex = function isChildIndex(targetIndex, parentIndex) {\n  return parentIndex !== targetIndex && targetIndex.startsWith(parentIndex);\n};\n/**\n * @hidden\n */\n\n\nvar GroupsService = /*#__PURE__*/function (_ExpandStateService) {\n  _inherits(GroupsService, _ExpandStateService);\n\n  var _super9 = _createSuper(GroupsService);\n\n  function GroupsService() {\n    var isCollapsed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    _classCallCheck(this, GroupsService);\n\n    return _super9.call(this, isCollapsed);\n  }\n\n  _createClass(GroupsService, [{\n    key: \"isInExpandedGroup\",\n    value: function isInExpandedGroup(groupIndex) {\n      var skipSelf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (skipSelf) {\n        groupIndex = removeLast(groupIndex);\n      }\n\n      var expanded = true;\n\n      while (groupIndex && expanded) {\n        expanded = this.isExpanded(groupIndex);\n        groupIndex = removeLast(groupIndex);\n      }\n\n      return expanded;\n    }\n  }, {\n    key: \"expandChildren\",\n    value: function expandChildren(parentIndex) {\n      var _this25 = this;\n\n      this.rowState.forEach(function (index) {\n        return isChildIndex(index, parentIndex) && _this25.rowState.delete(index);\n      });\n    }\n  }]);\n\n  return GroupsService;\n}(ExpandStateService);\n\nGroupsService.ɵfac = function GroupsService_Factory(t) {\n  return new (t || GroupsService)(ɵngcc0.ɵɵinject(Skip, 8));\n};\n\nGroupsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: GroupsService,\n  factory: GroupsService.ɵfac\n});\n/** @nocollapse */\n\nGroupsService.ctorParameters = function () {\n  return [{\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [Skip]\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [Skip]\n      }]\n    }];\n  }, null);\n})();\n\nvar reset = function reset() {\n  var diff = false;\n\n  for (var idx = 0; idx < arguments.length; idx++) {\n    var _ref2 = idx < 0 || arguments.length <= idx ? undefined : arguments[idx],\n        _ref3 = _slicedToArray(_ref2, 2),\n        list = _ref3[0],\n        columns = _ref3[1];\n\n    diff = diff || list.length !== columns.length;\n    list.reset(columns);\n  }\n\n  return diff;\n};\n/**\n * @hidden\n */\n\n\nvar ColumnsContainer = /*#__PURE__*/function () {\n  function ColumnsContainer(columns) {\n    _classCallCheck(this, ColumnsContainer);\n\n    this.columns = columns;\n    this.allColumns = new QueryList();\n    this.leafColumns = new QueryList();\n    this.lockedColumns = new QueryList();\n    this.nonLockedColumns = new QueryList();\n    this.lockedLeafColumns = new QueryList();\n    this.nonLockedLeafColumns = new QueryList();\n    this.totalLevels = 0;\n    this.changes = new EventEmitter();\n    this.leafColumnsToRender = [];\n    this.lockedColumnsToRender = [];\n    this.nonLockedColumnsToRender = [];\n    this.hasGroupHeaderColumn = false;\n    this.hasGroupFooter = false;\n    this.hasFooter = false;\n    this.unlockedWidth = 0;\n  }\n\n  _createClass(ColumnsContainer, [{\n    key: \"refresh\",\n    value: function refresh() {\n      var _this26 = this;\n\n      var currentLevels = this.totalLevels;\n      var leafColumns$$1 = new Array();\n      var lockedLeafColumns = new Array();\n      var nonLockedLeafColumns = new Array();\n      var lockedColumns = new Array();\n      var nonLockedColumns = new Array();\n      var allColumns = new Array();\n      var leafColumnsToRender = new Array();\n      var lockedColumnsToRender = new Array();\n      var nonLockedColumnsToRender = new Array();\n      var hasGroupHeaderColumn = false;\n      var hasGroupFooter = false;\n      var hasFooter = false;\n      var unlockedWidth = 0;\n      var leafIndex = 0;\n      this.totalLevels = 0;\n      this.columns().forEach(function (column) {\n        var containerLeafColumns = column.isLocked === true ? lockedLeafColumns : nonLockedLeafColumns;\n        var containerColumns = column.isLocked === true ? lockedColumns : nonLockedColumns;\n        var toRenderContainer = column.isLocked === true ? lockedColumnsToRender : nonLockedColumnsToRender;\n\n        if (!_isColumnGroupComponent(column)) {\n          containerLeafColumns.push(column);\n          leafColumns$$1.push(column);\n          leafColumnsToRender.push.apply(leafColumnsToRender, columnsToRender([column]));\n          toRenderContainer.push.apply(toRenderContainer, columnsToRender([column]));\n          hasGroupHeaderColumn = hasGroupHeaderColumn || someLeafColumn(function (leaf) {\n            return Boolean(leaf.groupHeaderColumnTemplateRef);\n          }, column);\n          hasGroupFooter = hasGroupFooter || someLeafColumn(function (leaf) {\n            return Boolean(leaf.groupFooterTemplateRef);\n          }, column);\n          hasFooter = hasFooter || someLeafColumn(function (leaf) {\n            return Boolean(leaf.footerTemplateRef);\n          }, column);\n\n          if (!column.isLocked) {\n            unlockedWidth += column.width || 0;\n          }\n\n          if (column.isSpanColumn) {\n            column.childColumns.forEach(function (c) {\n              c.leafIndex = leafIndex++;\n            });\n          } else {\n            column.leafIndex = leafIndex++;\n          }\n        }\n\n        containerColumns.push(column);\n        allColumns.push(column);\n        _this26.totalLevels = column.level > _this26.totalLevels ? column.level : _this26.totalLevels;\n      });\n      this.hasGroupHeaderColumn = hasGroupHeaderColumn;\n      this.hasGroupFooter = hasGroupFooter;\n      this.hasFooter = hasFooter;\n      this.leafColumnsToRender = leafColumnsToRender;\n      this.lockedColumnsToRender = lockedColumnsToRender;\n      this.nonLockedColumnsToRender = nonLockedColumnsToRender;\n      this.unlockedWidth = unlockedWidth;\n      var changes = reset([this.leafColumns, leafColumns$$1], [this.lockedLeafColumns, lockedLeafColumns], [this.nonLockedLeafColumns, nonLockedLeafColumns], [this.lockedColumns, lockedColumns], [this.allColumns, allColumns], [this.nonLockedColumns, nonLockedColumns]) || currentLevels !== this.totalLevels;\n\n      if (changes) {\n        this.changes.emit();\n      }\n\n      return changes;\n    }\n  }]);\n\n  return ColumnsContainer;\n}();\n\nvar forEachColumn = function forEachColumn(list, callback) {\n  list.forEach(function (column) {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachColumn(column.childrenArray, callback);\n    }\n  });\n};\n\nvar forEachLevel = function forEachLevel(list, callback) {\n  sortColumns(list).forEach(function (column) {\n    callback(column);\n\n    if (column.isColumnGroup && column.hasChildren) {\n      forEachLevel(column.childrenArray, callback);\n    }\n  });\n};\n\nvar _filterHierarchy = function filterHierarchy(list, predicate) {\n  var result = [];\n  sortColumns(list).forEach(function (column) {\n    if (predicate(column)) {\n      if (column.isColumnGroup) {\n        var children$$1 = _filterHierarchy(column.childrenArray, predicate);\n\n        if (children$$1.length) {\n          result.push.apply(result, [column].concat(_toConsumableArray(children$$1)));\n        }\n      } else if (!column.isSpanColumn || _filterHierarchy(column.childrenArray, predicate).length) {\n        result.push(column);\n      }\n    }\n  });\n  return result;\n};\n/**\n * @hidden\n */\n\n\nvar ColumnList = /*#__PURE__*/function () {\n  function ColumnList(columns) {\n    _classCallCheck(this, ColumnList);\n\n    this.columns = columns;\n  }\n\n  _createClass(ColumnList, [{\n    key: \"forEach\",\n    value: function forEach(callback) {\n      forEachColumn(this.columns, callback);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(callback) {\n      var result = [];\n      forEachColumn(this.columns, function (column) {\n        if (callback(column)) {\n          result.push(column);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"filterHierarchy\",\n    value: function filterHierarchy(predicate) {\n      return _filterHierarchy(this.columns.toArray(), predicate);\n    }\n  }, {\n    key: \"filterSort\",\n    value: function filterSort(callback) {\n      var result = [];\n      forEachLevel(this.columns.toArray(), function (column) {\n        if (callback(column)) {\n          result.push(column);\n        }\n      });\n      return result;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var result = [];\n      forEachColumn(this.columns, function (column) {\n        result.push(column);\n      });\n      return result;\n    }\n  }, {\n    key: \"rootColumns\",\n    value: function rootColumns() {\n      return this.columns.toArray();\n    }\n  }], [{\n    key: \"empty\",\n    value: function empty() {\n      return new ColumnList(new QueryList());\n    }\n  }]);\n\n  return ColumnList;\n}();\n/**\n * @hidden\n */\n\n\nvar GroupInfoService = /*#__PURE__*/function () {\n  function GroupInfoService() {\n    _classCallCheck(this, GroupInfoService);\n\n    this._columnList = ColumnList.empty;\n  }\n\n  _createClass(GroupInfoService, [{\n    key: \"registerColumnsContainer\",\n    value: function registerColumnsContainer(columns) {\n      this._columnList = columns;\n    }\n  }, {\n    key: \"formatForGroup\",\n    value: function formatForGroup(item) {\n      var column = this.columnForGroup(item);\n      return column ? column.format : \"\";\n    }\n  }, {\n    key: \"isGroupable\",\n    value: function isGroupable(groupField) {\n      var _this$columns$filter = this.columns.filter(function (x) {\n        return x.field === groupField;\n      }),\n          _this$columns$filter2 = _slicedToArray(_this$columns$filter, 1),\n          column = _this$columns$filter2[0];\n\n      return column ? column.groupable : true;\n    }\n  }, {\n    key: \"groupTitle\",\n    value: function groupTitle(item) {\n      var column = this.columnForGroup(item);\n      return column ? column.title || column.field : this.groupField(item);\n    }\n  }, {\n    key: \"groupHeaderTemplate\",\n    value: function groupHeaderTemplate(item) {\n      var column = this.columnForGroup(item);\n      return column ? column.groupHeaderTemplateRef || column.groupHeaderColumnTemplateRef : undefined;\n    }\n  }, {\n    key: \"groupField\",\n    value: function groupField(group) {\n      return group.data ? group.data.field : group.field;\n    }\n  }, {\n    key: \"columnForGroup\",\n    value: function columnForGroup(group) {\n      var field = this.groupField(group);\n\n      var _this$columns$filter3 = this.columns.filter(function (x) {\n        return x.field === field;\n      }),\n          _this$columns$filter4 = _slicedToArray(_this$columns$filter3, 1),\n          column = _this$columns$filter4[0];\n\n      return column;\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n    }\n  }]);\n\n  return GroupInfoService;\n}();\n\nGroupInfoService.ɵfac = function GroupInfoService_Factory(t) {\n  return new (t || GroupInfoService)();\n};\n\nGroupInfoService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: GroupInfoService,\n  factory: GroupInfoService.ɵfac\n});\n/**\n * @hidden\n */\n\nvar ChangeNotificationService = /*#__PURE__*/function () {\n  function ChangeNotificationService(ngZone) {\n    _classCallCheck(this, ChangeNotificationService);\n\n    this.ngZone = ngZone;\n    this.changes = new EventEmitter();\n  }\n\n  _createClass(ChangeNotificationService, [{\n    key: \"notify\",\n    value: function notify() {\n      var _this27 = this;\n\n      if (!this.subscription || this.subscription.closed) {\n        this.subscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n          return _this27.changes.emit();\n        });\n      }\n    }\n  }]);\n\n  return ChangeNotificationService;\n}();\n\nChangeNotificationService.ɵfac = function ChangeNotificationService_Factory(t) {\n  return new (t || ChangeNotificationService)(ɵngcc0.ɵɵinject(NgZone));\n};\n\nChangeNotificationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ChangeNotificationService,\n  factory: ChangeNotificationService.ɵfac\n});\n/** @nocollapse */\n\nChangeNotificationService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ChangeNotificationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }];\n  }, null);\n})();\n/**\n * Represents the no-records template of the Grid. Provides an option to customize the\n * appearance of the item that is displayed when no data is present. To define the no-records template,\n * nest an `<ng-template>` tag with the `kendoGridNoRecordsTemplate` directive inside `<kendo-grid>`.\n *\n * > When the locked columns of the Grid are in use, the template is displayed in the non-locked part of the content.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid [data]=\"data\">\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridNoRecordsTemplate>\n *            There are not products. <a href=\"#\" (click)=\"refresh()\">Click here to refresh</a>.\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [];\n *     public refresh() {\n *       this.data = [{\n *            \"ProductID\": 1,\n *            \"ProductName\": \"Chai\",\n *            \"UnitPrice\": 18.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 2,\n *            \"ProductName\": \"Chang\",\n *            \"UnitPrice\": 19.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 3,\n *            \"ProductName\": \"Aniseed Syrup\",\n *            \"UnitPrice\": 10.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 2,\n *                \"CategoryName\": \"Condiments\",\n *                \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *            }\n *        }];\n *\n *     }\n * }\n *\n * ```\n */\n\n\nvar NoRecordsTemplateDirective = function NoRecordsTemplateDirective(templateRef) {\n  _classCallCheck(this, NoRecordsTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nNoRecordsTemplateDirective.ɵfac = function NoRecordsTemplateDirective_Factory(t) {\n  return new (t || NoRecordsTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nNoRecordsTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NoRecordsTemplateDirective,\n  selectors: [[\"\", \"kendoGridNoRecordsTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nNoRecordsTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NoRecordsTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridNoRecordsTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nvar set = function set(value) {\n  return function (pair) {\n    return pair.forEach(function (x) {\n      return x.style.height = value;\n    });\n  };\n};\n\nvar clearHeight = function clearHeight(pairs) {\n  return pairs.filter(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        left = _ref5[0],\n        right = _ref5[1];\n\n    return left.style.height || right.style.height;\n  }).forEach(set(\"\"));\n};\n\nvar zip$1 = function zip$1(arr1, arr2) {\n  var result = [];\n\n  for (var idx = 0, len = arr1.length; idx < len; idx++) {\n    if (!arr2[idx]) {\n      break;\n    }\n\n    result.push([arr1[idx], arr2[idx]]);\n  }\n\n  return result;\n};\n\nvar setHeight = function setHeight(heights) {\n  return function (row, idx) {\n    return set(\"\".concat(heights[idx] + 1, \"px\"))(row);\n  };\n};\n\nvar getHeights = function getHeights(rows) {\n  return rows.map(function (_ref6) {\n    var _ref7 = _slicedToArray(_ref6, 2),\n        left = _ref7[0],\n        right = _ref7[1];\n\n    var height = left.offsetHeight;\n    var offsetHeight2 = right.offsetHeight;\n\n    if (height < offsetHeight2) {\n      return offsetHeight2;\n    }\n\n    return height;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar _syncRowsHeight = function syncRowsHeight(table1, table2) {\n  var activeElement = document.activeElement;\n  var rows = zip$1(table1.rows, table2.rows);\n  clearHeight(rows);\n  var heights = getHeights(rows);\n  [table1, table2].forEach(function (x) {\n    return x.style.display = 'none';\n  });\n  rows.forEach(setHeight(heights));\n  [table1, table2].forEach(function (x) {\n    return x.style.display = '';\n  });\n\n  if (document.activeElement !== activeElement && (table1.contains(activeElement) || table2.contains(activeElement))) {\n    activeElement.focus();\n  }\n};\n/**\n * @hidden\n */\n\n\nvar CELL_CONTEXT = new InjectionToken('grid-cell-context');\n/**\n * @hidden\n */\n\nvar EMPTY_CELL_CONTEXT = {};\n/**\n * Represents a service to set the filter descriptor\n * ([see example]({% slug reusablecustomfilters_grid %})).\n */\n\nvar FilterService = /*#__PURE__*/function () {\n  function FilterService() {\n    _classCallCheck(this, FilterService);\n\n    /**\n     * Fires when the filter descriptors is set.\n     */\n    this.changes = new Subject();\n  }\n  /**\n   * Sets the filter descriptor.\n   *\n   * @param {CompositeFilterDescriptor} value - The filter descriptor that will be set.\n   */\n\n\n  _createClass(FilterService, [{\n    key: \"filter\",\n    value: function filter(value) {\n      this.changes.next(value);\n    }\n  }]);\n\n  return FilterService;\n}();\n\nFilterService.ɵfac = function FilterService_Factory(t) {\n  return new (t || FilterService)();\n};\n\nFilterService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: FilterService,\n  factory: FilterService.ɵfac\n});\n/**\n * Represents the pager template which helps to customize the pager appearance in the Grid. To define a pager\n * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-grid>`.\n *\n * The template context provides the following fields:\n * * `currentPage`&mdash;The index of the displayed page.\n * * `pageSize`&mdash;The value of the current `pageSize`.\n * * `skip`&mdash;The current skip value.\n * * `total`&mdash;The total number of records.\n * * `totalPages`&mdash;The total number of available pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-info></kendo-pager-info>\n *          Current page: {{currentPage}}\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\nvar PagerTemplateDirective = function PagerTemplateDirective(templateRef) {\n  _classCallCheck(this, PagerTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nPagerTemplateDirective.ɵfac = function PagerTemplateDirective_Factory(t) {\n  return new (t || PagerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nPagerTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PagerTemplateDirective,\n  selectors: [[\"\", \"kendoPagerTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nPagerTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoPagerTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar PagerContextService = /*#__PURE__*/function () {\n  function PagerContextService() {\n    _classCallCheck(this, PagerContextService);\n\n    this.changes = new Subject();\n    this.pageChange = new Subject();\n  }\n\n  _createClass(PagerContextService, [{\n    key: \"notifyChanges\",\n    value: function notifyChanges(changes) {\n      this.total = changes.total;\n      this.pageSize = changes.pageSize;\n      this.skip = changes.skip;\n      this.changes.next(changes);\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(page) {\n      this.pageChange.next({\n        skip: page * this.pageSize,\n        take: this.pageSize\n      });\n    }\n  }, {\n    key: \"changePageSize\",\n    value: function changePageSize(value) {\n      this.pageChange.next({\n        skip: 0,\n        take: value\n      });\n    }\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      var nextPage = this.currentPage + 1;\n\n      if (nextPage * this.pageSize <= this.total) {\n        this.changePage(nextPage);\n      }\n    }\n  }, {\n    key: \"prevPage\",\n    value: function prevPage() {\n      var prevPage = this.currentPage - 1;\n\n      if (prevPage * this.pageSize >= 0) {\n        this.changePage(prevPage);\n      }\n    }\n  }, {\n    key: \"currentPage\",\n    get: function get() {\n      return this.skip / this.pageSize;\n    }\n  }]);\n\n  return PagerContextService;\n}();\n\nPagerContextService.ɵfac = function PagerContextService_Factory(t) {\n  return new (t || PagerContextService)();\n};\n\nPagerContextService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PagerContextService,\n  factory: PagerContextService.ɵfac\n});\n/**\n * @hidden\n */\n\nvar PDFService = /*#__PURE__*/function () {\n  function PDFService() {\n    _classCallCheck(this, PDFService);\n\n    this.savePDF = new EventEmitter();\n    this.drawPDF = new EventEmitter();\n    this.exportClick = new EventEmitter();\n    this.dataChanged = new EventEmitter();\n  }\n\n  _createClass(PDFService, [{\n    key: \"save\",\n    value: function save(component) {\n      this.emitEvent(this.savePDF, component);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(component, promise) {\n      this.emitEvent(this.drawPDF, {\n        component: component,\n        promise: promise\n      });\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(emitter, args) {\n      if (emitter.observers.length === 0) {\n        if (isDevMode()) {\n          throw new Error('Creating PDF requires including the PDFModule and adding the <kendo-grid-pdf> component.');\n        }\n      } else {\n        emitter.emit(args);\n      }\n    }\n  }]);\n\n  return PDFService;\n}();\n\nPDFService.ɵfac = function PDFService_Factory(t) {\n  return new (t || PDFService)();\n};\n\nPDFService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: PDFService,\n  factory: PDFService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Arguments for the `pdfExport` event.\n */\n\n\nvar PDFExportEvent = /*#__PURE__*/function (_PreventableEvent4) {\n  _inherits(PDFExportEvent, _PreventableEvent4);\n\n  var _super10 = _createSuper(PDFExportEvent);\n\n  function PDFExportEvent() {\n    _classCallCheck(this, PDFExportEvent);\n\n    return _super10.apply(this, arguments);\n  }\n\n  return PDFExportEvent;\n}(PreventableEvent);\n/**\n * @hidden\n */\n\n\nvar SuspendService = function SuspendService() {\n  _classCallCheck(this, SuspendService);\n\n  this.scroll = false;\n};\n\nSuspendService.ɵfac = function SuspendService_Factory(t) {\n  return new (t || SuspendService)();\n};\n\nSuspendService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SuspendService,\n  factory: SuspendService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SuspendService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/* tslint:disable: object-literal-sort-keys */\n\n\nvar bootstrapToMedia = function bootstrapToMedia(media) {\n  return {\n    \"xs\": \"(max-width: 576px)\",\n    \"sm\": \"(min-width: 576px)\",\n    \"md\": \"(min-width: 768px)\",\n    \"lg\": \"(min-width: 992px)\",\n    \"xl\": \"(min-width: 1200px)\"\n  }[media] || media;\n};\n/* tslint:enable: object-literal-sort-keys */\n\n\nvar browserMatchMedia = function browserMatchMedia(media) {\n  return window.matchMedia(media).matches;\n};\n/**\n * @hidden\n */\n\n\nvar ResponsiveService = /*#__PURE__*/function () {\n  function ResponsiveService() {\n    _classCallCheck(this, ResponsiveService);\n\n    /**\n     * @hidden\n     */\n    this.matchMedia = browserMatchMedia;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(ResponsiveService, [{\n    key: \"matchesMedia\",\n    value: function matchesMedia(media) {\n      return !media || this.matchMedia(bootstrapToMedia(media));\n    }\n  }]);\n\n  return ResponsiveService;\n}();\n\nResponsiveService.ɵfac = function ResponsiveService_Factory(t) {\n  return new (t || ResponsiveService)();\n};\n\nResponsiveService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ResponsiveService,\n  factory: ResponsiveService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResponsiveService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ExcelService = /*#__PURE__*/function () {\n  function ExcelService() {\n    _classCallCheck(this, ExcelService);\n\n    this.saveToExcel = new EventEmitter();\n    this.exportClick = new EventEmitter();\n  }\n\n  _createClass(ExcelService, [{\n    key: \"save\",\n    value: function save(component) {\n      if (this.saveToExcel.observers.length === 0) {\n        if (isDevMode()) {\n          throw new Error('Saving excel requires including the ExcelModule and adding the <kendo-grid-excel> component.');\n        }\n      } else {\n        this.saveToExcel.emit(component);\n      }\n    }\n  }]);\n\n  return ExcelService;\n}();\n\nExcelService.ɵfac = function ExcelService_Factory(t) {\n  return new (t || ExcelService)();\n};\n\nExcelService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ExcelService,\n  factory: ExcelService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ExcelService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Represents the toolbar template of the Grid.\n *\n * The template context has the following field:\n * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are \"top\" and \"bottom\".\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <div class=\"example-config\">\n *         <input type=\"radio\" id=\"top\" name=\"position\" class=\"k-radio\" value=\"top\" checked (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"top\">Top</label><br/>\n *         <input type=\"radio\" id=\"bottom\" name=\"position\" class=\"k-radio\" value=\"bottom\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"bottom\">Bottom</label><br/>\n *         <input type=\"radio\" id=\"both\" name=\"position\" value=\"both\" class=\"k-radio\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"both\">Both</label><br/>\n *       </div>\n *       <kendo-grid [data]=\"gridData\" style=\"height: 200px\">\n *            <ng-template kendoGridToolbarTemplate [position]=\"position\" let-position=\"position\">\n *                <button (click)=\"onClick()\" class=\"k-button\">Custom action</button>\n *            </ng-template>\n *            <kendo-grid-column field=\"ProductName\">\n *            </kendo-grid-column>\n *            <kendo-grid-column field=\"UnitPrice\">\n *            </kendo-grid-column>\n *        </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public position: 'top' | 'bottom' | 'both' = 'top';\n *\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n *\n *     public onClick(): void {\n *         console.log(\"button was clicked\");\n *     }\n *\n *     public positionChange({ target }): void {\n *        this.position = target.value;\n *     }\n * }\n *\n * ```\n */\n\n\nvar ToolbarTemplateDirective = /*#__PURE__*/function () {\n  function ToolbarTemplateDirective(templateRef) {\n    _classCallCheck(this, ToolbarTemplateDirective);\n\n    this.templateRef = templateRef;\n    this._position = \"top\";\n  }\n  /**\n   * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).\n   *\n   * The possible values are:\n   * - `top`&mdash;Positions the toolbar above the group panel or header.\n   * - `bottom`&mdash;Positions the toolbar below the pager.\n   * - `both`&mdash;Displays two toolbar instances. Positions the first one above\n   * the group panel or header and the second one below the pager.\n   */\n\n\n  _createClass(ToolbarTemplateDirective, [{\n    key: \"position\",\n    set: function set(position) {\n      this._position = position;\n    },\n    get: function get() {\n      return this._position;\n    }\n  }]);\n\n  return ToolbarTemplateDirective;\n}();\n\nToolbarTemplateDirective.ɵfac = function ToolbarTemplateDirective_Factory(t) {\n  return new (t || ToolbarTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nToolbarTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ToolbarTemplateDirective,\n  selectors: [[\"\", \"kendoGridToolbarTemplate\", \"\"]],\n  inputs: {\n    position: \"position\"\n  }\n});\n/** @nocollapse */\n\nToolbarTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nToolbarTemplateDirective.propDecorators = {\n  position: [{\n    type: Input,\n    args: [\"position\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ToolbarTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridToolbarTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    position: [{\n      type: Input,\n      args: [\"position\"]\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar ScrollSyncService = /*#__PURE__*/function () {\n  function ScrollSyncService(ngZone) {\n    var _this28 = this;\n\n    _classCallCheck(this, ScrollSyncService);\n\n    this.ngZone = ngZone;\n    this.changes = new Subject();\n    this.elements = [];\n    this.subscriptions = new Subscription();\n    this.headerSubscription = new Subscription();\n    this.bodySubscription = new Subscription();\n    this.subscriptions.add(this.changes.subscribe(function (args) {\n      return _this28.scrollLeft(args);\n    }));\n  }\n\n  _createClass(ScrollSyncService, [{\n    key: \"registerEmitter\",\n    value: function registerEmitter(el, sourceType) {\n      var _this29 = this;\n\n      this.unregister(sourceType);\n      this.elements.push({\n        element: el,\n        sourceType: sourceType\n      });\n\n      if (sourceType === \"body\" || sourceType === \"header\") {\n        this.ngZone.runOutsideAngular(function () {\n          var obs = fromEvent(el, \"scroll\").pipe(map(function (_ref8) {\n            var scrollLeft = _ref8.target.scrollLeft;\n            return {\n              scrollLeft: scrollLeft,\n              sourceType: sourceType\n            };\n          }));\n          var subscription = obs.pipe(distinctUntilChanged(function (x, y) {\n            return x.scrollLeft === y.scrollLeft;\n          }), filter(function (x) {\n            return !_this29.source || _this29.source === x.sourceType;\n          }), tap(function (x) {\n            return _this29.source = x.sourceType;\n          })).subscribe(function (x) {\n            return _this29.changes.next(x);\n          });\n          subscription.add(obs.pipe(filter(function (x) {\n            return _this29.source && _this29.source !== x.sourceType;\n          })).subscribe(function () {\n            return _this29.source = undefined;\n          }));\n\n          if (sourceType === \"body\") {\n            _this29.bodySubscription.add(subscription);\n          } else {\n            _this29.headerSubscription.add(subscription);\n          }\n        });\n      }\n    }\n    /**\n     * destroy\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.subscriptions.unsubscribe();\n      this.headerSubscription.unsubscribe();\n      this.bodySubscription.unsubscribe();\n    }\n  }, {\n    key: \"scrollLeft\",\n    value: function scrollLeft(_ref9) {\n      var _this30 = this;\n\n      var _scrollLeft = _ref9.scrollLeft,\n          sourceType = _ref9.sourceType;\n      this.ngZone.runOutsideAngular(function () {\n        _this30.elements.filter(function (x) {\n          return sourceType !== x.sourceType;\n        }).forEach(function (_ref10) {\n          var element = _ref10.element;\n          return element.scrollLeft = _scrollLeft;\n        });\n      });\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(sourceType) {\n      var index = this.elements.findIndex(function (x) {\n        return x.sourceType === sourceType;\n      });\n\n      if (index > -1) {\n        if (sourceType === \"header\") {\n          this.headerSubscription.unsubscribe();\n          this.headerSubscription = new Subscription();\n        } else if (sourceType === \"body\") {\n          this.bodySubscription.unsubscribe();\n          this.bodySubscription = new Subscription();\n        }\n\n        this.elements.splice(index, 1);\n      }\n    }\n  }]);\n\n  return ScrollSyncService;\n}();\n\nScrollSyncService.ɵfac = function ScrollSyncService_Factory(t) {\n  return new (t || ScrollSyncService)(ɵngcc0.ɵɵinject(NgZone));\n};\n\nScrollSyncService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScrollSyncService,\n  factory: ScrollSyncService.ɵfac\n});\n/** @nocollapse */\n\nScrollSyncService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollSyncService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ResizeService = /*#__PURE__*/function () {\n  function ResizeService() {\n    _classCallCheck(this, ResizeService);\n\n    this.resizeSubscription = new Subscription(function () {});\n    this.dispatcher = new Subject(); // tslint:disable-next-line:member-ordering\n\n    this.changes = this.dispatcher.asObservable().pipe(throttleTime(100));\n  }\n\n  _createClass(ResizeService, [{\n    key: \"connect\",\n    value: function connect(resizes) {\n      this.resizeSubscription.add(resizes.subscribe(this.dispatcher));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n  }]);\n\n  return ResizeService;\n}();\n\nResizeService.ɵfac = function ResizeService_Factory(t) {\n  return new (t || ResizeService)();\n};\n\nResizeService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ResizeService,\n  factory: ResizeService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizeService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar focusableRegex = /^(?:a|input|select|option|textarea|button|object)$/i;\nvar NODE_NAME_PREDICATES = {};\n\nvar toClassList = function toClassList(classNames) {\n  return String(classNames).trim().split(' ');\n};\n/**\n * @hidden\n */\n\n\nvar hasClasses = function hasClasses(element, classNames) {\n  var namesList = toClassList(classNames);\n  return Boolean(toClassList(element.className).find(function (className) {\n    return namesList.indexOf(className) >= 0;\n  }));\n};\n/**\n * @hidden\n */\n\n\nvar matchesClasses = function matchesClasses(classNames) {\n  return function (element) {\n    return hasClasses(element, classNames);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar matchesNodeName = function matchesNodeName(nodeName) {\n  if (!NODE_NAME_PREDICATES[nodeName]) {\n    NODE_NAME_PREDICATES[nodeName] = function (element) {\n      return String(element.nodeName).toLowerCase() === nodeName.toLowerCase();\n    };\n  }\n\n  return NODE_NAME_PREDICATES[nodeName];\n};\n/**\n * @hidden\n */\n\n\nvar closest = function closest(node, predicate) {\n  while (node && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  return node;\n};\n/**\n * @hidden\n */\n\n\nvar closestInScope = function closestInScope(node, predicate, scope) {\n  while (node && node !== scope && !predicate(node)) {\n    node = node.parentNode;\n  }\n\n  if (node !== scope) {\n    return node;\n  }\n};\n/**\n * @hidden\n */\n\n\nvar contains = function contains(parent, node) {\n  var matchSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var outside = !closest(node, function (child) {\n    return child === parent;\n  });\n\n  if (outside) {\n    return false;\n  }\n\n  var el = closest(node, function (child) {\n    return child === node;\n  });\n  return el && (matchSelf || el !== parent);\n};\n/**\n * @hidden\n */\n\n\nvar isVisible = function isVisible(element) {\n  var rect = element.getBoundingClientRect();\n  var hasSize = rect.width > 0 && rect.height > 0;\n  var hasPosition = rect.x !== 0 && rect.y !== 0; // Elements can have zero size due to styling, but they will still count as visible.\n  // For example, the selection checkbox has no size, but is made visible through styling.\n\n  return (hasSize || hasPosition) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\n\n\nvar isFocusable = function isFocusable(element) {\n  if (!element.tagName) {\n    return false;\n  }\n\n  var tagName = element.tagName.toLowerCase();\n  var hasTabIndex = Boolean(element.getAttribute('tabIndex'));\n  var focusable = !element.disabled && focusableRegex.test(tagName);\n  return focusable || hasTabIndex;\n};\n/**\n * @hidden\n */\n\n\nvar isFocusableWithTabKey = function isFocusableWithTabKey(element) {\n  var checkVisibility = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  if (!isFocusable(element)) {\n    return false;\n  }\n\n  var tabIndex = element.getAttribute('tabIndex');\n  var visible = !checkVisibility || isVisible(element);\n  return visible && tabIndex !== '-1';\n};\n/**\n * @hidden\n */\n\n\nvar findElement = function findElement(node, predicate) {\n  var matchSelf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (!node) {\n    return;\n  }\n\n  if (matchSelf && predicate(node)) {\n    return node;\n  }\n\n  node = node.firstChild;\n\n  while (node) {\n    if (node.nodeType === 1) {\n      var element = findElement(node, predicate);\n\n      if (element) {\n        return element;\n      }\n    }\n\n    node = node.nextSibling;\n  }\n};\n/**\n * @hidden\n */\n\n\nvar findFocusable = function findFocusable(element) {\n  var checkVisibility = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return findElement(element, function (node) {\n    return isFocusableWithTabKey(node, checkVisibility);\n  });\n};\n/**\n * @hidden\n */\n\n\nvar findFocusableChild = function findFocusableChild(element) {\n  var checkVisibility = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return findElement(element, function (node) {\n    return isFocusableWithTabKey(node, checkVisibility);\n  }, false);\n};\n/**\n * @hidden\n */\n\n\nfunction rtlScrollPosition(position, element, initial) {\n  var result = position;\n\n  if (initial < 0) {\n    result = -position;\n  } else if (initial > 0) {\n    result = element.scrollWidth - element.offsetWidth - position;\n  }\n\n  return result;\n}\n/**\n * @hidden\n */\n\n\nvar isLocked = function isLocked(column) {\n  return column.parent ? isLocked(column.parent) : !!column.locked;\n};\n/**\n * @hidden\n */\n\n\nvar resizeArgs = function resizeArgs(column, extra) {\n  return Object.assign({\n    columns: leafColumns([column]),\n    locked: isLocked(column)\n  }, extra);\n}; // tslint:disable-line:align\n\n/**\n * @hidden\n */\n\n\nvar ColumnResizingService = /*#__PURE__*/function () {\n  function ColumnResizingService() {\n    _classCallCheck(this, ColumnResizingService);\n\n    this.changes = new EventEmitter();\n    this.tables = [];\n    this.batch = null;\n  }\n\n  _createClass(ColumnResizingService, [{\n    key: \"start\",\n    value: function start(column) {\n      this.trackColumns(column);\n      var columns = (this.column.isColumnGroup ? [column] : []).concat(leafColumns([column]));\n      this.changes.emit({\n        columns: columns,\n        locked: isLocked(this.column),\n        type: 'start'\n      });\n    }\n  }, {\n    key: \"resizeColumns\",\n    value: function resizeColumns(deltaPercent) {\n      var action = resizeArgs(this.column, {\n        deltaPercent: deltaPercent,\n        type: 'resizeColumn'\n      });\n      this.changes.emit(action);\n    }\n  }, {\n    key: \"resizeTable\",\n    value: function resizeTable(column, delta) {\n      var action = resizeArgs(column, {\n        delta: delta,\n        type: 'resizeTable'\n      });\n      this.changes.emit(action);\n    }\n  }, {\n    key: \"resizedColumn\",\n    value: function resizedColumn(state$$1) {\n      this.resizedColumns.push(state$$1);\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      this.changes.emit({\n        columns: [],\n        resizedColumns: this.resizedColumns,\n        type: 'end'\n      });\n    }\n  }, {\n    key: \"registerTable\",\n    value: function registerTable(tableMetadata) {\n      var _this31 = this;\n\n      this.tables.push(tableMetadata);\n\n      var unregisterTable = function unregisterTable() {\n        _this31.tables.splice(_this31.tables.indexOf(tableMetadata), 1);\n      };\n\n      return unregisterTable;\n    }\n  }, {\n    key: \"measureColumns\",\n    value: function measureColumns(info) {\n      var _this32 = this;\n\n      if (this.batch !== null) {\n        var _this$batch;\n\n        (_this$batch = this.batch).push.apply(_this$batch, _toConsumableArray(info));\n      } else {\n        this.autoFitBatch(info, function () {\n          return _this32.end();\n        });\n      }\n    }\n  }, {\n    key: \"autoFit\",\n    value: function autoFit() {\n      var _this33 = this;\n\n      for (var _len5 = arguments.length, columns = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        columns[_key5] = arguments[_key5];\n      }\n\n      var nonLockedColumns = columns.filter(function (column) {\n        return !column.isLocked;\n      });\n      this.autoFitStart(nonLockedColumns);\n      this.autoFitBatch(this.batch, function () {\n        if (nonLockedColumns.length < columns.length) {\n          var lockedColumns = columns.filter(function (column) {\n            return column.isLocked;\n          });\n\n          _this33.autoFitStart(lockedColumns);\n\n          _this33.autoFitBatch(_this33.batch, function () {\n            return _this33.end();\n          });\n        } else {\n          _this33.end();\n        }\n      });\n    }\n  }, {\n    key: \"trackColumns\",\n    value: function trackColumns(column) {\n      this.resizedColumns = [];\n      this.column = column;\n    }\n  }, {\n    key: \"autoFitStart\",\n    value: function autoFitStart(columns) {\n      this.batch = [];\n      this.resizedColumns = [];\n\n      if (columns.length === 0) {\n        return;\n      }\n\n      var locked = columns[0].isLocked;\n      this.changes.emit({\n        type: 'start',\n        columns: columns,\n        locked: locked\n      });\n      this.changes.emit({\n        type: 'triggerAutoFit',\n        columns: columns,\n        locked: locked\n      });\n    }\n  }, {\n    key: \"autoFitBatch\",\n    value: function autoFitBatch(info, onComplete) {\n      var _this34 = this;\n\n      var locked = info.length > 0 ? info[0].column.isLocked : false;\n      var observables = this.tables.filter(function (table) {\n        return table.locked === locked;\n      }).map(function (table) {\n        return table.autoFit(info);\n      });\n      zip.apply(void 0, _toConsumableArray(observables)).pipe(take(1)).subscribe(function (widths) {\n        _this34.changes.emit({\n          columns: info.map(function (i) {\n            return i.column;\n          }),\n          type: 'autoFitComplete',\n          widths: widths,\n          locked: locked\n        });\n\n        if (onComplete) {\n          onComplete();\n        }\n      });\n      this.batch = null;\n    }\n  }]);\n\n  return ColumnResizingService;\n}();\n\nColumnResizingService.ɵfac = function ColumnResizingService_Factory(t) {\n  return new (t || ColumnResizingService)();\n};\n\nColumnResizingService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ColumnResizingService,\n  factory: ColumnResizingService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnResizingService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n/**\n * @hidden\n */\n\n\nvar hasFilterMenu = function hasFilterMenu(settings) {\n  return typeof settings === 'string' && settings.indexOf('menu') > -1;\n};\n/**\n * @hidden\n */\n\n\nvar hasFilterRow = function hasFilterRow(settings) {\n  return settings === true || typeof settings === 'string' && settings.indexOf('row') > -1;\n};\n\nvar contains$1 = function contains$1(node, predicate) {\n  while (node) {\n    if (predicate(node)) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n};\n/**\n * Arguments for the `close` event of the filter and column-menu popup.\n */\n\n\nvar PopupCloseEvent = /*#__PURE__*/function (_PreventableEvent5) {\n  _inherits(PopupCloseEvent, _PreventableEvent5);\n\n  var _super11 = _createSuper(PopupCloseEvent);\n\n  function PopupCloseEvent(e) {\n    var _this35;\n\n    _classCallCheck(this, PopupCloseEvent);\n\n    _this35 = _super11.call(this);\n    _this35.originalEvent = e;\n    return _this35;\n  }\n\n  return PopupCloseEvent;\n}(PreventableEvent);\n\nvar DEFAULT_POPUP_CLASS = 'k-grid-filter-popup';\n/**\n * The service that is used for the popups of the filter and column menus\n * ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-menu-with-popup)).\n */\n\nvar SinglePopupService = /*#__PURE__*/function () {\n  function SinglePopupService(popupService, renderer, ngZone, scrollSyncService, localization) {\n    var _this36 = this;\n\n    _classCallCheck(this, SinglePopupService);\n\n    this.popupService = popupService;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.localization = localization;\n    /**\n     * Fires when the filter or column menus are about to close because the user clicked outside their popups.\n     * Used to prevent the popup from closing.\n     */\n\n    this.onClose = new Subject();\n    this.scrollSubscription = scrollSyncService.changes.subscribe(function () {\n      return _this36.destroy();\n    });\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(SinglePopupService, [{\n    key: \"open\",\n    value: function open(anchor, template, popupRef) {\n      var popupClass = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_POPUP_CLASS;\n      var toggle = isPresent(popupRef) && this.popupRef === popupRef;\n      this.destroy();\n\n      if (!toggle) {\n        var direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          },\n          anchor: anchor,\n          popupClass: popupClass,\n          content: template,\n          positionMode: \"absolute\"\n        });\n        this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n        this.attachClose(anchor);\n      }\n\n      return this.popupRef;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.popupRef) {\n        this.detachClose();\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.destroy();\n      this.scrollSubscription.unsubscribe();\n    }\n  }, {\n    key: \"detachClose\",\n    value: function detachClose() {\n      if (this.removeClick) {\n        this.removeClick();\n      }\n    }\n  }, {\n    key: \"attachClose\",\n    value: function attachClose(skipElement) {\n      var _this37 = this;\n\n      this.detachClose();\n      this.ngZone.runOutsideAngular(function () {\n        return _this37.removeClick = _this37.renderer.listen(\"document\", \"click\", function (e) {\n          if (!contains$1(e.target, function (x) {\n            return _this37.popupRef.popupElement === x || x === skipElement;\n          })) {\n            var args = new PopupCloseEvent(e);\n\n            _this37.onClose.next(args);\n\n            if (!args.isDefaultPrevented()) {\n              _this37.destroy();\n            }\n          }\n        });\n      });\n    }\n  }]);\n\n  return SinglePopupService;\n}();\n\nSinglePopupService.ɵfac = function SinglePopupService_Factory(t) {\n  return new (t || SinglePopupService)(ɵngcc0.ɵɵinject(PopupService), ɵngcc0.ɵɵinject(Renderer2), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(ScrollSyncService), ɵngcc0.ɵɵinject(LocalizationService));\n};\n\nSinglePopupService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SinglePopupService,\n  factory: SinglePopupService.ɵfac\n});\n/** @nocollapse */\n\nSinglePopupService.ctorParameters = function () {\n  return [{\n    type: PopupService\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }, {\n    type: ScrollSyncService\n  }, {\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SinglePopupService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: PopupService\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/* tslint:disable: no-bitwise */\n\n/**\n * @hidden\n */\n\n\nvar append = function append(element) {\n  var appended = false;\n  return function () {\n    if (!appended) {\n      document.body.appendChild(element);\n      appended = true;\n    }\n\n    return element;\n  };\n};\n/**\n * @hidden\n */\n\n\nvar getDocument = function getDocument(element) {\n  return element.ownerDocument.documentElement;\n};\n/**\n * @hidden\n */\n\n\nvar getWindow = function getWindow(element) {\n  return element.ownerDocument.defaultView;\n};\n/**\n * @hidden\n */\n\n\nvar offset = function offset(element) {\n  var _getDocument = getDocument(element),\n      clientTop = _getDocument.clientTop,\n      clientLeft = _getDocument.clientLeft;\n\n  var _getWindow = getWindow(element),\n      pageYOffset = _getWindow.pageYOffset,\n      pageXOffset = _getWindow.pageXOffset;\n\n  var _element$getBoundingC = element.getBoundingClientRect(),\n      top = _element$getBoundingC.top,\n      left = _element$getBoundingC.left;\n\n  return {\n    top: top + pageYOffset - clientTop,\n    left: left + pageXOffset - clientLeft\n  };\n};\n/**\n * @hidden\n * If the target is before the draggable element, returns `true`.\n *\n * DOCUMENT_POSITION_FOLLOWING = 4\n */\n\n\nvar isTargetBefore = function isTargetBefore(draggable, target) {\n  return (target.compareDocumentPosition(draggable) & 4) !== 0;\n};\n/**\n * @hidden\n * If the container and the element are the same\n * or if the container holds (contains) the element, returns `true`.\n *\n * DOCUMENT_POSITION_CONTAINED_BY = 16\n */\n\n\nvar contains$2 = function contains$2(element, container) {\n  return element === container || (container.compareDocumentPosition(element) & 16) !== 0;\n};\n/**\n * @hidden\n */\n\n\nvar position = function position(target, before) {\n  var targetRect = offset(target);\n  var offsetWidth = target.offsetWidth,\n      offsetHeight = target.offsetHeight;\n  var left = targetRect.left + (before ? 0 : offsetWidth);\n  var top = targetRect.top;\n  var height = offsetHeight;\n  return {\n    left: left,\n    top: top,\n    height: height\n  };\n};\n/**\n * @hidden\n */\n\n\nvar DragAndDropService = /*#__PURE__*/function () {\n  function DragAndDropService() {\n    _classCallCheck(this, DragAndDropService);\n\n    this.changes = new EventEmitter();\n    this.register = [];\n    this.lastTarget = null;\n  }\n\n  _createClass(DragAndDropService, [{\n    key: \"add\",\n    value: function add(target) {\n      this.register.push(target);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(target) {\n      this.register = this.register.filter(function (current) {\n        return current !== target;\n      });\n    }\n  }, {\n    key: \"notifyDrag\",\n    value: function notifyDrag(draggable, element, mouseEvent) {\n      var target = this.targetFor(element);\n\n      if (this.lastTarget === target) {\n        return;\n      }\n\n      this.changes.next({\n        draggable: draggable,\n        mouseEvent: mouseEvent,\n        target: this.lastTarget,\n        type: 'leave'\n      });\n\n      if (target) {\n        this.changes.next({\n          draggable: draggable,\n          mouseEvent: mouseEvent,\n          target: target,\n          type: 'enter'\n        });\n      }\n\n      this.lastTarget = target;\n    }\n  }, {\n    key: \"notifyDrop\",\n    value: function notifyDrop(draggable, mouseEvent) {\n      this.changes.next({\n        draggable: draggable,\n        mouseEvent: mouseEvent,\n        target: this.lastTarget,\n        type: 'drop'\n      });\n      this.lastTarget = null;\n    }\n  }, {\n    key: \"targetFor\",\n    value: function targetFor(element) {\n      var comparer = contains$2.bind(null, element);\n      return this.register.find(function (_ref11) {\n        var nativeElement = _ref11.element.nativeElement;\n        return comparer(nativeElement);\n      });\n    }\n  }]);\n\n  return DragAndDropService;\n}();\n\nDragAndDropService.ɵfac = function DragAndDropService_Factory(t) {\n  return new (t || DragAndDropService)();\n};\n\nDragAndDropService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DragAndDropService,\n  factory: DragAndDropService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DragAndDropService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar updateClass = function updateClass(element, valid) {\n  var icon = element.querySelector('.k-icon');\n  icon.className = icon.className.replace(/(plus|cancel)/, valid ? 'plus' : 'cancel');\n};\n\nvar updateLock = function updateLock(element) {\n  var locked = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var icon = element.querySelectorAll('.k-icon')[1];\n  var value = locked == null ? '' : locked ? 'k-i-lock' : 'k-i-unlock';\n  icon.className = icon.className.replace(/(k-i-unlock|k-i-lock)/, '') + \" \".concat(value);\n};\n\nvar decorate = function decorate(element, target) {\n  var targetStyles = getComputedStyle(target);\n  element.className = 'k-header k-drag-clue';\n  element.style.position = 'absolute';\n  element.style.zIndex = '20000';\n  element.style.paddingLeft = targetStyles.paddingLeft;\n  element.style.paddingTop = targetStyles.paddingTop;\n  element.style.paddingBottom = targetStyles.paddingBottom;\n  element.style.paddingRight = targetStyles.paddingRight;\n  element.style.width = targetStyles.width;\n  element.style.height = targetStyles.height;\n};\n/**\n * @hidden\n */\n\n\nvar DragHintService = /*#__PURE__*/function () {\n  function DragHintService(santizer) {\n    _classCallCheck(this, DragHintService);\n\n    this.santizer = santizer;\n  }\n\n  _createClass(DragHintService, [{\n    key: \"create\",\n    value: function create(down, target, title) {\n      this.initCoords(down);\n      this.dom = document.createElement(\"div\");\n      decorate(this.dom, target);\n      var safeTitle = this.santizer.sanitize(SecurityContext.HTML, title);\n      this.dom.innerHTML = \"\\n            <span class=\\\"k-icon k-drag-status k-i-cancel k-icon-with-modifier\\\">\\n                <span class=\\\"k-icon k-icon-modifier\\\"></span>\\n            </span>\\n            \".concat(safeTitle, \"\\n        \");\n    }\n  }, {\n    key: \"attach\",\n    value: function attach() {\n      return append(this.dom);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.dom && this.dom.parentNode) {\n        (function (el) {\n          setTimeout(function () {\n            return document.body.removeChild(el);\n          });\n        })(this.dom); // hack for IE + pointer events!\n\n\n        this.dom = null;\n      }\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.dom.style.display = \"\";\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.dom.style.display = \"none\";\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      updateClass(this.dom, true);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      updateClass(this.dom, false);\n    }\n  }, {\n    key: \"removeLock\",\n    value: function removeLock() {\n      updateLock(this.dom);\n    }\n  }, {\n    key: \"toggleLock\",\n    value: function toggleLock(locked) {\n      updateLock(this.dom, locked);\n    }\n  }, {\n    key: \"move\",\n    value: function move(_move) {\n      this.dom.style.top = this.initialTop + _move.pageY + 'px';\n      this.dom.style.left = this.initialLeft + _move.pageX + 'px';\n    }\n  }, {\n    key: \"initCoords\",\n    value: function initCoords(down) {\n      var _offset = offset(down.originalEvent.target),\n          top = _offset.top,\n          left = _offset.left;\n\n      this.initialTop = top - down.pageY;\n      this.initialLeft = left - down.pageX;\n    }\n  }]);\n\n  return DragHintService;\n}();\n\nDragHintService.ɵfac = function DragHintService_Factory(t) {\n  return new (t || DragHintService)(ɵngcc0.ɵɵinject(DomSanitizer));\n};\n\nDragHintService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DragHintService,\n  factory: DragHintService.ɵfac\n});\n/** @nocollapse */\n\nDragHintService.ctorParameters = function () {\n  return [{\n    type: DomSanitizer\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DragHintService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DomSanitizer\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar DropCueService = /*#__PURE__*/function () {\n  function DropCueService() {\n    _classCallCheck(this, DropCueService);\n  }\n\n  _createClass(DropCueService, [{\n    key: \"create\",\n    value: function create() {\n      this.dom = document.createElement(\"div\");\n      this.dom.className = 'k-grouping-dropclue';\n      this.hide();\n    }\n  }, {\n    key: \"attach\",\n    value: function attach() {\n      return append(this.dom);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.dom && this.dom.parentElement) {\n        document.body.removeChild(this.dom);\n        this.dom = null;\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.dom.style.display = \"none\";\n    }\n  }, {\n    key: \"position\",\n    value: function position(_ref12) {\n      var left = _ref12.left,\n          top = _ref12.top,\n          height = _ref12.height;\n      this.dom.style.display = 'block';\n      this.dom.style.height = height + 'px';\n      this.dom.style.top = top + 'px';\n      var width = this.dom.offsetWidth / 2;\n      this.dom.style.left = left - width + 'px';\n    }\n  }]);\n\n  return DropCueService;\n}();\n\nDropCueService.ɵfac = function DropCueService_Factory(t) {\n  return new (t || DropCueService)();\n};\n\nDropCueService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DropCueService,\n  factory: DropCueService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropCueService, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ColumnReorderService = /*#__PURE__*/function () {\n  function ColumnReorderService() {\n    _classCallCheck(this, ColumnReorderService);\n\n    this.changes = new EventEmitter();\n  }\n\n  _createClass(ColumnReorderService, [{\n    key: \"reorder\",\n    value: function reorder(e) {\n      this.changes.emit(e);\n    }\n  }]);\n\n  return ColumnReorderService;\n}();\n\nColumnReorderService.ɵfac = function ColumnReorderService_Factory(t) {\n  return new (t || ColumnReorderService)();\n};\n\nColumnReorderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ColumnReorderService,\n  factory: ColumnReorderService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnReorderService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Arguments for the `columnReorder` event.\n */\n\n\nvar ColumnReorderEvent = /*#__PURE__*/function (_PreventableEvent6) {\n  _inherits(ColumnReorderEvent, _PreventableEvent6);\n\n  var _super12 = _createSuper(ColumnReorderEvent);\n\n  /**\n   * @hidden\n   */\n  function ColumnReorderEvent(_ref13) {\n    var _this38;\n\n    var column = _ref13.column,\n        newIndex = _ref13.newIndex,\n        oldIndex = _ref13.oldIndex;\n\n    _classCallCheck(this, ColumnReorderEvent);\n\n    _this38 = _super12.call(this);\n    _this38.column = column;\n    _this38.newIndex = newIndex;\n    _this38.oldIndex = oldIndex;\n    return _this38;\n  }\n\n  return ColumnReorderEvent;\n}(PreventableEvent);\n/**\n * @hidden\n */\n\n\nvar FocusRoot = /*#__PURE__*/function () {\n  function FocusRoot() {\n    _classCallCheck(this, FocusRoot);\n\n    this.groups = new Set();\n  }\n\n  _createClass(FocusRoot, [{\n    key: \"registerGroup\",\n    value: function registerGroup(group) {\n      if (this.alive) {\n        this.groups.add(group);\n      }\n    }\n  }, {\n    key: \"unregisterGroup\",\n    value: function unregisterGroup(group) {\n      if (this.alive) {\n        this.groups.delete(group);\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      if (this.alive) {\n        this.groups.forEach(function (f) {\n          return f.activate();\n        });\n      }\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      if (this.alive) {\n        this.groups.forEach(function (f) {\n          return f.deactivate();\n        });\n      }\n    }\n  }]);\n\n  return FocusRoot;\n}();\n\nFocusRoot.ɵfac = function FocusRoot_Factory(t) {\n  return new (t || FocusRoot)();\n};\n\nFocusRoot.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: FocusRoot,\n  factory: FocusRoot.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FocusRoot, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar isButton = matchesNodeName('button');\nvar isInputTag = matchesNodeName('input');\nvar navigableRegex = /(button|checkbox|color|file|radio|reset|submit)/i;\n\nvar isNavigableInput = function isNavigableInput(element) {\n  return isInputTag(element) && navigableRegex.test(element.type);\n};\n\nvar _isNavigable = function isNavigable(element) {\n  return !element.disabled && (isButton(element) || isNavigableInput(element));\n};\n/**\n * @hidden\n */\n\n\nvar DefaultFocusableElement = /*#__PURE__*/function () {\n  function DefaultFocusableElement(host, renderer) {\n    _classCallCheck(this, DefaultFocusableElement);\n\n    this.renderer = renderer;\n    this.element = host.nativeElement;\n    this.focusable = findFocusable(this.element, false) || this.element;\n  }\n\n  _createClass(DefaultFocusableElement, [{\n    key: \"isNavigable\",\n    value: function isNavigable() {\n      return this.canFocus() && _isNavigable(this.element);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(active) {\n      this.renderer.setAttribute(this.focusable, 'tabIndex', active ? '0' : '-1');\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.focusable) {\n        this.focusable.focus();\n      }\n    }\n  }, {\n    key: \"canFocus\",\n    value: function canFocus() {\n      return this.visible && this.enabled;\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      var _this39 = this;\n\n      return document.activeElement !== this.element && closest(document.activeElement, function (e) {\n        return e === _this39.element;\n      });\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this.focusable && !this.focusable.disabled;\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.focusable && isVisible(this.focusable);\n    }\n  }]);\n\n  return DefaultFocusableElement;\n}();\n/**\n * A directive that controls the way focusable elements receive\n * [focus in a navigable Grid]({% slug keyboard_navigation_grid %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #0\" style=\"margin-bottom: 8px;\" />\n *      <kendo-grid [data]=\"data\" [navigable]=\"true\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"100\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"150\">\n *          </kendo-grid-column>\n *          <kendo-grid-column>\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <!-- The first focusable element will be focused when pressing Enter on the cell -->\n *                  <input type=\"text\" class=\"k-textbox\" kendoGridFocusable [value]=\"dataItem.ProductName\" style=\"margin-right: 8px;\" />\n *                  <button class=\"k-button\" kendoGridFocusable>Update</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column width=\"100\">\n *              <ng-template kendoGridCellTemplate>\n *                  <!-- A single focusable element will be focused during navigation -->\n *                  <button class=\"k-button\" kendoGridFocusable>Delete</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *      </kendo-grid>\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #2\" style=\"margin-top: 8px;\" />\n *    `\n * })\n *\n * class AppComponent {\n *     public readonly data: any = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": true\n *     }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false\n *     }];\n * }\n * ```\n */\n\n\nvar FocusableDirective = /*#__PURE__*/function () {\n  function FocusableDirective(cellContext, hostElement, renderer) {\n    _classCallCheck(this, FocusableDirective);\n\n    this.cellContext = cellContext;\n    this.hostElement = hostElement;\n    this.renderer = renderer;\n    this.active = true;\n\n    if (this.cellContext) {\n      this.group = this.cellContext.focusGroup;\n    }\n\n    if (this.group) {\n      this.group.registerElement(this);\n    }\n  }\n\n  _createClass(FocusableDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (!this.element) {\n        this.element = new DefaultFocusableElement(this.hostElement, this.renderer);\n      }\n\n      if (this.group) {\n        var isActive = this.group.isActive;\n        this.toggle(isActive);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.group) {\n        this.group.unregisterElement(this);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(active) {\n      if (this.element && active !== this.active) {\n        this.active = active;\n        this.element.toggle(active);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"canFocus\",\n    value: function canFocus() {\n      return this.element && this.element.canFocus();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isNavigable\",\n    value: function isNavigable() {\n      return this.element && this.element.isNavigable();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.element) {\n        this.element.focus();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return this.element && this.element.hasFocus();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"registerElement\",\n    value: function registerElement(element) {\n      this.element = element;\n    }\n  }]);\n\n  return FocusableDirective;\n}();\n\nFocusableDirective.ɵfac = function FocusableDirective_Factory(t) {\n  return new (t || FocusableDirective)(ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 12), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nFocusableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FocusableDirective,\n  selectors: [[\"\", \"kendoGridFocusable\", \"\"], [\"\", \"kendoGridEditCommand\", \"\"], [\"\", \"kendoGridRemoveCommand\", \"\"], [\"\", \"kendoGridSaveCommand\", \"\"], [\"\", \"kendoGridCancelCommand\", \"\"], [\"\", \"kendoGridSelectionCheckbox\", \"\"]]\n});\n/** @nocollapse */\n\nFocusableDirective.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }, {\n      type: SkipSelf\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FocusableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridFocusable]' + \",\\n        [kendoGridEditCommand],\\n        [kendoGridRemoveCommand],\\n        [kendoGridSaveCommand],\\n        [kendoGridCancelCommand],\\n        [kendoGridSelectionCheckbox]\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar GridFocusableElement = /*#__PURE__*/function () {\n  function GridFocusableElement(navigationService) {\n    _classCallCheck(this, GridFocusableElement);\n\n    this.navigationService = navigationService;\n  }\n\n  _createClass(GridFocusableElement, [{\n    key: \"focus\",\n    value: function focus() {\n      this.navigationService.focusCell();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(active) {\n      this.navigationService.toggle(active);\n    }\n  }, {\n    key: \"canFocus\",\n    value: function canFocus() {\n      return true;\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return this.navigationService.hasFocus();\n    }\n  }, {\n    key: \"isNavigable\",\n    value: function isNavigable() {\n      return false;\n    }\n  }]);\n\n  return GridFocusableElement;\n}();\n/**\n * @hidden\n */\n\n\nvar NavigationCursor = /*#__PURE__*/function () {\n  function NavigationCursor(model) {\n    _classCallCheck(this, NavigationCursor);\n\n    this.model = model;\n    this.changes = new Subject();\n    this.activeRow = 0;\n    this.activeCol = 0;\n    this.virtualCol = 0;\n    this.virtualRow = 0;\n  }\n\n  _createClass(NavigationCursor, [{\n    key: \"reset\",\n\n    /**\n     * Assumes and announces a new cursor position.\n     */\n    value: function reset() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.activeRow;\n      var colIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.activeCol;\n      var force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (this.activate(rowIndex, colIndex, force)) {\n        this.virtualRow = rowIndex;\n        this.virtualCol = colIndex;\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(rowIndex, colIndex, force) {\n      if (!force && this.isActiveRange(rowIndex, colIndex)) {\n        return false;\n      }\n\n      var prevColIndex = this.activeCol;\n      var prevRowIndex = this.activeRow;\n      this.activeCol = colIndex;\n      this.activeRow = rowIndex;\n      this.changes.next({\n        colIndex: colIndex,\n        prevColIndex: prevColIndex,\n        prevRowIndex: prevRowIndex,\n        rowIndex: rowIndex\n      });\n      return true;\n    }\n  }, {\n    key: \"isActiveRange\",\n    value: function isActiveRange(rowIndex, colIndex) {\n      if (this.activeRow !== rowIndex) {\n        return false;\n      }\n\n      var cell = this.cell;\n\n      var _this$model$cellRange = this.model.cellRange(cell),\n          start = _this$model$cellRange.start,\n          end = _this$model$cellRange.end;\n\n      return !Boolean(cell) || start <= colIndex && colIndex <= end;\n    }\n    /**\n     * Assumes a new cursor position without announcing it.\n     */\n\n  }, {\n    key: \"assume\",\n    value: function assume() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.activeRow;\n      var colIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.activeCol;\n      this.virtualRow = rowIndex;\n      this.virtualCol = colIndex;\n      this.activeCol = colIndex;\n      this.activeRow = rowIndex;\n    }\n    /**\n     * Announces a current cursor position to subscribers.\n     */\n\n  }, {\n    key: \"announce\",\n    value: function announce() {\n      this.changes.next({\n        colIndex: this.activeCol,\n        prevColIndex: this.activeCol,\n        prevRowIndex: this.activeRow,\n        rowIndex: this.activeRow\n      });\n    }\n  }, {\n    key: \"activateVirtualCell\",\n    value: function activateVirtualCell(cell) {\n      var rowRange = this.model.rowRange(cell);\n      var cellRange = this.model.cellRange(cell);\n      var activeCol = this.activeCol;\n      var activeRow = this.activeRow;\n\n      if (rowRange.start <= activeRow && activeRow <= rowRange.end && cellRange.start <= activeCol && activeCol <= cellRange.end) {\n        this.activeRow = cell.rowIndex;\n        this.activeCol = cell.colIndex;\n        return true;\n      }\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive(rowIndex, colIndex) {\n      return this.activeCol === colIndex && this.activeRow === rowIndex;\n    }\n  }, {\n    key: \"moveUp\",\n    value: function moveUp() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.offsetRow(-offset);\n    }\n  }, {\n    key: \"moveDown\",\n    value: function moveDown() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.offsetRow(offset);\n    }\n  }, {\n    key: \"moveLeft\",\n    value: function moveLeft() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.offsetCol(-offset);\n    }\n  }, {\n    key: \"moveRight\",\n    value: function moveRight() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return this.offsetCol(offset);\n    }\n  }, {\n    key: \"lastCellIndex\",\n    value: function lastCellIndex(row) {\n      return this.metadata.columns.leafColumnsToRender.length - 1 + (this.metadata.hasDetailTemplate && (!row || !row.groupItem) ? 1 : 0);\n    }\n  }, {\n    key: \"offsetCol\",\n    value: function offsetCol(offset) {\n      var prevRow = this.model.findRow(this.virtualRow);\n      var lastIndex = this.lastCellIndex(prevRow);\n      var virtualCol = this.virtualCol;\n      this.virtualCol = Math.max(0, Math.min(virtualCol + offset, lastIndex));\n      var nextColIndex = this.virtualCol;\n      var nextRowIndex = this.virtualRow;\n      var cell = this.model.findCell(this.virtualCol, prevRow);\n\n      if (!cell && this.metadata.virtualColumns) {\n        return this.activate(nextRowIndex, nextColIndex);\n      }\n\n      if (cell.colSpan > 1 && cell.colIndex <= virtualCol && virtualCol < cell.colIndex + cell.colSpan) {\n        nextColIndex = offset > 0 ? Math.min(cell.colIndex + cell.colSpan, lastIndex) : Math.max(0, cell.colIndex + offset);\n        var nextCell = this.model.findCell(nextColIndex, prevRow);\n\n        if (cell !== nextCell) {\n          cell = nextCell;\n          this.virtualCol = cell.colIndex;\n        } else {\n          this.virtualCol = virtualCol;\n        }\n      }\n\n      return this.activate(cell.rowIndex, cell.colIndex);\n    }\n  }, {\n    key: \"offsetRow\",\n    value: function offsetRow(offset) {\n      var nextColIndex = this.virtualCol;\n\n      if (this.metadata && this.metadata.isVirtual) {\n        var maxIndex = this.metadata.maxLogicalRowIndex;\n        var nextIndex = Math.max(0, Math.min(this.activeRow + offset, maxIndex));\n\n        if (this.metadata.hasDetailTemplate && !this.model.findRow(nextIndex)) {\n          nextIndex = offset > 0 ? nextIndex + 1 : nextIndex - 1;\n          nextIndex = Math.max(0, Math.min(nextIndex, maxIndex));\n        }\n\n        if (this.metadata.hasDetailTemplate && nextIndex === maxIndex) {\n          if (this.model.lastRow.index !== maxIndex) {\n            // Don't attempt to navigate past the last collapsed row.\n            nextIndex--;\n          }\n        }\n\n        var _nextRow = this.model.findRow(nextIndex);\n\n        if (_nextRow) {\n          // remove duplication\n          var _cell = this.model.findCell(this.virtualCol, _nextRow);\n\n          if (_cell.rowIndex <= this.virtualRow && offset > 0 && _cell.rowSpan > 1) {\n            _cell = this.model.findCell(this.virtualCol, this.model.findRow(_cell.rowIndex + _cell.rowSpan - 1 + offset));\n          }\n\n          nextIndex = _cell.rowIndex;\n          nextColIndex = _cell.colIndex;\n        }\n\n        this.virtualRow = nextIndex;\n        return this.activate(nextIndex, nextColIndex);\n      }\n\n      var nextRow = this.model.findRow(this.virtualRow + offset) || this.model.nextRow(this.virtualRow, offset);\n\n      if (!nextRow) {\n        return false;\n      }\n\n      var cell = this.model.findCell(this.virtualCol, nextRow);\n\n      if (cell && cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n        // spanned cell go to next\n        var nextPos = cell.rowIndex + cell.rowSpan - 1 + offset;\n        cell = this.model.findCell(this.virtualCol, this.model.findRow(nextPos));\n      }\n\n      if (!cell && this.metadata.virtualColumns) {\n        return this.activate(this.virtualRow + offset, this.virtualCol);\n      }\n\n      this.virtualRow = cell.rowIndex;\n      return this.activate(this.virtualRow, cell.colIndex);\n    }\n  }, {\n    key: \"row\",\n    get: function get() {\n      return this.model.findRow(this.activeRow);\n    }\n  }, {\n    key: \"cell\",\n    get: function get() {\n      var row = this.row;\n\n      if (row) {\n        return this.model.findCell(this.activeCol, row);\n      }\n    }\n  }, {\n    key: \"dataRowIndex\",\n    get: function get() {\n      var row = this.row;\n\n      if (row) {\n        return row.dataRowIndex;\n      }\n\n      return -1;\n    }\n  }]);\n\n  return NavigationCursor;\n}();\n/**\n * @hidden\n */\n\n\nvar ItemMap = /*#__PURE__*/function () {\n  function ItemMap() {\n    _classCallCheck(this, ItemMap);\n\n    this.count = 0;\n    this.items = {};\n  }\n\n  _createClass(ItemMap, [{\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      if (this.items[key]) {\n        delete this.items[key];\n        this.count--;\n      }\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, item) {\n      if (!this.items[key]) {\n        this.count++;\n      }\n\n      this.items[key] = item;\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      return this.items[key];\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var result = [];\n      this.forEach(function (item) {\n        result.push(item);\n      });\n      return result;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      for (var key in this.items) {\n        if (this.items.hasOwnProperty(key) && callback(this.items[key])) {\n          return this.items[key];\n        }\n      }\n    }\n  }, {\n    key: \"find\",\n    value: function find(callback) {\n      return this.forEach(callback);\n    }\n  }, {\n    key: \"first\",\n    get: function get() {\n      if (this.count > 0) {\n        var result;\n        this.forEach(function (item) {\n          result = item;\n          return true;\n        });\n        return result;\n      }\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      if (this.count > 0) {\n        var keys = Object.keys(this.items);\n        return this.items[keys[keys.length - 1]];\n      }\n    }\n  }]);\n\n  return ItemMap;\n}();\n/**\n * @hidden\n *\n * Contains information for the currently rendered rows and cells.\n */\n\n\nvar NavigationModel = /*#__PURE__*/function () {\n  function NavigationModel() {\n    _classCallCheck(this, NavigationModel);\n\n    this.rows = new ItemMap();\n  }\n\n  _createClass(NavigationModel, [{\n    key: \"registerCell\",\n    value: function registerCell(cell) {\n      var row = this.rows.getItem(cell.logicalRowIndex);\n\n      if (!row) {\n        return;\n      }\n\n      var colIndex = cell.logicalColIndex;\n      var modelCell = {\n        uid: cell.uid,\n        colIndex: colIndex,\n        rowIndex: row.index,\n        colSpan: cell.colSpan,\n        rowSpan: cell.rowSpan,\n        detailExpandCell: cell.detailExpandCell,\n        dataItem: row.dataItem,\n        dataRowIndex: row.dataRowIndex,\n        focusGroup: cell.focusGroup\n      };\n      row.cells.setItem(colIndex, modelCell);\n\n      if (cell.groupItem) {\n        row.groupItem = cell.groupItem;\n      }\n\n      return modelCell;\n    }\n  }, {\n    key: \"unregisterCell\",\n    value: function unregisterCell(index, rowIndex, cell) {\n      var row = this.rows.getItem(rowIndex);\n\n      if (row) {\n        var match = row.cells.getItem(index);\n\n        if (match && match.uid === cell.uid) {\n          row.cells.removeItem(index);\n        }\n      }\n    }\n  }, {\n    key: \"registerRow\",\n    value: function registerRow(row) {\n      var modelRow = {\n        uid: row.uid,\n        index: row.logicalRowIndex,\n        dataItem: row.dataItem,\n        dataRowIndex: row.dataRowIndex,\n        cells: new ItemMap()\n      };\n      this.rows.setItem(row.logicalRowIndex, modelRow);\n    }\n  }, {\n    key: \"updateRow\",\n    value: function updateRow(row) {\n      var current = this.rows.getItem(row.logicalRowIndex);\n\n      if (current) {\n        Object.assign(current, {\n          dataItem: row.dataItem,\n          dataRowIndex: row.dataRowIndex\n        });\n      }\n    }\n  }, {\n    key: \"unregisterRow\",\n    value: function unregisterRow(index, row) {\n      var match = this.rows.getItem(index);\n\n      if (match && match.uid === row.uid) {\n        this.rows.removeItem(index);\n      }\n    }\n  }, {\n    key: \"cellRange\",\n    value: function cellRange(cell) {\n      if (cell) {\n        var start = cell.colIndex;\n        var end = cell.colIndex + (cell.colSpan || 1) - 1;\n        return {\n          start: start,\n          end: end\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"rowRange\",\n    value: function rowRange(cell) {\n      if (cell) {\n        var start = cell.rowIndex;\n        var end = cell.rowIndex + (cell.rowSpan || 1) - 1;\n        return {\n          start: start,\n          end: end\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"nextRow\",\n    value: function nextRow(rowIndex, offset) {\n      var rows = this.rows.toArray();\n      var row = this.rows.getItem(rowIndex);\n      var position = rows.indexOf(row);\n      var next = rows[position + offset];\n      return next;\n    }\n  }, {\n    key: \"findRow\",\n    value: function findRow(index) {\n      return this.rows.getItem(index);\n    }\n  }, {\n    key: \"findCell\",\n    value: function findCell(index, row) {\n      if (!row) {\n        return;\n      }\n\n      var rowIndex = row.index;\n      var cell = row.cells.getItem(index);\n      var currentIndex = rowIndex;\n\n      while (!cell && row) {\n        row = this.rows.getItem(currentIndex);\n        cell = this.rowCell(index, row);\n        currentIndex--;\n      }\n\n      if (cell && rowIndex <= row.index + (cell.rowSpan || 1) - 1) {\n        return cell;\n      }\n    }\n  }, {\n    key: \"rowCell\",\n    value: function rowCell(index, row) {\n      if (!row || !row.cells.count) {\n        return;\n      }\n\n      var firstCell = row.cells.first;\n      var cell,\n          currentIndex = index;\n\n      while (!cell && currentIndex >= firstCell.colIndex) {\n        cell = row.cells.getItem(currentIndex);\n        currentIndex--;\n      }\n\n      if (cell && index <= cell.colIndex + (cell.colSpan || 1) - 1) {\n        return cell;\n      }\n    }\n  }, {\n    key: \"firstRow\",\n    get: function get() {\n      return this.rows.first;\n    }\n  }, {\n    key: \"lastRow\",\n    get: function get() {\n      return this.rows.last;\n    }\n  }]);\n\n  return NavigationModel;\n}();\n/**\n * @hidden\n */\n\n\nvar ScrollRequestService = /*#__PURE__*/function () {\n  function ScrollRequestService() {\n    _classCallCheck(this, ScrollRequestService);\n\n    this.requests = new Subject();\n  }\n\n  _createClass(ScrollRequestService, [{\n    key: \"scrollTo\",\n    value: function scrollTo(request) {\n      this.requests.next(request);\n    }\n  }]);\n\n  return ScrollRequestService;\n}();\n\nScrollRequestService.ɵfac = function ScrollRequestService_Factory(t) {\n  return new (t || ScrollRequestService)();\n};\n\nScrollRequestService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ScrollRequestService,\n  factory: ScrollRequestService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ScrollRequestService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nvar isInSameGrid = function isInSameGrid(element, gridElement) {\n  return closest(element, matchesNodeName('kendo-grid')) === gridElement;\n};\n\nvar matchHeaderCell = matchesNodeName('th');\nvar matchDataCell = matchesNodeName('td');\n\nvar matchCell = function matchCell(element) {\n  return matchDataCell(element) || matchHeaderCell(element);\n};\n\nvar gridCell = function gridCell(element, gridElement) {\n  var target = closest(element, matchCell);\n\n  while (target && !isInSameGrid(target, gridElement)) {\n    target = closest(target.parentElement, matchCell);\n  }\n\n  return target;\n};\n\nvar targetCell = function targetCell(target, gridElement) {\n  var cell = gridCell(target, gridElement);\n  var row = closest(cell, matchesNodeName('tr'));\n\n  if (cell && row) {\n    var rowIndex = row.getAttribute('aria-rowindex');\n    rowIndex = rowIndex ? parseInt(rowIndex, 10) - 1 : null;\n    var colIndex = cell.getAttribute('aria-colindex');\n    colIndex = colIndex ? parseInt(colIndex, 10) - 1 : null;\n\n    if (rowIndex !== null && colIndex !== null) {\n      return {\n        colIndex: colIndex,\n        rowIndex: rowIndex,\n        element: cell\n      };\n    }\n  }\n};\n\nvar isArrowKey = function isArrowKey(keyCode) {\n  return keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight || keyCode === Keys.ArrowUp || keyCode === Keys.ArrowDown;\n};\n\nvar isNavigationKey = function isNavigationKey(keyCode) {\n  return isArrowKey(keyCode) || keyCode === Keys.PageUp || keyCode === Keys.PageDown || keyCode === Keys.Home || keyCode === Keys.End;\n};\n\nvar isInput = matchesNodeName('input');\n\nvar isTextInput = function isTextInput(element) {\n  return element && isInput(element) && element.type.toLowerCase() === 'text';\n};\n\nvar isPrintableCharacter = function isPrintableCharacter(str) {\n  return str.length === 1 && str.match(/\\S/);\n};\n/**\n * @hidden\n */\n\n\nvar NavigationViewport = /*#__PURE__*/function () {\n  function NavigationViewport(firstItemIndex, lastItemIndex) {\n    _classCallCheck(this, NavigationViewport);\n\n    this.firstItemIndex = firstItemIndex;\n    this.lastItemIndex = lastItemIndex;\n  }\n\n  _createClass(NavigationViewport, [{\n    key: \"containsRow\",\n    value: function containsRow(dataRowIndex) {\n      var headerRow = dataRowIndex < 0;\n      return headerRow || dataRowIndex >= this.firstItemIndex && dataRowIndex <= this.lastItemIndex;\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(start, end) {\n      return start <= this.firstItemIndex && this.lastItemIndex <= end || this.firstItemIndex <= start && start <= this.lastItemIndex || this.firstItemIndex <= end && end <= this.lastItemIndex;\n    }\n  }]);\n\n  return NavigationViewport;\n}();\n/**\n * @hidden\n */\n\n\nvar NavigationService = /*#__PURE__*/function () {\n  function NavigationService(zone, domEvents, pagerContextService, scrollRequestService, groupsService, detailsService, focusRoot, editService, cd, localization, focusableParent) {\n    _classCallCheck(this, NavigationService);\n\n    this.zone = zone;\n    this.domEvents = domEvents;\n    this.pagerContextService = pagerContextService;\n    this.scrollRequestService = scrollRequestService;\n    this.groupsService = groupsService;\n    this.detailsService = detailsService;\n    this.focusRoot = focusRoot;\n    this.editService = editService;\n    this.cd = cd;\n    this.localization = localization;\n    this.focusableParent = focusableParent;\n    this.cellKeydown = new EventEmitter();\n    this.activeRowIndex = 0;\n    this.alive = false;\n    this.active = true;\n    this.mode = 0\n    /* Standby */\n    ;\n    this.model = new NavigationModel();\n    this.cursor = new NavigationCursor(this.model);\n    this.changes = this.cursor.changes;\n  }\n\n  _createClass(NavigationService, [{\n    key: \"init\",\n    value: function init(meta) {\n      var _this40 = this;\n\n      this.alive = true;\n      this.focusRoot.alive = true;\n      this.metadata = meta;\n\n      var onStableSubscriber = function onStableSubscriber() {\n        for (var _len6 = arguments.length, operators = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n          operators[_key6] = arguments[_key6];\n        }\n\n        return function (args) {\n          var _this40$zone$onStable;\n\n          return _this40.zone.isStable ? from([true]).pipe(map(function () {\n            return args;\n          })) : (_this40$zone$onStable = _this40.zone.onStable).pipe.apply(_this40$zone$onStable, [take(1), map(function () {\n            return args;\n          })].concat(operators));\n        };\n      };\n\n      var onStable = onStableSubscriber();\n      this.subs = new Subscription();\n      this.subs.add(this.cursor.changes.subscribe(function (args) {\n        return _this40.onCursorChanges(args);\n      }));\n      this.subs.add(this.domEvents.focus.pipe(switchMap(onStable)).subscribe(function (args) {\n        return _this40.navigateTo(args.target);\n      }));\n      this.subs.add(this.domEvents.focusOut.pipe(filter(function () {\n        return _this40.mode !== 0;\n      }\n      /* Standby */\n      ), switchMap(onStableSubscriber(takeUntil(this.domEvents.focus)))).subscribe(function (args) {\n        return _this40.onFocusOut(args);\n      }));\n      this.subs.add(this.domEvents.windowBlur.pipe(filter(function () {\n        return _this40.mode !== 0;\n      }\n      /* Standby */\n      )).subscribe(function () {\n        return _this40.onWindowBlur();\n      }));\n      this.subs.add( // Closing the editor will not always trigger focusout in Firefox.\n      // To get around this, we ensure that the cell is closed after editing.\n      this.editService.changes.pipe(filter(function (e) {\n        return e.action !== 'edit' && _this40.mode === 2;\n      }\n      /* Content */\n      ), filter(function (e) {\n        return e.action === 'cellClose' && !e.prevented;\n      }), switchMap(onStable)).subscribe(function () {\n        return _this40.leaveCell();\n      }));\n      this.subs.add(this.pagerContextService.pageChange.subscribe(function () {\n        return _this40.cursor.reset(0, 0);\n      }));\n      this.subs.add(this.domEvents.keydown.subscribe(function (args) {\n        return _this40.onKeydown(args);\n      }));\n      this.subs.add(this.domEvents.keydown.pipe(filter(function (args) {\n        return args.keyCode === Keys.Tab && _this40.mode === 2;\n      }\n      /* Content */\n      ), switchMapTo(this.domEvents.focusOut.pipe(takeUntil( // Timeout if focusOut doesn't fire very soon\n      interval(0).pipe(take(1)))))).subscribe(function () {\n        return _this40.onTabout();\n      }));\n\n      if (this.focusableParent) {\n        var element = new GridFocusableElement(this);\n        this.focusableParent.registerElement(element);\n      }\n\n      this.deactivateElements();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subs) {\n        this.subs.unsubscribe();\n      }\n\n      this.alive = false;\n    }\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(cell) {\n      if (cell.logicalRowIndex !== this.pendingRowIndex) {\n        var modelCell = this.model.registerCell(cell);\n\n        if (this.virtualCell && this.cursor.activateVirtualCell(modelCell)) {\n          this.virtualCell = false;\n        }\n      }\n    }\n  }, {\n    key: \"registerCellOnCurrentRow\",\n    value: function registerCellOnCurrentRow(cell) {\n      if (cell.logicalRowIndex === this.pendingRowIndex) {\n        this.model.registerCell(cell);\n      }\n    }\n  }, {\n    key: \"unregisterCell\",\n    value: function unregisterCell(index, rowIndex, cell) {\n      this.model.unregisterCell(index, rowIndex, cell);\n    }\n  }, {\n    key: \"registerRow\",\n    value: function registerRow(row) {\n      this.model.registerRow(row);\n      this.pendingRowIndex = row.logicalRowIndex;\n    }\n  }, {\n    key: \"updateRow\",\n    value: function updateRow(row) {\n      this.model.updateRow(row);\n    }\n  }, {\n    key: \"unregisterRow\",\n    value: function unregisterRow(index, row) {\n      this.model.unregisterRow(index, row);\n    }\n  }, {\n    key: \"isCellFocusable\",\n    value: function isCellFocusable(cell) {\n      return this.alive && this.active && this.mode !== 2\n      /* Content */\n      && this.cursor.isActive(cell.logicalRowIndex, cell.logicalColIndex);\n    }\n  }, {\n    key: \"isCellFocused\",\n    value: function isCellFocused(cell) {\n      return this.mode === 1\n      /* Cursor */\n      && this.isCellFocusable(cell);\n    }\n  }, {\n    key: \"navigateTo\",\n    value: function navigateTo(el) {\n      if (!this.alive) {\n        return;\n      }\n\n      var cell = targetCell(el, this.meta.gridElement.nativeElement);\n\n      if (!cell) {\n        return;\n      }\n\n      var oldMode = this.mode;\n      var focusInCell = contains(cell.element, document.activeElement);\n      var focusInActiveRowContent = this.mode === 2\n      /* Content */\n      && this.activeRowIndex === cell.rowIndex && el !== cell.element;\n\n      if (focusInCell) {\n        this.mode = 2\n        /* Content */\n        ;\n        this.cursor.reset(cell.rowIndex, cell.colIndex);\n        this.activateRow();\n      } else if (!focusInActiveRowContent) {\n        this.mode = 1\n        /* Cursor */\n        ;\n        this.deactivateElements();\n        var alreadyActive = this.cursor.isActive(cell.rowIndex, cell.colIndex);\n        var isCursor = oldMode === 1\n        /* Cursor */\n        && alreadyActive;\n\n        if (!isCursor) {\n          this.cursor.reset(cell.rowIndex, cell.colIndex);\n        }\n      }\n    }\n  }, {\n    key: \"tryFocus\",\n    value: function tryFocus(el) {\n      this.activateElements();\n      var focusable = findFocusableChild(el);\n\n      if (focusable) {\n        var _cell2 = targetCell(focusable, this.meta.gridElement.nativeElement);\n\n        if (_cell2) {\n          this.cursor.reset(_cell2.rowIndex, _cell2.colIndex);\n          this.deactivateElements();\n          this.enterCell();\n        }\n\n        focusable.focus();\n      } else {\n        this.deactivateElements();\n      }\n\n      return !!focusable;\n    }\n  }, {\n    key: \"needsViewport\",\n    value: function needsViewport() {\n      return this.meta && this.meta.isVirtual;\n    }\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(firstItemIndex, lastItemIndex) {\n      this.viewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n\n      if (this.meta && this.meta.isVirtual && this.activeDataRow > -1) {\n        var dataRowIndex = this.activeDataRow;\n        var ahead = firstItemIndex - dataRowIndex;\n        var behind = dataRowIndex - lastItemIndex;\n\n        if (ahead > 0) {\n          this.cursor.reset(firstItemIndex + this.meta.headerRows);\n        } else if (behind > 0) {\n          this.cursor.reset(lastItemIndex - this.meta.headerRows);\n        }\n      }\n    }\n  }, {\n    key: \"setColumnViewport\",\n    value: function setColumnViewport(firstItemIndex, lastItemIndex) {\n      this.columnViewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n    }\n  }, {\n    key: \"focusCell\",\n    value: function focusCell() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var colIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      this.mode = 1\n      /* Cursor */\n      ;\n      this.cursor.reset(rowIndex, colIndex);\n      return this.activeCell;\n    }\n  }, {\n    key: \"focusNextCell\",\n    value: function focusNextCell() {\n      var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.focusAdjacentCell(true, wrap);\n    }\n  }, {\n    key: \"focusPrevCell\",\n    value: function focusPrevCell() {\n      var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return this.focusAdjacentCell(false, wrap);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(active) {\n      this.active = active;\n      this.cursor.announce();\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return this.mode === 1\n      /* Cursor */\n      || this.mode === 2\n      /* Content */\n      ;\n    }\n  }, {\n    key: \"autoFocusCell\",\n    value: function autoFocusCell(start, end) {\n      return !this.meta.virtualColumns || end < this.meta.columns.lockedLeafColumns.length || this.columnViewport.intersects(start, end);\n    }\n  }, {\n    key: \"focusAdjacentCell\",\n    value: function focusAdjacentCell(fwd, wrap) {\n      this.focusCell();\n      var success = fwd ? this.moveCursorFwd() : this.moveCursorBwd();\n\n      if (wrap && !success) {\n        success = fwd ? this.cursor.moveDown(1) : this.cursor.moveUp(1);\n\n        if (success) {\n          var _row = this.cursor.row;\n          var colIdx = fwd ? 0 : this.cursor.lastCellIndex(_row);\n          this.cursor.reset(_row.index, colIdx);\n        }\n      }\n\n      if (success) {\n        return this.activeCell;\n      } else {\n        this.mode = 0\n        /* Standby */\n        ;\n        this.cursor.announce();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"enterCell\",\n    value: function enterCell() {\n      var cell = this.cursor.cell;\n\n      if (!cell) {\n        return;\n      }\n\n      var group = cell.focusGroup;\n      var focusable = group && group.canFocus();\n      this.mode = focusable ? 2\n      /* Content */\n      : 1\n      /* Cursor */\n      ;\n      this.cursor.announce();\n\n      if (focusable) {\n        this.activateRow();\n        group.focus();\n      }\n    }\n  }, {\n    key: \"leaveCell\",\n    value: function leaveCell() {\n      var cell = this.cursor.cell;\n\n      if (!cell) {\n        return;\n      }\n\n      var group = cell.focusGroup;\n      var focusable = group && group.canFocus();\n\n      if (!focusable) {\n        this.deactivateElements();\n      }\n\n      this.mode = 1\n      /* Cursor */\n      ;\n      this.cursor.announce();\n    }\n  }, {\n    key: \"activateElements\",\n    value: function activateElements() {\n      this.focusRoot.activate();\n    }\n  }, {\n    key: \"deactivateElements\",\n    value: function deactivateElements() {\n      this.focusRoot.deactivate();\n    }\n  }, {\n    key: \"activateRow\",\n    value: function activateRow() {\n      this.cursor.row.cells.forEach(function (cell) {\n        return cell.focusGroup && cell.focusGroup.activate();\n      });\n    }\n  }, {\n    key: \"moveCursorFwd\",\n    value: function moveCursorFwd() {\n      return this.localization.rtl ? this.cursor.moveLeft() : this.cursor.moveRight();\n    }\n  }, {\n    key: \"moveCursorBwd\",\n    value: function moveCursorBwd() {\n      return this.localization.rtl ? this.cursor.moveRight() : this.cursor.moveLeft();\n    }\n  }, {\n    key: \"onCursorKeydown\",\n    value: function onCursorKeydown(args) {\n      var _this41 = this;\n\n      var preventDefault = false;\n      var modifier = args.ctrlKey || args.metaKey;\n      var step = modifier ? 5 : 1;\n\n      if (!this.onCellKeydown(args)) {\n        return;\n      }\n\n      var row = this.cursor.row;\n\n      switch (args.keyCode) {\n        case Keys.ArrowDown:\n          preventDefault = this.cursor.moveDown(step);\n          break;\n\n        case Keys.ArrowUp:\n          preventDefault = this.cursor.moveUp(step);\n          break;\n\n        case Keys.ArrowRight:\n          preventDefault = this.moveCursorFwd();\n          break;\n\n        case Keys.ArrowLeft:\n          preventDefault = this.moveCursorBwd();\n          break;\n\n        case Keys.PageDown:\n          if (this.metadata.isVirtual && this.viewport) {\n            var nextItemIndex = this.meta.headerRows + this.viewport.lastItemIndex + 1;\n\n            if (this.metadata.hasDetailTemplate) {\n              nextItemIndex++;\n            }\n\n            nextItemIndex = Math.min(this.meta.maxLogicalRowIndex, nextItemIndex);\n            this.cursor.reset(nextItemIndex);\n            preventDefault = true;\n          } else if (this.metadata.hasPager) {\n            this.zone.run(function () {\n              return _this41.pagerContextService.nextPage();\n            });\n            preventDefault = true;\n          }\n\n          break;\n\n        case Keys.PageUp:\n          if (this.metadata.isVirtual && this.viewport) {\n            var viewportSize = this.viewport.lastItemIndex - this.viewport.firstItemIndex;\n            var firstItemIndex = this.viewport.firstItemIndex;\n\n            var _nextItemIndex = Math.max(this.meta.headerRows, firstItemIndex - viewportSize - 1);\n\n            this.cursor.reset(_nextItemIndex);\n            preventDefault = true;\n          } else if (this.metadata.hasPager) {\n            this.zone.run(function () {\n              return _this41.pagerContextService.prevPage();\n            });\n            preventDefault = true;\n          }\n\n          break;\n\n        case Keys.Home:\n          if (modifier) {\n            if (this.meta.isVirtual) {\n              this.cursor.reset(this.meta.headerRows, 0, false);\n            } else {\n              this.cursor.reset(this.model.firstRow.index, 0, false);\n            }\n          } else {\n            this.cursor.reset(row.index, 0, false);\n          }\n\n          preventDefault = true;\n          break;\n\n        case Keys.End:\n          if (modifier) {\n            if (this.meta.isVirtual) {\n              var lastRowIndex = this.meta.maxLogicalRowIndex;\n\n              if (this.meta.hasDetailTemplate) {\n                lastRowIndex--;\n              }\n\n              this.cursor.reset(lastRowIndex, this.cursor.lastCellIndex(), false);\n            } else {\n              this.cursor.reset(this.model.lastRow.index, this.cursor.lastCellIndex(this.model.lastRow), false);\n            }\n          } else {\n            var lastIndex = this.cursor.lastCellIndex(row);\n\n            var _cell3 = this.model.findCell(lastIndex, row);\n\n            if (_cell3) {\n              this.cursor.reset(_cell3.rowIndex, _cell3.colIndex);\n            } else {\n              this.cursor.reset(row.index, lastIndex);\n            }\n          }\n\n          preventDefault = true;\n          break;\n\n        case Keys.Enter:\n        case Keys.F2:\n          var groupItem = row.groupItem;\n\n          if (groupItem) {\n            this.zone.run(function () {\n              return _this41.groupsService.toggleRow(groupItem.index, groupItem.data);\n            });\n          } else if (this.cursor.cell.detailExpandCell) {\n            this.zone.run(function () {\n              return _this41.detailsService.toggleRow(row.dataRowIndex, row.dataItem);\n            });\n          } else {\n            this.enterCell();\n\n            if (!this.cursor.cell.focusGroup.isNavigable()) {\n              preventDefault = true;\n            }\n          }\n\n          break;\n\n        default:\n          if (!args.ctrlKey && !args.altKey && isPrintableCharacter(args.key)) {\n            this.enterCell();\n          }\n\n      }\n\n      if (preventDefault) {\n        args.preventDefault();\n      }\n    }\n  }, {\n    key: \"onContentKeydown\",\n    value: function onContentKeydown(args) {\n      if (!this.onCellKeydown(args)) {\n        return;\n      }\n\n      var confirm = !args.defaultPrevented && args.keyCode === Keys.Enter && isTextInput(args.srcElement);\n\n      if (args.keyCode === Keys.Escape || args.keyCode === Keys.F2 || confirm) {\n        this.leaveCell();\n        this.cursor.reset();\n        args.stopPropagation();\n      } else if (isNavigationKey(args.keyCode) && this.cursor.cell.focusGroup.isNavigable()) {\n        this.onCursorKeydown(args);\n\n        if (args.defaultPrevented) {\n          this.leaveCell();\n        }\n      }\n    }\n  }, {\n    key: \"onCellKeydown\",\n    value: function onCellKeydown(args) {\n      if (this.editService.isEditingCell()) {\n        var confirm = args.keyCode === Keys.Enter;\n        var cancel = args.keyCode === Keys.Escape;\n        var navigate = isNavigationKey(args.keyCode);\n\n        if (confirm) {\n          this.editService.closeCell(args);\n        } else if (cancel) {\n          this.editService.cancelCell();\n          this.cd.detectChanges();\n        } else if (navigate) {\n          return false;\n        }\n      }\n\n      this.cellKeydown.emit(args);\n      return true;\n    }\n  }, {\n    key: \"onCursorChanges\",\n    value: function onCursorChanges(args) {\n      this.activeRowIndex = args.rowIndex;\n      var dataRowIndex = this.activeDataRow;\n\n      if (this.meta && this.meta.isVirtual && this.viewport && !this.viewport.containsRow(dataRowIndex) && dataRowIndex > -1) {\n        this.scrollRequestService.scrollTo({\n          row: dataRowIndex\n        });\n      }\n\n      if (this.meta.virtualColumns && args.colIndex >= this.meta.columns.lockedLeafColumns.length) {\n        var _cell4 = this.activeCell;\n\n        var _this$model$cellRange2 = this.model.cellRange(_cell4),\n            start = _this$model$cellRange2.start,\n            end = _this$model$cellRange2.end;\n\n        if (!_cell4) {\n          this.virtualCell = true;\n        }\n\n        if (!_cell4 && this.mode !== 0\n        /* Standby */\n        || _cell4 && !this.columnViewport.intersects(start, end)) {\n          this.scrollRequestService.scrollTo({\n            column: args.colIndex - (this.metadata.hasDetailTemplate ? 1 : 0)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onFocusOut\",\n    value: function onFocusOut(args) {\n      if (isVisible(args.target)) {\n        this.mode = 0\n        /* Standby */\n        ;\n      } else {\n        // Focused target is no longer visible,\n        // reset to cursor mode and recapture focus.\n        this.mode = 1\n        /* Cursor */\n        ;\n      }\n\n      this.deactivateElements();\n      this.cursor.announce();\n    }\n  }, {\n    key: \"onWindowBlur\",\n    value: function onWindowBlur() {\n      this.mode = 0\n      /* Standby */\n      ;\n      this.deactivateElements();\n      this.cursor.announce();\n    }\n  }, {\n    key: \"onKeydown\",\n    value: function onKeydown(args) {\n      if (this.mode === 1\n      /* Cursor */\n      ) {\n          this.onCursorKeydown(args);\n        } else if (this.mode === 2\n      /* Content */\n      ) {\n          this.onContentKeydown(args);\n        }\n    }\n  }, {\n    key: \"onTabout\",\n    value: function onTabout() {\n      // Tabbed out of the last focusable content element\n      // reset to cursor mode and recapture focus.\n      if (this.cursor.cell.focusGroup.isNavigable()) {\n        // Unless the cell has a single focusable element,\n        // otherwise we'd return to Content mode and enter an endless loop\n        return;\n      }\n\n      this.leaveCell();\n      this.cursor.reset();\n    }\n  }, {\n    key: \"metadata\",\n    set: function set(value) {\n      this.meta = value;\n      this.cursor.metadata = value;\n    },\n    get: function get() {\n      return this.meta;\n    }\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this.alive;\n    }\n  }, {\n    key: \"activeCell\",\n    get: function get() {\n      if (this.mode !== 0\n      /* Standby */\n      ) {\n          return this.cursor.cell;\n        }\n    }\n  }, {\n    key: \"activeRow\",\n    get: function get() {\n      if (this.mode !== 0\n      /* Standby */\n      ) {\n          return Object.assign({}, this.cursor.row, {\n            cells: this.cursor.row.cells.toArray()\n          });\n        }\n    }\n  }, {\n    key: \"activeDataRow\",\n    get: function get() {\n      return Math.max(0, this.activeRowIndex - this.meta.headerRows);\n    }\n  }]);\n\n  return NavigationService;\n}();\n\nNavigationService.ɵfac = function NavigationService_Factory(t) {\n  return new (t || NavigationService)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DomEventsService), ɵngcc0.ɵɵinject(PagerContextService), ɵngcc0.ɵɵinject(ScrollRequestService), ɵngcc0.ɵɵinject(GroupsService), ɵngcc0.ɵɵinject(DetailsService), ɵngcc0.ɵɵinject(FocusRoot), ɵngcc0.ɵɵinject(EditService), ɵngcc0.ɵɵinject(ChangeDetectorRef), ɵngcc0.ɵɵinject(LocalizationService), ɵngcc0.ɵɵinject(FocusableDirective, 8));\n};\n\nNavigationService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NavigationService,\n  factory: NavigationService.ɵfac\n});\n/** @nocollapse */\n\nNavigationService.ctorParameters = function () {\n  return [{\n    type: NgZone\n  }, {\n    type: DomEventsService\n  }, {\n    type: PagerContextService\n  }, {\n    type: ScrollRequestService\n  }, {\n    type: GroupsService\n  }, {\n    type: DetailsService\n  }, {\n    type: FocusRoot\n  }, {\n    type: EditService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: LocalizationService\n  }, {\n    type: FocusableDirective,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NavigationService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: NgZone\n    }, {\n      type: DomEventsService\n    }, {\n      type: PagerContextService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: GroupsService\n    }, {\n      type: DetailsService\n    }, {\n      type: FocusRoot\n    }, {\n      type: EditService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: LocalizationService\n    }, {\n      type: FocusableDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar NavigationMetadata = /*#__PURE__*/function () {\n  function NavigationMetadata(dataRows, headerRows, isVirtual, hasPager, hasDetailTemplate, gridElement, virtualColumns, columns) {\n    _classCallCheck(this, NavigationMetadata);\n\n    this.dataRows = dataRows;\n    this.headerRows = headerRows;\n    this.isVirtual = isVirtual;\n    this.hasPager = hasPager;\n    this.hasDetailTemplate = hasDetailTemplate;\n    this.gridElement = gridElement;\n    this.virtualColumns = virtualColumns;\n    this.columns = columns;\n  }\n\n  _createClass(NavigationMetadata, [{\n    key: \"maxLogicalRowIndex\",\n    get: function get() {\n      var dataRows = this.hasDetailTemplate ? this.dataRows * 2 : this.dataRows;\n      return this.headerRows + dataRows - 1;\n    }\n  }]);\n\n  return NavigationMetadata;\n}(); // Incremented each time the service is instantiated.\n\n\nvar sequence = 0;\n/**\n * @hidden\n */\n\nvar IdService = /*#__PURE__*/function () {\n  function IdService() {\n    _classCallCheck(this, IdService);\n\n    this.prefix = \"k-grid\".concat(sequence++);\n  }\n\n  _createClass(IdService, [{\n    key: \"cellId\",\n    value: function cellId(rowIndex, colIndex) {\n      return \"\".concat(this.prefix, \"-r\").concat(rowIndex, \"c\").concat(colIndex);\n    }\n  }, {\n    key: \"selectionCheckboxId\",\n    value: function selectionCheckboxId(itemIndex) {\n      return \"\".concat(this.prefix, \"-checkbox\").concat(itemIndex);\n    }\n  }, {\n    key: \"selectAllCheckboxId\",\n    value: function selectAllCheckboxId() {\n      return \"\".concat(this.prefix, \"-select-all\");\n    }\n  }]);\n\n  return IdService;\n}();\n\nIdService.ɵfac = function IdService_Factory(t) {\n  return new (t || IdService)();\n};\n\nIdService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: IdService,\n  factory: IdService.ɵfac\n});\n/** @nocollapse */\n\nIdService.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IdService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ColumnInfoService = /*#__PURE__*/function () {\n  function ColumnInfoService() {\n    _classCallCheck(this, ColumnInfoService);\n\n    this.visibilityChange = new EventEmitter();\n    this.lockedChange = new EventEmitter();\n    this.columnRangeChange = new EventEmitter();\n    this.columnsContainer = new ColumnsContainer(function () {\n      return [];\n    });\n  }\n\n  _createClass(ColumnInfoService, [{\n    key: \"init\",\n    value: function init(columns, list) {\n      this.columnsContainer = columns;\n      this.list = list;\n    }\n  }, {\n    key: \"changeVisibility\",\n    value: function changeVisibility(columns) {\n      this.visibilityChange.emit(columns);\n    }\n  }, {\n    key: \"changeLocked\",\n    value: function changeLocked(columns) {\n      this.lockedChange.emit(columns);\n    }\n  }, {\n    key: \"lockedLeafColumns\",\n    get: function get() {\n      return this.columnsContainer.lockedLeafColumns;\n    }\n  }, {\n    key: \"nonLockedLeafColumns\",\n    get: function get() {\n      return this.columnsContainer.nonLockedLeafColumns;\n    }\n  }, {\n    key: \"isLocked\",\n    get: function get() {\n      return this.lockedLeafColumns.length > 0;\n    }\n  }, {\n    key: \"totalLevels\",\n    get: function get() {\n      return this.columnsContainer.totalLevels;\n    }\n  }, {\n    key: \"leafNamedColumns\",\n    get: function get() {\n      var columns = expandColumns(this.list().filterSort(function (column) {\n        return !column.isColumnGroup;\n      })).filter(function (column) {\n        return column.matchesMedia && column.displayTitle;\n      });\n      return orderBy(columns, [{\n        field: 'locked',\n        dir: 'desc'\n      }]);\n    }\n  }, {\n    key: \"unlockedRootCount\",\n    get: function get() {\n      return this.list().rootColumns().filter(function (column) {\n        return !column.locked && column.isVisible;\n      }).length;\n    }\n  }]);\n\n  return ColumnInfoService;\n}();\n\nColumnInfoService.ɵfac = function ColumnInfoService_Factory(t) {\n  return new (t || ColumnInfoService)();\n};\n\nColumnInfoService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ColumnInfoService,\n  factory: ColumnInfoService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnInfoService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar SortService = /*#__PURE__*/function () {\n  function SortService() {\n    _classCallCheck(this, SortService);\n\n    this.changes = new Subject();\n  }\n\n  _createClass(SortService, [{\n    key: \"sort\",\n    value: function sort(value) {\n      this.changes.next(value);\n    }\n  }]);\n\n  return SortService;\n}();\n\nSortService.ɵfac = function SortService_Factory(t) {\n  return new (t || SortService)();\n};\n\nSortService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: SortService,\n  factory: SortService.ɵfac\n});\n/**\n * Arguments for the `columnVisibilityChange` event.\n */\n\nvar ColumnVisibilityChangeEvent =\n/**\n * @hidden\n */\nfunction ColumnVisibilityChangeEvent(columns) {\n  _classCallCheck(this, ColumnVisibilityChangeEvent);\n\n  this.columns = columns;\n};\n/**\n * Arguments for the `columnLockedChange` event.\n */\n\n\nvar ColumnLockedChangeEvent =\n/**\n * @hidden\n */\nfunction ColumnLockedChangeEvent(columns) {\n  _classCallCheck(this, ColumnLockedChangeEvent);\n\n  this.columns = columns;\n};\n/**\n * @hidden\n */\n\n\nvar GROUP_CELL_WIDTH = 32; // this should be the value of group-cell inside the theme!\n\n/**\n * @hidden\n */\n\nfunction defaultTrackBy(index, item) {\n  if (item.type === 'data' && item.isEditing) {\n    return item.data;\n  }\n\n  return index;\n}\n\nvar createControl = function createControl(source) {\n  return function (acc, key) {\n    acc[key] = new FormControl(source[key]);\n    return acc;\n  };\n};\n\nvar validateColumnsField = function validateColumnsField(columns) {\n  return expandColumns(columns.toArray()).filter(isColumnComponent).filter(function (_ref14) {\n    var field = _ref14.field;\n    return !isValidFieldName(field);\n  }).forEach(function (_ref15) {\n    var field = _ref15.field;\n    return console.warn(\"\\n                Grid column field name '\".concat(field, \"' does not look like a valid JavaScript identifier.\\n                Identifiers can contain only alphanumeric characters (including \\\"$\\\" or \\\"_\\\"), and may not start with a digit.\\n                Please use only valid identifier names to ensure error-free operation.\\n            \"));\n  });\n};\n\nvar handleExpandCollapseService = function handleExpandCollapseService(service, expandEmitter, collapseEmitter, map$$1) {\n  return service.changes.pipe(filter(function (_ref16) {\n    var dataItem = _ref16.dataItem;\n    return isPresent(dataItem);\n  })).subscribe(function (x) {\n    return x.expand ? expandEmitter.emit(map$$1(x)) : collapseEmitter.emit(map$$1(x));\n  });\n};\n\nvar isInEditedCell = function isInEditedCell(element, gridElement) {\n  return closest(element, matchesClasses('k-grid-edit-cell')) && closest(element, matchesNodeName('kendo-grid')) === gridElement;\n};\n\nvar ɵ4$2 = EMPTY_CELL_CONTEXT;\n/**\n * Represents the Kendo UI Grid component for Angular.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *        </kendo-grid>\n *    `\n * })\n * class AppComponent {\n *    public gridData: any[] = products;\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n * ```\n */\n\nvar GridComponent = /*#__PURE__*/function () {\n  function GridComponent(supportService, selectionService, cellSelectionService, wrapper, groupInfoService, groupsService, changeNotification, detailsService, editService, filterService, pdfService, responsiveService, renderer, excelService, ngZone, scrollSyncService, domEvents, columnResizingService, changeDetectorRef, columnReorderService, columnInfoService, navigationService, sortService, scrollRequestService, localization) {\n    var _this42 = this;\n\n    _classCallCheck(this, GridComponent);\n\n    this.supportService = supportService;\n    this.selectionService = selectionService;\n    this.cellSelectionService = cellSelectionService;\n    this.wrapper = wrapper;\n    this.groupInfoService = groupInfoService;\n    this.groupsService = groupsService;\n    this.changeNotification = changeNotification;\n    this.detailsService = detailsService;\n    this.editService = editService;\n    this.filterService = filterService;\n    this.pdfService = pdfService;\n    this.responsiveService = responsiveService;\n    this.renderer = renderer;\n    this.excelService = excelService;\n    this.ngZone = ngZone;\n    this.scrollSyncService = scrollSyncService;\n    this.domEvents = domEvents;\n    this.columnResizingService = columnResizingService;\n    this.changeDetectorRef = changeDetectorRef;\n    this.columnReorderService = columnReorderService;\n    this.columnInfoService = columnInfoService;\n    this.navigationService = navigationService;\n    this.sortService = sortService;\n    this.scrollRequestService = scrollRequestService;\n    /**\n     * Sets the data of the Grid. If an array is provided, the Grid automatically gets the total count\n     * ([more information and example]({% slug databinding_grid %})).\n     */\n\n    this.data = [];\n    /**\n     * Defines the scroll mode used by the Grid.\n     *\n     * The available options are:\n     *  - `none`&mdash;Renders no scrollbar.\n     *  - `scrollable`&mdash;The default scroll mode. It requires the setting of the `height` option.\n     *  - `virtual`&mdash;Displays no pager and renders a portion of the data (optimized rendering) while the user is scrolling the content.\n     */\n\n    this.scrollable = 'scrollable';\n    /**\n     * Enables the single-row [selection]({% slug selection_grid %}) of the Grid.\n     */\n\n    this.selectable = false;\n    /**\n     * A function that defines how to track changes for the data rows.\n     *\n     * By default, the Grid tracks changes by the index of the data item.\n     * Edited rows are tracked by reference.\n     * In some cases, you might need to override the default behavior,\n     * for example, when you implement editing with immutable data items.\n     *\n     * The following example demonstrates how to track items only by index.\n     *\n     * @example\n     * ```ts\n     * import { Component } from '@angular/core';\n     * import { GridItem } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [trackBy]=\"trackBy\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public trackBy(index: number, item: GridItem): any {\n     *        console.log(item);\n     *        return index;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n    this.trackBy = defaultTrackBy;\n    /**\n     * If set to `true`, the grid will render only the columns in the current viewport.\n     */\n\n    this.virtualColumns = false;\n    /**\n     * Enables the [filtering]({% slug filtering_grid %}) of the Grid columns that have their `field` option set.\n     */\n\n    this.filterable = false;\n    /**\n     * Enables the [sorting]({% slug sorting_grid %}) of the Grid columns that have their `field` option set.\n     */\n\n    this.sortable = false;\n    /**\n     * Configures the pager of the Grid ([see example]({% slug paging_grid %})).\n     *\n     * The available options are:\n     * - `buttonCount: Number`&mdash;Sets the maximum numeric buttons count before the buttons are collapsed.\n     * - `info: Boolean`&mdash;Toggles the information about the current page and the total number of records.\n     * - `type: PagerType`&mdash;Accepts the `numeric` (buttons with numbers) and `input` (input for typing the page number) values.\n     * - `pageSizes: Boolean` or `Array<number>`&mdash;Shows a menu for selecting the page size.\n     * - `previousNext: Boolean`&mdash;Toggles the **Previous** and **Next** buttons.\n     */\n\n    this.pageable = false;\n    /**\n     * If set to `true`, the user can group the Grid by dragging the column header cells.\n     * By default, grouping is disabled ([see example]({% slug groupingbasics_grid %})).\n     */\n\n    this.groupable = false;\n    /**\n     * If set to `true`, the user can use dedicated shortcuts to interact with the Grid.\n     * By default, navigation is disabled and the Grid content is accessible in the normal tab sequence.\n     */\n\n    this.navigable = false;\n    /**\n     * Indicates whether the Grid columns will be resized during initialization so that\n     * they fit their headers and row content. Defaults to `false`.\n     * Columns with `autoSize` set to `false` are excluded.\n     * To dynamically update the column width to match the new content,\n     * refer to [this example]({% slug resizing_columns_grid %}).\n     */\n\n    this.autoSize = false;\n    /**\n     * If set to `true`, the user can resize columns by dragging the edges (resize handles) of their header cells\n     * ([see example]({% slug resizing_columns_grid %})).\n     *\n     * @default false\n     */\n\n    this.resizable = false;\n    /**\n     * If set to `true`, the user can reorder columns by dragging their header cells\n     * ([see example]({% slug reordering_columns_grid %})).\n     *\n     * @default false\n     */\n\n    this.reorderable = false;\n    /**\n     * Specifies if the loading indicator of the Grid will be displayed ([see example]({% slug databinding_grid %})).\n     *\n     * @default false\n     */\n\n    this.loading = false;\n    /**\n     * Specifies if the column menu of the columns will be displayed ([see example]({% slug columnmenu_grid %})).\n     *\n     * @default false\n     */\n\n    this.columnMenu = false;\n    /**\n     * Specifies if the header of the grid will be hidden. The header is visible by default.\n     *\n     * > The header includes column headers and the [filter row]({% slug filtering_grid %}#toc-filter-row).\n     */\n\n    this.hideHeader = false;\n    /**\n     * Fires when the Grid filter is modified through the UI.\n     * You have to handle the event yourself and filter the data.\n     */\n\n    this.filterChange = new EventEmitter();\n    /**\n     * Fires when the page of the Grid is changed ([see example]({% slug paging_grid %})).\n     * You have to handle the event yourself and page the data.\n     */\n\n    this.pageChange = new EventEmitter();\n    /**\n     * Fires when the grouping of the Grid is changed.\n     * You have to handle the event yourself and group the data ([see example]({% slug groupingbasics_grid %})).\n     */\n\n    this.groupChange = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the sorting of the Grid is changed ([see example]({% slug sorting_grid %})).\n     * You have to handle the event yourself and sort the data.\n     */\n\n    this.sortChange = new EventEmitter();\n    /**\n     * Fires when the user selects a Grid row.\n     * Emits the [`SelectionEvent`]({% slug api_grid_selectionevent %}#toc-selectionchange).\n     */\n\n    this.selectionChange = new EventEmitter();\n    /**\n     * Fires when the data state of the Grid is changed.\n     */\n\n    this.dataStateChange = new EventEmitter();\n    /**\n     * Fires when the user expands a group header.\n     */\n\n    this.groupExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a group header.\n     */\n\n    this.groupCollapse = new EventEmitter();\n    /**\n     * Fires when the user expands a master row.\n     */\n\n    this.detailExpand = new EventEmitter();\n    /**\n     * Fires when the user collapses a master row.\n     */\n\n    this.detailCollapse = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Edit** command button to edit a row\n     * ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n     */\n\n    this.edit = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Cancel** command button to close a row\n     * ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n     */\n\n    this.cancel = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Save** command button to save changes in a row\n     * ([see example]({% slug editing_template_forms_grid %}#toc-saving-records)).\n     */\n\n    this.save = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Remove** command button to remove a row\n     * ([see example]({% slug editing_template_forms_grid %}#toc-removing-records)).\n     */\n\n    this.remove = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Add** command button to add a new row\n     * ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n     */\n\n    this.add = new EventEmitter();\n    /**\n     * Fires when the user leaves an edited cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n     */\n\n    this.cellClose = new EventEmitter();\n    /**\n     * Fires when the user clicks a cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n     */\n\n    this.cellClick = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the user clicks the **Export to PDF** command button.\n     */\n\n    this.pdfExport = new EventEmitter();\n    /**\n     * Fires when the user clicks the **Export to Excel** command button.\n     */\n\n    this.excelExport = new EventEmitter();\n    /**\n     * Fires when the user completes the resizing of the column.\n     */\n\n    this.columnResize = new ZoneAwareEventEmitter(this.ngZone);\n    /**\n     * Fires when the user completes the reordering of the column.\n     */\n\n    this.columnReorder = new EventEmitter();\n    /**\n     * Fires when the user changes the visibility of the columns from the column menu or column chooser.\n     */\n\n    this.columnVisibilityChange = new EventEmitter();\n    /**\n     * Fires when the user changes the locked state of the columns from the column menu or by reordering the columns.\n     */\n\n    this.columnLockedChange = new EventEmitter();\n    /**\n     * Fires when the user scrolls to the last record on the page and enables endless scrolling\n     * ([see example]({% slug scrollmmodes_grid %}#toc-endless-scrolling)).\n     * You have to handle the event yourself and page the data.\n     */\n\n    this.scrollBottom = new EventEmitter();\n    /**\n     * Fires when the grid content is scrolled.\n     * For performance reasons, the event is triggered outside the Angular zone. Enter the Angular zone if you make any changes that require change detection.\n     */\n\n    this.contentScroll = new EventEmitter();\n    /**\n     * A query list of all declared columns.\n     */\n\n    this.columns = new QueryList();\n    this.footer = new QueryList();\n    this.selectionDirective = false;\n    this.columnsContainer = new ColumnsContainer(function () {\n      return _this42.columnList.filterHierarchy(function (column) {\n        column.matchesMedia = _this42.matchesMedia(column);\n        return column.isVisible;\n      });\n    });\n    this.view = new DataCollection(function () {\n      return new DataResultIterator(_this42.data, _this42.skip, _this42.hasGroupFooters);\n    });\n    this.shouldGenerateColumns = true;\n    this._sort = new Array();\n    this._group = new Array();\n    this._skip = 0;\n    this.cachedWindowWidth = 0;\n    this._rowSelected = null;\n    this._cellSelected = null;\n    this.rtl = false;\n\n    this._rowClass = function () {\n      return null;\n    };\n\n    this.localizationSubscription = localization.changes.subscribe(function (_ref17) {\n      var rtl = _ref17.rtl;\n      _this42.rtl = rtl;\n      _this42.direction = _this42.rtl ? 'rtl' : 'ltr';\n    });\n    this.groupInfoService.registerColumnsContainer(function () {\n      return _this42.columnList;\n    });\n    this.columnInfoService.init(this.columnsContainer, function () {\n      return _this42.columnList;\n    });\n    this.columnVisibilityChangeSubscription = this.columnInfoService.visibilityChange.subscribe(function (changed) {\n      _this42.columnVisibilityChange.emit(new ColumnVisibilityChangeEvent(changed));\n    });\n    this.columnLockedChangeSubscription = this.columnInfoService.lockedChange.subscribe(function (changed) {\n      _this42.columnLockedChange.emit(new ColumnLockedChangeEvent(changed));\n    });\n    this.groupExpandCollapseSubscription = handleExpandCollapseService(groupsService, this.groupExpand, this.groupCollapse, function (_ref18) {\n      var group = _ref18.dataItem,\n          index = _ref18.index;\n      return {\n        group: group,\n        groupIndex: index\n      };\n    });\n    this.detailsServiceSubscription = handleExpandCollapseService(detailsService, this.detailExpand, this.detailCollapse, function (args) {\n      return args;\n    });\n    this.filterSubscription = this.filterService.changes.subscribe(function (x) {\n      _this42.filterChange.emit(x);\n    });\n    this.sortSubscription = this.sortService.changes.subscribe(function (x) {\n      _this42.sortChange.emit(x);\n    });\n    this.attachStateChangesEmitter();\n    this.attachEditHandlers();\n    this.attachDomEventHandlers();\n    this.pdfSubscription = this.pdfService.exportClick.subscribe(this.emitPDFExportEvent.bind(this));\n    this.excelSubscription = this.excelService.exportClick.subscribe(this.saveAsExcel.bind(this));\n    this.columnsContainerChange();\n    this.handleColumnResize();\n    this.columnList = new ColumnList(this.columns);\n    this.columnReorderSubscription = this.columnReorderService.changes.subscribe(this.reorder.bind(this));\n    this.columnRangeChangeSubscription = this.columnInfoService.columnRangeChange.subscribe(this.onColumnRangeChange.bind(this));\n  }\n  /**\n   * Defines the number of records to be skipped by the pager.\n   * Required by the [paging]({% slug paging_grid %}) functionality.\n   */\n\n\n  _createClass(GridComponent, [{\n    key: \"expandRow\",\n\n    /**\n     * Expands the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [`kendoGridDetailsExpandBy` directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n    value: function expandRow(index) {\n      this.toggleDetailRowLegacy(index, true);\n    }\n    /**\n     * Collapses the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [`kendoGridDetailsExpandBy` directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n\n  }, {\n    key: \"collapseRow\",\n    value: function collapseRow(index) {\n      this.toggleDetailRowLegacy(index, false);\n    }\n    /**\n     * Expands a group header item for the given index. For example,\n     * `0_1` expands the second inner group of the first master group.\n     *\n     * > * When you use the [`kendoGridGroupBinding`]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `expandGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [`skip`]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n\n  }, {\n    key: \"expandGroup\",\n    value: function expandGroup(index) {\n      if (!this.groupsService.isExpanded(index)) {\n        this.groupsService.toggleRow(index, null);\n      }\n    }\n    /**\n     * Collapses a group header item for the given index. For example,\n     * `0_1` collapses the second inner group of the first master group.\n     *\n     * > * When you use the [`kendoGridGroupBinding`]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `collapseGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [`skip`]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n\n  }, {\n    key: \"collapseGroup\",\n    value: function collapseGroup(index) {\n      if (this.groupsService.isExpanded(index)) {\n        this.groupsService.toggleRow(index, null);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"resetGroupsState\",\n    value: function resetGroupsState() {\n      this.groupsService.reset();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"expandGroupChildren\",\n    value: function expandGroupChildren(groupIndex) {\n      this.groupsService.expandChildren(groupIndex);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onDataChange\",\n    value: function onDataChange() {\n      this.autoGenerateColumns();\n      this.changeNotification.notify();\n      this.pdfService.dataChanged.emit();\n\n      if (isPresent(this.defaultSelection)) {\n        this.defaultSelection.reset();\n      }\n\n      this.initSelectionService();\n      this.updateNavigationMetadata();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this43 = this;\n\n      if (isChanged(\"data\", changes)) {\n        this.onDataChange();\n      }\n\n      if (this.lockedLeafColumns.length && anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\"], changes)) {\n        this.changeNotification.notify();\n      }\n\n      if (anyChanged([\"pageSize\", \"scrollable\", 'virtualColumns'], changes)) {\n        this.updateNavigationMetadata();\n      }\n\n      if (isChanged(\"virtualColumns\", changes)) {\n        this.viewportColumns = this.leafViewportColumns = null;\n      }\n\n      if (isChanged(\"height\", changes, false)) {\n        this.renderer.setStyle(this.wrapper.nativeElement, 'height', \"\".concat(this.height, \"px\"));\n      }\n\n      if (isChanged(\"filterable\", changes) && this.lockedColumns.length) {\n        this.syncHeaderHeight(this.ngZone.onStable.asObservable().pipe(take(1)));\n      }\n\n      if (anyChanged([\"columnMenu\", \"sortable\", \"filterable\"], changes, false)) {\n        this.columnMenuOptions = this.columnMenu && Object.assign({\n          filter: Boolean(this.filterable),\n          sort: Boolean(this.sortable)\n        }, this.columnMenu); // tslint:disable-line:align\n      }\n\n      if (isChanged(\"scrollable\", changes) && this.isScrollable) {\n        this.ngZone.onStable.pipe(take(1)).subscribe(function () {\n          return _this43.attachScrollSync();\n        });\n      }\n\n      if (isChanged(\"selectable\", changes)) {\n        if (this.defaultSelection) {\n          this.defaultSelection.reset();\n        } else if (this.selectionDirective) {\n          this.selectionDirective.reset();\n        }\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.attachScrollSync();\n      this.attachElementEventHandlers();\n      this.updateNavigationMetadata();\n      this.applyAutoSize();\n    }\n  }, {\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      this.columnsContainer.refresh();\n      this.verifySettings();\n      this.initSelectionService();\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this44 = this;\n\n      this.shouldGenerateColumns = !this.columns.length;\n      this.autoGenerateColumns();\n      this.columnList = new ColumnList(this.columns);\n      this.columnsChangeSubscription = this.columns.changes.subscribe(function () {\n        return _this44.verifySettings();\n      });\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.navigable) {\n        this.navigationService.init(this.navigationMetadata());\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.selectionSubscription) {\n        this.selectionSubscription.unsubscribe();\n      }\n\n      if (this.stateChangeSubscription) {\n        this.stateChangeSubscription.unsubscribe();\n      }\n\n      if (this.groupExpandCollapseSubscription) {\n        this.groupExpandCollapseSubscription.unsubscribe();\n      }\n\n      if (this.detailsServiceSubscription) {\n        this.detailsServiceSubscription.unsubscribe();\n      }\n\n      if (this.editServiceSubscription) {\n        this.editServiceSubscription.unsubscribe();\n      }\n\n      if (this.pdfSubscription) {\n        this.pdfSubscription.unsubscribe();\n      }\n\n      if (this.filterSubscription) {\n        this.filterSubscription.unsubscribe();\n      }\n\n      if (this.sortSubscription) {\n        this.sortSubscription.unsubscribe();\n      }\n\n      if (this.columnsChangeSubscription) {\n        this.columnsChangeSubscription.unsubscribe();\n      }\n\n      if (this.excelSubscription) {\n        this.excelSubscription.unsubscribe();\n      }\n\n      if (this.columnsContainerChangeSubscription) {\n        this.columnsContainerChangeSubscription.unsubscribe();\n      }\n\n      if (this.scrollSyncService) {\n        this.scrollSyncService.destroy();\n      }\n\n      if (this.detachElementEventHandlers) {\n        this.detachElementEventHandlers();\n      }\n\n      if (this.defaultSelection) {\n        this.defaultSelection.destroy();\n      }\n\n      if (this.cellClickSubscription) {\n        this.cellClickSubscription.unsubscribe();\n      }\n\n      if (this.footerChangeSubscription) {\n        this.footerChangeSubscription.unsubscribe();\n      }\n\n      this.ngZone = null;\n\n      if (this.columnResizingSubscription) {\n        this.columnResizingSubscription.unsubscribe();\n      }\n\n      if (this.columnReorderSubscription) {\n        this.columnReorderSubscription.unsubscribe();\n      }\n\n      if (this.localizationSubscription) {\n        this.localizationSubscription.unsubscribe();\n      }\n\n      if (this.columnVisibilityChangeSubscription) {\n        this.columnVisibilityChangeSubscription.unsubscribe();\n      }\n\n      if (this.columnLockedChangeSubscription) {\n        this.columnLockedChangeSubscription.unsubscribe();\n      }\n\n      if (this.focusElementSubscription) {\n        this.focusElementSubscription.unsubscribe();\n      }\n\n      this.columnRangeChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"attachScrollSync\",\n    value: function attachScrollSync() {\n      var _this45 = this;\n\n      if (isUniversal()) {\n        return;\n      }\n\n      if (this.header) {\n        this.scrollSyncService.registerEmitter(this.header.nativeElement, \"header\");\n      }\n\n      if (this.footer) {\n        this.footerChangeSubscription = observe(this.footer).subscribe(function (footers) {\n          return footers.map(function (footer) {\n            return footer.nativeElement;\n          }).filter(isPresent).forEach(function (element) {\n            return _this45.scrollSyncService.registerEmitter(element, \"footer\");\n          });\n        });\n      }\n    }\n    /**\n     * Switches the specified table row in the edit mode ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n     *\n     * @param rowIndex - The data row index that will be switched in the edit mode.\n     * @param group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     * @param options - Additional options configuring the focus target once the editor opens.\n     */\n\n  }, {\n    key: \"editRow\",\n    value: function editRow(rowIndex, group, options) {\n      this.editService.editRow(rowIndex, group);\n\n      if (isPresent(options) && options.skipFocus) {\n        return;\n      }\n\n      var row = \"tr[data-kendo-grid-item-index=\\\"\".concat(rowIndex, \"\\\"]\");\n      var columnIndex = options && options.columnIndex;\n      var target = isNaN(columnIndex) ? row : \"\".concat(row, \" td[data-kendo-grid-column-index=\\\"\").concat(columnIndex, \"\\\"]\");\n      this.focusEditElement(target);\n    }\n    /**\n     * Closes the editor for a given row ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n     *\n     * @param {number} index - The row index that will be switched out of the edit mode. If no index is provided, it is assumed\n     * that the new item editor will be closed.\n     */\n\n  }, {\n    key: \"closeRow\",\n    value: function closeRow(index) {\n      this.editService.close(index);\n    }\n    /**\n     * Creates a new row editor ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n     *\n     * @param {FormGroup} group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }}) that describes\n     * the edit form. If called with a data item, it will build the `FormGroup` from the data item fields.\n     */\n\n  }, {\n    key: \"addRow\",\n    value: function addRow(group) {\n      var isFormGroup = group instanceof FormGroup;\n\n      if (!isFormGroup) {\n        var fields = Object.keys(group).reduce(createControl(group), {}); // FormBuilder?\n\n        group = new FormGroup(fields);\n      }\n\n      this.editService.addRow(group);\n      this.focusEditElement('.k-grid-add-row');\n    }\n    /**\n     * Puts the cell that is specified by the table row and column in edit mode.\n     *\n     * @param {number} rowIndex - The data row index that will be switched in the edit mode.\n     * @param {number|string|any} column - The leaf column index, or the field name or the column instance that should be edited.\n     * @param {FormGroup} group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     */\n\n  }, {\n    key: \"editCell\",\n    value: function editCell(rowIndex, column, group) {\n      var instance = this.columnInstance(column);\n      this.editService.editCell(rowIndex, instance, group);\n      this.focusEditElement('.k-grid-edit-cell');\n    }\n    /**\n     * Closes the current cell in edit mode and fires\n     * the [`cellClose`]({% slug api_grid_gridcomponent %}#toc-cellclose) event.\n     *\n     * @return {boolean} Indicates whether the edited cell was closed.\n     * A `false` value indicates that the\n     * [`cellClose`]({% slug api_grid_gridcomponent %}#toc-cellclose) event was prevented.\n     */\n\n  }, {\n    key: \"closeCell\",\n    value: function closeCell() {\n      return !this.editService.closeCell();\n    }\n    /**\n     * Closes the current cell in edit mode.\n     */\n\n  }, {\n    key: \"cancelCell\",\n    value: function cancelCell() {\n      this.editService.cancelCell();\n    }\n    /**\n     * Returns a flag which indicates if a row or a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a row or a cell is currently edited.\n     */\n\n  }, {\n    key: \"isEditing\",\n    value: function isEditing() {\n      return this.editService.isEditing();\n    }\n    /**\n     * Returns a flag which indicates if a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a cell is currently being edited.\n     */\n\n  }, {\n    key: \"isEditingCell\",\n    value: function isEditingCell() {\n      return this.editService.isEditingCell();\n    }\n    /**\n     * Initiates the PDF export ([see example]({% slug pdfexport_grid %})).\n     */\n\n  }, {\n    key: \"saveAsPDF\",\n    value: function saveAsPDF() {\n      this.pdfService.save(this);\n    }\n    /**\n     * Exports the Grid element to a Drawing [`Group`]({% slug api_kendo-drawing_group %}) by using the `kendo-grid-pdf` component options.\n     * ([see example]({% slug pdfexport_grid %}#toc-exporting-multiple-grids-to-the-same-pdf)).\n     *\n     * @return {Promise} - A promise that will be resolved with the Drawing `Group`.\n     */\n\n  }, {\n    key: \"drawPDF\",\n    value: function drawPDF() {\n      var promise = createPromise();\n      this.pdfService.draw(this, promise);\n      return promise;\n    }\n    /**\n     * Initiates the Excel export ([see example]({% slug excelexport_grid %})).\n     */\n\n  }, {\n    key: \"saveAsExcel\",\n    value: function saveAsExcel() {\n      this.excelService.save(this);\n    }\n    /**\n     * Applies the minimum possible width for the specified column,\n     * so that the whole text fits without wrapping. This method expects the Grid\n     * to be resizable (set `resizable` to `true`).\n     * Makes sense to execute this method only\n     * after the Grid is already populated with data.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [resizable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\" (click)=\"grid.autoFitColumn(groupColumn)\">\n     *                     Auto-fit the group column\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    [minResizableWidth]=\"30\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                filter=\"numeric\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n  }, {\n    key: \"autoFitColumn\",\n    value: function autoFitColumn(column) {\n      this.columnResizingService.autoFit(column);\n    }\n    /**\n     * Adjusts the width of the specified columns to fit the entire content, including headers, without wrapping.\n     * If no columns are specified, `autoFitColumns` is applied to all columns.\n     *\n     * This method requires the Grid to be resizable (set `resizable` to `true`).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *      <kendo-grid\n     *          #grid\n     *          [data]=\"gridData\"\n     *          [resizable]=\"true\"\n     *          style=\"height: 300px\">\n     *          <ng-template kendoGridToolbarTemplate>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns([firstColumn, lastColumn])\">\n     *                  Auto-fit the first and last column\n     *              </button>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns()\">\n     *                  Auto-fit all columns\n     *              </button>\n     *          </ng-template>\n     *          <kendo-grid-column-group title=\"Product Info\">\n     *              <kendo-grid-column\n     *                  #firstColumn\n     *                  field=\"ProductID\"\n     *                  [width]=\"50\"\n     *                  [minResizableWidth]=\"30\"\n     *                  title=\"ID\">\n     *              </kendo-grid-column>\n     *\n     *              <kendo-grid-column\n     *                  field=\"ProductName\"\n     *                  title=\"Product Name\"\n     *                  >\n     *              </kendo-grid-column>\n     *          </kendo-grid-column-group>\n     *\n     *          <kendo-grid-column\n     *              #lastColumn\n     *              field=\"UnitPrice\"\n     *              title=\"Unit Price\"\n     *              [width]=\"180\"\n     *              filter=\"numeric\"\n     *              format=\"{0:c}\">\n     *          </kendo-grid-column>\n     *      </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n  }, {\n    key: \"autoFitColumns\",\n    value: function autoFitColumns() {\n      var _this$columnResizingS;\n\n      var columns = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.columns;\n      var cols;\n\n      if (columns instanceof QueryList) {\n        cols = columns.toArray();\n      } else {\n        cols = columns;\n      }\n\n      (_this$columnResizingS = this.columnResizingService).autoFit.apply(_this$columnResizingS, _toConsumableArray(cols));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"notifyPageChange\",\n    value: function notifyPageChange(source, event) {\n      if (source === \"list\" && !this.isVirtual) {\n        return;\n      }\n\n      this.pageChange.emit(event);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"notifyScrollBottom\",\n    value: function notifyScrollBottom() {\n      var _this46 = this;\n\n      if (this.scrollable === 'none') {\n        return;\n      }\n\n      if (hasObservers(this.scrollBottom)) {\n        this.ngZone.run(function () {\n          return _this46.scrollBottom.emit({\n            sender: _this46\n          });\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"focusEditElement\",\n    value: function focusEditElement(containerSelector) {\n      var _this47 = this;\n\n      if (this.focusElementSubscription) {\n        this.focusElementSubscription.unsubscribe();\n      }\n\n      this.ngZone.runOutsideAngular(function () {\n        _this47.focusElementSubscription = _this47.ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {\n          var wrapper = _this47.wrapper.nativeElement;\n\n          if (!_this47.setEditFocus(wrapper.querySelector(containerSelector)) && _this47.isLocked) {\n            _this47.setEditFocus(wrapper.querySelector(\".k-grid-content \".concat(containerSelector)));\n          }\n\n          _this47.focusElementSubscription = null;\n        });\n      });\n    }\n    /**\n     * Focuses the last active or the first cell of the Grid.\n     *\n     * @returns {NavigationCell} The focused cell.\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.assertNavigable();\n      return this.navigationService.focusCell();\n    }\n    /**\n     * Focuses the cell with the specified row and column index.\n     *\n     * The row index is based on the logical structure of the Grid and does not correspond to the data item index:\n     * * Header rows are included, starting at index 0.\n     * * Group headers and footers are included.\n     * * The row indexing is absolute and does not change with paging.\n     *\n     * If the Grid is configured for scrolling, including virtual scrolling, the scroll position will be updated.\n     * If the row is not present on the current page, the method will have no effect.\n     *\n     * @param rowIndex - The logical row index to focus. The top header row has an index 0.\n     * @param colIndex - The column index to focus.\n     * @returns {NavigationCell} The focused cell.\n     *\n     */\n\n  }, {\n    key: \"focusCell\",\n    value: function focusCell(rowIndex, colIndex) {\n      this.assertNavigable();\n      return this.navigationService.focusCell(rowIndex, colIndex);\n    }\n    /**\n     * Focuses the next cell, optionally wrapping to the next row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the last cell, returns `null`.\n     */\n\n  }, {\n    key: \"focusNextCell\",\n    value: function focusNextCell() {\n      var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.assertNavigable();\n      return this.navigationService.focusNextCell(wrap);\n    }\n    /**\n     * Focuses the previous cell. Optionally wraps to the previous row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the first cell, returns `null`.\n     */\n\n  }, {\n    key: \"focusPrevCell\",\n    value: function focusPrevCell() {\n      var wrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.assertNavigable();\n      return this.navigationService.focusPrevCell(wrap);\n    }\n    /**\n     * Scrolls to the specified row and column\n     */\n\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(request) {\n      this.scrollRequestService.scrollTo(request);\n    }\n    /**\n     * Changes the position of the specified column.\n     * The reordering of columns operates only on the level\n     * which is inferred by the source column.\n     * For the `reorderColumn` method to work properly,\n     * the `source` column has to be visible.\n     *\n     * @param {ColumnBase} source - The column whose position will be changed.\n     * @param {number} destIndex - The new position of the column.\n     * @param {ColumnReorderConfig} options - Additional options.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [reorderable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\"\n     *                     (click)=\"grid.reorderColumn(groupColumn, 2, { before: true })\">\n     *                     Move the group column before the last one.\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *\n     *            <kendo-grid-column\n     *                field=\"Discontinued\"\n     *                title=\"Discontinued\"\n     *                [width]=\"100\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n  }, {\n    key: \"reorderColumn\",\n    value: function reorderColumn(source, destIndex) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        before: false\n      };\n      var columnsForLevel = this.columnsForLevel(source.level);\n      var target = columnsForLevel[destIndex];\n\n      if (!target) {\n        return;\n      }\n\n      var lastNonLocked = target.isLocked && !source.isLocked && this.columnsContainer.nonLockedColumns.length === 1;\n\n      if (lastNonLocked) {\n        return;\n      }\n\n      if (isSpanColumnComponent(target) && !options.before) {\n        target = target.childColumns.last;\n      }\n\n      this.reorder({\n        before: options.before,\n        source: source,\n        target: target\n      });\n    }\n    /**\n     * A function which determines if a specific row is expanded.\n     */\n\n  }, {\n    key: \"reorder\",\n\n    /**\n     * @hidden\n     */\n    value: function reorder(_ref19) {\n      var _this48 = this;\n\n      var target = _ref19.target,\n          source = _ref19.source,\n          before = _ref19.before,\n          changeContainer = _ref19.changeContainer;\n      this.ngZone.run(function () {\n        var columnsForLevel = _this48.columnsForLevel(source.level);\n\n        var newIndex = columnsForLevel.indexOf(target);\n\n        if (target.parent && target.parent.isSpanColumn) {\n          newIndex = columnsForLevel.indexOf(target.parent);\n\n          if (before) {\n            target = target.parent;\n          }\n        }\n\n        var oldIndex = columnsForLevel.indexOf(source);\n\n        if (changeContainer) {\n          if (before && 0 < newIndex && oldIndex < newIndex) {\n            // dropped before the first not locked column\n            newIndex--;\n          } else if (!before && oldIndex > newIndex) {\n            // dropped after the last locked column\n            newIndex++;\n          }\n        }\n\n        var args = new ColumnReorderEvent({\n          column: source,\n          oldIndex: oldIndex,\n          newIndex: newIndex\n        });\n\n        _this48.columnReorder.emit(args);\n\n        if (args.isDefaultPrevented()) {\n          return;\n        }\n\n        if (changeContainer) {\n          _this48.columnLockedChange.emit(new ColumnLockedChangeEvent([source]));\n        }\n\n        _this48.updateColumnIndices({\n          source: source,\n          target: target,\n          before: before\n        });\n\n        if (source.locked !== target.locked) {\n          source.locked = target.locked;\n        }\n\n        _this48.columnsContainer.refresh();\n\n        _this48.changeDetectorRef.markForCheck();\n      });\n    }\n  }, {\n    key: \"updateColumnIndices\",\n    value: function updateColumnIndices(_ref20) {\n      var source = _ref20.source,\n          target = _ref20.target,\n          before = _ref20.before;\n      var expandedColumns = expandColumnsWithSpan(this.columnsForLevel(source.level));\n      var sourceColumnIndex = expandedColumns.indexOf(source);\n      var nextSourceIndex = 0;\n      var nextIndex = 0;\n      var toSkip = 1; // Possible only when called from the API.\n\n      if (source.isSpanColumn) {\n        toSkip += source.childColumns.length;\n      }\n\n      var i = 0;\n\n      while (i < expandedColumns.length) {\n        var column = expandedColumns[i];\n\n        if (column === target) {\n          nextSourceIndex = before ? nextIndex : nextIndex + 1;\n          nextIndex = before ? nextIndex + toSkip : nextIndex;\n          column.orderIndex = nextIndex;\n\n          if (nextSourceIndex === nextIndex + 1) {\n            nextIndex += toSkip;\n          }\n        } else if (column === source) {\n          i += toSkip;\n          continue;\n        } else {\n          column.orderIndex = nextIndex;\n        }\n\n        nextIndex++;\n        i++;\n      }\n\n      for (i = sourceColumnIndex; i < sourceColumnIndex + toSkip; i++) {\n        expandedColumns[i].orderIndex = nextSourceIndex++;\n      }\n\n      this.updateIndicesForLevel(source.level + 1);\n    }\n  }, {\n    key: \"updateIndicesForLevel\",\n    value: function updateIndicesForLevel(level) {\n      var colsForParentLevel = this.columnsForLevel(level - 1);\n      var colsForLevel = [];\n      sortColumns(colsForParentLevel).forEach(function (c) {\n        if (c.isColumnGroup) {\n          colsForLevel.push.apply(colsForLevel, _toConsumableArray(c.childrenArray.sort(function (a, b) {\n            return a.orderIndex - b.orderIndex;\n          })));\n        }\n      });\n      expandColumnsWithSpan(colsForLevel).map(function (c, i) {\n        return c.orderIndex = i;\n      });\n\n      if (level < this.columnsContainer.totalLevels) {\n        this.updateIndicesForLevel(level + 1);\n      }\n    }\n  }, {\n    key: \"columnsForLevel\",\n    value: function columnsForLevel(level) {\n      return this.columnsContainer.allColumns.filter(function (column) {\n        return column.level === level;\n      });\n    }\n  }, {\n    key: \"initSelectionService\",\n    value: function initSelectionService() {\n      var _this49 = this;\n\n      if (!this.selectable) {\n        this.selectionService.ngOnDestroy();\n        this.cellSelectionService.ngOnDestroy();\n        return;\n      }\n\n      if (!this.selectionDirective && !isPresent(this.defaultSelection)) {\n        this.defaultSelection = new Selection(this, this.changeDetectorRef);\n      }\n\n      var cellSelectionMode = this.selectable['cell'];\n      var activeService = cellSelectionMode ? this.cellSelectionService : this.selectionService;\n      var inactiveService = cellSelectionMode ? this.selectionService : this.cellSelectionService;\n\n      if (inactiveService.active) {\n        inactiveService.ngOnDestroy();\n        activeService.addSubscriptions();\n        inactiveService.active = false;\n      }\n\n      activeService.active = true;\n      activeService.init({\n        cellSelected: cellSelectionMode ? this.cellSelected : undefined,\n        rowSelected: cellSelectionMode ? undefined : this.rowSelected,\n        selectable: this.selectable,\n        view: this.view,\n        columns: cellSelectionMode ? this.columnList.toArray() : undefined\n      });\n\n      if (!this.selectionDirective && !this.selectableSettings.enabled) {\n        this.defaultSelection.reset();\n      }\n\n      if (this.selectionSubscription) {\n        this.selectionSubscription.unsubscribe();\n      }\n\n      if (cellSelectionMode) {\n        this.selectionSubscription = this.cellSelectionService.changes.subscribe(function (event) {\n          _this49.ngZone.run(function () {\n            return _this49.selectionChange.emit(event);\n          });\n        });\n      } else {\n        this.selectionSubscription = this.selectionService.changes.subscribe(function (event) {\n          _this49.ngZone.run(function () {\n            return _this49.selectionChange.emit(event);\n          });\n        });\n      }\n    }\n  }, {\n    key: \"setEditFocus\",\n    value: function setEditFocus(element) {\n      if (element) {\n        return this.navigationService.tryFocus(element);\n      }\n    }\n  }, {\n    key: \"columnInstance\",\n    value: function columnInstance(column) {\n      var instance;\n\n      if (typeof column === 'number') {\n        instance = this.columnsContainer.lockedLeafColumns.toArray().concat(this.columnsContainer.nonLockedLeafColumns.toArray())[column];\n      } else if (typeof column === 'string') {\n        instance = this.columnList.filter(function (item) {\n          return item.field === column;\n        })[0];\n      } else {\n        instance = column;\n      }\n\n      if (!instance && isDevMode()) {\n        throw new Error(\"Invalid column \".concat(column));\n      }\n\n      return instance;\n    }\n  }, {\n    key: \"verifySettings\",\n    value: function verifySettings() {\n      if (isDevMode()) {\n        var locked = this.lockedLeafColumns.length || this.columnMenu && this.columnMenu.lock;\n\n        if (locked && this.detailTemplate) {\n          throw new Error('Having both detail template and locked columns is not supported.');\n        }\n\n        if (this.lockedLeafColumns.length && !this.nonLockedLeafColumns.length) {\n          throw new Error('There should be at least one non-locked column');\n        }\n\n        if ((locked || this.virtualColumns) && expandColumns(this.columnList.toArray()).filter(function (column) {\n          return !column.width && !_isColumnGroupComponent(column);\n        }).length) {\n          throw new Error((locked ? 'Locked' : 'Virtual') + ' columns feature requires all columns to have set width.');\n        }\n\n        if (locked && !this.isScrollable) {\n          throw new Error('Locked columns are only supported when scrolling is enabled.');\n        }\n\n        if (this.columnList.filter(_isColumnGroupComponent).filter(function (x) {\n          return !x.hasChildren;\n        }).length) {\n          throw new Error('ColumnGroupComponent should contain ColumnComponent or CommandColumnComponent.');\n        }\n\n        if (this.columnList.filter(function (x) {\n          return x.locked && x.parent && !x.parent.isLocked;\n        }).length) {\n          throw new Error('Locked child columns require their parent columns to be locked.');\n        }\n\n        if ((this.rowHeight || this.detailRowHeight) && !this.isVirtual) {\n          throw new Error('Row height and detail row height settings require virtual scrolling mode to be enabled.');\n        }\n\n        validateColumnsField(this.columnList);\n      }\n    }\n  }, {\n    key: \"autoGenerateColumns\",\n    value: function autoGenerateColumns() {\n      if (this.shouldGenerateColumns && !this.columns.length && this.view.length) {\n        this.columns.reset(Object.keys(this.view.at(0)).map(function (field) {\n          var column = new ColumnComponent();\n          column.field = field;\n          return column;\n        }));\n      }\n    }\n  }, {\n    key: \"attachStateChangesEmitter\",\n    value: function attachStateChangesEmitter() {\n      var _this50 = this;\n\n      this.stateChangeSubscription = merge(this.pageChange.pipe(map(function (x) {\n        return {\n          filter: _this50.filter,\n          group: _this50.group,\n          skip: x.skip,\n          sort: _this50.sort,\n          take: x.take\n        };\n      })), this.sortChange.pipe(map(function (sort) {\n        return {\n          filter: _this50.filter,\n          group: _this50.group,\n          skip: _this50.skip,\n          sort: sort,\n          take: _this50.pageSize\n        };\n      })), this.groupChange.pipe(map(function (group) {\n        return {\n          filter: _this50.filter,\n          group: group,\n          skip: _this50.skip,\n          sort: _this50.sort,\n          take: _this50.pageSize\n        };\n      })), this.filterChange.pipe(map(function (filter$$1) {\n        return {\n          filter: filter$$1,\n          group: _this50.group,\n          skip: 0,\n          sort: _this50.sort,\n          take: _this50.pageSize\n        };\n      }))).subscribe(function (x) {\n        _this50.closeCell();\n\n        _this50.cancelCell();\n\n        _this50.dataStateChange.emit(x);\n      });\n    }\n  }, {\n    key: \"attachEditHandlers\",\n    value: function attachEditHandlers() {\n      if (!this.editService) {\n        return;\n      }\n\n      this.editServiceSubscription = this.editService.changes.subscribe(this.emitCRUDEvent.bind(this));\n    }\n  }, {\n    key: \"emitCRUDEvent\",\n    value: function emitCRUDEvent(args) {\n      var action = args.action,\n          rowIndex = args.rowIndex,\n          formGroup = args.formGroup;\n      var dataItem = this.view.at(rowIndex - this.skip);\n\n      if (action !== 'add' && !dataItem) {\n        dataItem = formGroup.value;\n      }\n\n      this.closeCell();\n      Object.assign(args, {\n        dataItem: dataItem,\n        sender: this\n      });\n\n      switch (action) {\n        case 'add':\n          this.add.emit(args);\n          break;\n\n        case 'cancel':\n          this.cancel.emit(args);\n          break;\n\n        case 'edit':\n          this.edit.emit(args);\n          break;\n\n        case 'remove':\n          this.remove.emit(args);\n          break;\n\n        case 'save':\n          this.save.emit(args);\n          break;\n\n        case 'cellClose':\n          this.cellClose.emit(args);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"attachDomEventHandlers\",\n    value: function attachDomEventHandlers() {\n      var _this51 = this;\n\n      this.cellClickSubscription = this.domEvents.cellClick.subscribe(function (args) {\n        _this51.cellClick.emit(Object.assign({\n          sender: _this51\n        }, args));\n      });\n    }\n  }, {\n    key: \"attachElementEventHandlers\",\n    value: function attachElementEventHandlers() {\n      var _this52 = this;\n\n      if (isUniversal()) {\n        return;\n      }\n\n      var wrapper = this.wrapper.nativeElement;\n      var ariaRoot = this.ariaRoot.nativeElement;\n      this.ngZone.runOutsideAngular(function () {\n        var resizeCheck = _this52.resizeCheck.bind(_this52);\n\n        var resizeSubscription = _this52.renderer.listen('window', 'resize', resizeCheck);\n\n        var orientationSubscription = _this52.renderer.listen('window', 'orientationchange', resizeCheck);\n\n        var documentClickSubscription = _this52.renderer.listen('document', 'click', function (args) {\n          var activeElement = document.activeElement;\n\n          if (_this52.editService.shouldCloseCell() && !closest(args.target, matchesClasses('k-animation-container k-grid-ignore-click')) && !(activeElement && (closest(activeElement, matchesClasses('k-animation-container')) || isInEditedCell(activeElement, _this52.wrapper.nativeElement)))) {\n            _this52.editService.closeCell(args);\n          }\n        });\n\n        var windowBlurSubscription = _this52.renderer.listen('window', 'blur', function (args) {\n          var activeElement = document.activeElement;\n\n          if (activeElement && !(matchesNodeName('input')(activeElement) && activeElement.type === 'file' && isInEditedCell(activeElement, _this52.wrapper.nativeElement))) {\n            _this52.editService.closeCell(args);\n          }\n\n          _this52.domEvents.windowBlur.emit(args);\n        });\n\n        var clickSubscription = _this52.renderer.listen(wrapper, 'click', function (args) {\n          _this52.domEvents.click.emit(args);\n        });\n\n        var keydownSubscription = _this52.renderer.listen(wrapper, 'keydown', function (args) {\n          _this52.domEvents.keydown.emit(args);\n        }); // focusIn and focusOut are relative to the element with ARIA role \"grid\"\n\n\n        var focused = false;\n\n        var focusInSubscription = _this52.renderer.listen(ariaRoot, 'focusin', function (args) {\n          _this52.domEvents.focus.emit(args);\n\n          if (!focused) {\n            _this52.domEvents.focusIn.emit(args);\n\n            focused = true;\n          }\n        });\n\n        var focusOutSubscription = _this52.renderer.listen(ariaRoot, 'focusout', function (args) {\n          var next = args.relatedTarget || document.activeElement;\n          var outside = !closest(next, function (node) {\n            return node === ariaRoot;\n          });\n\n          if (outside) {\n            _this52.domEvents.focusOut.emit(args);\n\n            focused = false;\n          }\n        });\n\n        _this52.detachElementEventHandlers = function () {\n          resizeSubscription();\n          orientationSubscription();\n          documentClickSubscription();\n          windowBlurSubscription();\n          clickSubscription();\n          keydownSubscription();\n          focusInSubscription();\n          focusOutSubscription();\n        };\n      });\n    }\n  }, {\n    key: \"matchesMedia\",\n    value: function matchesMedia(c) {\n      return this.responsiveService.matchesMedia(c.media);\n    }\n  }, {\n    key: \"resizeCheck\",\n    value: function resizeCheck() {\n      var _this53 = this;\n\n      if (window.innerWidth !== this.cachedWindowWidth) {\n        this.cachedWindowWidth = window.innerWidth;\n        var hasChanges = false;\n        this.columnList.filterHierarchy(function (column) {\n          var matchesMedia = _this53.matchesMedia(column);\n\n          if (column.matchesMedia !== matchesMedia) {\n            hasChanges = true;\n            column.matchesMedia = matchesMedia;\n          }\n\n          return column.isVisible;\n        });\n\n        if (hasChanges) {\n          this.ngZone.run(function () {\n            _this53.changeDetectorRef.markForCheck();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"emitPDFExportEvent\",\n    value: function emitPDFExportEvent() {\n      var args = new PDFExportEvent();\n      this.pdfExport.emit(args);\n\n      if (!args.isDefaultPrevented()) {\n        this.saveAsPDF();\n      }\n    }\n  }, {\n    key: \"syncHeaderHeight\",\n    value: function syncHeaderHeight(observable) {\n      var _this54 = this;\n\n      return observable.pipe(filter(function () {\n        return isPresent(_this54.lockedHeader);\n      })).subscribe(function () {\n        return _syncRowsHeight(_this54.lockedHeader.nativeElement.children[0], _this54.header.nativeElement.children[0]);\n      });\n    }\n  }, {\n    key: \"columnsContainerChange\",\n    value: function columnsContainerChange() {\n      var _this55 = this;\n\n      this.columnsContainerChangeSubscription = this.syncHeaderHeight(this.columnsContainer.changes.pipe(filter(function () {\n        return _this55.lockedColumns.length > 0;\n      }), switchMap(function () {\n        return _this55.ngZone.onStable.asObservable().pipe(take(1));\n      })));\n    }\n  }, {\n    key: \"handleColumnResize\",\n    value: function handleColumnResize() {\n      var _this56 = this;\n\n      var resizes = this.columnResizingService.changes;\n      this.columnResizingSubscription = resizes.pipe(tap(function (e) {\n        if (e.type === 'start') {\n          _this56.renderer.addClass(_this56.wrapper.nativeElement, 'k-grid-column-resizing');\n        } else if (e.type === 'end') {\n          _this56.renderer.removeClass(_this56.wrapper.nativeElement, 'k-grid-column-resizing');\n        }\n      }), filter(function (e) {\n        return e.type === 'start';\n      }), switchMap(function () {\n        return resizes.pipe( // tslint:disable-next-line: rxjs-no-unsafe-takeuntil\n        takeUntil(resizes.pipe(filter(function (e) {\n          return e.type === 'triggerAutoFit';\n        }))), filter(function (e) {\n          return e.type === 'end';\n        }));\n      })).subscribe(this.notifyResize.bind(this));\n    }\n  }, {\n    key: \"notifyResize\",\n    value: function notifyResize(e) {\n      var args = e.resizedColumns.filter(function (item) {\n        return isTruthy(item.column.resizable) && !item.column.isColumnGroup;\n      }).map(function (item) {\n        return {\n          column: item.column,\n          newWidth: item.column.width,\n          oldWidth: item.oldWidth\n        };\n      });\n      this.columnResize.emit(args);\n    }\n  }, {\n    key: \"assertNavigable\",\n    value: function assertNavigable() {\n      if (isDevMode() && !this.navigable) {\n        throw new Error('The Grid should be configured as [navigable]=\"true\" to control focus');\n      }\n    }\n  }, {\n    key: \"navigationMetadata\",\n    value: function navigationMetadata() {\n      var isVirtual = this.isVirtual;\n      var pageSize = this.pageSize;\n      var dataRows = isVirtual ? this.view.total : pageSize;\n      var addRowOffset = this.editService.hasNewItem ? 1 : 0;\n      var filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n      var headerRows = this.totalColumnLevels + 1 + filterRowOffset + addRowOffset;\n      return new NavigationMetadata(dataRows, headerRows, isVirtual, this.showPager, isPresent(this.detailTemplate), this.wrapper, this.virtualColumns, this.columnsContainer);\n    }\n  }, {\n    key: \"updateNavigationMetadata\",\n    value: function updateNavigationMetadata() {\n      this.navigationService.metadata = this.navigationMetadata();\n    }\n  }, {\n    key: \"applyAutoSize\",\n    value: function applyAutoSize() {\n      var _this57 = this;\n\n      var cols = this.columns.filter(function (c) {\n        return _this57.autoSize ? c.autoSize !== false : c.autoSize;\n      });\n\n      if (cols.length > 0) {\n        this.ngZone.onStable.pipe(take(1)).subscribe(function (_) {\n          return _this57.autoFitColumns(cols);\n        });\n      }\n    }\n  }, {\n    key: \"onColumnRangeChange\",\n    value: function onColumnRangeChange(range) {\n      var viewportColumns = this.viewportColumns = [];\n      var leafViewportColumns = this.columnsContainer.nonLockedLeafColumns.toArray().slice(range.start, range.end + 1);\n\n      for (var idx = 0; idx < leafViewportColumns.length; idx++) {\n        var column = leafViewportColumns[idx];\n\n        while (column.parent) {\n          column = column.parent;\n        }\n\n        var toAdd = [column];\n\n        while (toAdd.length) {\n          column = toAdd.shift();\n          viewportColumns.push(column);\n\n          if (column.isColumnGroup) {\n            toAdd.unshift.apply(toAdd, column.childrenArray);\n          }\n        }\n\n        var lastFromGroup = viewportColumns[viewportColumns.length - 1];\n        column = leafViewportColumns[idx];\n\n        while (column !== lastFromGroup && idx < leafViewportColumns.length) {\n          idx++;\n          column = leafViewportColumns[idx];\n        }\n      }\n\n      if (range.start > 0) {\n        var first = leafViewportColumns[0];\n        var _offset2 = range.offset;\n        var current = viewportColumns[0];\n        var index = 0;\n\n        while (current !== first) {\n          _offset2 -= current.isColumnGroup ? 0 : current.width;\n          index++;\n          current = viewportColumns[index];\n        }\n\n        if (_offset2 > 0) {\n          var totalLevels = this.columnsContainer.totalLevels;\n          var previous;\n\n          for (var _idx = 0; _idx <= totalLevels; _idx++) {\n            var offsetColumn = _idx < totalLevels ? new ColumnGroupComponent(previous) : new ColumnBase$1(previous);\n            previous = offsetColumn;\n            offsetColumn.title = \"\\xA0\";\n            offsetColumn.width = _offset2;\n            viewportColumns.unshift(offsetColumn);\n          }\n        }\n      }\n\n      this.leafViewportColumns = viewportColumns.filter(function (c) {\n        return !c.isColumnGroup;\n      });\n    }\n  }, {\n    key: \"toggleDetailRowLegacy\",\n    value: function toggleDetailRowLegacy(index, expand) {\n      var hasCallback = typeof this.isDetailExpanded === 'function';\n\n      if (isDevMode() && hasCallback) {\n        throw new Error('The expandRow and collapseRow methods should not be called when using the ' + 'kendoGridDetailsExpandBy directive or the isDetailExpanded callback. ' + 'These methods are provided only for backwards compatibility with legacy versions.');\n      }\n\n      if (!isDevMode() && hasCallback) {\n        return;\n      }\n\n      if (this.detailsService.isExpanded(index, null) !== expand) {\n        this.detailsService.toggleRow(index, null);\n      }\n    }\n  }, {\n    key: \"skip\",\n    get: function get() {\n      return this._skip;\n    },\n    set: function set(value) {\n      if (value >= 0) {\n        this._skip = value;\n      }\n    }\n    /**\n     * The descriptors by which the data will be sorted ([see example]({% slug sorting_grid %})).\n     */\n\n  }, {\n    key: \"sort\",\n    set: function set(value) {\n      if (isArray(value)) {\n        this._sort = value;\n      }\n    },\n    get: function get() {\n      return this._sort;\n    }\n    /**\n     * The descriptors by which the data will be grouped ([see example]({% slug groupingbasics_grid %})).\n     */\n\n  }, {\n    key: \"group\",\n    set: function set(value) {\n      if (isArray(value)) {\n        this._group = value;\n      }\n    }\n    /**\n     */\n    ,\n    get: function get() {\n      return this._group;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"showTopToolbar\",\n    get: function get() {\n      return this.toolbarTemplate && ['top', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"showBottomToolbar\",\n    get: function get() {\n      return this.toolbarTemplate && ['bottom', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isLocked\",\n    get: function get() {\n      return this.lockedLeafColumns.length > 0;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"showPager\",\n    get: function get() {\n      return !this.isVirtual && this.pageable !== false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"showGroupPanel\",\n    get: function get() {\n      return this.groupable && this.groupable.enabled !== false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"groupableEmptyText\",\n    get: function get() {\n      return this.groupable.emptyText;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"marqueeSelection\",\n    get: function get() {\n      return this.selectionService.enableMarquee || this.cellSelectionService.enableMarquee;\n    }\n    /**\n     * @hidden\n     *\n     * An alias for `navigable` for users who migrate from Kendo UI for jQuery.\n     */\n\n  }, {\n    key: \"navigatable\",\n    set: function set(value) {\n      this.navigable = value;\n    }\n    /**\n     * @hidden\n     */\n    ,\n    get: function get() {\n      return this.navigable;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component.\n     *\n     * @example\n     * ```ts\n     * import { Component, ViewEncapsulation } from '@angular/core';\n     * import { RowClassArgs } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    encapsulation: ViewEncapsulation.None,\n     *    styles: [`\n     *        .k-grid tr.even { background-color: #f45c42; }\n     *        .k-grid tr.odd { background-color: #41f4df; }\n     *    `],\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [rowClass]=\"rowCallback\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public rowCallback(context: RowClassArgs) {\n     *        const isEven = context.index % 2 == 0;\n     *        return {\n     *            even: isEven,\n     *            odd: !isEven\n     *        };\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n\n  }, {\n    key: \"rowClass\",\n    set: function set(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(\"rowClass must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this._rowClass = fn;\n    },\n    get: function get() {\n      return this._rowClass;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data row in the component\n     * ([see example]({% slug selection_grid %}#toc-setting-the-selected-rows)).\n     * Determines whether the row will be selected.\n     */\n\n  }, {\n    key: \"rowSelected\",\n    set: function set(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(\"rowSelected must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this._rowSelected = fn;\n    },\n    get: function get() {\n      return this._rowSelected;\n    }\n    /**\n     * Defines a function that determines the selected state of a data cell.\n     * Returns an object with `selected` and `item` properties.\n     * The cell is marked as selected only if the `selected` property equals `true`.\n     *\n     * The function is executed for each data cell and may be called more than once\n     * as part of a change detection cycle. ([see example]({% slug grid_selection_custom %}toc-setting-the-selected-cells))\n     */\n\n  }, {\n    key: \"cellSelected\",\n    set: function set(fn) {\n      if (isDevMode && typeof fn !== 'function') {\n        throw new Error(\"cellSelected must be a function, but received \".concat(JSON.stringify(fn), \".\"));\n      }\n\n      this._cellSelected = fn;\n    },\n    get: function get() {\n      return this._cellSelected;\n    }\n    /**\n     * Returns the currently focused cell (if any).\n     */\n\n  }, {\n    key: \"activeCell\",\n    get: function get() {\n      return this.navigationService.activeCell;\n    }\n    /**\n     * Returns the currently focused row (if any).\n     */\n\n  }, {\n    key: \"activeRow\",\n    get: function get() {\n      return this.navigationService.activeRow;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.direction;\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"lockedClasses\",\n    get: function get() {\n      return this.lockedLeafColumns.length > 0;\n    }\n  }, {\n    key: \"virtualClasses\",\n    get: function get() {\n      return this.isVirtual;\n    }\n  }, {\n    key: \"noScrollbarClass\",\n    get: function get() {\n      return this.scrollbarWidth === 0;\n    }\n  }, {\n    key: \"detailTemplate\",\n    get: function get() {\n      if (this._customDetailTemplate) {\n        return this._customDetailTemplate;\n      }\n\n      return this.detailTemplateChildren ? this.detailTemplateChildren.first : undefined;\n    },\n    set: function set(detailTemplate) {\n      this._customDetailTemplate = detailTemplate;\n    }\n  }, {\n    key: \"noRecordsTemplate\",\n    get: function get() {\n      if (this._customNoRecordsTemplate) {\n        return this._customNoRecordsTemplate;\n      }\n\n      return this.noRecordsTemplateChildren ? this.noRecordsTemplateChildren.first : undefined;\n    },\n    set: function set(customNoRecordsTemplate) {\n      this._customNoRecordsTemplate = customNoRecordsTemplate;\n    }\n  }, {\n    key: \"pagerTemplate\",\n    get: function get() {\n      if (this._customPagerTemplate) {\n        return this._customPagerTemplate;\n      }\n\n      return this.pagerTemplateChildren ? this.pagerTemplateChildren.first : undefined;\n    },\n    set: function set(customPagerTemplate) {\n      this._customPagerTemplate = customPagerTemplate;\n    }\n  }, {\n    key: \"toolbarTemplate\",\n    get: function get() {\n      if (this._customToolbarTemplate) {\n        return this._customToolbarTemplate;\n      }\n\n      return this.toolbarTemplateChildren ? this.toolbarTemplateChildren.first : undefined;\n    },\n    set: function set(customToolbarTemplate) {\n      this._customToolbarTemplate = customToolbarTemplate;\n    }\n  }, {\n    key: \"scrollbarWidth\",\n    get: function get() {\n      return this.supportService.scrollbarWidth;\n    }\n  }, {\n    key: \"headerPadding\",\n    get: function get() {\n      if (isUniversal()) {\n        return \"\";\n      }\n\n      var padding = Math.max(0, this.scrollbarWidth - 1) + 'px';\n      var right = this.rtl ? 0 : padding;\n      var left = this.rtl ? padding : 0;\n      return \"0 \".concat(right, \" 0 \").concat(left);\n    }\n  }, {\n    key: \"hasGroupFooters\",\n    get: function get() {\n      return this.columnsContainer.hasGroupFooter;\n    }\n  }, {\n    key: \"showFooter\",\n    get: function get() {\n      return this.columnsContainer.hasFooter;\n    }\n  }, {\n    key: \"showGroupFooters\",\n    get: function get() {\n      return this.groupable && this.groupable.showFooter;\n    }\n  }, {\n    key: \"ariaRowCount\",\n    get: function get() {\n      return this.totalColumnLevels + 1 + this.view.total;\n    }\n  }, {\n    key: \"ariaColCount\",\n    get: function get() {\n      return this.columnsContainer.leafColumnsToRender.length;\n    }\n  }, {\n    key: \"isVirtual\",\n    get: function get() {\n      return this.scrollable === 'virtual';\n    }\n  }, {\n    key: \"isScrollable\",\n    get: function get() {\n      return this.scrollable !== 'none';\n    }\n  }, {\n    key: \"visibleColumns\",\n    get: function get() {\n      return this.columnsContainer.allColumns;\n    }\n  }, {\n    key: \"lockedColumns\",\n    get: function get() {\n      return this.columnsContainer.lockedColumns;\n    }\n  }, {\n    key: \"nonLockedColumns\",\n    get: function get() {\n      return this.columnsContainer.nonLockedColumns;\n    }\n  }, {\n    key: \"lockedLeafColumns\",\n    get: function get() {\n      return this.columnsContainer.lockedLeafColumns;\n    }\n  }, {\n    key: \"nonLockedLeafColumns\",\n    get: function get() {\n      return this.columnsContainer.nonLockedLeafColumns;\n    }\n  }, {\n    key: \"leafColumns\",\n    get: function get() {\n      return this.columnsContainer.leafColumns;\n    }\n  }, {\n    key: \"totalColumnLevels\",\n    get: function get() {\n      return this.columnsContainer.totalLevels;\n    }\n  }, {\n    key: \"headerColumns\",\n    get: function get() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.viewportColumns;\n      }\n\n      return this.nonLockedColumns;\n    }\n  }, {\n    key: \"headerLeafColumns\",\n    get: function get() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.leafViewportColumns;\n      }\n\n      return this.nonLockedLeafColumns;\n    }\n  }, {\n    key: \"lockedWidth\",\n    get: function get() {\n      var groupCellsWidth = this.group.length * GROUP_CELL_WIDTH;\n      return expandColumns(this.lockedLeafColumns.toArray()).reduce(function (prev, curr) {\n        return prev + (curr.width || 0);\n      }, groupCellsWidth);\n    }\n  }, {\n    key: \"nonLockedWidth\",\n    get: function get() {\n      if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n        return !this.virtualColumns ? this.columnsContainer.unlockedWidth : this.leafViewportColumns.reduce(function (acc, column) {\n          return acc + (column.width || 0);\n        }, 0);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"selectableSettings\",\n    get: function get() {\n      if (this.selectionService) {\n        return this.selectionService.options;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"columnMenuTemplate\",\n    get: function get() {\n      var template = this.columnMenuTemplates.first;\n      return template ? template.templateRef : null;\n    }\n  }, {\n    key: \"totalCount\",\n    get: function get() {\n      if (this.isVirtual || !isPresent(this.pageSize)) {\n        return this.view.total;\n      }\n\n      return this.pageSize;\n    }\n  }, {\n    key: \"isDetailExpanded\",\n    set: function set(callback) {\n      this.detailsService.userCallback = callback;\n    },\n    get: function get() {\n      return this.detailsService.userCallback;\n    }\n  }]);\n\n  return GridComponent;\n}();\n\nGridComponent.ɵfac = function GridComponent_Factory(t) {\n  return new (t || GridComponent)(ɵngcc0.ɵɵdirectiveInject(BrowserSupportService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(GroupInfoService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ResponsiveService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ScrollSyncService), ɵngcc0.ɵɵdirectiveInject(DomEventsService), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ColumnReorderService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(SortService), ɵngcc0.ɵɵdirectiveInject(ScrollRequestService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nGridComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GridComponent,\n  selectors: [[\"kendo-grid\"]],\n  contentQueries: function GridComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, DetailTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, NoRecordsTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PagerTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ToolbarTemplateDirective, false);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuTemplateDirective, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.detailTemplateChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.noRecordsTemplateChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pagerTemplateChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.toolbarTemplateChildren = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnMenuTemplates = _t);\n    }\n  },\n  viewQuery: function GridComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n      ɵngcc0.ɵɵviewQuery(_c1, true);\n      ɵngcc0.ɵɵviewQuery(_c2, true);\n      ɵngcc0.ɵɵviewQuery(_c3, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedHeader = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.header = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ariaRoot = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footer = _t);\n    }\n  },\n  hostVars: 11,\n  hostBindings: function GridComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"dir\", ctx.dir);\n      ɵngcc0.ɵɵclassProp(\"k-widget\", ctx.hostClasses)(\"k-grid\", ctx.hostClasses)(\"k-grid-lockedcolumns\", ctx.lockedClasses)(\"k-grid-virtual\", ctx.virtualClasses)(\"k-grid-no-scrollbar\", ctx.noScrollbarClass);\n    }\n  },\n  inputs: {\n    data: \"data\",\n    scrollable: \"scrollable\",\n    selectable: \"selectable\",\n    trackBy: \"trackBy\",\n    virtualColumns: \"virtualColumns\",\n    filterable: \"filterable\",\n    sortable: \"sortable\",\n    pageable: \"pageable\",\n    groupable: \"groupable\",\n    navigable: \"navigable\",\n    autoSize: \"autoSize\",\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    loading: \"loading\",\n    columnMenu: \"columnMenu\",\n    hideHeader: \"hideHeader\",\n    skip: \"skip\",\n    sort: \"sort\",\n    group: \"group\",\n    navigatable: \"navigatable\",\n    rowClass: \"rowClass\",\n    rowSelected: \"rowSelected\",\n    cellSelected: \"cellSelected\",\n    isDetailExpanded: \"isDetailExpanded\",\n    pageSize: \"pageSize\",\n    height: \"height\",\n    rowHeight: \"rowHeight\",\n    detailRowHeight: \"detailRowHeight\",\n    filter: \"filter\"\n  },\n  outputs: {\n    filterChange: \"filterChange\",\n    pageChange: \"pageChange\",\n    groupChange: \"groupChange\",\n    sortChange: \"sortChange\",\n    selectionChange: \"selectionChange\",\n    dataStateChange: \"dataStateChange\",\n    groupExpand: \"groupExpand\",\n    groupCollapse: \"groupCollapse\",\n    detailExpand: \"detailExpand\",\n    detailCollapse: \"detailCollapse\",\n    edit: \"edit\",\n    cancel: \"cancel\",\n    save: \"save\",\n    remove: \"remove\",\n    add: \"add\",\n    cellClose: \"cellClose\",\n    cellClick: \"cellClick\",\n    pdfExport: \"pdfExport\",\n    excelExport: \"excelExport\",\n    columnResize: \"columnResize\",\n    columnReorder: \"columnReorder\",\n    columnVisibilityChange: \"columnVisibilityChange\",\n    columnLockedChange: \"columnLockedChange\",\n    scrollBottom: \"scrollBottom\",\n    contentScroll: \"contentScroll\"\n  },\n  exportAs: [\"kendoGrid\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([BrowserSupportService, LocalizationService, ColumnInfoService, SelectionService, CellSelectionService, DetailsService, GroupsService, GroupInfoService, ChangeNotificationService, EditService, PDFService, SuspendService, {\n    provide: CELL_CONTEXT,\n    useValue: ɵ4$2\n  }, {\n    provide: L10N_PREFIX,\n    useValue: 'kendo.grid'\n  }, FilterService, ResponsiveService, PagerContextService, ExcelService, ScrollSyncService, ResizeService, LocalDataChangesService, DomEventsService, ColumnResizingService, SinglePopupService, DragAndDropService, DragHintService, DropCueService, ColumnReorderService, NavigationService, FocusRoot, IdService, ScrollRequestService, SortService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 10,\n  vars: 8,\n  consts: function consts() {\n    var i18n_4;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label visible in the Grid group panel when it is empty\n       * @meaning kendo.grid.groupPanelEmpty\n       */\n      var MSG_EXTERNAL_1430663748859427158$$DIST_FESM2015_INDEX_JS_5 = goog.getMsg(\"Drag a column header and drop it here to group by that column\");\n      i18n_4 = MSG_EXTERNAL_1430663748859427158$$DIST_FESM2015_INDEX_JS_5;\n    } else {\n      i18n_4 = $localize(_templateObject());\n    }\n\n    var i18n_6;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label visible in the Grid when there are no records\n       * @meaning kendo.grid.noRecords\n       */\n      var MSG_EXTERNAL_1243399825085142134$$DIST_FESM2015_INDEX_JS_7 = goog.getMsg(\"No records available.\");\n      i18n_6 = MSG_EXTERNAL_1243399825085142134$$DIST_FESM2015_INDEX_JS_7;\n    } else {\n      i18n_6 = $localize(_templateObject2());\n    }\n\n    var i18n_8;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the first page button in Grid pager\n       * @meaning kendo.grid.pagerFirstPage\n       */\n      var MSG_EXTERNAL_5647145449685906398$$DIST_FESM2015_INDEX_JS_9 = goog.getMsg(\"Go to the first page\");\n      i18n_8 = MSG_EXTERNAL_5647145449685906398$$DIST_FESM2015_INDEX_JS_9;\n    } else {\n      i18n_8 = $localize(_templateObject3());\n    }\n\n    var i18n_10;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the previous page button in Grid pager\n       * @meaning kendo.grid.pagerPreviousPage\n       */\n      var MSG_EXTERNAL_6745088753482690847$$DIST_FESM2015_INDEX_JS_11 = goog.getMsg(\"Go to the previous page\");\n      i18n_10 = MSG_EXTERNAL_6745088753482690847$$DIST_FESM2015_INDEX_JS_11;\n    } else {\n      i18n_10 = $localize(_templateObject4());\n    }\n\n    var i18n_12;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the next page button in Grid pager\n       * @meaning kendo.grid.pagerNextPage\n       */\n      var MSG_EXTERNAL_5510985262435270859$$DIST_FESM2015_INDEX_JS_13 = goog.getMsg(\"Go to the next page\");\n      i18n_12 = MSG_EXTERNAL_5510985262435270859$$DIST_FESM2015_INDEX_JS_13;\n    } else {\n      i18n_12 = $localize(_templateObject5());\n    }\n\n    var i18n_14;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the last page button in Grid pager\n       * @meaning kendo.grid.pagerLastPage\n       */\n      var MSG_EXTERNAL_4539768510520419313$$DIST_FESM2015_INDEX_JS_15 = goog.getMsg(\"Go to the last page\");\n      i18n_14 = MSG_EXTERNAL_4539768510520419313$$DIST_FESM2015_INDEX_JS_15;\n    } else {\n      i18n_14 = $localize(_templateObject6());\n    }\n\n    var i18n_16;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label before the current page number in the Grid pager\n       * @meaning kendo.grid.pagerPage\n       */\n      var MSG_EXTERNAL_5228228287003939680$$DIST_FESM2015_INDEX_JS_17 = goog.getMsg(\"Page\");\n      i18n_16 = MSG_EXTERNAL_5228228287003939680$$DIST_FESM2015_INDEX_JS_17;\n    } else {\n      i18n_16 = $localize(_templateObject7());\n    }\n\n    var i18n_18;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label before the total pages number in the Grid pager\n       * @meaning kendo.grid.pagerOf\n       */\n      var MSG_EXTERNAL_7004642096327889102$$DIST_FESM2015_INDEX_JS_19 = goog.getMsg(\"of\");\n      i18n_18 = MSG_EXTERNAL_7004642096327889102$$DIST_FESM2015_INDEX_JS_19;\n    } else {\n      i18n_18 = $localize(_templateObject8());\n    }\n\n    var i18n_20;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label after the total pages number in the Grid pager\n       * @meaning kendo.grid.pagerItems\n       */\n      var MSG_EXTERNAL_700193548223931835$$DIST_FESM2015_INDEX_JS_21 = goog.getMsg(\"items\");\n      i18n_20 = MSG_EXTERNAL_700193548223931835$$DIST_FESM2015_INDEX_JS_21;\n    } else {\n      i18n_20 = $localize(_templateObject9());\n    }\n\n    var i18n_22;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the pager input in the Grid pager\n       * @meaning kendo.grid.pagerPageNumberInputTitle\n       */\n      var MSG_EXTERNAL_2090461908134774363$$DIST_FESM2015_INDEX_JS_23 = goog.getMsg(\"Page Number\");\n      i18n_22 = MSG_EXTERNAL_2090461908134774363$$DIST_FESM2015_INDEX_JS_23;\n    } else {\n      i18n_22 = $localize(_templateObject10());\n    }\n\n    var i18n_24;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label for the page size chooser in the Grid pager\n       * @meaning kendo.grid.pagerItemsPerPage\n       */\n      var MSG_EXTERNAL_8838594644885628398$$DIST_FESM2015_INDEX_JS_25 = goog.getMsg(\"items per page\");\n      i18n_24 = MSG_EXTERNAL_8838594644885628398$$DIST_FESM2015_INDEX_JS_25;\n    } else {\n      i18n_24 = $localize(_templateObject11());\n    }\n\n    var i18n_26;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the filter cell or icon\n       * @meaning kendo.grid.filter\n       */\n      var MSG_EXTERNAL_7977992299945497789$$DIST_FESM2015_INDEX_JS_27 = goog.getMsg(\"Filter\");\n      i18n_26 = MSG_EXTERNAL_7977992299945497789$$DIST_FESM2015_INDEX_JS_27;\n    } else {\n      i18n_26 = $localize(_templateObject12());\n    }\n\n    var i18n_28;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the equal filter operator\n       * @meaning kendo.grid.filterEqOperator\n       */\n      var MSG_EXTERNAL_4328959145426393682$$DIST_FESM2015_INDEX_JS_29 = goog.getMsg(\"Is equal to\");\n      i18n_28 = MSG_EXTERNAL_4328959145426393682$$DIST_FESM2015_INDEX_JS_29;\n    } else {\n      i18n_28 = $localize(_templateObject13());\n    }\n\n    var i18n_30;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the not equal filter operator\n       * @meaning kendo.grid.filterNotEqOperator\n       */\n      var MSG_EXTERNAL_8497658332767349737$$DIST_FESM2015_INDEX_JS_31 = goog.getMsg(\"Is not equal to\");\n      i18n_30 = MSG_EXTERNAL_8497658332767349737$$DIST_FESM2015_INDEX_JS_31;\n    } else {\n      i18n_30 = $localize(_templateObject14());\n    }\n\n    var i18n_32;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is null filter operator\n       * @meaning kendo.grid.filterIsNullOperator\n       */\n      var MSG_EXTERNAL_1298299704757177797$$DIST_FESM2015_INDEX_JS_33 = goog.getMsg(\"Is null\");\n      i18n_32 = MSG_EXTERNAL_1298299704757177797$$DIST_FESM2015_INDEX_JS_33;\n    } else {\n      i18n_32 = $localize(_templateObject15());\n    }\n\n    var i18n_34;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is not null filter operator\n       * @meaning kendo.grid.filterIsNotNullOperator\n       */\n      var MSG_EXTERNAL_8362279767336741540$$DIST_FESM2015_INDEX_JS_35 = goog.getMsg(\"Is not null\");\n      i18n_34 = MSG_EXTERNAL_8362279767336741540$$DIST_FESM2015_INDEX_JS_35;\n    } else {\n      i18n_34 = $localize(_templateObject16());\n    }\n\n    var i18n_36;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is empty filter operator\n       * @meaning kendo.grid.filterIsEmptyOperator\n       */\n      var MSG_EXTERNAL_4762263229995523226$$DIST_FESM2015_INDEX_JS_37 = goog.getMsg(\"Is empty\");\n      i18n_36 = MSG_EXTERNAL_4762263229995523226$$DIST_FESM2015_INDEX_JS_37;\n    } else {\n      i18n_36 = $localize(_templateObject17());\n    }\n\n    var i18n_38;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the is not empty filter operator\n       * @meaning kendo.grid.filterIsNotEmptyOperator\n       */\n      var MSG_EXTERNAL_8245213618709258015$$DIST_FESM2015_INDEX_JS_39 = goog.getMsg(\"Is not empty\");\n      i18n_38 = MSG_EXTERNAL_8245213618709258015$$DIST_FESM2015_INDEX_JS_39;\n    } else {\n      i18n_38 = $localize(_templateObject18());\n    }\n\n    var i18n_40;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the starts with filter operator\n       * @meaning kendo.grid.filterStartsWithOperator\n       */\n      var MSG_EXTERNAL_6087783423599420507$$DIST_FESM2015_INDEX_JS_41 = goog.getMsg(\"Starts with\");\n      i18n_40 = MSG_EXTERNAL_6087783423599420507$$DIST_FESM2015_INDEX_JS_41;\n    } else {\n      i18n_40 = $localize(_templateObject19());\n    }\n\n    var i18n_42;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the contains filter operator\n       * @meaning kendo.grid.filterContainsOperator\n       */\n      var MSG_EXTERNAL_3831180413287131758$$DIST_FESM2015_INDEX_JS_43 = goog.getMsg(\"Contains\");\n      i18n_42 = MSG_EXTERNAL_3831180413287131758$$DIST_FESM2015_INDEX_JS_43;\n    } else {\n      i18n_42 = $localize(_templateObject20());\n    }\n\n    var i18n_44;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the does not contain filter operator\n       * @meaning kendo.grid.filterNotContainsOperator\n       */\n      var MSG_EXTERNAL_7331253838216904826$$DIST_FESM2015_INDEX_JS_45 = goog.getMsg(\"Does not contain\");\n      i18n_44 = MSG_EXTERNAL_7331253838216904826$$DIST_FESM2015_INDEX_JS_45;\n    } else {\n      i18n_44 = $localize(_templateObject21());\n    }\n\n    var i18n_46;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the ends with filter operator\n       * @meaning kendo.grid.filterEndsWithOperator\n       */\n      var MSG_EXTERNAL_3662435311670509156$$DIST_FESM2015_INDEX_JS_47 = goog.getMsg(\"Ends with\");\n      i18n_46 = MSG_EXTERNAL_3662435311670509156$$DIST_FESM2015_INDEX_JS_47;\n    } else {\n      i18n_46 = $localize(_templateObject22());\n    }\n\n    var i18n_48;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the greater than or equal filter operator\n       * @meaning kendo.grid.filterGteOperator\n       */\n      var MSG_EXTERNAL_4542824413455511831$$DIST_FESM2015_INDEX_JS_49 = goog.getMsg(\"Is greater than or equal to\");\n      i18n_48 = MSG_EXTERNAL_4542824413455511831$$DIST_FESM2015_INDEX_JS_49;\n    } else {\n      i18n_48 = $localize(_templateObject23());\n    }\n\n    var i18n_50;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the greater than filter operator\n       * @meaning kendo.grid.filterGtOperator\n       */\n      var MSG_EXTERNAL_1527483349261806183$$DIST_FESM2015_INDEX_JS_51 = goog.getMsg(\"Is greater than\");\n      i18n_50 = MSG_EXTERNAL_1527483349261806183$$DIST_FESM2015_INDEX_JS_51;\n    } else {\n      i18n_50 = $localize(_templateObject24());\n    }\n\n    var i18n_52;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the less than or equal filter operator\n       * @meaning kendo.grid.filterLteOperator\n       */\n      var MSG_EXTERNAL_4840714404733417604$$DIST_FESM2015_INDEX_JS_53 = goog.getMsg(\"Is less than or equal to\");\n      i18n_52 = MSG_EXTERNAL_4840714404733417604$$DIST_FESM2015_INDEX_JS_53;\n    } else {\n      i18n_52 = $localize(_templateObject25());\n    }\n\n    var i18n_54;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the less than filter operator\n       * @meaning kendo.grid.filterLtOperator\n       */\n      var MSG_EXTERNAL_498627126459578706$$DIST_FESM2015_INDEX_JS_55 = goog.getMsg(\"Is less than\");\n      i18n_54 = MSG_EXTERNAL_498627126459578706$$DIST_FESM2015_INDEX_JS_55;\n    } else {\n      i18n_54 = $localize(_templateObject26());\n    }\n\n    var i18n_56;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the IsTrue boolean filter option\n       * @meaning kendo.grid.filterIsTrue\n       */\n      var MSG_EXTERNAL_2361673238316312251$$DIST_FESM2015_INDEX_JS_57 = goog.getMsg(\"Is True\");\n      i18n_56 = MSG_EXTERNAL_2361673238316312251$$DIST_FESM2015_INDEX_JS_57;\n    } else {\n      i18n_56 = $localize(_templateObject27());\n    }\n\n    var i18n_58;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the IsFalse boolean filter option\n       * @meaning kendo.grid.filterIsFalse\n       */\n      var MSG_EXTERNAL_7759366406135608407$$DIST_FESM2015_INDEX_JS_59 = goog.getMsg(\"Is False\");\n      i18n_58 = MSG_EXTERNAL_7759366406135608407$$DIST_FESM2015_INDEX_JS_59;\n    } else {\n      i18n_58 = $localize(_templateObject28());\n    }\n\n    var i18n_60;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the (All) boolean filter option\n       * @meaning kendo.grid.filterBooleanAll\n       */\n      var MSG_EXTERNAL_9215343856736761875$$DIST_FESM2015_INDEX_JS_61 = goog.getMsg(\"(All)\");\n      i18n_60 = MSG_EXTERNAL_9215343856736761875$$DIST_FESM2015_INDEX_JS_61;\n    } else {\n      i18n_60 = $localize(_templateObject29());\n    }\n\n    var i18n_62;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the after or equal date filter operator\n       * @meaning kendo.grid.filterAfterOrEqualOperator\n       */\n      var MSG_EXTERNAL_1964413288176201979$$DIST_FESM2015_INDEX_JS_63 = goog.getMsg(\"Is after or equal to\");\n      i18n_62 = MSG_EXTERNAL_1964413288176201979$$DIST_FESM2015_INDEX_JS_63;\n    } else {\n      i18n_62 = $localize(_templateObject30());\n    }\n\n    var i18n_64;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the after date filter operator\n       * @meaning kendo.grid.filterAfterOperator\n       */\n      var MSG_EXTERNAL_3078502182807244703$$DIST_FESM2015_INDEX_JS_65 = goog.getMsg(\"Is after\");\n      i18n_64 = MSG_EXTERNAL_3078502182807244703$$DIST_FESM2015_INDEX_JS_65;\n    } else {\n      i18n_64 = $localize(_templateObject31());\n    }\n\n    var i18n_66;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the before date filter operator\n       * @meaning kendo.grid.filterBeforeOperator\n       */\n      var MSG_EXTERNAL_3348865631071358219$$DIST_FESM2015_INDEX_JS_67 = goog.getMsg(\"Is before\");\n      i18n_66 = MSG_EXTERNAL_3348865631071358219$$DIST_FESM2015_INDEX_JS_67;\n    } else {\n      i18n_66 = $localize(_templateObject32());\n    }\n\n    var i18n_68;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the before or equal date filter operator\n       * @meaning kendo.grid.filterBeforeOrEqualOperator\n       */\n      var MSG_EXTERNAL_6582064037090631388$$DIST_FESM2015_INDEX_JS_69 = goog.getMsg(\"Is before or equal to\");\n      i18n_68 = MSG_EXTERNAL_6582064037090631388$$DIST_FESM2015_INDEX_JS_69;\n    } else {\n      i18n_68 = $localize(_templateObject33());\n    }\n\n    var i18n_70;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the filter button\n       * @meaning kendo.grid.filterFilterButton\n       */\n      var MSG_EXTERNAL_5185263258022896121$$DIST_FESM2015_INDEX_JS_71 = goog.getMsg(\"Filter\");\n      i18n_70 = MSG_EXTERNAL_5185263258022896121$$DIST_FESM2015_INDEX_JS_71;\n    } else {\n      i18n_70 = $localize(_templateObject34());\n    }\n\n    var i18n_72;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the clear filter button\n       * @meaning kendo.grid.filterClearButton\n       */\n      var MSG_EXTERNAL_3031209415830321799$$DIST_FESM2015_INDEX_JS_73 = goog.getMsg(\"Clear\");\n      i18n_72 = MSG_EXTERNAL_3031209415830321799$$DIST_FESM2015_INDEX_JS_73;\n    } else {\n      i18n_72 = $localize(_templateObject35());\n    }\n\n    var i18n_74;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the And filter logic\n       * @meaning kendo.grid.filterAndLogic\n       */\n      var MSG_EXTERNAL_512662285155477884$$DIST_FESM2015_INDEX_JS_75 = goog.getMsg(\"And\");\n      i18n_74 = MSG_EXTERNAL_512662285155477884$$DIST_FESM2015_INDEX_JS_75;\n    } else {\n      i18n_74 = $localize(_templateObject36());\n    }\n\n    var i18n_76;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the Or filter logic\n       * @meaning kendo.grid.filterOrLogic\n       */\n      var MSG_EXTERNAL_1964926727342405367$$DIST_FESM2015_INDEX_JS_77 = goog.getMsg(\"Or\");\n      i18n_76 = MSG_EXTERNAL_1964926727342405367$$DIST_FESM2015_INDEX_JS_77;\n    } else {\n      i18n_76 = $localize(_templateObject37());\n    }\n\n    var i18n_78;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The loading text\n       * @meaning kendo.grid.loading\n       */\n      var MSG_EXTERNAL_5425510787229531767$$DIST_FESM2015_INDEX_JS_79 = goog.getMsg(\"Loading\");\n      i18n_78 = MSG_EXTERNAL_5425510787229531767$$DIST_FESM2015_INDEX_JS_79;\n    } else {\n      i18n_78 = $localize(_templateObject38());\n    }\n\n    var i18n_80;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the column menu icon\n       * @meaning kendo.grid.columnMenu\n       */\n      var MSG_EXTERNAL_2820335494528144626$$DIST_FESM2015_INDEX_JS_81 = goog.getMsg(\"Column Menu\");\n      i18n_80 = MSG_EXTERNAL_2820335494528144626$$DIST_FESM2015_INDEX_JS_81;\n    } else {\n      i18n_80 = $localize(_templateObject39());\n    }\n\n    var i18n_82;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the columns item\n       * @meaning kendo.grid.columns\n       */\n      var MSG_EXTERNAL_5332162737795508854$$DIST_FESM2015_INDEX_JS_83 = goog.getMsg(\"Columns\");\n      i18n_82 = MSG_EXTERNAL_5332162737795508854$$DIST_FESM2015_INDEX_JS_83;\n    } else {\n      i18n_82 = $localize(_templateObject40());\n    }\n\n    var i18n_84;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the lock item\n       * @meaning kendo.grid.lock\n       */\n      var MSG_EXTERNAL_5849203148124173556$$DIST_FESM2015_INDEX_JS_85 = goog.getMsg(\"Lock\");\n      i18n_84 = MSG_EXTERNAL_5849203148124173556$$DIST_FESM2015_INDEX_JS_85;\n    } else {\n      i18n_84 = $localize(_templateObject41());\n    }\n\n    var i18n_86;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the unlock item\n       * @meaning kendo.grid.unlock\n       */\n      var MSG_EXTERNAL_6968586378603932789$$DIST_FESM2015_INDEX_JS_87 = goog.getMsg(\"Unlock\");\n      i18n_86 = MSG_EXTERNAL_6968586378603932789$$DIST_FESM2015_INDEX_JS_87;\n    } else {\n      i18n_86 = $localize(_templateObject42());\n    }\n\n    var i18n_88;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The label of the sort icon\n       * @meaning kendo.grid.sortable\n       */\n      var MSG_EXTERNAL_3824304972336788145$$DIST_FESM2015_INDEX_JS_89 = goog.getMsg(\"Sortable\");\n      i18n_88 = MSG_EXTERNAL_3824304972336788145$$DIST_FESM2015_INDEX_JS_89;\n    } else {\n      i18n_88 = $localize(_templateObject43());\n    }\n\n    var i18n_90;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the sort ascending item\n       * @meaning kendo.grid.sortAscending\n       */\n      var MSG_EXTERNAL_6297762560864270240$$DIST_FESM2015_INDEX_JS_91 = goog.getMsg(\"Sort Ascending\");\n      i18n_90 = MSG_EXTERNAL_6297762560864270240$$DIST_FESM2015_INDEX_JS_91;\n    } else {\n      i18n_90 = $localize(_templateObject44());\n    }\n\n    var i18n_92;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu for the sort descending item\n       * @meaning kendo.grid.sortDescending\n       */\n      var MSG_EXTERNAL_5605073536641230977$$DIST_FESM2015_INDEX_JS_93 = goog.getMsg(\"Sort Descending\");\n      i18n_92 = MSG_EXTERNAL_5605073536641230977$$DIST_FESM2015_INDEX_JS_93;\n    } else {\n      i18n_92 = $localize(_templateObject45());\n    }\n\n    var i18n_94;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is sorted ascending\n       * @meaning kendo.grid.sortedAscending\n       */\n      var MSG_EXTERNAL_6275944032047713540$$DIST_FESM2015_INDEX_JS_95 = goog.getMsg(\"Sorted Ascending\");\n      i18n_94 = MSG_EXTERNAL_6275944032047713540$$DIST_FESM2015_INDEX_JS_95;\n    } else {\n      i18n_94 = $localize(_templateObject46());\n    }\n\n    var i18n_96;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is sorted descending\n       * @meaning kendo.grid.sortedDescending\n       */\n      var MSG_EXTERNAL_8155280769473236383$$DIST_FESM2015_INDEX_JS_97 = goog.getMsg(\"Sorted Descending\");\n      i18n_96 = MSG_EXTERNAL_8155280769473236383$$DIST_FESM2015_INDEX_JS_97;\n    } else {\n      i18n_96 = $localize(_templateObject47());\n    }\n\n    var i18n_98;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The status announcement when a column is no longer sorted\n       * @meaning kendo.grid.sortedDefault\n       */\n      var MSG_EXTERNAL_5229177293891232538$$DIST_FESM2015_INDEX_JS_99 = goog.getMsg(\"Not Sorted\");\n      i18n_98 = MSG_EXTERNAL_5229177293891232538$$DIST_FESM2015_INDEX_JS_99;\n    } else {\n      i18n_98 = $localize(_templateObject48());\n    }\n\n    var i18n_100;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu or column chooser for the columns apply button\n       * @meaning kendo.grid.columnsApply\n       */\n      var MSG_EXTERNAL_34213208292862969$$DIST_FESM2015_INDEX_JS_101 = goog.getMsg(\"Apply\");\n      i18n_100 = MSG_EXTERNAL_34213208292862969$$DIST_FESM2015_INDEX_JS_101;\n    } else {\n      i18n_100 = $localize(_templateObject49());\n    }\n\n    var i18n_102;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text shown in the column menu or column chooser for the columns reset button\n       * @meaning kendo.grid.columnsReset\n       */\n      var MSG_EXTERNAL_4465838259914958827$$DIST_FESM2015_INDEX_JS_103 = goog.getMsg(\"Reset\");\n      i18n_102 = MSG_EXTERNAL_4465838259914958827$$DIST_FESM2015_INDEX_JS_103;\n    } else {\n      i18n_102 = $localize(_templateObject50());\n    }\n\n    var i18n_104;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the expand icon of detail rows.\n       * @meaning kendo.grid.detailExpand\n       */\n      var MSG_EXTERNAL_6952757249912226136$$DIST_FESM2015_INDEX_JS_105 = goog.getMsg(\"Expand Details\");\n      i18n_104 = MSG_EXTERNAL_6952757249912226136$$DIST_FESM2015_INDEX_JS_105;\n    } else {\n      i18n_104 = $localize(_templateObject51());\n    }\n\n    var i18n_106;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the collapse icon of detail rows.\n       * @meaning kendo.grid.detailCollapse\n       */\n      var MSG_EXTERNAL_6065477639036399169$$DIST_FESM2015_INDEX_JS_107 = goog.getMsg(\"Collapse Details\");\n      i18n_106 = MSG_EXTERNAL_6065477639036399169$$DIST_FESM2015_INDEX_JS_107;\n    } else {\n      i18n_106 = $localize(_templateObject52());\n    }\n\n    var i18n_108;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The text of the Today button of the Date filter.\n       * @meaning kendo.grid.filterDateToday\n       */\n      var MSG_EXTERNAL_1656723147090613075$$DIST_FESM2015_INDEX_JS_109 = goog.getMsg(\"TODAY\");\n      i18n_108 = MSG_EXTERNAL_1656723147090613075$$DIST_FESM2015_INDEX_JS_109;\n    } else {\n      i18n_108 = $localize(_templateObject53());\n    }\n\n    var i18n_110;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Toggle button of the Date filter.\n       * @meaning kendo.grid.filterDateToggle\n       */\n      var MSG_EXTERNAL_15438307630389352$$DIST_FESM2015_INDEX_JS_111 = goog.getMsg(\"Toggle Calendar\");\n      i18n_110 = MSG_EXTERNAL_15438307630389352$$DIST_FESM2015_INDEX_JS_111;\n    } else {\n      i18n_110 = $localize(_templateObject54());\n    }\n\n    var i18n_112;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Decrement button of the Numeric filter.\n       * @meaning kendo.grid.filterNumericDecrement\n       */\n      var MSG_EXTERNAL_534533728304192410$$DIST_FESM2015_INDEX_JS_113 = goog.getMsg(\"Decrement\");\n      i18n_112 = MSG_EXTERNAL_534533728304192410$$DIST_FESM2015_INDEX_JS_113;\n    } else {\n      i18n_112 = $localize(_templateObject55());\n    }\n\n    var i18n_114;\n\n    if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n      /**\n       * @desc The title of the Increment button of the Numeric filter.\n       * @meaning kendo.grid.filterNumericIncrement\n       */\n      var MSG_EXTERNAL_5462143714591662391$$DIST_FESM2015_INDEX_JS_115 = goog.getMsg(\"Increment\");\n      i18n_114 = MSG_EXTERNAL_5462143714591662391$$DIST_FESM2015_INDEX_JS_115;\n    } else {\n      i18n_114 = $localize(_templateObject56());\n    }\n\n    return [[\"kendoGridLocalizedMessages\", \"\", 6, \"groupPanelEmpty\", \"noRecords\", \"pagerFirstPage\", \"pagerPreviousPage\", \"pagerNextPage\", \"pagerLastPage\", \"pagerPage\", \"pagerOf\", \"pagerItems\", \"pagerPageNumberInputTitle\", \"pagerItemsPerPage\", \"filter\", \"filterEqOperator\", \"filterNotEqOperator\", \"filterIsNullOperator\", \"filterIsNotNullOperator\", \"filterIsEmptyOperator\", \"filterIsNotEmptyOperator\", \"filterStartsWithOperator\", \"filterContainsOperator\", \"filterNotContainsOperator\", \"filterEndsWithOperator\", \"filterGteOperator\", \"filterGtOperator\", \"filterLteOperator\", \"filterLtOperator\", \"filterIsTrue\", \"filterIsFalse\", \"filterBooleanAll\", \"filterAfterOrEqualOperator\", \"filterAfterOperator\", \"filterBeforeOperator\", \"filterBeforeOrEqualOperator\", \"filterFilterButton\", \"filterClearButton\", \"filterAndLogic\", \"filterOrLogic\", \"loading\", \"columnMenu\", \"columns\", \"lock\", \"unlock\", \"sortable\", \"sortAscending\", \"sortDescending\", \"sortedAscending\", \"sortedDescending\", \"sortedDefault\", \"columnsApply\", \"columnsReset\", \"detailExpand\", \"detailCollapse\", \"filterDateToday\", \"filterDateToggle\", \"filterNumericDecrement\", \"filterNumericIncrement\"], [\"groupPanelEmpty\", i18n_4, \"noRecords\", i18n_6, \"pagerFirstPage\", i18n_8, \"pagerPreviousPage\", i18n_10, \"pagerNextPage\", i18n_12, \"pagerLastPage\", i18n_14, \"pagerPage\", i18n_16, \"pagerOf\", i18n_18, \"pagerItems\", i18n_20, \"pagerPageNumberInputTitle\", i18n_22, \"pagerItemsPerPage\", i18n_24, \"filter\", i18n_26, \"filterEqOperator\", i18n_28, \"filterNotEqOperator\", i18n_30, \"filterIsNullOperator\", i18n_32, \"filterIsNotNullOperator\", i18n_34, \"filterIsEmptyOperator\", i18n_36, \"filterIsNotEmptyOperator\", i18n_38, \"filterStartsWithOperator\", i18n_40, \"filterContainsOperator\", i18n_42, \"filterNotContainsOperator\", i18n_44, \"filterEndsWithOperator\", i18n_46, \"filterGteOperator\", i18n_48, \"filterGtOperator\", i18n_50, \"filterLteOperator\", i18n_52, \"filterLtOperator\", i18n_54, \"filterIsTrue\", i18n_56, \"filterIsFalse\", i18n_58, \"filterBooleanAll\", i18n_60, \"filterAfterOrEqualOperator\", i18n_62, \"filterAfterOperator\", i18n_64, \"filterBeforeOperator\", i18n_66, \"filterBeforeOrEqualOperator\", i18n_68, \"filterFilterButton\", i18n_70, \"filterClearButton\", i18n_72, \"filterAndLogic\", i18n_74, \"filterOrLogic\", i18n_76, \"loading\", i18n_78, \"columnMenu\", i18n_80, \"columns\", i18n_82, \"lock\", i18n_84, \"unlock\", i18n_86, \"sortable\", i18n_88, \"sortAscending\", i18n_90, \"sortDescending\", i18n_92, \"sortedAscending\", i18n_94, \"sortedDescending\", i18n_96, \"sortedDefault\", i18n_98, \"columnsApply\", i18n_100, \"columnsReset\", i18n_102, \"detailExpand\", i18n_104, \"detailCollapse\", i18n_106, \"filterDateToday\", i18n_108, \"filterDateToggle\", i18n_110, \"filterNumericDecrement\", i18n_112, \"filterNumericIncrement\", i18n_114], [\"position\", \"top\", 4, \"ngIf\"], [3, \"text\", \"groups\", \"change\", 4, \"ngIf\"], [\"role\", \"grid\", 1, \"k-grid-aria-root\"], [\"ariaRoot\", \"\"], [3, \"ngIf\"], [3, \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\", 4, \"ngIf\"], [\"position\", \"bottom\", 4, \"ngIf\"], [\"position\", \"top\"], [3, \"text\", \"groups\", \"change\"], [\"class\", \"k-grid-header\", \"role\", \"presentation\", 3, \"padding\", 4, \"ngIf\"], [\"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"data\", \"rowHeight\", \"detailRowHeight\", \"total\", \"take\", \"groups\", \"groupable\", \"skip\", \"trackBy\", \"columns\", \"selectable\", \"filterable\", \"detailTemplate\", \"noRecordsTemplate\", \"rowClass\", \"loading\", \"isVirtual\", \"virtualColumns\", \"enableDrag\", \"pageChange\", \"scrollBottom\", \"contentScroll\"], [\"class\", \"k-grid-footer\", 3, \"padding\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header\"], [\"role\", \"presentation\", \"class\", \"k-grid-header-locked\", 3, \"width\", 4, \"ngIf\"], [\"role\", \"presentation\", \"data-scrollable\", \"\", 1, \"k-grid-header-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"header\", \"\"], [\"role\", \"presentation\", 3, \"virtualColumns\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridHeader\", \"\", \"role\", \"presentation\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"groups\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"detailTemplate\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-header-locked\"], [\"lockedHeader\", \"\"], [\"role\", \"presentation\", 3, \"locked\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"sort\", \"groups\", \"filter\", \"filterable\", \"groupable\", \"reorderable\", \"sortable\", \"columnMenu\", \"columnMenuTemplate\", \"totalColumnsCount\", \"detailTemplate\"], [\"role\", \"presentation\", 1, \"k-width-container\"], [1, \"k-grid-footer\"], [\"class\", \"k-grid-footer-locked\", 3, \"width\", 4, \"ngIf\"], [\"data-scrollable\", \"\", 1, \"k-grid-footer-wrap\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"footer\", \"\"], [\"kendoGridColGroup\", \"\", 3, \"columns\", \"groups\", \"detailTemplate\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"groups\", \"columns\", \"lockedColumnsCount\", \"detailTemplate\"], [1, \"k-grid-footer-locked\"], [3, \"locked\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"groups\", \"columns\", \"detailTemplate\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\", 4, \"ngIf\"], [\"kendoGridTableBody\", \"\", \"kendoDraggable\", \"\", \"kendoGridSelectionMarquee\", \"\", 3, \"groups\", \"data\", \"skip\", \"columns\", \"selectable\", \"filterable\", \"noRecordsTemplate\", \"detailTemplate\", \"showGroupFooters\", \"trackBy\", \"rowClass\", \"enableDrag\"], [\"kendoGridFooter\", \"\", 3, \"scrollable\", \"groups\", \"columns\", \"detailTemplate\", 4, \"ngIf\"], [\"kendoGridLoading\", \"\", 4, \"ngIf\"], [\"kendoGridHeader\", \"\", 3, \"resizable\", \"scrollable\", \"columns\", \"totalColumnLevels\", \"groups\", \"groupable\", \"reorderable\", \"sort\", \"sortable\", \"filter\", \"filterable\", \"columnMenu\", \"columnMenuTemplate\", \"detailTemplate\"], [\"kendoGridLoading\", \"\"], [3, \"template\", \"pageSize\", \"total\", \"skip\", \"options\", \"pageChange\"], [\"position\", \"bottom\"]];\n  },\n  template: function GridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵi18nAttributes(1, 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵtemplate(2, GridComponent_kendo_grid_toolbar_2_Template, 1, 0, \"kendo-grid-toolbar\", 2);\n      ɵngcc0.ɵɵtemplate(3, GridComponent_kendo_grid_group_panel_3_Template, 1, 2, \"kendo-grid-group-panel\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4, 5);\n      ɵngcc0.ɵɵtemplate(6, GridComponent_ng_template_6_Template, 3, 21, \"ng-template\", 6);\n      ɵngcc0.ɵɵtemplate(7, GridComponent_ng_template_7_Template, 6, 20, \"ng-template\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(8, GridComponent_kendo_pager_8_Template, 1, 5, \"kendo-pager\", 7);\n      ɵngcc0.ɵɵtemplate(9, GridComponent_kendo_grid_toolbar_9_Template, 1, 0, \"kendo-grid-toolbar\", 8);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showTopToolbar);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showGroupPanel);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵattribute(\"aria-rowcount\", ctx.ariaRowCount)(\"aria-colcount\", ctx.ariaColCount);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isScrollable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isScrollable);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showPager);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showBottomToolbar);\n    }\n  },\n  directives: function directives() {\n    return [LocalizedMessagesDirective, ɵngcc1.NgIf, ToolbarComponent, GroupPanelComponent, ListComponent, ɵngcc2.DraggableDirective, GridMarqueeDirective, ResizableContainerDirective, TableDirective, ColGroupComponent, HeaderComponent, FooterComponent, TableBodyComponent, LoadingComponent, PagerComponent];\n  },\n  styles: [\"   .k-grid .k-grid-aria-root {\\n            display: flex;\\n            flex-direction: column;\\n            flex: 1 1 auto;\\n            overflow: hidden;\\n        }\\n\\n        .k-grid .k-filter-row td {\\n            white-space: nowrap;\\n        }\"],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nGridComponent.ctorParameters = function () {\n  return [{\n    type: BrowserSupportService\n  }, {\n    type: SelectionService\n  }, {\n    type: CellSelectionService\n  }, {\n    type: ElementRef\n  }, {\n    type: GroupInfoService\n  }, {\n    type: GroupsService\n  }, {\n    type: ChangeNotificationService\n  }, {\n    type: DetailsService\n  }, {\n    type: EditService\n  }, {\n    type: FilterService\n  }, {\n    type: PDFService\n  }, {\n    type: ResponsiveService\n  }, {\n    type: Renderer2\n  }, {\n    type: ExcelService\n  }, {\n    type: NgZone\n  }, {\n    type: ScrollSyncService\n  }, {\n    type: DomEventsService\n  }, {\n    type: ColumnResizingService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ColumnReorderService\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: NavigationService\n  }, {\n    type: SortService\n  }, {\n    type: ScrollRequestService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nGridComponent.propDecorators = {\n  data: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  height: [{\n    type: Input\n  }],\n  rowHeight: [{\n    type: Input\n  }],\n  detailRowHeight: [{\n    type: Input\n  }],\n  skip: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  selectable: [{\n    type: Input\n  }],\n  sort: [{\n    type: Input\n  }],\n  trackBy: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  group: [{\n    type: Input\n  }],\n  virtualColumns: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  sortable: [{\n    type: Input\n  }],\n  pageable: [{\n    type: Input\n  }],\n  groupable: [{\n    type: Input\n  }],\n  navigable: [{\n    type: Input\n  }],\n  navigatable: [{\n    type: Input\n  }],\n  autoSize: [{\n    type: Input\n  }],\n  rowClass: [{\n    type: Input\n  }],\n  rowSelected: [{\n    type: Input\n  }],\n  cellSelected: [{\n    type: Input\n  }],\n  resizable: [{\n    type: Input\n  }],\n  reorderable: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  columnMenu: [{\n    type: Input\n  }],\n  hideHeader: [{\n    type: Input\n  }],\n  filterChange: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  groupChange: [{\n    type: Output\n  }],\n  sortChange: [{\n    type: Output\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  dataStateChange: [{\n    type: Output\n  }],\n  groupExpand: [{\n    type: Output\n  }],\n  groupCollapse: [{\n    type: Output\n  }],\n  detailExpand: [{\n    type: Output\n  }],\n  detailCollapse: [{\n    type: Output\n  }],\n  edit: [{\n    type: Output\n  }],\n  cancel: [{\n    type: Output\n  }],\n  save: [{\n    type: Output\n  }],\n  remove: [{\n    type: Output\n  }],\n  add: [{\n    type: Output\n  }],\n  cellClose: [{\n    type: Output\n  }],\n  cellClick: [{\n    type: Output\n  }],\n  pdfExport: [{\n    type: Output\n  }],\n  excelExport: [{\n    type: Output\n  }],\n  columnResize: [{\n    type: Output\n  }],\n  columnReorder: [{\n    type: Output\n  }],\n  columnVisibilityChange: [{\n    type: Output\n  }],\n  columnLockedChange: [{\n    type: Output\n  }],\n  scrollBottom: [{\n    type: Output\n  }],\n  contentScroll: [{\n    type: Output\n  }],\n  columns: [{\n    type: ContentChildren,\n    args: [ColumnBase$1]\n  }],\n  dir: [{\n    type: HostBinding,\n    args: ['attr.dir']\n  }],\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }, {\n    type: HostBinding,\n    args: ['class.k-grid']\n  }],\n  lockedClasses: [{\n    type: HostBinding,\n    args: ['class.k-grid-lockedcolumns']\n  }],\n  virtualClasses: [{\n    type: HostBinding,\n    args: ['class.k-grid-virtual']\n  }],\n  noScrollbarClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-no-scrollbar']\n  }],\n  detailTemplateChildren: [{\n    type: ContentChildren,\n    args: [DetailTemplateDirective]\n  }],\n  noRecordsTemplateChildren: [{\n    type: ContentChildren,\n    args: [NoRecordsTemplateDirective]\n  }],\n  pagerTemplateChildren: [{\n    type: ContentChildren,\n    args: [PagerTemplateDirective]\n  }],\n  toolbarTemplateChildren: [{\n    type: ContentChildren,\n    args: [ToolbarTemplateDirective]\n  }],\n  columnMenuTemplates: [{\n    type: ContentChildren,\n    args: [ColumnMenuTemplateDirective]\n  }],\n  lockedHeader: [{\n    type: ViewChild,\n    args: [\"lockedHeader\"]\n  }],\n  header: [{\n    type: ViewChild,\n    args: [\"header\"]\n  }],\n  footer: [{\n    type: ViewChildren,\n    args: [\"footer\"]\n  }],\n  ariaRoot: [{\n    type: ViewChild,\n    args: ['ariaRoot']\n  }],\n  isDetailExpanded: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GridComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'kendoGrid',\n      providers: [BrowserSupportService, LocalizationService, ColumnInfoService, SelectionService, CellSelectionService, DetailsService, GroupsService, GroupInfoService, ChangeNotificationService, EditService, PDFService, SuspendService, {\n        provide: CELL_CONTEXT,\n        useValue: ɵ4$2\n      }, {\n        provide: L10N_PREFIX,\n        useValue: 'kendo.grid'\n      }, FilterService, ResponsiveService, PagerContextService, ExcelService, ScrollSyncService, ResizeService, LocalDataChangesService, DomEventsService, ColumnResizingService, SinglePopupService, DragAndDropService, DragHintService, DropCueService, ColumnReorderService, NavigationService, FocusRoot, IdService, ScrollRequestService, SortService],\n      selector: 'kendo-grid',\n      styles: [// Styles for backwards compatibility with kendo-theme-default@v2.46.0 and earlier.\n      \"   .k-grid .k-grid-aria-root {\\n            display: flex;\\n            flex-direction: column;\\n            flex: 1 1 auto;\\n            overflow: hidden;\\n        }\\n\\n        .k-grid .k-filter-row td {\\n            white-space: nowrap;\\n        }\"],\n      template: \"\\n        <ng-container kendoGridLocalizedMessages\\n            i18n-groupPanelEmpty=\\\"kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\\\"\\n            groupPanelEmpty=\\\"Drag a column header and drop it here to group by that column\\\"\\n\\n            i18n-noRecords=\\\"kendo.grid.noRecords|The label visible in the Grid when there are no records\\\"\\n            noRecords=\\\"No records available.\\\"\\n\\n            i18n-pagerFirstPage=\\\"kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\\\"\\n            pagerFirstPage=\\\"Go to the first page\\\"\\n\\n            i18n-pagerPreviousPage=\\\"kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\\\"\\n            pagerPreviousPage=\\\"Go to the previous page\\\"\\n\\n            i18n-pagerNextPage=\\\"kendo.grid.pagerNextPage|The label for the next page button in Grid pager\\\"\\n            pagerNextPage=\\\"Go to the next page\\\"\\n\\n            i18n-pagerLastPage=\\\"kendo.grid.pagerLastPage|The label for the last page button in Grid pager\\\"\\n            pagerLastPage=\\\"Go to the last page\\\"\\n\\n            i18n-pagerPage=\\\"kendo.grid.pagerPage|The label before the current page number in the Grid pager\\\"\\n            pagerPage=\\\"Page\\\"\\n\\n            i18n-pagerOf=\\\"kendo.grid.pagerOf|The label before the total pages number in the Grid pager\\\"\\n            pagerOf=\\\"of\\\"\\n\\n            i18n-pagerItems=\\\"kendo.grid.pagerItems|The label after the total pages number in the Grid pager\\\"\\n            pagerItems=\\\"items\\\"\\n\\n            i18n-pagerPageNumberInputTitle=\\\"kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\\\"\\n            pagerPageNumberInputTitle=\\\"Page Number\\\"\\n\\n            i18n-pagerItemsPerPage=\\\"kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\\\"\\n            pagerItemsPerPage=\\\"items per page\\\"\\n\\n            i18n-filter=\\\"kendo.grid.filter|The label of the filter cell or icon\\\"\\n            filter=\\\"Filter\\\"\\n\\n            i18n-filterEqOperator=\\\"kendo.grid.filterEqOperator|The text of the equal filter operator\\\"\\n            filterEqOperator=\\\"Is equal to\\\"\\n\\n            i18n-filterNotEqOperator=\\\"kendo.grid.filterNotEqOperator|The text of the not equal filter operator\\\"\\n            filterNotEqOperator=\\\"Is not equal to\\\"\\n\\n            i18n-filterIsNullOperator=\\\"kendo.grid.filterIsNullOperator|The text of the is null filter operator\\\"\\n            filterIsNullOperator=\\\"Is null\\\"\\n\\n            i18n-filterIsNotNullOperator=\\\"kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\\\"\\n            filterIsNotNullOperator=\\\"Is not null\\\"\\n\\n            i18n-filterIsEmptyOperator=\\\"kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\\\"\\n            filterIsEmptyOperator=\\\"Is empty\\\"\\n\\n            i18n-filterIsNotEmptyOperator=\\\"kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\\\"\\n            filterIsNotEmptyOperator=\\\"Is not empty\\\"\\n\\n            i18n-filterStartsWithOperator=\\\"kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\\\"\\n            filterStartsWithOperator=\\\"Starts with\\\"\\n\\n            i18n-filterContainsOperator=\\\"kendo.grid.filterContainsOperator|The text of the contains filter operator\\\"\\n            filterContainsOperator=\\\"Contains\\\"\\n\\n            i18n-filterNotContainsOperator=\\\"kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\\\"\\n            filterNotContainsOperator=\\\"Does not contain\\\"\\n\\n            i18n-filterEndsWithOperator=\\\"kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\\\"\\n            filterEndsWithOperator=\\\"Ends with\\\"\\n\\n            i18n-filterGteOperator=\\\"kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\\\"\\n            filterGteOperator=\\\"Is greater than or equal to\\\"\\n\\n            i18n-filterGtOperator=\\\"kendo.grid.filterGtOperator|The text of the greater than filter operator\\\"\\n            filterGtOperator=\\\"Is greater than\\\"\\n\\n            i18n-filterLteOperator=\\\"kendo.grid.filterLteOperator|The text of the less than or equal filter operator\\\"\\n            filterLteOperator=\\\"Is less than or equal to\\\"\\n\\n            i18n-filterLtOperator=\\\"kendo.grid.filterLtOperator|The text of the less than filter operator\\\"\\n            filterLtOperator=\\\"Is less than\\\"\\n\\n            i18n-filterIsTrue=\\\"kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\\\"\\n            filterIsTrue=\\\"Is True\\\"\\n\\n            i18n-filterIsFalse=\\\"kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\\\"\\n            filterIsFalse=\\\"Is False\\\"\\n\\n            i18n-filterBooleanAll=\\\"kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\\\"\\n            filterBooleanAll=\\\"(All)\\\"\\n\\n            i18n-filterAfterOrEqualOperator=\\\"kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\\\"\\n            filterAfterOrEqualOperator=\\\"Is after or equal to\\\"\\n\\n            i18n-filterAfterOperator=\\\"kendo.grid.filterAfterOperator|The text of the after date filter operator\\\"\\n            filterAfterOperator=\\\"Is after\\\"\\n\\n            i18n-filterBeforeOperator=\\\"kendo.grid.filterBeforeOperator|The text of the before date filter operator\\\"\\n            filterBeforeOperator=\\\"Is before\\\"\\n\\n            i18n-filterBeforeOrEqualOperator=\\\"kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\\\"\\n            filterBeforeOrEqualOperator=\\\"Is before or equal to\\\"\\n\\n            i18n-filterFilterButton=\\\"kendo.grid.filterFilterButton|The text of the filter button\\\"\\n            filterFilterButton=\\\"Filter\\\"\\n\\n            i18n-filterClearButton=\\\"kendo.grid.filterClearButton|The text of the clear filter button\\\"\\n            filterClearButton=\\\"Clear\\\"\\n\\n            i18n-filterAndLogic=\\\"kendo.grid.filterAndLogic|The text of the And filter logic\\\"\\n            filterAndLogic=\\\"And\\\"\\n\\n            i18n-filterOrLogic=\\\"kendo.grid.filterOrLogic|The text of the Or filter logic\\\"\\n            filterOrLogic=\\\"Or\\\"\\n\\n            i18n-loading=\\\"kendo.grid.loading|The loading text\\\"\\n            loading=\\\"Loading\\\"\\n\\n            i18n-columnMenu=\\\"kendo.grid.columnMenu|The title of the column menu icon\\\"\\n            columnMenu=\\\"Column Menu\\\"\\n\\n            i18n-columns=\\\"kendo.grid.columns|The text shown in the column menu for the columns item\\\"\\n            columns=\\\"Columns\\\"\\n\\n            i18n-lock=\\\"kendo.grid.lock|The text shown in the column menu for the lock item\\\"\\n            lock=\\\"Lock\\\"\\n\\n            i18n-unlock=\\\"kendo.grid.unlock|The text shown in the column menu for the unlock item\\\"\\n            unlock=\\\"Unlock\\\"\\n\\n            i18n-sortable=\\\"kendo.grid.sortable|The label of the sort icon\\\"\\n            sortable=\\\"Sortable\\\"\\n\\n            i18n-sortAscending=\\\"kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\\\"\\n            sortAscending=\\\"Sort Ascending\\\"\\n\\n            i18n-sortDescending=\\\"kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\\\"\\n            sortDescending=\\\"Sort Descending\\\"\\n\\n            i18n-sortedAscending=\\\"kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\\\"\\n            sortedAscending=\\\"Sorted Ascending\\\"\\n\\n            i18n-sortedDescending=\\\"kendo.grid.sortedDescending|The status announcement when a column is sorted descending\\\"\\n            sortedDescending=\\\"Sorted Descending\\\"\\n\\n            i18n-sortedDefault=\\\"kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\\\"\\n            sortedDefault=\\\"Not Sorted\\\"\\n\\n            i18n-columnsApply=\\\"kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\\\"\\n            columnsApply=\\\"Apply\\\"\\n\\n            i18n-columnsReset=\\\"kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\\\"\\n            columnsReset=\\\"Reset\\\"\\n\\n            i18n-detailExpand=\\\"kendo.grid.detailExpand|The title of the expand icon of detail rows.\\\"\\n            detailExpand=\\\"Expand Details\\\"\\n\\n            i18n-detailCollapse=\\\"kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\\\"\\n            detailCollapse=\\\"Collapse Details\\\"\\n\\n            i18n-filterDateToday=\\\"kendo.grid.filterDateToday|The text of the Today button of the Date filter.\\\"\\n            filterDateToday=\\\"TODAY\\\"\\n\\n            i18n-filterDateToggle=\\\"kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\\\"\\n            filterDateToggle=\\\"Toggle Calendar\\\"\\n\\n            i18n-filterNumericDecrement=\\\"kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\\\"\\n            filterNumericDecrement=\\\"Decrement\\\"\\n\\n            i18n-filterNumericIncrement=\\\"kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\\\"\\n            filterNumericIncrement=\\\"Increment\\\"\\n        >\\n        </ng-container>\\n        <kendo-grid-toolbar *ngIf=\\\"showTopToolbar\\\" position=\\\"top\\\"></kendo-grid-toolbar>\\n        <kendo-grid-group-panel\\n            *ngIf=\\\"showGroupPanel\\\"\\n            [text]=\\\"groupableEmptyText\\\"\\n            [groups]=\\\"group\\\"\\n            (change)=\\\"groupChange.emit($event)\\\">\\n        </kendo-grid-group-panel>\\n        <div #ariaRoot\\n            class=\\\"k-grid-aria-root\\\"\\n            role=\\\"grid\\\"\\n            [attr.aria-rowcount]=\\\"ariaRowCount\\\"\\n            [attr.aria-colcount]=\\\"ariaColCount\\\">\\n        <ng-template [ngIf]=\\\"isScrollable\\\">\\n            <div *ngIf=\\\"!hideHeader\\\"\\n                class=\\\"k-grid-header\\\"\\n                role=\\\"presentation\\\"\\n                [style.padding]=\\\"headerPadding\\\">\\n                <div *ngIf=\\\"isLocked\\\"\\n                     #lockedHeader\\n                     role=\\\"presentation\\\"\\n                     class=\\\"k-grid-header-locked\\\"\\n                     [style.width.px]=\\\"lockedWidth\\\">\\n                    <table [locked]=\\\"true\\\" role=\\\"presentation\\\" [style.width.px]=\\\"lockedWidth\\\">\\n                        <colgroup kendoGridColGroup\\n                            role=\\\"presentation\\\"\\n                            [columns]=\\\"lockedLeafColumns\\\"\\n                            [groups]=\\\"group\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </colgroup>\\n                        <thead kendoGridHeader\\n                            [resizable]=\\\"resizable\\\"\\n                            [scrollable]=\\\"true\\\"\\n                            [columns]=\\\"lockedColumns\\\"\\n                            [totalColumnLevels]=\\\"totalColumnLevels\\\"\\n                            [sort]=\\\"sort\\\"\\n                            [groups]=\\\"group\\\"\\n                            [filter]=\\\"filter\\\"\\n                            [filterable]=\\\"filterable\\\"\\n                            [groupable]=\\\"showGroupPanel\\\"\\n                            [reorderable]=\\\"reorderable\\\"\\n                            [sortable]=\\\"sortable\\\"\\n                            [columnMenu]=\\\"columnMenuOptions\\\"\\n                            [columnMenuTemplate]=\\\"columnMenuTemplate\\\"\\n                            [totalColumnsCount]=\\\"leafColumns.length\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </thead>\\n                    </table>\\n                </div><div #header class=\\\"k-grid-header-wrap\\\" role=\\\"presentation\\\" data-scrollable\\n                    [kendoGridResizableContainer]=\\\"lockedLeafColumns.length\\\"\\n                    [lockedWidth]=\\\"lockedWidth + scrollbarWidth + 2\\\">\\n                    <table role=\\\"presentation\\\" [style.width.px]=\\\"nonLockedWidth\\\" [virtualColumns]=\\\"virtualColumns\\\">\\n                        <colgroup kendoGridColGroup\\n                            role=\\\"presentation\\\"\\n                            [columns]=\\\"headerLeafColumns\\\"\\n                            [groups]=\\\"isLocked ? [] : group\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </colgroup>\\n                        <thead kendoGridHeader\\n                            [resizable]=\\\"resizable\\\"\\n                            role=\\\"presentation\\\"\\n                            [scrollable]=\\\"true\\\"\\n                            [columns]=\\\"headerColumns\\\"\\n                            [totalColumnLevels]=\\\"totalColumnLevels\\\"\\n                            [sort]=\\\"sort\\\"\\n                            [filter]=\\\"filter\\\"\\n                            [filterable]=\\\"filterable\\\"\\n                            [groupable]=\\\"showGroupPanel\\\"\\n                            [reorderable]=\\\"reorderable\\\"\\n                            [groups]=\\\"isLocked ? [] : group\\\"\\n                            [sortable]=\\\"sortable\\\"\\n                            [columnMenu]=\\\"columnMenuOptions\\\"\\n                            [columnMenuTemplate]=\\\"columnMenuTemplate\\\"\\n                            [lockedColumnsCount]=\\\"lockedLeafColumns.length\\\"\\n                            [totalColumnsCount]=\\\"leafColumns.length\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </thead>\\n                    </table>\\n                    <div *ngIf=\\\"virtualColumns\\\" class=\\\"k-width-container\\\" role=\\\"presentation\\\">\\n                        <div [style.width.px]=\\\"columnsContainer.unlockedWidth\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n            <kendo-grid-list\\n                [data]=\\\"view\\\"\\n                [rowHeight]=\\\"rowHeight\\\"\\n                [detailRowHeight]=\\\"detailRowHeight\\\"\\n                [total]=\\\"totalCount\\\"\\n                [take]=\\\"pageSize\\\"\\n                [groups]=\\\"group\\\"\\n                [groupable]=\\\"groupable\\\"\\n                [skip]=\\\"skip\\\"\\n                [trackBy]=\\\"trackBy\\\"\\n                [columns]=\\\"columnsContainer\\\"\\n                [selectable]=\\\"selectable\\\"\\n                [filterable]=\\\"filterable\\\"\\n                [detailTemplate]=\\\"detailTemplate\\\"\\n                [noRecordsTemplate]=\\\"noRecordsTemplate\\\"\\n                (pageChange)=\\\"notifyPageChange('list', $event)\\\"\\n                [rowClass]=\\\"rowClass\\\"\\n                [loading]=\\\"loading\\\"\\n                [isVirtual]=\\\"isVirtual\\\"\\n                [virtualColumns]=\\\"virtualColumns\\\"\\n                (scrollBottom)=\\\"notifyScrollBottom()\\\"\\n                (contentScroll)=\\\"contentScroll.emit($event)\\\"\\n                kendoDraggable\\n                kendoGridSelectionMarquee\\n                [enableDrag]=\\\"marqueeSelection\\\"\\n                >\\n            </kendo-grid-list>\\n            <div\\n                *ngIf=\\\"showFooter\\\"\\n                class=\\\"k-grid-footer\\\"\\n                [style.padding]=\\\"headerPadding\\\">\\n                <div\\n                    *ngIf=\\\"lockedLeafColumns.length\\\"\\n                    class=\\\"k-grid-footer-locked\\\"\\n                    [style.width.px]=\\\"lockedWidth\\\">\\n                    <table [locked]=\\\"true\\\" [style.width.px]=\\\"lockedWidth\\\">\\n                        <colgroup kendoGridColGroup\\n                            [columns]=\\\"lockedLeafColumns\\\"\\n                            [groups]=\\\"group\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </colgroup>\\n                        <tfoot kendoGridFooter\\n                            [scrollable]=\\\"true\\\"\\n                            [groups]=\\\"group\\\"\\n                            [columns]=\\\"lockedLeafColumns\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </tfoot>\\n                    </table>\\n                </div><div #footer\\n                    class=\\\"k-grid-footer-wrap\\\" data-scrollable\\n                    [kendoGridResizableContainer]=\\\"lockedLeafColumns.length\\\"\\n                    [lockedWidth]=\\\"lockedWidth + scrollbarWidth + 3\\\">\\n                    <table [style.width.px]=\\\"nonLockedWidth\\\">\\n                        <colgroup kendoGridColGroup\\n                            [columns]=\\\"nonLockedLeafColumns\\\"\\n                            [groups]=\\\"isLocked ? [] : group\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </colgroup>\\n                        <tfoot kendoGridFooter\\n                            [scrollable]=\\\"true\\\"\\n                            [groups]=\\\"isLocked ? [] : group\\\"\\n                            [columns]=\\\"nonLockedLeafColumns\\\"\\n                            [lockedColumnsCount]=\\\"lockedLeafColumns.length\\\"\\n                            [detailTemplate]=\\\"detailTemplate\\\">\\n                        </tfoot>\\n                    </table>\\n                </div>\\n            </div>\\n        </ng-template>\\n        <ng-template [ngIf]=\\\"!isScrollable\\\">\\n            <table [style.table-layout]=\\\"resizable ? 'fixed' : null\\\">\\n                <colgroup kendoGridColGroup\\n                    [columns]=\\\"leafColumns\\\"\\n                    [groups]=\\\"group\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\">\\n                </colgroup>\\n                <thead kendoGridHeader\\n                    *ngIf=\\\"!hideHeader\\\"\\n                    [resizable]=\\\"resizable\\\"\\n                    [scrollable]=\\\"false\\\"\\n                    [columns]=\\\"visibleColumns\\\"\\n                    [totalColumnLevels]=\\\"totalColumnLevels\\\"\\n                    [groups]=\\\"group\\\"\\n                    [groupable]=\\\"showGroupPanel\\\"\\n                    [reorderable]=\\\"reorderable\\\"\\n                    [sort]=\\\"sort\\\"\\n                    [sortable]=\\\"sortable\\\"\\n                    [filter]=\\\"filter\\\"\\n                    [filterable]=\\\"filterable\\\"\\n                    [columnMenu]=\\\"columnMenuOptions\\\"\\n                    [columnMenuTemplate]=\\\"columnMenuTemplate\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\">\\n                </thead>\\n                <tbody kendoGridTableBody\\n                    [groups]=\\\"group\\\"\\n                    [data]=\\\"view\\\"\\n                    [skip]=\\\"skip\\\"\\n                    [columns]=\\\"leafColumns\\\"\\n                    [selectable]=\\\"selectable\\\"\\n                    [filterable]=\\\"filterable\\\"\\n                    [noRecordsTemplate]=\\\"noRecordsTemplate\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\"\\n                    [showGroupFooters]=\\\"showGroupFooters\\\"\\n                    [trackBy]=\\\"trackBy\\\"\\n                    [rowClass]=\\\"rowClass\\\"\\n                    kendoDraggable\\n                    kendoGridSelectionMarquee\\n                    [enableDrag]=\\\"marqueeSelection\\\">\\n                </tbody>\\n                <tfoot kendoGridFooter\\n                    *ngIf=\\\"showFooter\\\"\\n                    [scrollable]=\\\"false\\\"\\n                    [groups]=\\\"group\\\"\\n                    [columns]=\\\"leafColumns\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\">\\n                </tfoot>\\n            </table>\\n            <div *ngIf=\\\"loading\\\" kendoGridLoading>\\n            </div>\\n        </ng-template>\\n        </div>\\n        <kendo-pager\\n            *ngIf=\\\"showPager\\\"\\n            [template]=\\\"pagerTemplate\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [total]=\\\"view.total\\\"\\n            [skip]=\\\"skip\\\"\\n            [options]=\\\"pageable\\\"\\n            (pageChange)=\\\"notifyPageChange('pager', $event)\\\">\\n        </kendo-pager>\\n        <kendo-grid-toolbar *ngIf=\\\"showBottomToolbar\\\" position=\\\"bottom\\\"></kendo-grid-toolbar>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: BrowserSupportService\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: ElementRef\n    }, {\n      type: GroupInfoService\n    }, {\n      type: GroupsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: DetailsService\n    }, {\n      type: EditService\n    }, {\n      type: FilterService\n    }, {\n      type: PDFService\n    }, {\n      type: ResponsiveService\n    }, {\n      type: Renderer2\n    }, {\n      type: ExcelService\n    }, {\n      type: NgZone\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: DomEventsService\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: ColumnReorderService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: NavigationService\n    }, {\n      type: SortService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    pageable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    navigable: [{\n      type: Input\n    }],\n    autoSize: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    hideHeader: [{\n      type: Input\n    }],\n    filterChange: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    groupChange: [{\n      type: Output\n    }],\n    sortChange: [{\n      type: Output\n    }],\n    selectionChange: [{\n      type: Output\n    }],\n    dataStateChange: [{\n      type: Output\n    }],\n    groupExpand: [{\n      type: Output\n    }],\n    groupCollapse: [{\n      type: Output\n    }],\n    detailExpand: [{\n      type: Output\n    }],\n    detailCollapse: [{\n      type: Output\n    }],\n    edit: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    save: [{\n      type: Output\n    }],\n    remove: [{\n      type: Output\n    }],\n    add: [{\n      type: Output\n    }],\n    cellClose: [{\n      type: Output\n    }],\n    cellClick: [{\n      type: Output\n    }],\n    pdfExport: [{\n      type: Output\n    }],\n    excelExport: [{\n      type: Output\n    }],\n    columnResize: [{\n      type: Output\n    }],\n    columnReorder: [{\n      type: Output\n    }],\n    columnVisibilityChange: [{\n      type: Output\n    }],\n    columnLockedChange: [{\n      type: Output\n    }],\n    scrollBottom: [{\n      type: Output\n    }],\n    contentScroll: [{\n      type: Output\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase$1]\n    }],\n    footer: [{\n      type: ViewChildren,\n      args: [\"footer\"]\n    }],\n    skip: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    navigatable: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    rowSelected: [{\n      type: Input\n    }],\n    cellSelected: [{\n      type: Input\n    }],\n    dir: [{\n      type: HostBinding,\n      args: ['attr.dir']\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }, {\n      type: HostBinding,\n      args: ['class.k-grid']\n    }],\n    lockedClasses: [{\n      type: HostBinding,\n      args: ['class.k-grid-lockedcolumns']\n    }],\n    virtualClasses: [{\n      type: HostBinding,\n      args: ['class.k-grid-virtual']\n    }],\n    noScrollbarClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-no-scrollbar']\n    }],\n    isDetailExpanded: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    detailTemplateChildren: [{\n      type: ContentChildren,\n      args: [DetailTemplateDirective]\n    }],\n    noRecordsTemplateChildren: [{\n      type: ContentChildren,\n      args: [NoRecordsTemplateDirective]\n    }],\n    pagerTemplateChildren: [{\n      type: ContentChildren,\n      args: [PagerTemplateDirective]\n    }],\n    toolbarTemplateChildren: [{\n      type: ContentChildren,\n      args: [ToolbarTemplateDirective]\n    }],\n    columnMenuTemplates: [{\n      type: ContentChildren,\n      args: [ColumnMenuTemplateDirective]\n    }],\n    lockedHeader: [{\n      type: ViewChild,\n      args: [\"lockedHeader\"]\n    }],\n    header: [{\n      type: ViewChild,\n      args: [\"header\"]\n    }],\n    ariaRoot: [{\n      type: ViewChild,\n      args: ['ariaRoot']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar update = function update(arr, idx, value) {\n  return [].concat(_toConsumableArray(arr.slice(0, idx + 1)), _toConsumableArray(arr.slice(idx + 1).map(function (x) {\n    return x + value;\n  })));\n};\n/**\n * @hidden\n */\n\n\nvar RowHeightService = /*#__PURE__*/function () {\n  function RowHeightService() {\n    var total = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var rowHeight = arguments.length > 1 ? arguments[1] : undefined;\n    var detailRowHeight = arguments.length > 2 ? arguments[2] : undefined;\n\n    _classCallCheck(this, RowHeightService);\n\n    this.total = total;\n    this.rowHeight = rowHeight;\n    this.detailRowHeight = detailRowHeight;\n    this.offsets = [];\n    this.heights = [];\n    var agg = 0;\n\n    for (var idx = 0; idx < total; idx++) {\n      this.offsets.push(agg);\n      agg += rowHeight;\n      this.heights.push(rowHeight);\n    }\n  }\n\n  _createClass(RowHeightService, [{\n    key: \"height\",\n    value: function height(rowIndex) {\n      return this.heights[rowIndex];\n    }\n  }, {\n    key: \"expandDetail\",\n    value: function expandDetail(rowIndex) {\n      if (this.height(rowIndex) === this.rowHeight) {\n        this.updateRowHeight(rowIndex, this.detailRowHeight);\n      }\n    }\n  }, {\n    key: \"collapseDetail\",\n    value: function collapseDetail(rowIndex) {\n      if (this.height(rowIndex) > this.rowHeight) {\n        this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n      }\n    }\n  }, {\n    key: \"isExpanded\",\n    value: function isExpanded(rowIndex) {\n      return this.height(rowIndex) > this.rowHeight;\n    }\n  }, {\n    key: \"index\",\n    value: function index(position) {\n      if (position < 0) {\n        return undefined;\n      }\n\n      var result = this.offsets.reduce(function (prev, current, idx) {\n        if (prev !== undefined) {\n          return prev;\n        } else if (current === position) {\n          return idx;\n        } else if (current > position) {\n          return idx - 1;\n        }\n\n        return undefined;\n      }, undefined); // tslint:disable-line:align\n\n      return result === undefined ? this.total - 1 : result;\n    }\n  }, {\n    key: \"offset\",\n    value: function offset(rowIndex) {\n      return this.offsets[rowIndex];\n    }\n  }, {\n    key: \"totalHeight\",\n    value: function totalHeight() {\n      return this.heights.reduce(function (prev, curr) {\n        return prev + curr;\n      }, 0);\n    }\n  }, {\n    key: \"updateRowHeight\",\n    value: function updateRowHeight(rowIndex, value) {\n      if (this.total > 0) {\n        this.heights[rowIndex] += value;\n        this.offsets = update(this.offsets, rowIndex, value);\n      }\n    }\n  }]);\n\n  return RowHeightService;\n}();\n/**\n * @hidden\n */\n\n\nvar ScrollAction = function ScrollAction(offset) {\n  _classCallCheck(this, ScrollAction);\n\n  this.offset = offset;\n};\n/**\n * @hidden\n */\n\n\nvar PageAction = function PageAction(skip, take$$1) {\n  _classCallCheck(this, PageAction);\n\n  this.skip = skip;\n  this.take = take$$1;\n};\n/**\n * @hidden\n */\n\n\nvar ScrollBottomAction = function ScrollBottomAction() {\n  _classCallCheck(this, ScrollBottomAction);\n};\n\nvar SCROLL_BOTTOM_THRESHOLD = 2;\n/**\n * @hidden\n */\n\nvar ScrollerService = /*#__PURE__*/function () {\n  function ScrollerService(scrollObservable) {\n    _classCallCheck(this, ScrollerService);\n\n    this.scrollObservable = scrollObservable;\n    this.firstLoaded = 0;\n  }\n\n  _createClass(ScrollerService, [{\n    key: \"create\",\n    value: function create(rowHeightService, skip, take$$1, total) {\n      var _this58 = this;\n\n      this.rowHeightService = rowHeightService;\n      this.firstLoaded = skip;\n      this.lastLoaded = skip + take$$1;\n      this.take = take$$1;\n      this.total = total;\n      this.lastScrollTop = 0;\n      var subject = new BehaviorSubject(new ScrollAction(this.rowHeightService.offset(skip)));\n      this.subscription = Observable.create(function (observer) {\n        _this58.unsubscribe();\n\n        _this58.scrollSubscription = _this58.scrollObservable.subscribe(function (x) {\n          return _this58.onScroll(x, observer);\n        });\n      }).subscribe(function (x) {\n        return subject.next(x);\n      });\n      return subject;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.unsubscribe();\n\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(_ref21, observer) {\n      var scrollTop = _ref21.scrollTop,\n          offsetHeight = _ref21.offsetHeight,\n          scrollHeight = _ref21.scrollHeight,\n          clientHeight = _ref21.clientHeight;\n\n      if (this.lastScrollTop === scrollTop) {\n        return;\n      }\n\n      var up = this.lastScrollTop >= scrollTop;\n      this.lastScrollTop = scrollTop;\n      var firstItemIndex = this.rowHeightService.index(scrollTop);\n      var firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n      var lastItemIndex = this.rowHeightService.index(scrollTop + offsetHeight);\n\n      if (!up) {\n        if (lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n          var overflow = firstItemIndex + this.take - this.total;\n\n          if (overflow > 0) {\n            firstItemIndex = firstItemIndex - overflow;\n            firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n          }\n\n          this.firstLoaded = firstItemIndex;\n          observer.next(new ScrollAction(firstItemOffset));\n          var nextTake = this.firstLoaded + this.take;\n          this.lastLoaded = Math.min(nextTake, this.total);\n          nextTake = nextTake > this.total ? this.total - this.firstLoaded : this.take;\n          observer.next(new PageAction(this.firstLoaded, this.take));\n        } else {\n          var atBottom = scrollHeight - clientHeight - scrollTop < SCROLL_BOTTOM_THRESHOLD;\n\n          if (atBottom) {\n            observer.next(new ScrollBottomAction());\n          }\n        }\n      }\n\n      if (up && firstItemIndex < this.firstLoaded) {\n        var nonVisibleBuffer = Math.floor(this.take * 0.3);\n        this.firstLoaded = Math.max(firstItemIndex - nonVisibleBuffer, 0);\n        observer.next(new ScrollAction(this.rowHeightService.offset(this.firstLoaded)));\n        this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n        observer.next(new PageAction(this.firstLoaded, this.take));\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      if (this.scrollSubscription) {\n        this.scrollSubscription.unsubscribe();\n        this.scrollSubscription = undefined;\n      }\n    }\n  }]);\n\n  return ScrollerService;\n}();\n/**\n * @hidden\n */\n\n\nvar NON_DATA_CELL_CLASSES = 'k-hierarchy-cell k-detail-cell k-group-cell';\n/**\n * @hidden\n */\n\nvar NON_DATA_ROW_CLASSES = 'k-grouping-row k-group-footer k-detail-row k-grid-norecords';\n/**\n * @hidden\n */\n\nvar IGNORE_TARGET_CLASSSES = 'k-icon';\n/**\n * @hidden\n */\n\nvar IGNORE_CONTAINER_CLASSES = 'k-widget k-grid-ignore-click';\n\nvar elementAt = function elementAt(index, elements, elementOffset) {\n  for (var idx = 0, elementIdx = 0; idx < elements.length; idx++) {\n    var _offset3 = elementOffset(elements[idx]);\n\n    if (elementIdx <= index && index <= elementIdx + _offset3 - 1) {\n      return elements[idx];\n    }\n\n    elementIdx += _offset3;\n  }\n};\n\nvar rowAt = function rowAt(index, rows) {\n  return elementAt(index, rows, function (row) {\n    return row.hasAttribute('data-kendo-grid-item-index') ? 1 : 0;\n  });\n};\n\nvar cellAt = function cellAt(index, cells) {\n  return elementAt(index, cells, function (cell) {\n    return !hasClasses(cell, NON_DATA_CELL_CLASSES) ? parseInt(cell.getAttribute('colSpan'), 10) || 1 : 0;\n  });\n};\n\nvar EMPTY_OBJECT = {};\n/**\n * @hidden\n */\n\nvar SCROLLER_FACTORY_TOKEN = new InjectionToken('grid-scroll-service-factory');\n/**\n * @hidden\n */\n\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n  return new ScrollerService(observable);\n}\n\nvar wheelDeltaY = function wheelDeltaY(e) {\n  var deltaY = e.wheelDeltaY;\n\n  if (e.wheelDelta && (deltaY === undefined || deltaY)) {\n    return e.wheelDelta;\n  } else if (e.detail && e.axis === e.VERTICAL_AXIS) {\n    return -e.detail * 10;\n  }\n\n  return 0;\n};\n\nvar preventLockedScroll = function preventLockedScroll(args, element) {\n  var delta = wheelDeltaY(args);\n  var scrollTop = element.scrollTop;\n  var allowScroll = scrollTop === 0 && 0 < delta || element.scrollHeight <= element.offsetHeight + scrollTop && delta < 0;\n\n  if (!allowScroll) {\n    event.preventDefault();\n  }\n};\n\nvar translateY = function translateY(renderer, value) {\n  return function (el) {\n    return renderer.setStyle(el, \"transform\", \"translateY(\".concat(value, \"px)\"));\n  };\n};\n\nvar maybeNativeElement = function maybeNativeElement(el) {\n  return el ? el.nativeElement : null;\n};\n\nvar hasScrollbar = function hasScrollbar(el, parent) {\n  return el.nativeElement.offsetWidth > parent.nativeElement.clientWidth;\n};\n\nvar setHeight$1 = function setHeight$1(renderer) {\n  return function (_ref22) {\n    var el = _ref22.el,\n        height = _ref22.height;\n    return renderer.setStyle(el, \"height\", \"\".concat(height, \"px\"));\n  };\n};\n\nvar bufferSize = 1;\n/**\n * @hidden\n */\n\nvar ListComponent = /*#__PURE__*/function () {\n  function ListComponent(scrollerFactory, detailsService, changeNotification, suspendService, groupsService, ngZone, renderer, scrollSyncService, resizeService, editService, supportService, navigationService, scrollRequestService, localization, columnResizingService, changeDetector, pdfService, columnInfo) {\n    var _this59 = this;\n\n    _classCallCheck(this, ListComponent);\n\n    this.changeNotification = changeNotification;\n    this.suspendService = suspendService;\n    this.groupsService = groupsService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.scrollSyncService = scrollSyncService;\n    this.resizeService = resizeService;\n    this.editService = editService;\n    this.supportService = supportService;\n    this.navigationService = navigationService;\n    this.localization = localization;\n    this.columnResizingService = columnResizingService;\n    this.changeDetector = changeDetector;\n    this.pdfService = pdfService;\n    this.columnInfo = columnInfo;\n    this.groups = [];\n    this.skip = 0;\n    this.columns = new ColumnsContainer(function () {\n      return [];\n    });\n    this.selectable = false;\n    this.groupable = false;\n    this.trackBy = defaultTrackBy;\n    this.contentScroll = new EventEmitter();\n    this.pageChange = new EventEmitter();\n    this.scrollBottom = new EventEmitter();\n    this.columnsStartIdx = 0;\n    this.resizeSensors = new QueryList();\n    this.dispatcher = new Subject();\n    this.containerScrollTop = 0;\n    this.scrollLeft = 0;\n    this.rtl = false;\n    this.scroller = scrollerFactory(this.dispatcher);\n    this.subscriptions = detailsService.changes.subscribe(function (x) {\n      return _this59.detailExpand(x);\n    }).add(scrollRequestService.requests.subscribe(function (x) {\n      return _this59.scrollTo(x);\n    }));\n  }\n\n  _createClass(ListComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this60 = this;\n\n      this.init();\n      this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowSync.bind(this)));\n      this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowNavigationLocked.bind(this)));\n      this.subscriptions.add(merge(this.columns.changes, this.resizeService.changes).subscribe(function () {\n        if (_this60.virtualColumns) {\n          _this60.ngZone.run(function () {\n            _this60.updateViewportColumns();\n\n            _this60.changeDetector.markForCheck();\n          });\n        }\n      }));\n      this.subscriptions.add(this.localization.changes.subscribe(function (_ref23) {\n        var rtl = _ref23.rtl;\n        return _this60.rtl = rtl;\n      }));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var hasInitialSkip = changes.skip && changes.skip.firstChange && changes.skip.currentValue > 0;\n\n      if (hasInitialSkip) {\n        this.handleInitialScrollToSkip();\n      }\n\n      if (isChanged(\"skip\", changes) && !this.rebind) {\n        this.skipScroll = true;\n        this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n      }\n\n      if (anyChanged([\"total\", \"take\"], changes)) {\n        this.init();\n      }\n\n      this.rebind = false;\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.virtualColumns && (!this.viewportColumns || this.viewportWidthChange())) {\n        this.updateViewportColumns();\n      }\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      if (this.skip && this.isVirtual) {\n        this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n      }\n\n      this.resetNavigationViewport();\n      this.attachContainerScroll();\n      this.initResizeService();\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      var isLocked = this.isLocked;\n\n      if (isLocked && !this.hasLockedContainer) {\n        this.syncRowsHeight();\n      }\n\n      this.hasLockedContainer = isLocked;\n    }\n  }, {\n    key: \"syncRowsHeight\",\n    value: function syncRowsHeight() {\n      if (this.lockedContainer) {\n        _syncRowsHeight(this.lockedTable.nativeElement, this.table.nativeElement);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n\n      if (this.resizeService) {\n        this.resizeService.destroy();\n      }\n\n      this.cleanupScroller();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      if (this.suspendService.scroll) {\n        return;\n      }\n\n      this.rowHeightService = new RowHeightService(this.total, this.rowHeight, this.detailRowHeight);\n      this.totalHeight = this.rowHeightService.totalHeight();\n\n      if (!isUniversal()) {\n        this.ngZone.runOutsideAngular(this.createScroller.bind(this));\n      }\n    }\n  }, {\n    key: \"lockedScroll\",\n    value: function lockedScroll() {\n      if (!this.suspendService.scroll) {\n        var lockedScrollTop = this.lockedContainer.nativeElement.scrollTop;\n\n        if (lockedScrollTop !== this.containerScrollTop) {\n          this.container.nativeElement.scrollTop = this.containerScrollTop = lockedScrollTop;\n        }\n      }\n    }\n  }, {\n    key: \"lockedMousewheel\",\n    value: function lockedMousewheel(args) {\n      if (!args.ctrlKey) {\n        preventLockedScroll(args, this.container.nativeElement);\n        var scrollDelta = wheelDeltaY(args);\n        this.container.nativeElement.scrollTop -= scrollDelta;\n      }\n    }\n  }, {\n    key: \"lockedKeydown\",\n    value: function lockedKeydown(args) {\n      if (args.keyCode === Keys.PageDown || args.keyCode === Keys.PageUp) {\n        var dir = args.keyCode === Keys.PageDown ? 1 : -1;\n        var element = this.container.nativeElement;\n        element.scrollTop += element.offsetHeight * dir * 0.8;\n        args.preventDefault();\n      }\n    }\n  }, {\n    key: \"detailExpand\",\n    value: function detailExpand(_ref24) {\n      var index = _ref24.index,\n          expand = _ref24.expand;\n\n      if (expand) {\n        this.rowHeightService.expandDetail(index);\n      } else {\n        this.rowHeightService.collapseDetail(index);\n      }\n\n      this.totalHeight = this.rowHeightService.totalHeight();\n      this.resetNavigationViewport();\n    }\n  }, {\n    key: \"attachContainerScroll\",\n    value: function attachContainerScroll() {\n      var _this61 = this;\n\n      if (isUniversal()) {\n        return;\n      }\n\n      this.ngZone.runOutsideAngular(function () {\n        _this61.subscriptions.add(fromEvent(_this61.container.nativeElement, 'scroll').pipe(map(function (event) {\n          return event.target;\n        }), filter(function () {\n          return !_this61.suspendService.scroll;\n        }), tap(function (target) {\n          _this61.onContainerScroll(target);\n\n          _this61.resetNavigationViewport();\n\n          if (_this61.virtualColumns) {\n            _this61.handleColumnScroll();\n          }\n\n          var rowViewport = _this61.navigationService.viewport || EMPTY_OBJECT;\n          var columnViewport = _this61.navigationService.columnViewport || EMPTY_OBJECT;\n\n          _this61.contentScroll.emit({\n            scrollLeft: target.scrollLeft,\n            scrollTop: target.scrollTop,\n            startRow: rowViewport.firstItemIndex,\n            endRow: rowViewport.lastItemIndex,\n            startColumn: columnViewport.firstItemIndex,\n            endColumn: columnViewport.lastItemIndex\n          });\n        })).subscribe(_this61.dispatcher));\n      });\n      this.scrollSyncService.registerEmitter(this.container.nativeElement, \"body\");\n    }\n  }, {\n    key: \"createScroller\",\n    value: function createScroller() {\n      var _this62 = this;\n\n      this.cleanupScroller();\n      var observable = this.scroller.create(this.rowHeightService, this.skip, this.take, this.total);\n      this.skipScroll = false;\n      this.scrollerSubscription = observable.pipe(filter(function (x) {\n        return x instanceof PageAction;\n      }), filter(function () {\n        var temp = _this62.skipScroll;\n        _this62.skipScroll = false;\n        return !temp;\n      }), tap(function () {\n        return _this62.rebind = true;\n      })).subscribe(function (x) {\n        return _this62.ngZone.run(function () {\n          return _this62.pageChange.emit(x);\n        });\n      });\n      this.scrollerSubscription.add(observable.pipe(filter(function (x) {\n        return x instanceof ScrollAction;\n      })).subscribe(this.scroll.bind(this)));\n      this.scrollerSubscription.add(observable.pipe(filter(function (x) {\n        return x instanceof ScrollBottomAction;\n      })).subscribe(function () {\n        return _this62.scrollBottom.emit();\n      }));\n    }\n  }, {\n    key: \"scroll\",\n    value: function scroll(_ref25) {\n      var _ref25$offset = _ref25.offset,\n          offset = _ref25$offset === void 0 ? 0 : _ref25$offset;\n\n      if (this.isVirtual) {\n        [maybeNativeElement(this.table), maybeNativeElement(this.lockedTable)].filter(isPresent).forEach(translateY(this.renderer, offset));\n      }\n\n      this.resetNavigationViewport();\n    }\n  }, {\n    key: \"onContainerScroll\",\n    value: function onContainerScroll(_ref26) {\n      var scrollTop = _ref26.scrollTop;\n      this.containerScrollTop = scrollTop;\n\n      if (this.lockedContainer) {\n        this.lockedContainer.nativeElement.scrollTop = scrollTop;\n      }\n    }\n  }, {\n    key: \"handleInitialScrollToSkip\",\n    value: function handleInitialScrollToSkip() {\n      var _this63 = this;\n\n      var shouldScroll = function shouldScroll() {\n        return _this63.isVirtual && _this63.skip > 0 && _this63.total > 0;\n      };\n\n      var sub = this.changeNotification.changes.pipe(filter(shouldScroll)).subscribe(function (_) {\n        _this63.scrollTo({\n          row: _this63.skip\n        });\n\n        sub.unsubscribe();\n      });\n    }\n  }, {\n    key: \"handleRowSync\",\n    value: function handleRowSync() {\n      var _this64 = this;\n\n      var isLocked = function isLocked() {\n        return isPresent(_this64.lockedContainer);\n      };\n\n      var onStable = function onStable() {\n        return _this64.ngZone.onStable.asObservable().pipe(take(1));\n      };\n\n      return merge(this.changeNotification.changes, this.groupsService.changes.pipe(filter(isLocked), switchMapTo(onStable())), this.editService.changed, this.resizeService.changes, this.columnResizingService.changes.pipe(filter(function (change) {\n        return change.type === 'end';\n      })), this.supportService.changes).pipe(tap(function () {\n        return _this64.resetNavigationViewport();\n      }), filter(isLocked)).subscribe(function () {\n        var scrollTop = _this64.container.nativeElement.scrollTop;\n        var scrollLeft = _this64.container.nativeElement.scrollLeft;\n\n        _this64.syncRowsHeight();\n\n        _this64.syncContainerHeight();\n\n        _this64.lockedContainer.nativeElement.scrollTop = _this64.container.nativeElement.scrollTop = scrollTop; // fixes scroll left position in IE when editing\n\n        _this64.container.nativeElement.scrollLeft = scrollLeft;\n\n        _this64.resizeSensors.forEach(function (sensor) {\n          return sensor.acceptSize();\n        });\n      });\n    }\n  }, {\n    key: \"handleRowNavigationLocked\",\n    value: function handleRowNavigationLocked() {\n      var _this65 = this;\n\n      return this.navigationService.changes.pipe(filter(function () {\n        return isPresent(_this65.lockedContainer);\n      }), delay(10)).subscribe(function (args) {\n        if (_this65.lockedLeafColumns.length <= args.prevColIndex && args.colIndex < _this65.lockedLeafColumns.length) {\n          var _cell5 = _this65.navigationService.activeCell;\n\n          if (_cell5 && _cell5.colIndex + _cell5.colSpan < args.prevColIndex) {\n            _this65.container.nativeElement.scrollLeft = 0;\n          }\n        }\n      });\n    }\n  }, {\n    key: \"scrollToVirtualRow\",\n    value: function scrollToVirtualRow(itemIndex) {\n      if (isPresent(this.detailTemplate)) {\n        itemIndex = Math.floor(itemIndex / 2);\n      }\n\n      var offset = this.rowHeightService.offset(itemIndex);\n      this.container.nativeElement.scrollTop = offset;\n      this.resetNavigationViewport();\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(_ref27) {\n      var row = _ref27.row,\n          column = _ref27.column;\n\n      if (isNumber(row)) {\n        if (this.isVirtual) {\n          this.scrollToVirtualRow(row);\n        } else {\n          var element = rowAt(row, this.table.nativeElement.rows);\n\n          if (element) {\n            this.container.nativeElement.scrollTop = element.offsetTop;\n          }\n        }\n      }\n\n      if (isNumber(column)) {\n        column -= this.lockedLeafColumns.length;\n\n        if (this.virtualColumns) {\n          var columns = this.columns.leafColumnsToRender;\n          var _offset4 = 0;\n\n          for (var idx = 0; idx < column; idx++) {\n            _offset4 += columns[idx].width || 0;\n          }\n\n          var startOffset = this.lockedLeafColumns.length ? 0 : this.groups.length * GROUP_CELL_WIDTH + (this.detailTemplate && column > 0 ? GROUP_CELL_WIDTH : 0);\n          this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(_offset4 + startOffset);\n        } else if (column === 0 && this.detailTemplate) {\n          this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(0);\n        } else {\n          var firstRow = rowAt(0, this.table.nativeElement.rows);\n\n          if (firstRow) {\n            var _element = cellAt(column, firstRow.cells);\n\n            if (_element) {\n              this.container.nativeElement.scrollLeft = this.elementScrollLeft(_element);\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"resetNavigationViewport\",\n    value: function resetNavigationViewport() {\n      if (!this.container || !this.navigationService.enabled || !this.navigationService.needsViewport() || this.data.length === 0) {\n        return;\n      }\n\n      var _this$container$nativ = this.container.nativeElement,\n          scrollTop = _this$container$nativ.scrollTop,\n          offsetHeight = _this$container$nativ.offsetHeight;\n      var scrollBottom = scrollTop + offsetHeight;\n      var firstItemIndex = this.rowHeightService.index(scrollTop);\n      var lastItemIndex = this.rowHeightService.index(scrollBottom);\n      var lastItemOffset = this.rowHeightService.offset(lastItemIndex);\n      var lastItemOverflows = lastItemOffset + this.rowHeight > scrollBottom;\n\n      if (lastItemIndex > 0 && lastItemOverflows) {\n        lastItemIndex--;\n      }\n\n      var viewportStart = firstItemIndex;\n      var viewportEnd = lastItemIndex;\n\n      if (isPresent(this.detailTemplate)) {\n        viewportStart *= 2;\n        viewportEnd *= 2;\n        var firstItemHeight = this.rowHeightService.offset(firstItemIndex);\n\n        if (firstItemHeight + this.rowHeight < scrollTop) {\n          viewportStart++;\n        }\n\n        var lastItemHeight = this.rowHeightService.height(lastItemIndex);\n        var lastItemExpanded = this.rowHeightService.isExpanded(lastItemIndex);\n        var lastItemDetailOverflows = lastItemOffset + lastItemHeight > scrollBottom;\n\n        if (lastItemExpanded && !lastItemDetailOverflows) {\n          viewportEnd++;\n        }\n      }\n\n      this.navigationService.setViewport(viewportStart, viewportEnd);\n    }\n  }, {\n    key: \"cleanupScroller\",\n    value: function cleanupScroller() {\n      if (this.scrollerSubscription) {\n        this.scrollerSubscription.unsubscribe();\n      }\n\n      if (this.scroller) {\n        this.scroller.destroy();\n      }\n    }\n  }, {\n    key: \"initResizeService\",\n    value: function initResizeService() {\n      this.resizeService.connect(merge.apply(void 0, _toConsumableArray(this.resizeSensors.map(function (sensor) {\n        return sensor.resize;\n      }))));\n    }\n  }, {\n    key: \"syncContainerHeight\",\n    value: function syncContainerHeight() {\n      var _this66 = this;\n\n      [maybeNativeElement(this.lockedContainer)].filter(isPresent).map(function (el) {\n        el.style.height = '';\n        var height = _this66.container.nativeElement.offsetHeight;\n\n        if (hasScrollbar(_this66.table, _this66.container)) {\n          height -= _this66.supportService.scrollbarWidth;\n        }\n\n        return {\n          el: el,\n          height: height\n        };\n      }).forEach(setHeight$1(this.renderer));\n    }\n  }, {\n    key: \"updateViewportColumns\",\n    value: function updateViewportColumns(range) {\n      var columns = this.columns.nonLockedLeafColumns.toArray();\n\n      var _ref28 = range || this.calculateViewportColumns(),\n          startIdx = _ref28.startIdx,\n          endIdx = _ref28.endIdx,\n          offset = _ref28.offset;\n\n      var start = Math.max(0, startIdx - bufferSize);\n      var end = Math.min(endIdx + bufferSize, columns.length - 1);\n\n      if (start < startIdx) {\n        for (var idx = startIdx - 1; idx >= start; idx--) {\n          offset -= columns[idx].width;\n        }\n      }\n\n      var currentColumns = columns.slice(start, end + 1);\n      this.viewportColumnsWidth = currentColumns.reduce(function (total, column) {\n        return total + column.width;\n      }, 0);\n\n      if (start > 0) {\n        var offsetColumn = new ColumnBase$1();\n        offsetColumn.width = offset;\n        currentColumns.unshift(offsetColumn);\n      }\n\n      this.viewportColumns = new QueryList();\n      this.viewportColumns.reset(currentColumns);\n      this.columnsStartIdx = start;\n      this.columnsEndIdx = end;\n      this.columnInfo.columnRangeChange.emit({\n        start: start,\n        end: end,\n        offset: offset\n      });\n\n      if (!range) {\n        this.updateColumnViewport(startIdx, endIdx);\n      }\n    }\n  }, {\n    key: \"handleColumnScroll\",\n    value: function handleColumnScroll() {\n      var _this67 = this;\n\n      var container = this.container.nativeElement;\n      var scrollLeft = container.scrollLeft;\n\n      if (this.scrollLeft !== scrollLeft) {\n        this.scrollLeft = scrollLeft;\n        var range = this.calculateViewportColumns();\n        this.updateColumnViewport(range.startIdx, range.endIdx);\n\n        if (range.startIdx < this.columnsStartIdx || this.columnsEndIdx < range.endIdx) {\n          cancelAnimationFrame(this.columnUpdateFrame);\n          this.columnUpdateFrame = requestAnimationFrame(function () {\n            _this67.ngZone.run(function () {\n              _this67.updateViewportColumns(range);\n\n              _this67.changeDetector.markForCheck();\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"updateColumnViewport\",\n    value: function updateColumnViewport(startIdx, endIdx) {\n      var lockedCount = this.lockedLeafColumns.length;\n      var leafColumns$$1 = this.nonLockedLeafColumns.toArray();\n      var viewportStart = lockedCount + startIdx + (this.detailTemplate && startIdx > 0 ? 1 : 0);\n      var viewportEnd = lockedCount + endIdx + (this.detailTemplate ? 1 : 0);\n\n      for (var idx = 0; idx < leafColumns$$1.length; idx++) {\n        var column = leafColumns$$1[idx];\n\n        if (column.isSpanColumn) {\n          viewportEnd += column.childColumns.length;\n        }\n      }\n\n      this.navigationService.setColumnViewport(viewportStart, viewportEnd);\n    }\n  }, {\n    key: \"calculateViewportColumns\",\n    value: function calculateViewportColumns() {\n      var _this$container$nativ2 = this.container.nativeElement,\n          scrollLeft = _this$container$nativ2.scrollLeft,\n          clientWidth = _this$container$nativ2.clientWidth;\n      var columns = this.columns.nonLockedLeafColumns.toArray();\n      var normalizedScrollLeft = this.normalizeScrollLeft(scrollLeft);\n      var viewportEnd = normalizedScrollLeft + clientWidth;\n      var startIdx;\n      var endIdx = 0;\n      var current = 0;\n      var offset = 0;\n      var idx;\n\n      for (idx = 0; idx < columns.length; idx++) {\n        var column = columns[idx];\n        current += column.width || 0;\n\n        if (startIdx === undefined && current > normalizedScrollLeft) {\n          startIdx = idx;\n          offset = current - (column.width || 0);\n        }\n\n        if (current >= viewportEnd) {\n          endIdx = idx;\n          break;\n        }\n      }\n\n      if (!endIdx && idx > 0) {\n        endIdx = columns.length - 1;\n      }\n\n      return {\n        startIdx: startIdx,\n        endIdx: endIdx,\n        offset: offset\n      };\n    }\n  }, {\n    key: \"viewportWidthChange\",\n    value: function viewportWidthChange() {\n      var currentWidth = this.viewportColumns.toArray().reduce(function (total, column) {\n        return total + column.width;\n      }, 0);\n      return currentWidth !== this.viewportColumnsWidth;\n    }\n  }, {\n    key: \"normalizeScrollLeft\",\n    value: function normalizeScrollLeft(position) {\n      return this.rtl ? rtlScrollPosition(position, this.container.nativeElement, this.supportService.rtlScrollLeft) : position;\n    }\n  }, {\n    key: \"elementScrollLeft\",\n    value: function elementScrollLeft(element) {\n      if (this.rtl) {\n        return this.normalizeScrollLeft(this.container.nativeElement.scrollWidth - element.offsetLeft - element.offsetWidth);\n      }\n\n      return element.offsetLeft;\n    }\n  }, {\n    key: \"hostClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"hostRole\",\n    get: function get() {\n      return 'presentation';\n    }\n  }, {\n    key: \"showFooter\",\n    get: function get() {\n      return this.groupable && this.groupable.showFooter;\n    }\n  }, {\n    key: \"totalWidth\",\n    get: function get() {\n      if (this.virtualColumns && this.columns.unlockedWidth) {\n        return this.columns.unlockedWidth;\n      }\n    }\n  }, {\n    key: \"lockedLeafColumns\",\n    get: function get() {\n      return this.columns.lockedLeafColumns;\n    }\n  }, {\n    key: \"nonLockedLeafColumns\",\n    get: function get() {\n      return this.columns.nonLockedLeafColumns;\n    }\n  }, {\n    key: \"nonLockedColumnsToRender\",\n    get: function get() {\n      if (this.virtualColumns && !this.pdfService.exporting) {\n        return this.viewportColumns;\n      }\n\n      return this.nonLockedLeafColumns;\n    }\n  }, {\n    key: \"leafColumns\",\n    get: function get() {\n      return this.columns.leafColumnsToRender;\n    }\n  }, {\n    key: \"lockedWidth\",\n    get: function get() {\n      var groupCellsWidth = this.groups.length * GROUP_CELL_WIDTH;\n      return expandColumns(this.lockedLeafColumns.toArray()).reduce(function (prev, curr) {\n        return prev + (curr.width || 0);\n      }, groupCellsWidth);\n    }\n  }, {\n    key: \"nonLockedWidth\",\n    get: function get() {\n      if (!this.rtl && this.lockedLeafColumns.length || this.virtualColumns) {\n        return sumColumnWidths(expandColumns(this.nonLockedColumnsToRender.toArray()));\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"isLocked\",\n    get: function get() {\n      return this.lockedLeafColumns.length > 0;\n    }\n  }]);\n\n  return ListComponent;\n}();\n\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)(ɵngcc0.ɵɵdirectiveInject(SCROLLER_FACTORY_TOKEN), ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(SuspendService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ScrollSyncService), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(BrowserSupportService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(ScrollRequestService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService));\n};\n\nListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"kendo-grid-list\"]],\n  viewQuery: function ListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(_c117, true);\n      ɵngcc0.ɵɵviewQuery(_c118, true);\n      ɵngcc0.ɵɵviewQuery(_c119, true);\n      ɵngcc0.ɵɵviewQuery(_c120, true);\n      ɵngcc0.ɵɵviewQuery(ResizeSensorComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.container = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedContainer = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lockedTable = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.table = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resizeSensors = _t);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function ListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.hostRole);\n      ɵngcc0.ɵɵclassProp(\"k-grid-container\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    groups: \"groups\",\n    skip: \"skip\",\n    columns: \"columns\",\n    selectable: \"selectable\",\n    groupable: \"groupable\",\n    trackBy: \"trackBy\",\n    data: \"data\",\n    total: \"total\",\n    rowHeight: \"rowHeight\",\n    detailRowHeight: \"detailRowHeight\",\n    take: \"take\",\n    detailTemplate: \"detailTemplate\",\n    noRecordsTemplate: \"noRecordsTemplate\",\n    filterable: \"filterable\",\n    rowClass: \"rowClass\",\n    loading: \"loading\",\n    virtualColumns: \"virtualColumns\",\n    isVirtual: \"isVirtual\"\n  },\n  outputs: {\n    contentScroll: \"contentScroll\",\n    pageChange: \"pageChange\",\n    scrollBottom: \"scrollBottom\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: SCROLLER_FACTORY_TOKEN,\n    useValue: DEFAULT_SCROLLER_FACTORY\n  }]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 14,\n  vars: 32,\n  consts: [[\"class\", \"k-grid-content-locked\", \"role\", \"presentation\", 3, \"width\", \"kendoEventsOutsideAngular\", \"scope\", 4, \"ngIf\"], [\"role\", \"presentation\", \"tabindex\", \"-1\", 1, \"k-grid-content\", \"k-virtual-content\", 3, \"kendoGridResizableContainer\", \"lockedWidth\"], [\"container\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table-wrap\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"virtualColumns\"], [\"table\", \"\"], [\"kendoGridColGroup\", \"\", \"role\", \"presentation\", 3, \"groups\", \"columns\", \"detailTemplate\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"skipGroupDecoration\", \"data\", \"groups\", \"showGroupFooters\", \"columns\", \"allColumns\", \"detailTemplate\", \"noRecordsTemplate\", \"lockedColumnsCount\", \"totalColumnsCount\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\", \"virtualColumns\"], [4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-height-container\"], [\"class\", \"k-width-container\", \"role\", \"presentation\", 4, \"ngIf\"], [\"kendoGridLoading\", \"\", 4, \"ngIf\"], [\"role\", \"presentation\", 1, \"k-grid-content-locked\", 3, \"kendoEventsOutsideAngular\", \"scope\"], [\"lockedContainer\", \"\"], [\"role\", \"presentation\", 1, \"k-grid-table\", 3, \"locked\"], [\"lockedTable\", \"\"], [\"kendoGridTableBody\", \"\", \"role\", \"presentation\", 3, \"groups\", \"isLocked\", \"data\", \"noRecordsText\", \"columns\", \"totalColumnsCount\", \"detailTemplate\", \"showGroupFooters\", \"skip\", \"selectable\", \"trackBy\", \"filterable\", \"rowClass\"], [\"role\", \"presentation\", 1, \"k-width-container\"], [\"kendoGridLoading\", \"\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ListComponent_div_0_Template, 10, 30, \"div\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"table\", 4, 5);\n      ɵngcc0.ɵɵelement(6, \"colgroup\", 6);\n      ɵngcc0.ɵɵelement(7, \"tbody\", 7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(8, ListComponent_kendo_resize_sensor_8_Template, 1, 0, \"kendo-resize-sensor\", 8);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(9, ListComponent_kendo_resize_sensor_9_Template, 1, 0, \"kendo-resize-sensor\", 8);\n      ɵngcc0.ɵɵelementStart(10, \"div\", 9);\n      ɵngcc0.ɵɵelement(11, \"div\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(12, ListComponent_div_12_Template, 2, 2, \"div\", 10);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(13, ListComponent_div_13_Template, 1, 0, \"div\", 11);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"kendoGridResizableContainer\", ctx.lockedLeafColumns.length)(\"lockedWidth\", ctx.lockedWidth + 1);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵstyleProp(\"width\", ctx.nonLockedWidth, \"px\");\n      ɵngcc0.ɵɵproperty(\"virtualColumns\", ctx.virtualColumns);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"groups\", ctx.isLocked ? ɵngcc0.ɵɵpureFunction0(31, _c116) : ctx.groups)(\"columns\", ctx.nonLockedColumnsToRender)(\"detailTemplate\", ctx.detailTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"skipGroupDecoration\", ctx.isLocked)(\"data\", ctx.data)(\"groups\", ctx.groups)(\"showGroupFooters\", ctx.showFooter)(\"columns\", ctx.nonLockedColumnsToRender)(\"allColumns\", ctx.nonLockedLeafColumns)(\"detailTemplate\", ctx.detailTemplate)(\"noRecordsTemplate\", ctx.noRecordsTemplate)(\"lockedColumnsCount\", ctx.lockedLeafColumns.length)(\"totalColumnsCount\", ctx.leafColumns.length)(\"skip\", ctx.skip)(\"selectable\", ctx.selectable)(\"trackBy\", ctx.trackBy)(\"filterable\", ctx.filterable)(\"rowClass\", ctx.rowClass)(\"virtualColumns\", ctx.virtualColumns);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLocked || ctx.virtualColumns);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵstyleProp(\"height\", ctx.totalHeight, \"px\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.virtualColumns);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ResizableContainerDirective, TableDirective, ColGroupComponent, TableBodyComponent, ɵngcc2.EventsOutsideAngularDirective, ɵngcc2.ResizeSensorComponent, LoadingComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nListComponent.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [SCROLLER_FACTORY_TOKEN]\n    }]\n  }, {\n    type: DetailsService\n  }, {\n    type: ChangeNotificationService\n  }, {\n    type: SuspendService\n  }, {\n    type: GroupsService\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: ScrollSyncService\n  }, {\n    type: ResizeService\n  }, {\n    type: EditService\n  }, {\n    type: BrowserSupportService\n  }, {\n    type: NavigationService\n  }, {\n    type: ScrollRequestService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ColumnResizingService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PDFService\n  }, {\n    type: ColumnInfoService\n  }];\n};\n\nListComponent.propDecorators = {\n  hostClass: [{\n    type: HostBinding,\n    args: [\"class.k-grid-container\"]\n  }],\n  hostRole: [{\n    type: HostBinding,\n    args: [\"attr.role\"]\n  }],\n  data: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  total: [{\n    type: Input\n  }],\n  rowHeight: [{\n    type: Input\n  }],\n  detailRowHeight: [{\n    type: Input\n  }],\n  take: [{\n    type: Input\n  }],\n  skip: [{\n    type: Input\n  }],\n  columns: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }],\n  noRecordsTemplate: [{\n    type: Input\n  }],\n  selectable: [{\n    type: Input\n  }],\n  groupable: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  rowClass: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  trackBy: [{\n    type: Input\n  }],\n  virtualColumns: [{\n    type: Input\n  }],\n  isVirtual: [{\n    type: Input\n  }],\n  contentScroll: [{\n    type: Output\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  scrollBottom: [{\n    type: Output\n  }],\n  container: [{\n    type: ViewChild,\n    args: [\"container\", {\n      static: true\n    }]\n  }],\n  lockedContainer: [{\n    type: ViewChild,\n    args: [\"lockedContainer\"]\n  }],\n  lockedTable: [{\n    type: ViewChild,\n    args: [\"lockedTable\"]\n  }],\n  table: [{\n    type: ViewChild,\n    args: [\"table\"]\n  }],\n  resizeSensors: [{\n    type: ViewChildren,\n    args: [ResizeSensorComponent]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ListComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: SCROLLER_FACTORY_TOKEN,\n        useValue: DEFAULT_SCROLLER_FACTORY\n      }],\n      selector: 'kendo-grid-list',\n      template: \"\\n    <div #lockedContainer class=\\\"k-grid-content-locked\\\" role=\\\"presentation\\\"\\n        *ngIf=\\\"isLocked\\\" [style.width.px]=\\\"lockedWidth\\\"\\n        [kendoEventsOutsideAngular]=\\\"{\\n            keydown: lockedKeydown,\\n            scroll: lockedScroll,\\n            mousewheel: lockedMousewheel,\\n            DOMMouseScroll: lockedMousewheel\\n        }\\\"\\n        [scope]=\\\"this\\\"\\n        >\\n        <div role=\\\"presentation\\\" class=\\\"k-grid-table-wrap\\\">\\n            <table [locked]=\\\"true\\\" #lockedTable class=\\\"k-grid-table\\\" role=\\\"presentation\\\" [style.width.px]=\\\"lockedWidth\\\">\\n                <colgroup kendoGridColGroup\\n                    role=\\\"presentation\\\"\\n                    [groups]=\\\"groups\\\"\\n                    [columns]=\\\"lockedLeafColumns\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\">\\n                </colgroup>\\n                <tbody kendoGridTableBody\\n                    role=\\\"presentation\\\"\\n                    [groups]=\\\"groups\\\"\\n                    [isLocked]=\\\"true\\\"\\n                    [data]=\\\"data\\\"\\n                    [noRecordsText]=\\\"''\\\"\\n                    [columns]=\\\"lockedLeafColumns\\\"\\n                    [totalColumnsCount]=\\\"leafColumns.length\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\"\\n                    [showGroupFooters]=\\\"showFooter\\\"\\n                    [skip]=\\\"skip\\\"\\n                    [selectable]=\\\"selectable\\\"\\n                    [trackBy]=\\\"trackBy\\\"\\n                    [filterable]=\\\"filterable\\\"\\n                    [rowClass]=\\\"rowClass\\\">\\n                </tbody>\\n            </table>\\n            <kendo-resize-sensor></kendo-resize-sensor>\\n        </div>\\n        <div class=\\\"k-height-container\\\" role=\\\"presentation\\\">\\n            <div [style.height.px]=\\\"totalHeight\\\"></div>\\n        </div>\\n    </div><div #container\\n               class=\\\"k-grid-content k-virtual-content\\\"\\n               role=\\\"presentation\\\" tabindex=\\\"-1\\\"\\n               [kendoGridResizableContainer]=\\\"lockedLeafColumns.length\\\"\\n               [lockedWidth]=\\\"lockedWidth + 1\\\">\\n        <div role=\\\"presentation\\\" class=\\\"k-grid-table-wrap\\\">\\n            <table [style.width.px]=\\\"nonLockedWidth\\\" #table [virtualColumns]=\\\"virtualColumns\\\"\\n              class=\\\"k-grid-table\\\" role=\\\"presentation\\\">\\n                <colgroup kendoGridColGroup\\n                    role=\\\"presentation\\\"\\n                    [groups]=\\\"isLocked ? [] : groups\\\"\\n                    [columns]=\\\"nonLockedColumnsToRender\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\">\\n                </colgroup>\\n                <tbody kendoGridTableBody\\n                    role=\\\"presentation\\\"\\n                    [skipGroupDecoration]=\\\"isLocked\\\"\\n                    [data]=\\\"data\\\"\\n                    [groups]=\\\"groups\\\"\\n                    [showGroupFooters]=\\\"showFooter\\\"\\n                    [columns]=\\\"nonLockedColumnsToRender\\\"\\n                    [allColumns]=\\\"nonLockedLeafColumns\\\"\\n                    [detailTemplate]=\\\"detailTemplate\\\"\\n                    [noRecordsTemplate]=\\\"noRecordsTemplate\\\"\\n                    [lockedColumnsCount]=\\\"lockedLeafColumns.length\\\"\\n                    [totalColumnsCount]=\\\"leafColumns.length\\\"\\n                    [skip]=\\\"skip\\\"\\n                    [selectable]=\\\"selectable\\\"\\n                    [trackBy]=\\\"trackBy\\\"\\n                    [filterable]=\\\"filterable\\\"\\n                    [rowClass]=\\\"rowClass\\\"\\n                    [virtualColumns]=\\\"virtualColumns\\\">\\n                </tbody>\\n            </table>\\n            <kendo-resize-sensor *ngIf=\\\"isLocked\\\"></kendo-resize-sensor>\\n        </div>\\n        <kendo-resize-sensor *ngIf=\\\"isLocked || virtualColumns\\\"></kendo-resize-sensor>\\n        <div class=\\\"k-height-container\\\" role=\\\"presentation\\\">\\n            <div [style.height.px]=\\\"totalHeight\\\"></div>\\n        </div>\\n        <div *ngIf=\\\"virtualColumns\\\" class=\\\"k-width-container\\\" role=\\\"presentation\\\">\\n            <div [style.width.px]=\\\"totalWidth\\\"></div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"loading\\\" kendoGridLoading>\\n    </div>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [SCROLLER_FACTORY_TOKEN]\n      }]\n    }, {\n      type: DetailsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: SuspendService\n    }, {\n      type: GroupsService\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: ScrollSyncService\n    }, {\n      type: ResizeService\n    }, {\n      type: EditService\n    }, {\n      type: BrowserSupportService\n    }, {\n      type: NavigationService\n    }, {\n      type: ScrollRequestService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PDFService\n    }, {\n      type: ColumnInfoService\n    }];\n  }, {\n    groups: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    contentScroll: [{\n      type: Output\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    scrollBottom: [{\n      type: Output\n    }],\n    resizeSensors: [{\n      type: ViewChildren,\n      args: [ResizeSensorComponent]\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: [\"class.k-grid-container\"]\n    }],\n    hostRole: [{\n      type: HostBinding,\n      args: [\"attr.role\"]\n    }],\n    data: [{\n      type: Input\n    }],\n    total: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }],\n    detailRowHeight: [{\n      type: Input\n    }],\n    take: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    noRecordsTemplate: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    loading: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }],\n    isVirtual: [{\n      type: Input\n    }],\n    container: [{\n      type: ViewChild,\n      args: [\"container\", {\n        static: true\n      }]\n    }],\n    lockedContainer: [{\n      type: ViewChild,\n      args: [\"lockedContainer\"]\n    }],\n    lockedTable: [{\n      type: ViewChild,\n      args: [\"lockedTable\"]\n    }],\n    table: [{\n      type: ViewChild,\n      args: [\"table\"]\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the in-memory handling of data operations such as [paging]({% slug paging_grid %}),\n * [sorting]({% slug sorting_grid %}), and [grouping]({% slug groupingbasics_grid %})\n * ([more information and examples]({% slug automaticoperations_grid %})).\n */\n\n\nvar DataBindingDirective = /*#__PURE__*/function () {\n  function DataBindingDirective(grid, changeDetector, localDataChangesService) {\n    _classCallCheck(this, DataBindingDirective);\n\n    this.grid = grid;\n    this.changeDetector = changeDetector;\n    this.localDataChangesService = localDataChangesService;\n    this.state = {\n      skip: 0\n    };\n    this.originalData = [];\n\n    if (localDataChangesService) {\n      this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(this.rebind.bind(this));\n    }\n  }\n  /**\n   * Defines the number of records that will be skipped by the pager.\n   */\n\n\n  _createClass(DataBindingDirective, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngOnInit() {\n      this.applyState(this.state);\n      this.stateChangeSubscription = this.grid.dataStateChange.subscribe(this.onStateChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.stateChangeSubscription) {\n        this.stateChangeSubscription.unsubscribe();\n      }\n\n      if (this.dataChangedSubscription) {\n        this.dataChangedSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\", \"filter\"], changes)) {\n        this.rebind();\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.dataChanged) {\n        this.updateGridData();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(state$$1) {\n      this.applyState(state$$1);\n      this.rebind();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"rebind\",\n    value: function rebind() {\n      this.data = this.originalData;\n      this.updateGridData();\n      this.notifyDataChange();\n    }\n    /**\n     * Notifies the Grid that its data has changed.\n     */\n\n  }, {\n    key: \"notifyDataChange\",\n    value: function notifyDataChange() {\n      this.grid.onDataChange();\n\n      if (this.changeDetector) {\n        this.changeDetector.markForCheck();\n      }\n    }\n  }, {\n    key: \"process\",\n    value: function process(state$$1) {\n      return _process(this.originalData, state$$1);\n    }\n  }, {\n    key: \"applyState\",\n    value: function applyState(_ref29) {\n      var skip = _ref29.skip,\n          take$$1 = _ref29.take,\n          sort = _ref29.sort,\n          group = _ref29.group,\n          filter$$1 = _ref29.filter;\n      this.skip = skip;\n      this.pageSize = take$$1;\n      this.sort = sort;\n      this.group = group;\n      this.filter = filter$$1;\n    }\n  }, {\n    key: \"updateGridData\",\n    value: function updateGridData() {\n      this.grid.data = this.process(this.state);\n      this.dataChanged = false;\n    }\n  }, {\n    key: \"skip\",\n    set: function set(value) {\n      if (!isPresent(value)) {\n        value = 0;\n      }\n\n      this.grid.skip = this.state.skip = value;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n\n  }, {\n    key: \"sort\",\n    set: function set(value) {\n      this.grid.sort = this.state.sort = value;\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n\n  }, {\n    key: \"filter\",\n    set: function set(value) {\n      this.grid.filter = this.state.filter = value;\n    }\n    /**\n     * Defines the page size used by the Grid pager.\n     */\n\n  }, {\n    key: \"pageSize\",\n    set: function set(value) {\n      this.grid.pageSize = this.state.take = value;\n    }\n    /**\n     * The descriptors by which the data will be grouped.\n     */\n\n  }, {\n    key: \"group\",\n    set: function set(value) {\n      this.grid.group = this.state.group = value;\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(value) {\n      this.originalData = value || [];\n\n      if (this.localDataChangesService) {\n        this.localDataChangesService.data = value;\n      }\n\n      this.dataChanged = true;\n    }\n  }]);\n\n  return DataBindingDirective;\n}();\n\nDataBindingDirective.ɵfac = function DataBindingDirective_Factory(t) {\n  return new (t || DataBindingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nDataBindingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DataBindingDirective,\n  selectors: [[\"\", \"kendoGridBinding\", \"\"]],\n  inputs: {\n    skip: \"skip\",\n    sort: \"sort\",\n    filter: \"filter\",\n    pageSize: \"pageSize\",\n    group: \"group\",\n    data: [\"kendoGridBinding\", \"data\"]\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nDataBindingDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n\nDataBindingDirective.propDecorators = {\n  skip: [{\n    type: Input\n  }],\n  sort: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  group: [{\n    type: Input\n  }],\n  data: [{\n    type: Input,\n    args: [\"kendoGridBinding\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DataBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridBinding]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    skip: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }],\n    data: [{\n      type: Input,\n      args: [\"kendoGridBinding\"]\n    }]\n  });\n})();\n/**\n * A directive which stores the row selection state of the Grid in memory\n * ([see example]({% slug selection_grid %}#toc-during-data-operations)).\n */\n\n\nvar SelectionDirective = /*#__PURE__*/function (_Selection) {\n  _inherits(SelectionDirective, _Selection);\n\n  var _super13 = _createSuper(SelectionDirective);\n\n  function SelectionDirective(grid, cd) {\n    var _this68;\n\n    _classCallCheck(this, SelectionDirective);\n\n    _this68 = _super13.call(this, grid, cd);\n    _this68.grid = grid;\n    return _this68;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(SelectionDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (this.grid.selectable === false) {\n        this.grid.selectable = true;\n      }\n\n      this.grid.selectionDirective = this;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(SelectionDirective.prototype), \"destroy\", this).call(this);\n    }\n  }]);\n\n  return SelectionDirective;\n}(Selection);\n\nSelectionDirective.ɵfac = function SelectionDirective_Factory(t) {\n  return new (t || SelectionDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nSelectionDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectionDirective,\n  selectors: [[\"\", \"kendoGridSelectBy\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSelectionDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectBy]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * A directive which controls the expanded state of the master detail rows.\n */\n\n\nvar ExpandDetailsDirective = /*#__PURE__*/function () {\n  function ExpandDetailsDirective(grid) {\n    _classCallCheck(this, ExpandDetailsDirective);\n\n    this.grid = grid;\n    /**\n     * Fires when the expandedDetailKeys are changed.\n     */\n\n    this.expandedDetailKeysChange = new EventEmitter();\n    /**\n     * Defines the collection that will store the expanded keys.\n     */\n\n    this.expandedDetailKeys = [];\n    /**\n     * Specifies if the items should be initially expanded.\n     * @default false\n     */\n\n    this.initiallyExpanded = false;\n    this.subscriptions = new Subscription();\n    this.grid.isDetailExpanded = this.isExpanded.bind(this);\n    this.subscriptions.add(merge(this.grid.detailExpand.pipe(map(function (e) {\n      return Object.assign({\n        expand: true\n      }, e);\n    })), this.grid.detailCollapse.pipe(map(function (e) {\n      return Object.assign({\n        expand: false\n      }, e);\n    }))).subscribe(this.toggleState.bind(this)));\n  }\n  /**\n   * Defines the item key that will be stored in the `expandedDetailKeys` collection ([see example]({% slug master_detail_expanded_state_grid %}#toc-built-in-directive)).\n   */\n\n\n  _createClass(ExpandDetailsDirective, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n  }, {\n    key: \"isExpanded\",\n\n    /**\n     * @hidden\n     */\n    value: function isExpanded(args) {\n      var key = this.keyGetter(args.dataItem);\n      return this.expandedDetailKeys.indexOf(key) > -1 ? !this.initiallyExpanded : this.initiallyExpanded;\n    }\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(args) {\n      var key = this.keyGetter(args.dataItem);\n\n      if (Boolean(this.initiallyExpanded) !== args.expand) {\n        this.expandedDetailKeys.push(key);\n      } else {\n        var index = this.expandedDetailKeys.indexOf(key);\n        this.expandedDetailKeys.splice(index, 1);\n      }\n\n      this.expandedDetailKeysChange.emit(this.expandedDetailKeys);\n    }\n  }, {\n    key: \"expandDetailsKey\",\n    get: function get() {\n      return this._expandBy;\n    },\n    set: function set(key) {\n      if (isString(key)) {\n        this._expandBy = getter(key);\n      } else {\n        this._expandBy = key;\n      }\n    }\n    /**\n     *\n     * @hidden\n     * A deprecated alias for setting the `expandDetailsKey` property.\n     */\n\n  }, {\n    key: \"expandDetailBy\",\n    get: function get() {\n      return this.expandDetailsKey;\n    },\n    set: function set(key) {\n      this.expandDetailsKey = key;\n    }\n  }, {\n    key: \"keyGetter\",\n    get: function get() {\n      return this._expandBy || getter(undefined);\n    }\n  }]);\n\n  return ExpandDetailsDirective;\n}();\n\nExpandDetailsDirective.ɵfac = function ExpandDetailsDirective_Factory(t) {\n  return new (t || ExpandDetailsDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent));\n};\n\nExpandDetailsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ExpandDetailsDirective,\n  selectors: [[\"\", \"kendoGridExpandDetailsBy\", \"\"]],\n  inputs: {\n    expandedDetailKeys: \"expandedDetailKeys\",\n    initiallyExpanded: \"initiallyExpanded\",\n    expandDetailsKey: [\"kendoGridExpandDetailsBy\", \"expandDetailsKey\"],\n    expandDetailBy: \"expandDetailBy\"\n  },\n  outputs: {\n    expandedDetailKeysChange: \"expandedDetailKeysChange\"\n  },\n  exportAs: [\"kendoGridExpandDetailsBy\"]\n});\n/** @nocollapse */\n\nExpandDetailsDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }];\n};\n\nExpandDetailsDirective.propDecorators = {\n  expandedDetailKeysChange: [{\n    type: Output\n  }],\n  expandDetailsKey: [{\n    type: Input,\n    args: ['kendoGridExpandDetailsBy']\n  }],\n  expandDetailBy: [{\n    type: Input\n  }],\n  expandedDetailKeys: [{\n    type: Input\n  }],\n  initiallyExpanded: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ExpandDetailsDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridExpandDetailsBy]',\n      exportAs: 'kendoGridExpandDetailsBy'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }];\n  }, {\n    expandedDetailKeysChange: [{\n      type: Output\n    }],\n    expandedDetailKeys: [{\n      type: Input\n    }],\n    initiallyExpanded: [{\n      type: Input\n    }],\n    expandDetailsKey: [{\n      type: Input,\n      args: ['kendoGridExpandDetailsBy']\n    }],\n    expandDetailBy: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar Messages = /*#__PURE__*/function (_ComponentMessages) {\n  _inherits(Messages, _ComponentMessages);\n\n  var _super14 = _createSuper(Messages);\n\n  function Messages() {\n    _classCallCheck(this, Messages);\n\n    return _super14.apply(this, arguments);\n  }\n\n  return Messages;\n}(ComponentMessages);\n\nMessages.ɵfac = function Messages_Factory(t) {\n  return ɵMessages_BaseFactory(t || Messages);\n};\n\nMessages.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: Messages,\n  inputs: {\n    groupPanelEmpty: \"groupPanelEmpty\",\n    noRecords: \"noRecords\",\n    pagerFirstPage: \"pagerFirstPage\",\n    pagerLastPage: \"pagerLastPage\",\n    pagerPreviousPage: \"pagerPreviousPage\",\n    pagerNextPage: \"pagerNextPage\",\n    pagerPage: \"pagerPage\",\n    pagerItemsPerPage: \"pagerItemsPerPage\",\n    pagerOf: \"pagerOf\",\n    pagerItems: \"pagerItems\",\n    pagerPageNumberInputTitle: \"pagerPageNumberInputTitle\",\n    filter: \"filter\",\n    filterEqOperator: \"filterEqOperator\",\n    filterNotEqOperator: \"filterNotEqOperator\",\n    filterIsNullOperator: \"filterIsNullOperator\",\n    filterIsNotNullOperator: \"filterIsNotNullOperator\",\n    filterIsEmptyOperator: \"filterIsEmptyOperator\",\n    filterIsNotEmptyOperator: \"filterIsNotEmptyOperator\",\n    filterStartsWithOperator: \"filterStartsWithOperator\",\n    filterContainsOperator: \"filterContainsOperator\",\n    filterNotContainsOperator: \"filterNotContainsOperator\",\n    filterEndsWithOperator: \"filterEndsWithOperator\",\n    filterGteOperator: \"filterGteOperator\",\n    filterGtOperator: \"filterGtOperator\",\n    filterLteOperator: \"filterLteOperator\",\n    filterLtOperator: \"filterLtOperator\",\n    filterIsTrue: \"filterIsTrue\",\n    filterIsFalse: \"filterIsFalse\",\n    filterBooleanAll: \"filterBooleanAll\",\n    filterAfterOrEqualOperator: \"filterAfterOrEqualOperator\",\n    filterAfterOperator: \"filterAfterOperator\",\n    filterBeforeOperator: \"filterBeforeOperator\",\n    filterBeforeOrEqualOperator: \"filterBeforeOrEqualOperator\",\n    filterFilterButton: \"filterFilterButton\",\n    filterClearButton: \"filterClearButton\",\n    filterAndLogic: \"filterAndLogic\",\n    filterOrLogic: \"filterOrLogic\",\n    loading: \"loading\",\n    columnMenu: \"columnMenu\",\n    columns: \"columns\",\n    lock: \"lock\",\n    unlock: \"unlock\",\n    sortable: \"sortable\",\n    sortAscending: \"sortAscending\",\n    sortDescending: \"sortDescending\",\n    sortedAscending: \"sortedAscending\",\n    sortedDescending: \"sortedDescending\",\n    sortedDefault: \"sortedDefault\",\n    columnsApply: \"columnsApply\",\n    columnsReset: \"columnsReset\",\n    detailExpand: \"detailExpand\",\n    detailCollapse: \"detailCollapse\",\n    filterDateToday: \"filterDateToday\",\n    filterDateToggle: \"filterDateToggle\",\n    filterNumericDecrement: \"filterNumericDecrement\",\n    filterNumericIncrement: \"filterNumericIncrement\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nMessages.propDecorators = {\n  groupPanelEmpty: [{\n    type: Input\n  }],\n  noRecords: [{\n    type: Input\n  }],\n  pagerFirstPage: [{\n    type: Input\n  }],\n  pagerLastPage: [{\n    type: Input\n  }],\n  pagerPreviousPage: [{\n    type: Input\n  }],\n  pagerNextPage: [{\n    type: Input\n  }],\n  pagerPage: [{\n    type: Input\n  }],\n  pagerItemsPerPage: [{\n    type: Input\n  }],\n  pagerOf: [{\n    type: Input\n  }],\n  pagerItems: [{\n    type: Input\n  }],\n  pagerPageNumberInputTitle: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  filterEqOperator: [{\n    type: Input\n  }],\n  filterNotEqOperator: [{\n    type: Input\n  }],\n  filterIsNullOperator: [{\n    type: Input\n  }],\n  filterIsNotNullOperator: [{\n    type: Input\n  }],\n  filterIsEmptyOperator: [{\n    type: Input\n  }],\n  filterIsNotEmptyOperator: [{\n    type: Input\n  }],\n  filterStartsWithOperator: [{\n    type: Input\n  }],\n  filterContainsOperator: [{\n    type: Input\n  }],\n  filterNotContainsOperator: [{\n    type: Input\n  }],\n  filterEndsWithOperator: [{\n    type: Input\n  }],\n  filterGteOperator: [{\n    type: Input\n  }],\n  filterGtOperator: [{\n    type: Input\n  }],\n  filterLteOperator: [{\n    type: Input\n  }],\n  filterLtOperator: [{\n    type: Input\n  }],\n  filterIsTrue: [{\n    type: Input\n  }],\n  filterIsFalse: [{\n    type: Input\n  }],\n  filterBooleanAll: [{\n    type: Input\n  }],\n  filterAfterOrEqualOperator: [{\n    type: Input\n  }],\n  filterAfterOperator: [{\n    type: Input\n  }],\n  filterBeforeOperator: [{\n    type: Input\n  }],\n  filterBeforeOrEqualOperator: [{\n    type: Input\n  }],\n  filterFilterButton: [{\n    type: Input\n  }],\n  filterClearButton: [{\n    type: Input\n  }],\n  filterAndLogic: [{\n    type: Input\n  }],\n  filterOrLogic: [{\n    type: Input\n  }],\n  loading: [{\n    type: Input\n  }],\n  columnMenu: [{\n    type: Input\n  }],\n  columns: [{\n    type: Input\n  }],\n  lock: [{\n    type: Input\n  }],\n  unlock: [{\n    type: Input\n  }],\n  sortable: [{\n    type: Input\n  }],\n  sortAscending: [{\n    type: Input\n  }],\n  sortDescending: [{\n    type: Input\n  }],\n  sortedAscending: [{\n    type: Input\n  }],\n  sortedDescending: [{\n    type: Input\n  }],\n  sortedDefault: [{\n    type: Input\n  }],\n  columnsApply: [{\n    type: Input\n  }],\n  columnsReset: [{\n    type: Input\n  }],\n  detailExpand: [{\n    type: Input\n  }],\n  detailCollapse: [{\n    type: Input\n  }],\n  filterDateToday: [{\n    type: Input\n  }],\n  filterDateToggle: [{\n    type: Input\n  }],\n  filterNumericDecrement: [{\n    type: Input\n  }],\n  filterNumericIncrement: [{\n    type: Input\n  }]\n};\nvar ɵMessages_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(Messages);\n/**\n * @hidden\n */\n\nvar LocalizedMessagesDirective = /*#__PURE__*/function (_Messages) {\n  _inherits(LocalizedMessagesDirective, _Messages);\n\n  var _super15 = _createSuper(LocalizedMessagesDirective);\n\n  function LocalizedMessagesDirective(service) {\n    var _this69;\n\n    _classCallCheck(this, LocalizedMessagesDirective);\n\n    _this69 = _super15.call(this);\n    _this69.service = service;\n    return _this69;\n  }\n\n  return LocalizedMessagesDirective;\n}(Messages);\n\nLocalizedMessagesDirective.ɵfac = function LocalizedMessagesDirective_Factory(t) {\n  return new (t || LocalizedMessagesDirective)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLocalizedMessagesDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LocalizedMessagesDirective,\n  selectors: [[\"\", \"kendoGridLocalizedMessages\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return LocalizedMessagesDirective;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nLocalizedMessagesDirective.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LocalizedMessagesDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return LocalizedMessagesDirective;\n        })\n      }],\n      selector: '[kendoGridLocalizedMessages]'\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_grid %}#toc-localization)).\n */\n\n\nvar CustomMessagesComponent = /*#__PURE__*/function (_Messages2) {\n  _inherits(CustomMessagesComponent, _Messages2);\n\n  var _super16 = _createSuper(CustomMessagesComponent);\n\n  function CustomMessagesComponent(service) {\n    var _this70;\n\n    _classCallCheck(this, CustomMessagesComponent);\n\n    _this70 = _super16.call(this);\n    _this70.service = service;\n    return _this70;\n  }\n\n  _createClass(CustomMessagesComponent, [{\n    key: \"override\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return CustomMessagesComponent;\n}(Messages);\n\nCustomMessagesComponent.ɵfac = function CustomMessagesComponent_Factory(t) {\n  return new (t || CustomMessagesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nCustomMessagesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CustomMessagesComponent,\n  selectors: [[\"kendo-grid-messages\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: Messages,\n    useExisting: forwardRef(function () {\n      return CustomMessagesComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CustomMessagesComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCustomMessagesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CustomMessagesComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: Messages,\n        useExisting: forwardRef(function () {\n          return CustomMessagesComponent;\n        })\n      }],\n      selector: 'kendo-grid-messages',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar FilterRowComponent = function FilterRowComponent(localization) {\n  _classCallCheck(this, FilterRowComponent);\n\n  this.localization = localization;\n  this.columns = [];\n  this.groups = [];\n  this.filterRowClass = true;\n  this.filterLabel = this.localization.get('filter');\n};\n\nFilterRowComponent.ɵfac = function FilterRowComponent_Factory(t) {\n  return new (t || FilterRowComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nFilterRowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterRowComponent,\n  selectors: [[\"\", \"kendoGridFilterRow\", \"\"]],\n  hostVars: 2,\n  hostBindings: function FilterRowComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filter-row\", ctx.filterRowClass);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    filter: \"filter\",\n    detailTemplate: \"detailTemplate\",\n    logicalRowIndex: \"logicalRowIndex\",\n    lockedColumnsCount: \"lockedColumnsCount\"\n  },\n  attrs: _c122,\n  decls: 3,\n  vars: 3,\n  consts: [[\"role\", \"presentation\", 3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 3, \"k-hierarchy-cell\", 4, \"ngIf\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\"], [\"kendoGridFilterCell\", \"\", \"kendoGridLogicalCell\", \"\", 3, \"column\", \"filter\", \"logicalRowIndex\", \"logicalColIndex\"]],\n  template: function FilterRowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FilterRowComponent_td_0_Template, 1, 2, \"td\", 0);\n      ɵngcc0.ɵɵtemplate(1, FilterRowComponent_td_1_Template, 1, 2, \"td\", 1);\n      ɵngcc0.ɵɵtemplate(2, FilterRowComponent_td_2_Template, 1, 5, \"td\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.detailTemplate == null ? null : ctx.detailTemplate.templateRef);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.columns);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgForOf, ɵngcc1.NgIf, FilterCellComponent, LogicalCellDirective];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterRowComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nFilterRowComponent.propDecorators = {\n  columns: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }],\n  logicalRowIndex: [{\n    type: Input\n  }],\n  lockedColumnsCount: [{\n    type: Input\n  }],\n  filterRowClass: [{\n    type: HostBinding,\n    args: ['class.k-filter-row']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterRowComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFilterRow]',\n      template: \"\\n      <td\\n         [class.k-group-cell]=\\\"true\\\"\\n         *ngFor=\\\"let g of groups\\\"\\n         role=\\\"presentation\\\">\\n      </td>\\n      <td\\n         [class.k-hierarchy-cell]=\\\"true\\\"\\n         *ngIf=\\\"detailTemplate?.templateRef\\\"\\n         role=\\\"presentation\\\">\\n      </td>\\n      <td *ngFor=\\\"let column of columns; let columnIndex = index\\\"\\n          [attr.aria-label]=\\\"filterLabel\\\"\\n          kendoGridFilterCell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n          kendoGridLogicalCell\\n            [logicalRowIndex]=\\\"logicalRowIndex\\\"\\n            [logicalColIndex]=\\\"lockedColumnsCount + columnIndex\\\"\\n      ></td>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    filterRowClass: [{\n      type: HostBinding,\n      args: ['class.k-filter-row']\n    }],\n    filter: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }]\n  });\n})();\n\nvar areDifferent = function areDifferent(a, b) {\n  return a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\n};\n\nvar isChanged$1 = function isChanged$1(a, b) {\n  if (a.length !== b.length) {\n    return true;\n  }\n\n  for (var idx = 0, len = a.length; idx < len; idx++) {\n    var prev = a[idx];\n    var curr = b[idx];\n\n    if (isCompositeFilterDescriptor(prev)) {\n      // tslint:disable-next-line:no-use-before-declare\n      if (diffFilters(prev, curr[idx])) {\n        return true;\n      }\n    } else if (areDifferent(prev, curr)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar copyObject = function copyObject(obj) {\n  var result = {};\n  Object.assign(result, obj);\n\n  if (obj.constructor !== Object) {\n    var proto = obj.constructor.prototype;\n    Object.getOwnPropertyNames(proto).forEach(function (property) {\n      if (property !== 'constructor' && proto.hasOwnProperty(property)) {\n        result[property] = obj[property];\n      }\n    });\n  }\n\n  return result;\n};\n\nvar cloneFilter = function cloneFilter(filter$$1) {\n  return copyObject(filter$$1);\n};\n/**\n * @hidden\n */\n\n\nvar cloneFilters = function cloneFilters(filter$$1) {\n  if (!filter$$1) {\n    return;\n  }\n\n  if (isCompositeFilterDescriptor(filter$$1)) {\n    return {\n      filters: cloneFilters(filter$$1.filters),\n      logic: filter$$1.logic\n    };\n  } else if (Array.isArray(filter$$1)) {\n    return filter$$1.map(cloneFilters);\n  }\n\n  return cloneFilter(filter$$1);\n};\n/**\n * @hidden\n */\n\n\nvar diffFilters = function diffFilters(a, b) {\n  if (isPresent(a) && !isPresent(b)) {\n    return true;\n  }\n\n  if (!isPresent(a) && isPresent(b)) {\n    return true;\n  }\n\n  return isPresent(a) && isPresent(b) && isChanged$1(a.filters, b.filters);\n};\n/**\n * @hidden\n */\n\n\nvar FilterCellComponent = /*#__PURE__*/function () {\n  function FilterCellComponent() {\n    _classCallCheck(this, FilterCellComponent);\n\n    this._templateContext = {};\n  }\n\n  _createClass(FilterCellComponent, [{\n    key: \"filter\",\n    get: function get() {\n      return this._filter;\n    },\n    set: function set(value) {\n      this._filter = cloneFilters(value);\n    }\n  }, {\n    key: \"templateContext\",\n    get: function get() {\n      this._templateContext.column = this.column;\n      this._templateContext.filter = this.filter; // tslint:disable-next-line:no-string-literal\n\n      this._templateContext[\"$implicit\"] = this.filter;\n      return this._templateContext;\n    }\n  }, {\n    key: \"hasTemplate\",\n    get: function get() {\n      return isPresent(this.column.filterCellTemplateRef);\n    }\n  }, {\n    key: \"isFilterable\",\n    get: function get() {\n      return isPresent(this.column) && !isNullOrEmptyString(this.column.field) && this.column.filterable;\n    }\n  }]);\n\n  return FilterCellComponent;\n}();\n\nFilterCellComponent.ɵfac = function FilterCellComponent_Factory(t) {\n  return new (t || FilterCellComponent)();\n};\n\nFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterCellComponent,\n  selectors: [[\"\", \"kendoGridFilterCell\", \"\"]],\n  inputs: {\n    filter: \"filter\",\n    column: \"column\"\n  },\n  attrs: _c123,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"kendoFilterCellHost\", \"\", 3, \"column\", \"filter\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function FilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FilterCellComponent_ng_template_0_Template, 3, 3, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFilterable);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, FilterCellHostDirective, ɵngcc1.NgTemplateOutlet];\n  },\n  encapsulation: 2\n});\nFilterCellComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFilterCell]',\n      template: \"\\n        <ng-template [ngIf]=\\\"isFilterable\\\">\\n            <ng-container [ngSwitch]=\\\"hasTemplate\\\">\\n                <ng-container *ngSwitchCase=\\\"false\\\">\\n                    <ng-container kendoFilterCellHost [column]=\\\"column\\\" [filter]=\\\"filter\\\"></ng-container>\\n                </ng-container>\\n                <ng-container *ngSwitchCase=\\\"true\\\">\\n                    <ng-template\\n                        *ngIf=\\\"column.filterCellTemplateRef\\\"\\n                        [ngTemplateOutlet]=\\\"column.filterCellTemplateRef\\\"\\n                        [ngTemplateOutletContext]=\\\"templateContext\\\">\\n                    </ng-template>\\n                </ng-container>\\n            </ng-container>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    filter: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }]\n  });\n})();\n\nvar localizeOperators = function localizeOperators(operators) {\n  return function (localization) {\n    return Object.keys(operators).reduce(function (acc, key) {\n      acc[operators[key]] = localization.get(key);\n      return acc;\n    }, {});\n  };\n}; // tslint:disable-line:align\n\n\nvar operatorTexts = localizeOperators({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\",\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterAfterOrEqualOperator\": \"after-eq\",\n  \"filterAfterOperator\": \"after\",\n  \"filterBeforeOrEqualOperator\": \"before-eq\",\n  \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\n\nvar toJSON = function toJSON(xs) {\n  return xs.map(function (x) {\n    return x.toJSON();\n  });\n};\n/**\n * @hidden\n */\n\n\nvar FilterOperatorBase = /*#__PURE__*/function () {\n  function FilterOperatorBase(operator, localization) {\n    _classCallCheck(this, FilterOperatorBase);\n\n    this.operator = operator;\n    this.localization = localization;\n    this.messages = operatorTexts(this.localization);\n    this._text = this.messages[this.operator];\n    this.localization.changes.subscribe(this.refreshText.bind(this));\n  }\n  /**\n   * The text that will be displayed in the drop-down list.\n   * @readonly\n   * @type {string}\n   * @memberOf FilterOperatorBase\n   */\n\n\n  _createClass(FilterOperatorBase, [{\n    key: \"toJSON\",\n\n    /**\n     * @hidden\n     */\n    value: function toJSON() {\n      return {\n        text: this.text,\n        value: this.operator\n      };\n    }\n  }, {\n    key: \"refreshText\",\n    value: function refreshText() {\n      var update = this._text === this.messages[this.operator];\n      this.messages = operatorTexts(this.localization);\n\n      if (update) {\n        this._text = this.messages[this.operator];\n      }\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this._text;\n    }\n    /**\n     *\n     */\n    ,\n    set: function set(value) {\n      this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n    }\n  }]);\n\n  return FilterOperatorBase;\n}();\n\nFilterOperatorBase.ɵfac = function FilterOperatorBase_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nFilterOperatorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterOperatorBase,\n  inputs: {\n    text: \"text\"\n  }\n});\nFilterOperatorBase.propDecorators = {\n  text: [{\n    type: Input\n  }]\n};\n\nvar insertDefaultFilter = function insertDefaultFilter(index, rootFilter, filter$$1) {\n  rootFilter = rootFilter || {\n    filters: [],\n    logic: \"and\"\n  };\n  rootFilter.filters[index] = filter$$1;\n  return filter$$1;\n};\n/**\n * @hidden\n */\n\n\nvar setFilter = function setFilter(index, filter$$1, field, defaultOperator) {\n  if (isPresent(filter$$1) && isPresent(filter$$1.filters) && filter$$1.filters.length > index) {\n    return filter$$1.filters[index];\n  } else {\n    return insertDefaultFilter(index, filter$$1, {\n      field: field,\n      operator: defaultOperator\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nvar logicOperators = function logicOperators(localization) {\n  return [{\n    text: localization.get(\"filterAndLogic\"),\n    value: \"and\"\n  }, {\n    text: localization.get(\"filterOrLogic\"),\n    value: \"or\"\n  }];\n};\n/**\n * @hidden\n */\n\n\nvar flatten = function flatten(filter$$1) {\n  if (isPresent(filter$$1.filters)) {\n    return filter$$1.filters.reduce(function (acc, curr) {\n      return acc.concat(isCompositeFilterDescriptor(curr) ? flatten(curr) : [curr]);\n    }, []);\n  }\n\n  return [];\n};\n\nvar trimFilterByField = function trimFilterByField(filter$$1, field) {\n  if (isPresent(filter$$1) && isPresent(filter$$1.filters)) {\n    filter$$1.filters = filter$$1.filters.filter(function (x) {\n      if (isCompositeFilterDescriptor(x)) {\n        trimFilterByField(x, field);\n        return x.filters.length;\n      } else {\n        return x.field !== field;\n      }\n    });\n  }\n};\n/**\n * @hidden\n */\n\n\nvar _filtersByField3 = function filtersByField(filter$$1, field) {\n  return flatten(filter$$1 || {}).filter(function (x) {\n    return x.field === field;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar _filterByField = function filterByField(filter$$1, field) {\n  var _filtersByField = _filtersByField3(filter$$1, field),\n      _filtersByField2 = _slicedToArray(_filtersByField, 1),\n      currentFilter = _filtersByField2[0];\n\n  return currentFilter;\n};\n/**\n * @hidden\n */\n\n\nvar _removeFilter = function removeFilter(filter$$1, field) {\n  trimFilterByField(filter$$1, field);\n  return filter$$1;\n};\n/**\n * @hidden\n */\n\n\nvar localizeOperators$1 = function localizeOperators$1(operators) {\n  return function (localization) {\n    return Object.keys(operators).map(function (key) {\n      return {\n        text: localization.get(key),\n        value: operators[key]\n      };\n    });\n  };\n};\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-row)).\n */\n\n\nvar BaseFilterCellComponent = /*#__PURE__*/function () {\n  function BaseFilterCellComponent(filterService) {\n    _classCallCheck(this, BaseFilterCellComponent);\n\n    this.filterService = filterService;\n    this.operatorList = new QueryList();\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(BaseFilterCellComponent, [{\n    key: \"ngAfterContentInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngAfterContentInit() {\n      var _this71 = this;\n\n      this.operationListSubscription = observe(this.operatorList).pipe(map(function (q) {\n        return q.toArray();\n      }), map(toJSON)).subscribe(function (x) {\n        _this71.operators = x;\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.operationListSubscription) {\n        this.operationListSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"filterByField\",\n    value: function filterByField(field) {\n      return _filterByField(this.filter, field);\n    }\n  }, {\n    key: \"filtersByField\",\n    value: function filtersByField(field) {\n      return _filtersByField3(this.filter, field);\n    }\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter(field) {\n      return _removeFilter(this.filter, field);\n    }\n  }, {\n    key: \"updateFilter\",\n    value: function updateFilter(filter$$1) {\n      var root = this.filter || {\n        filters: [],\n        logic: \"and\"\n      };\n\n      var _flatten$filter = flatten(root).filter(function (x) {\n        return x.field === filter$$1.field;\n      }),\n          _flatten$filter2 = _slicedToArray(_flatten$filter, 1),\n          currentFilter = _flatten$filter2[0];\n\n      if (!isPresent(currentFilter)) {\n        root.filters.push(filter$$1);\n      } else {\n        Object.assign(currentFilter, filter$$1);\n      }\n\n      return root;\n    }\n  }, {\n    key: \"applyFilter\",\n    value: function applyFilter(filter$$1) {\n      this.filterService.filter(filter$$1);\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"operators\",\n    get: function get() {\n      return this._operators.length ? this._operators : this.defaultOperators;\n    },\n    set: function set(values) {\n      this._operators = values;\n    }\n  }]);\n\n  return BaseFilterCellComponent;\n}();\n\nBaseFilterCellComponent.ɵfac = function BaseFilterCellComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nBaseFilterCellComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BaseFilterCellComponent,\n  contentQueries: function BaseFilterCellComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterOperatorBase, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.operatorList = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function BaseFilterCellComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  }\n});\nBaseFilterCellComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  operatorList: [{\n    type: ContentChildren,\n    args: [FilterOperatorBase]\n  }]\n}; // tslint:disable:no-access-missing-member\n\nvar numericOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterGteOperator\": \"gte\",\n  \"filterGtOperator\": \"gt\",\n  \"filterLteOperator\": \"lte\",\n  \"filterLtOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * Represents a base numeric filter component.\n */\n\nvar NumericFilterComponent = /*#__PURE__*/function (_BaseFilterCellCompon) {\n  _inherits(NumericFilterComponent, _BaseFilterCellCompon);\n\n  var _super17 = _createSuper(NumericFilterComponent);\n\n  function NumericFilterComponent(filterService, localization) {\n    var _this72;\n\n    _classCallCheck(this, NumericFilterComponent);\n\n    _this72 = _super17.call(this, filterService);\n    _this72.localization = localization;\n    /**\n     * The default filter operator. Defaults to `eq`.\n     * @type {string}\n     */\n\n    _this72.operator = \"eq\";\n    /**\n     * Specifies the value that is used to increment or decrement the component value.\n     * @type {numeric}\n     */\n\n    _this72.step = 1;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * @type {boolean}\n     */\n\n    _this72.spinners = true;\n    _this72.defaultOperators = numericOperators(_this72.localization);\n    return _this72;\n  }\n  /**\n   * Specifies the number format used when the component is not focused.\n   * By default, the `column.format` value is used (if set).\n   */\n\n\n  _createClass(NumericFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      _get(_getPrototypeOf(NumericFilterComponent.prototype), \"ngOnDestroy\", this).call(this);\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.defaultOperators = numericOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n  }, {\n    key: \"format\",\n    set: function set(value) {\n      this._format = value;\n    }\n    /**\n     * Specifies the number format used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n    ,\n    get: function get() {\n      return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n  }, {\n    key: \"columnFormat\",\n    get: function get() {\n      return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"n2\";\n    }\n  }]);\n\n  return NumericFilterComponent;\n}(BaseFilterCellComponent);\n\nNumericFilterComponent.ɵfac = function NumericFilterComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nNumericFilterComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: NumericFilterComponent,\n  inputs: {\n    operator: \"operator\",\n    step: \"step\",\n    spinners: \"spinners\",\n    format: \"format\",\n    column: \"column\",\n    filter: \"filter\",\n    min: \"min\",\n    max: \"max\",\n    decimals: \"decimals\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nNumericFilterComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  spinners: [{\n    type: Input\n  }],\n  decimals: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }]\n};\n/**\n * Represents a numeric filter cell.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-numeric-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-numeric-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\nvar NumericFilterCellComponent = /*#__PURE__*/function (_NumericFilterCompone) {\n  _inherits(NumericFilterCellComponent, _NumericFilterCompone);\n\n  var _super18 = _createSuper(NumericFilterCellComponent);\n\n  function NumericFilterCellComponent(filterService, localization) {\n    var _this73;\n\n    _classCallCheck(this, NumericFilterCellComponent);\n\n    _this73 = _super18.call(this, filterService, localization);\n    _this73.localization = localization;\n    /**\n     * Determines the delay time (in milliseconds) before the filter value is submitted.\n     * A value of `0` indicates no delay. The default value is `500`.\n     * @type {boolean}\n     */\n\n    _this73.filterDelay = 500;\n    /**\n     * Determines if the drop-down filter operators will be displayed.\n     * The default value is `true`.\n     * @type {boolean}\n     */\n\n    _this73.showOperators = true;\n    return _this73;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(NumericFilterCellComponent, [{\n    key: \"messageFor\",\n    value: function messageFor(key) {\n      return this.localization.get(key);\n    }\n  }]);\n\n  return NumericFilterCellComponent;\n}(NumericFilterComponent);\n\nNumericFilterCellComponent.ɵfac = function NumericFilterCellComponent_Factory(t) {\n  return new (t || NumericFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nNumericFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NumericFilterCellComponent,\n  selectors: [[\"kendo-grid-numeric-filter-cell\"]],\n  inputs: {\n    filterDelay: \"filterDelay\",\n    showOperators: \"showOperators\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 3, \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n  template: function NumericFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n      ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"filterDelay\", ctx.filterDelay)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n    }\n  },\n  directives: function directives() {\n    return [FilterCellWrapperComponent, ɵngcc3.NumericTextBoxComponent, FocusableDirective, FilterInputDirective, ɵngcc3.NumericTextBoxCustomMessagesComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNumericFilterCellComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nNumericFilterCellComponent.propDecorators = {\n  filterDelay: [{\n    type: Input\n  }],\n  showOperators: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NumericFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-cell',\n      template: \"\\n        <kendo-grid-filter-wrapper-cell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [showOperators]=\\\"showOperators\\\"\\n        >\\n            <kendo-numerictextbox\\n                kendoGridFocusable\\n                kendoFilterInput\\n                [filterDelay]=\\\"filterDelay\\\"\\n                [autoCorrect]=\\\"true\\\"\\n                [value]=\\\"currentFilter?.value\\\"\\n                [format]=\\\"format\\\"\\n                [decimals]=\\\"decimals\\\"\\n                [spinners]=\\\"spinners\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [step]=\\\"step\\\"\\n            >\\n                <kendo-numerictextbox-messages\\n                    [increment]=\\\"messageFor('filterNumericIncrement')\\\"\\n                    [decrement]=\\\"messageFor('filterNumericDecrement')\\\"\\n                >\\n                </kendo-numerictextbox-messages>\\n            </kendo-numerictextbox>\\n        </kendo-grid-filter-wrapper-cell>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    filterDelay: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar FilterInputDirective = /*#__PURE__*/function () {\n  function FilterInputDirective(valueAccessors, ngZone, element, renderer) {\n    var _this74 = this;\n\n    _classCallCheck(this, FilterInputDirective);\n\n    this.change = new EventEmitter();\n    this.composing = false;\n    this.filterDelay = 500;\n    this.changeRequests = new Subject();\n    this.accessor = valueAccessors[0];\n    ngZone.runOutsideAngular(function () {\n      var unsubscribeStart = renderer.listen(element.nativeElement, 'compositionstart', function () {\n        return _this74.composing = true;\n      });\n      var unsubscribeEnd = renderer.listen(element.nativeElement, 'compositionend', function () {\n        return _this74.composing = false;\n      });\n\n      _this74.unsubscribeEvents = function () {\n        unsubscribeStart();\n        unsubscribeEnd();\n      };\n    });\n  }\n\n  _createClass(FilterInputDirective, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this75 = this;\n\n      this.accessor.registerOnChange(function (x) {\n        return _this75.filterDelay > 0 ? _this75.changeRequests.next(x) : _this75.change.emit(x);\n      });\n      this.subscribeChanges();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isChanged('filterDelay', changes)) {\n        this.unsubscribeChanges();\n        this.subscribeChanges();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.unsubscribeChanges();\n      this.unsubscribeEvents();\n    }\n  }, {\n    key: \"subscribeChanges\",\n    value: function subscribeChanges() {\n      var _this76 = this;\n\n      this.changeRequestsSubscription = this.changeRequests.pipe(debounceTime(this.filterDelay), filter(function () {\n        return !_this76.composing;\n      })).subscribe(function (x) {\n        return _this76.change.emit(x);\n      });\n    }\n  }, {\n    key: \"unsubscribeChanges\",\n    value: function unsubscribeChanges() {\n      if (this.changeRequestsSubscription) {\n        this.changeRequestsSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"value\",\n    set: function set(value) {\n      this.accessor.writeValue(value);\n    }\n  }, {\n    key: \"disabled\",\n    set: function set(value) {\n      this.accessor.setDisabledState(value);\n    }\n  }]);\n\n  return FilterInputDirective;\n}();\n\nFilterInputDirective.ɵfac = function FilterInputDirective_Factory(t) {\n  return new (t || FilterInputDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nFilterInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterInputDirective,\n  selectors: [[\"\", \"kendoFilterInput\", \"\"]],\n  inputs: {\n    filterDelay: \"filterDelay\",\n    value: \"value\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nFilterInputDirective.ctorParameters = function () {\n  return [{\n    type: Array,\n    decorators: [{\n      type: Self\n    }, {\n      type: Inject,\n      args: [NG_VALUE_ACCESSOR]\n    }]\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\nFilterInputDirective.propDecorators = {\n  filterDelay: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterInputDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterInput]'\n    }]\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Self\n      }, {\n        type: Inject,\n        args: [NG_VALUE_ACCESSOR]\n      }]\n    }, {\n      type: NgZone\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    filterDelay: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n\nvar EMPTY_VALUE_OPERATORS = new Set(['isnull', 'isnotnull', 'isempty', 'isnotempty']);\n\nvar isEmptyValueOperator = function isEmptyValueOperator(operator) {\n  return EMPTY_VALUE_OPERATORS.has(operator);\n};\n/**\n * @hidden\n */\n\n\nvar FilterInputWrapperComponent = /*#__PURE__*/function (_BaseFilterCellCompon2) {\n  _inherits(FilterInputWrapperComponent, _BaseFilterCellCompon2);\n\n  var _super19 = _createSuper(FilterInputWrapperComponent);\n\n  function FilterInputWrapperComponent(filterService) {\n    var _this77;\n\n    _classCallCheck(this, FilterInputWrapperComponent);\n\n    _this77 = _super19.call(this, filterService);\n    _this77.operators = [];\n    return _this77;\n  }\n\n  _createClass(FilterInputWrapperComponent, [{\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      if (isPresent(this.input)) {\n        this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n        this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      _get(_getPrototypeOf(FilterInputWrapperComponent.prototype), \"ngOnDestroy\", this).call(this);\n\n      if (this.changeSubscription) {\n        this.changeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n        this.filterChange(isNullOrEmptyString(value) ? this.removeFilter(this.column.field) : this.updateFilter({\n          field: this.column.field,\n          operator: this.currentOperator,\n          value: value\n        }));\n      }\n    }\n  }, {\n    key: \"onClear\",\n    value: function onClear() {\n      this.onChange(null);\n      this.filterInputDisabled = isEmptyValueOperator(this.defaultOperator);\n    }\n  }, {\n    key: \"applyNoValueFilter\",\n    value: function applyNoValueFilter(operator) {\n      this.filterChange(this.updateFilter({\n        field: this.column.field,\n        operator: operator,\n        value: null\n      }));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isChanged(\"filter\", changes, false)) {\n        this._operator = null;\n        this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n      }\n    }\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField(this.column.field);\n    }\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      var filter$$1 = this.currentFilter;\n\n      if (!this._operator) {\n        this._operator = filter$$1 ? filter$$1.operator : this.defaultOperator;\n      }\n\n      return this._operator;\n    },\n    set: function set(value) {\n      this._operator = value;\n      var emptyValueOperator = isEmptyValueOperator(value);\n      this.filterInputDisabled = emptyValueOperator;\n\n      if (emptyValueOperator) {\n        this.applyNoValueFilter(value);\n      } else if (!isBlank(value) && isPresent(this.currentFilter)) {\n        this.onChange(this.currentFilter.value);\n      }\n    }\n  }, {\n    key: \"defaultOperator\",\n    get: function get() {\n      if (!isNullOrEmptyString(this._defaultOperator)) {\n        return this._defaultOperator;\n      } else if (this.operators && this.operators.length) {\n        return this.operators[0].value;\n      }\n\n      return \"eq\";\n    },\n    set: function set(value) {\n      this._defaultOperator = value;\n    }\n  }, {\n    key: \"filterInputDisabled\",\n    set: function set(disabled) {\n      if (!this.input) {\n        return;\n      }\n\n      this.input.disabled = disabled;\n    }\n  }]);\n\n  return FilterInputWrapperComponent;\n}(BaseFilterCellComponent);\n\nFilterInputWrapperComponent.ɵfac = function FilterInputWrapperComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nFilterInputWrapperComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterInputWrapperComponent,\n  contentQueries: function FilterInputWrapperComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, FilterInputDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    operators: \"operators\",\n    defaultOperator: \"defaultOperator\",\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature]\n});\nFilterInputWrapperComponent.propDecorators = {\n  operators: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  input: [{\n    type: ContentChild,\n    args: [FilterInputDirective]\n  }],\n  defaultOperator: [{\n    type: Input\n  }]\n};\nvar EMPTY_FILTER_OPERATORS = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n/**\n * @hidden\n */\n\nvar FilterCellWrapperComponent = /*#__PURE__*/function (_FilterInputWrapperCo) {\n  _inherits(FilterCellWrapperComponent, _FilterInputWrapperCo);\n\n  var _super20 = _createSuper(FilterCellWrapperComponent);\n\n  function FilterCellWrapperComponent(filterService) {\n    var _this78;\n\n    _classCallCheck(this, FilterCellWrapperComponent);\n\n    _this78 = _super20.call(this, filterService);\n    _this78.showOperators = true;\n    return _this78;\n  }\n\n  _createClass(FilterCellWrapperComponent, [{\n    key: \"filterChange\",\n    value: function filterChange(filter$$1) {\n      this.applyFilter(filter$$1);\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"overrideBaseClasses\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"showButton\",\n    get: function get() {\n      var filter$$1 = this.currentFilter;\n      return isPresent(filter$$1) && (!isNullOrEmptyString(filter$$1.value) || EMPTY_FILTER_OPERATORS.indexOf(String(filter$$1.operator)) >= 0);\n    }\n  }]);\n\n  return FilterCellWrapperComponent;\n}(FilterInputWrapperComponent);\n\nFilterCellWrapperComponent.ɵfac = function FilterCellWrapperComponent_Factory(t) {\n  return new (t || FilterCellWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService));\n};\n\nFilterCellWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterCellWrapperComponent,\n  selectors: [[\"kendo-grid-filter-wrapper-cell\"]],\n  hostVars: 4,\n  hostBindings: function FilterCellWrapperComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell-wrapper\", ctx.hostClasses)(\"k-filtercell\", ctx.overrideBaseClasses);\n    }\n  },\n  inputs: {\n    showOperators: \"showOperators\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c124,\n  decls: 2,\n  vars: 4,\n  consts: [[3, \"showOperators\", \"operators\", \"showButton\", \"value\", \"clear\", \"valueChange\"]],\n  template: function FilterCellWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-grid-filter-cell-operators\", 0);\n      ɵngcc0.ɵɵlistener(\"clear\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_clear_1_listener() {\n        return ctx.onClear();\n      })(\"valueChange\", function FilterCellWrapperComponent_Template_kendo_grid_filter_cell_operators_valueChange_1_listener($event) {\n        return ctx.currentOperator = $event;\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"showOperators\", ctx.showOperators)(\"operators\", ctx.operators)(\"showButton\", ctx.showButton)(\"value\", ctx.currentOperator);\n    }\n  },\n  directives: function directives() {\n    return [FilterCellOperatorsComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterCellWrapperComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }];\n};\n\nFilterCellWrapperComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell-wrapper']\n  }],\n  overrideBaseClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  showOperators: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterCellWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-wrapper-cell',\n      template: \"\\n        <ng-content></ng-content>\\n        <kendo-grid-filter-cell-operators\\n            [showOperators]=\\\"showOperators\\\"\\n            [operators]=\\\"operators\\\"\\n            (clear)=\\\"onClear()\\\"\\n            [showButton]=\\\"showButton\\\"\\n            [(value)]=\\\"currentOperator\\\">\\n        </kendo-grid-filter-cell-operators>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }];\n  }, {\n    showOperators: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell-wrapper']\n    }],\n    overrideBaseClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }]\n  });\n})(); // tslint:disable:no-access-missing-member\n\n\nvar stringOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * Represents a base string filter component.\n */\n\nvar StringFilterComponent = /*#__PURE__*/function (_BaseFilterCellCompon3) {\n  _inherits(StringFilterComponent, _BaseFilterCellCompon3);\n\n  var _super21 = _createSuper(StringFilterComponent);\n\n  function StringFilterComponent(filterService, localization) {\n    var _this79;\n\n    _classCallCheck(this, StringFilterComponent);\n\n    _this79 = _super21.call(this, filterService);\n    _this79.localization = localization;\n    /**\n     * The default filter operator. Defaults to `contains`.\n     * @type {string}\n     */\n\n    _this79.operator = \"contains\";\n    return _this79;\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  _createClass(StringFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      _get(_getPrototypeOf(StringFilterComponent.prototype), \"ngOnDestroy\", this).call(this);\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.defaultOperators = stringOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField((this.column || {}).field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n  }]);\n\n  return StringFilterComponent;\n}(BaseFilterCellComponent);\n\nStringFilterComponent.ɵfac = function StringFilterComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nStringFilterComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: StringFilterComponent,\n  inputs: {\n    operator: \"operator\",\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nStringFilterComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }]\n};\n/**\n * Represents a string-filter cell component\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-string-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-string-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\nvar StringFilterCellComponent = /*#__PURE__*/function (_StringFilterComponen) {\n  _inherits(StringFilterCellComponent, _StringFilterComponen);\n\n  var _super22 = _createSuper(StringFilterCellComponent);\n\n  function StringFilterCellComponent(filterService, localization) {\n    var _this80;\n\n    _classCallCheck(this, StringFilterCellComponent);\n\n    _this80 = _super22.call(this, filterService, localization);\n    /**\n     * Determines the delay time (in milliseconds) before the filter value is submitted.\n     * A value of `0` indicates no delay. The default value is `500`.\n     * @type {boolean}\n     */\n\n    _this80.filterDelay = 500;\n    /**\n     * Determines if the drop-down filter operators will be displayed.\n     * The default value is `true`.\n     * @type {boolean}\n     */\n\n    _this80.showOperators = true;\n    return _this80;\n  }\n\n  return StringFilterCellComponent;\n}(StringFilterComponent);\n\nStringFilterCellComponent.ɵfac = function StringFilterCellComponent_Factory(t) {\n  return new (t || StringFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nStringFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: StringFilterCellComponent,\n  selectors: [[\"kendo-grid-string-filter-cell\"]],\n  inputs: {\n    filterDelay: \"filterDelay\",\n    showOperators: \"showOperators\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 7,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoGridFocusable\", \"\", \"kendoFilterInput\", \"\", 1, \"k-textbox\", 3, \"filterDelay\", \"ngModel\"]],\n  template: function StringFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      ɵngcc0.ɵɵelement(1, \"input\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"filterDelay\", ctx.filterDelay)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, ɵngcc4.DefaultValueAccessor, FocusableDirective, FilterInputDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nStringFilterCellComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nStringFilterCellComponent.propDecorators = {\n  filterDelay: [{\n    type: Input\n  }],\n  showOperators: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StringFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-cell',\n      template: \"\\n        <kendo-grid-filter-wrapper-cell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [showOperators]=\\\"showOperators\\\">\\n            <input\\n                class=\\\"k-textbox\\\"\\n                kendoGridFocusable\\n                kendoFilterInput\\n                [filterDelay]=\\\"filterDelay\\\"\\n                [ngModel]=\\\"currentFilter?.value\\\" />\\n        </kendo-grid-filter-wrapper-cell>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    filterDelay: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a component which accommodates the filter operators.\n */\n\n\nvar FilterCellOperatorsComponent = /*#__PURE__*/function () {\n  function FilterCellOperatorsComponent(localization) {\n    _classCallCheck(this, FilterCellOperatorsComponent);\n\n    this.localization = localization;\n    this.clearText = 'Clear';\n    /**\n     * The filter operators that will be displayed.\n     */\n\n    this.operators = [];\n    /**\n     * Determines if the list of operators will be displayed.\n     * @type {boolean}\n     */\n\n    this.showOperators = true;\n    /**\n     * Fires when the operator is selected.\n     * @type {EventEmitter<string>}\n     */\n\n    this.valueChange = new EventEmitter();\n    /**\n     * Fires when the **Clear** button is clicked.\n     * @type {EventEmitter<{}>}\n     */\n\n    this.clear = new EventEmitter();\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(FilterCellOperatorsComponent, [{\n    key: \"onChange\",\n\n    /**\n     * @hidden\n     */\n    value: function onChange(dataItem) {\n      this.valueChange.emit(dataItem);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearClick\",\n    value: function clearClick() {\n      this.clear.emit();\n      return false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"clearKeydown\",\n    value: function clearKeydown(args) {\n      if (args.keyCode === Keys.Enter || args.keyCode === Keys.Space) {\n        this.clear.emit();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"dropdownKeydown\",\n    value: function dropdownKeydown(args) {\n      if (args.defaultPrevented) {\n        return;\n      }\n\n      if (args.keyCode === Keys.Enter && !this.dropdown.isOpen) {\n        this.dropdown.toggle(true);\n        args.preventDefault();\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this81 = this;\n\n      this.localization.changes.subscribe(function () {\n        return _this81.clearText = _this81.localization.get(\"filterClearButton\");\n      });\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return FilterCellOperatorsComponent;\n}();\n\nFilterCellOperatorsComponent.ɵfac = function FilterCellOperatorsComponent_Factory(t) {\n  return new (t || FilterCellOperatorsComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nFilterCellOperatorsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterCellOperatorsComponent,\n  selectors: [[\"kendo-grid-filter-cell-operators\"]],\n  viewQuery: function FilterCellOperatorsComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c125, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function FilterCellOperatorsComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell-operator\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    operators: \"operators\",\n    showOperators: \"showOperators\",\n    showButton: \"showButton\",\n    value: \"value\"\n  },\n  outputs: {\n    valueChange: \"valueChange\",\n    clear: \"clear\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"kendoGridFocusable\", \"\", \"class\", \"k-dropdown-operator\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\", 4, \"ngIf\"], [\"type\", \"button\", \"kendoGridFocusable\", \"\", 1, \"k-button\", \"k-button-icon\", 3, \"ngClass\", \"title\", \"click\", \"keydown\"], [1, \"k-icon\", \"k-i-filter-clear\"], [\"kendoGridFocusable\", \"\", \"iconClass\", \"k-i-filter\", \"textField\", \"text\", \"valueField\", \"value\", 1, \"k-dropdown-operator\", 3, \"data\", \"value\", \"valuePrimitive\", \"popupSettings\", \"valueChange\", \"keydown\"], [\"dropdown\", \"\"]],\n  template: function FilterCellOperatorsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FilterCellOperatorsComponent_kendo_dropdownlist_0_Template, 2, 5, \"kendo-dropdownlist\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n      ɵngcc0.ɵɵlistener(\"click\", function FilterCellOperatorsComponent_Template_button_click_1_listener() {\n        return ctx.clearClick();\n      })(\"keydown\", function FilterCellOperatorsComponent_Template_button_keydown_1_listener($event) {\n        return ctx.clearKeydown($event);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showOperators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(3, _c127, ctx.showButton))(\"title\", ctx.clearText);\n    }\n  },\n  directives: [ɵngcc1.NgIf, FocusableDirective, ɵngcc1.NgClass, ɵngcc5.DropDownListComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterCellOperatorsComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nFilterCellOperatorsComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell-operator']\n  }],\n  dropdown: [{\n    type: ViewChild,\n    args: ['dropdown']\n  }],\n  operators: [{\n    type: Input\n  }],\n  showButton: [{\n    type: Input\n  }],\n  showOperators: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  valueChange: [{\n    type: Output\n  }],\n  clear: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterCellOperatorsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-cell-operators',\n      template: \"\\n        <kendo-dropdownlist\\n            #dropdown\\n            *ngIf=\\\"showOperators\\\"\\n            kendoGridFocusable\\n            [data]=\\\"operators\\\"\\n            class=\\\"k-dropdown-operator\\\"\\n            (valueChange)=\\\"onChange($event)\\\"\\n            [value]=\\\"value\\\"\\n            iconClass=\\\"k-i-filter\\\"\\n            [valuePrimitive]=\\\"true\\\"\\n            textField=\\\"text\\\"\\n            [popupSettings]=\\\"{ width: 'auto' }\\\"\\n            valueField=\\\"value\\\"\\n            (keydown)=\\\"dropdownKeydown($event)\\\">\\n        </kendo-dropdownlist>\\n        <button type=\\\"button\\\"\\n            kendoGridFocusable\\n            [ngClass]=\\\"{'k-clear-button-visible': showButton}\\\"\\n            class=\\\"k-button k-button-icon\\\"\\n            [title]=\\\"clearText\\\"\\n            (click)=\\\"clearClick()\\\"\\n            (keydown)=\\\"clearKeydown($event)\\\">\\n                <span class=\\\"k-icon k-i-filter-clear\\\"></span>\\n        </button>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    showOperators: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    clear: [{\n      type: Output\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell-operator']\n    }],\n    dropdown: [{\n      type: ViewChild,\n      args: ['dropdown']\n    }],\n    showButton: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:no-access-missing-member\n\n\nvar stringOperators$1 = localizeOperators$1({\n  \"filterContainsOperator\": \"contains\",\n  \"filterNotContainsOperator\": \"doesnotcontain\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  \"filterStartsWithOperator\": \"startswith\",\n  \"filterEndsWithOperator\": \"endswith\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\",\n  \"filterIsEmptyOperator\": \"isempty\",\n  \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * @hidden\n */\n\nvar AutoCompleteFilterCellComponent = /*#__PURE__*/function (_BaseFilterCellCompon4) {\n  _inherits(AutoCompleteFilterCellComponent, _BaseFilterCellCompon4);\n\n  var _super23 = _createSuper(AutoCompleteFilterCellComponent);\n\n  function AutoCompleteFilterCellComponent(filterService, column, localization) {\n    var _this82;\n\n    _classCallCheck(this, AutoCompleteFilterCellComponent);\n\n    _this82 = _super23.call(this, filterService);\n    _this82.localization = localization;\n    _this82.showOperators = true;\n    _this82.defaultOperators = stringOperators$1(_this82.localization);\n    _this82.column = column;\n    return _this82;\n  }\n\n  _createClass(AutoCompleteFilterCellComponent, [{\n    key: \"valueField\",\n    set: function set(value) {\n      this._valueField = value;\n    },\n    get: function get() {\n      return this._valueField ? this._valueField : this.column.field;\n    }\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField(this.column.field);\n    }\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      return this.currentFilter ? this.currentFilter.operator : \"contains\";\n    }\n  }]);\n\n  return AutoCompleteFilterCellComponent;\n}(BaseFilterCellComponent);\n\nAutoCompleteFilterCellComponent.ɵfac = function AutoCompleteFilterCellComponent_Factory(t) {\n  return new (t || AutoCompleteFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(ColumnComponent), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nAutoCompleteFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AutoCompleteFilterCellComponent,\n  selectors: [[\"kendo-grid-autocomplete-filter-cell\"]],\n  inputs: {\n    showOperators: \"showOperators\",\n    column: \"column\",\n    valueField: \"valueField\",\n    filter: \"filter\",\n    data: \"data\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 7,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"showOperators\"], [\"kendoFilterInput\", \"\", 3, \"data\", \"valueField\", \"value\"]],\n  template: function AutoCompleteFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      ɵngcc0.ɵɵelement(1, \"kendo-autocomplete\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"showOperators\", ctx.showOperators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"data\", ctx.data)(\"valueField\", ctx.valueField)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, ɵngcc5.AutoCompleteComponent, FilterInputDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nAutoCompleteFilterCellComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: ColumnComponent\n  }, {\n    type: LocalizationService\n  }];\n};\n\nAutoCompleteFilterCellComponent.propDecorators = {\n  showOperators: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  valueField: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AutoCompleteFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-autocomplete-filter-cell',\n      template: \"\\n        <kendo-grid-filter-wrapper-cell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [showOperators]=\\\"showOperators\\\">\\n            <kendo-autocomplete\\n                kendoFilterInput\\n                [data]=\\\"data\\\"\\n                [valueField]=\\\"valueField\\\"\\n                [value]=\\\"currentFilter?.value\\\">\\n            </kendo-autocomplete>\\n        </kendo-grid-filter-wrapper-cell>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: ColumnComponent\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    showOperators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    valueField: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:no-access-missing-member\n\n/**\n * @hidden\n */\n\n\nvar BooleanFilterComponent = /*#__PURE__*/function (_BaseFilterCellCompon5) {\n  _inherits(BooleanFilterComponent, _BaseFilterCellCompon5);\n\n  var _super24 = _createSuper(BooleanFilterComponent);\n\n  function BooleanFilterComponent(filterService, localization) {\n    var _this83;\n\n    _classCallCheck(this, BooleanFilterComponent);\n\n    _this83 = _super24.call(this, filterService);\n    _this83.localization = localization;\n    /**\n     * @hidden\n     */\n\n    _this83.operator = \"eq\";\n    /**\n     * @hidden\n     */\n\n    _this83.items = [{\n      text: _this83.localization.get(\"filterIsTrue\"),\n      value: true\n    }, {\n      text: _this83.localization.get(\"filterIsFalse\"),\n      value: false\n    }];\n    /**\n     * @hidden\n     */\n\n    _this83.defaultItem = {\n      text: _this83.localization.get(\"filterBooleanAll\"),\n      value: null\n    };\n    return _this83;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(BooleanFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      _get(_getPrototypeOf(BooleanFilterComponent.prototype), \"ngOnDestroy\", this).call(this);\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.items = [{\n        text: this.localization.get(\"filterIsTrue\"),\n        value: true\n      }, {\n        text: this.localization.get(\"filterIsFalse\"),\n        value: false\n      }];\n      this.defaultItem = {\n        text: this.localization.get(\"filterBooleanAll\"),\n        value: null\n      };\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n  }]);\n\n  return BooleanFilterComponent;\n}(BaseFilterCellComponent);\n\nBooleanFilterComponent.ɵfac = function BooleanFilterComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nBooleanFilterComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: BooleanFilterComponent,\n  hostVars: 2,\n  hostBindings: function BooleanFilterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell-boolean\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nBooleanFilterComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell-boolean']\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }]\n};\n/**\n * Represents a Boolean filter-cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-boolean-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-boolean-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\nvar BooleanFilterCellComponent = /*#__PURE__*/function (_BooleanFilterCompone) {\n  _inherits(BooleanFilterCellComponent, _BooleanFilterCompone);\n\n  var _super25 = _createSuper(BooleanFilterCellComponent);\n\n  function BooleanFilterCellComponent(filterService, localization, cd) {\n    var _this84;\n\n    _classCallCheck(this, BooleanFilterCellComponent);\n\n    _this84 = _super25.call(this, filterService, localization);\n    _this84.cd = cd;\n    return _this84;\n  }\n\n  _createClass(BooleanFilterCellComponent, [{\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      _get(_getPrototypeOf(BooleanFilterCellComponent.prototype), \"localizationChange\", this).call(this);\n\n      this.cd.markForCheck();\n    }\n  }]);\n\n  return BooleanFilterCellComponent;\n}(BooleanFilterComponent);\n\nBooleanFilterCellComponent.ɵfac = function BooleanFilterCellComponent_Factory(t) {\n  return new (t || BooleanFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nBooleanFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: BooleanFilterCellComponent,\n  selectors: [[\"kendo-grid-boolean-filter-cell\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 10,\n  consts: [[3, \"column\", \"filter\", \"showOperators\", \"defaultOperator\"], [\"kendoFilterInput\", \"\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"defaultItem\", \"data\", \"popupSettings\", \"valuePrimitive\", \"value\"]],\n  template: function BooleanFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      ɵngcc0.ɵɵelement(1, \"kendo-dropdownlist\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"showOperators\", false)(\"defaultOperator\", ctx.operator);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"defaultItem\", ctx.defaultItem)(\"data\", ctx.items)(\"popupSettings\", ɵngcc0.ɵɵpureFunction0(9, _c126))(\"valuePrimitive\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterCellWrapperComponent, ɵngcc5.DropDownListComponent, FilterInputDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nBooleanFilterCellComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BooleanFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-boolean-filter-cell',\n      template: \"\\n        <kendo-grid-filter-wrapper-cell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [showOperators]=\\\"false\\\"\\n            [defaultOperator]=\\\"operator\\\">\\n            <kendo-dropdownlist\\n                kendoFilterInput\\n                [defaultItem]=\\\"defaultItem\\\"\\n                [data]=\\\"items\\\"\\n                textField=\\\"text\\\"\\n                valueField=\\\"value\\\"\\n                [popupSettings]=\\\"{ width: 'auto' }\\\"\\n                [valuePrimitive]=\\\"true\\\"\\n                [value]=\\\"currentFilter?.value\\\">\\n            </kendo-dropdownlist>\\n        </kendo-grid-filter-wrapper-cell>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})(); // tslint:disable:no-access-missing-member\n\n\nvar dateOperators = localizeOperators$1({\n  \"filterEqOperator\": \"eq\",\n  \"filterNotEqOperator\": \"neq\",\n  // tslint:disable-next-line:object-literal-sort-keys\n  \"filterAfterOrEqualOperator\": \"gte\",\n  \"filterAfterOperator\": \"gt\",\n  \"filterBeforeOrEqualOperator\": \"lte\",\n  \"filterBeforeOperator\": \"lt\",\n  \"filterIsNullOperator\": \"isnull\",\n  \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * @hidden\n */\n\nvar DateFilterComponent = /*#__PURE__*/function (_BaseFilterCellCompon6) {\n  _inherits(DateFilterComponent, _BaseFilterCellCompon6);\n\n  var _super26 = _createSuper(DateFilterComponent);\n\n  function DateFilterComponent(filterService, localization) {\n    var _this85;\n\n    _classCallCheck(this, DateFilterComponent);\n\n    _this85 = _super26.call(this, filterService);\n    _this85.localization = localization;\n    /**\n     * The default filter operator. Defaults to `contains`.\n     * @type {string}\n     */\n\n    _this85.operator = \"gte\";\n    /**\n     * Defines the active view that the calendar initially renders.\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n\n    _this85.activeView = \"month\";\n    /**\n     * Defines the bottommost calendar view, to which the user can navigate.\n     */\n\n    _this85.bottomView = \"month\";\n    /**\n     * Defines the topmost calendar view, to which the user can navigate.\n     */\n\n    _this85.topView = \"century\";\n    /**\n     * Determines whether to display a week number column in the `month` view of the Calendar.\n     */\n\n    _this85.weekNumber = false;\n    _this85.defaultOperators = dateOperators(_this85.localization);\n    return _this85;\n  }\n  /**\n   * The current filter for the associated column field.\n   * @readonly\n   * @type {FilterDescriptor}\n   */\n\n\n  _createClass(DateFilterComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      _get(_getPrototypeOf(DateFilterComponent.prototype), \"ngOnDestroy\", this).call(this);\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.defaultOperators = dateOperators(this.localization);\n\n      if (this.operatorList.length) {\n        this.operators = toJSON(this.operatorList.toArray());\n      }\n    }\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this.filterByField(this.column.field);\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n\n  }, {\n    key: \"format\",\n    set: function set(value) {\n      this._format = value;\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n    ,\n    get: function get() {\n      return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n  }, {\n    key: \"columnFormat\",\n    get: function get() {\n      return this.column && !isNullOrEmptyString(this.column.format) ? extractFormat(this.column.format) : \"d\";\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n\n  }, {\n    key: \"currentOperator\",\n    get: function get() {\n      return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n  }]);\n\n  return DateFilterComponent;\n}(BaseFilterCellComponent);\n\nDateFilterComponent.ɵfac = function DateFilterComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nDateFilterComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DateFilterComponent,\n  inputs: {\n    operator: \"operator\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\",\n    format: \"format\",\n    column: \"column\",\n    filter: \"filter\",\n    min: \"min\",\n    max: \"max\",\n    formatPlaceholder: \"formatPlaceholder\",\n    placeholder: \"placeholder\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nDateFilterComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  bottomView: [{\n    type: Input\n  }],\n  topView: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }]\n};\n/**\n * Represents a date-filter cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-date-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-date-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\nvar DateFilterCellComponent = /*#__PURE__*/function (_DateFilterComponent) {\n  _inherits(DateFilterCellComponent, _DateFilterComponent);\n\n  var _super27 = _createSuper(DateFilterCellComponent);\n\n  function DateFilterCellComponent(filterService, localization) {\n    var _this86;\n\n    _classCallCheck(this, DateFilterCellComponent);\n\n    _this86 = _super27.call(this, filterService, localization);\n    _this86.localization = localization;\n    /**\n     * Determines if the drop-down filter operators will be displayed. The default value is `true`.\n     * @type {boolean}\n     */\n\n    _this86.showOperators = true;\n    return _this86;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DateFilterCellComponent, [{\n    key: \"messageFor\",\n    value: function messageFor(key) {\n      return this.localization.get(key);\n    }\n  }]);\n\n  return DateFilterCellComponent;\n}(DateFilterComponent);\n\nDateFilterCellComponent.ɵfac = function DateFilterCellComponent_Factory(t) {\n  return new (t || DateFilterCellComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateFilterCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateFilterCellComponent,\n  selectors: [[\"kendo-grid-date-filter-cell\"]],\n  inputs: {\n    showOperators: \"showOperators\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 17,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"showOperators\"], [\"kendoFilterInput\", \"\", 3, \"value\", \"format\", \"formatPlaceholder\", \"placeholder\", \"activeView\", \"bottomView\", \"topView\", \"min\", \"max\", \"weekNumber\"], [3, \"toggle\", \"today\"]],\n  template: function DateFilterCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-wrapper-cell\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-datepicker\", 1);\n      ɵngcc0.ɵɵelement(2, \"kendo-datepicker-messages\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"showOperators\", ctx.showOperators);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n    }\n  },\n  directives: [FilterCellWrapperComponent, ɵngcc6.DatePickerComponent, FilterInputDirective, ɵngcc6.DatePickerCustomMessagesComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateFilterCellComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nDateFilterCellComponent.propDecorators = {\n  showOperators: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateFilterCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-cell',\n      template: \"\\n        <kendo-grid-filter-wrapper-cell\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [showOperators]=\\\"showOperators\\\"\\n        >\\n            <kendo-datepicker\\n                kendoFilterInput\\n                [value]=\\\"currentFilter?.value\\\"\\n                [format]=\\\"format\\\"\\n                [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                [activeView]=\\\"activeView\\\"\\n                [bottomView]=\\\"bottomView\\\"\\n                [topView]=\\\"topView\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [weekNumber]=\\\"weekNumber\\\"\\n            >\\n                <kendo-datepicker-messages\\n                    [toggle]=\\\"messageFor('filterDateToggle')\\\"\\n                    [today]=\\\"messageFor('filterDateToday')\\\"\\n                >\\n                </kendo-datepicker-messages>\\n            </kendo-datepicker>\\n        </kendo-grid-filter-wrapper-cell>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    showOperators: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar ColGroupComponent = /*#__PURE__*/function () {\n  function ColGroupComponent() {\n    _classCallCheck(this, ColGroupComponent);\n\n    this.columns = [];\n    this.groups = [];\n  }\n\n  _createClass(ColGroupComponent, [{\n    key: \"trackBy\",\n    value: function trackBy(index, _item) {\n      return index;\n    }\n  }, {\n    key: \"columnsToRender\",\n    get: function get() {\n      return columnsToRender(this.columns);\n    }\n  }]);\n\n  return ColGroupComponent;\n}();\n\nColGroupComponent.ɵfac = function ColGroupComponent_Factory(t) {\n  return new (t || ColGroupComponent)();\n};\n\nColGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColGroupComponent,\n  selectors: [[\"\", \"kendoGridColGroup\", \"\"]],\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    detailTemplate: \"detailTemplate\"\n  },\n  attrs: _c128,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [3, \"k-group-col\", 4, \"ngFor\", \"ngForOf\"], [3, \"k-hierarchy-col\", 4, \"ngIf\"], [3, \"width\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"]],\n  template: function ColGroupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ColGroupComponent_ng_template_0_Template, 3, 4, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", true);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf],\n  encapsulation: 2\n});\nColGroupComponent.propDecorators = {\n  columns: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColGroupComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridColGroup]',\n      template: \"\\n    <ng-template [ngIf]=\\\"true\\\">\\n        <col [class.k-group-col]=\\\"true\\\" *ngFor=\\\"let g of groups\\\" />\\n        <col [class.k-hierarchy-col]=\\\"true\\\" *ngIf=\\\"detailTemplate?.templateRef\\\"/>\\n        <col *ngFor=\\\"let column of columnsToRender; trackBy: trackBy;\\\" [style.width.px]=\\\"column.width\\\"/>\\n    </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar LoadingComponent = /*#__PURE__*/function () {\n  function LoadingComponent(localization) {\n    _classCallCheck(this, LoadingComponent);\n\n    this.localization = localization;\n    this.hostClass = true;\n  }\n\n  _createClass(LoadingComponent, [{\n    key: \"loadingText\",\n    get: function get() {\n      return this.localization.get('loading');\n    }\n  }]);\n\n  return LoadingComponent;\n}();\n\nLoadingComponent.ɵfac = function LoadingComponent_Factory(t) {\n  return new (t || LoadingComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLoadingComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: LoadingComponent,\n  selectors: [[\"\", \"kendoGridLoading\", \"\"]],\n  hostVars: 2,\n  hostBindings: function LoadingComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-loading-mask\", ctx.hostClass);\n    }\n  },\n  attrs: _c129,\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"k-loading-text\"], [1, \"k-loading-image\"], [1, \"k-loading-color\"]],\n  template: function LoadingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(2, \"div\", 1);\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.loadingText);\n    }\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nLoadingComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nLoadingComponent.propDecorators = {\n  hostClass: [{\n    type: HostBinding,\n    args: ['class.k-loading-mask']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LoadingComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridLoading]',\n      template: \"\\n        <span class=\\\"k-loading-text\\\">{{ loadingText }}</span>\\n        <div class=\\\"k-loading-image\\\"></div>\\n        <div class=\\\"k-loading-color\\\"></div>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-loading-mask']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar ResizableContainerDirective = /*#__PURE__*/function () {\n  function ResizableContainerDirective(el, renderer, resizeService, grid) {\n    _classCallCheck(this, ResizableContainerDirective);\n\n    this.el = el;\n    this.renderer = renderer;\n    this.resizeService = resizeService;\n    this.grid = grid;\n    this.enabled = false;\n  }\n\n  _createClass(ResizableContainerDirective, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.resizeSubscription) {\n        this.resizeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"attachResize\",\n    value: function attachResize() {\n      if (this.resizeSubscription && !this.enabled) {\n        this.resizeSubscription.unsubscribe();\n        this.resizeSubscription = null;\n      }\n\n      if (!this.resizeSubscription && this.enabled) {\n        this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this.grid && this.grid.wrapper) {\n        var containerElement = this.grid.wrapper.nativeElement;\n        var width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n\n        if (this.enabled && width > 0) {\n          this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n        }\n      }\n    }\n  }, {\n    key: \"lockedWidth\",\n    set: function set(value) {\n      this._lockedWidth = value;\n\n      if (this.enabled) {\n        this.attachResize();\n        this.resize();\n      }\n    }\n  }, {\n    key: \"kendoGridResizableContainer\",\n    set: function set(enabled) {\n      var refresh = enabled !== this.enabled;\n      this.enabled = enabled;\n\n      if (refresh) {\n        this.attachResize();\n        this.resize();\n      }\n    }\n  }]);\n\n  return ResizableContainerDirective;\n}();\n\nResizableContainerDirective.ɵfac = function ResizableContainerDirective_Factory(t) {\n  return new (t || ResizableContainerDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ResizeService), ɵngcc0.ɵɵdirectiveInject(GridComponent, 8));\n};\n\nResizableContainerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ResizableContainerDirective,\n  selectors: [[\"\", \"kendoGridResizableContainer\", \"\"]],\n  inputs: {\n    lockedWidth: \"lockedWidth\",\n    kendoGridResizableContainer: \"kendoGridResizableContainer\"\n  }\n});\n/** @nocollapse */\n\nResizableContainerDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ResizeService\n  }, {\n    type: GridComponent,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nResizableContainerDirective.propDecorators = {\n  lockedWidth: [{\n    type: Input,\n    args: ['lockedWidth']\n  }],\n  kendoGridResizableContainer: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizableContainerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridResizableContainer]'\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: ResizeService\n    }, {\n      type: GridComponent,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    lockedWidth: [{\n      type: Input,\n      args: ['lockedWidth']\n    }],\n    kendoGridResizableContainer: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar TemplateContextDirective = /*#__PURE__*/function () {\n  function TemplateContextDirective(viewContainerRef) {\n    _classCallCheck(this, TemplateContextDirective);\n\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  _createClass(TemplateContextDirective, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeView();\n    }\n  }, {\n    key: \"removeView\",\n    value: function removeView() {\n      if (this.insertedViewRef) {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n        this.insertedViewRef = undefined;\n      }\n    }\n  }, {\n    key: \"templateContext\",\n    set: function set(context) {\n      this.removeView();\n\n      if (context.templateRef) {\n        this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n      }\n    }\n  }]);\n\n  return TemplateContextDirective;\n}();\n\nTemplateContextDirective.ɵfac = function TemplateContextDirective_Factory(t) {\n  return new (t || TemplateContextDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef));\n};\n\nTemplateContextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TemplateContextDirective,\n  selectors: [[\"\", \"templateContext\", \"\"]],\n  inputs: {\n    templateContext: \"templateContext\"\n  }\n});\n/** @nocollapse */\n\nTemplateContextDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }];\n};\n\nTemplateContextDirective.propDecorators = {\n  templateContext: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TemplateContextDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[templateContext]' // tslint:disable-line:directive-selector\n\n    }]\n  }], function () {\n    return [{\n      type: ViewContainerRef\n    }];\n  }, {\n    templateContext: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar FocusGroup = /*#__PURE__*/function () {\n  function FocusGroup(root) {\n    _classCallCheck(this, FocusGroup);\n\n    this.root = root;\n    this.active = true;\n    this.children = [];\n    this.root.registerGroup(this);\n  }\n\n  _createClass(FocusGroup, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.root.unregisterGroup(this);\n    }\n  }, {\n    key: \"registerElement\",\n    value: function registerElement(element) {\n      this.unregisterElement(element);\n      this.children.push(element);\n    }\n  }, {\n    key: \"unregisterElement\",\n    value: function unregisterElement(element) {\n      this.children = this.children.filter(function (f) {\n        return f !== element;\n      });\n    }\n    /**\n     * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.\n     * Requires a single \"simple\" focusable element such as a button or a checkbox.\n     */\n\n  }, {\n    key: \"isNavigable\",\n    value: function isNavigable() {\n      var focusable = this.focusableChildren;\n      return focusable.length === 1 && focusable[0].isNavigable();\n    }\n  }, {\n    key: \"canFocus\",\n    value: function canFocus() {\n      return this.focusableChildren.length > 0;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      if (this.canFocus() && !this.hasFocus()) {\n        this.focusableChildren[0].focus();\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.toggleState(true);\n    }\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.toggleState(false);\n    }\n  }, {\n    key: \"hasFocus\",\n    value: function hasFocus() {\n      return this.children.reduce(function (focused, element) {\n        return focused || element.hasFocus();\n      }, false);\n    }\n  }, {\n    key: \"toggleState\",\n    value: function toggleState(active) {\n      if (this.active !== active) {\n        this.active = active;\n        this.children.forEach(function (f) {\n          return f.toggle(active);\n        });\n      }\n    }\n  }, {\n    key: \"focusableChildren\",\n    get: function get() {\n      return this.children.filter(function (el) {\n        return el.canFocus();\n      });\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      return this.active;\n    }\n  }]);\n\n  return FocusGroup;\n}();\n\nFocusGroup.ɵfac = function FocusGroup_Factory(t) {\n  return new (t || FocusGroup)(ɵngcc0.ɵɵinject(FocusRoot));\n};\n\nFocusGroup.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: FocusGroup,\n  factory: FocusGroup.ɵfac\n});\n/** @nocollapse */\n\nFocusGroup.ctorParameters = function () {\n  return [{\n    type: FocusRoot\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FocusGroup, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: FocusRoot\n    }];\n  }, null);\n})();\n\nvar id = 0;\n\nfunction nextId() {\n  return id++;\n}\n/**\n * @hidden\n */\n\n\nvar LogicalCellDirective = /*#__PURE__*/function () {\n  function LogicalCellDirective(focusGroup, element, columnInfoService, idService, navigationService, renderer, zone, cellContext) {\n    _classCallCheck(this, LogicalCellDirective);\n\n    this.focusGroup = focusGroup;\n    this.element = element;\n    this.columnInfoService = columnInfoService;\n    this.idService = idService;\n    this.navigationService = navigationService;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.cellContext = cellContext;\n    this.logicalSlaveCell = false;\n    this.colSpan = 1;\n    this.rowSpan = 1;\n    this.dataRowIndex = -1;\n    this.detailExpandCell = false;\n    this.uid = nextId();\n  }\n\n  _createClass(LogicalCellDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this87 = this;\n\n      if (!this.navigationService.enabled) {\n        return;\n      }\n\n      this.navigationChange = this.navigationService.changes.subscribe(function (e) {\n        return _this87.onNavigationChange(e);\n      });\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (!this.navigationService.enabled || this.logicalColIndex === -1) {\n        return;\n      }\n\n      if (this.cellContext) {\n        this.cellContext.focusGroup = this.focusGroup;\n      }\n\n      this.registerNoChanges();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this.navigationService.enabled) {\n        return;\n      }\n\n      var keys = Object.keys(changes);\n\n      if (keys.length === 1 && keys[0] === 'groupItem' || this.logicalColIndex === -1) {\n        // Ignore groupItem changes as the reference is not stable\n        return;\n      }\n\n      var indexChange = changes.logicalColIndex;\n      var rowIndexChange = changes.logicalRowIndex;\n      var index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalColIndex;\n      var rowIndex = rowIndexChange && !rowIndexChange.isFirstChange() ? rowIndexChange.previousValue : this.logicalRowIndex;\n      this.navigationService.unregisterCell(index, rowIndex, this);\n      this.registerChanges();\n      this.updateElement();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.navigationChange) {\n        this.navigationChange.unsubscribe();\n      }\n\n      this.navigationService.unregisterCell(this.logicalColIndex, this.logicalRowIndex, this);\n    }\n  }, {\n    key: \"onNavigationChange\",\n    value: function onNavigationChange(e) {\n      var active = this.logicalColIndex === e.colIndex && this.logicalRowIndex === e.rowIndex;\n      var wasActive = this.logicalColIndex === e.prevColIndex && this.logicalRowIndex === e.prevRowIndex;\n\n      if (active || wasActive) {\n        this.updateElement();\n      }\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement() {\n      var _this88 = this;\n\n      var el = this.element.nativeElement;\n      this.renderer.setAttribute(el, 'tabIndex', this.isFocusable() && !this.logicalSlaveCell ? '0' : '-1');\n\n      if (this.isFocused()) {\n        if (this.focusGroup.isNavigable()) {\n          this.focusGroup.focus();\n        } else {\n          if (!this.logicalSlaveCell && this.navigationService.autoFocusCell(this.logicalColIndex, this.logicalColIndex + this.colSpan - 1)) {\n            this.microtask(function () {\n              return _this88.isFocused() && el.focus();\n            });\n          }\n\n          this.renderer.addClass(el, 'k-state-focused');\n        }\n      } else {\n        this.renderer.removeClass(el, 'k-state-focused');\n      }\n    }\n  }, {\n    key: \"microtask\",\n    value: function microtask(callback) {\n      this.zone.runOutsideAngular(function () {\n        return Promise.resolve(null).then(callback);\n      });\n    }\n  }, {\n    key: \"registerChanges\",\n    value: function registerChanges() {\n      if (!this.logicalSlaveCell) {\n        this.navigationService.registerCell(this);\n      }\n    }\n  }, {\n    key: \"registerNoChanges\",\n    value: function registerNoChanges() {\n      if (!this.logicalSlaveCell) {\n        this.navigationService.registerCellOnCurrentRow(this);\n      }\n    }\n  }, {\n    key: \"isFocusable\",\n    value: function isFocusable() {\n      return this.navigationService.isCellFocusable(this);\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.navigationService.isCellFocused(this);\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      if (!this.logicalSlaveCell && this.columnInfoService.isLocked) {\n        return this.idService.cellId(this.logicalRowIndex, this.logicalColIndex);\n      }\n    }\n  }, {\n    key: \"ariaColIndex\",\n    get: function get() {\n      if (this.logicalSlaveCell || this.logicalColIndex === -1) {\n        return undefined;\n      }\n\n      return this.logicalColIndex + 1;\n    }\n  }]);\n\n  return LogicalCellDirective;\n}();\n\nLogicalCellDirective.ɵfac = function LogicalCellDirective_Factory(t) {\n  return new (t || LogicalCellDirective)(ɵngcc0.ɵɵdirectiveInject(FocusGroup), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n};\n\nLogicalCellDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LogicalCellDirective,\n  selectors: [[\"\", \"kendoGridLogicalCell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function LogicalCellDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"aria-colindex\", ctx.ariaColIndex);\n    }\n  },\n  inputs: {\n    logicalSlaveCell: \"logicalSlaveCell\",\n    colSpan: \"colSpan\",\n    rowSpan: \"rowSpan\",\n    dataRowIndex: \"dataRowIndex\",\n    detailExpandCell: \"detailExpandCell\",\n    logicalColIndex: \"logicalColIndex\",\n    logicalRowIndex: \"logicalRowIndex\",\n    colIndex: \"colIndex\",\n    groupItem: \"groupItem\",\n    dataItem: \"dataItem\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FocusGroup,\n    deps: [FocusRoot],\n    useClass: FocusGroup\n  }]), ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nLogicalCellDirective.ctorParameters = function () {\n  return [{\n    type: FocusGroup\n  }, {\n    type: ElementRef\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: IdService\n  }, {\n    type: NavigationService\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }];\n};\n\nLogicalCellDirective.propDecorators = {\n  logicalColIndex: [{\n    type: Input\n  }],\n  logicalRowIndex: [{\n    type: Input\n  }],\n  logicalSlaveCell: [{\n    type: Input\n  }],\n  colIndex: [{\n    type: Input\n  }],\n  colSpan: [{\n    type: Input\n  }],\n  rowSpan: [{\n    type: Input\n  }],\n  groupItem: [{\n    type: Input\n  }],\n  dataRowIndex: [{\n    type: Input\n  }],\n  dataItem: [{\n    type: Input\n  }],\n  detailExpandCell: [{\n    type: Input\n  }],\n  id: [{\n    type: HostBinding,\n    args: ['attr.id']\n  }],\n  ariaColIndex: [{\n    type: HostBinding,\n    args: ['attr.aria-colindex']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LogicalCellDirective, [{\n    type: Directive,\n    args: [{\n      providers: [{\n        provide: FocusGroup,\n        deps: [FocusRoot],\n        useClass: FocusGroup\n      }],\n      selector: '[kendoGridLogicalCell]'\n    }]\n  }], function () {\n    return [{\n      type: FocusGroup\n    }, {\n      type: ElementRef\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: IdService\n    }, {\n      type: NavigationService\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }];\n  }, {\n    logicalSlaveCell: [{\n      type: Input\n    }],\n    colSpan: [{\n      type: Input\n    }],\n    rowSpan: [{\n      type: Input\n    }],\n    dataRowIndex: [{\n      type: Input\n    }],\n    detailExpandCell: [{\n      type: Input\n    }],\n    id: [{\n      type: HostBinding,\n      args: ['attr.id']\n    }],\n    ariaColIndex: [{\n      type: HostBinding,\n      args: ['attr.aria-colindex']\n    }],\n    logicalColIndex: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    colIndex: [{\n      type: Input\n    }],\n    groupItem: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }]\n  });\n})();\n\nvar id$1 = 0;\n\nfunction nextId$1() {\n  return id$1++;\n}\n/**\n * @hidden\n */\n\n\nvar LogicalRowDirective = /*#__PURE__*/function () {\n  function LogicalRowDirective(idService, navigation) {\n    _classCallCheck(this, LogicalRowDirective);\n\n    this.idService = idService;\n    this.navigation = navigation;\n    this.logicalSlaveRow = false;\n    this.logicalSlaveCellsCount = 0;\n    this.dataRowIndex = -1;\n    this.uid = nextId$1();\n  }\n\n  _createClass(LogicalRowDirective, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (!this.navigation.enabled || this.logicalSlaveRow) {\n        return;\n      }\n\n      var indexChange = changes.logicalRowIndex;\n      var logicalSlaveRowChange = changes.logicalSlaveRow;\n\n      if (indexChange || logicalSlaveRowChange) {\n        var index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalRowIndex;\n        this.navigation.unregisterRow(index, this);\n        this.navigation.registerRow(this);\n      } else if (anyChanged(['dataRowIndex', 'dataItem'], changes)) {\n        this.navigation.updateRow(this);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.navigation.unregisterRow(this.logicalRowIndex, this);\n    }\n  }, {\n    key: \"hostRole\",\n    get: function get() {\n      return this.logicalSlaveRow ? 'presentation' : 'row';\n    }\n  }, {\n    key: \"ariaRowIndex\",\n    get: function get() {\n      if (this.navigation.enabled) {\n        return this.logicalRowIndex + 1;\n      }\n    }\n  }, {\n    key: \"ariaOwns\",\n    get: function get() {\n      if (!this.navigation.enabled || this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {\n        return undefined;\n      }\n\n      var ids = [];\n      var total = this.logicalCellsCount + this.logicalSlaveCellsCount;\n\n      for (var cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {\n        ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));\n      }\n\n      return ids.join(' ');\n    }\n  }]);\n\n  return LogicalRowDirective;\n}();\n\nLogicalRowDirective.ɵfac = function LogicalRowDirective_Factory(t) {\n  return new (t || LogicalRowDirective)(ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n};\n\nLogicalRowDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: LogicalRowDirective,\n  selectors: [[\"\", \"kendoGridLogicalRow\", \"\"]],\n  hostVars: 3,\n  hostBindings: function LogicalRowDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.hostRole)(\"aria-rowindex\", ctx.ariaRowIndex)(\"aria-owns\", ctx.ariaOwns);\n    }\n  },\n  inputs: {\n    logicalSlaveRow: \"logicalSlaveRow\",\n    logicalSlaveCellsCount: \"logicalSlaveCellsCount\",\n    dataRowIndex: \"dataRowIndex\",\n    logicalRowIndex: \"logicalRowIndex\",\n    logicalCellsCount: \"logicalCellsCount\",\n    dataItem: \"dataItem\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nLogicalRowDirective.ctorParameters = function () {\n  return [{\n    type: IdService\n  }, {\n    type: NavigationService\n  }];\n};\n\nLogicalRowDirective.propDecorators = {\n  logicalRowIndex: [{\n    type: Input\n  }],\n  logicalSlaveRow: [{\n    type: Input\n  }],\n  logicalCellsCount: [{\n    type: Input\n  }],\n  logicalSlaveCellsCount: [{\n    type: Input\n  }],\n  dataRowIndex: [{\n    type: Input\n  }],\n  dataItem: [{\n    type: Input\n  }],\n  hostRole: [{\n    type: HostBinding,\n    args: ['attr.role']\n  }],\n  ariaRowIndex: [{\n    type: HostBinding,\n    args: ['attr.aria-rowindex']\n  }],\n  ariaOwns: [{\n    type: HostBinding,\n    args: ['attr.aria-owns']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LogicalRowDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridLogicalRow]'\n    }]\n  }], function () {\n    return [{\n      type: IdService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    logicalSlaveRow: [{\n      type: Input\n    }],\n    logicalSlaveCellsCount: [{\n      type: Input\n    }],\n    dataRowIndex: [{\n      type: Input\n    }],\n    hostRole: [{\n      type: HostBinding,\n      args: ['attr.role']\n    }],\n    ariaRowIndex: [{\n      type: HostBinding,\n      args: ['attr.aria-rowindex']\n    }],\n    ariaOwns: [{\n      type: HostBinding,\n      args: ['attr.aria-owns']\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    logicalCellsCount: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }]\n  });\n})();\n/* tslint:disable:pipe-naming */\n\n\nvar FORMAT_REGEX = /\\{\\d+:?/;\n/**\n * @hidden\n */\n\nvar FieldAccessorPipe = /*#__PURE__*/function () {\n  function FieldAccessorPipe(intlService) {\n    _classCallCheck(this, FieldAccessorPipe);\n\n    this.intlService = intlService;\n  }\n\n  _createClass(FieldAccessorPipe, [{\n    key: \"transform\",\n    value: function transform(dataItem, fieldName, format) {\n      if (!isNullOrEmptyString(fieldName)) {\n        var value = getter(fieldName)(dataItem);\n\n        if (!isNullOrEmptyString(format)) {\n          return this.formatValue(format, value);\n        }\n\n        return value;\n      }\n\n      return dataItem;\n    }\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(format, value) {\n      var intl = this.intlService;\n\n      if (isString(format) && format.match(FORMAT_REGEX)) {\n        return intl.format(format, value);\n      }\n\n      return intl.toString(value, format);\n    }\n  }]);\n\n  return FieldAccessorPipe;\n}();\n\nFieldAccessorPipe.ɵfac = function FieldAccessorPipe_Factory(t) {\n  return new (t || FieldAccessorPipe)(ɵngcc0.ɵɵdirectiveInject(IntlService));\n};\n\nFieldAccessorPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"valueOf\",\n  type: FieldAccessorPipe,\n  pure: false\n});\n/** @nocollapse */\n\nFieldAccessorPipe.ctorParameters = function () {\n  return [{\n    type: IntlService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FieldAccessorPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'valueOf',\n      pure: false\n    }]\n  }], function () {\n    return [{\n      type: IntlService\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar columnsToResize = function columnsToResize(_ref30) {\n  var columns = _ref30.columns;\n  return Math.max(1, resizableColumns(columns).length);\n};\n/**\n * @hidden\n */\n\n\nvar row = function row(selector) {\n  return function (element) {\n    return element.querySelector(selector);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar headerRow = function headerRow(index) {\n  return function (element) {\n    return element.querySelectorAll('thead>tr')[index];\n  };\n};\n/**\n * @hidden\n */\n\n\nvar cell = function cell(index) {\n  var selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'td';\n  return function (element) {\n    return element.querySelectorAll(\"\".concat(selector, \":not(.k-group-cell):not(.k-hierarchy-cell)\"))[index];\n  };\n};\n/**\n * @hidden\n */\n\n\nvar offsetWidth = function offsetWidth(element) {\n  return element.offsetWidth;\n};\n/**\n * @hidden\n */\n\n\nvar pipe = function pipe() {\n  for (var _len7 = arguments.length, fns = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n    fns[_key7] = arguments[_key7];\n  }\n\n  return function (data) {\n    return fns.reduce(function (state$$1, fn) {\n      return state$$1 ? fn(state$$1) : 0;\n    }, data);\n  };\n};\n/**\n * @hidden\n */\n\n\nvar TableDirective = /*#__PURE__*/function () {\n  function TableDirective(element, renderer, service, zone, cdr) {\n    _classCallCheck(this, TableDirective);\n\n    this.element = element;\n    this.renderer = renderer;\n    this.service = service;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.locked = false;\n    this.firstResize = false;\n  }\n\n  _createClass(TableDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this89 = this;\n\n      var obs = this.service.changes.pipe(filter(function (e) {\n        return _this89.locked === e.locked;\n      }));\n      this.subscription = obs.pipe(filter(function (e) {\n        return e.type === 'start';\n      }), tap(this.initState.bind(this)), map(columnsToResize), switchMap(function (take$$1) {\n        return obs.pipe(filter(function (e) {\n          return e.type === 'resizeTable';\n        }), map(function (e) {\n          return e.delta;\n        }), bufferCount(take$$1));\n      })).subscribe(this.resize.bind(this));\n      this.autoFitSubscription = this.service.registerTable({\n        autoFit: this.autoFitObservable.bind(this),\n        locked: this.locked\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      if (this.autoFitSubscription) {\n        this.autoFitSubscription();\n        this.autoFitSubscription = null;\n      }\n    }\n  }, {\n    key: \"initState\",\n    value: function initState() {\n      this.firstResize = true;\n\n      if (!this.virtualColumns || this.locked) {\n        this.originalWidth = offsetWidth(this.element.nativeElement);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(deltas) {\n      if (!this.virtualColumns || this.locked) {\n        var delta = deltas.reduce(function (sum, item) {\n          return sum + item;\n        }, 0);\n        var width = this.originalWidth + delta;\n        this.renderer.setStyle(this.element.nativeElement, 'width', width + 'px');\n      }\n\n      this.cdr.detectChanges();\n    }\n  }, {\n    key: \"autoFitObservable\",\n    value: function autoFitObservable(columnInfo) {\n      var _this90 = this;\n\n      return Observable.create(function (observer) {\n        _this90.zone.runOutsideAngular(function () {\n          _this90.renderer.addClass(_this90.element.nativeElement, 'k-autofitting');\n\n          _this90.cdr.detectChanges();\n\n          var widths = columnInfo.map(_this90.measureColumn.bind(_this90));\n\n          _this90.renderer.removeClass(_this90.element.nativeElement, 'k-autofitting');\n\n          observer.next(widths);\n        });\n      });\n    }\n  }, {\n    key: \"measureColumn\",\n    value: function measureColumn(info) {\n      var dom = this.element.nativeElement;\n      var header = pipe(headerRow(info.level), cell(info.headerIndex, 'th'), offsetWidth)(dom);\n      var data = 0;\n\n      if (!info.isParentSpan || info.isParentSpan && info.isLastInSpan) {\n        data = pipe(row('tbody>tr:not(.k-grouping-row):not(.k-grid-norecords)'), cell(info.index), offsetWidth)(dom);\n      }\n\n      var footer = pipe(row('tfoot>tr'), cell(info.index), offsetWidth)(dom);\n      return Math.max(header, data, footer);\n    }\n  }, {\n    key: \"minWidth\",\n    get: function get() {\n      return this.firstResize ? 0 : null;\n    }\n  }]);\n\n  return TableDirective;\n}();\n\nTableDirective.ɵfac = function TableDirective_Factory(t) {\n  return new (t || TableDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TableDirective,\n  selectors: [[\"table\"]],\n  hostVars: 2,\n  hostBindings: function TableDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"min-width\", ctx.minWidth);\n    }\n  },\n  inputs: {\n    locked: \"locked\",\n    virtualColumns: \"virtualColumns\"\n  }\n});\n/** @nocollapse */\n\nTableDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: ColumnResizingService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nTableDirective.propDecorators = {\n  locked: [{\n    type: Input\n  }],\n  virtualColumns: [{\n    type: Input\n  }],\n  minWidth: [{\n    type: HostBinding,\n    args: ['style.min-width']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'table' // tslint:disable-line:directive-selector\n\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    locked: [{\n      type: Input\n    }],\n    minWidth: [{\n      type: HostBinding,\n      args: ['style.min-width']\n    }],\n    virtualColumns: [{\n      type: Input\n    }]\n  });\n})();\n\nvar exportedModules = [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent];\n/**\n * @hidden\n */\n\nvar SharedModule = /*#__PURE__*/function () {\n  function SharedModule() {\n    _classCallCheck(this, SharedModule);\n  }\n\n  _createClass(SharedModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective];\n    }\n  }]);\n\n  return SharedModule;\n}();\n\nSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SharedModule\n});\nSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SharedModule_Factory(t) {\n    return new (t || SharedModule)();\n  },\n  imports: [[CommonModule], DraggableModule, EventsModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedModule, {\n    declarations: function declarations() {\n      return [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ColumnComponent, ColumnGroupComponent, LogicalCellDirective, LogicalRowDirective, FocusableDirective, FooterTemplateDirective, ColGroupComponent, ResizableContainerDirective, TemplateContextDirective, FieldAccessorPipe, DetailTemplateDirective, SpanColumnComponent, TableDirective, LoadingComponent, DraggableModule, EventsModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules],\n      exports: [exportedModules, DraggableModule, EventsModule],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Represents the `Contains` (**Contains**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar ContainsFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase) {\n  _inherits(ContainsFilterOperatorComponent, _FilterOperatorBase);\n\n  var _super28 = _createSuper(ContainsFilterOperatorComponent);\n\n  function ContainsFilterOperatorComponent(localization) {\n    _classCallCheck(this, ContainsFilterOperatorComponent);\n\n    return _super28.call(this, \"contains\", localization);\n  }\n\n  return ContainsFilterOperatorComponent;\n}(FilterOperatorBase);\n\nContainsFilterOperatorComponent.ɵfac = function ContainsFilterOperatorComponent_Factory(t) {\n  return new (t || ContainsFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nContainsFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ContainsFilterOperatorComponent,\n  selectors: [[\"kendo-filter-contains-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return ContainsFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function ContainsFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nContainsFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ContainsFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return ContainsFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-contains-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `DoesNotContain` (**Does not contain**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar DoesNotContainFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase2) {\n  _inherits(DoesNotContainFilterOperatorComponent, _FilterOperatorBase2);\n\n  var _super29 = _createSuper(DoesNotContainFilterOperatorComponent);\n\n  function DoesNotContainFilterOperatorComponent(localization) {\n    _classCallCheck(this, DoesNotContainFilterOperatorComponent);\n\n    return _super29.call(this, \"doesnotcontain\", localization);\n  }\n\n  return DoesNotContainFilterOperatorComponent;\n}(FilterOperatorBase);\n\nDoesNotContainFilterOperatorComponent.ɵfac = function DoesNotContainFilterOperatorComponent_Factory(t) {\n  return new (t || DoesNotContainFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDoesNotContainFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DoesNotContainFilterOperatorComponent,\n  selectors: [[\"kendo-filter-not-contains-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return DoesNotContainFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function DoesNotContainFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDoesNotContainFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DoesNotContainFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return DoesNotContainFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-not-contains-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `EndsWith` (**Ends with**) string filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar EndsWithFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase3) {\n  _inherits(EndsWithFilterOperatorComponent, _FilterOperatorBase3);\n\n  var _super30 = _createSuper(EndsWithFilterOperatorComponent);\n\n  function EndsWithFilterOperatorComponent(localization) {\n    _classCallCheck(this, EndsWithFilterOperatorComponent);\n\n    return _super30.call(this, \"endswith\", localization);\n  }\n\n  return EndsWithFilterOperatorComponent;\n}(FilterOperatorBase);\n\nEndsWithFilterOperatorComponent.ɵfac = function EndsWithFilterOperatorComponent_Factory(t) {\n  return new (t || EndsWithFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nEndsWithFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: EndsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-endswith-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return EndsWithFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EndsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nEndsWithFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EndsWithFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return EndsWithFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-endswith-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `Equal` (**Is equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar EqualFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase4) {\n  _inherits(EqualFilterOperatorComponent, _FilterOperatorBase4);\n\n  var _super31 = _createSuper(EqualFilterOperatorComponent);\n\n  function EqualFilterOperatorComponent(localization) {\n    _classCallCheck(this, EqualFilterOperatorComponent);\n\n    return _super31.call(this, \"eq\", localization);\n  }\n\n  return EqualFilterOperatorComponent;\n}(FilterOperatorBase);\n\nEqualFilterOperatorComponent.ɵfac = function EqualFilterOperatorComponent_Factory(t) {\n  return new (t || EqualFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nEqualFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: EqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return EqualFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function EqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nEqualFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EqualFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return EqualFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-eq-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsEmpty` (**Is empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar IsEmptyFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase5) {\n  _inherits(IsEmptyFilterOperatorComponent, _FilterOperatorBase5);\n\n  var _super32 = _createSuper(IsEmptyFilterOperatorComponent);\n\n  function IsEmptyFilterOperatorComponent(localization) {\n    _classCallCheck(this, IsEmptyFilterOperatorComponent);\n\n    return _super32.call(this, \"isempty\", localization);\n  }\n\n  return IsEmptyFilterOperatorComponent;\n}(FilterOperatorBase);\n\nIsEmptyFilterOperatorComponent.ɵfac = function IsEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsEmptyFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nIsEmptyFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: IsEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isempty-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return IsEmptyFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nIsEmptyFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IsEmptyFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return IsEmptyFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-isempty-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNotEmpty` (**Is not empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar IsNotEmptyFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase6) {\n  _inherits(IsNotEmptyFilterOperatorComponent, _FilterOperatorBase6);\n\n  var _super33 = _createSuper(IsNotEmptyFilterOperatorComponent);\n\n  function IsNotEmptyFilterOperatorComponent(localization) {\n    _classCallCheck(this, IsNotEmptyFilterOperatorComponent);\n\n    return _super33.call(this, \"isnotempty\", localization);\n  }\n\n  return IsNotEmptyFilterOperatorComponent;\n}(FilterOperatorBase);\n\nIsNotEmptyFilterOperatorComponent.ɵfac = function IsNotEmptyFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotEmptyFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nIsNotEmptyFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: IsNotEmptyFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotempty-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return IsNotEmptyFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotEmptyFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nIsNotEmptyFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IsNotEmptyFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return IsNotEmptyFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-isnotempty-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNotNull` (**Is not null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar IsNotNullFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase7) {\n  _inherits(IsNotNullFilterOperatorComponent, _FilterOperatorBase7);\n\n  var _super34 = _createSuper(IsNotNullFilterOperatorComponent);\n\n  function IsNotNullFilterOperatorComponent(localization) {\n    _classCallCheck(this, IsNotNullFilterOperatorComponent);\n\n    return _super34.call(this, \"isnotnull\", localization);\n  }\n\n  return IsNotNullFilterOperatorComponent;\n}(FilterOperatorBase);\n\nIsNotNullFilterOperatorComponent.ɵfac = function IsNotNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNotNullFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nIsNotNullFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: IsNotNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnotnull-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return IsNotNullFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNotNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nIsNotNullFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IsNotNullFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return IsNotNullFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-isnotnull-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `IsNull` (**Is null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar IsNullFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase8) {\n  _inherits(IsNullFilterOperatorComponent, _FilterOperatorBase8);\n\n  var _super35 = _createSuper(IsNullFilterOperatorComponent);\n\n  function IsNullFilterOperatorComponent(localization) {\n    _classCallCheck(this, IsNullFilterOperatorComponent);\n\n    return _super35.call(this, \"isnull\", localization);\n  }\n\n  return IsNullFilterOperatorComponent;\n}(FilterOperatorBase);\n\nIsNullFilterOperatorComponent.ɵfac = function IsNullFilterOperatorComponent_Factory(t) {\n  return new (t || IsNullFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nIsNullFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: IsNullFilterOperatorComponent,\n  selectors: [[\"kendo-filter-isnull-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return IsNullFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function IsNullFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nIsNullFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(IsNullFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return IsNullFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-isnull-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `NotEqual` (**Is not equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar NotEqualFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase9) {\n  _inherits(NotEqualFilterOperatorComponent, _FilterOperatorBase9);\n\n  var _super36 = _createSuper(NotEqualFilterOperatorComponent);\n\n  function NotEqualFilterOperatorComponent(localization) {\n    _classCallCheck(this, NotEqualFilterOperatorComponent);\n\n    return _super36.call(this, \"neq\", localization);\n  }\n\n  return NotEqualFilterOperatorComponent;\n}(FilterOperatorBase);\n\nNotEqualFilterOperatorComponent.ɵfac = function NotEqualFilterOperatorComponent_Factory(t) {\n  return new (t || NotEqualFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nNotEqualFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NotEqualFilterOperatorComponent,\n  selectors: [[\"kendo-filter-neq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return NotEqualFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function NotEqualFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNotEqualFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NotEqualFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return NotEqualFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-neq-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `StartsWith` (**Starts with**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar StartsWithFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase10) {\n  _inherits(StartsWithFilterOperatorComponent, _FilterOperatorBase10);\n\n  var _super37 = _createSuper(StartsWithFilterOperatorComponent);\n\n  function StartsWithFilterOperatorComponent(localization) {\n    _classCallCheck(this, StartsWithFilterOperatorComponent);\n\n    return _super37.call(this, \"startswith\", localization);\n  }\n\n  return StartsWithFilterOperatorComponent;\n}(FilterOperatorBase);\n\nStartsWithFilterOperatorComponent.ɵfac = function StartsWithFilterOperatorComponent_Factory(t) {\n  return new (t || StartsWithFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nStartsWithFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: StartsWithFilterOperatorComponent,\n  selectors: [[\"kendo-filter-startswith-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return StartsWithFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function StartsWithFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nStartsWithFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StartsWithFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return StartsWithFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-startswith-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Greater` (**Is greater than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar GreaterFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase11) {\n  _inherits(GreaterFilterOperatorComponent, _FilterOperatorBase11);\n\n  var _super38 = _createSuper(GreaterFilterOperatorComponent);\n\n  function GreaterFilterOperatorComponent(localization) {\n    _classCallCheck(this, GreaterFilterOperatorComponent);\n\n    return _super38.call(this, \"gt\", localization);\n  }\n\n  return GreaterFilterOperatorComponent;\n}(FilterOperatorBase);\n\nGreaterFilterOperatorComponent.ɵfac = function GreaterFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nGreaterFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GreaterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gt-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return GreaterFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nGreaterFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GreaterFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return GreaterFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-gt-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/**\n * Represents the `GreaterOrEqualTo` (**Is greater than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar GreaterOrEqualToFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase12) {\n  _inherits(GreaterOrEqualToFilterOperatorComponent, _FilterOperatorBase12);\n\n  var _super39 = _createSuper(GreaterOrEqualToFilterOperatorComponent);\n\n  function GreaterOrEqualToFilterOperatorComponent(localization) {\n    _classCallCheck(this, GreaterOrEqualToFilterOperatorComponent);\n\n    return _super39.call(this, \"gte\", localization);\n  }\n\n  return GreaterOrEqualToFilterOperatorComponent;\n}(FilterOperatorBase);\n\nGreaterOrEqualToFilterOperatorComponent.ɵfac = function GreaterOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || GreaterOrEqualToFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nGreaterOrEqualToFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GreaterOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-gte-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return GreaterOrEqualToFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function GreaterOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nGreaterOrEqualToFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GreaterOrEqualToFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return GreaterOrEqualToFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-gte-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Less` (**Is less than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar LessFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase13) {\n  _inherits(LessFilterOperatorComponent, _FilterOperatorBase13);\n\n  var _super40 = _createSuper(LessFilterOperatorComponent);\n\n  function LessFilterOperatorComponent(localization) {\n    _classCallCheck(this, LessFilterOperatorComponent);\n\n    return _super40.call(this, \"lt\", localization);\n  }\n\n  return LessFilterOperatorComponent;\n}(FilterOperatorBase);\n\nLessFilterOperatorComponent.ɵfac = function LessFilterOperatorComponent_Factory(t) {\n  return new (t || LessFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLessFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: LessFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lt-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return LessFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nLessFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LessFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return LessFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-lt-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `LessOrEqualTo` (**Is less than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar LessOrEqualToFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase14) {\n  _inherits(LessOrEqualToFilterOperatorComponent, _FilterOperatorBase14);\n\n  var _super41 = _createSuper(LessOrEqualToFilterOperatorComponent);\n\n  function LessOrEqualToFilterOperatorComponent(localization) {\n    _classCallCheck(this, LessOrEqualToFilterOperatorComponent);\n\n    return _super41.call(this, \"lte\", localization);\n  }\n\n  return LessOrEqualToFilterOperatorComponent;\n}(FilterOperatorBase);\n\nLessOrEqualToFilterOperatorComponent.ɵfac = function LessOrEqualToFilterOperatorComponent_Factory(t) {\n  return new (t || LessOrEqualToFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nLessOrEqualToFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: LessOrEqualToFilterOperatorComponent,\n  selectors: [[\"kendo-filter-lte-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return LessOrEqualToFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function LessOrEqualToFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nLessOrEqualToFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(LessOrEqualToFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return LessOrEqualToFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-lte-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Greater` (**Is after**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar AfterFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase15) {\n  _inherits(AfterFilterOperatorComponent, _FilterOperatorBase15);\n\n  var _super42 = _createSuper(AfterFilterOperatorComponent);\n\n  function AfterFilterOperatorComponent(localization) {\n    _classCallCheck(this, AfterFilterOperatorComponent);\n\n    return _super42.call(this, \"after\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(AfterFilterOperatorComponent, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        text: this.text,\n        value: \"gt\"\n      };\n    }\n  }]);\n\n  return AfterFilterOperatorComponent;\n}(FilterOperatorBase);\n\nAfterFilterOperatorComponent.ɵfac = function AfterFilterOperatorComponent_Factory(t) {\n  return new (t || AfterFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nAfterFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AfterFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return AfterFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nAfterFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AfterFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return AfterFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-after-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `GreaterOrEqualTo` (**Is after or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar AfterEqFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase16) {\n  _inherits(AfterEqFilterOperatorComponent, _FilterOperatorBase16);\n\n  var _super43 = _createSuper(AfterEqFilterOperatorComponent);\n\n  function AfterEqFilterOperatorComponent(localization) {\n    _classCallCheck(this, AfterEqFilterOperatorComponent);\n\n    return _super43.call(this, \"after-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(AfterEqFilterOperatorComponent, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        text: this.text,\n        value: \"gte\"\n      };\n    }\n  }]);\n\n  return AfterEqFilterOperatorComponent;\n}(FilterOperatorBase);\n\nAfterEqFilterOperatorComponent.ɵfac = function AfterEqFilterOperatorComponent_Factory(t) {\n  return new (t || AfterEqFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nAfterEqFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: AfterEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-after-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return AfterEqFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function AfterEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nAfterEqFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AfterEqFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return AfterEqFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-after-eq-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `LessOrEqualTo` (**Is before or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar BeforeEqFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase17) {\n  _inherits(BeforeEqFilterOperatorComponent, _FilterOperatorBase17);\n\n  var _super44 = _createSuper(BeforeEqFilterOperatorComponent);\n\n  function BeforeEqFilterOperatorComponent(localization) {\n    _classCallCheck(this, BeforeEqFilterOperatorComponent);\n\n    return _super44.call(this, \"before-eq\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(BeforeEqFilterOperatorComponent, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        text: this.text,\n        value: \"lte\"\n      };\n    }\n  }]);\n\n  return BeforeEqFilterOperatorComponent;\n}(FilterOperatorBase);\n\nBeforeEqFilterOperatorComponent.ɵfac = function BeforeEqFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeEqFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nBeforeEqFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: BeforeEqFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-eq-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return BeforeEqFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeEqFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nBeforeEqFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BeforeEqFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return BeforeEqFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-before-eq-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n/*\n * Represents the `Less then` (**Is before**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\n\n\nvar BeforeFilterOperatorComponent = /*#__PURE__*/function (_FilterOperatorBase18) {\n  _inherits(BeforeFilterOperatorComponent, _FilterOperatorBase18);\n\n  var _super45 = _createSuper(BeforeFilterOperatorComponent);\n\n  function BeforeFilterOperatorComponent(localization) {\n    _classCallCheck(this, BeforeFilterOperatorComponent);\n\n    return _super45.call(this, \"before\", localization);\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(BeforeFilterOperatorComponent, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        text: this.text,\n        value: \"lt\"\n      };\n    }\n  }]);\n\n  return BeforeFilterOperatorComponent;\n}(FilterOperatorBase);\n\nBeforeFilterOperatorComponent.ɵfac = function BeforeFilterOperatorComponent_Factory(t) {\n  return new (t || BeforeFilterOperatorComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nBeforeFilterOperatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: BeforeFilterOperatorComponent,\n  selectors: [[\"kendo-filter-before-operator\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: FilterOperatorBase,\n    useExisting: forwardRef(function () {\n      return BeforeFilterOperatorComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function BeforeFilterOperatorComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nBeforeFilterOperatorComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BeforeFilterOperatorComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: FilterOperatorBase,\n        useExisting: forwardRef(function () {\n          return BeforeFilterOperatorComponent;\n        })\n      }],\n      selector: 'kendo-filter-before-operator',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, null);\n})();\n\nvar FILTER_OPERATORS = [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent];\nvar importedModules = [CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule];\nvar COMPONENTS = [FilterInputDirective];\n/**\n * @hidden\n */\n\nvar SharedFilterModule = /*#__PURE__*/function () {\n  function SharedFilterModule() {\n    _classCallCheck(this, SharedFilterModule);\n  }\n\n  _createClass(SharedFilterModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [].concat(FILTER_OPERATORS);\n    }\n  }]);\n\n  return SharedFilterModule;\n}();\n\nSharedFilterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: SharedFilterModule\n});\nSharedFilterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function SharedFilterModule_Factory(t) {\n    return new (t || SharedFilterModule)();\n  },\n  imports: [[].concat(importedModules), CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SharedFilterModule, {\n    declarations: [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, FilterInputDirective],\n    imports: [CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule],\n    exports: [FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, CommonModule, ReactiveFormsModule, FormsModule, DropDownListModule, AutoCompleteModule, InputsModule, DatePickerModule, PopupModule, SharedModule, FilterInputDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SharedFilterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [FILTER_OPERATORS, COMPONENTS],\n      exports: [FILTER_OPERATORS, importedModules, COMPONENTS],\n      imports: [].concat(importedModules)\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar FilterHostDirective = /*#__PURE__*/function () {\n  function FilterHostDirective(host, resolver) {\n    _classCallCheck(this, FilterHostDirective);\n\n    this.host = host;\n    this.resolver = resolver;\n  }\n\n  _createClass(FilterHostDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.component = this.host.createComponent(this.resolver.resolveComponentFactory(this.componentType()));\n      this.initComponent({\n        column: this.column,\n        filter: this.filter\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.component) {\n        this.component.destroy();\n        this.component = null;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (anyChanged([\"column\", \"filter\"], changes)) {\n        this.initComponent({\n          column: this.column,\n          filter: this.filter\n        });\n      }\n    }\n  }, {\n    key: \"initComponent\",\n    value: function initComponent(_ref31) {\n      var column = _ref31.column,\n          filter$$1 = _ref31.filter;\n      var instance = this.component.instance;\n      instance.column = column;\n      instance.filter = filter$$1;\n    }\n  }]);\n\n  return FilterHostDirective;\n}();\n\nFilterHostDirective.ɵfac = function FilterHostDirective_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nFilterHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterHostDirective,\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\nFilterHostDirective.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }]\n};\n/**\n * @hidden\n *\n * > List the following components in the GridModule as `entryComponents`.\n */\n\nvar filterComponentFactory = function filterComponentFactory(type) {\n  return {\n    \"boolean\": BooleanFilterCellComponent,\n    \"date\": DateFilterCellComponent,\n    \"numeric\": NumericFilterCellComponent,\n    \"text\": StringFilterCellComponent\n  }[type];\n};\n/**\n * @hidden\n */\n\n\nvar FilterCellHostDirective = /*#__PURE__*/function (_FilterHostDirective) {\n  _inherits(FilterCellHostDirective, _FilterHostDirective);\n\n  var _super46 = _createSuper(FilterCellHostDirective);\n\n  function FilterCellHostDirective(host, resolver) {\n    _classCallCheck(this, FilterCellHostDirective);\n\n    return _super46.call(this, host, resolver);\n  }\n\n  _createClass(FilterCellHostDirective, [{\n    key: \"componentType\",\n    value: function componentType() {\n      if (!isNullOrEmptyString(this.column.filter)) {\n        return filterComponentFactory(this.column.filter);\n      }\n\n      return StringFilterCellComponent;\n    }\n  }]);\n\n  return FilterCellHostDirective;\n}(FilterHostDirective);\n\nFilterCellHostDirective.ɵfac = function FilterCellHostDirective_Factory(t) {\n  return new (t || FilterCellHostDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver));\n};\n\nFilterCellHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterCellHostDirective,\n  selectors: [[\"\", \"kendoFilterCellHost\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nFilterCellHostDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterCellHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterCellHost]'\n    }]\n  }], function () {\n    return [{\n      type: ViewContainerRef\n    }, {\n      type: ComponentFactoryResolver\n    }];\n  }, null);\n})();\n\nvar INTERNAL_COMPONENTS = [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent];\nvar ENTRY_COMPONENTS = [StringFilterCellComponent, NumericFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent];\n/**\n * @hidden\n */\n\nvar RowFilterModule = /*#__PURE__*/function () {\n  function RowFilterModule() {\n    _classCallCheck(this, RowFilterModule);\n  }\n\n  _createClass(RowFilterModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, SharedFilterModule.exports()];\n    }\n  }]);\n\n  return RowFilterModule;\n}();\n\nRowFilterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: RowFilterModule\n});\nRowFilterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function RowFilterModule_Factory(t) {\n    return new (t || RowFilterModule)();\n  },\n  imports: [[SharedFilterModule], SharedFilterModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RowFilterModule, {\n    declarations: [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent],\n    imports: [SharedFilterModule],\n    exports: [FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellWrapperComponent, DateFilterCellComponent, SharedFilterModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RowFilterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS],\n      entryComponents: ENTRY_COMPONENTS,\n      exports: [INTERNAL_COMPONENTS, SharedFilterModule],\n      imports: [SharedFilterModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar normalizeSettings = function normalizeSettings(_ref32) {\n  var _ref32$buttonCount = _ref32.buttonCount,\n      buttonCount = _ref32$buttonCount === void 0 ? 10 : _ref32$buttonCount,\n      _ref32$info = _ref32.info,\n      info = _ref32$info === void 0 ? true : _ref32$info,\n      _ref32$type = _ref32.type,\n      type = _ref32$type === void 0 ? 'numeric' : _ref32$type,\n      _ref32$pageSizes = _ref32.pageSizes,\n      pageSizes = _ref32$pageSizes === void 0 ? false : _ref32$pageSizes,\n      _ref32$previousNext = _ref32.previousNext,\n      previousNext = _ref32$previousNext === void 0 ? true : _ref32$previousNext;\n  return {\n    buttonCount: buttonCount,\n    info: info,\n    pageSizes: pageSizes === true ? [5, 10, 20] : pageSizes,\n    previousNext: previousNext,\n    type: type\n  };\n};\n/**\n * @hidden\n */\n\n\nvar normalize = function normalize(settings) {\n  return normalizeSettings(settings === true ? {} : settings);\n};\n/**\n * @hidden\n */\n\n\nvar PagerComponent = /*#__PURE__*/function () {\n  function PagerComponent(pagerContext) {\n    _classCallCheck(this, PagerComponent);\n\n    this.pagerContext = pagerContext;\n    this.total = 0;\n    this.skip = 1;\n    this.pageChange = new EventEmitter();\n    this.settings = normalize({});\n    this._templateContext = {};\n  }\n\n  _createClass(PagerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.pageChangeSubscription = this.pagerContext.pageChange.subscribe(this.changePage.bind(this));\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (anyChanged([\"pageSize\", \"skip\", \"total\"], changes, false)) {\n        this.pagerContext.notifyChanges({\n          pageSize: this.pageSize,\n          skip: this.skip,\n          total: this.total\n        });\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.pageChangeSubscription) {\n        this.pageChangeSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(event) {\n      this.pageChange.emit(event);\n    }\n  }, {\n    key: \"options\",\n    set: function set(value) {\n      this.settings = normalize(value);\n    }\n  }, {\n    key: \"pagerWrapClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"gridPagerClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"widgetClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"totalPages\",\n    get: function get() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n  }, {\n    key: \"currentPage\",\n    get: function get() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n  }, {\n    key: \"templateContext\",\n    get: function get() {\n      var context = this._templateContext;\n      context.totalPages = this.totalPages;\n      context.total = this.total;\n      context.skip = this.skip;\n      context.pageSize = this.pageSize;\n      context.currentPage = this.currentPage;\n      return context;\n    }\n  }]);\n\n  return PagerComponent;\n}();\n\nPagerComponent.ɵfac = function PagerComponent_Factory(t) {\n  return new (t || PagerComponent)(ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerComponent,\n  selectors: [[\"kendo-pager\"]],\n  hostVars: 6,\n  hostBindings: function PagerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-pager-wrap\", ctx.pagerWrapClass)(\"k-grid-pager\", ctx.gridPagerClass)(\"k-widget\", ctx.widgetClass);\n    }\n  },\n  inputs: {\n    total: \"total\",\n    skip: \"skip\",\n    options: \"options\",\n    pageSize: \"pageSize\",\n    template: \"template\"\n  },\n  outputs: {\n    pageChange: \"pageChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"buttonCount\", 4, \"ngIf\"], [3, \"pageSizes\", 4, \"ngIf\"], [3, \"buttonCount\"], [3, \"pageSizes\"]],\n  template: function PagerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, PagerComponent_ng_container_0_Template, 1, 2, \"ng-container\", 0);\n      ɵngcc0.ɵɵtemplate(1, PagerComponent_ng_container_1_Template, 7, 6, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.template == null ? null : ctx.template.templateRef);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.template == null ? null : ctx.template.templateRef));\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, PagerPrevButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerNextButtonsComponent, PagerInfoComponent, PagerPageSizesComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nPagerComponent.ctorParameters = function () {\n  return [{\n    type: PagerContextService\n  }];\n};\n\nPagerComponent.propDecorators = {\n  total: [{\n    type: Input\n  }],\n  skip: [{\n    type: Input\n  }],\n  pageSize: [{\n    type: Input\n  }],\n  options: [{\n    type: Input\n  }],\n  template: [{\n    type: Input\n  }],\n  pageChange: [{\n    type: Output\n  }],\n  pagerWrapClass: [{\n    type: HostBinding,\n    args: ['class.k-pager-wrap']\n  }],\n  gridPagerClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-pager']\n  }],\n  widgetClass: [{\n    type: HostBinding,\n    args: ['class.k-widget']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pager',\n      template: \"\\n        <ng-container\\n            *ngIf=\\\"template?.templateRef\\\"\\n            [ngTemplateOutlet]=\\\"template.templateRef\\\"\\n            [ngTemplateOutletContext]=\\\"templateContext\\\">\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!template?.templateRef\\\">\\n            <kendo-pager-prev-buttons *ngIf=\\\"settings.previousNext\\\"></kendo-pager-prev-buttons>\\n            <kendo-pager-numeric-buttons\\n                *ngIf=\\\"settings.type === 'numeric'\\\"\\n                [buttonCount]=\\\"settings.buttonCount\\\">\\n            </kendo-pager-numeric-buttons>\\n            <kendo-pager-input *ngIf=\\\"settings.type === 'input'\\\"></kendo-pager-input>\\n            <kendo-pager-next-buttons *ngIf=\\\"settings.previousNext\\\"></kendo-pager-next-buttons>\\n            <kendo-pager-info *ngIf='settings.info'></kendo-pager-info>\\n            <kendo-pager-page-sizes *ngIf=\\\"settings.pageSizes\\\" [pageSizes]=\\\"settings.pageSizes\\\"></kendo-pager-page-sizes>\\n        </ng-container>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: PagerContextService\n    }];\n  }, {\n    total: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    pageChange: [{\n      type: Output\n    }],\n    options: [{\n      type: Input\n    }],\n    pagerWrapClass: [{\n      type: HostBinding,\n      args: ['class.k-pager-wrap']\n    }],\n    gridPagerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-pager']\n    }],\n    widgetClass: [{\n      type: HostBinding,\n      args: ['class.k-widget']\n    }],\n    pageSize: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar PagerElementComponent = /*#__PURE__*/function () {\n  function PagerElementComponent(localization, pagerContext, cd) {\n    _classCallCheck(this, PagerElementComponent);\n\n    this.localization = localization;\n    this.pagerContext = pagerContext;\n    this.cd = cd;\n    this.total = this.pagerContext.total;\n    this.skip = this.pagerContext.skip;\n    this.pageSize = this.pagerContext.pageSize;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerElementComponent\n   */\n\n\n  _createClass(PagerElementComponent, [{\n    key: \"textFor\",\n\n    /**\n     * @hidden\n     *\n     * @param {string} key\n     * @returns {string}\n     *\n     * @memberOf PagerElementComponent\n     */\n    value: function textFor(key) {\n      return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     *\n     * @param {number} page\n     *\n     * @memberOf PagerElementComponent\n     */\n\n  }, {\n    key: \"changePage\",\n    value: function changePage(page) {\n      this.pagerContext.changePage(page);\n      return false;\n    }\n    /**\n     * @hidden\n     *\n     * @memberOf PagerElementComponent\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this91 = this;\n\n      this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n      this.subscriptions.add(this.localization.changes.subscribe(function () {\n        return _this91.cd.markForCheck();\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n  }, {\n    key: \"currentPage\",\n    get: function get() {\n      return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n\n  }, {\n    key: \"totalPages\",\n    get: function get() {\n      return Math.ceil((this.total || 0) / this.pageSize);\n    }\n  }]);\n\n  return PagerElementComponent;\n}();\n\nPagerElementComponent.ɵfac = function PagerElementComponent_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nPagerElementComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PagerElementComponent\n}); // tslint:disable:no-access-missing-member\n\n/**\n * Displays buttons for navigating to the first and to the previous page ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\nvar PagerPrevButtonsComponent = /*#__PURE__*/function (_PagerElementComponen) {\n  _inherits(PagerPrevButtonsComponent, _PagerElementComponen);\n\n  var _super47 = _createSuper(PagerPrevButtonsComponent);\n\n  function PagerPrevButtonsComponent(localization, pagerContext, cd) {\n    _classCallCheck(this, PagerPrevButtonsComponent);\n\n    return _super47.call(this, localization, pagerContext, cd);\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf PagerPrevButtonsComponent\n   */\n\n\n  _createClass(PagerPrevButtonsComponent, [{\n    key: \"onChanges\",\n    value: function onChanges(_ref33) {\n      var total = _ref33.total,\n          skip = _ref33.skip,\n          pageSize = _ref33.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.currentPage === 1 || !this.total;\n    }\n  }]);\n\n  return PagerPrevButtonsComponent;\n}(PagerElementComponent);\n\nPagerPrevButtonsComponent.ɵfac = function PagerPrevButtonsComponent_Factory(t) {\n  return new (t || PagerPrevButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nPagerPrevButtonsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerPrevButtonsComponent,\n  selectors: [[\"kendo-pager-prev-buttons\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 14,\n  consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 3, \"title\", \"ngClass\", \"click\"], [3, \"ngClass\"]],\n  template: function PagerPrevButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_a_click_0_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(0) : false;\n      });\n      ɵngcc0.ɵɵelement(1, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerPrevButtonsComponent_Template_a_click_2_listener() {\n        return ctx.currentPage !== 1 ? ctx.changePage(ctx.currentPage - 2) : false;\n      });\n      ɵngcc0.ɵɵelement(3, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"title\", ctx.textFor(\"pagerFirstPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c130, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(10, _c131));\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerFirstPage\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"title\", ctx.textFor(\"pagerPreviousPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c132, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(13, _c133));\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerPreviousPage\"));\n    }\n  },\n  directives: [ɵngcc1.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPagerPrevButtonsComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PagerContextService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerPrevButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-prev-buttons',\n      template: \"\\n        <a  href=\\\"#\\\"\\n            tabindex=\\\"-1\\\"\\n            [title]=\\\"textFor('pagerFirstPage')\\\"\\n            (click)=\\\"currentPage !== 1 ? changePage(0) : false\\\"\\n            [ngClass]=\\\"{\\n                'k-link': true,\\n                'k-pager-nav': true,\\n                'k-state-disabled': disabled,\\n                'k-pager-first': true\\n            }\\\">\\n            <span [attr.aria-label]=\\\"textFor('pagerFirstPage')\\\"\\n                [ngClass]=\\\"{\\n                    'k-icon':true,\\n                    'k-i-seek-w': true\\n                }\\\">\\n            </span>\\n        </a>\\n        <a  href=\\\"#\\\"\\n            tabindex=\\\"-1\\\"\\n            [title]=\\\"textFor('pagerPreviousPage')\\\"\\n            (click)=\\\"currentPage !== 1 ? changePage(currentPage-2) : false\\\"\\n            [ngClass]=\\\"{\\n                'k-link': true,\\n                'k-pager-nav': true,\\n                'k-state-disabled': disabled,\\n                '': true\\n            }\\\">\\n            <span [attr.aria-label]=\\\"textFor('pagerPreviousPage')\\\"\\n                [ngClass]=\\\"{\\n                    'k-icon':true,\\n                    'k-i-arrow-w': true\\n                }\\\">\\n            </span>\\n        </a>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})(); // tslint:disable: no-access-missing-member\n\n/**\n * Displays buttons for navigating to the next and to the last page ([see example]({% slug paging_grid %}#toc-pager-template)).\n */\n\n\nvar PagerNextButtonsComponent = /*#__PURE__*/function (_PagerElementComponen2) {\n  _inherits(PagerNextButtonsComponent, _PagerElementComponen2);\n\n  var _super48 = _createSuper(PagerNextButtonsComponent);\n\n  function PagerNextButtonsComponent(localization, pagerContext, cd) {\n    _classCallCheck(this, PagerNextButtonsComponent);\n\n    return _super48.call(this, localization, pagerContext, cd);\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {boolean}\n   * @memberOf PagerNextButtonsComponent\n   */\n\n\n  _createClass(PagerNextButtonsComponent, [{\n    key: \"onChanges\",\n    value: function onChanges(_ref34) {\n      var total = _ref34.total,\n          skip = _ref34.skip,\n          pageSize = _ref34.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.currentPage === this.totalPages || !this.total;\n    }\n  }]);\n\n  return PagerNextButtonsComponent;\n}(PagerElementComponent);\n\nPagerNextButtonsComponent.ɵfac = function PagerNextButtonsComponent_Factory(t) {\n  return new (t || PagerNextButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nPagerNextButtonsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerNextButtonsComponent,\n  selectors: [[\"kendo-pager-next-buttons\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 14,\n  consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 3, \"title\", \"ngClass\", \"click\"], [3, \"ngClass\"]],\n  template: function PagerNextButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_a_click_0_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.currentPage) : false;\n      });\n      ɵngcc0.ɵɵelement(1, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(2, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function PagerNextButtonsComponent_Template_a_click_2_listener() {\n        return ctx.currentPage !== ctx.totalPages ? ctx.changePage(ctx.totalPages - 1) : false;\n      });\n      ɵngcc0.ɵɵelement(3, \"span\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"title\", ctx.textFor(\"pagerNextPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c132, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(10, _c134));\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerNextPage\"));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"title\", ctx.textFor(\"pagerLastPage\"))(\"ngClass\", ɵngcc0.ɵɵpureFunction1(11, _c135, ctx.disabled));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(13, _c136));\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerLastPage\"));\n    }\n  },\n  directives: [ɵngcc1.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPagerNextButtonsComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PagerContextService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerNextButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-next-buttons',\n      template: \"\\n        <a  href=\\\"#\\\"\\n            tabindex=\\\"-1\\\"\\n            [title]=\\\"textFor('pagerNextPage')\\\"\\n            (click)=\\\"currentPage !== totalPages ? changePage(currentPage) : false\\\"\\n            [ngClass]=\\\"{\\n                'k-link': true,\\n                'k-pager-nav': true,\\n                'k-state-disabled': disabled,\\n                '': true\\n            }\\\">\\n            <span [attr.aria-label]=\\\"textFor('pagerNextPage')\\\"\\n                [ngClass]=\\\"{\\n                    'k-icon':true,\\n                    'k-i-arrow-e': true\\n                }\\\">\\n            </span>\\n        </a>\\n        <a  href=\\\"#\\\"\\n            tabindex=\\\"-1\\\"\\n            [title]=\\\"textFor('pagerLastPage')\\\"\\n            (click)=\\\"currentPage !== totalPages ? changePage(totalPages-1) : false\\\"\\n            [ngClass]=\\\"{\\n                'k-link': true,\\n                'k-pager-nav': true,\\n                'k-state-disabled': disabled,\\n                'k-pager-last': true\\n            }\\\">\\n            <span [attr.aria-label]=\\\"textFor('pagerLastPage')\\\"\\n                [ngClass]=\\\"{\\n                    'k-icon':true,\\n                    'k-i-seek-e': true\\n                }\\\">\\n            </span>\\n        </a>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * Displays numeric buttons to enable navigation between the pages.\n */\n\n\nvar PagerNumericButtonsComponent = /*#__PURE__*/function (_PagerElementComponen3) {\n  _inherits(PagerNumericButtonsComponent, _PagerElementComponen3);\n\n  var _super49 = _createSuper(PagerNumericButtonsComponent);\n\n  function PagerNumericButtonsComponent(localization, cd, pagerContext) {\n    var _this92;\n\n    _classCallCheck(this, PagerNumericButtonsComponent);\n\n    _this92 = _super49.call(this, localization, pagerContext, cd);\n    _this92.pagerContext = pagerContext;\n    return _this92;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number[]}\n   * @memberOf PagerNumericButtonsComponent\n   */\n\n\n  _createClass(PagerNumericButtonsComponent, [{\n    key: \"pageLabel\",\n\n    /**\n     * @hidden\n     */\n    value: function pageLabel(num) {\n      var pageText = this.textFor('pagerPage');\n\n      if (pageText) {\n        return pageText + ' ' + num;\n      }\n\n      return num.toString();\n    }\n  }, {\n    key: \"onChanges\",\n    value: function onChanges(_ref35) {\n      var total = _ref35.total,\n          skip = _ref35.skip,\n          pageSize = _ref35.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"buttons\",\n    get: function get() {\n      var result = [];\n\n      for (var idx = this.start; idx <= this.end; idx++) {\n        result.push(idx);\n      }\n\n      return result;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      return Math.min(this.start + this.buttonCount - 1, this.totalPages);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"start\",\n    get: function get() {\n      var page = this.currentPage;\n      var buttonCount = this.buttonCount;\n\n      if (page > buttonCount) {\n        var reminder = page % buttonCount;\n        return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n      }\n\n      return 1;\n    }\n  }]);\n\n  return PagerNumericButtonsComponent;\n}(PagerElementComponent);\n\nPagerNumericButtonsComponent.ɵfac = function PagerNumericButtonsComponent_Factory(t) {\n  return new (t || PagerNumericButtonsComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerNumericButtonsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerNumericButtonsComponent,\n  selectors: [[\"kendo-pager-numeric-buttons\"]],\n  inputs: {\n    buttonCount: \"buttonCount\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 5,\n  consts: [[3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-link\", 3, \"click\"], [\"href\", \"#\", \"tabindex\", \"-1\", 3, \"ngClass\", \"click\"]],\n  template: function PagerNumericButtonsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, PagerNumericButtonsComponent_li_1_Template, 3, 1, \"li\", 1);\n      ɵngcc0.ɵɵtemplate(2, PagerNumericButtonsComponent_li_2_Template, 3, 5, \"li\", 2);\n      ɵngcc0.ɵɵtemplate(3, PagerNumericButtonsComponent_li_3_Template, 3, 1, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(4, _c138));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.start > 1);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.buttons);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.end < ctx.totalPages);\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc1.NgIf, ɵngcc1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPagerNumericButtonsComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PagerContextService\n  }];\n};\n\nPagerNumericButtonsComponent.propDecorators = {\n  buttonCount: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerNumericButtonsComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-numeric-buttons',\n      template: \"\\n       <ul [ngClass]=\\\"{'k-pager-numbers': true, 'k-reset': true}\\\">\\n            <li *ngIf=\\\"start > 1\\\">\\n                <a  class=\\\"k-link\\\"\\n                    [attr.aria-label]=\\\"pageLabel(start - 1)\\\"\\n                    href=\\\"#\\\"\\n                    tabindex=\\\"-1\\\"\\n                    (click)=\\\"changePage(start - 2)\\\">...</a>\\n            </li>\\n            <li *ngFor=\\\"let num of buttons\\\">\\n                <a  href=\\\"#\\\"\\n                    [attr.aria-label]=\\\"pageLabel(num)\\\"\\n                    tabindex=\\\"-1\\\"\\n                    [ngClass]=\\\"{'k-link': true, 'k-state-selected':currentPage == num}\\\"\\n                    (click)=\\\"changePage(num - 1)\\\">\\n                    {{num}}\\n                </a>\\n            </li>\\n            <li *ngIf=\\\"end < totalPages\\\">\\n                <a  class=\\\"k-link\\\"\\n                    [attr.aria-label]=\\\"pageLabel(end + 1)\\\"\\n                    href=\\\"#\\\"\\n                    tabindex=\\\"-1\\\"\\n                    (click)=\\\"changePage(end)\\\">...</a>\\n            </li>\\n        </ul>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }];\n  }, {\n    buttonCount: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Displays an input element which allows the typing and rendering of page numbers.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-input></kendo-pager-input>\n *          <kendo-pager-info></kendo-pager-info>\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nvar PagerInputComponent = /*#__PURE__*/function (_PagerElementComponen4) {\n  _inherits(PagerInputComponent, _PagerElementComponen4);\n\n  var _super50 = _createSuper(PagerInputComponent);\n\n  function PagerInputComponent(localization, pagerContext, zone, cd) {\n    var _this93;\n\n    _classCallCheck(this, PagerInputComponent);\n\n    _this93 = _super50.call(this, localization, pagerContext, cd);\n    _this93.pagerContext = pagerContext;\n    _this93.zone = zone;\n    /**\n     * @hidden\n     *\n     * @param {string} value\n     *\n     * @memberOf PagerInputComponent\n     */\n\n    _this93.handleKeyDown = function (event) {\n      var incomingValue = _this93.numericInput.value || _this93.current;\n\n      if (event.keyCode === Keys.Enter) {\n        event.preventDefault();\n\n        if (incomingValue !== _this93.current) {\n          _this93.zone.run(function () {\n            _this93.changePage(incomingValue - 1);\n          });\n        }\n      }\n    };\n    /**\n     * @hidden\n     *\n     * @param {string} value\n     *\n     * @memberOf PagerInputComponent\n     */\n\n\n    _this93.handleBlur = function () {\n      var inputValue = _this93.numericInput.value;\n\n      if (!inputValue) {\n        _this93.numericInput.writeValue(_this93.current);\n\n        return;\n      }\n\n      if (inputValue !== _this93.current) {\n        _this93.zone.run(function () {\n          _this93.changePage(inputValue - 1);\n        });\n      }\n    };\n\n    return _this93;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(PagerInputComponent, [{\n    key: \"onChanges\",\n    value: function onChanges(_ref36) {\n      var total = _ref36.total,\n          skip = _ref36.skip,\n          pageSize = _ref36.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"current\",\n    get: function get() {\n      return this.hasPages ? this.currentPage : 0;\n    }\n  }, {\n    key: \"hasPages\",\n    get: function get() {\n      return this.totalPages !== 0;\n    }\n  }]);\n\n  return PagerInputComponent;\n}(PagerElementComponent);\n\nPagerInputComponent.ɵfac = function PagerInputComponent_Factory(t) {\n  return new (t || PagerInputComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(PagerContextService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nPagerInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerInputComponent,\n  selectors: [[\"kendo-pager-input\"]],\n  viewQuery: function PagerInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(NumericTextBoxComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.numericInput = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 4,\n  vars: 17,\n  consts: [[3, \"ngClass\"], [\"format\", \"n0\", 3, \"spinners\", \"decimals\", \"disabled\", \"value\", \"min\", \"max\", \"autoCorrect\", \"title\", \"kendoEventsOutsideAngular\"]],\n  template: function PagerInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox\", 1);\n      ɵngcc0.ɵɵtext(3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(13, _c139));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"pagerPage\"), \" \");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"spinners\", false)(\"decimals\", 0)(\"disabled\", !ctx.hasPages)(\"value\", ctx.current)(\"min\", ctx.hasPages ? 1 : 0)(\"max\", ctx.totalPages)(\"autoCorrect\", true)(\"title\", ctx.textFor(\"pagerPageNumberInputTitle\"))(\"kendoEventsOutsideAngular\", ɵngcc0.ɵɵpureFunction2(14, _c140, ctx.handleKeyDown, ctx.handleBlur));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate2(\" \", ctx.textFor(\"pagerOf\"), \" \", ctx.totalPages, \" \");\n    }\n  },\n  directives: [ɵngcc1.NgClass, ɵngcc3.NumericTextBoxComponent, ɵngcc2.EventsOutsideAngularDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nPagerInputComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: PagerContextService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nPagerInputComponent.propDecorators = {\n  numericInput: [{\n    type: ViewChild,\n    args: [NumericTextBoxComponent]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-pager-input',\n      template: \"\\n     <span [ngClass]=\\\"{'k-pager-input': true, 'k-label': true}\\\">\\n        {{textFor('pagerPage')}}\\n        <kendo-numerictextbox\\n            [spinners]=\\\"false\\\"\\n            [decimals]=\\\"0\\\"\\n            format=\\\"n0\\\"\\n            [disabled]=\\\"!hasPages\\\"\\n            [value]=\\\"current\\\"\\n            [min]=\\\"hasPages ? 1 : 0\\\"\\n            [max]=\\\"totalPages\\\"\\n            [autoCorrect]=\\\"true\\\"\\n            [title]=\\\"textFor('pagerPageNumberInputTitle')\\\"\\n            [kendoEventsOutsideAngular]=\\\"{\\n                keydown: handleKeyDown,\\n                focusout: handleBlur\\n            }\\\">\\n        </kendo-numerictextbox>\\n        {{textFor('pagerOf')}} {{totalPages}}\\n     </span>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: PagerContextService\n    }, {\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    numericInput: [{\n      type: ViewChild,\n      args: [NumericTextBoxComponent]\n    }]\n  });\n})(); // tslint:disable:no-access-missing-member\n\n/**\n * Displays information about the current page and the total number of records ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\n\nvar PagerInfoComponent = /*#__PURE__*/function (_PagerElementComponen5) {\n  _inherits(PagerInfoComponent, _PagerElementComponen5);\n\n  var _super51 = _createSuper(PagerInfoComponent);\n\n  function PagerInfoComponent(localization, cd, pagerContext) {\n    var _this94;\n\n    _classCallCheck(this, PagerInfoComponent);\n\n    _this94 = _super51.call(this, localization, pagerContext, cd);\n    _this94.pagerContext = pagerContext;\n    return _this94;\n  }\n  /**\n   * @hidden\n   *\n   * @readonly\n   * @type {number}\n   * @memberOf PagerInfoComponent\n   */\n\n\n  _createClass(PagerInfoComponent, [{\n    key: \"onChanges\",\n    value: function onChanges(_ref37) {\n      var total = _ref37.total,\n          skip = _ref37.skip,\n          pageSize = _ref37.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = pageSize;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"maxItems\",\n    get: function get() {\n      return Math.min(this.currentPage * this.pageSize, this.total);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n\n  }, {\n    key: \"currentPageText\",\n    get: function get() {\n      return this.total ? (this.currentPage - 1) * this.pageSize + 1 : 0;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerInfoComponent\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return PagerInfoComponent;\n}(PagerElementComponent);\n\nPagerInfoComponent.ɵfac = function PagerInfoComponent_Factory(t) {\n  return new (t || PagerInfoComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerInfoComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerInfoComponent,\n  selectors: [[\"kendo-pager-info\"]],\n  hostVars: 4,\n  hostBindings: function PagerInfoComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-pager-info\", ctx.classes)(\"k-label\", ctx.classes);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 5,\n  template: function PagerInfoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtext(0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵtextInterpolate5(\"\", ctx.currentPageText, \" - \", ctx.maxItems, \" \", ctx.textFor(\"pagerOf\"), \" \", ctx.total, \" \", ctx.textFor(\"pagerItems\"), \"\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPagerInfoComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PagerContextService\n  }];\n};\n\nPagerInfoComponent.propDecorators = {\n  classes: [{\n    type: HostBinding,\n    args: [\"class.k-pager-info\"]\n  }, {\n    type: HostBinding,\n    args: [\"class.k-label\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerInfoComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-info',\n      template: \"{{currentPageText}} - {{maxItems}} {{textFor('pagerOf')}} {{total}} {{textFor('pagerItems')}}\"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }];\n  }, {\n    classes: [{\n      type: HostBinding,\n      args: [\"class.k-pager-info\"]\n    }, {\n      type: HostBinding,\n      args: [\"class.k-label\"]\n    }]\n  });\n})(); // tslint:disable:no-access-missing-member\n\n/**\n * Displays a drop-down list for the page size selection ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\n\n\nvar PagerPageSizesComponent = /*#__PURE__*/function (_PagerElementComponen6) {\n  _inherits(PagerPageSizesComponent, _PagerElementComponen6);\n\n  var _super52 = _createSuper(PagerPageSizesComponent);\n\n  function PagerPageSizesComponent(localization, cd, pagerContext) {\n    var _this95;\n\n    _classCallCheck(this, PagerPageSizesComponent);\n\n    _this95 = _super52.call(this, localization, pagerContext, cd);\n    _this95.pagerContext = pagerContext;\n    _this95._pageSizes = [];\n    return _this95;\n  }\n\n  _createClass(PagerPageSizesComponent, [{\n    key: \"pageSizeChange\",\n\n    /**\n     * @hidden\n     */\n    value: function pageSizeChange(value) {\n      this.pageSize = parseInt(value, 10);\n      this.pagerContext.changePageSize(this.pageSize);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"getValue\",\n    value: function getValue(page) {\n      return typeof page.value === 'number' ? page.value : this.total;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"getSelectedState\",\n    value: function getSelectedState(page) {\n      if (typeof page.value === 'number') {\n        return page.value === this.pageSize ? true : undefined;\n      }\n\n      return this.pageSize === this.total;\n    }\n  }, {\n    key: \"onChanges\",\n    value: function onChanges(_ref38) {\n      var total = _ref38.total,\n          skip = _ref38.skip,\n          pageSize = _ref38.pageSize;\n      this.total = total;\n      this.skip = skip;\n      this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n      this.cd.markForCheck();\n    }\n  }, {\n    key: \"pageSizes\",\n    get: function get() {\n      return this._pageSizes;\n    }\n    /**\n     * The page sizes collection. Can be an Array of numbers and/or PageSizeItem objects.\n     *\n     * @example\n     * ```ts-preview\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [kendoGridBinding]=\"gridData\" [height]=\"200\"\n     *           [pageable]=\"true\"\n     *            [pageSize]=\"pageSize\">\n     *            <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n     *                <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n     *            </ng-template>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *    public pageSize = 2;\n     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n     * }\n     *\n     * const products = [{\n     *   'ProductID' : 1,\n     *   'ProductName' : \"Chai\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n     *   'UnitPrice' : 18.0000,\n     *   'UnitsInStock' : 39,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 10,\n     *   'Discontinued' : false\n     *\n     * }, {\n     *   'ProductID' : 2,\n     *   'ProductName' : \"Chang\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n     *   'UnitPrice' : 19.0000,\n     *   'UnitsInStock' : 17,\n     *   'UnitsOnOrder' : 40,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 3,\n     *   'ProductName' : \"Aniseed Syrup\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n     *   'UnitPrice' : 10.0000,\n     *   'UnitsInStock' : 13,\n     *   'UnitsOnOrder' : 70,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 4,\n     *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n     *   'SupplierID' : 2,\n     *  'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n     *   'UnitPrice' : 22.0000,\n     *   'UnitsInStock' : 53,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 5,\n     *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n     *   'SupplierID' : 2,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"36 boxes\",\n     *   'UnitPrice' : 21.3500,\n     *   'UnitsInStock' : 0,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : true\n     * }, {\n     *   'ProductID' : 6,\n     *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n     *   'SupplierID' : 3,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n     *   'UnitPrice' : 25.0000,\n     *   'UnitsInStock' : 120,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }];\n     * ```\n     */\n    ,\n    set: function set(pageSizes) {\n      var normalizedItems = [];\n      pageSizes.forEach(function (item) {\n        if (typeof item === 'number') {\n          normalizedItems.push({\n            text: item.toString(),\n            value: item\n          });\n        } else {\n          normalizedItems.push(item);\n        }\n      });\n      this._pageSizes = normalizedItems;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n\n  }, {\n    key: \"classes\",\n    get: function get() {\n      return true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n\n  }, {\n    key: \"showInitialPageSize\",\n    get: function get() {\n      var _this96 = this;\n\n      return this.pageSizes.filter(function (item) {\n        if (typeof item.value === 'number') {\n          return item.value === Number(_this96.pageSize);\n        }\n\n        return _this96.total === Number(_this96.pageSize);\n      }).length === 0;\n    }\n  }]);\n\n  return PagerPageSizesComponent;\n}(PagerElementComponent);\n\nPagerPageSizesComponent.ɵfac = function PagerPageSizesComponent_Factory(t) {\n  return new (t || PagerPageSizesComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PagerContextService));\n};\n\nPagerPageSizesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PagerPageSizesComponent,\n  selectors: [[\"kendo-pager-page-sizes\"]],\n  hostVars: 4,\n  hostBindings: function PagerPageSizesComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-pager-sizes\", ctx.classes)(\"k-label\", ctx.classes);\n    }\n  },\n  inputs: {\n    pageSizes: \"pageSizes\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 5,\n  vars: 4,\n  consts: [[3, \"change\"], [\"select\", \"\"], [3, \"value\", 4, \"ngIf\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [3, \"value\", \"selected\"]],\n  template: function PagerPageSizesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"select\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"change\", function PagerPageSizesComponent_Template_select_change_0_listener() {\n        ɵngcc0.ɵɵrestoreView(_r4);\n\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        return ctx.pageSizeChange(_r0.value);\n      });\n      ɵngcc0.ɵɵtemplate(2, PagerPageSizesComponent_option_2_Template, 2, 2, \"option\", 2);\n      ɵngcc0.ɵɵtemplate(3, PagerPageSizesComponent_option_3_Template, 2, 3, \"option\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtext(4);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-label\", ctx.textFor(\"pagerItemsPerPage\"));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showInitialPageSize);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pageSizes);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.textFor(\"pagerItemsPerPage\"), \" \");\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nPagerPageSizesComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: PagerContextService\n  }];\n};\n\nPagerPageSizesComponent.propDecorators = {\n  pageSizes: [{\n    type: Input\n  }],\n  classes: [{\n    type: HostBinding,\n    args: [\"class.k-pager-sizes\"]\n  }, {\n    type: HostBinding,\n    args: [\"class.k-label\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerPageSizesComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-pager-page-sizes',\n      template: \"\\n        <select #select\\n            (change)=\\\"pageSizeChange(select.value)\\\"\\n            [attr.aria-label]=\\\"textFor('pagerItemsPerPage')\\\">\\n            <option *ngIf=\\\"showInitialPageSize\\\" [value]=\\\"pageSize\\\">{{pageSize}}</option>\\n            <option *ngFor=\\\"let page of pageSizes\\\" [value]=\\\"getValue(page)\\\" [selected]=\\\"getSelectedState(page)\\\">\\n                {{page['text']}}\\n            </option>\\n        </select>\\n        {{ textFor('pagerItemsPerPage') }}\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: PagerContextService\n    }];\n  }, {\n    pageSizes: [{\n      type: Input\n    }],\n    classes: [{\n      type: HostBinding,\n      args: [\"class.k-pager-sizes\"]\n    }, {\n      type: HostBinding,\n      args: [\"class.k-label\"]\n    }]\n  });\n})();\n\nvar importedModules$1 = [CommonModule, InputsModule, SharedModule];\nvar INTERNAL_COMPONENTS$1 = [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective];\n/**\n * @hidden\n */\n\nvar PagerModule = /*#__PURE__*/function () {\n  function PagerModule() {\n    _classCallCheck(this, PagerModule);\n  }\n\n  _createClass(PagerModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective];\n    }\n  }]);\n\n  return PagerModule;\n}();\n\nPagerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PagerModule\n});\nPagerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PagerModule_Factory(t) {\n    return new (t || PagerModule)();\n  },\n  imports: [[].concat(importedModules$1)]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PagerModule, {\n    declarations: [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective],\n    imports: [CommonModule, InputsModule, SharedModule],\n    exports: [PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PagerModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS$1],\n      exports: [INTERNAL_COMPONENTS$1],\n      imports: [].concat(importedModules$1)\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar GroupHeaderComponent = /*#__PURE__*/function () {\n  function GroupHeaderComponent(groupsService, groupInfoService) {\n    _classCallCheck(this, GroupHeaderComponent);\n\n    this.groupsService = groupsService;\n    this.groupInfoService = groupInfoService;\n    this.skipGroupDecoration = false;\n    this.hasDetails = false;\n    this.totalColumnsCount = 0;\n    this.groups = [];\n    this.isExpanded = false;\n  }\n\n  _createClass(GroupHeaderComponent, [{\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.isExpanded = this.groupsService.isExpanded(this.item.index);\n    }\n  }, {\n    key: \"prefixGroupCell\",\n    value: function prefixGroupCell(item) {\n      return new Array(item.level);\n    }\n  }, {\n    key: \"toggleGroup\",\n    value: function toggleGroup(item) {\n      this.groupsService.toggleRow(item.index, item.data);\n      return false;\n    }\n  }, {\n    key: \"groupSpan\",\n    value: function groupSpan(item) {\n      var groupCount = (this.groups || []).length;\n      var detailOffset = this.hasDetails ? 1 : 0;\n\n      if (this.hasGroupHeaderColumn) {\n        return groupCount + 1 + detailOffset - item.level;\n      }\n\n      var columnCount = columnsSpan(this.columns);\n\n      if (this.skipGroupDecoration) {\n        return columnCount;\n      }\n\n      return groupCount + columnCount + detailOffset - item.level;\n    }\n  }, {\n    key: \"logicalColSpan\",\n    value: function logicalColSpan() {\n      return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n    }\n  }, {\n    key: \"ariaRole\",\n    value: function ariaRole() {\n      if (this.skipGroupDecoration) {\n        return 'presentation';\n      }\n\n      return 'gridcell';\n    }\n  }, {\n    key: \"formatForGroup\",\n    value: function formatForGroup(item) {\n      return this.groupInfoService.formatForGroup(item);\n    }\n  }, {\n    key: \"groupTitle\",\n    value: function groupTitle(item) {\n      return this.groupInfoService.groupTitle(item);\n    }\n  }, {\n    key: \"groupHeaderTemplate\",\n    value: function groupHeaderTemplate(item) {\n      return this.groupInfoService.groupHeaderTemplate(item);\n    }\n  }, {\n    key: \"groupItemClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return GroupHeaderComponent;\n}();\n\nGroupHeaderComponent.ɵfac = function GroupHeaderComponent_Factory(t) {\n  return new (t || GroupHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(GroupInfoService));\n};\n\nGroupHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GroupHeaderComponent,\n  selectors: [[\"\", \"kendoGridGroupHeader\", \"\"]],\n  hostVars: 2,\n  hostBindings: function GroupHeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grouping-row\", ctx.groupItemClass);\n    }\n  },\n  inputs: {\n    skipGroupDecoration: \"skipGroupDecoration\",\n    hasDetails: \"hasDetails\",\n    totalColumnsCount: \"totalColumnsCount\",\n    groups: \"groups\",\n    rowIndex: \"rowIndex\",\n    logicalRowIndex: \"logicalRowIndex\",\n    item: \"item\",\n    hasGroupHeaderColumn: \"hasGroupHeaderColumn\",\n    groupHeaderColumns: \"groupHeaderColumns\",\n    columns: \"columns\"\n  },\n  attrs: _c141,\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"ngIf\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngIf\"], [4, \"ngIf\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [1, \"k-reset\"], [\"href\", \"#\", \"tabindex\", \"-1\", \"role\", \"presentation\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [3, \"templateContext\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"gridcell\", \"aria-selected\", \"false\", \"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"logicalSlaveCell\", \"groupItem\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function GroupHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, GroupHeaderComponent_ng_template_0_Template, 1, 1, \"ng-template\", 0);\n      ɵngcc0.ɵɵtemplate(1, GroupHeaderComponent_td_1_Template, 3, 9, \"td\", 1);\n      ɵngcc0.ɵɵtemplate(2, GroupHeaderComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.skipGroupDecoration);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !(ctx.skipGroupDecoration && ctx.hasGroupHeaderColumn));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasGroupHeaderColumn);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, LogicalCellDirective, ɵngcc1.NgClass, TemplateContextDirective, ɵngcc1.NgTemplateOutlet],\n  pipes: [FieldAccessorPipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nGroupHeaderComponent.ctorParameters = function () {\n  return [{\n    type: GroupsService\n  }, {\n    type: GroupInfoService\n  }];\n};\n\nGroupHeaderComponent.propDecorators = {\n  rowIndex: [{\n    type: Input\n  }],\n  logicalRowIndex: [{\n    type: Input\n  }],\n  item: [{\n    type: Input\n  }],\n  skipGroupDecoration: [{\n    type: Input\n  }],\n  hasDetails: [{\n    type: Input\n  }],\n  totalColumnsCount: [{\n    type: Input\n  }],\n  hasGroupHeaderColumn: [{\n    type: Input\n  }],\n  groupHeaderColumns: [{\n    type: Input\n  }],\n  columns: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  groupItemClass: [{\n    type: HostBinding,\n    args: ['class.k-grouping-row']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridGroupHeader]',\n      template: \"\\n        <ng-template [ngIf]=\\\"!skipGroupDecoration\\\">\\n            <td class=\\\"k-group-cell\\\"\\n                role=\\\"presentation\\\"\\n                *ngFor=\\\"let g of prefixGroupCell(item)\\\"></td>\\n        </ng-template>\\n        <td [attr.colspan]=\\\"groupSpan(item)\\\" *ngIf=\\\"!(skipGroupDecoration && hasGroupHeaderColumn)\\\"\\n            [attr.role]=\\\"ariaRole()\\\"\\n            aria-selected=\\\"false\\\"\\n            [attr.aria-expanded]=\\\"isExpanded\\\"\\n            kendoGridLogicalCell\\n            [logicalRowIndex]=\\\"logicalRowIndex\\\"\\n            [logicalColIndex]=\\\"0\\\"\\n            [logicalSlaveCell]=\\\"skipGroupDecoration\\\"\\n            [groupItem]=\\\"item\\\"\\n            [colSpan]=\\\"logicalColSpan()\\\">\\n            <p class=\\\"k-reset\\\">\\n                <ng-template [ngIf]=\\\"!skipGroupDecoration\\\">\\n                    <a href=\\\"#\\\" tabindex=\\\"-1\\\" (click)=\\\"toggleGroup(item)\\\"\\n                        class=\\\"k-icon\\\"\\n                        [ngClass]=\\\"{ 'k-i-collapse': isExpanded, 'k-i-expand': !isExpanded }\\\" role=\\\"presentation\\\">\\n                    </a>\\n                    <ng-template [ngIf]=\\\"!groupHeaderTemplate(item)\\\">\\n                    {{groupTitle(item)}}: {{item.data | valueOf:\\\"value\\\": formatForGroup(item)}}\\n                    </ng-template>\\n                    <ng-template\\n                        [templateContext]=\\\"{\\n                            templateRef: groupHeaderTemplate(item),\\n                            group: item.data,\\n                            aggregates: item.data?.aggregates,\\n                            value: item.data?.value,\\n                            field: item.data?.field,\\n                            index: item.index,\\n                            expanded: isExpanded,\\n                            $implicit: item.data\\n                            }\\\">\\n                    </ng-template>\\n                </ng-template>\\n            </p>\\n        </td>\\n        <ng-container *ngIf=\\\"hasGroupHeaderColumn\\\">\\n            <td *ngFor=\\\"let column of groupHeaderColumns; let index = index\\\"\\n                role=\\\"gridcell\\\"\\n                aria-selected=\\\"false\\\"\\n                kendoGridLogicalCell\\n                [logicalRowIndex]=\\\"logicalRowIndex\\\"\\n                [logicalColIndex]=\\\"index + 1\\\"\\n                [logicalSlaveCell]=\\\"false\\\"\\n                [groupItem]=\\\"item\\\"\\n                [colSpan]=\\\"1\\\"\\n            >\\n                <ng-container *ngIf=\\\"column.groupHeaderColumnTemplateRef\\\" [ngTemplateOutlet]=\\\"column.groupHeaderColumnTemplateRef\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                        group: item.data,\\n                        aggregates: item.data?.aggregates,\\n                        value: item.data?.value,\\n                        field: item.data?.field,\\n                        index: item.index,\\n                        $implicit: item.data\\n                        }\\\">\\n                </ng-container>\\n            </td>\\n        </ng-container>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: GroupsService\n    }, {\n      type: GroupInfoService\n    }];\n  }, {\n    skipGroupDecoration: [{\n      type: Input\n    }],\n    hasDetails: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    groupItemClass: [{\n      type: HostBinding,\n      args: ['class.k-grouping-row']\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    logicalRowIndex: [{\n      type: Input\n    }],\n    item: [{\n      type: Input\n    }],\n    hasGroupHeaderColumn: [{\n      type: Input\n    }],\n    groupHeaderColumns: [{\n      type: Input\n    }],\n    columns: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar DropTargetDirective = /*#__PURE__*/function () {\n  function DropTargetDirective(element, service) {\n    _classCallCheck(this, DropTargetDirective);\n\n    this.element = element;\n    this.service = service;\n    this.context = {};\n    this.enter = new EventEmitter();\n    this.leave = new EventEmitter();\n    this.drop = new EventEmitter();\n    this.subscriptions = new Subscription();\n  }\n\n  _createClass(DropTargetDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this97 = this;\n\n      this.service.add(this);\n      var changes = this.service.changes.pipe(filter(function (_ref39) {\n        var target = _ref39.target;\n        return target === _this97;\n      }));\n      this.subscriptions.add(changes.pipe(filter(function (_ref40) {\n        var type = _ref40.type;\n        return type === 'leave';\n      })).subscribe(function (e) {\n        _this97.leave.next(_this97.eventArgs(e));\n      }));\n      this.subscriptions.add(changes.pipe(filter(function (_ref41) {\n        var type = _ref41.type;\n        return type === 'enter';\n      })).subscribe(function (e) {\n        _this97.enter.next(_this97.eventArgs(e));\n      }));\n      this.subscriptions.add(changes.pipe(filter(function (_ref42) {\n        var type = _ref42.type;\n        return type === 'drop';\n      })).subscribe(function (e) {\n        _this97.drop.next(_this97.eventArgs(e));\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n  }, {\n    key: \"eventArgs\",\n    value: function eventArgs(e) {\n      return {\n        target: this,\n        mouseEvent: e.mouseEvent,\n        draggable: e.draggable\n      };\n    }\n  }]);\n\n  return DropTargetDirective;\n}();\n\nDropTargetDirective.ɵfac = function DropTargetDirective_Factory(t) {\n  return new (t || DropTargetDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DragAndDropService));\n};\n\nDropTargetDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DropTargetDirective,\n  selectors: [[\"\", \"kendoDropTarget\", \"\"]],\n  inputs: {\n    context: \"context\"\n  },\n  outputs: {\n    enter: \"enter\",\n    leave: \"leave\",\n    drop: \"drop\"\n  }\n});\n/** @nocollapse */\n\nDropTargetDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: DragAndDropService\n  }];\n};\n\nDropTargetDirective.propDecorators = {\n  context: [{\n    type: Input\n  }],\n  enter: [{\n    type: Output\n  }],\n  leave: [{\n    type: Output\n  }],\n  drop: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropTargetDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDropTarget]'\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: DragAndDropService\n    }];\n  }, {\n    context: [{\n      type: Input\n    }],\n    enter: [{\n      type: Output\n    }],\n    leave: [{\n      type: Output\n    }],\n    drop: [{\n      type: Output\n    }]\n  });\n})();\n\nvar withoutField = function withoutField(_ref43) {\n  var field = _ref43.field;\n  return isNullOrEmptyString(field);\n};\n\nvar alreadyGrouped = function alreadyGrouped(_ref44) {\n  var groups = _ref44.groups,\n      field = _ref44.field;\n  return groups.some(function (group) {\n    return group.field === field;\n  });\n};\n\nvar overSameTarget = function overSameTarget(_ref45) {\n  var target = _ref45.target,\n      field = _ref45.field;\n  return target.field === field;\n};\n\nvar overLastTarget = function overLastTarget(_ref46) {\n  var target = _ref46.target;\n  return target.lastTarget;\n};\n\nvar isLastGroup = function isLastGroup(_ref47) {\n  var groups = _ref47.groups,\n      field = _ref47.field;\n  return groups.map(function (group) {\n    return group.field;\n  }).indexOf(field) === groups.length - 1;\n};\n\nvar isNotGroupable = function isNotGroupable(groupsService) {\n  return function (_ref48) {\n    var field = _ref48.field;\n    return !groupsService.isGroupable(field);\n  };\n};\n\nvar columnRules = function columnRules(groupService) {\n  return or(withoutField, alreadyGrouped, isNotGroupable(groupService));\n};\n\nvar indicatorRules = or(overSameTarget, and(overLastTarget, isLastGroup));\n/**\n * @hidden\n */\n\nvar GroupPanelComponent = /*#__PURE__*/function () {\n  function GroupPanelComponent(hint, cue, groupInfoService, localization, cd) {\n    _classCallCheck(this, GroupPanelComponent);\n\n    this.hint = hint;\n    this.cue = cue;\n    this.groupInfoService = groupInfoService;\n    this.localization = localization;\n    this.cd = cd;\n    this.change = new EventEmitter();\n    this.groups = [];\n    this.dropTargets = new QueryList();\n    this.groupTitles = [];\n    this.subscription = new Subscription();\n  }\n\n  _createClass(GroupPanelComponent, [{\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this98 = this;\n\n      this.subscription.add(this.localization.changes.subscribe(function () {\n        return _this98.cd.markForCheck();\n      }));\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      var _this99 = this;\n\n      var currentTitles = this.groups.map(function (group) {\n        return _this99.groupInfoService.groupTitle(group);\n      });\n\n      if (currentTitles.length !== this.groupTitles.length || currentTitles.some(function (current, idx) {\n        return current !== _this99.groupTitles[idx];\n      })) {\n        this.groupTitles = currentTitles;\n        this.cd.markForCheck();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"directionChange\",\n    value: function directionChange(group) {\n      var index = this.groups.findIndex(function (x) {\n        return x.field === group.field;\n      });\n      var groups = [].concat(_toConsumableArray(this.groups.slice(0, index)), [group], _toConsumableArray(this.groups.slice(index + 1)));\n      this.change.emit(groups);\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(field, index) {\n      var groups = this.groups.filter(function (x) {\n        return x.field !== field;\n      });\n\n      if (groups.length || this.groups.length === 0) {\n        this.change.emit([].concat(_toConsumableArray(groups.slice(0, index)), [{\n          field: field\n        }], _toConsumableArray(groups.slice(index))));\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(group) {\n      this.change.emit(this.groups.filter(function (x) {\n        return x.field !== group.field;\n      }));\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop(draggable, target) {\n      var isIndicator = draggable.type === 'groupIndicator';\n      var rules = isIndicator ? indicatorRules : columnRules(this.groupInfoService);\n      return !rules({\n        field: draggable.field,\n        groups: this.groups,\n        target: target\n      });\n    }\n  }, {\n    key: \"attachTargets\",\n    value: function attachTargets() {\n      var _this100 = this;\n\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      this.targetSubscription = new Subscription();\n      var enterStream = this.dropTargets.reduce(function (acc, target) {\n        return merge(acc, target.enter);\n      }, from([]));\n      var leaveStream = this.dropTargets.reduce(function (acc, target) {\n        return merge(acc, target.leave);\n      }, from([]));\n      var dropStream = this.dropTargets.reduce(function (acc, target) {\n        return merge(acc, target.drop);\n      }, from([]));\n      this.targetSubscription.add(enterStream.pipe(tap(function (_) {\n        return _this100.hint.removeLock();\n      }), filter(function (_ref49) {\n        var draggable = _ref49.draggable,\n            target = _ref49.target;\n        return _this100.canDrop(draggable.context, target.context);\n      }), tap(this.enter.bind(this)), switchMapTo(dropStream.pipe(takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(_ref50) {\n      var draggable = _ref50.draggable,\n          target = _ref50.target;\n      this.hint.enable();\n      var before = target.context.lastTarget || isTargetBefore(draggable.element.nativeElement, target.element.nativeElement);\n\n      if (this.localization.rtl) {\n        before = !before;\n      }\n\n      this.cue.position(position(target.element.nativeElement, before));\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      this.hint.disable();\n      this.cue.hide();\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(_ref51) {\n      var target = _ref51.target,\n          draggable = _ref51.draggable;\n      var field = draggable.context.field;\n      var index = this.dropTargets.toArray().indexOf(target);\n      this.insert(field, index);\n    }\n  }, {\n    key: \"groupHeaderClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"text\",\n    set: function set(value) {\n      this.emptyText = value;\n    },\n    get: function get() {\n      return this.emptyText ? this.emptyText : this.localization.get('groupPanelEmpty');\n    }\n  }]);\n\n  return GroupPanelComponent;\n}();\n\nGroupPanelComponent.ɵfac = function GroupPanelComponent_Factory(t) {\n  return new (t || GroupPanelComponent)(ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(GroupInfoService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nGroupPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GroupPanelComponent,\n  selectors: [[\"kendo-grid-group-panel\"]],\n  viewQuery: function GroupPanelComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DropTargetDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function GroupPanelComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grouping-header\", ctx.groupHeaderClass)(\"k-grouping-header-flex\", ctx.groupHeaderClass);\n    }\n  },\n  inputs: {\n    groups: \"groups\",\n    text: \"text\"\n  },\n  outputs: {\n    change: \"change\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"ngIf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-indicator-container\", \"kendoDropTarget\", \"\", 3, \"context\", 4, \"ngIf\"], [\"kendoDropTarget\", \"\", 1, \"k-indicator-container\", 3, \"context\"], [\"kendoDraggableColumn\", \"\", \"kendoGroupIndicator\", \"\", \"kendoDraggable\", \"\", 3, \"enableDrag\", \"context\", \"group\", \"groupTitle\", \"directionChange\", \"remove\"]],\n  template: function GroupPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, GroupPanelComponent_ng_template_0_Template, 2, 3, \"ng-template\", 0);\n      ɵngcc0.ɵɵtemplate(1, GroupPanelComponent_div_1_Template, 2, 10, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, GroupPanelComponent_div_2_Template, 2, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groups.length === 0);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.groups);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.groups.length !== 0);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgForOf, DropTargetDirective, DraggableColumnDirective, GroupIndicatorComponent, ɵngcc2.DraggableDirective];\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nGroupPanelComponent.ctorParameters = function () {\n  return [{\n    type: DragHintService\n  }, {\n    type: DropCueService\n  }, {\n    type: GroupInfoService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nGroupPanelComponent.propDecorators = {\n  change: [{\n    type: Output\n  }],\n  groupHeaderClass: [{\n    type: HostBinding,\n    args: [\"class.k-grouping-header\"]\n  }, {\n    type: HostBinding,\n    args: [\"class.k-grouping-header-flex\"]\n  }],\n  text: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  dropTargets: [{\n    type: ViewChildren,\n    args: [DropTargetDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupPanelComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'kendo-grid-group-panel',\n      template: \"\\n        <ng-template [ngIf]=\\\"groups.length === 0\\\">\\n            <div\\n                class=\\\"k-indicator-container\\\"\\n                [context]=\\\"{\\n                    lastTarget: true\\n                }\\\"\\n                kendoDropTarget>\\n                {{ text }}\\n            </div>\\n        </ng-template>\\n        <div *ngFor=\\\"let group of groups; let index = index;\\\"\\n            class=\\\"k-indicator-container\\\"\\n            [context]=\\\"{\\n                field: group.field\\n            }\\\"\\n            kendoDropTarget>\\n            <div\\n                kendoDraggableColumn\\n                [enableDrag]=\\\"true\\\"\\n                [context]=\\\"{\\n                    field: group.field,\\n                    type: 'groupIndicator',\\n                    hint:  groupTitles[index]\\n                }\\\"\\n                kendoGroupIndicator\\n                kendoDraggable\\n                [group]=\\\"group\\\"\\n                [groupTitle]=\\\"groupTitles[index]\\\"\\n                (directionChange)=\\\"directionChange($event)\\\"\\n                (remove)=\\\"remove($event)\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"k-indicator-container\\\"\\n            *ngIf=\\\"groups.length !== 0\\\"\\n            [context]=\\\"{\\n                lastTarget: true\\n            }\\\"\\n            kendoDropTarget>&nbsp;</div>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: GroupInfoService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    change: [{\n      type: Output\n    }],\n    groups: [{\n      type: Input\n    }],\n    dropTargets: [{\n      type: ViewChildren,\n      args: [DropTargetDirective]\n    }],\n    groupHeaderClass: [{\n      type: HostBinding,\n      args: [\"class.k-grouping-header\"]\n    }, {\n      type: HostBinding,\n      args: [\"class.k-grouping-header-flex\"]\n    }],\n    text: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar GroupIndicatorComponent = /*#__PURE__*/function () {\n  function GroupIndicatorComponent() {\n    _classCallCheck(this, GroupIndicatorComponent);\n\n    this.directionChange = new EventEmitter();\n    this.remove = new EventEmitter();\n  }\n\n  _createClass(GroupIndicatorComponent, [{\n    key: \"toggleDirection\",\n    value: function toggleDirection() {\n      this.directionChange.emit({\n        dir: this.dir === \"asc\" ? \"desc\" : \"asc\",\n        field: this.group.field\n      });\n      return false;\n    }\n  }, {\n    key: \"removeDescriptor\",\n    value: function removeDescriptor() {\n      this.remove.emit({\n        dir: this.group.dir,\n        field: this.group.field\n      });\n      return false;\n    }\n  }, {\n    key: \"groupIndicatorClass\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"dir\",\n    get: function get() {\n      return this.group.dir ? this.group.dir : \"asc\";\n    }\n  }]);\n\n  return GroupIndicatorComponent;\n}();\n\nGroupIndicatorComponent.ɵfac = function GroupIndicatorComponent_Factory(t) {\n  return new (t || GroupIndicatorComponent)();\n};\n\nGroupIndicatorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: GroupIndicatorComponent,\n  selectors: [[\"\", \"kendoGroupIndicator\", \"\"]],\n  hostVars: 2,\n  hostBindings: function GroupIndicatorComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-group-indicator\", ctx.groupIndicatorClass);\n    }\n  },\n  inputs: {\n    group: \"group\",\n    groupTitle: \"groupTitle\"\n  },\n  outputs: {\n    directionChange: \"directionChange\",\n    remove: \"remove\"\n  },\n  attrs: _c148,\n  decls: 5,\n  vars: 5,\n  consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-link\", 3, \"click\"], [1, \"k-icon\"], [\"tabindex\", \"-1\", 1, \"k-button\", \"k-button-icon\", \"k-bare\", 3, \"click\"], [1, \"k-icon\", \"k-i-group-delete\"]],\n  template: function GroupIndicatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_0_listener() {\n        return ctx.toggleDirection();\n      });\n      ɵngcc0.ɵɵelement(1, \"span\", 1);\n      ɵngcc0.ɵɵtext(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(3, \"a\", 2);\n      ɵngcc0.ɵɵlistener(\"click\", function GroupIndicatorComponent_Template_a_click_3_listener() {\n        return ctx.removeDescriptor();\n      });\n      ɵngcc0.ɵɵelement(4, \"span\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵclassProp(\"k-i-sort-asc-sm\", ctx.dir === \"asc\")(\"k-i-sort-desc-sm\", ctx.dir === \"desc\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.groupTitle, \"\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\nGroupIndicatorComponent.propDecorators = {\n  directionChange: [{\n    type: Output\n  }],\n  remove: [{\n    type: Output\n  }],\n  group: [{\n    type: Input\n  }],\n  groupTitle: [{\n    type: Input\n  }],\n  groupIndicatorClass: [{\n    type: HostBinding,\n    args: [\"class.k-group-indicator\"]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupIndicatorComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: '[kendoGroupIndicator]',\n      template: \"\\n        <a href=\\\"#\\\" class=\\\"k-link\\\" tabindex=\\\"-1\\\" (click)=\\\"toggleDirection()\\\">\\n            <span class=\\\"k-icon\\\"\\n                [class.k-i-sort-asc-sm]=\\\"dir === 'asc'\\\"\\n                [class.k-i-sort-desc-sm]=\\\"dir === 'desc'\\\"></span>\\n            {{groupTitle}}</a>\\n        <a class=\\\"k-button k-button-icon k-bare\\\" tabindex=\\\"-1\\\" (click)=\\\"removeDescriptor()\\\">\\n            <span class=\\\"k-icon k-i-group-delete\\\"></span>\\n        </a>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    directionChange: [{\n      type: Output\n    }],\n    remove: [{\n      type: Output\n    }],\n    groupIndicatorClass: [{\n      type: HostBinding,\n      args: [\"class.k-group-indicator\"]\n    }],\n    group: [{\n      type: Input\n    }],\n    groupTitle: [{\n      type: Input\n    }]\n  });\n})(); // TODO\n// tslint:disable:rxjs-no-unsafe-takeuntil\n\n/**\n * @hidden\n */\n\n\nvar preventOnDblClick = function preventOnDblClick(release) {\n  return function (mouseDown) {\n    return of(mouseDown).pipe(delay(150), takeUntil(release));\n  };\n};\n\nvar hasClass = function hasClass(className) {\n  return function (el) {\n    return new RegExp(\"(^| )\".concat(className, \"( |$)\")).test(el.className);\n  };\n};\n\nvar isDeleteButton = or(hasClass(\"k-i-group-delete\"), hasClass(\"k-button-icon\"));\nvar isSortIcon = or(hasClass(\"k-i-sort-asc-sm\"), hasClass(\"k-i-sort-desc-sm\"));\nvar skipButtons = and(not(isDeleteButton), not(isSortIcon), not(isFocusableWithTabKey), not(matchesNodeName(\"label\")));\n\nvar _elementUnderCursor = function elementUnderCursor(_ref52) {\n  var clientX = _ref52.clientX,\n      clientY = _ref52.clientY;\n  return document.elementFromPoint(clientX, clientY);\n};\n\nvar hideThenShow = function hideThenShow(element, cont) {\n  element.style.display = 'none';\n  var result = cont();\n  element.style.display = 'block';\n  return result;\n};\n/**\n * @hidden\n */\n\n\nvar DraggableColumnDirective = /*#__PURE__*/function () {\n  function DraggableColumnDirective(draggable, element, zone, service, hint, cue, nav, renderer) {\n    _classCallCheck(this, DraggableColumnDirective);\n\n    this.draggable = draggable;\n    this.element = element;\n    this.zone = zone;\n    this.service = service;\n    this.hint = hint;\n    this.cue = cue;\n    this.nav = nav;\n    this.renderer = renderer;\n    this.context = {};\n    this.drag = new EventEmitter();\n    this.subscriptions = new Subscription();\n  }\n\n  _createClass(DraggableColumnDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this101 = this;\n\n      this.subscriptions.add(this.zone.runOutsideAngular(function () {\n        return _this101.draggable.kendoPress.pipe(filter(function (_) {\n          return _this101.enabled;\n        }), filter(function (_ref53) {\n          var target = _ref53.originalEvent.target;\n          return target === _this101.element.nativeElement || skipButtons(target);\n        }), tap(function (e) {\n          var originalEvent = e.originalEvent;\n\n          if (!e.isTouch) {\n            originalEvent.preventDefault();\n          }\n\n          _this101.nav.navigateTo(originalEvent.target);\n        }), switchMap(preventOnDblClick(_this101.draggable.kendoRelease)), tap(function (down) {\n          _this101.hint.create(down, _this101.element.nativeElement, _this101.context.hint);\n\n          _this101.cue.create();\n        }), switchMap(function (down) {\n          return _this101.draggable.kendoDrag.pipe(tap(function (e) {\n            if (e.isTouch) {\n              e.originalEvent.preventDefault();\n            }\n          }), tap(_this101.hint.attach()), tap(_this101.cue.attach()), takeUntil(_this101.draggable.kendoRelease), map(function (move) {\n            return {\n              move: move,\n              down: down\n            };\n          }));\n        }), tap(_this101.performDrag.bind(_this101)), switchMapTo(_this101.draggable.kendoRelease)).subscribe(_this101.drop.bind(_this101));\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(upEvent) {\n      this.hint.remove();\n      this.cue.remove();\n      this.service.notifyDrop(this, upEvent);\n    }\n  }, {\n    key: \"performDrag\",\n    value: function performDrag(_ref54) {\n      var move = _ref54.move;\n      this.hint.move(move);\n      var cursorElement = this.elementUnderCursor(move);\n\n      if (cursorElement) {\n        this.service.notifyDrag(this, cursorElement, move);\n      }\n\n      this.drag.emit({\n        draggable: this,\n        mouseEvent: move\n      });\n    }\n  }, {\n    key: \"elementUnderCursor\",\n    value: function elementUnderCursor(mouseEvent) {\n      this.hint.hide();\n\n      var target = _elementUnderCursor(mouseEvent);\n\n      if (target && /k-grouping-dropclue/.test(target.className)) {\n        target = hideThenShow(target, _elementUnderCursor.bind(this, mouseEvent));\n      }\n\n      this.hint.show();\n      return target;\n    }\n  }, {\n    key: \"updateTouchAction\",\n    value: function updateTouchAction() {\n      if (!this.element) {\n        return;\n      }\n\n      this.renderer.setStyle(this.element.nativeElement, 'touch-action', this.enabled ? 'none' : '');\n    }\n  }, {\n    key: \"enableDrag\",\n    set: function set(enabled) {\n      this.enabled = enabled;\n      this.updateTouchAction();\n    }\n  }, {\n    key: \"hostClass\",\n    get: function get() {\n      return this.enabled;\n    }\n  }]);\n\n  return DraggableColumnDirective;\n}();\n\nDraggableColumnDirective.ɵfac = function DraggableColumnDirective_Factory(t) {\n  return new (t || DraggableColumnDirective)(ɵngcc0.ɵɵdirectiveInject(DraggableDirective, 1), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(DragAndDropService), ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(NavigationService), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nDraggableColumnDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: DraggableColumnDirective,\n  selectors: [[\"\", \"kendoDraggableColumn\", \"\"]],\n  hostVars: 2,\n  hostBindings: function DraggableColumnDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-draggable-header\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    context: \"context\",\n    enableDrag: \"enableDrag\"\n  },\n  outputs: {\n    drag: \"drag\"\n  }\n});\n/** @nocollapse */\n\nDraggableColumnDirective.ctorParameters = function () {\n  return [{\n    type: DraggableDirective,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: DragAndDropService\n  }, {\n    type: DragHintService\n  }, {\n    type: DropCueService\n  }, {\n    type: NavigationService\n  }, {\n    type: Renderer2\n  }];\n};\n\nDraggableColumnDirective.propDecorators = {\n  context: [{\n    type: Input\n  }],\n  enableDrag: [{\n    type: Input\n  }],\n  drag: [{\n    type: Output\n  }],\n  hostClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-draggable-header']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DraggableColumnDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoDraggableColumn]'\n    }]\n  }], function () {\n    return [{\n      type: DraggableDirective,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: DragAndDropService\n    }, {\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: NavigationService\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    context: [{\n      type: Input\n    }],\n    drag: [{\n      type: Output\n    }],\n    enableDrag: [{\n      type: Input\n    }],\n    hostClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-draggable-header']\n    }]\n  });\n})();\n\nvar exported = [DraggableColumnDirective, DropTargetDirective];\n/**\n * @hidden\n */\n\nvar DragAndDropModule = function DragAndDropModule() {\n  _classCallCheck(this, DragAndDropModule);\n};\n\nDragAndDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: DragAndDropModule\n});\nDragAndDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function DragAndDropModule_Factory(t) {\n    return new (t || DragAndDropModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragAndDropModule, {\n    declarations: [DraggableColumnDirective, DropTargetDirective],\n    exports: [DraggableColumnDirective, DropTargetDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DragAndDropModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exported],\n      exports: [exported]\n    }]\n  }], null, null);\n})();\n\nvar exportedModules$1 = [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n/**\n * @hidden\n */\n\nvar GroupModule = /*#__PURE__*/function () {\n  function GroupModule() {\n    _classCallCheck(this, GroupModule);\n  }\n\n  _createClass(GroupModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective];\n    }\n  }]);\n\n  return GroupModule;\n}();\n\nGroupModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: GroupModule\n});\nGroupModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function GroupModule_Factory(t) {\n    return new (t || GroupModule)();\n  },\n  imports: [[CommonModule, SharedModule, DragAndDropModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GroupModule, {\n    declarations: function declarations() {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, SharedModule, DragAndDropModule];\n    },\n    exports: function exports() {\n      return [GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, GroupHeaderComponent, GroupPanelComponent, GroupIndicatorComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$1],\n      exports: [exportedModules$1],\n      imports: [CommonModule, SharedModule, DragAndDropModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar DEFAULTS = {\n  allowUnsort: true,\n  mode: 'single',\n  showIndexes: true,\n  initialDirection: 'asc'\n};\n/**\n * @hidden\n */\n\nvar normalize$1 = function normalize$1() {\n  for (var _len8 = arguments.length, settings = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n    settings[_key8] = arguments[_key8];\n  }\n\n  return Object.assign.apply(Object, [{}, DEFAULTS].concat(settings));\n};\n/**\n * @hidden\n */\n\n\nvar hasFilter = function hasFilter(settings, column) {\n  return settings.filter !== false && column.field && column.filterable;\n};\n/**\n * @hidden\n */\n\n\nvar hasSort = function hasSort(settings, column) {\n  return settings.sort !== false && column.field && column.sortable;\n};\n/**\n * @hidden\n */\n\n\nvar hasLock = function hasLock(settings, column) {\n  return settings.lock && column.lockable && !(column.parent && !column.parent.isSpanColumn);\n};\n/**\n * @hidden\n */\n\n\nvar hasColumnChooser = function hasColumnChooser(settings) {\n  return settings.columnChooser !== false;\n};\n/**\n * @hidden\n */\n\n\nvar hasItems = function hasItems(settings, column) {\n  return hasColumnChooser(settings) || hasLock(settings, column) || hasSort(settings, column) || hasFilter(settings, column);\n};\n\nvar mergeObjects = function mergeObjects() {\n  for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n    args[_key9] = arguments[_key9];\n  }\n\n  return Object.assign.apply(null, [{}].concat(args));\n};\n\nvar directions = function directions(initialDirection) {\n  return initialDirection === \"asc\" ? [\"asc\", \"desc\"] : [\"desc\", \"asc\"];\n};\n/**\n * @hidden\n */\n\n\nvar isRootLevel = function isRootLevel(_ref55) {\n  var parent = _ref55.parent;\n  return !isTruthy(parent);\n};\n\nvar ofColumnType = function ofColumnType(_ref56) {\n  var draggable = _ref56.draggable;\n  return ['column', 'columnGroup'].indexOf(draggable.context.type) >= 0;\n};\n\nvar notSameElement = function notSameElement(_ref57) {\n  var draggable = _ref57.draggable,\n      target = _ref57.target;\n  return draggable.element.nativeElement !== target.element.nativeElement;\n};\n\nvar inSameParent = function inSameParent(x, y) {\n  return x.parent === y.parent || isInSpanColumn(y) && inSameParent(x, y.parent);\n};\n\nvar sameParent = function sameParent(_ref58) {\n  var draggable = _ref58.draggable,\n      target = _ref58.target;\n  return inSameParent(draggable.context.column, target.context.column);\n};\n\nvar lastNonLocked = function lastNonLocked(_ref59) {\n  var draggable = _ref59.draggable;\n  return !isTruthy(draggable.context.column.locked) && isRootLevel(draggable.context.column) && draggable.context.lastColumn;\n};\n\nvar notInSpanColumn = function notInSpanColumn(_ref60) {\n  var draggable = _ref60.draggable;\n  return !isInSpanColumn(draggable.context.column);\n};\n\nvar reorderable = function reorderable(_ref61) {\n  var draggable = _ref61.draggable;\n  return draggable.context.column.reorderable;\n};\n\nvar lockable = function lockable(_ref62) {\n  var draggable = _ref62.draggable,\n      target = _ref62.target;\n  return draggable.context.column.lockable !== false || draggable.context.column.isLocked === target.context.column.isLocked;\n};\n\nvar rules = and(ofColumnType, reorderable, notInSpanColumn, notSameElement, sameParent, not(lastNonLocked), lockable);\n/**\n * @hidden\n */\n\nvar HeaderComponent = /*#__PURE__*/function () {\n  function HeaderComponent(popupService, hint, cue, reorderService, idService, sortService, localization, cd) {\n    _classCallCheck(this, HeaderComponent);\n\n    this.popupService = popupService;\n    this.hint = hint;\n    this.cue = cue;\n    this.reorderService = reorderService;\n    this.idService = idService;\n    this.sortService = sortService;\n    this.localization = localization;\n    this.cd = cd;\n    this.columns = [];\n    this.groups = [];\n    this.sort = new Array();\n    this.sortable = false;\n    this.groupable = false;\n    this.lockedColumnsCount = 0;\n    this.resizable = false;\n    this.reorderable = false;\n    this.columnMenu = false;\n    this.totalColumnsCount = 0;\n    this.sortedFields = {};\n    this.dropTargets = new QueryList();\n    this.subscription = new Subscription();\n  }\n\n  _createClass(HeaderComponent, [{\n    key: \"sortColumn\",\n    value: function sortColumn(column) {\n      this.sortService.sort(this.toggleSort(column));\n    }\n  }, {\n    key: \"onSortClick\",\n    value: function onSortClick(column, event, link) {\n      var target = event.target;\n\n      if (column.headerTemplateRef && target !== link) {\n        var hasFocusableParent = Boolean(closestInScope(target, isFocusable, link));\n\n        if (hasFocusableParent) {\n          // Do not sort when clicking focusable template elements.\n          return;\n        }\n      }\n\n      this.sortColumn(column);\n    }\n  }, {\n    key: \"onHeaderKeydown\",\n    value: function onHeaderKeydown(column, args) {\n      if (!this.sortable || args.defaultPrevented || column.sortable === false) {\n        return;\n      }\n\n      if (args.keyCode === Keys.Enter) {\n        this.sortService.sort(this.toggleSort(column));\n      }\n    }\n  }, {\n    key: \"showSortNumbering\",\n    value: function showSortNumbering(column) {\n      var _normalize$ = normalize$1(this.sortable),\n          showIndexes = _normalize$.showIndexes;\n\n      return showIndexes && this.sort && this.sort.filter(function (_ref63) {\n        var dir = _ref63.dir;\n        return isPresent(dir);\n      }).length > 1 && this.sortOrder(column.field) > 0;\n    }\n  }, {\n    key: \"sortOrder\",\n    value: function sortOrder(field) {\n      return this.sort.filter(function (_ref64) {\n        var dir = _ref64.dir;\n        return isPresent(dir);\n      }).findIndex(function (x) {\n        return x.field === field;\n      }) + 1;\n    }\n  }, {\n    key: \"sortIcon\",\n    value: function sortIcon(field) {\n      var state$$1 = this.sortDescriptor(field);\n      return {\n        'k-icon': isPresent(state$$1.dir),\n        'k-i-sort-desc-sm': state$$1.dir === \"desc\",\n        'k-i-sort-asc-sm': state$$1.dir === \"asc\"\n      };\n    }\n  }, {\n    key: \"sortState\",\n    value: function sortState(column) {\n      if (!this.isSortable(column)) {\n        return;\n      }\n\n      var state$$1 = this.sortDescriptor(column.field);\n\n      if (state$$1.dir === 'asc') {\n        return 'ascending';\n      }\n\n      if (state$$1.dir === 'desc') {\n        return 'descending';\n      }\n    }\n  }, {\n    key: \"sortStatus\",\n    value: function sortStatus(column) {\n      if (!this.sortedFields[column.field] || !this.isSortable(column)) {\n        return;\n      }\n\n      var msg = 'sortedDefault';\n      var state$$1 = this.sortDescriptor(column.field);\n\n      if (state$$1.dir === 'asc') {\n        msg = 'sortedAscending';\n      } else if (state$$1.dir === 'desc') {\n        msg = 'sortedDescending';\n      }\n\n      return this.localization.get(msg);\n    }\n  }, {\n    key: \"toggleSort\",\n    value: function toggleSort(column) {\n      var _normalize$2 = normalize$1(this.sortable, column.sortable),\n          allowUnsort = _normalize$2.allowUnsort,\n          mode = _normalize$2.mode,\n          initialDirection = _normalize$2.initialDirection;\n\n      var descriptor = this.toggleDirection(column.field, allowUnsort, initialDirection);\n\n      if (mode === 'single') {\n        return [descriptor];\n      }\n\n      return [].concat(_toConsumableArray(this.sort.filter(function (desc) {\n        return desc.field !== column.field;\n      })), [descriptor]);\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      this.subscription.add(observe(this.dropTargets).subscribe(this.attachTargets.bind(this)));\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this._leafColumns = columnsToRender(this.columns || []).filter(function (x) {\n        return !_isColumnGroupComponent(x);\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var _this102 = this;\n\n      var sortChange = changes.sort;\n\n      if (sortChange && !sortChange.isFirstChange()) {\n        sortChange.currentValue.forEach(function (change) {\n          _this102.sortedFields[change.field] = true;\n        });\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this103 = this;\n\n      this.subscription.add(this.localization.changes.subscribe(function () {\n        return _this103.cd.markForCheck();\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      if (this.popupService) {\n        this.popupService.destroy();\n      }\n\n      this.subscription.unsubscribe();\n    }\n  }, {\n    key: \"selectAllCheckboxId\",\n    value: function selectAllCheckboxId() {\n      return this.idService.selectAllCheckboxId();\n    }\n  }, {\n    key: \"isFirstOnRow\",\n    value: function isFirstOnRow(column, index) {\n      var _this104 = this;\n\n      var isTailing = function isTailing(c) {\n        return c && (_this104.columnsForLevel(c.level).indexOf(c) > 0 || isTailing(c.parent));\n      };\n\n      return index === 0 && !this.groups.length && !this.detailTemplate && isTailing(column.parent);\n    }\n  }, {\n    key: \"logicalColumnIndex\",\n    value: function logicalColumnIndex(column) {\n      var index = column.leafIndex;\n\n      if (isPresent(index)) {\n        return index + (isPresent(this.detailTemplate) ? 1 : 0);\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"showColumnMenu\",\n    value: function showColumnMenu(column) {\n      return this.columnMenu && column.columnMenu && (this.columnMenuTemplate || column.columnMenuTemplates.length || hasItems(this.columnMenu, column));\n    }\n  }, {\n    key: \"isFilterable\",\n    value: function isFilterable(column) {\n      return !isNullOrEmptyString(column.field) && column.filterable === true;\n    }\n  }, {\n    key: \"canDrop\",\n    value: function canDrop(draggable, target) {\n      return this.reorderable && rules({\n        draggable: draggable,\n        target: target\n      });\n    }\n  }, {\n    key: \"shouldActivate\",\n    value: function shouldActivate(column) {\n      var canReorder = this.reorderable && column.reorderable;\n\n      if (!canReorder && !isColumnComponent(column)) {\n        return false;\n      }\n\n      var groupable = this.groupable && isColumnComponent(column) && column.groupable !== false;\n      return groupable || canReorder;\n    }\n  }, {\n    key: \"isSortable\",\n    value: function isSortable(column) {\n      return !isNullOrEmptyString(column.field) && isTruthy(this.sortable) && isTruthy(column.sortable);\n    }\n  }, {\n    key: \"isCheckboxColumn\",\n    value: function isCheckboxColumn(column) {\n      return _isCheckboxColumn(column) && !column.templateRef;\n    }\n  }, {\n    key: \"trackByIndex\",\n    value: function trackByIndex(index, _item) {\n      return index;\n    }\n  }, {\n    key: \"toggleDirection\",\n    value: function toggleDirection(field, allowUnsort, initialDirection) {\n      var descriptor = this.sortDescriptor(field);\n\n      var _directions = directions(initialDirection),\n          _directions2 = _slicedToArray(_directions, 2),\n          first = _directions2[0],\n          second = _directions2[1];\n\n      var dir = first;\n\n      if (descriptor.dir === first) {\n        dir = second;\n      } else if (descriptor.dir === second && allowUnsort) {\n        dir = undefined;\n      }\n\n      return {\n        dir: dir,\n        field: field\n      };\n    }\n  }, {\n    key: \"columnsForLevel\",\n    value: function columnsForLevel(level) {\n      var columns = this.columns ? this.columns.filter(function (column) {\n        return column.level === level;\n      }) : [];\n      return sortColumns(columnsToRender(columns));\n    }\n  }, {\n    key: \"isColumnGroupComponent\",\n    value: function isColumnGroupComponent(column) {\n      return _isColumnGroupComponent(column);\n    }\n  }, {\n    key: \"sortDescriptor\",\n    value: function sortDescriptor(field) {\n      return this.sort.find(function (item) {\n        return item.field === field;\n      }) || {\n        field: field\n      };\n    }\n  }, {\n    key: \"attachTargets\",\n    value: function attachTargets() {\n      var _this105 = this;\n\n      if (this.targetSubscription) {\n        this.targetSubscription.unsubscribe();\n      }\n\n      this.targetSubscription = new Subscription();\n      var enterStream = merge.apply(void 0, _toConsumableArray(this.dropTargets.map(function (target) {\n        return target.enter;\n      })));\n      var leaveStream = merge.apply(void 0, _toConsumableArray(this.dropTargets.map(function (target) {\n        return target.leave;\n      })));\n      var dropStream = merge.apply(void 0, _toConsumableArray(this.dropTargets.map(function (target) {\n        return target.drop;\n      })));\n      this.targetSubscription.add(enterStream.pipe(tap(function (_ref65) {\n        var target = _ref65.target,\n            draggable = _ref65.draggable;\n\n        if (draggable.context.type === 'groupIndicator') {\n          return;\n        }\n\n        var targetLocked = isTruthy(target.context.column.isLocked);\n        var draggableLocked = isTruthy(draggable.context.column.isLocked);\n\n        if (_this105.lockedColumnsCount > 0 || targetLocked || draggableLocked) {\n          _this105.hint.toggleLock(targetLocked);\n        }\n      }), filter(function (_ref66) {\n        var draggable = _ref66.draggable,\n            target = _ref66.target;\n        return _this105.canDrop(draggable, target);\n      }), switchMap(this.trackMove.bind(this, leaveStream, dropStream)), map(function (e) {\n        return mergeObjects(e, {\n          before: _this105.calculateBefore(e),\n          changeContainer: e.changeContainer\n        });\n      }), map(this.normalizeTarget.bind(this)), tap(this.enter.bind(this)), switchMap(function (args) {\n        return dropStream.pipe(map(function () {\n          return args;\n        }), takeUntil(leaveStream.pipe(tap(_this105.leave.bind(_this105)))));\n      })).subscribe(this.drop.bind(this)));\n    }\n  }, {\n    key: \"normalizeTarget\",\n    value: function normalizeTarget(e) {\n      var target = e.target;\n      var parent = target.context.column.parent;\n\n      if (parent && parent.isSpanColumn) {\n        var arr = this.dropTargets.toArray();\n        var firstSpan = arr.find(function (t) {\n          return t.context.column.parent === parent;\n        });\n        var index = arr.indexOf(firstSpan);\n        var adjust = e.before ? 0 : parent.childColumns.length - 1;\n        target = arr[index + adjust];\n      }\n\n      return mergeObjects(e, {\n        target: target\n      });\n    }\n  }, {\n    key: \"trackMove\",\n    value: function trackMove(leaveStream, dropStream, e) {\n      var column = e.target.context.column;\n      var levelColumns = this.columnsForLevel(column.level);\n      var index = levelColumns.indexOf(column);\n      var isFirst = column.locked ? index === levelColumns.length - 1 : index === 0;\n      var changed = e.draggable.context.column.isLocked !== column.isLocked;\n\n      if (changed && isFirst) {\n        return e.draggable.drag.pipe(takeUntil(leaveStream), takeUntil(dropStream), map(function (_ref67) {\n          var mouseEvent = _ref67.mouseEvent;\n          return mergeObjects({\n            changeContainer: true\n          }, e, {\n            mouseEvent: mouseEvent\n          });\n        }));\n      }\n\n      return of(mergeObjects({\n        changeContainer: changed\n      }, e));\n    }\n  }, {\n    key: \"calculateBefore\",\n    value: function calculateBefore(_ref68) {\n      var draggable = _ref68.draggable,\n          target = _ref68.target,\n          mouseEvent = _ref68.mouseEvent,\n          _ref68$changeContaine = _ref68.changeContainer,\n          changeContainer = _ref68$changeContaine === void 0 ? false : _ref68$changeContaine;\n      var targetElement = target.element.nativeElement;\n      var before = false;\n\n      if (changeContainer) {\n        var _offset5 = offset(targetElement),\n            left = _offset5.left;\n\n        var halfWidth = targetElement.offsetWidth / 2;\n        var middle = left + halfWidth;\n        before = middle > mouseEvent.pageX;\n\n        if (this.localization.rtl) {\n          before = !before;\n        }\n      } else {\n        before = isTargetBefore(draggable.element.nativeElement, targetElement);\n      }\n\n      return before;\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(_ref69) {\n      var target = _ref69.target,\n          before = _ref69.before;\n      this.hint.enable();\n\n      if (this.localization.rtl) {\n        before = !before;\n      }\n\n      this.cue.position(position(target.element.nativeElement, before));\n    }\n  }, {\n    key: \"leave\",\n    value: function leave() {\n      this.hint.disable();\n      this.cue.hide();\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(_ref70) {\n      var draggable = _ref70.draggable,\n          target = _ref70.target,\n          before = _ref70.before,\n          changeContainer = _ref70.changeContainer;\n      this.reorderService.reorder({\n        before: before,\n        changeContainer: changeContainer,\n        source: draggable.context.column,\n        target: target.context.column\n      });\n    }\n  }, {\n    key: \"headerClass\",\n    get: function get() {\n      return !this.scrollable;\n    }\n  }, {\n    key: \"sortableLabel\",\n    get: function get() {\n      return this.localization.get('sortable');\n    } // Number of unlocked columns in the next table, if any\n\n  }, {\n    key: \"unlockedColumnsCount\",\n    get: function get() {\n      return this.totalColumnsCount - this.lockedColumnsCount - this.columns.length;\n    }\n  }, {\n    key: \"showFilterMenu\",\n    get: function get() {\n      return !this.columnMenu && hasFilterMenu(this.filterable);\n    }\n  }, {\n    key: \"showFilterRow\",\n    get: function get() {\n      return hasFilterRow(this.filterable);\n    }\n  }, {\n    key: \"columnLevels\",\n    get: function get() {\n      return new Array((this.totalColumnLevels || 0) + 1);\n    }\n  }, {\n    key: \"leafColumns\",\n    get: function get() {\n      return this._leafColumns;\n    }\n  }]);\n\n  return HeaderComponent;\n}();\n\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(DragHintService), ɵngcc0.ɵɵdirectiveInject(DropCueService), ɵngcc0.ɵɵdirectiveInject(ColumnReorderService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(SortService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"\", \"kendoGridHeader\", \"\"]],\n  viewQuery: function HeaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(DropTargetDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropTargets = _t);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function HeaderComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-header\", ctx.headerClass);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    sort: \"sort\",\n    sortable: \"sortable\",\n    groupable: \"groupable\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    resizable: \"resizable\",\n    reorderable: \"reorderable\",\n    columnMenu: \"columnMenu\",\n    totalColumnsCount: \"totalColumnsCount\",\n    totalColumnLevels: \"totalColumnLevels\",\n    detailTemplate: \"detailTemplate\",\n    scrollable: \"scrollable\",\n    filterable: \"filterable\",\n    filter: \"filter\",\n    columnMenuTemplate: \"columnMenuTemplate\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c149,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngFor\", \"ngForOf\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-group-cell k-header\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"k-hierarchy-cell k-header\", \"role\", \"presentation\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"role\", \"presentation\", 1, \"k-group-cell\", \"k-header\"], [\"role\", \"presentation\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\", \"rowSpan\", \"enableDrag\", \"context\", \"k-filterable\", \"k-first\", \"ngClass\", \"ngStyle\", \"keydown\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", \"class\", \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"enableDrag\", \"context\", \"k-first\", \"k-filterable\", \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"columnheader\", \"aria-selected\", \"false\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\", \"rowSpan\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\", \"keydown\"], [3, \"column\", \"filter\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\", 4, \"ngIf\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", \"class\", \"k-column-resizer\", 3, \"column\", \"columns\", 4, \"ngIf\"], [3, \"column\", \"filter\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", \"sort\", \"filter\", \"sortable\"], [3, \"templateContext\"], [1, \"k-link\", 3, \"click\"], [\"link\", \"\"], [3, \"ngClass\"], [\"class\", \"k-sort-order\", 4, \"ngIf\"], [\"role\", \"status\", 1, \"k-sort-status\", 2, \"position\", \"absolute\", \"left\", \"-10000px\", 3, \"innerHtml\"], [1, \"k-sort-order\"], [\"kendoGridSelectAllCheckbox\", \"\", \"kendoGridFocusable\", \"\", 1, \"k-checkbox\"], [1, \"k-checkbox-label\"], [\"kendoGridColumnHandle\", \"\", \"kendoDraggable\", \"\", 1, \"k-column-resizer\", 3, \"column\", \"columns\"], [\"kendoGridLogicalCell\", \"\", \"kendoDropTarget\", \"\", \"kendoDraggable\", \"\", \"kendoDraggableColumn\", \"\", 1, \"k-header\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"rowSpan\", \"colSpan\", \"enableDrag\", \"context\", \"ngClass\", \"ngStyle\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\", 4, \"ngIf\"], [3, \"standalone\", \"settings\", \"column\", \"columnMenuTemplate\"], [\"kendoGridFilterRow\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"filter\", \"groups\", \"detailTemplate\", \"lockedColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, HeaderComponent_ng_template_0_Template, 2, 2, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", true);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgForOf, LogicalRowDirective, LogicalCellDirective, DropTargetDirective, ɵngcc2.DraggableDirective, DraggableColumnDirective, ɵngcc1.NgClass, ɵngcc1.NgStyle, FilterMenuComponent, ColumnMenuComponent, TemplateContextDirective, SelectAllCheckboxDirective, FocusableDirective, ColumnHandleDirective, FilterRowComponent];\n  },\n  styles: [\".k-column-resizer[_ngcontent-%COMP%] {\\n            cursor: col-resize;\\n            display: block;\\n            height: 1000%;\\n            position: absolute;\\n            top: 0;\\n            width: .5em;\\n        }\"]\n});\n/** @nocollapse */\n\nHeaderComponent.ctorParameters = function () {\n  return [{\n    type: SinglePopupService\n  }, {\n    type: DragHintService\n  }, {\n    type: DropCueService\n  }, {\n    type: ColumnReorderService\n  }, {\n    type: IdService\n  }, {\n    type: SortService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nHeaderComponent.propDecorators = {\n  totalColumnLevels: [{\n    type: Input\n  }],\n  columns: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  sort: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  sortable: [{\n    type: Input\n  }],\n  groupable: [{\n    type: Input\n  }],\n  lockedColumnsCount: [{\n    type: Input\n  }],\n  resizable: [{\n    type: Input\n  }],\n  reorderable: [{\n    type: Input\n  }],\n  columnMenu: [{\n    type: Input\n  }],\n  columnMenuTemplate: [{\n    type: Input\n  }],\n  totalColumnsCount: [{\n    type: Input\n  }],\n  headerClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-header']\n  }],\n  dropTargets: [{\n    type: ViewChildren,\n    args: [DropTargetDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridHeader]',\n      styles: [\"\\n        .k-column-resizer {\\n            cursor: col-resize;\\n            display: block;\\n            height: 1000%;\\n            position: absolute;\\n            top: 0;\\n            width: .5em;\\n        }\\n    \"],\n      template: \"\\n    <ng-template [ngIf]=\\\"true\\\">\\n        <tr *ngFor=\\\"let i of columnLevels; let levelIndex = index\\\"\\n            kendoGridLogicalRow\\n                [logicalRowIndex]=\\\"levelIndex\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"unlockedColumnsCount\\\">\\n            <th\\n                class=\\\"k-group-cell k-header\\\"\\n                role=\\\"presentation\\\"\\n                *ngFor=\\\"let g of groups\\\">\\n            </th>\\n            <th class=\\\"k-hierarchy-cell k-header\\\"\\n                role=\\\"presentation\\\"\\n                *ngIf=\\\"detailTemplate?.templateRef\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"levelIndex\\\"\\n                    [logicalColIndex]=\\\"0\\\"\\n                    aria-selected=\\\"false\\\"\\n            >\\n            </th>\\n            <ng-template ngFor let-column [ngForOf]=\\\"columnsForLevel(levelIndex)\\\" [ngForTrackBy]=\\\"trackByIndex\\\" let-columnIndex=\\\"index\\\" let-last=\\\"last\\\">\\n                <th *ngIf=\\\"!isColumnGroupComponent(column)\\\"\\n                    kendoGridLogicalCell [logicalRowIndex]=\\\"levelIndex\\\"\\n                                         [logicalColIndex]=\\\"logicalColumnIndex(column)\\\"\\n                                         [colSpan]=\\\"column.colspan\\\"\\n                                         [rowSpan]=\\\"column.rowspan(totalColumnLevels)\\\"\\n                                         role=\\\"columnheader\\\"\\n                                         aria-selected=\\\"false\\\"\\n                                         [attr.aria-sort]=\\\"sortState(column)\\\"\\n                                         (keydown)=\\\"onHeaderKeydown(column, $event)\\\"\\n                    kendoDropTarget\\n                    kendoDraggable\\n                    kendoDraggableColumn\\n                    [enableDrag]=\\\"shouldActivate(column)\\\"\\n                    [context]=\\\"{\\n                        field: column.field,\\n                        type: 'column',\\n                        column: column,\\n                        hint: column.title || column.field,\\n                        lastColumn: last && columnIndex === 0\\n                    }\\\"\\n                    class=\\\"k-header\\\"\\n                    [class.k-filterable]=\\\"(showFilterMenu && isFilterable(column)) || showColumnMenu(column)\\\"\\n                    [class.k-first]=\\\"isFirstOnRow(column, columnIndex)\\\"\\n                    [ngClass]=\\\"column.headerClass\\\"\\n                    [ngStyle]=\\\"column.headerStyle\\\"\\n                    [attr.rowspan]=\\\"column.rowspan(totalColumnLevels)\\\"\\n                    [attr.colspan]=\\\"column.colspan\\\">\\n                    <kendo-grid-filter-menu\\n                        *ngIf=\\\"showFilterMenu && isFilterable(column)\\\"\\n                        [column]=\\\"column\\\"\\n                        [filter]=\\\"filter\\\">\\n                    </kendo-grid-filter-menu>\\n                    <kendo-grid-column-menu *ngIf=\\\"showColumnMenu(column)\\\"\\n                        [standalone]=\\\"false\\\"\\n                        [settings]=\\\"columnMenu\\\"\\n                        [column]=\\\"column\\\"\\n                        [columnMenuTemplate]=\\\"columnMenuTemplate\\\"\\n                        [sort]=\\\"sort\\\"\\n                        [filter]=\\\"filter\\\"\\n                        [sortable]=\\\"sortable\\\">\\n                    </kendo-grid-column-menu>\\n                    <ng-template [ngIf]=\\\"!isSortable(column)\\\">\\n                        <ng-template\\n                            [templateContext]=\\\"{\\n                                templateRef: column.headerTemplateRef,\\n                                columnIndex: column.leafIndex,\\n                                column: column,\\n                                $implicit: column\\n                            }\\\">\\n                        </ng-template>\\n                        <ng-template [ngIf]=\\\"!column.headerTemplateRef\\\">{{column.displayTitle}}</ng-template>\\n                    </ng-template>\\n                    <ng-template [ngIf]=\\\"isSortable(column)\\\">\\n                        <span #link class=\\\"k-link\\\" (click)=\\\"onSortClick(column, $event, link)\\\">\\n                            <ng-template\\n                                [templateContext]=\\\"{\\n                                    templateRef: column.headerTemplateRef,\\n                                    columnIndex: column.leafIndex,\\n                                    column: column,\\n                                    $implicit: column\\n                                }\\\">\\n                            </ng-template>\\n                            <ng-template [ngIf]=\\\"!column.headerTemplateRef\\\">{{column.displayTitle}}</ng-template>\\n                            <span [attr.aria-label]=\\\"sortableLabel\\\" [ngClass]=\\\"sortIcon(column.field)\\\"></span>\\n                            <span *ngIf=\\\"showSortNumbering(column)\\\" class=\\\"k-sort-order\\\">{{sortOrder(column.field)}}</span>\\n                        </span>\\n                        <span role=\\\"status\\\"\\n                              class=\\\"k-sort-status\\\"\\n                              style=\\\"position: absolute; left: -10000px;\\\"\\n                              [innerHtml]=\\\"sortStatus(column)\\\">\\n                        </span>\\n                    </ng-template>\\n                    <ng-template [ngIf]=\\\"isCheckboxColumn(column) && !column.headerTemplateRef && column.showSelectAll\\\">\\n                        <input\\n                            class=\\\"k-checkbox\\\"\\n                            [attr.id]=\\\"selectAllCheckboxId()\\\"\\n                            kendoGridSelectAllCheckbox\\n                            kendoGridFocusable>\\n                        <label class=\\\"k-checkbox-label\\\" [attr.for]=\\\"selectAllCheckboxId()\\\"></label>\\n                    </ng-template>\\n                    <span kendoGridColumnHandle\\n                        kendoDraggable\\n                        class=\\\"k-column-resizer\\\"\\n                        *ngIf=\\\"resizable\\\"\\n                        [column]=\\\"column\\\"\\n                        [columns]=\\\"columns\\\">\\n                    </span>\\n                </th>\\n                <th *ngIf=\\\"isColumnGroupComponent(column)\\\"\\n                    kendoGridLogicalCell [logicalRowIndex]=\\\"levelIndex\\\"\\n                                         [logicalColIndex]=\\\"logicalColumnIndex(column)\\\"\\n                                         [rowSpan]=\\\"column.rowspan(totalColumnLevels)\\\"\\n                                         [colSpan]=\\\"column.colspan\\\"\\n                    kendoDropTarget\\n                    kendoDraggable\\n                    kendoDraggableColumn\\n                    [enableDrag]=\\\"shouldActivate(column)\\\"\\n                    [context]=\\\"{\\n                        type: 'columnGroup',\\n                        column: column,\\n                        hint: column.title,\\n                        lastColumn: last && columnIndex === 0\\n                    }\\\"\\n                    class=\\\"k-header\\\"\\n                    [class.k-first]=\\\"isFirstOnRow(column, columnIndex)\\\"\\n                    [class.k-filterable]=\\\"showColumnMenu(column)\\\"\\n                    [ngClass]=\\\"column.headerClass\\\"\\n                    [ngStyle]=\\\"column.headerStyle\\\"\\n                    [attr.rowspan]=\\\"column.rowspan(totalColumnLevels)\\\"\\n                    [attr.colspan]=\\\"column.colspan\\\">\\n                        <kendo-grid-column-menu *ngIf=\\\"showColumnMenu(column)\\\"\\n                            [standalone]=\\\"false\\\"\\n                            [settings]=\\\"columnMenu\\\"\\n                            [column]=\\\"column\\\"\\n                            [columnMenuTemplate]=\\\"columnMenuTemplate\\\">\\n                        </kendo-grid-column-menu>\\n                        <ng-template\\n                            [templateContext]=\\\"{\\n                                templateRef: column.headerTemplateRef,\\n                                columnIndex: lockedColumnsCount + columnIndex,\\n                                column: column,\\n                                $implicit: column\\n                            }\\\">\\n                        </ng-template>\\n                        <ng-template [ngIf]=\\\"!column.headerTemplateRef\\\">{{column.displayTitle}}</ng-template>\\n                        <span kendoGridColumnHandle\\n                            kendoDraggable\\n                            class=\\\"k-column-resizer\\\"\\n                            *ngIf=\\\"resizable\\\"\\n                            [column]=\\\"column\\\"\\n                            [columns]=\\\"columns\\\">\\n                        </span>\\n                </th>\\n            </ng-template>\\n        </tr>\\n        <tr *ngIf=\\\"showFilterRow\\\"\\n            kendoGridFilterRow\\n                [columns]=\\\"leafColumns\\\"\\n                [filter]=\\\"filter\\\"\\n                [groups]=\\\"groups\\\"\\n                [detailTemplate]=\\\"detailTemplate\\\"\\n                [lockedColumnsCount]=\\\"lockedColumnsCount\\\"\\n            kendoGridLogicalRow\\n                [logicalRowIndex]=\\\"totalColumnLevels + 1\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"unlockedColumnsCount\\\"\\n        ></tr>\\n    </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: SinglePopupService\n    }, {\n      type: DragHintService\n    }, {\n      type: DropCueService\n    }, {\n      type: ColumnReorderService\n    }, {\n      type: IdService\n    }, {\n      type: SortService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    groupable: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    resizable: [{\n      type: Input\n    }],\n    reorderable: [{\n      type: Input\n    }],\n    columnMenu: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    dropTargets: [{\n      type: ViewChildren,\n      args: [DropTargetDirective]\n    }],\n    headerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-header']\n    }],\n    totalColumnLevels: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    columnMenuTemplate: [{\n      type: Input\n    }]\n  });\n})(); // TODO\n// tslint:disable:rxjs-no-unsafe-takeuntil\n\n/**\n * @hidden\n */\n\n\nvar fromPercentage = function fromPercentage(value, percent) {\n  var sign = percent < 0 ? -1 : 1;\n  return Math.ceil(Math.abs(percent) / 100 * value) * sign;\n};\n/**\n * @hidden\n */\n\n\nvar toPercentage = function toPercentage(value, whole) {\n  return value / whole * 100;\n};\n/**\n * @hidden\n */\n\n\nvar headerWidth = function headerWidth(handle) {\n  return handle.nativeElement.parentElement.offsetWidth;\n};\n/**\n * @hidden\n */\n\n\nvar allLeafColumns = function allLeafColumns(columns) {\n  return expandColumns(columns).filter(function (c) {\n    return !c.isColumnGroup;\n  });\n};\n/**\n * @hidden\n */\n\n\nvar stopPropagation = function stopPropagation(_ref71) {\n  var event = _ref71.originalEvent;\n  event.stopPropagation();\n  event.preventDefault();\n};\n/**\n * @hidden\n */\n\n\nvar createMoveStream = function createMoveStream(service, draggable) {\n  return function (mouseDown) {\n    return draggable.kendoDrag.pipe(takeUntil(draggable.kendoRelease.pipe(tap(function () {\n      return service.end();\n    }))), map(function (_ref72) {\n      var pageX = _ref72.pageX;\n      return {\n        originalX: mouseDown.pageX,\n        pageX: pageX\n      };\n    }));\n  };\n};\n/**\n * @hidden\n */\n\n\nvar preventOnDblClick$1 = function preventOnDblClick$1(release) {\n  return function (mouseDown) {\n    return of(mouseDown).pipe(delay(150), takeUntil(release));\n  };\n};\n/**\n * @hidden\n */\n\n\nvar isInSpanColumn$1 = function isInSpanColumn$1(column) {\n  return !!(column.parent && column.parent.isSpanColumn);\n};\n/**\n * @hidden\n *\n * Calculates the column index. If the column is stated in `SpanColumn`,\n * the index for all child columns equals the index of the first child.\n */\n\n\nvar indexOf = function indexOf(target, list) {\n  var index = 0;\n  var ignore = 0;\n  var skip = 0;\n\n  while (index < list.length) {\n    var current = list[index];\n    var isParentSpanColumn = isInSpanColumn$1(current);\n\n    if (current === target) {\n      break;\n    }\n\n    if (ignore-- <= 0 && isParentSpanColumn) {\n      ignore = current.parent.childColumns.length - 1;\n      skip += ignore;\n    }\n\n    index++;\n  }\n\n  return index - skip;\n};\n/**\n * @hidden\n */\n\n\nvar ColumnHandleDirective = /*#__PURE__*/function () {\n  function ColumnHandleDirective(draggable, element, service, zone, cdr, localization) {\n    _classCallCheck(this, ColumnHandleDirective);\n\n    this.draggable = draggable;\n    this.element = element;\n    this.service = service;\n    this.zone = zone;\n    this.cdr = cdr;\n    this.localization = localization;\n    this.columns = [];\n    this.subscriptions = new Subscription();\n    this.rtl = false;\n  }\n\n  _createClass(ColumnHandleDirective, [{\n    key: \"autoFit\",\n    value: function autoFit() {\n      var _this106 = this;\n\n      var allLeafs = allLeafColumns(this.columns);\n      var currentLeafs = leafColumns([this.column]).filter(function (column) {\n        return isTruthy(column.resizable);\n      });\n      var columnInfo = currentLeafs.map(function (column) {\n        var isParentSpan = isInSpanColumn$1(column);\n        var isLastInSpan = isParentSpan ? column.parent.childColumns.last === column : false;\n        var index = indexOf(column, allLeafs);\n        return {\n          column: column,\n          headerIndex: _this106.columnsForLevel(column.level).indexOf(column),\n          index: index,\n          isLastInSpan: isLastInSpan,\n          isParentSpan: isParentSpan,\n          level: column.level\n        };\n      });\n      currentLeafs.forEach(function (column) {\n        return column.width = 0;\n      });\n      this.service.measureColumns(columnInfo);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this107 = this;\n\n      var service = this.service.changes.pipe(filter(function () {\n        return _this107.column.resizable;\n      }), filter(function (e) {\n        return isPresent(e.columns.find(function (column) {\n          return column === _this107.column;\n        }));\n      }));\n      this.subscriptions.add(service.pipe(filter(function (e) {\n        return e.type === 'start';\n      })).subscribe(this.initState.bind(this)));\n      this.subscriptions.add(service.pipe(filter(function (e) {\n        return e.type === 'resizeColumn';\n      })).subscribe(this.resize.bind(this)));\n      this.subscriptions.add(this.service.changes.pipe(filter(function (e) {\n        return e.type === 'start';\n      }), filter(this.shouldUpdate.bind(this)), take(1) //on first resize only\n      ).subscribe(this.initColumnWidth.bind(this)));\n      this.subscriptions.add(this.zone.runOutsideAngular(function () {\n        return _this107.draggable.kendoPress.pipe(tap(stopPropagation), tap(function () {\n          return _this107.service.start(_this107.column);\n        }), switchMap(preventOnDblClick$1(_this107.draggable.kendoRelease)), switchMap(createMoveStream(_this107.service, _this107.draggable))).subscribe(function (_ref73) {\n          var pageX = _ref73.pageX,\n              originalX = _ref73.originalX;\n          var delta = pageX - originalX;\n          var percent = toPercentage(delta, _this107.column.resizeStartWidth || _this107.column.width);\n\n          _this107.service.resizeColumns(percent);\n        });\n      }));\n      this.subscriptions.add(service.pipe(filter(function (e) {\n        return e.type === 'autoFitComplete';\n      })).subscribe(this.sizeToFit.bind(this)));\n      this.subscriptions.add(service.pipe(filter(function (e) {\n        return e.type === 'triggerAutoFit';\n      })).subscribe(this.autoFit.bind(this)));\n      this.subscriptions.add(this.localization.changes.subscribe(function (_ref74) {\n        var rtl = _ref74.rtl;\n        return _this107.rtl = rtl;\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscriptions) {\n        this.subscriptions.unsubscribe();\n      }\n    }\n  }, {\n    key: \"shouldUpdate\",\n    value: function shouldUpdate() {\n      return !allLeafColumns(this.columns).map(function (column) {\n        return column.width;\n      }).some(isBlank);\n    }\n  }, {\n    key: \"initColumnWidth\",\n    value: function initColumnWidth() {\n      this.column.width = headerWidth(this.element);\n    }\n  }, {\n    key: \"initState\",\n    value: function initState() {\n      this.column.resizeStartWidth = headerWidth(this.element);\n      this.service.resizedColumn({\n        column: this.column,\n        oldWidth: this.column.resizeStartWidth\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(_ref75) {\n      var deltaPercent = _ref75.deltaPercent;\n      var delta = fromPercentage(this.column.resizeStartWidth, deltaPercent);\n\n      if (isTruthy(this.rtl)) {\n        delta *= -1;\n      }\n\n      var newWidth = Math.max(this.column.resizeStartWidth + delta, this.column.minResizableWidth);\n      var tableDelta = newWidth > this.column.minResizableWidth ? delta : this.column.minResizableWidth - this.column.resizeStartWidth;\n      this.updateWidth(this.column, newWidth);\n      this.service.resizeTable(this.column, tableDelta);\n    }\n  }, {\n    key: \"sizeToFit\",\n    value: function sizeToFit(_ref76) {\n      var columns = _ref76.columns,\n          widths = _ref76.widths;\n      var index = columns.indexOf(this.column);\n      var width = Math.max.apply(Math, _toConsumableArray(widths.map(function (w) {\n        return w[index];\n      }))) + 1; //add 1px for IE\n\n      var tableDelta = width - this.column.resizeStartWidth;\n      this.updateWidth(this.column, width);\n      this.service.resizeTable(this.column, tableDelta);\n    }\n  }, {\n    key: \"updateWidth\",\n    value: function updateWidth(column, width) {\n      column.width = width;\n      this.cdr.markForCheck(); //force CD cycle\n    }\n  }, {\n    key: \"columnsForLevel\",\n    value: function columnsForLevel(level) {\n      return columnsToRender(this.columns ? this.columns.filter(function (column) {\n        return column.level === level;\n      }) : []);\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.column.resizable ? 'block' : 'none';\n    }\n  }, {\n    key: \"leftStyle\",\n    get: function get() {\n      return isTruthy(this.rtl) ? 0 : null;\n    }\n  }, {\n    key: \"rightStyle\",\n    get: function get() {\n      return isTruthy(this.rtl) ? null : 0;\n    }\n  }]);\n\n  return ColumnHandleDirective;\n}();\n\nColumnHandleDirective.ɵfac = function ColumnHandleDirective_Factory(t) {\n  return new (t || ColumnHandleDirective)(ɵngcc0.ɵɵdirectiveInject(DraggableDirective, 1), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ColumnResizingService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nColumnHandleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ColumnHandleDirective,\n  selectors: [[\"\", \"kendoGridColumnHandle\", \"\"]],\n  hostVars: 6,\n  hostBindings: function ColumnHandleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"dblclick\", function ColumnHandleDirective_dblclick_HostBindingHandler() {\n        return ctx.autoFit();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible)(\"left\", ctx.leftStyle)(\"right\", ctx.rightStyle);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    column: \"column\"\n  }\n});\n/** @nocollapse */\n\nColumnHandleDirective.ctorParameters = function () {\n  return [{\n    type: DraggableDirective,\n    decorators: [{\n      type: Host\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: ColumnResizingService\n  }, {\n    type: NgZone\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: LocalizationService\n  }];\n};\n\nColumnHandleDirective.propDecorators = {\n  columns: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  visible: [{\n    type: HostBinding,\n    args: ['style.display']\n  }],\n  leftStyle: [{\n    type: HostBinding,\n    args: ['style.left']\n  }],\n  rightStyle: [{\n    type: HostBinding,\n    args: ['style.right']\n  }],\n  autoFit: [{\n    type: HostListener,\n    args: ['dblclick']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnHandle]'\n    }]\n  }], function () {\n    return [{\n      type: DraggableDirective,\n      decorators: [{\n        type: Host\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: ColumnResizingService\n    }, {\n      type: NgZone\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n    leftStyle: [{\n      type: HostBinding,\n      args: ['style.left']\n    }],\n    rightStyle: [{\n      type: HostBinding,\n      args: ['style.right']\n    }],\n    autoFit: [{\n      type: HostListener,\n      args: ['dblclick']\n    }],\n    column: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the select-all checkbox feature of the Grid ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n */\n\n\nvar SelectAllCheckboxDirective = /*#__PURE__*/function () {\n  function SelectAllCheckboxDirective(selectionService, el, renderer, ngZone) {\n    var _this108 = this;\n\n    _classCallCheck(this, SelectAllCheckboxDirective);\n\n    this.selectionService = selectionService;\n    this.el = el;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    /**\n     * Fires when the user clicks the `kendoGridSelectAllCheckbox` select-all checkbox\n     * ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n     */\n\n    this.selectAllChange = new EventEmitter();\n    this.type = \"checkbox\";\n    this.stateSet = false;\n    this.ngZone.runOutsideAngular(function () {\n      _this108.destroyClick = _this108.renderer.listen(_this108.el.nativeElement, \"click\", _this108.onClick.bind(_this108));\n    });\n  }\n\n  _createClass(SelectAllCheckboxDirective, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      this.setState();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.stateSet = true;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.destroyClick) {\n        this.destroyClick();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      var _this109 = this;\n\n      var isChecked = this.el.nativeElement.checked;\n      var options = this.selectionService.options;\n      this.selectAllChange.emit(isChecked ? \"checked\" : \"unchecked\");\n\n      if (options.enabled && options.mode === \"multiple\") {\n        this.ngZone.run(function () {\n          _this109.selectionService.updateAll(isChecked);\n        });\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      var state$$1 = this.stateSet ? this.stateToBool() : this.selectionService.selectAllState;\n      var elem = this.el.nativeElement;\n      this.renderer.setProperty(elem, \"indeterminate\", !isPresent(state$$1));\n      this.renderer.setProperty(elem, \"checked\", isPresent(state$$1) ? state$$1 : false);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"stateToBool\",\n    value: function stateToBool() {\n      switch (this.state) {\n        case \"checked\":\n          return true;\n\n        case \"unchecked\":\n          return false;\n\n        default:\n          return undefined;\n      }\n    }\n  }]);\n\n  return SelectAllCheckboxDirective;\n}();\n\nSelectAllCheckboxDirective.ɵfac = function SelectAllCheckboxDirective_Factory(t) {\n  return new (t || SelectAllCheckboxDirective)(ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nSelectAllCheckboxDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectAllCheckboxDirective,\n  selectors: [[\"\", \"kendoGridSelectAllCheckbox\", \"\"]],\n  hostVars: 1,\n  hostBindings: function SelectAllCheckboxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    state: \"state\"\n  },\n  outputs: {\n    selectAllChange: \"selectAllChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature]\n});\n/** @nocollapse */\n\nSelectAllCheckboxDirective.ctorParameters = function () {\n  return [{\n    type: SelectionService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nSelectAllCheckboxDirective.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  selectAllChange: [{\n    type: Output\n  }],\n  type: [{\n    type: HostBinding,\n    args: ['attr.type']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectAllCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectAllCheckbox]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    selectAllChange: [{\n      type: Output\n    }],\n    type: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar FilterMenuComponent = /*#__PURE__*/function () {\n  function FilterMenuComponent(filterService, popupService, localization) {\n    _classCallCheck(this, FilterMenuComponent);\n\n    this.filterService = filterService;\n    this.popupService = popupService;\n    this.localization = localization;\n    /**\n     * @hidden\n     */\n\n    this.filterLabel = this.localization.get('filter');\n  }\n\n  _createClass(FilterMenuComponent, [{\n    key: \"toggle\",\n    value: function toggle(anchor, template) {\n      this.popupRef = this.popupService.open(anchor, template, this.popupRef);\n      return false;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.popupService.destroy();\n    }\n  }, {\n    key: \"hasFilters\",\n    get: function get() {\n      return _filtersByField3(this.filter, (this.column || {}).field).length > 0;\n    }\n  }]);\n\n  return FilterMenuComponent;\n}();\n\nFilterMenuComponent.ɵfac = function FilterMenuComponent_Factory(t) {\n  return new (t || FilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nFilterMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterMenuComponent,\n  selectors: [[\"kendo-grid-filter-menu\"]],\n  inputs: {\n    column: \"column\",\n    filter: \"filter\"\n  },\n  decls: 5,\n  vars: 4,\n  consts: [[\"href\", \"#\", 3, \"ngClass\", \"click\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-filter\"], [\"template\", \"\"], [3, \"column\", \"filter\", \"close\"]],\n  template: function FilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function FilterMenuComponent_Template_a_click_0_listener() {\n        ɵngcc0.ɵɵrestoreView(_r5);\n\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        var _r1 = ɵngcc0.ɵɵreference(4);\n\n        return ctx.toggle(_r0, _r1);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, FilterMenuComponent_ng_template_3_Template, 1, 2, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c153, ctx.hasFilters));\n      ɵngcc0.ɵɵattribute(\"title\", ctx.filterLabel);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgClass, FilterMenuContainerComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterMenuComponent.ctorParameters = function () {\n  return [{\n    type: FilterService\n  }, {\n    type: SinglePopupService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nFilterMenuComponent.propDecorators = {\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-menu',\n      template: \"\\n        <a #anchor\\n            [ngClass]=\\\"{'k-grid-filter':true, 'k-state-active': hasFilters}\\\"\\n            (click)=\\\"toggle(anchor, template)\\\"\\n            href=\\\"#\\\"\\n            [attr.title]=\\\"filterLabel\\\">\\n            <span class=\\\"k-icon k-i-filter\\\"></span>\\n        </a>\\n        <ng-template #template>\\n            <kendo-grid-filter-menu-container\\n                [column]=\\\"column\\\"\\n                [filter]=\\\"filter\\\"\\n                (close)=\\\"close()\\\"\\n                >\\n            </kendo-grid-filter-menu-container>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService\n    }, {\n      type: SinglePopupService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }]\n  });\n})();\n\nvar isNoValueOperator = function isNoValueOperator(operator) {\n  return operator === \"isnull\" || operator === \"isnotnull\" || operator === \"isempty\" || operator === \"isnotempty\";\n};\n\nvar validFilters = function validFilters(_ref77) {\n  var value = _ref77.value,\n      operator = _ref77.operator;\n  return !isNullOrEmptyString(value) || isNoValueOperator(operator);\n};\n\nvar trimFilters = function trimFilters(filter$$1) {\n  filter$$1.filters = filter$$1.filters.filter(validFilters);\n  return filter$$1;\n};\n\nvar findParent = function findParent(filters, field, parent) {\n  return filters.reduce(function (acc, filter$$1) {\n    if (acc) {\n      return acc;\n    }\n\n    if (filter$$1.filters) {\n      return findParent(filter$$1.filters, field, filter$$1);\n    } else if (filter$$1.field === field) {\n      return parent;\n    }\n\n    return acc;\n  }, undefined); // tslint:disable-line:align\n};\n\nvar parentLogicOfDefault = function parentLogicOfDefault(filter$$1, field) {\n  var def = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"and\";\n  var parent = findParent((filter$$1 || {}).filters || [], field);\n  return isPresent(parent) ? parent.logic : def;\n};\n/**\n * @hidden\n */\n\n\nvar FilterMenuContainerComponent = /*#__PURE__*/function () {\n  function FilterMenuContainerComponent(parentService, childService, localization, cd) {\n    _classCallCheck(this, FilterMenuContainerComponent);\n\n    this.parentService = parentService;\n    this.childService = childService;\n    this.localization = localization;\n    this.cd = cd;\n    this.close = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.actionsClass = 'k-action-buttons k-button-group';\n    this._templateContext = {};\n  }\n\n  _createClass(FilterMenuContainerComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this110 = this;\n\n      this.subscription = this.childService.changes.subscribe(function (filter$$1) {\n        return _this110._childFilter = filter$$1;\n      });\n      this.subscription.add(this.localization.changes.subscribe(function () {\n        return _this110.cd.markForCheck();\n      }));\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      var filter$$1 = trimFilters(this.childFilter);\n\n      if (filter$$1.filters.length) {\n        var root = this.filter || {\n          filters: [],\n          logic: \"and\"\n        };\n\n        _removeFilter(root, this.column.field);\n\n        root.filters.push(filter$$1);\n        this.parentService.filter(root);\n      }\n\n      this.close.emit();\n      return false;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var root = this.filter || {\n        filters: [],\n        logic: \"and\"\n      };\n\n      _removeFilter(root, this.column.field);\n\n      this.parentService.filter(root);\n      this.close.emit();\n    }\n  }, {\n    key: \"filter\",\n    get: function get() {\n      return this._filter;\n    }\n    /**\n     * The current root filter.\n     * @type {CompositeFilterDescriptor}\n     */\n    ,\n    set: function set(value) {\n      this._filter = cloneFilters(value);\n    }\n  }, {\n    key: \"childFilter\",\n    get: function get() {\n      if (!isPresent(this._childFilter)) {\n        this._childFilter = {\n          filters: _filtersByField3(this.filter, (this.column || {}).field),\n          logic: parentLogicOfDefault(this.filter, (this.column || {}).field)\n        };\n      }\n\n      return this._childFilter;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return !this.childFilter.filters.some(validFilters);\n    }\n  }, {\n    key: \"templateContext\",\n    get: function get() {\n      this._templateContext.column = this.column;\n      this._templateContext.filter = this.childFilter;\n      this._templateContext.filterService = this.childService; // tslint:disable-next-line:no-string-literal\n\n      this._templateContext[\"$implicit\"] = this.childFilter;\n      return this._templateContext;\n    }\n  }, {\n    key: \"hasTemplate\",\n    get: function get() {\n      return isPresent(this.column) && isPresent(this.column.filterMenuTemplateRef);\n    }\n  }, {\n    key: \"clearText\",\n    get: function get() {\n      return this.localization.get(\"filterClearButton\");\n    }\n  }, {\n    key: \"filterText\",\n    get: function get() {\n      return this.localization.get(\"filterFilterButton\");\n    }\n  }]);\n\n  return FilterMenuContainerComponent;\n}();\n\nFilterMenuContainerComponent.ɵfac = function FilterMenuContainerComponent_Factory(t) {\n  return new (t || FilterMenuContainerComponent)(ɵngcc0.ɵɵdirectiveInject(FilterService, 4), ɵngcc0.ɵɵdirectiveInject(FilterService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nFilterMenuContainerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterMenuContainerComponent,\n  selectors: [[\"kendo-grid-filter-menu-container\"]],\n  inputs: {\n    actionsClass: \"actionsClass\",\n    filter: \"filter\",\n    column: \"column\"\n  },\n  outputs: {\n    close: \"close\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([FilterService])],\n  decls: 10,\n  vars: 7,\n  consts: [[1, \"k-filter-menu\", \"k-group\", \"k-reset\", \"k-state-border-up\", 3, \"submit\", \"reset\"], [1, \"k-filter-menu-container\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngClass\"], [\"type\", \"reset\", 1, \"k-button\"], [\"type\", \"submit\", 1, \"k-button\", \"k-primary\", 3, \"disabled\"], [\"kendoFilterMenuHost\", \"\", 3, \"filterService\", \"column\", \"filter\"], [4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function FilterMenuContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"form\", 0);\n      ɵngcc0.ɵɵlistener(\"submit\", function FilterMenuContainerComponent_Template_form_submit_0_listener() {\n        return ctx.submit();\n      })(\"reset\", function FilterMenuContainerComponent_Template_form_reset_0_listener() {\n        return ctx.reset();\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵelementContainerStart(2, 2);\n      ɵngcc0.ɵɵtemplate(3, FilterMenuContainerComponent_ng_container_3_Template, 2, 3, \"ng-container\", 3);\n      ɵngcc0.ɵɵtemplate(4, FilterMenuContainerComponent_ng_container_4_Template, 2, 1, \"ng-container\", 3);\n      ɵngcc0.ɵɵelementContainerEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n      ɵngcc0.ɵɵelementStart(6, \"button\", 5);\n      ɵngcc0.ɵɵtext(7);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(8, \"button\", 6);\n      ɵngcc0.ɵɵtext(9);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.hasTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.actionsClass);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵtextInterpolate(ctx.clearText);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.filterText);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc4.ɵangular_packages_forms_forms_y, ɵngcc4.NgControlStatusGroup, ɵngcc4.NgForm, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgClass, FilterMenuHostDirective, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterMenuContainerComponent.ctorParameters = function () {\n  return [{\n    type: FilterService,\n    decorators: [{\n      type: SkipSelf\n    }]\n  }, {\n    type: FilterService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nFilterMenuContainerComponent.propDecorators = {\n  close: [{\n    type: Output\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  actionsClass: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuContainerComponent, [{\n    type: Component,\n    args: [{\n      providers: [FilterService],\n      selector: 'kendo-grid-filter-menu-container',\n      template: \"\\n        <form (submit)=\\\"submit()\\\" (reset)=\\\"reset()\\\"\\n            class=\\\"k-filter-menu k-group k-reset k-state-border-up\\\">\\n            <div class=\\\"k-filter-menu-container\\\">\\n                <ng-container [ngSwitch]=\\\"hasTemplate\\\">\\n                    <ng-container *ngSwitchCase=\\\"false\\\">\\n                        <ng-container\\n                            kendoFilterMenuHost\\n                            [filterService]=\\\"childService\\\"\\n                            [column]=\\\"column\\\"\\n                            [filter]=\\\"childFilter\\\">\\n                        </ng-container>\\n                    </ng-container>\\n                    <ng-container *ngSwitchCase=\\\"true\\\">\\n                        <ng-template\\n                            *ngIf=\\\"column.filterMenuTemplateRef\\\"\\n                            [ngTemplateOutlet]=\\\"column.filterMenuTemplateRef\\\"\\n                            [ngTemplateOutletContext]=\\\"templateContext\\\"\\n                            >\\n                        </ng-template>\\n                    </ng-container>\\n                </ng-container>\\n                <div [ngClass]=\\\"actionsClass\\\">\\n                    <button type=\\\"reset\\\" class=\\\"k-button\\\">{{clearText}}</button>\\n                    <button type=\\\"submit\\\" class=\\\"k-button k-primary\\\" [disabled]=\\\"disabled\\\">{{filterText}}</button>\\n                </div>\\n            </div>\\n        </form>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: FilterService,\n      decorators: [{\n        type: SkipSelf\n      }]\n    }, {\n      type: FilterService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    close: [{\n      type: Output\n    }],\n    actionsClass: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar FilterMenuInputWrapperComponent = /*#__PURE__*/function (_FilterInputWrapperCo2) {\n  _inherits(FilterMenuInputWrapperComponent, _FilterInputWrapperCo2);\n\n  var _super53 = _createSuper(FilterMenuInputWrapperComponent);\n\n  function FilterMenuInputWrapperComponent() {\n    _classCallCheck(this, FilterMenuInputWrapperComponent);\n\n    return _super53.call(this, null);\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(FilterMenuInputWrapperComponent, [{\n    key: \"operatorChange\",\n    value: function operatorChange(dataItem) {\n      this.currentOperator = dataItem;\n    }\n  }, {\n    key: \"filterChange\",\n    value: function filterChange(filter$$1) {\n      this.applyFilter(filter$$1);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n\n  }, {\n    key: \"updateFilter\",\n    value: function updateFilter(filter$$1) {\n      Object.assign(this.currentFilter, filter$$1);\n      return this.filter;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      this.filterChange(this.updateFilter({\n        field: this.column.field,\n        operator: this.currentOperator,\n        value: value\n      }));\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"currentFilter\",\n    get: function get() {\n      return this._currentFilter;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    ,\n    set: function set(value) {\n      this._currentFilter = value;\n    }\n  }]);\n\n  return FilterMenuInputWrapperComponent;\n}(FilterInputWrapperComponent);\n\nFilterMenuInputWrapperComponent.ɵfac = function FilterMenuInputWrapperComponent_Factory(t) {\n  return new (t || FilterMenuInputWrapperComponent)();\n};\n\nFilterMenuInputWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FilterMenuInputWrapperComponent,\n  selectors: [[\"kendo-grid-filter-menu-input-wrapper\"]],\n  inputs: {\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c124,\n  decls: 2,\n  vars: 3,\n  consts: [[\"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"value\", \"valuePrimitive\", \"valueChange\"]],\n  template: function FilterMenuInputWrapperComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"kendo-dropdownlist\", 0);\n      ɵngcc0.ɵɵlistener(\"valueChange\", function FilterMenuInputWrapperComponent_Template_kendo_dropdownlist_valueChange_0_listener($event) {\n        return ctx.operatorChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"data\", ctx.operators)(\"value\", ctx.currentOperator)(\"valuePrimitive\", true);\n    }\n  },\n  directives: [ɵngcc5.DropDownListComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nFilterMenuInputWrapperComponent.ctorParameters = function () {\n  return [];\n};\n\nFilterMenuInputWrapperComponent.propDecorators = {\n  filterService: [{\n    type: Input\n  }],\n  currentFilter: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuInputWrapperComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-filter-menu-input-wrapper',\n      template: \"\\n        <kendo-dropdownlist\\n            [data]=\\\"operators\\\"\\n            (valueChange)=\\\"operatorChange($event)\\\"\\n            [value]=\\\"currentOperator\\\"\\n            [valuePrimitive]=\\\"true\\\"\\n            textField=\\\"text\\\"\\n            valueField=\\\"value\\\">\\n        </kendo-dropdownlist>\\n        <ng-content></ng-content>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar StringFilterMenuInputComponent = function StringFilterMenuInputComponent() {\n  _classCallCheck(this, StringFilterMenuInputComponent);\n\n  this.operators = [];\n};\n\nStringFilterMenuInputComponent.ɵfac = function StringFilterMenuInputComponent_Factory(t) {\n  return new (t || StringFilterMenuInputComponent)();\n};\n\nStringFilterMenuInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: StringFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-string-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\"\n  },\n  decls: 2,\n  vars: 8,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\"], [\"kendoFilterInput\", \"\", 1, \"k-textbox\", 3, \"filterDelay\", \"ngModel\"]],\n  template: function StringFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      ɵngcc0.ɵɵelement(1, \"input\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"filterDelay\", 0)(\"ngModel\", ctx.currentFilter == null ? null : ctx.currentFilter.value);\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, ɵngcc4.DefaultValueAccessor, FilterInputDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel],\n  encapsulation: 2\n});\nStringFilterMenuInputComponent.propDecorators = {\n  operators: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  currentFilter: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StringFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-menu-input',\n      template: \"\\n        <kendo-grid-filter-menu-input-wrapper\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [currentFilter]=\\\"currentFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n            >\\n            <input class=\\\"k-textbox\\\" kendoFilterInput [filterDelay]=\\\"0\\\" [ngModel]=\\\"currentFilter?.value\\\" />\\n        </kendo-grid-filter-menu-input-wrapper>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a string-filter menu component.\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n */\n\n\nvar StringFilterMenuComponent = /*#__PURE__*/function (_StringFilterComponen2) {\n  _inherits(StringFilterMenuComponent, _StringFilterComponen2);\n\n  var _super54 = _createSuper(StringFilterMenuComponent);\n\n  function StringFilterMenuComponent(localization) {\n    var _this111;\n\n    _classCallCheck(this, StringFilterMenuComponent);\n\n    _this111 = _super54.call(this, null, localization);\n    _this111.logicOperators = logicOperators(_this111.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    _this111.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will displayed.\n     */\n\n    _this111.extra = true;\n    return _this111;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(StringFilterMenuComponent, [{\n    key: \"logicChange\",\n    value: function logicChange(value) {\n      this.filter.logic = value;\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n\n      _get(_getPrototypeOf(StringFilterMenuComponent.prototype), \"localizationChange\", this).call(this);\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"firstFilter\",\n    get: function get() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n  }, {\n    key: \"secondFilter\",\n    get: function get() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n  }]);\n\n  return StringFilterMenuComponent;\n}(StringFilterComponent);\n\nStringFilterMenuComponent.ɵfac = function StringFilterMenuComponent_Factory(t) {\n  return new (t || StringFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nStringFilterMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: StringFilterMenuComponent,\n  selectors: [[\"kendo-grid-string-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function StringFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    filter: \"filter\",\n    extra: \"extra\",\n    column: \"column\",\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 7,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\"], [\"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", 4, \"ngIf\"], [\"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\"]],\n  template: function StringFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"kendo-grid-string-filter-menu-input\", 0);\n      ɵngcc0.ɵɵtemplate(1, StringFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 3, \"kendo-dropdownlist\", 1);\n      ɵngcc0.ɵɵtemplate(2, StringFilterMenuComponent_kendo_grid_string_filter_menu_input_2_Template, 1, 5, \"kendo-grid-string-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: [StringFilterMenuInputComponent, ɵngcc1.NgIf, ɵngcc5.DropDownListComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nStringFilterMenuComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nStringFilterMenuComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  extra: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(StringFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-string-filter-menu',\n      template: \"\\n        <kendo-grid-string-filter-menu-input\\n            [currentFilter]=\\\"firstFilter\\\"\\n            [operators]=\\\"operators\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\">\\n        </kendo-grid-string-filter-menu-input>\\n        <kendo-dropdownlist\\n            *ngIf=\\\"extra\\\"\\n            class=\\\"k-filter-and\\\"\\n            [data]=\\\"logicOperators\\\"\\n            [valuePrimitive]=\\\"true\\\" (valueChange)=\\\"logicChange($event)\\\"\\n            [value]=\\\"filter?.logic\\\"\\n            textField=\\\"text\\\"\\n            valueField=\\\"value\\\">\\n        </kendo-dropdownlist>\\n        <kendo-grid-string-filter-menu-input\\n            *ngIf=\\\"extra\\\"\\n            [operators]=\\\"operators\\\"\\n            [currentFilter]=\\\"secondFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\">\\n        </kendo-grid-string-filter-menu-input>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a numeric-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *          <kendo-grid-numeric-filter-menu\n *              [column]=\"column\"\n *              [filter]=\"filter\"\n *              [filterService]=\"filterService\"\n *              >\n *          </kendo-grid-numeric-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nvar NumericFilterMenuComponent = /*#__PURE__*/function (_NumericFilterCompone2) {\n  _inherits(NumericFilterMenuComponent, _NumericFilterCompone2);\n\n  var _super55 = _createSuper(NumericFilterMenuComponent);\n\n  function NumericFilterMenuComponent(localization) {\n    var _this112;\n\n    _classCallCheck(this, NumericFilterMenuComponent);\n\n    _this112 = _super55.call(this, null, localization);\n    _this112.logicOperators = logicOperators(_this112.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    _this112.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will displayed.\n     */\n\n    _this112.extra = true;\n    return _this112;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(NumericFilterMenuComponent, [{\n    key: \"logicChange\",\n    value: function logicChange(value) {\n      this.filter.logic = value;\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n\n      _get(_getPrototypeOf(NumericFilterMenuComponent.prototype), \"localizationChange\", this).call(this);\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"firstFilter\",\n    get: function get() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n  }, {\n    key: \"secondFilter\",\n    get: function get() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n  }]);\n\n  return NumericFilterMenuComponent;\n}(NumericFilterComponent);\n\nNumericFilterMenuComponent.ɵfac = function NumericFilterMenuComponent_Factory(t) {\n  return new (t || NumericFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nNumericFilterMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NumericFilterMenuComponent,\n  selectors: [[\"kendo-grid-numeric-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function NumericFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    filter: \"filter\",\n    extra: \"extra\",\n    column: \"column\",\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 13,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [\"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\", 4, \"ngIf\"], [\"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"]],\n  template: function NumericFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"kendo-grid-numeric-filter-menu-input\", 0);\n      ɵngcc0.ɵɵtemplate(1, NumericFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 3, \"kendo-dropdownlist\", 1);\n      ɵngcc0.ɵɵtemplate(2, NumericFilterMenuComponent_kendo_grid_numeric_filter_menu_input_2_Template, 1, 11, \"kendo-grid-numeric-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: function directives() {\n    return [NumericFilterMenuInputComponent, ɵngcc1.NgIf, ɵngcc5.DropDownListComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNumericFilterMenuComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nNumericFilterMenuComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  extra: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NumericFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-menu',\n      template: \"\\n        <kendo-grid-numeric-filter-menu-input\\n            [currentFilter]=\\\"firstFilter\\\"\\n            [operators]=\\\"operators\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [format]=\\\"format\\\"\\n            [decimals]=\\\"decimals\\\"\\n            [spinners]=\\\"spinners\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [step]=\\\"step\\\"\\n            >\\n        </kendo-grid-numeric-filter-menu-input>\\n        <kendo-dropdownlist\\n            *ngIf=\\\"extra\\\"\\n            class=\\\"k-filter-and\\\"\\n            [data]=\\\"logicOperators\\\"\\n            [valuePrimitive]=\\\"true\\\"\\n            (valueChange)=\\\"logicChange($event)\\\"\\n            [value]=\\\"filter?.logic\\\"\\n            textField=\\\"text\\\"\\n            valueField=\\\"value\\\">\\n        </kendo-dropdownlist>\\n        <kendo-grid-numeric-filter-menu-input\\n            *ngIf=\\\"extra\\\"\\n            [operators]=\\\"operators\\\"\\n            [currentFilter]=\\\"secondFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [format]=\\\"format\\\"\\n            [decimals]=\\\"decimals\\\"\\n            [spinners]=\\\"spinners\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [step]=\\\"step\\\"\\n            >\\n        </kendo-grid-numeric-filter-menu-input>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar NumericFilterMenuInputComponent = /*#__PURE__*/function () {\n  function NumericFilterMenuInputComponent(localization) {\n    _classCallCheck(this, NumericFilterMenuInputComponent);\n\n    this.localization = localization;\n    this.operators = [];\n    /**\n     * Specifies the value which is used to increment or decrement the component value.\n     * @type {numeric}\n     */\n\n    this.step = 1;\n    /**\n     * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n     * @type {boolean}\n     */\n\n    this.spinners = true;\n  }\n\n  _createClass(NumericFilterMenuInputComponent, [{\n    key: \"messageFor\",\n    value: function messageFor(key) {\n      return this.localization.get(key);\n    }\n  }]);\n\n  return NumericFilterMenuInputComponent;\n}();\n\nNumericFilterMenuInputComponent.ɵfac = function NumericFilterMenuInputComponent_Factory(t) {\n  return new (t || NumericFilterMenuInputComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nNumericFilterMenuInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: NumericFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-numeric-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    step: \"step\",\n    spinners: \"spinners\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\",\n    min: \"min\",\n    max: \"max\",\n    decimals: \"decimals\",\n    format: \"format\"\n  },\n  decls: 3,\n  vars: 17,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\"], [\"kendoFilterInput\", \"\", 3, \"filterDelay\", \"autoCorrect\", \"value\", \"format\", \"decimals\", \"spinners\", \"min\", \"max\", \"step\"], [3, \"increment\", \"decrement\"]],\n  template: function NumericFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-numerictextbox\", 1);\n      ɵngcc0.ɵɵelement(2, \"kendo-numerictextbox-messages\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"filterDelay\", 0)(\"autoCorrect\", true)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"format\", ctx.format)(\"decimals\", ctx.decimals)(\"spinners\", ctx.spinners)(\"min\", ctx.min)(\"max\", ctx.max)(\"step\", ctx.step);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"increment\", ctx.messageFor(\"filterNumericIncrement\"))(\"decrement\", ctx.messageFor(\"filterNumericDecrement\"));\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, ɵngcc3.NumericTextBoxComponent, FilterInputDirective, ɵngcc3.NumericTextBoxCustomMessagesComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nNumericFilterMenuInputComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nNumericFilterMenuInputComponent.propDecorators = {\n  operators: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  currentFilter: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }],\n  step: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  spinners: [{\n    type: Input\n  }],\n  decimals: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NumericFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-numeric-filter-menu-input',\n      template: \"\\n        <kendo-grid-filter-menu-input-wrapper\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [currentFilter]=\\\"currentFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n        >\\n            <kendo-numerictextbox\\n                kendoFilterInput\\n                [filterDelay]=\\\"0\\\"\\n                [autoCorrect]=\\\"true\\\"\\n                [value]=\\\"currentFilter?.value\\\"\\n                [format]=\\\"format\\\"\\n                [decimals]=\\\"decimals\\\"\\n                [spinners]=\\\"spinners\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [step]=\\\"step\\\"\\n            >\\n                <kendo-numerictextbox-messages\\n                    [increment]=\\\"messageFor('filterNumericIncrement')\\\"\\n                    [decrement]=\\\"messageFor('filterNumericDecrement')\\\"\\n                >\\n                </kendo-numerictextbox-messages>\\n            </kendo-numerictextbox>\\n        </kendo-grid-filter-menu-input-wrapper>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    spinners: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    decimals: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a date-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-date-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-date-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nvar DateFilterMenuComponent = /*#__PURE__*/function (_DateFilterComponent2) {\n  _inherits(DateFilterMenuComponent, _DateFilterComponent2);\n\n  var _super56 = _createSuper(DateFilterMenuComponent);\n\n  function DateFilterMenuComponent(localization) {\n    var _this113;\n\n    _classCallCheck(this, DateFilterMenuComponent);\n\n    _this113 = _super56.call(this, null, localization);\n    _this113.logicOperators = logicOperators(_this113.localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    _this113.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    /**\n     * Determines if the inputs of second criteria will be displayed.\n     */\n\n    _this113.extra = true;\n    return _this113;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(DateFilterMenuComponent, [{\n    key: \"logicChange\",\n    value: function logicChange(value) {\n      this.filter.logic = value;\n    }\n  }, {\n    key: \"localizationChange\",\n    value: function localizationChange() {\n      this.logicOperators = logicOperators(this.localization);\n\n      _get(_getPrototypeOf(DateFilterMenuComponent.prototype), \"localizationChange\", this).call(this);\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"firstFilter\",\n    get: function get() {\n      return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n  }, {\n    key: \"secondFilter\",\n    get: function get() {\n      return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n  }]);\n\n  return DateFilterMenuComponent;\n}(DateFilterComponent);\n\nDateFilterMenuComponent.ɵfac = function DateFilterMenuComponent_Factory(t) {\n  return new (t || DateFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateFilterMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateFilterMenuComponent,\n  selectors: [[\"kendo-grid-date-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function DateFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    filter: \"filter\",\n    extra: \"extra\",\n    column: \"column\",\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 16,\n  consts: [[3, \"currentFilter\", \"operators\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\"], [\"class\", \"k-filter-and\", \"textField\", \"text\", \"valueField\", \"value\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\", 4, \"ngIf\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\", 4, \"ngIf\"], [\"textField\", \"text\", \"valueField\", \"value\", 1, \"k-filter-and\", 3, \"data\", \"valuePrimitive\", \"value\", \"valueChange\"], [3, \"operators\", \"currentFilter\", \"filterService\", \"column\", \"filter\", \"activeView\", \"bottomView\", \"topView\", \"format\", \"formatPlaceholder\", \"placeholder\", \"min\", \"max\", \"weekNumber\"]],\n  template: function DateFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"kendo-grid-date-filter-menu-input\", 0);\n      ɵngcc0.ɵɵtemplate(1, DateFilterMenuComponent_kendo_dropdownlist_1_Template, 1, 3, \"kendo-dropdownlist\", 1);\n      ɵngcc0.ɵɵtemplate(2, DateFilterMenuComponent_kendo_grid_date_filter_menu_input_2_Template, 1, 14, \"kendo-grid-date-filter-menu-input\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"currentFilter\", ctx.firstFilter)(\"operators\", ctx.operators)(\"filterService\", ctx.filterService)(\"column\", ctx.column)(\"filter\", ctx.filter)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"format\", ctx.format)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"placeholder\", ctx.placeholder)(\"min\", ctx.min)(\"max\", ctx.max)(\"weekNumber\", ctx.weekNumber);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.extra);\n    }\n  },\n  directives: function directives() {\n    return [DateFilterMenuInputComponent, ɵngcc1.NgIf, ɵngcc5.DropDownListComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateFilterMenuComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nDateFilterMenuComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  extra: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-menu',\n      template: \"\\n        <kendo-grid-date-filter-menu-input\\n            [currentFilter]=\\\"firstFilter\\\"\\n            [operators]=\\\"operators\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [activeView]=\\\"activeView\\\"\\n            [bottomView]=\\\"bottomView\\\"\\n            [topView]=\\\"topView\\\"\\n            [format]=\\\"format\\\"\\n            [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [weekNumber]=\\\"weekNumber\\\"\\n            >\\n        </kendo-grid-date-filter-menu-input>\\n        <kendo-dropdownlist\\n            *ngIf=\\\"extra\\\"\\n            class=\\\"k-filter-and\\\"\\n            [data]=\\\"logicOperators\\\"\\n            [valuePrimitive]=\\\"true\\\"\\n            (valueChange)=\\\"logicChange($event)\\\"\\n            [value]=\\\"filter?.logic\\\"\\n            textField=\\\"text\\\"\\n            valueField=\\\"value\\\">\\n        </kendo-dropdownlist>\\n        <kendo-grid-date-filter-menu-input\\n            *ngIf=\\\"extra\\\"\\n            [operators]=\\\"operators\\\"\\n            [currentFilter]=\\\"secondFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [activeView]=\\\"activeView\\\"\\n            [bottomView]=\\\"bottomView\\\"\\n            [topView]=\\\"topView\\\"\\n            [format]=\\\"format\\\"\\n            [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n            [placeholder]=\\\"placeholder\\\"\\n            [min]=\\\"min\\\"\\n            [max]=\\\"max\\\"\\n            [weekNumber]=\\\"weekNumber\\\"\\n            >\\n        </kendo-grid-date-filter-menu-input>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    filter: [{\n      type: Input\n    }],\n    extra: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    column: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents a Boolean-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-boolean-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-boolean-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\n\n\nvar BooleanFilterMenuComponent = /*#__PURE__*/function (_BooleanFilterCompone2) {\n  _inherits(BooleanFilterMenuComponent, _BooleanFilterCompone2);\n\n  var _super57 = _createSuper(BooleanFilterMenuComponent);\n\n  function BooleanFilterMenuComponent(localization) {\n    var _this114;\n\n    _classCallCheck(this, BooleanFilterMenuComponent);\n\n    _this114 = _super57.call(this, null, localization);\n    /**\n     * The current menu filter.\n     * @type {CompositeFilterDescriptor}\n     */\n\n    _this114.filter = {\n      filters: [],\n      logic: \"and\"\n    };\n    _this114.idPrefix = guid();\n    return _this114;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(BooleanFilterMenuComponent, [{\n    key: \"radioId\",\n\n    /**\n     * @hidden\n     */\n    value: function radioId(value) {\n      return \"\".concat(this.idPrefix, \"_\").concat(value);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(value) {\n      this.applyFilter(this.updateFilter({\n        field: this.column.field,\n        operator: \"eq\",\n        value: value\n      }));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(radioValue) {\n      return this.filtersByField(this.column.field).some(function (_ref78) {\n        var value = _ref78.value;\n        return value === radioValue;\n      });\n    }\n  }, {\n    key: \"hostClasses\",\n    get: function get() {\n      return false;\n    }\n  }]);\n\n  return BooleanFilterMenuComponent;\n}(BooleanFilterComponent);\n\nBooleanFilterMenuComponent.ɵfac = function BooleanFilterMenuComponent_Factory(t) {\n  return new (t || BooleanFilterMenuComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nBooleanFilterMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: BooleanFilterMenuComponent,\n  selectors: [[\"kendo-grid-boolean-filter-menu\"]],\n  hostVars: 2,\n  hostBindings: function BooleanFilterMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-filtercell\", ctx.hostClasses);\n    }\n  },\n  inputs: {\n    filter: \"filter\",\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"k-radio-list\", \"k-reset\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", 1, \"k-radio\", 3, \"name\", \"checked\", \"change\"], [1, \"k-radio-label\"]],\n  template: function BooleanFilterMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n      ɵngcc0.ɵɵtemplate(1, BooleanFilterMenuComponent_li_1_Template, 4, 5, \"li\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  directives: [ɵngcc1.NgForOf],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nBooleanFilterMenuComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nBooleanFilterMenuComponent.propDecorators = {\n  hostClasses: [{\n    type: HostBinding,\n    args: ['class.k-filtercell']\n  }],\n  filter: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BooleanFilterMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-boolean-filter-menu',\n      template: \"\\n        <ul class=\\\"k-radio-list k-reset\\\">\\n            <li *ngFor=\\\"let item of items\\\">\\n                <input type=\\\"radio\\\"\\n                    [name]=\\\"idPrefix\\\"\\n                    class=\\\"k-radio\\\"\\n                    [checked]=\\\"isSelected(item.value)\\\"\\n                    [attr.id]=\\\"radioId(item.value)\\\"\\n                    (change)=\\\"onChange(item.value)\\\"\\n                />\\n                <label class=\\\"k-radio-label\\\" [attr.for]=\\\"radioId(item.value)\\\">{{item.text}}</label>\\n            </li>\\n        </ul>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    filter: [{\n      type: Input\n    }],\n    hostClasses: [{\n      type: HostBinding,\n      args: ['class.k-filtercell']\n    }],\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n *\n * > List the following components as `entryComponents` in the GridModule.\n */\n\n\nvar filterMenuComponentFactory = function filterMenuComponentFactory(type) {\n  return {\n    \"boolean\": BooleanFilterMenuComponent,\n    \"date\": DateFilterMenuComponent,\n    \"numeric\": NumericFilterMenuComponent,\n    \"text\": StringFilterMenuComponent\n  }[type];\n};\n/**\n * @hidden\n */\n\n\nvar FilterMenuHostDirective = /*#__PURE__*/function (_FilterHostDirective2) {\n  _inherits(FilterMenuHostDirective, _FilterHostDirective2);\n\n  var _super58 = _createSuper(FilterMenuHostDirective);\n\n  function FilterMenuHostDirective(host, resolver) {\n    _classCallCheck(this, FilterMenuHostDirective);\n\n    return _super58.call(this, host, resolver);\n  }\n\n  _createClass(FilterMenuHostDirective, [{\n    key: \"componentType\",\n    value: function componentType() {\n      if (isPresent(this.column) && !isNullOrEmptyString(this.column.filter)) {\n        return filterMenuComponentFactory(this.column.filter);\n      }\n\n      return StringFilterMenuComponent;\n    }\n  }, {\n    key: \"initComponent\",\n    value: function initComponent(ctx) {\n      _get(_getPrototypeOf(FilterMenuHostDirective.prototype), \"initComponent\", this).call(this, ctx);\n\n      this.component.instance.filterService = this.filterService;\n    }\n  }]);\n\n  return FilterMenuHostDirective;\n}(FilterHostDirective);\n\nFilterMenuHostDirective.ɵfac = function FilterMenuHostDirective_Factory(t) {\n  return new (t || FilterMenuHostDirective)(ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver));\n};\n\nFilterMenuHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: FilterMenuHostDirective,\n  selectors: [[\"\", \"kendoFilterMenuHost\", \"\"]],\n  inputs: {\n    filterService: \"filterService\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nFilterMenuHostDirective.ctorParameters = function () {\n  return [{\n    type: ViewContainerRef\n  }, {\n    type: ComponentFactoryResolver\n  }];\n};\n\nFilterMenuHostDirective.propDecorators = {\n  filterService: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuHostDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoFilterMenuHost]'\n    }]\n  }], function () {\n    return [{\n      type: ViewContainerRef\n    }, {\n      type: ComponentFactoryResolver\n    }];\n  }, {\n    filterService: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar DateFilterMenuInputComponent = /*#__PURE__*/function () {\n  function DateFilterMenuInputComponent(popupService, localizationService) {\n    _classCallCheck(this, DateFilterMenuInputComponent);\n\n    this.popupService = popupService;\n    this.localizationService = localizationService;\n    this.operators = [];\n  }\n\n  _createClass(DateFilterMenuInputComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"open\",\n    value: function open(picker) {\n      this.subscription = this.popupService.onClose.pipe(filter(function () {\n        return picker.isActive;\n      })).subscribe(function (e) {\n        return e.preventDefault();\n      });\n    }\n  }, {\n    key: \"messageFor\",\n    value: function messageFor(key) {\n      return this.localizationService.get(key);\n    }\n  }]);\n\n  return DateFilterMenuInputComponent;\n}();\n\nDateFilterMenuInputComponent.ɵfac = function DateFilterMenuInputComponent_Factory(t) {\n  return new (t || DateFilterMenuInputComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nDateFilterMenuInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DateFilterMenuInputComponent,\n  selectors: [[\"kendo-grid-date-filter-menu-input\"]],\n  inputs: {\n    operators: \"operators\",\n    column: \"column\",\n    filter: \"filter\",\n    operator: \"operator\",\n    currentFilter: \"currentFilter\",\n    filterService: \"filterService\",\n    format: \"format\",\n    formatPlaceholder: \"formatPlaceholder\",\n    placeholder: \"placeholder\",\n    min: \"min\",\n    max: \"max\",\n    activeView: \"activeView\",\n    bottomView: \"bottomView\",\n    topView: \"topView\",\n    weekNumber: \"weekNumber\"\n  },\n  decls: 4,\n  vars: 19,\n  consts: [[3, \"column\", \"filter\", \"operators\", \"defaultOperator\", \"currentFilter\", \"filterService\"], [\"kendoFilterInput\", \"\", 3, \"filterDelay\", \"value\", \"placeholder\", \"formatPlaceholder\", \"format\", \"min\", \"max\", \"activeView\", \"bottomView\", \"topView\", \"weekNumber\", \"open\"], [\"picker\", \"\"], [3, \"toggle\", \"today\"]],\n  template: function DateFilterMenuInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r1 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-filter-menu-input-wrapper\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"kendo-datepicker\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"open\", function DateFilterMenuInputComponent_Template_kendo_datepicker_open_1_listener() {\n        ɵngcc0.ɵɵrestoreView(_r1);\n\n        var _r0 = ɵngcc0.ɵɵreference(2);\n\n        return ctx.open(_r0);\n      });\n      ɵngcc0.ɵɵelement(3, \"kendo-datepicker-messages\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"column\", ctx.column)(\"filter\", ctx.filter)(\"operators\", ctx.operators)(\"defaultOperator\", ctx.operator)(\"currentFilter\", ctx.currentFilter)(\"filterService\", ctx.filterService);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"filterDelay\", 0)(\"value\", ctx.currentFilter == null ? null : ctx.currentFilter.value)(\"placeholder\", ctx.placeholder)(\"formatPlaceholder\", ctx.formatPlaceholder)(\"format\", ctx.format)(\"min\", ctx.min)(\"max\", ctx.max)(\"activeView\", ctx.activeView)(\"bottomView\", ctx.bottomView)(\"topView\", ctx.topView)(\"weekNumber\", ctx.weekNumber);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"toggle\", ctx.messageFor(\"filterDateToggle\"))(\"today\", ctx.messageFor(\"filterDateToday\"));\n    }\n  },\n  directives: [FilterMenuInputWrapperComponent, ɵngcc6.DatePickerComponent, FilterInputDirective, ɵngcc6.DatePickerCustomMessagesComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nDateFilterMenuInputComponent.ctorParameters = function () {\n  return [{\n    type: SinglePopupService\n  }, {\n    type: LocalizationService\n  }];\n};\n\nDateFilterMenuInputComponent.propDecorators = {\n  operators: [{\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  operator: [{\n    type: Input\n  }],\n  currentFilter: [{\n    type: Input\n  }],\n  filterService: [{\n    type: Input\n  }],\n  format: [{\n    type: Input\n  }],\n  formatPlaceholder: [{\n    type: Input\n  }],\n  placeholder: [{\n    type: Input\n  }],\n  min: [{\n    type: Input\n  }],\n  max: [{\n    type: Input\n  }],\n  activeView: [{\n    type: Input\n  }],\n  bottomView: [{\n    type: Input\n  }],\n  topView: [{\n    type: Input\n  }],\n  weekNumber: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DateFilterMenuInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-date-filter-menu-input',\n      template: \"\\n        <kendo-grid-filter-menu-input-wrapper\\n            [column]=\\\"column\\\"\\n            [filter]=\\\"filter\\\"\\n            [operators]=\\\"operators\\\"\\n            [defaultOperator]=\\\"operator\\\"\\n            [currentFilter]=\\\"currentFilter\\\"\\n            [filterService]=\\\"filterService\\\"\\n        >\\n            <kendo-datepicker\\n                #picker\\n                kendoFilterInput\\n                [filterDelay]=\\\"0\\\"\\n                (open)=\\\"open(picker)\\\"\\n                [value]=\\\"currentFilter?.value\\\"\\n                [placeholder]=\\\"placeholder\\\"\\n                [formatPlaceholder]=\\\"formatPlaceholder\\\"\\n                [format]=\\\"format\\\"\\n                [min]=\\\"min\\\"\\n                [max]=\\\"max\\\"\\n                [activeView]=\\\"activeView\\\"\\n                [bottomView]=\\\"bottomView\\\"\\n                [topView]=\\\"topView\\\"\\n                [weekNumber]=\\\"weekNumber\\\"\\n            >\\n                <kendo-datepicker-messages\\n                    [toggle]=\\\"messageFor('filterDateToggle')\\\"\\n                    [today]=\\\"messageFor('filterDateToday')\\\"\\n                >\\n                </kendo-datepicker-messages>\\n            </kendo-datepicker>\\n        </kendo-grid-filter-menu-input-wrapper>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: SinglePopupService\n    }, {\n      type: LocalizationService\n    }];\n  }, {\n    operators: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    operator: [{\n      type: Input\n    }],\n    currentFilter: [{\n      type: Input\n    }],\n    filterService: [{\n      type: Input\n    }],\n    format: [{\n      type: Input\n    }],\n    formatPlaceholder: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    activeView: [{\n      type: Input\n    }],\n    bottomView: [{\n      type: Input\n    }],\n    topView: [{\n      type: Input\n    }],\n    weekNumber: [{\n      type: Input\n    }]\n  });\n})();\n\nvar INTERNAL_COMPONENTS$2 = [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent];\nvar ENTRY_COMPONENTS$1 = [StringFilterMenuComponent, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent];\n/**\n * @hidden\n */\n\nvar FilterMenuModule = /*#__PURE__*/function () {\n  function FilterMenuModule() {\n    _classCallCheck(this, FilterMenuModule);\n  }\n\n  _createClass(FilterMenuModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, SharedFilterModule.exports()];\n    }\n  }]);\n\n  return FilterMenuModule;\n}();\n\nFilterMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FilterMenuModule\n});\nFilterMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FilterMenuModule_Factory(t) {\n    return new (t || FilterMenuModule)();\n  },\n  imports: [[SharedFilterModule], SharedFilterModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FilterMenuModule, {\n    declarations: [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent],\n    imports: [SharedFilterModule],\n    exports: [FilterMenuComponent, FilterMenuContainerComponent, FilterMenuInputWrapperComponent, StringFilterMenuInputComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, NumericFilterMenuInputComponent, DateFilterMenuInputComponent, DateFilterMenuComponent, FilterMenuHostDirective, BooleanFilterMenuComponent, SharedFilterModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FilterMenuModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [INTERNAL_COMPONENTS$2],\n      entryComponents: ENTRY_COMPONENTS$1,\n      exports: [INTERNAL_COMPONENTS$2, SharedFilterModule],\n      imports: [SharedFilterModule]\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ColumnListComponent = /*#__PURE__*/function () {\n  function ColumnListComponent(element, ngZone, renderer) {\n    _classCallCheck(this, ColumnListComponent);\n\n    this.element = element;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.reset = new EventEmitter();\n    this.apply = new EventEmitter();\n    this.columnChange = new EventEmitter();\n    this.autoSync = true;\n    this.allowHideAll = false;\n    this.actionsClass = 'k-action-buttons';\n    this.unlockedCount = 0;\n  }\n\n  _createClass(ColumnListComponent, [{\n    key: \"isDisabled\",\n    value: function isDisabled(column) {\n      return !(this.allowHideAll || this.hasFiltered || column.hidden || this.columns.find(function (current) {\n        return current !== column && !current.hidden;\n      })) || this.hasVisibleLocked && !this.hasUnlockedFiltered && this.unlockedCount === 1 && !column.locked && !column.hidden;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this115 = this;\n\n      if (!this.element) {\n        return;\n      }\n\n      this.ngZone.runOutsideAngular(function () {\n        _this115.domSubscriptions = _this115.renderer.listen(_this115.element.nativeElement, 'click', function (e) {\n          if (hasClasses(e.target, 'k-checkbox')) {\n            if (_this115.autoSync) {\n              var index = parseInt(e.target.getAttribute('data-index'), 10);\n              var column = _this115.columns[index];\n              var hidden = !e.target.checked;\n\n              if (Boolean(column.hidden) !== hidden) {\n                _this115.ngZone.run(function () {\n                  column.hidden = hidden;\n\n                  _this115.columnChange.emit([column]);\n                });\n              }\n            } else {\n              _this115.updateDisabled();\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.domSubscriptions) {\n        this.domSubscriptions();\n      }\n    }\n  }, {\n    key: \"cancelChanges\",\n    value: function cancelChanges() {\n      var _this116 = this;\n\n      this.forEachCheckBox(function (element, index) {\n        element.checked = !_this116.columns[index].hidden;\n      });\n      this.updateDisabled();\n      this.reset.emit();\n    }\n  }, {\n    key: \"applyChanges\",\n    value: function applyChanges() {\n      var _this117 = this;\n\n      var changed = [];\n      this.forEachCheckBox(function (element, index) {\n        var column = _this117.columns[index];\n        var hidden = !element.checked;\n\n        if (Boolean(column.hidden) !== hidden) {\n          column.hidden = hidden;\n          changed.push(column);\n        }\n      });\n      this.updateDisabled();\n      this.apply.emit(changed);\n    }\n  }, {\n    key: \"forEachCheckBox\",\n    value: function forEachCheckBox(callback) {\n      var checkboxes = this.element.nativeElement.getElementsByClassName('k-checkbox');\n      var length = checkboxes.length;\n\n      for (var idx = 0; idx < length; idx++) {\n        callback(checkboxes[idx], idx);\n      }\n    }\n  }, {\n    key: \"updateDisabled\",\n    value: function updateDisabled() {\n      if (this.allowHideAll && !this.hasLocked) {\n        return;\n      }\n\n      var checkedItems = [];\n      this.forEachCheckBox(function (checkbox, index) {\n        if (checkbox.checked) {\n          checkedItems.push({\n            checkbox: checkbox,\n            index: index\n          });\n        }\n\n        checkbox.disabled = false;\n      });\n\n      if (!this.allowHideAll && checkedItems.length === 1 && !this.hasFiltered) {\n        checkedItems[0].checkbox.disabled = true;\n      } else if (this.hasLocked && !this.hasUnlockedFiltered) {\n        var columns = this.columns;\n        var checkedUnlocked = checkedItems.filter(function (item) {\n          return !columns[item.index].locked;\n        });\n\n        if (checkedUnlocked.length === 1) {\n          checkedUnlocked[0].checkbox.disabled = true;\n        }\n      }\n    }\n  }, {\n    key: \"updateColumnState\",\n    value: function updateColumnState() {\n      this.hasLocked = this.allColumns.filter(function (column) {\n        return column.locked && (!column.hidden || column.includeInChooser !== false);\n      }).length > 0;\n      this.hasVisibleLocked = this.allColumns.filter(function (column) {\n        return column.locked && !column.hidden;\n      }).length > 0;\n      this.unlockedCount = this.columns.filter(function (column) {\n        return !column.locked && !column.hidden;\n      }).length;\n      var filteredColumns = this.allColumns.filter(function (column) {\n        return column.includeInChooser === false && !column.hidden;\n      });\n\n      if (filteredColumns.length) {\n        this.hasFiltered = filteredColumns.length > 0;\n        this.hasUnlockedFiltered = filteredColumns.filter(function (column) {\n          return !column.locked;\n        }).length > 0;\n      } else {\n        this.hasFiltered = false;\n        this.hasUnlockedFiltered = false;\n      }\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"columns\",\n    set: function set(value) {\n      this._columns = value.filter(function (column) {\n        return column.includeInChooser !== false;\n      });\n      this.allColumns = value;\n      this.updateColumnState();\n    },\n    get: function get() {\n      return this._columns;\n    }\n  }]);\n\n  return ColumnListComponent;\n}();\n\nColumnListComponent.ɵfac = function ColumnListComponent_Factory(t) {\n  return new (t || ColumnListComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2));\n};\n\nColumnListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnListComponent,\n  selectors: [[\"kendo-grid-columnlist\"]],\n  hostVars: 2,\n  hostBindings: function ColumnListComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-column-list-wrapper\", ctx.className);\n    }\n  },\n  inputs: {\n    autoSync: \"autoSync\",\n    allowHideAll: \"allowHideAll\",\n    actionsClass: \"actionsClass\",\n    columns: \"columns\",\n    applyText: \"applyText\",\n    resetText: \"resetText\"\n  },\n  outputs: {\n    reset: \"reset\",\n    apply: \"apply\",\n    columnChange: \"columnChange\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"k-column-list\"], [\"class\", \"k-column-list-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", 4, \"ngIf\"], [1, \"k-column-list-item\"], [\"type\", \"checkbox\", 1, \"k-checkbox\", 3, \"checked\", \"disabled\"], [1, \"k-checkbox-label\"], [3, \"ngClass\"], [\"type\", \"button\", 1, \"k-button\", 3, \"click\"], [\"type\", \"button\", 1, \"k-button\", \"k-primary\", 3, \"click\"]],\n  template: function ColumnListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵtemplate(1, ColumnListComponent_label_1_Template, 4, 4, \"label\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(2, ColumnListComponent_div_2_Template, 5, 3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.columns);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.autoSync);\n    }\n  },\n  directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgClass],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnListComponent.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }];\n};\n\nColumnListComponent.propDecorators = {\n  className: [{\n    type: HostBinding,\n    args: [\"class.k-column-list-wrapper\"]\n  }],\n  reset: [{\n    type: Output\n  }],\n  apply: [{\n    type: Output\n  }],\n  columnChange: [{\n    type: Output\n  }],\n  columns: [{\n    type: Input\n  }],\n  autoSync: [{\n    type: Input\n  }],\n  allowHideAll: [{\n    type: Input\n  }],\n  applyText: [{\n    type: Input\n  }],\n  resetText: [{\n    type: Input\n  }],\n  actionsClass: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnListComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnlist',\n      template: \"\\n        <div class=\\\"k-column-list\\\">\\n            <label *ngFor=\\\"let column of columns; let index = index;\\\" class='k-column-list-item'>\\n                <input class=\\\"k-checkbox\\\" type=\\\"checkbox\\\" [attr.data-index]=\\\"index\\\" [checked]=\\\"!column.hidden\\\" [disabled]=\\\"isDisabled(column)\\\" /><span class=\\\"k-checkbox-label\\\">{{ column.displayTitle }}</span>\\n            </label>\\n        </div>\\n        <div [ngClass]=\\\"actionsClass\\\" *ngIf=\\\"!autoSync\\\">\\n            <button type=\\\"button\\\" class=\\\"k-button\\\" (click)=\\\"cancelChanges()\\\">{{ resetText }}</button>\\n            <button type=\\\"button\\\" class=\\\"k-button k-primary\\\" (click)=\\\"applyChanges()\\\">{{ applyText }}</button>\\n        </div>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: ElementRef\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }];\n  }, {\n    reset: [{\n      type: Output\n    }],\n    apply: [{\n      type: Output\n    }],\n    columnChange: [{\n      type: Output\n    }],\n    autoSync: [{\n      type: Input\n    }],\n    allowHideAll: [{\n      type: Input\n    }],\n    actionsClass: [{\n      type: Input\n    }],\n    className: [{\n      type: HostBinding,\n      args: [\"class.k-column-list-wrapper\"]\n    }],\n    columns: [{\n      type: Input\n    }],\n    applyText: [{\n      type: Input\n    }],\n    resetText: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n * add the component inside a [`ToolbarTemplate`]({% slug api_grid_toolbartemplatedirective %}) directive.\n *\n * @example\n * {% meta height:300 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\">\n *          <ng-template kendoGridToolbarTemplate>\n *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\n\n\nvar ColumnChooserComponent = /*#__PURE__*/function () {\n  function ColumnChooserComponent(localization, columnInfoService, popupService, ngZone, renderer, changeDetector) {\n    _classCallCheck(this, ColumnChooserComponent);\n\n    this.localization = localization;\n    this.columnInfoService = columnInfoService;\n    this.popupService = popupService;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.changeDetector = changeDetector;\n    /**\n     * Specifies if the changes in the visibility of the column will be immediately applied.\n     */\n\n    this.autoSync = false;\n    /**\n     * Specifies if all columns can be hidden.\n     */\n\n    this.allowHideAll = true;\n  }\n\n  _createClass(ColumnChooserComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(anchor, template) {\n      var _this118 = this;\n\n      if (!this.popupRef) {\n        var direction = this.localization.rtl ? 'right' : 'left';\n        this.popupRef = this.popupService.open({\n          anchor: anchor,\n          content: template,\n          positionMode: 'absolute',\n          anchorAlign: {\n            vertical: 'bottom',\n            horizontal: direction\n          },\n          popupAlign: {\n            vertical: 'top',\n            horizontal: direction\n          }\n        });\n        this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n        this.ngZone.runOutsideAngular(function () {\n          return _this118.closeClick = _this118.renderer.listen(\"document\", \"click\", function (_ref79) {\n            var target = _ref79.target;\n\n            if (!closest(target, function (node) {\n              return node === _this118.popupRef.popupElement || node === anchor;\n            })) {\n              _this118.close();\n            }\n          });\n        });\n      } else {\n        this.close();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onApply\",\n    value: function onApply(changed) {\n      this.close();\n\n      if (changed.length) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(changed) {\n      this.changeDetector.markForCheck();\n      this.columnInfoService.changeVisibility(changed);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (this.popupRef) {\n        this.popupRef.close();\n        this.popupRef = null;\n      }\n\n      this.detachClose();\n    }\n  }, {\n    key: \"detachClose\",\n    value: function detachClose() {\n      if (this.closeClick) {\n        this.closeClick();\n        this.closeClick = null;\n      }\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return this.columnInfoService.leafNamedColumns;\n    }\n  }]);\n\n  return ColumnChooserComponent;\n}();\n\nColumnChooserComponent.ɵfac = function ColumnChooserComponent_Factory(t) {\n  return new (t || ColumnChooserComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(PopupService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nColumnChooserComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnChooserComponent,\n  selectors: [[\"kendo-grid-column-chooser\"]],\n  inputs: {\n    autoSync: \"autoSync\",\n    allowHideAll: \"allowHideAll\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[\"type\", \"button\", 1, \"k-button\", \"k-bare\", \"k-button-icon\", 3, \"click\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-columns\"], [\"template\", \"\"], [1, \"k-column-chooser-title\"], [3, \"columns\", \"applyText\", \"resetText\", \"autoSync\", \"allowHideAll\", \"apply\", \"columnChange\"]],\n  template: function ColumnChooserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function ColumnChooserComponent_Template_button_click_0_listener() {\n        ɵngcc0.ɵɵrestoreView(_r6);\n\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        var _r1 = ɵngcc0.ɵɵreference(4);\n\n        return ctx.toggle(_r0, _r1);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, ColumnChooserComponent_ng_template_3_Template, 3, 6, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"columns\"));\n    }\n  },\n  directives: [ColumnListComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnChooserComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: PopupService\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nColumnChooserComponent.propDecorators = {\n  autoSync: [{\n    type: Input\n  }],\n  allowHideAll: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnChooserComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-column-chooser',\n      template: \"\\n        <button #anchor\\n            type=\\\"button\\\"\\n            (click)=\\\"toggle(anchor, template)\\\"\\n            class=\\\"k-button k-bare k-button-icon\\\"\\n            [attr.title]=\\\"localization.get('columns')\\\">\\n            <span class=\\\"k-icon k-i-columns\\\"></span>\\n        </button>\\n        <ng-template #template>\\n            <span class='k-column-chooser-title'>{{ localization.get('columns') }}</span>\\n            <kendo-grid-columnlist\\n                [columns]=\\\"columns\\\"\\n                [applyText]=\\\"localization.get('columnsApply')\\\"\\n                [resetText]=\\\"localization.get('columnsReset')\\\"\\n                [autoSync]=\\\"autoSync\\\"\\n                [allowHideAll]=\\\"allowHideAll\\\"\\n                (apply)=\\\"onApply($event)\\\"\\n                (columnChange)=\\\"onChange($event)\\\">\\n            </kendo-grid-columnlist>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: PopupService\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    autoSync: [{\n      type: Input\n    }],\n    allowHideAll: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the service that is passed to the\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <span class=\"k-icon k-i-close\" (click)=\"service.close()\"\n *                  style=\"position: absolute; right: 5px; top: 5px;cursor: pointer;\"></span>\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuService = /*#__PURE__*/function () {\n  function ColumnMenuService() {\n    _classCallCheck(this, ColumnMenuService);\n\n    /**\n     * @hidden\n     */\n    this.closeMenu = new EventEmitter();\n  }\n  /**\n   * Closes the column menu.\n   */\n\n\n  _createClass(ColumnMenuService, [{\n    key: \"close\",\n    value: function close() {\n      this.closeMenu.emit();\n    }\n  }]);\n\n  return ColumnMenuService;\n}();\n\nColumnMenuService.ɵfac = function ColumnMenuService_Factory(t) {\n  return new (t || ColumnMenuService)();\n};\n\nColumnMenuService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ColumnMenuService,\n  factory: ColumnMenuService.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ColumnMenuItemBase = /*#__PURE__*/function () {\n  function ColumnMenuItemBase() {\n    _classCallCheck(this, ColumnMenuItemBase);\n\n    this.hostClass = true;\n  }\n\n  _createClass(ColumnMenuItemBase, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      if (isDevMode() && !this.service) {\n        throw new Error('The service input of the predefined column menu components is mandatory.');\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.service.close();\n    }\n  }]);\n\n  return ColumnMenuItemBase;\n}();\n\nColumnMenuItemBase.ɵfac = function ColumnMenuItemBase_Factory(t) {\n  return new (t || ColumnMenuItemBase)();\n};\n\nColumnMenuItemBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ColumnMenuItemBase,\n  hostVars: 2,\n  hostBindings: function ColumnMenuItemBase_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-columnmenu-item-wrapper\", ctx.hostClass);\n    }\n  },\n  inputs: {\n    service: \"service\"\n  }\n});\nColumnMenuItemBase.propDecorators = {\n  service: [{\n    type: Input\n  }],\n  hostClass: [{\n    type: HostBinding,\n    args: ['class.k-columnmenu-item-wrapper']\n  }]\n};\n/* tslint:disable:max-line-length */\n\n/**\n * Represents the component for selecting columns in the Grid that can be placed\n * inside a [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-chooser` component.\n *\n * @example\n * {% meta height:300 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-chooser [service]=\"service\">\n *              </kendo-grid-columnmenu-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\n\nvar ColumnMenuChooserComponent = /*#__PURE__*/function (_ColumnMenuItemBase) {\n  _inherits(ColumnMenuChooserComponent, _ColumnMenuItemBase);\n\n  var _super59 = _createSuper(ColumnMenuChooserComponent);\n\n  function ColumnMenuChooserComponent(localization, columnInfoService, changeDetector) {\n    var _this119;\n\n    _classCallCheck(this, ColumnMenuChooserComponent);\n\n    _this119 = _super59.call(this);\n    _this119.localization = localization;\n    _this119.columnInfoService = columnInfoService;\n    _this119.changeDetector = changeDetector;\n    /**\n     * Fires when the content is expanded.\n     */\n\n    _this119.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    _this119.collapse = new EventEmitter();\n    /**\n     * Specifies if the content is expanded.\n     */\n\n    _this119.expanded = false;\n    /**\n     * @hidden\n     */\n\n    _this119.actionsClass = 'k-columnmenu-actions';\n    return _this119;\n  }\n\n  _createClass(ColumnMenuChooserComponent, [{\n    key: \"onApply\",\n\n    /**\n     * @hidden\n     */\n    value: function onApply(changed) {\n      this.close();\n\n      if (changed.length) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n      }\n    }\n  }, {\n    key: \"columns\",\n    get: function get() {\n      return this.columnInfoService.leafNamedColumns;\n    }\n  }]);\n\n  return ColumnMenuChooserComponent;\n}(ColumnMenuItemBase);\n\nColumnMenuChooserComponent.ɵfac = function ColumnMenuChooserComponent_Factory(t) {\n  return new (t || ColumnMenuChooserComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nColumnMenuChooserComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuChooserComponent,\n  selectors: [[\"kendo-grid-columnmenu-chooser\"]],\n  inputs: {\n    expanded: \"expanded\"\n  },\n  outputs: {\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"icon\", \"columns\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"applyText\", \"resetText\", \"columns\", \"autoSync\", \"allowHideAll\", \"actionsClass\", \"apply\"]],\n  template: function ColumnMenuChooserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      ɵngcc0.ɵɵlistener(\"collapse\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n        return ctx.collapse.emit();\n      })(\"expand\", function ColumnMenuChooserComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n        return ctx.expand.emit();\n      });\n      ɵngcc0.ɵɵtemplate(1, ColumnMenuChooserComponent_ng_template_1_Template, 1, 6, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"columns\"))(\"expanded\", ctx.expanded);\n    }\n  },\n  directives: function directives() {\n    return [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnListComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnMenuChooserComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n\nColumnMenuChooserComponent.propDecorators = {\n  expand: [{\n    type: Output\n  }],\n  collapse: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuChooserComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-chooser',\n      template: \"\\n        <kendo-grid-columnmenu-item [text]=\\\"localization.get('columns')\\\"\\n            icon=\\\"columns\\\" [expanded]=\\\"expanded\\\" (collapse)=\\\"collapse.emit()\\\" (expand)=\\\"expand.emit()\\\">\\n            <ng-template kendoGridColumnMenuItemContentTemplate>\\n                <kendo-grid-columnlist\\n                    [applyText]=\\\"localization.get('columnsApply')\\\"\\n                    [resetText]=\\\"localization.get('columnsReset')\\\"\\n                    [columns]=\\\"columns\\\"\\n                    [autoSync]=\\\"false\\\"\\n                    [allowHideAll]=\\\"false\\\"\\n                    [actionsClass]=\\\"actionsClass\\\"\\n                    (apply)=\\\"onApply($event)\\\">\\n                </kendo-grid-columnlist>\\n            </ng-template>\\n        </kendo-grid-columnmenu-item>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, {\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * {% meta height:400 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\n\n\nvar ColumnMenuFilterComponent = /*#__PURE__*/function (_ColumnMenuItemBase2) {\n  _inherits(ColumnMenuFilterComponent, _ColumnMenuItemBase2);\n\n  var _super60 = _createSuper(ColumnMenuFilterComponent);\n\n  function ColumnMenuFilterComponent(localization) {\n    var _this120;\n\n    _classCallCheck(this, ColumnMenuFilterComponent);\n\n    _this120 = _super60.call(this);\n    _this120.localization = localization;\n    /**\n     * Fires when the content is expanded.\n     */\n\n    _this120.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    _this120.collapse = new EventEmitter();\n    /**\n     * Specifies if the content is expanded.\n     */\n\n    _this120.expanded = false;\n    /**\n     * @hidden\n     */\n\n    _this120.actionsClass = 'k-columnmenu-actions';\n    return _this120;\n  }\n\n  return ColumnMenuFilterComponent;\n}(ColumnMenuItemBase);\n\nColumnMenuFilterComponent.ɵfac = function ColumnMenuFilterComponent_Factory(t) {\n  return new (t || ColumnMenuFilterComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService));\n};\n\nColumnMenuFilterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuFilterComponent,\n  selectors: [[\"kendo-grid-columnmenu-filter\"]],\n  inputs: {\n    expanded: \"expanded\"\n  },\n  outputs: {\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"icon\", \"filter\", 3, \"text\", \"expanded\", \"collapse\", \"expand\"], [\"kendoGridColumnMenuItemContentTemplate\", \"\"], [3, \"column\", \"filter\", \"actionsClass\", \"close\"]],\n  template: function ColumnMenuFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      ɵngcc0.ɵɵlistener(\"collapse\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_collapse_0_listener() {\n        return ctx.collapse.emit();\n      })(\"expand\", function ColumnMenuFilterComponent_Template_kendo_grid_columnmenu_item_expand_0_listener() {\n        return ctx.expand.emit();\n      });\n      ɵngcc0.ɵɵtemplate(1, ColumnMenuFilterComponent_ng_template_1_Template, 1, 3, \"ng-template\", 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"filter\"))(\"expanded\", ctx.expanded);\n    }\n  },\n  directives: function directives() {\n    return [ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, FilterMenuContainerComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnMenuFilterComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }];\n};\n\nColumnMenuFilterComponent.propDecorators = {\n  expand: [{\n    type: Output\n  }],\n  collapse: [{\n    type: Output\n  }],\n  expanded: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuFilterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-filter',\n      template: \"\\n        <kendo-grid-columnmenu-item [text]=\\\"localization.get('filter')\\\" icon=\\\"filter\\\"\\n            [expanded]=\\\"expanded\\\" (collapse)=\\\"collapse.emit()\\\" (expand)=\\\"expand.emit()\\\">\\n            <ng-template kendoGridColumnMenuItemContentTemplate>\\n                    <kendo-grid-filter-menu-container\\n                        [column]=\\\"service.column\\\"\\n                        [filter]=\\\"service.filter\\\"\\n                        [actionsClass]=\\\"actionsClass\\\"\\n                        (close)=\\\"close()\\\">\\n                    </kendo-grid-filter-menu-container>\\n                </ng-template>\\n        </kendo-grid-columnmenu-item>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }];\n  }, {\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Represents the content template of the\n * [`kendo-grid-columnmenu-item`]({% slug api_grid_columnmenuitemcomponent %}) component.\n * Provides an option for specifying the content of a column item.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuItemContentTemplate` directive inside a `<kendo-grid-columnmenu-item>`.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate>\n *              <kendo-grid-columnmenu-item text=\"Item Text\" [expanded]=\"true\">\n *                  <ng-template kendoGridColumnMenuItemContentTemplate>\n *                      Item Content\n *                  </ng-template>\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuItemContentTemplateDirective = function ColumnMenuItemContentTemplateDirective(templateRef) {\n  _classCallCheck(this, ColumnMenuItemContentTemplateDirective);\n\n  this.templateRef = templateRef;\n};\n\nColumnMenuItemContentTemplateDirective.ɵfac = function ColumnMenuItemContentTemplateDirective_Factory(t) {\n  return new (t || ColumnMenuItemContentTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nColumnMenuItemContentTemplateDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ColumnMenuItemContentTemplateDirective,\n  selectors: [[\"\", \"kendoGridColumnMenuItemContentTemplate\", \"\"]]\n});\n/** @nocollapse */\n\nColumnMenuItemContentTemplateDirective.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuItemContentTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridColumnMenuItemContentTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * Represents an item that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuItemComponent = /*#__PURE__*/function () {\n  function ColumnMenuItemComponent() {\n    _classCallCheck(this, ColumnMenuItemComponent);\n\n    /**\n     * Fires when the item is clicked.\n     */\n    this.itemClick = new EventEmitter();\n    /**\n     * Fires when the content is expanded.\n     */\n\n    this.expand = new EventEmitter();\n    /**\n     * Fires when the content is collapsed.\n     */\n\n    this.collapse = new EventEmitter();\n    this.contentState = 'collapsed';\n  }\n\n  _createClass(ColumnMenuItemComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.expanded) {\n        this.updateContentState();\n      }\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      this.itemClick.emit(e);\n\n      if (this.contentTemplate) {\n        this.expanded = !this.expanded;\n        this.updateContentState();\n\n        if (this.expanded) {\n          this.expand.emit();\n        } else {\n          this.collapse.emit();\n        }\n      }\n    }\n  }, {\n    key: \"updateContentState\",\n    value: function updateContentState() {\n      this.contentState = this.expanded ? 'expanded' : 'collapsed';\n    }\n  }, {\n    key: \"iconClass\",\n    get: function get() {\n      return \"k-i-\".concat(this.icon);\n    }\n  }]);\n\n  return ColumnMenuItemComponent;\n}();\n\nColumnMenuItemComponent.ɵfac = function ColumnMenuItemComponent_Factory(t) {\n  return new (t || ColumnMenuItemComponent)();\n};\n\nColumnMenuItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuItemComponent,\n  selectors: [[\"kendo-grid-columnmenu-item\"]],\n  contentQueries: function ColumnMenuItemComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnMenuItemContentTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTemplate = _t.first);\n    }\n  },\n  inputs: {\n    expanded: \"expanded\",\n    icon: \"icon\",\n    text: \"text\",\n    selected: \"selected\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    itemClick: \"itemClick\",\n    expand: \"expand\",\n    collapse: \"collapse\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 7,\n  consts: [[1, \"k-columnmenu-item\", 3, \"click\"], [\"class\", \"k-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"style\", \"overflow:hidden;\", \"class\", \"k-columnmenu-item-content\", 4, \"ngIf\"], [1, \"k-icon\", 3, \"ngClass\"], [1, \"k-columnmenu-item-content\", 2, \"overflow\", \"hidden\"], [3, \"ngTemplateOutlet\"]],\n  template: function ColumnMenuItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function ColumnMenuItemComponent_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      });\n      ɵngcc0.ɵɵtemplate(1, ColumnMenuItemComponent_span_1_Template, 1, 1, \"span\", 1);\n      ɵngcc0.ɵɵtext(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, ColumnMenuItemComponent_div_3_Template, 3, 2, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-state-selected\", ctx.selected)(\"k-state-disabled\", ctx.disabled);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.icon);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.text, \" \");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.contentTemplate);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('state', [state('collapsed', style({\n      display: 'none'\n    })), state('expanded', style({\n      display: 'block'\n    })), transition('collapsed => expanded', [style({\n      height: '0px',\n      display: 'block'\n    }), animate('100ms ease-in', style({\n      height: '*'\n    }))]), transition('expanded => collapsed', [style({\n      height: '*'\n    }), animate('100ms ease-in', style({\n      height: '0px'\n    }))])])]\n  }\n});\nColumnMenuItemComponent.propDecorators = {\n  itemClick: [{\n    type: Output\n  }],\n  expand: [{\n    type: Output\n  }],\n  collapse: [{\n    type: Output\n  }],\n  icon: [{\n    type: Input\n  }],\n  text: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  expanded: [{\n    type: Input\n  }],\n  contentTemplate: [{\n    type: ContentChild,\n    args: [ColumnMenuItemContentTemplateDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuItemComponent, [{\n    type: Component,\n    args: [{\n      animations: [trigger('state', [state('collapsed', style({\n        display: 'none'\n      })), state('expanded', style({\n        display: 'block'\n      })), transition('collapsed => expanded', [style({\n        height: '0px',\n        display: 'block'\n      }), animate('100ms ease-in', style({\n        height: '*'\n      }))]), transition('expanded => collapsed', [style({\n        height: '*'\n      }), animate('100ms ease-in', style({\n        height: '0px'\n      }))])])],\n      selector: 'kendo-grid-columnmenu-item',\n      template: \"\\n        <div class=\\\"k-columnmenu-item\\\" (click)=\\\"onClick($event)\\\" [class.k-state-selected]=\\\"selected\\\" [class.k-state-disabled]=\\\"disabled\\\">\\n           <span *ngIf=\\\"icon\\\" class=\\\"k-icon\\\" [ngClass]=\\\"iconClass\\\">\\n           </span>\\n           {{ text }}\\n        </div>\\n        <div *ngIf=\\\"contentTemplate\\\" [@state]=\\\"contentState\\\" style=\\\"overflow:hidden;\\\" class=\\\"k-columnmenu-item-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"contentTemplate.templateRef\\\">\\n            </ng-container>\\n        <div>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    itemClick: [{\n      type: Output\n    }],\n    expand: [{\n      type: Output\n    }],\n    collapse: [{\n      type: Output\n    }],\n    expanded: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    contentTemplate: [{\n      type: ContentChild,\n      args: [ColumnMenuItemContentTemplateDirective]\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Represents a column-menu item for sorting Grid columns that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to sort the column.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-sort` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuSortComponent = /*#__PURE__*/function (_ColumnMenuItemBase3) {\n  _inherits(ColumnMenuSortComponent, _ColumnMenuItemBase3);\n\n  var _super61 = _createSuper(ColumnMenuSortComponent);\n\n  function ColumnMenuSortComponent(localization, sortService) {\n    var _this121;\n\n    _classCallCheck(this, ColumnMenuSortComponent);\n\n    _this121 = _super61.call(this);\n    _this121.localization = localization;\n    _this121.sortService = sortService;\n    return _this121;\n  }\n\n  _createClass(ColumnMenuSortComponent, [{\n    key: \"toggleSort\",\n\n    /**\n     * @hidden\n     */\n    value: function toggleSort(dir) {\n      var field = this.service.column.field;\n\n      var _normalize$3 = normalize$1(this.service.sortable),\n          mode = _normalize$3.mode,\n          allowUnsort = _normalize$3.allowUnsort;\n\n      var descriptor = this.descriptor;\n      var sort = mode === 'multiple' ? this.service.sort.filter(function (s) {\n        return s.field !== field;\n      }) : [];\n\n      if (descriptor && descriptor.dir === dir) {\n        if (!allowUnsort) {\n          return;\n        }\n      } else {\n        sort.push({\n          field: field,\n          dir: dir\n        });\n      }\n\n      this.sortService.sort(sort);\n      this.close();\n    }\n  }, {\n    key: \"sortedAsc\",\n    get: function get() {\n      var descriptor = this.descriptor;\n      return descriptor && (!descriptor.dir || descriptor.dir === 'asc');\n    }\n  }, {\n    key: \"sortedDesc\",\n    get: function get() {\n      var descriptor = this.descriptor;\n      return descriptor && descriptor.dir === 'desc';\n    }\n  }, {\n    key: \"descriptor\",\n    get: function get() {\n      var _this122 = this;\n\n      return [].concat(this.service.sort || []).find(function (s) {\n        return s.field === _this122.service.column.field;\n      });\n    }\n  }]);\n\n  return ColumnMenuSortComponent;\n}(ColumnMenuItemBase);\n\nColumnMenuSortComponent.ɵfac = function ColumnMenuSortComponent_Factory(t) {\n  return new (t || ColumnMenuSortComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(SortService));\n};\n\nColumnMenuSortComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuSortComponent,\n  selectors: [[\"kendo-grid-columnmenu-sort\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 4,\n  consts: [[\"icon\", \"sort-asc-sm\", 3, \"text\", \"selected\", \"itemClick\"], [\"icon\", \"sort-desc-sm\", 3, \"text\", \"selected\", \"itemClick\"]],\n  template: function ColumnMenuSortComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n        return ctx.toggleSort(\"asc\");\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(1, \"kendo-grid-columnmenu-item\", 1);\n      ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuSortComponent_Template_kendo_grid_columnmenu_item_itemClick_1_listener() {\n        return ctx.toggleSort(\"desc\");\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"sortAscending\"))(\"selected\", ctx.sortedAsc);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"text\", ctx.localization.get(\"sortDescending\"))(\"selected\", ctx.sortedDesc);\n    }\n  },\n  directives: [ColumnMenuItemComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnMenuSortComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: SortService\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuSortComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-sort',\n      template: \"\\n        <kendo-grid-columnmenu-item [text]=\\\"localization.get('sortAscending')\\\"\\n            icon=\\\"sort-asc-sm\\\" (itemClick)=\\\"toggleSort('asc')\\\" [selected]=\\\"sortedAsc\\\">\\n        </kendo-grid-columnmenu-item>\\n        <kendo-grid-columnmenu-item [text]=\\\"localization.get('sortDescending')\\\"\\n            icon=\\\"sort-desc-sm\\\" (itemClick)=\\\"toggleSort('desc')\\\" [selected]=\\\"sortedDesc\\\">\\n        </kendo-grid-columnmenu-item>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: SortService\n    }];\n  }, null);\n})();\n\nvar POPUP_CLASS = 'k-grid-columnmenu-popup';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\n\nvar ColumnMenuComponent = /*#__PURE__*/function () {\n  function ColumnMenuComponent(popupService, localization, service) {\n    _classCallCheck(this, ColumnMenuComponent);\n\n    this.popupService = popupService;\n    this.localization = localization;\n    this.service = service;\n    /**\n     * @hidden\n     */\n\n    this.standalone = true;\n    /**\n     * The settings for the Column Menu.\n     */\n\n    this.settings = {};\n    /**\n     * @hidden\n     */\n\n    this.sortable = true;\n    /**\n     * @hidden\n     */\n\n    this.expandedFilter = false;\n    /**\n     * @hidden\n     */\n\n    this.expandedColumns = false;\n    this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(ColumnMenuComponent, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this.service.column = this.column;\n      this.service.sort = this.sort;\n      this.service.filter = this.filter;\n      this.service.sortable = this.sortable;\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.close();\n      this.closeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(e, anchor, template) {\n      e.preventDefault();\n      this.expandedFilter = !this.hasColumnChooser;\n      this.expandedColumns = !this.hasFilter;\n      this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.popupService.destroy();\n      this.popupRef = null;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onColumnsExpand\",\n    value: function onColumnsExpand() {\n      this.expandedColumns = true;\n      this.expandedFilter = false;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"onFilterExpand\",\n    value: function onFilterExpand() {\n      this.expandedFilter = true;\n      this.expandedColumns = false;\n    }\n  }, {\n    key: \"isActive\",\n    get: function get() {\n      var _this123 = this;\n\n      return this.hasFilter && _filtersByField3(this.filter, this.column.field).length > 0 || !this.sortable && this.hasSort && this.sort.find(function (descriptor) {\n        return descriptor.field === _this123.column.field;\n      });\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"hasFilter\",\n    get: function get() {\n      return hasFilter(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"hasSort\",\n    get: function get() {\n      return hasSort(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"hasColumnChooser\",\n    get: function get() {\n      return hasColumnChooser(this.settings);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"hasLock\",\n    get: function get() {\n      return hasLock(this.settings, this.column);\n    }\n  }]);\n\n  return ColumnMenuComponent;\n}();\n\nColumnMenuComponent.ɵfac = function ColumnMenuComponent_Factory(t) {\n  return new (t || ColumnMenuComponent)(ɵngcc0.ɵɵdirectiveInject(SinglePopupService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnMenuService));\n};\n\nColumnMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuComponent,\n  selectors: [[\"kendo-grid-column-menu\"]],\n  hostVars: 2,\n  hostBindings: function ColumnMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-column-menu-standalone\", ctx.standalone);\n    }\n  },\n  inputs: {\n    standalone: \"standalone\",\n    settings: \"settings\",\n    sortable: \"sortable\",\n    column: \"column\",\n    sort: \"sort\",\n    filter: \"filter\",\n    columnMenuTemplate: \"columnMenuTemplate\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([ColumnMenuService]), ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 4,\n  consts: [[\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-grid-column-menu\", \"k-grid-filter\", 3, \"ngClass\", \"click\"], [\"anchor\", \"\"], [1, \"k-icon\", \"k-i-more-vertical\"], [\"template\", \"\"], [\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"service\", 4, \"ngIf\"], [3, \"service\", \"expanded\", \"expand\", 4, \"ngIf\"], [3, \"service\"], [3, \"service\", \"expanded\", \"expand\"]],\n  template: function ColumnMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n      ɵngcc0.ɵɵelementStart(0, \"a\", 0, 1);\n      ɵngcc0.ɵɵlistener(\"click\", function ColumnMenuComponent_Template_a_click_0_listener($event) {\n        ɵngcc0.ɵɵrestoreView(_r13);\n\n        var _r0 = ɵngcc0.ɵɵreference(1);\n\n        var _r1 = ɵngcc0.ɵɵreference(4);\n\n        return ctx.toggle($event, _r0, _r1);\n      });\n      ɵngcc0.ɵɵelement(2, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, ColumnMenuComponent_ng_template_3_Template, 1, 5, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(5, ColumnMenuComponent_ng_template_5_Template, 4, 4, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(2, _c155, ctx.isActive));\n      ɵngcc0.ɵɵattribute(\"title\", ctx.localization.get(\"columnMenu\"));\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgClass, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnMenuComponent.ctorParameters = function () {\n  return [{\n    type: SinglePopupService\n  }, {\n    type: LocalizationService\n  }, {\n    type: ColumnMenuService\n  }];\n};\n\nColumnMenuComponent.propDecorators = {\n  standalone: [{\n    type: HostBinding,\n    args: ['class.k-grid-column-menu-standalone']\n  }, {\n    type: Input\n  }],\n  column: [{\n    type: Input\n  }],\n  settings: [{\n    type: Input\n  }],\n  sort: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  sortable: [{\n    type: Input\n  }],\n  columnMenuTemplate: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuComponent, [{\n    type: Component,\n    args: [{\n      providers: [ColumnMenuService],\n      selector: 'kendo-grid-column-menu',\n      template: \"\\n        <a #anchor\\n            class=\\\"k-grid-column-menu k-grid-filter\\\"\\n            [ngClass]=\\\"{ 'k-state-active': isActive }\\\"\\n            (click)=\\\"toggle($event, anchor, template)\\\"\\n            href=\\\"#\\\"\\n            tabindex=\\\"-1\\\"\\n            [attr.title]=\\\"localization.get('columnMenu')\\\">\\n            <span class=\\\"k-icon k-i-more-vertical\\\"></span>\\n        </a>\\n        <ng-template #template>\\n            <ng-container [ngTemplateOutlet]=\\\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\\\"\\n                          [ngTemplateOutletContext]=\\\"{ service: service, column: column }\\\">\\n            </ng-container>\\n        </ng-template>\\n        <ng-template #defaultTemplate>\\n            <kendo-grid-columnmenu-sort *ngIf=\\\"hasSort\\\" [service]=\\\"service\\\">\\n            </kendo-grid-columnmenu-sort>\\n            <kendo-grid-columnmenu-lock *ngIf=\\\"hasLock\\\" [service]=\\\"service\\\">\\n            </kendo-grid-columnmenu-lock>\\n            <kendo-grid-columnmenu-chooser *ngIf=\\\"hasColumnChooser\\\" [service]=\\\"service\\\"\\n                [expanded]=\\\"expandedColumns\\\" (expand)=\\\"onColumnsExpand()\\\">\\n            </kendo-grid-columnmenu-chooser>\\n            <kendo-grid-columnmenu-filter *ngIf=\\\"hasFilter\\\" [service]=\\\"service\\\"\\n                [expanded]=\\\"expandedFilter\\\" (expand)=\\\"onFilterExpand()\\\">\\n            </kendo-grid-columnmenu-filter>\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: SinglePopupService\n    }, {\n      type: LocalizationService\n    }, {\n      type: ColumnMenuService\n    }];\n  }, {\n    standalone: [{\n      type: HostBinding,\n      args: ['class.k-grid-column-menu-standalone']\n    }, {\n      type: Input\n    }],\n    settings: [{\n      type: Input\n    }],\n    sortable: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    columnMenuTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/* tslint:disable:max-line-length */\n\n/**\n * Represents a column-menu item that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to lock or unlock the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-lock` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-lock [service]=\"service\">\n *              </kendo-grid-columnmenu-lock>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\n\n\nvar ColumnMenuLockComponent = /*#__PURE__*/function (_ColumnMenuItemBase4) {\n  _inherits(ColumnMenuLockComponent, _ColumnMenuItemBase4);\n\n  var _super62 = _createSuper(ColumnMenuLockComponent);\n\n  function ColumnMenuLockComponent(localization, columnInfoService, changeDetector) {\n    var _this124;\n\n    _classCallCheck(this, ColumnMenuLockComponent);\n\n    _this124 = _super62.call(this);\n    _this124.localization = localization;\n    _this124.columnInfoService = columnInfoService;\n    _this124.changeDetector = changeDetector;\n    return _this124;\n  }\n\n  _createClass(ColumnMenuLockComponent, [{\n    key: \"toggleColumn\",\n\n    /**\n     * @hidden\n     */\n    value: function toggleColumn() {\n      this.toggleHierarchy(!this.locked);\n      this.close();\n      this.changeDetector.markForCheck();\n    }\n  }, {\n    key: \"toggleHierarchy\",\n    value: function toggleHierarchy(locked) {\n      var root = this.service.column;\n\n      while (root.parent) {\n        root = root.parent;\n      }\n\n      var columns = [root];\n      var allChanged = [];\n\n      while (columns.length) {\n        var column = columns.shift();\n        column.locked = locked;\n        allChanged.push(column);\n\n        if (column.hasChildren) {\n          columns.push.apply(columns, _toConsumableArray(column.childrenArray));\n        }\n      }\n\n      this.columnInfoService.changeLocked(allChanged);\n    }\n  }, {\n    key: \"text\",\n    get: function get() {\n      return this.localization.get(this.locked ? 'unlock' : 'lock');\n    }\n  }, {\n    key: \"icon\",\n    get: function get() {\n      return this.locked ? 'unlock' : 'lock';\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return !this.locked && this.columnInfoService.unlockedRootCount < 2;\n    }\n  }, {\n    key: \"locked\",\n    get: function get() {\n      return this.service.column.locked;\n    }\n  }]);\n\n  return ColumnMenuLockComponent;\n}(ColumnMenuItemBase);\n\nColumnMenuLockComponent.ɵfac = function ColumnMenuLockComponent_Factory(t) {\n  return new (t || ColumnMenuLockComponent)(ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef));\n};\n\nColumnMenuLockComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ColumnMenuLockComponent,\n  selectors: [[\"kendo-grid-columnmenu-lock\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 3,\n  consts: [[3, \"text\", \"icon\", \"disabled\", \"itemClick\"]],\n  template: function ColumnMenuLockComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"kendo-grid-columnmenu-item\", 0);\n      ɵngcc0.ɵɵlistener(\"itemClick\", function ColumnMenuLockComponent_Template_kendo_grid_columnmenu_item_itemClick_0_listener() {\n        return ctx.toggleColumn();\n      });\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"text\", ctx.text)(\"icon\", ctx.icon)(\"disabled\", ctx.disabled);\n    }\n  },\n  directives: [ColumnMenuItemComponent],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nColumnMenuLockComponent.ctorParameters = function () {\n  return [{\n    type: LocalizationService\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuLockComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-columnmenu-lock',\n      template: \"\\n       <kendo-grid-columnmenu-item [text]=\\\"text\\\" [icon]=\\\"icon\\\" (itemClick)=\\\"toggleColumn()\\\" [disabled]=\\\"disabled\\\">\\n       </kendo-grid-columnmenu-item>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: LocalizationService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: ChangeDetectorRef\n    }];\n  }, null);\n})();\n\nvar COMPONENTS$1 = [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective];\n/**\n * @hidden\n */\n\nvar ColumnMenuModule = /*#__PURE__*/function () {\n  function ColumnMenuModule() {\n    _classCallCheck(this, ColumnMenuModule);\n  }\n\n  _createClass(ColumnMenuModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuComponent];\n    }\n  }]);\n\n  return ColumnMenuModule;\n}();\n\nColumnMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ColumnMenuModule\n});\nColumnMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ColumnMenuModule_Factory(t) {\n    return new (t || ColumnMenuModule)();\n  },\n  imports: [[CommonModule, FilterMenuModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ColumnMenuModule, {\n    declarations: function declarations() {\n      return [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, FilterMenuModule];\n    },\n    exports: function exports() {\n      return [ColumnListComponent, ColumnChooserComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuComponent, ColumnMenuLockComponent, ColumnMenuTemplateDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ColumnMenuModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [COMPONENTS$1],\n      imports: [CommonModule, FilterMenuModule],\n      exports: [COMPONENTS$1]\n    }]\n  }], null, null);\n})();\n\nvar exportedModules$2 = [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective];\nvar importedModules$2 = [CommonModule, GroupModule, RowFilterModule, FilterMenuModule, SharedModule, DragAndDropModule, ColumnMenuModule];\n/**\n * @hidden\n */\n\nvar HeaderModule = /*#__PURE__*/function () {\n  function HeaderModule() {\n    _classCallCheck(this, HeaderModule);\n  }\n\n  _createClass(HeaderModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [HeaderTemplateDirective, SelectAllCheckboxDirective];\n    }\n  }]);\n\n  return HeaderModule;\n}();\n\nHeaderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: HeaderModule\n});\nHeaderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function HeaderModule_Factory(t) {\n    return new (t || HeaderModule)();\n  },\n  imports: [[].concat(importedModules$2)]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeaderModule, {\n    declarations: [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective],\n    imports: [CommonModule, GroupModule, RowFilterModule, FilterMenuModule, SharedModule, DragAndDropModule, ColumnMenuModule],\n    exports: [HeaderComponent, HeaderTemplateDirective, ColumnHandleDirective, SelectAllCheckboxDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HeaderModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$2],\n      exports: [exportedModules$2],\n      imports: [].concat(importedModules$2)\n    }]\n  }], null, null);\n})();\n/**\n * Represents the command columns of the Grid. You have to define the content of the\n * column inside an `<ng-template>` tag. The template context is set to the current\n * data item. For more information and examples on using the passed fields\n * and the command directives, refer to the article on\n * [editing the Grid in Angular Reactive Forms]({% slug editing_reactive_forms_grid %}).\n *\n * The following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex`is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * Usually, the template contains CRUD command directives such as:\n * - [`EditCommandDirective`]({% slug api_grid_editcommanddirective %})\n * - [`RemoveCommandDirective`]({% slug api_grid_removecommanddirective %})\n * - [`CancelCommandDirective`]({% slug api_grid_cancelcommanddirective %})\n * - [`SaveCommandDirective`]({% slug api_grid_savecommanddirective %})\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-command-column title=\"command\" width=\"220\">\n *               <ng-template kendoGridCellTemplate>\n *                   <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *                   <button kendoGridRemoveCommand>Remove</button>\n *               </ng-template>\n *           </kendo-grid-command-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nvar CommandColumnComponent = /*#__PURE__*/function (_ColumnBase$4) {\n  _inherits(CommandColumnComponent, _ColumnBase$4);\n\n  var _super63 = _createSuper(CommandColumnComponent);\n\n  function CommandColumnComponent(parent) {\n    var _this125;\n\n    _classCallCheck(this, CommandColumnComponent);\n\n    _this125 = _super63.call(this, parent);\n    _this125.parent = parent;\n    return _this125;\n  }\n\n  _createClass(CommandColumnComponent, [{\n    key: \"templateRef\",\n    get: function get() {\n      return this.template ? this.template.templateRef : undefined;\n    }\n  }]);\n\n  return CommandColumnComponent;\n}(ColumnBase$1);\n\nCommandColumnComponent.ɵfac = function CommandColumnComponent_Factory(t) {\n  return new (t || CommandColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nCommandColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CommandColumnComponent,\n  selectors: [[\"kendo-grid-command-column\"]],\n  contentQueries: function CommandColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(function () {\n      return CommandColumnComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CommandColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCommandColumnComponent.ctorParameters = function () {\n  return [{\n    type: ColumnBase$1,\n    decorators: [{\n      type: SkipSelf\n    }, {\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nCommandColumnComponent.propDecorators = {\n  template: [{\n    type: ContentChild,\n    args: [CellTemplateDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CommandColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase$1,\n        useExisting: forwardRef(function () {\n          return CommandColumnComponent;\n        })\n      }],\n      selector: 'kendo-grid-command-column',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase$1,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective]\n    }]\n  });\n})();\n/**\n * Represents the checkbox for selecting columns in the Grid. If the column is\n * defined as empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For more examples, refer to:\n * - [Selecting or deselecting all items on a page]({% slug selection_grid %}#toc-select-all-feature)\n * - [Persisting the selection]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nvar CheckboxColumnComponent = /*#__PURE__*/function (_ColumnBase$5) {\n  _inherits(CheckboxColumnComponent, _ColumnBase$5);\n\n  var _super64 = _createSuper(CheckboxColumnComponent);\n\n  function CheckboxColumnComponent(parent) {\n    var _this126;\n\n    _classCallCheck(this, CheckboxColumnComponent);\n\n    _this126 = _super64.call(this, parent);\n    _this126.parent = parent;\n    /*\n     * @hidden\n     */\n\n    _this126.isCheckboxColumn = true;\n    return _this126;\n  }\n\n  _createClass(CheckboxColumnComponent, [{\n    key: \"templateRef\",\n    get: function get() {\n      return this.template ? this.template.templateRef : undefined;\n    }\n  }]);\n\n  return CheckboxColumnComponent;\n}(ColumnBase$1);\n\nCheckboxColumnComponent.ɵfac = function CheckboxColumnComponent_Factory(t) {\n  return new (t || CheckboxColumnComponent)(ɵngcc0.ɵɵdirectiveInject(ColumnBase$1, 13));\n};\n\nCheckboxColumnComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CheckboxColumnComponent,\n  selectors: [[\"kendo-grid-checkbox-column\"]],\n  contentQueries: function CheckboxColumnComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CellTemplateDirective, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n    }\n  },\n  inputs: {\n    showSelectAll: \"showSelectAll\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: ColumnBase$1,\n    useExisting: forwardRef(function () {\n      return CheckboxColumnComponent;\n    })\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function CheckboxColumnComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCheckboxColumnComponent.ctorParameters = function () {\n  return [{\n    type: ColumnBase$1,\n    decorators: [{\n      type: SkipSelf\n    }, {\n      type: Host\n    }, {\n      type: Optional\n    }]\n  }];\n};\n\nCheckboxColumnComponent.propDecorators = {\n  showSelectAll: [{\n    type: Input\n  }],\n  template: [{\n    type: ContentChild,\n    args: [CellTemplateDirective]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CheckboxColumnComponent, [{\n    type: Component,\n    args: [{\n      providers: [{\n        provide: ColumnBase$1,\n        useExisting: forwardRef(function () {\n          return CheckboxColumnComponent;\n        })\n      }],\n      selector: 'kendo-grid-checkbox-column',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ColumnBase$1,\n      decorators: [{\n        type: SkipSelf\n      }, {\n        type: Host\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    showSelectAll: [{\n      type: Input\n    }],\n    template: [{\n      type: ContentChild,\n      args: [CellTemplateDirective]\n    }]\n  });\n})();\n/* tslint:disable:no-input-rename */\n\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [`CheckboxColumnComponent`]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [`selectionChange`]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\n\n\nvar SelectionCheckboxDirective = /*#__PURE__*/function () {\n  function SelectionCheckboxDirective(selectionService, el, renderer, ngZone) {\n    var _this127 = this;\n\n    _classCallCheck(this, SelectionCheckboxDirective);\n\n    this.selectionService = selectionService;\n    this.el = el;\n    this.renderer = renderer;\n    this.ngZone = ngZone;\n    this.type = \"checkbox\";\n    this.ngZone.runOutsideAngular(function () {\n      _this127.destroyClick = _this127.renderer.listen(_this127.el.nativeElement, \"click\", _this127.onClick.bind(_this127));\n      _this127.destroyKeyDown = _this127.renderer.listen(_this127.el.nativeElement, \"keydown\", _this127.onKeyDown.bind(_this127));\n    });\n  }\n\n  _createClass(SelectionCheckboxDirective, [{\n    key: \"ngAfterContentChecked\",\n    value: function ngAfterContentChecked() {\n      this.setCheckedState();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.destroyClick) {\n        this.destroyClick();\n      }\n\n      if (this.destroyKeyDown) {\n        this.destroyKeyDown();\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      var _this128 = this;\n\n      if (this.selectionService.options.enabled) {\n        this.ngZone.run(function () {\n          var ev = _this128.selectionService.toggleByIndex(_this128.itemIndex);\n\n          ev.ctrlKey = true;\n          ev.shiftKey = false;\n\n          _this128.selectionService.changes.emit(ev);\n        });\n      }\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      if (e.keyCode === Keys.Enter) {\n        this.onClick();\n      }\n    }\n    /*\n     * @hidden\n     */\n\n  }, {\n    key: \"setCheckedState\",\n    value: function setCheckedState() {\n      this.renderer.setProperty(this.el.nativeElement, \"checked\", this.selectionService.isSelected(this.itemIndex));\n    }\n  }]);\n\n  return SelectionCheckboxDirective;\n}();\n\nSelectionCheckboxDirective.ɵfac = function SelectionCheckboxDirective_Factory(t) {\n  return new (t || SelectionCheckboxDirective)(ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nSelectionCheckboxDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SelectionCheckboxDirective,\n  selectors: [[\"\", \"kendoGridSelectionCheckbox\", \"\"]],\n  hostVars: 1,\n  hostBindings: function SelectionCheckboxDirective_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    itemIndex: [\"kendoGridSelectionCheckbox\", \"itemIndex\"]\n  }\n});\n/** @nocollapse */\n\nSelectionCheckboxDirective.ctorParameters = function () {\n  return [{\n    type: SelectionService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: NgZone\n  }];\n};\n\nSelectionCheckboxDirective.propDecorators = {\n  itemIndex: [{\n    type: Input,\n    args: [\"kendoGridSelectionCheckbox\"]\n  }],\n  type: [{\n    type: HostBinding,\n    args: ['attr.type']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SelectionCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSelectionCheckbox]'\n    }]\n  }], function () {\n    return [{\n      type: SelectionService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: NgZone\n    }];\n  }, {\n    type: [{\n      type: HostBinding,\n      args: ['attr.type']\n    }],\n    itemIndex: [{\n      type: Input,\n      args: [\"kendoGridSelectionCheckbox\"]\n    }]\n  });\n})();\n\nvar columnCellIndex = function columnCellIndex(cell, cells) {\n  var cellIndex = 0;\n\n  for (var idx = 0; idx < cells.length; idx++) {\n    if (cells[idx] === cell) {\n      return cellIndex;\n    }\n\n    if (!hasClasses(cells[idx], 'k-hierarchy-cell k-group-cell')) {\n      cellIndex++;\n    }\n  }\n};\n/**\n * @hidden\n */\n\n\nvar TableBodyComponent = /*#__PURE__*/function () {\n  function TableBodyComponent(detailsService, groupsService, changeNotification, editService, localization, ngZone, renderer, element, domEvents, selectionService, cellSelectionService, columnInfoService, navigationService) {\n    var _this129 = this;\n\n    _classCallCheck(this, TableBodyComponent);\n\n    this.detailsService = detailsService;\n    this.groupsService = groupsService;\n    this.changeNotification = changeNotification;\n    this.editService = editService;\n    this.localization = localization;\n    this.ngZone = ngZone;\n    this.renderer = renderer;\n    this.element = element;\n    this.domEvents = domEvents;\n    this.selectionService = selectionService;\n    this.cellSelectionService = cellSelectionService;\n    this.columnInfoService = columnInfoService;\n    this.navigationService = navigationService;\n    this.columns = [];\n    this.groups = [];\n    this.skip = 0;\n    this.noRecordsText = this.localization.get('noRecords');\n    this.isLocked = false;\n    this.skipGroupDecoration = false;\n    this.showGroupFooters = false;\n    this.lockedColumnsCount = 0;\n    this.totalColumnsCount = 0;\n    this.trackBy = defaultTrackBy;\n\n    this.rowClass = function () {\n      return null;\n    };\n\n    this.cellKeydownSubscription = this.navigationService.cellKeydown.subscribe(function (args) {\n      return _this129.cellKeydownHandler(args);\n    });\n    this.trackByWrapper = this.trackByWrapper.bind(this);\n    this.trackByColumns = this.trackByColumns.bind(this);\n  }\n\n  _createClass(TableBodyComponent, [{\n    key: \"toggleRow\",\n    value: function toggleRow(index, dataItem) {\n      this.detailsService.toggleRow(index, dataItem);\n      return false;\n    }\n  }, {\n    key: \"isExpanded\",\n    value: function isExpanded(viewItem) {\n      return this.detailsService.isExpanded(viewItem.index, viewItem.data);\n    }\n  }, {\n    key: \"detailButtonStyles\",\n    value: function detailButtonStyles(viewItem) {\n      var expanded = this.isExpanded(viewItem);\n      return expanded ? 'k-minus' : 'k-plus';\n    }\n  }, {\n    key: \"detailButtonTitle\",\n    value: function detailButtonTitle(viewItem) {\n      var messageKey = this.isExpanded(viewItem) ? 'detailCollapse' : 'detailExpand';\n      return this.localization.get(messageKey);\n    }\n  }, {\n    key: \"isGroup\",\n    value: function isGroup(item) {\n      return item.type === 'group';\n    }\n  }, {\n    key: \"isDataItem\",\n    value: function isDataItem(item) {\n      return !this.isGroup(item) && !this.isFooter(item);\n    }\n  }, {\n    key: \"isFooter\",\n    value: function isFooter(item) {\n      return item.type === 'footer';\n    }\n  }, {\n    key: \"isInExpandedGroup\",\n    value: function isInExpandedGroup(item) {\n      return this.groupsService.isInExpandedGroup(item.groupIndex, false);\n    }\n  }, {\n    key: \"isParentGroupExpanded\",\n    value: function isParentGroupExpanded(item) {\n      return this.groupsService.isInExpandedGroup(item.index || item.groupIndex);\n    }\n  }, {\n    key: \"isOdd\",\n    value: function isOdd(item) {\n      return item.index % 2 !== 0;\n    }\n  }, {\n    key: \"isSelectable\",\n    value: function isSelectable() {\n      return this.selectable && this.selectable.enabled !== false;\n    }\n  }, {\n    key: \"isRowSelected\",\n    value: function isRowSelected(item) {\n      return this.selectionService.isSelected(item.index);\n    }\n  }, {\n    key: \"trackByWrapper\",\n    value: function trackByWrapper(index, item) {\n      if (item.type === 'data') {\n        item.isEditing = this.editService.hasEdited(item.index);\n      }\n\n      return this.trackBy(index, item);\n    }\n  }, {\n    key: \"trackByColumns\",\n    value: function trackByColumns(index, item) {\n      return this.virtualColumns ? index : item;\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.hasGroupHeaderColumn) {\n        this.groupHeaderColumns = columnsToRender(this.skipGroupDecoration ? this.columns : this.columns.toArray().slice(1));\n      } else {\n        this.groupHeaderColumns = [];\n      }\n\n      if (this.isLocked) {\n        this.groupHeaderSlaveCellsCount = this.hasGroupHeaderColumn ? this.columnsContainer.nonLockedColumnsToRender.length : 1;\n      } else {\n        this.groupHeaderSlaveCellsCount = 0;\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (isChanged(\"columns\", changes, false)) {\n        this.changeNotification.notify();\n      }\n    }\n  }, {\n    key: \"logicalRowIndex\",\n    value: function logicalRowIndex(rowIndex) {\n      var pos = this.skip + rowIndex;\n\n      if (this.hasDetailTemplate) {\n        pos *= 2;\n      }\n\n      var absoluteRowIndex = 1 + pos;\n      var addRowOffset = this.editService.hasNewItem ? 1 : 0;\n      var filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n      var headerRowCount = this.columnInfoService.totalLevels + filterRowOffset + addRowOffset;\n      return absoluteRowIndex + headerRowCount;\n    }\n  }, {\n    key: \"addRowLogicalIndex\",\n    value: function addRowLogicalIndex() {\n      return this.columnInfoService.totalLevels + 1 + (hasFilterRow(this.filterable) ? 1 : 0);\n    }\n  }, {\n    key: \"logicalColIndex\",\n    value: function logicalColIndex(column) {\n      if (!isPresent(column.leafIndex)) {\n        return -1;\n      }\n\n      return column.leafIndex + (this.hasDetailTemplate ? 1 : 0);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this130 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        var clickHandler = _this130.clickHandler.bind(_this130);\n\n        var mousedownSubscription = _this130.renderer.listen(_this130.element.nativeElement, 'mousedown', clickHandler);\n\n        var mouseupSubscription = _this130.renderer.listen(_this130.element.nativeElement, 'mouseup', clickHandler);\n\n        var clickSubscription = _this130.renderer.listen(_this130.element.nativeElement, 'click', clickHandler);\n\n        var contextmenuSubscription = _this130.renderer.listen(_this130.element.nativeElement, 'contextmenu', clickHandler);\n\n        _this130.clickSubscription = function () {\n          mousedownSubscription();\n          mouseupSubscription();\n          clickSubscription();\n          contextmenuSubscription();\n        };\n      });\n      var originalNoRecordText = this.localization.get('noRecords');\n      this.localization.changes.subscribe(function () {\n        if (_this130.noRecordsText === originalNoRecordText) {\n          _this130.noRecordsText = _this130.localization.get('noRecords');\n          originalNoRecordText = _this130.noRecordsText;\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.clickSubscription) {\n        this.clickSubscription();\n      }\n\n      this.cellKeydownSubscription.unsubscribe();\n      clearTimeout(this.clickTimeout);\n    }\n  }, {\n    key: \"isEditingCell\",\n    value: function isEditingCell(index, column) {\n      return this.editService.isEditing() && this.editService.isEditedColumn(index, column);\n    }\n  }, {\n    key: \"isEditingRow\",\n    value: function isEditingRow(index) {\n      return this.editService.isEditing() && this.editService.hasEdited(index);\n    }\n  }, {\n    key: \"showGroupHeader\",\n    value: function showGroupHeader(item) {\n      return !item.data.skipHeader;\n    }\n  }, {\n    key: \"clickHandler\",\n    value: function clickHandler(eventArg) {\n      var _this131 = this;\n\n      var element = this.element.nativeElement;\n      var target = eventArg.target;\n      var cell, row, body, gridElement;\n      var currentTarget = target;\n\n      do {\n        cell = closest(currentTarget, matchesNodeName('td'));\n        row = closest(cell, matchesNodeName('tr'));\n        body = closest(row, matchesNodeName('tbody'));\n        currentTarget = body;\n        gridElement = closestInScope(currentTarget, matchesClasses('k-grid'), element);\n      } while (body && body !== element && !gridElement);\n\n      if (cell && !hasClasses(cell, NON_DATA_CELL_CLASSES) && !hasClasses(row, NON_DATA_ROW_CLASSES) && body === element && !gridElement) {\n        this.editService.preventCellClose();\n        var focusable = target !== cell && isFocusableWithTabKey(target, false);\n\n        if (!focusable && !matchesNodeName('label')(target) && !hasClasses(target, IGNORE_TARGET_CLASSSES) && !closestInScope(target, matchesClasses(IGNORE_CONTAINER_CLASSES), cell)) {\n          var args = this.cellClickArgs(cell, row, eventArg);\n\n          if (eventArg.type === 'mousedown') {\n            this.domEvents.cellMousedown.emit(args);\n          } else if (eventArg.type === 'mouseup') {\n            this.domEvents.cellMouseup.emit(args);\n          } else {\n            if (args.isEditedColumn || !this.editService.closeCell(eventArg)) {\n              if (eventArg.type === 'click') {\n                this.clickTimeout = setTimeout(function () {\n                  _this131.emitCellClick(args);\n                }, 0);\n              } else {\n                this.emitCellClick(args);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"emitCellClick\",\n    value: function emitCellClick(args) {\n      this.domEvents.cellClick.emit(Object.assign(args, {\n        isEdited: args.isEditedRow || args.isEditedColumn\n      }));\n    }\n  }, {\n    key: \"cellKeydownHandler\",\n    value: function cellKeydownHandler(args) {\n      if (args.keyCode === Keys.Enter) {\n        this.clickHandler(args);\n      }\n    }\n  }, {\n    key: \"cellClickArgs\",\n    value: function cellClickArgs(cell, row, eventArg) {\n      var index = columnCellIndex(cell, row.cells);\n      var column = this.columns.toArray()[index];\n      var columnIndex = this.lockedColumnsCount + index;\n      var rowIndex = row.getAttribute('data-kendo-grid-item-index');\n      rowIndex = rowIndex ? parseInt(rowIndex, 10) : -1;\n      var dataItem = rowIndex === -1 ? this.editService.newDataItem : this.data.at(rowIndex - this.skip);\n      var isEditedColumn = this.editService.isEditedColumn(rowIndex, column);\n      var isEditedRow = this.editService.isEdited(rowIndex);\n      var type = eventArg.type === 'keydown' ? 'click' : eventArg.type;\n      return {\n        column: column,\n        columnIndex: columnIndex,\n        dataItem: dataItem,\n        isEditedColumn: isEditedColumn,\n        isEditedRow: isEditedRow,\n        originalEvent: eventArg,\n        rowIndex: rowIndex,\n        type: type\n      };\n    }\n  }, {\n    key: \"newDataItem\",\n    get: function get() {\n      return this.editService.newDataItem;\n    } // Number of unlocked columns in the next table, if any\n\n  }, {\n    key: \"unlockedColumnsCount\",\n    get: function get() {\n      return this.totalColumnsCount - this.lockedColumnsCount - (this.allColumns || this.columns).length;\n    }\n  }, {\n    key: \"hasGroupHeaderColumn\",\n    get: function get() {\n      return this.columnsContainer.hasGroupHeaderColumn;\n    }\n  }, {\n    key: \"columnsContainer\",\n    get: function get() {\n      return this.columnInfoService.columnsContainer;\n    }\n  }, {\n    key: \"columnsSpan\",\n    get: function get() {\n      return columnsSpan(this.columns);\n    }\n  }, {\n    key: \"allColumnsSpan\",\n    get: function get() {\n      return columnsSpan(this.allColumns || this.columns);\n    }\n  }, {\n    key: \"colSpan\",\n    get: function get() {\n      return this.columnsSpan + this.groups.length + (this.hasDetailTemplate ? 1 : 0);\n    }\n  }, {\n    key: \"footerColumns\",\n    get: function get() {\n      return this.isLocked ? this.columnsContainer.lockedColumnsToRender : this.columnsContainer.nonLockedColumnsToRender;\n    }\n  }, {\n    key: \"hasDetailTemplate\",\n    get: function get() {\n      return isPresent(this.detailTemplate);\n    }\n  }]);\n\n  return TableBodyComponent;\n}();\n\nTableBodyComponent.ɵfac = function TableBodyComponent_Factory(t) {\n  return new (t || TableBodyComponent)(ɵngcc0.ɵɵdirectiveInject(DetailsService), ɵngcc0.ɵɵdirectiveInject(GroupsService), ɵngcc0.ɵɵdirectiveInject(ChangeNotificationService), ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DomEventsService), ɵngcc0.ɵɵdirectiveInject(SelectionService), ɵngcc0.ɵɵdirectiveInject(CellSelectionService), ɵngcc0.ɵɵdirectiveInject(ColumnInfoService), ɵngcc0.ɵɵdirectiveInject(NavigationService));\n};\n\nTableBodyComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TableBodyComponent,\n  selectors: [[\"\", \"kendoGridTableBody\", \"\"]],\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    skip: \"skip\",\n    noRecordsText: \"noRecordsText\",\n    isLocked: \"isLocked\",\n    skipGroupDecoration: \"skipGroupDecoration\",\n    showGroupFooters: \"showGroupFooters\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    totalColumnsCount: \"totalColumnsCount\",\n    trackBy: \"trackBy\",\n    rowClass: \"rowClass\",\n    allColumns: \"allColumns\",\n    detailTemplate: \"detailTemplate\",\n    noRecordsTemplate: \"noRecordsTemplate\",\n    data: \"data\",\n    selectable: \"selectable\",\n    filterable: \"filterable\",\n    virtualColumns: \"virtualColumns\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c156,\n  decls: 3,\n  vars: 4,\n  consts: [[3, \"ngIf\"], [\"class\", \"k-grid-norecords\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-grid-add-row\", \"k-grid-edit-row\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"ngClass\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"k-group-cell\", \"role\", \"presentation\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"presentation\", 1, \"k-group-cell\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", 3, \"rowIndex\", \"columnIndex\", \"isNew\", \"column\", \"dataItem\", \"ngClass\", \"ngStyle\", \"logicalRowIndex\", \"logicalColIndex\", \"colSpan\"], [1, \"k-grid-norecords\"], [3, \"ngIf\", \"templateContext\"], [4, \"ngIf\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"ngClass\", \"k-alt\", \"k-master-row\", \"k-grid-edit-row\", \"k-state-selected\", 4, \"ngIf\"], [\"class\", \"k-detail-row\", \"kendoGridLogicalRow\", \"\", 3, \"k-alt\", \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", 4, \"ngIf\"], [\"class\", \"k-group-footer\", \"kendoGridLogicalRow\", \"\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", 4, \"ngIf\"], [\"kendoGridGroupHeader\", \"\", \"kendoGridLogicalRow\", \"\", 3, \"columns\", \"groups\", \"item\", \"hasDetails\", \"skipGroupDecoration\", \"hasGroupHeaderColumn\", \"groupHeaderColumns\", \"rowIndex\", \"totalColumnsCount\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalRow\", \"\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\", \"ngClass\"], [\"class\", \"k-hierarchy-cell\", \"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\", 4, \"ngIf\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", \"aria-selected\", \"false\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"ngClass\", \"k-grid-edit-cell\", \"ngStyle\", \"k-state-selected\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", \"aria-selected\", \"false\", 1, \"k-hierarchy-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"detailExpandCell\"], [\"class\", \"k-icon\", \"href\", \"#\", \"tabindex\", \"-1\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"href\", \"#\", \"tabindex\", \"-1\", 1, \"k-icon\", 3, \"ngClass\", \"click\"], [\"kendoGridCell\", \"\", \"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", \"aria-selected\", \"false\", 3, \"rowIndex\", \"columnIndex\", \"column\", \"dataItem\", \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"colIndex\", \"colSpan\", \"ngClass\", \"ngStyle\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-detail-row\", 3, \"dataRowIndex\", \"dataItem\", \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\"], [\"class\", \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [1, \"k-hierarchy-cell\"], [\"kendoGridLogicalCell\", \"\", \"role\", \"gridcell\", \"aria-selected\", \"false\", 1, \"k-detail-cell\", 3, \"logicalRowIndex\", \"logicalColIndex\", \"dataRowIndex\", \"dataItem\", \"colIndex\", \"colSpan\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"k-group-cell\"], [\"kendoGridLogicalRow\", \"\", 1, \"k-group-footer\", 3, \"logicalRowIndex\", \"logicalSlaveRow\", \"logicalCellsCount\", \"logicalSlaveCellsCount\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"kendoGridLogicalCell\", \"\", 3, \"logicalRowIndex\", \"logicalColIndex\"], [3, \"templateContext\"]],\n  template: function TableBodyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, TableBodyComponent_ng_template_0_Template, 4, 8, \"ng-template\", 0);\n      ɵngcc0.ɵɵtemplate(1, TableBodyComponent_tr_1_Template, 4, 6, \"tr\", 1);\n      ɵngcc0.ɵɵtemplate(2, TableBodyComponent_ng_template_2_Template, 4, 4, \"ng-template\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.editService.hasNewItem);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", (ctx.data == null ? null : ctx.data.length) === 0 || ctx.data == null);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.data)(\"ngForTrackBy\", ctx.trackByWrapper);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgForOf, LogicalRowDirective, LogicalCellDirective, CellComponent, ɵngcc1.NgClass, ɵngcc1.NgStyle, TemplateContextDirective, GroupHeaderComponent, ɵngcc1.NgTemplateOutlet];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nTableBodyComponent.ctorParameters = function () {\n  return [{\n    type: DetailsService\n  }, {\n    type: GroupsService\n  }, {\n    type: ChangeNotificationService\n  }, {\n    type: EditService\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }, {\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }, {\n    type: DomEventsService\n  }, {\n    type: SelectionService\n  }, {\n    type: CellSelectionService\n  }, {\n    type: ColumnInfoService\n  }, {\n    type: NavigationService\n  }];\n};\n\nTableBodyComponent.propDecorators = {\n  columns: [{\n    type: Input\n  }],\n  allColumns: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }],\n  noRecordsTemplate: [{\n    type: Input\n  }],\n  data: [{\n    type: Input\n  }],\n  skip: [{\n    type: Input\n  }],\n  selectable: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  noRecordsText: [{\n    type: Input\n  }],\n  isLocked: [{\n    type: Input\n  }],\n  skipGroupDecoration: [{\n    type: Input\n  }],\n  showGroupFooters: [{\n    type: Input\n  }],\n  lockedColumnsCount: [{\n    type: Input\n  }],\n  totalColumnsCount: [{\n    type: Input\n  }],\n  virtualColumns: [{\n    type: Input\n  }],\n  trackBy: [{\n    type: Input\n  }],\n  rowClass: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TableBodyComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridTableBody]',\n      template: \"\\n    <ng-template [ngIf]=\\\"editService.hasNewItem\\\">\\n        <tr class=\\\"k-grid-add-row k-grid-edit-row\\\"\\n            kendoGridLogicalRow\\n                [logicalRowIndex]=\\\"addRowLogicalIndex()\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"unlockedColumnsCount\\\">\\n            <ng-template [ngIf]=\\\"!skipGroupDecoration\\\">\\n                <td class=\\\"k-group-cell\\\" *ngFor=\\\"let g of groups\\\" role=\\\"presentation\\\"></td>\\n            </ng-template>\\n            <td class=\\\"k-hierarchy-cell\\\"\\n                *ngIf=\\\"detailTemplate?.templateRef\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"addRowLogicalIndex()\\\"\\n                    [logicalColIndex]=\\\"0\\\"\\n                    aria-selected=\\\"false\\\"\\n                >\\n            </td>\\n            <td *ngFor=\\\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\\\"\\n                kendoGridCell\\n                    [rowIndex]=\\\"-1\\\"\\n                    [columnIndex]=\\\"lockedColumnsCount + columnIndex\\\"\\n                    [isNew]=\\\"true\\\"\\n                    [column]=\\\"column\\\"\\n                    [dataItem]=\\\"newDataItem\\\"\\n                [ngClass]=\\\"column.cssClass\\\"\\n                [ngStyle]=\\\"column.style\\\"\\n                [attr.colspan]=\\\"column.colspan\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"addRowLogicalIndex()\\\"\\n                    [logicalColIndex]=\\\"logicalColIndex(column)\\\"\\n                    [colSpan]=\\\"column.colspan\\\"\\n                role=\\\"gridcell\\\">\\n            </td>\\n        </tr>\\n    </ng-template>\\n    <tr *ngIf=\\\"data?.length === 0 || data == null\\\" class=\\\"k-grid-norecords\\\">\\n        <td [attr.colspan]=\\\"colSpan\\\">\\n            <ng-template\\n                [ngIf]=\\\"noRecordsTemplate?.templateRef\\\"\\n                [templateContext]=\\\"{\\n                    templateRef: noRecordsTemplate?.templateRef\\n                 }\\\">\\n            </ng-template>\\n            <ng-container *ngIf=\\\"!noRecordsTemplate?.templateRef\\\">\\n                {{noRecordsText}}\\n            </ng-container>\\n        </td>\\n    </tr>\\n    <ng-template ngFor\\n        [ngForOf]=\\\"data\\\"\\n        [ngForTrackBy]=\\\"trackByWrapper\\\"\\n        let-item\\n        let-rowIndex=\\\"index\\\">\\n        <tr *ngIf=\\\"isGroup(item) && isParentGroupExpanded(item) && showGroupHeader(item)\\\"\\n            kendoGridGroupHeader\\n                [columns]=\\\"columns\\\"\\n                [groups]=\\\"groups\\\"\\n                [item]=\\\"item\\\"\\n                [hasDetails]=\\\"detailTemplate?.templateRef\\\"\\n                [skipGroupDecoration]=\\\"skipGroupDecoration\\\"\\n                [hasGroupHeaderColumn]=\\\"hasGroupHeaderColumn\\\"\\n                [groupHeaderColumns]=\\\"groupHeaderColumns\\\"\\n                [rowIndex]=\\\"rowIndex + 1\\\"\\n                [totalColumnsCount]=\\\"totalColumnsCount\\\"\\n            kendoGridLogicalRow\\n                [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"groupHeaderSlaveCellsCount\\\">\\n        </tr>\\n        <tr\\n            *ngIf=\\\"isDataItem(item) && isInExpandedGroup(item)\\\"\\n            kendoGridLogicalRow\\n                [dataRowIndex]=\\\"item.index\\\"\\n                [dataItem]=\\\"item.data\\\"\\n                [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"unlockedColumnsCount\\\"\\n            [ngClass]=\\\"rowClass({ dataItem: item.data, index: item.index })\\\"\\n            [class.k-alt]=\\\"isOdd(item)\\\"\\n            [class.k-master-row]=\\\"detailTemplate?.templateRef\\\"\\n            [class.k-grid-edit-row]=\\\"isEditingRow(item.index)\\\"\\n            [attr.data-kendo-grid-item-index]=\\\"item.index\\\"\\n            [class.k-state-selected]=\\\"isSelectable() && isRowSelected(item)\\\">\\n            <ng-template [ngIf]=\\\"!skipGroupDecoration\\\">\\n                <td class=\\\"k-group-cell\\\" *ngFor=\\\"let g of groups\\\" role=\\\"presentation\\\"></td>\\n            </ng-template>\\n            <td class=\\\"k-hierarchy-cell\\\"\\n                *ngIf=\\\"detailTemplate?.templateRef\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                    [logicalColIndex]=\\\"0\\\"\\n                    [dataRowIndex]=\\\"item.index\\\"\\n                    [dataItem]=\\\"item.data\\\"\\n                    [detailExpandCell]=\\\"true\\\"\\n                    aria-selected=\\\"false\\\"\\n                >\\n                <a class=\\\"k-icon\\\"\\n                    *ngIf=\\\"detailTemplate.showIf(item.data, item.index)\\\"\\n                    [ngClass]=\\\"detailButtonStyles(item)\\\"\\n                    [attr.title]=\\\"detailButtonTitle(item)\\\"\\n                    href=\\\"#\\\" tabindex=\\\"-1\\\" (click)=\\\"toggleRow(item.index, item.data)\\\"></a>\\n            </td>\\n            <td\\n                kendoGridCell\\n                    [rowIndex]=\\\"item.index\\\"\\n                    [columnIndex]=\\\"lockedColumnsCount + columnIndex\\\"\\n                    [attr.data-kendo-grid-column-index]=\\\"lockedColumnsCount + columnIndex\\\"\\n                    [column]=\\\"column\\\"\\n                    [dataItem]=\\\"item.data\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                    [logicalColIndex]=\\\"logicalColIndex(column)\\\"\\n                    [dataRowIndex]=\\\"item.index\\\"\\n                    [dataItem]=\\\"item.data\\\"\\n                    [colIndex]=\\\"columnIndex\\\"\\n                    [colSpan]=\\\"column.colspan\\\"\\n                    role=\\\"gridcell\\\" aria-selected=\\\"false\\\"\\n                [ngClass]=\\\"column.cssClass\\\"\\n                [class.k-grid-edit-cell]=\\\"isEditingCell(item.index, column)\\\"\\n                [ngStyle]=\\\"column.style\\\"\\n                [attr.colspan]=\\\"column.colspan\\\"\\n                [class.k-state-selected]=\\\"cellSelectionService.isCellSelected(item, column)\\\"\\n                *ngFor=\\\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\\\">\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"isDataItem(item) && isInExpandedGroup(item) && detailTemplate?.templateRef &&\\n            detailTemplate.showIf(item.data, item.index) && isExpanded(item)\\\"\\n            class=\\\"k-detail-row\\\"\\n            [class.k-alt]=\\\"isOdd(item)\\\"\\n            kendoGridLogicalRow\\n                [dataRowIndex]=\\\"item.index\\\"\\n                [dataItem]=\\\"item.data\\\"\\n                [logicalRowIndex]=\\\"logicalRowIndex(rowIndex) + 1\\\"\\n                [logicalSlaveRow]=\\\"false\\\"\\n                [logicalCellsCount]=\\\"1\\\"\\n            >\\n            <td class=\\\"k-group-cell\\\" *ngFor=\\\"let g of groups\\\"></td>\\n            <td class=\\\"k-hierarchy-cell\\\"></td>\\n            <td class=\\\"k-detail-cell\\\"\\n                [attr.colspan]=\\\"columnsSpan\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"logicalRowIndex(rowIndex) + 1\\\"\\n                    [logicalColIndex]=\\\"0\\\"\\n                    [dataRowIndex]=\\\"item.index\\\"\\n                    [dataItem]=\\\"item.data\\\"\\n                    [colIndex]=\\\"0\\\"\\n                    [colSpan]=\\\"allColumnsSpan + 1\\\"\\n                    role=\\\"gridcell\\\" aria-selected=\\\"false\\\"\\n                >\\n                <ng-template\\n                    [ngTemplateOutlet]=\\\"detailTemplate.templateRef\\\"\\n                    [ngTemplateOutletContext]=\\\"{\\n                        dataItem: item.data,\\n                        rowIndex: item.index,\\n                        $implicit: item.data\\n                    }\\\">\\n                </ng-template>\\n            </td>\\n        </tr>\\n        <tr *ngIf=\\\"isFooter(item) && (isInExpandedGroup(item) || (showGroupFooters && isParentGroupExpanded(item)))\\n            && !item.data.hideFooter\\\"\\n            class=\\\"k-group-footer\\\"\\n            kendoGridLogicalRow\\n                [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                [logicalSlaveRow]=\\\"lockedColumnsCount > 0\\\"\\n                [logicalCellsCount]=\\\"columns.length\\\"\\n                [logicalSlaveCellsCount]=\\\"unlockedColumnsCount\\\">\\n            <ng-template [ngIf]=\\\"!skipGroupDecoration\\\">\\n                <td class=\\\"k-group-cell\\\" *ngFor=\\\"let g of groups\\\"></td>\\n            </ng-template>\\n            <td class=\\\"k-hierarchy-cell\\\"\\n                *ngIf=\\\"detailTemplate?.templateRef\\\"\\n                kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                    [logicalColIndex]=\\\"0\\\"\\n                    aria-selected=\\\"false\\\"\\n                >\\n            </td>\\n            <td kendoGridLogicalCell\\n                    [logicalRowIndex]=\\\"logicalRowIndex(rowIndex)\\\"\\n                    [logicalColIndex]=\\\"logicalColIndex(column)\\\"\\n                [attr.data-skip]=\\\"skipGroupDecoration\\\"\\n                *ngFor=\\\"let column of footerColumns; let columnIndex = index; trackBy: trackByColumns;\\\">\\n                <ng-template\\n                    [templateContext]=\\\"{\\n                        templateRef: column.groupFooterTemplateRef,\\n                        group: item.data,\\n                        field: column.field,\\n                        column: column,\\n                        aggregates: item.data?.aggregates,\\n                        $implicit: item.data?.aggregates\\n                    }\\\">\\n                </ng-template>\\n           </td>\\n        </tr>\\n    </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: DetailsService\n    }, {\n      type: GroupsService\n    }, {\n      type: ChangeNotificationService\n    }, {\n      type: EditService\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }, {\n      type: Renderer2\n    }, {\n      type: ElementRef\n    }, {\n      type: DomEventsService\n    }, {\n      type: SelectionService\n    }, {\n      type: CellSelectionService\n    }, {\n      type: ColumnInfoService\n    }, {\n      type: NavigationService\n    }];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    skip: [{\n      type: Input\n    }],\n    noRecordsText: [{\n      type: Input\n    }],\n    isLocked: [{\n      type: Input\n    }],\n    skipGroupDecoration: [{\n      type: Input\n    }],\n    showGroupFooters: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    totalColumnsCount: [{\n      type: Input\n    }],\n    trackBy: [{\n      type: Input\n    }],\n    rowClass: [{\n      type: Input\n    }],\n    allColumns: [{\n      type: Input\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    noRecordsTemplate: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }],\n    selectable: [{\n      type: Input\n    }],\n    filterable: [{\n      type: Input\n    }],\n    virtualColumns: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar CellComponent = /*#__PURE__*/function () {\n  function CellComponent(editService, idService, cellContext) {\n    _classCallCheck(this, CellComponent);\n\n    this.editService = editService;\n    this.idService = idService;\n    this.cellContext = cellContext;\n    this.isNew = false;\n    this._templateContext = {};\n    this._editTemplateContext = {};\n  }\n\n  _createClass(CellComponent, [{\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      this.updateCellContext();\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(_changes) {\n      this.updateTemplateContext();\n    }\n  }, {\n    key: \"isCommand\",\n    value: function isCommand(column) {\n      return column instanceof CommandColumnComponent;\n    }\n  }, {\n    key: \"isFieldEditable\",\n    value: function isFieldEditable(editContext, column) {\n      if (!isPresent(editContext)) {\n        return false;\n      }\n\n      if (isPresent(column.editTemplate)) {\n        return true;\n      }\n\n      return isPresent(editContext.group) && isPresent(editContext.group.get(column.field));\n    }\n  }, {\n    key: \"updateCellContext\",\n    value: function updateCellContext() {\n      if (this.cellContext) {\n        this.cellContext.rowIndex = this._rowIndex;\n      }\n    }\n  }, {\n    key: \"updateTemplateContext\",\n    value: function updateTemplateContext() {\n      if (!this.column.templateRef) {\n        return;\n      }\n\n      var context = this._templateContext;\n      context.isNew = this.isNew;\n      context.column = this.column;\n      context.dataItem = this.dataItem;\n      context.rowIndex = this.rowIndex;\n      context.columnIndex = this.columnIndex;\n      context.$implicit = this.dataItem;\n    }\n  }, {\n    key: \"commandCellClass\",\n    get: function get() {\n      return this.isCommand(this.column);\n    }\n  }, {\n    key: \"rowIndex\",\n    set: function set(index) {\n      this._rowIndex = index;\n      this.updateCellContext();\n    },\n    get: function get() {\n      return this._rowIndex;\n    }\n  }, {\n    key: \"isEdited\",\n    get: function get() {\n      if (!(this.editService.isEditing() || this.isNew) || !this.isColumnEditable) {\n        return false;\n      }\n\n      var editContext = this.editService.columnContext(this.rowIndex, this.column);\n      return this.isFieldEditable(editContext, this.column);\n    }\n  }, {\n    key: \"formGroup\",\n    get: function get() {\n      return this.editService.context(this.rowIndex).group;\n    }\n  }, {\n    key: \"templateContext\",\n    get: function get() {\n      return this._templateContext;\n    }\n  }, {\n    key: \"editTemplateContext\",\n    get: function get() {\n      this._editTemplateContext.$implicit = this.formGroup;\n      this._editTemplateContext.isNew = this.isNew;\n      this._editTemplateContext.column = this.column;\n      this._editTemplateContext.dataItem = this.dataItem;\n      this._editTemplateContext.formGroup = this.formGroup;\n      this._editTemplateContext.rowIndex = this.rowIndex;\n      return this._editTemplateContext;\n    }\n  }, {\n    key: \"format\",\n    get: function get() {\n      if (isColumnComponent(this.column) && !isNullOrEmptyString(this.column.format)) {\n        return extractFormat(this.column.format);\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"isBoundColumn\",\n    get: function get() {\n      return this.column.field && !this.column.templateRef;\n    }\n  }, {\n    key: \"isCheckboxColumn\",\n    get: function get() {\n      return _isCheckboxColumn(this.column) && !this.column.templateRef;\n    }\n  }, {\n    key: \"selectionCheckboxId\",\n    get: function get() {\n      return this.idService.selectionCheckboxId(this.rowIndex);\n    }\n  }, {\n    key: \"isSpanColumn\",\n    get: function get() {\n      return isSpanColumn(this.column) && !this.column.templateRef;\n    }\n  }, {\n    key: \"childColumns\",\n    get: function get() {\n      return columnsToRender([this.column]);\n    }\n  }, {\n    key: \"isColumnEditable\",\n    get: function get() {\n      if (!this.column || this.isCommand(this.column)) {\n        return false;\n      }\n\n      return this.column.editable !== false;\n    }\n  }]);\n\n  return CellComponent;\n}();\n\nCellComponent.ɵfac = function CellComponent_Factory(t) {\n  return new (t || CellComponent)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(IdService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT, 8));\n};\n\nCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CellComponent,\n  selectors: [[\"\", \"kendoGridCell\", \"\"]],\n  hostVars: 2,\n  hostBindings: function CellComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-command-cell\", ctx.commandCellClass);\n    }\n  },\n  inputs: {\n    isNew: \"isNew\",\n    rowIndex: \"rowIndex\",\n    column: \"column\",\n    columnIndex: \"columnIndex\",\n    dataItem: \"dataItem\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  attrs: _c161,\n  decls: 3,\n  vars: 3,\n  consts: [[3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"ngIf\", \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"k-checkbox\", 3, \"kendoGridSelectionCheckbox\"], [1, \"k-checkbox-label\"], [4, \"ngIf\"], [3, \"ngSwitch\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"checkbox\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchCase\"], [\"type\", \"text\", \"class\", \"k-textbox\", \"kendoGridFocusable\", \"\", 3, \"formControl\", 4, \"ngSwitchDefault\"], [\"kendoGridFocusable\", \"\", 3, \"format\", \"formControl\"], [\"type\", \"checkbox\", \"kendoGridFocusable\", \"\", 3, \"formControl\"], [\"type\", \"text\", \"kendoGridFocusable\", \"\", 1, \"k-textbox\", 3, \"formControl\"]],\n  template: function CellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementContainerStart(0, 0);\n      ɵngcc0.ɵɵtemplate(1, CellComponent_ng_container_1_Template, 5, 6, \"ng-container\", 1);\n      ɵngcc0.ɵɵtemplate(2, CellComponent_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n      ɵngcc0.ɵɵelementContainerEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.isEdited);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    }\n  },\n  directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf, FocusableDirective, SelectionCheckboxDirective, ɵngcc1.NgSwitchDefault, ɵngcc3.NumericTextBoxComponent, ɵngcc4.NgControlStatus, ɵngcc4.FormControlDirective, ɵngcc6.DatePickerComponent, ɵngcc4.CheckboxControlValueAccessor, ɵngcc4.DefaultValueAccessor],\n  pipes: [FieldAccessorPipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCellComponent.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: IdService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }];\n};\n\nCellComponent.propDecorators = {\n  commandCellClass: [{\n    type: HostBinding,\n    args: ['class.k-command-cell']\n  }],\n  column: [{\n    type: Input\n  }],\n  columnIndex: [{\n    type: Input\n  }],\n  isNew: [{\n    type: Input\n  }],\n  rowIndex: [{\n    type: Input\n  }],\n  dataItem: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CellComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridCell]',\n      template: \"\\n        <ng-container [ngSwitch]=\\\"isEdited\\\">\\n            <ng-container *ngSwitchCase=\\\"false\\\">\\n                <ng-template [ngIf]=\\\"column.templateRef\\\"\\n                    [ngTemplateOutlet]=\\\"column.templateRef\\\"\\n                    [ngTemplateOutletContext]=\\\"templateContext\\\">\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"isSpanColumn\\\">\\n                    <ng-template ngFor let-childColumn [ngForOf]=\\\"childColumns\\\">\\n                        {{ dataItem | valueOf: childColumn.field: childColumn.format}}\\n                    </ng-template>\\n                </ng-template>\\n                <ng-template [ngIf]=\\\"isBoundColumn\\\">{{ dataItem | valueOf: column.field: column.format}}</ng-template>\\n                <ng-template [ngIf]=\\\"isCheckboxColumn && !isNew\\\">\\n                    <input class=\\\"k-checkbox\\\" [kendoGridSelectionCheckbox]=\\\"rowIndex\\\" [attr.id]=\\\"selectionCheckboxId\\\"><label class=\\\"k-checkbox-label\\\" [attr.for]=\\\"selectionCheckboxId\\\"></label>\\n                </ng-template>\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"true\\\">\\n                <ng-template\\n                    *ngIf=\\\"column.editTemplateRef\\\"\\n                    [ngTemplateOutlet]=\\\"column.editTemplateRef\\\"\\n                    [ngTemplateOutletContext]=\\\"editTemplateContext\\\">\\n                </ng-template>\\n                <ng-container [ngSwitch]=\\\"column.editor\\\" *ngIf=\\\"!column.editTemplateRef\\\">\\n                    <kendo-numerictextbox\\n                        *ngSwitchCase=\\\"'numeric'\\\"\\n                        [format]=\\\"format\\\"\\n                        [formControl]=\\\"formGroup.get(column.field)\\\"\\n                        kendoGridFocusable\\n                    ></kendo-numerictextbox>\\n\\n                    <kendo-datepicker\\n                        *ngSwitchCase=\\\"'date'\\\"\\n                        [format]=\\\"format\\\"\\n                        [formControl]=\\\"formGroup.get(column.field)\\\"\\n                        kendoGridFocusable\\n                    ></kendo-datepicker>\\n\\n                    <input\\n                        *ngSwitchCase=\\\"'boolean'\\\"\\n                        type=\\\"checkbox\\\"\\n                        [formControl]=\\\"formGroup.get(column.field)\\\"\\n                        kendoGridFocusable\\n                    />\\n\\n                    <input\\n                        *ngSwitchDefault\\n                        type=\\\"text\\\"\\n                        class=\\\"k-textbox\\\"\\n                        [formControl]=\\\"formGroup.get(column.field)\\\"\\n                        kendoGridFocusable\\n                    />\\n                </ng-container>\\n            </ng-container>\\n        </ng-container>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: IdService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }];\n  }, {\n    isNew: [{\n      type: Input\n    }],\n    commandCellClass: [{\n      type: HostBinding,\n      args: ['class.k-command-cell']\n    }],\n    rowIndex: [{\n      type: Input\n    }],\n    column: [{\n      type: Input\n    }],\n    columnIndex: [{\n      type: Input\n    }],\n    dataItem: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the `edit` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`edit`]({% slug api_grid_gridcomponent %}#toc-edit) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n */\n\n\nvar EditCommandDirective = /*#__PURE__*/function (_Button) {\n  _inherits(EditCommandDirective, _Button);\n\n  var _super65 = _createSuper(EditCommandDirective);\n\n  function EditCommandDirective(editService, cellContext, element, renderer, localization, ngZone) {\n    var _this132;\n\n    _classCallCheck(this, EditCommandDirective);\n\n    _this132 = _super65.call(this, element, renderer, null, localization, ngZone);\n    _this132.editService = editService;\n    _this132.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    _this132.commandClass = true;\n    return _this132;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(EditCommandDirective, [{\n    key: \"onClick\",\n\n    /**\n     * @hidden\n     */\n    value: function onClick(e) {\n      e.preventDefault();\n      this.editService.beginEdit(this.rowIndex);\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.isEdited ? 'none' : '';\n    }\n  }]);\n\n  return EditCommandDirective;\n}(Button);\n\nEditCommandDirective.ɵfac = function EditCommandDirective_Factory(t) {\n  return new (t || EditCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nEditCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EditCommandDirective,\n  selectors: [[\"\", \"kendoGridEditCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function EditCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function EditCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n      ɵngcc0.ɵɵclassProp(\"k-grid-edit-command\", ctx.commandClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nEditCommandDirective.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nEditCommandDirective.propDecorators = {\n  visible: [{\n    type: HostBinding,\n    args: ['style.display']\n  }],\n  commandClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-edit-command']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(EditCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridEditCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-edit-command']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `cancel` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`cancel`]({% slug api_grid_gridcomponent %}#toc-cancel) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with the `kendoGridCancelCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridCancelCommand>Cancel changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridCancelCommand>{{isNew ? 'Discard' : 'Cancel changes'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nvar CancelCommandDirective = /*#__PURE__*/function (_Button2) {\n  _inherits(CancelCommandDirective, _Button2);\n\n  var _super66 = _createSuper(CancelCommandDirective);\n\n  function CancelCommandDirective(editService, cellContext, element, renderer, localization, ngZone) {\n    var _this133;\n\n    _classCallCheck(this, CancelCommandDirective);\n\n    _this133 = _super66.call(this, element, renderer, null, localization, ngZone);\n    _this133.editService = editService;\n    _this133.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    _this133.commandClass = true;\n    return _this133;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(CancelCommandDirective, [{\n    key: \"onClick\",\n\n    /**\n     * @hidden\n     */\n    value: function onClick(e) {\n      e.preventDefault();\n\n      if (this.isEdited) {\n        this.editService.endEdit(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return !this.isEdited ? 'none' : '';\n    }\n  }]);\n\n  return CancelCommandDirective;\n}(Button);\n\nCancelCommandDirective.ɵfac = function CancelCommandDirective_Factory(t) {\n  return new (t || CancelCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nCancelCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CancelCommandDirective,\n  selectors: [[\"\", \"kendoGridCancelCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function CancelCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CancelCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n      ɵngcc0.ɵɵclassProp(\"k-grid-cancel-command\", ctx.commandClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nCancelCommandDirective.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nCancelCommandDirective.propDecorators = {\n  visible: [{\n    type: HostBinding,\n    args: ['style.display']\n  }],\n  commandClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-cancel-command']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CancelCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridCancelCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-cancel-command']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `save` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`save`]({% slug api_grid_gridcomponent %}#toc-save) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with `kendoGridSaveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridSaveCommand>Save changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridSaveCommand>{{isNew ? 'Add' : 'Update'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nvar SaveCommandDirective = /*#__PURE__*/function (_Button3) {\n  _inherits(SaveCommandDirective, _Button3);\n\n  var _super67 = _createSuper(SaveCommandDirective);\n\n  function SaveCommandDirective(editService, cellContext, element, renderer, localization, ngZone) {\n    var _this134;\n\n    _classCallCheck(this, SaveCommandDirective);\n\n    _this134 = _super67.call(this, element, renderer, null, localization, ngZone);\n    _this134.editService = editService;\n    _this134.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    _this134.commandClass = true;\n    return _this134;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(SaveCommandDirective, [{\n    key: \"onClick\",\n\n    /**\n     * @hidden\n     */\n    value: function onClick(e) {\n      e.preventDefault();\n\n      if (this.isEdited) {\n        this.editService.save(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return !this.isEdited ? 'none' : '';\n    }\n  }]);\n\n  return SaveCommandDirective;\n}(Button);\n\nSaveCommandDirective.ɵfac = function SaveCommandDirective_Factory(t) {\n  return new (t || SaveCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nSaveCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: SaveCommandDirective,\n  selectors: [[\"\", \"kendoGridSaveCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function SaveCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function SaveCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n      ɵngcc0.ɵɵclassProp(\"k-grid-save-command\", ctx.commandClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nSaveCommandDirective.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nSaveCommandDirective.propDecorators = {\n  visible: [{\n    type: HostBinding,\n    args: ['style.display']\n  }],\n  commandClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-save-command']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(SaveCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridSaveCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-save-command']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the `remove` command of the Grid. You can apply this directive to any `button` element\n * inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`remove` event]({% slug api_grid_gridcomponent %}#toc-remove)\n * is triggered ([see example]({% slug editing_reactive_forms_grid %})).\n *\n * > When the row is in the edit mode, the button with the `kendoGridRemoveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridRemoveCommand>Remove row</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\n\n\nvar RemoveCommandDirective = /*#__PURE__*/function (_Button4) {\n  _inherits(RemoveCommandDirective, _Button4);\n\n  var _super68 = _createSuper(RemoveCommandDirective);\n\n  function RemoveCommandDirective(editService, cellContext, element, renderer, localization, ngZone) {\n    var _this135;\n\n    _classCallCheck(this, RemoveCommandDirective);\n\n    _this135 = _super68.call(this, element, renderer, null, localization, ngZone);\n    _this135.editService = editService;\n    _this135.cellContext = cellContext;\n    /**\n     * @hidden\n     */\n\n    _this135.commandClass = true;\n    return _this135;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(RemoveCommandDirective, [{\n    key: \"onClick\",\n\n    /**\n     * @hidden\n     */\n    value: function onClick(e) {\n      e.preventDefault();\n      this.editService.remove(this.rowIndex);\n    }\n  }, {\n    key: \"ngDoCheck\",\n    value: function ngDoCheck() {\n      if (this.cellContext) {\n        this.rowIndex = this.cellContext.rowIndex;\n        this.isEdited = this.editService.isEdited(this.rowIndex);\n      }\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return this.isEdited ? 'none' : '';\n    }\n  }]);\n\n  return RemoveCommandDirective;\n}(Button);\n\nRemoveCommandDirective.ɵfac = function RemoveCommandDirective_Factory(t) {\n  return new (t || RemoveCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(CELL_CONTEXT), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nRemoveCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RemoveCommandDirective,\n  selectors: [[\"\", \"kendoGridRemoveCommand\", \"\"]],\n  hostVars: 4,\n  hostBindings: function RemoveCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function RemoveCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"display\", ctx.visible);\n      ɵngcc0.ɵɵclassProp(\"k-grid-remove-command\", ctx.commandClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nRemoveCommandDirective.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [CELL_CONTEXT]\n    }]\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nRemoveCommandDirective.propDecorators = {\n  visible: [{\n    type: HostBinding,\n    args: ['style.display']\n  }],\n  commandClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-remove-command']\n  }],\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(RemoveCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridRemoveCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [CELL_CONTEXT]\n      }]\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-remove-command']\n    }],\n    visible: [{\n      type: HostBinding,\n      args: ['style.display']\n    }],\n\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n/**\n * Represents the command for adding a new item to the Grid. You can apply this directive to any\n * `button` element inside a [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`add`]({% slug api_grid_gridcomponent %}#toc-add) event is triggered\n * ([see example]({% slug editing_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *    <ng-template kendoGridToolbarTemplate>\n *       <button kendoGridAddCommand>Add new</button>\n *    </ng-template>\n * </kendo-grid>\n * ```\n */\n\n\nvar AddCommandDirective = /*#__PURE__*/function (_Button5) {\n  _inherits(AddCommandDirective, _Button5);\n\n  var _super69 = _createSuper(AddCommandDirective);\n\n  function AddCommandDirective(editService, element, renderer, localization, ngZone) {\n    var _this136;\n\n    _classCallCheck(this, AddCommandDirective);\n\n    _this136 = _super69.call(this, element, renderer, null, localization, ngZone);\n    _this136.editService = editService;\n    return _this136;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(AddCommandDirective, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      e.preventDefault();\n      this.editService.beginAdd();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"commandClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return AddCommandDirective;\n}(Button);\n\nAddCommandDirective.ɵfac = function AddCommandDirective_Factory(t) {\n  return new (t || AddCommandDirective)(ɵngcc0.ɵɵdirectiveInject(EditService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nAddCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: AddCommandDirective,\n  selectors: [[\"\", \"kendoGridAddCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function AddCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function AddCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-add-command\", ctx.commandClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nAddCommandDirective.ctorParameters = function () {\n  return [{\n    type: EditService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nAddCommandDirective.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  commandClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-add-command']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AddCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridAddCommand]'\n    }]\n  }], function () {\n    return [{\n      type: EditService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    commandClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-add-command']\n    }]\n  });\n})();\n\nvar exported$1 = [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective];\nvar importedModules$3 = [CommonModule, ReactiveFormsModule, FormsModule, SharedModule, GroupModule, NumericTextBoxModule, DatePickerModule];\n/**\n * @hidden\n */\n\nvar BodyModule = /*#__PURE__*/function () {\n  function BodyModule() {\n    _classCallCheck(this, BodyModule);\n  }\n\n  _createClass(BodyModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective];\n    }\n  }]);\n\n  return BodyModule;\n}();\n\nBodyModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: BodyModule\n});\nBodyModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function BodyModule_Factory(t) {\n    return new (t || BodyModule)();\n  },\n  imports: [[].concat(importedModules$3)]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BodyModule, {\n    declarations: [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective],\n    imports: [CommonModule, ReactiveFormsModule, FormsModule, SharedModule, GroupModule, NumericTextBoxModule, DatePickerModule],\n    exports: [CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, EditTemplateDirective, TableBodyComponent, NoRecordsTemplateDirective, CellComponent, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(BodyModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exported$1],\n      exports: [exported$1],\n      imports: [].concat(importedModules$3)\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar FooterComponent = /*#__PURE__*/function () {\n  function FooterComponent() {\n    _classCallCheck(this, FooterComponent);\n\n    this.columns = [];\n    this.groups = [];\n    this.lockedColumnsCount = 0;\n  }\n\n  _createClass(FooterComponent, [{\n    key: \"footerClass\",\n    get: function get() {\n      return !this.scrollable;\n    }\n  }, {\n    key: \"columnsToRender\",\n    get: function get() {\n      return columnsToRender(this.columns || []);\n    }\n  }]);\n\n  return FooterComponent;\n}();\n\nFooterComponent.ɵfac = function FooterComponent_Factory(t) {\n  return new (t || FooterComponent)();\n};\n\nFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: FooterComponent,\n  selectors: [[\"\", \"kendoGridFooter\", \"\"]],\n  hostVars: 2,\n  hostBindings: function FooterComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-footer\", ctx.footerClass);\n    }\n  },\n  inputs: {\n    columns: \"columns\",\n    groups: \"groups\",\n    lockedColumnsCount: \"lockedColumnsCount\",\n    detailTemplate: \"detailTemplate\",\n    scrollable: \"scrollable\"\n  },\n  attrs: _c162,\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"ngIf\"], [3, \"k-group-cell\", 4, \"ngFor\", \"ngForOf\"], [3, \"k-hierarchy-cell\", 4, \"ngIf\"], [3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\", \"ngStyle\"], [3, \"templateContext\"]],\n  template: function FooterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, FooterComponent_ng_template_0_Template, 4, 5, \"ng-template\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", true);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgStyle, TemplateContextDirective],\n  encapsulation: 2\n});\nFooterComponent.propDecorators = {\n  columns: [{\n    type: Input\n  }],\n  groups: [{\n    type: Input\n  }],\n  detailTemplate: [{\n    type: Input\n  }],\n  scrollable: [{\n    type: Input\n  }],\n  lockedColumnsCount: [{\n    type: Input\n  }],\n  footerClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-footer']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FooterComponent, [{\n    type: Component,\n    args: [{\n      selector: '[kendoGridFooter]',\n      template: \"\\n    <ng-template [ngIf]=\\\"true\\\">\\n        <tr [class.k-footer-template]=\\\"true\\\">\\n            <td\\n                [class.k-group-cell]=\\\"true\\\"\\n                *ngFor=\\\"let g of groups\\\">\\n            </td>\\n            <td\\n                [class.k-hierarchy-cell]=\\\"true\\\"\\n                *ngIf=\\\"detailTemplate?.templateRef\\\">\\n            </td>\\n            <td\\n                [ngClass]=\\\"column.footerClass\\\"\\n                [ngStyle]=\\\"column.footerStyle\\\"\\n                *ngFor=\\\"let column of columnsToRender; let columnIndex = index\\\">\\n                <ng-template\\n                    [templateContext]=\\\"{\\n                        templateRef: column.footerTemplateRef,\\n                        columnIndex: lockedColumnsCount + columnIndex,\\n                        column: column,\\n                        $implicit: column\\n                    }\\\">\\n                </ng-template>\\n            </td>\\n        </tr>\\n    </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    columns: [{\n      type: Input\n    }],\n    groups: [{\n      type: Input\n    }],\n    lockedColumnsCount: [{\n      type: Input\n    }],\n    footerClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-footer']\n    }],\n    detailTemplate: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }]\n  });\n})();\n\nvar exportedModules$3 = [FooterComponent];\nvar importedModules$4 = [CommonModule, SharedModule];\n/**\n * @hidden\n */\n\nvar FooterModule = /*#__PURE__*/function () {\n  function FooterModule() {\n    _classCallCheck(this, FooterModule);\n  }\n\n  _createClass(FooterModule, null, [{\n    key: \"exports\",\n    value: function exports() {\n      return [];\n    }\n  }]);\n\n  return FooterModule;\n}();\n\nFooterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: FooterModule\n});\nFooterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function FooterModule_Factory(t) {\n    return new (t || FooterModule)();\n  },\n  imports: [[].concat(importedModules$4)]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FooterModule, {\n    declarations: [FooterComponent],\n    imports: [CommonModule, SharedModule],\n    exports: [FooterComponent]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(FooterModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [exportedModules$3],\n      exports: [exportedModules$3],\n      imports: [].concat(importedModules$4)\n    }]\n  }], null, null);\n})();\n/**\n * @hidden\n */\n\n\nvar ToolbarComponent = /*#__PURE__*/function () {\n  function ToolbarComponent(grid) {\n    _classCallCheck(this, ToolbarComponent);\n\n    this.grid = grid;\n    this.context = {};\n  }\n\n  _createClass(ToolbarComponent, [{\n    key: \"classNames\",\n    get: function get() {\n      return 'k-header k-grid-toolbar';\n    }\n  }, {\n    key: \"position\",\n    set: function set(value) {\n      this.context.position = value;\n    }\n  }, {\n    key: \"toolbarTemplateRef\",\n    get: function get() {\n      return this.grid.toolbarTemplate ? this.grid.toolbarTemplate.templateRef : undefined;\n    }\n  }]);\n\n  return ToolbarComponent;\n}();\n\nToolbarComponent.ɵfac = function ToolbarComponent_Factory(t) {\n  return new (t || ToolbarComponent)(ɵngcc0.ɵɵdirectiveInject(GridComponent));\n};\n\nToolbarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ToolbarComponent,\n  selectors: [[\"kendo-grid-toolbar\"]],\n  hostVars: 2,\n  hostBindings: function ToolbarComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMap(ctx.classNames);\n    }\n  },\n  inputs: {\n    position: \"position\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function ToolbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, ToolbarComponent_0_Template, 1, 2, undefined, 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.toolbarTemplateRef);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nToolbarComponent.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }];\n};\n\nToolbarComponent.propDecorators = {\n  classNames: [{\n    type: HostBinding,\n    args: ['class']\n  }],\n  position: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ToolbarComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-toolbar',\n      template: \"\\n        <ng-template\\n            *ngIf=\\\"toolbarTemplateRef\\\"\\n            [ngTemplateOutlet]=\\\"toolbarTemplateRef\\\"\\n            [ngTemplateOutletContext]=\\\"context\\\"\\n            >\\n        </ng-template>\\n    \"\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }];\n  }, {\n    classNames: [{\n      type: HostBinding,\n      args: ['class']\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar LocalEditService = /*#__PURE__*/function () {\n  function LocalEditService(grid, localDataChangesService) {\n    _classCallCheck(this, LocalEditService);\n\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n  }\n\n  _createClass(LocalEditService, [{\n    key: \"create\",\n    value: function create(item) {\n      if (this.hasLocalData && this.grid.skip) {\n        this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n      } else {\n        this.data.unshift(item);\n      }\n\n      this.dataChanged();\n    }\n  }, {\n    key: \"update\",\n    value: function update(_item) {} // tslint:disable-line:no-empty\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var data = this.data;\n\n      for (var idx = 0; idx < data.length; idx++) {\n        if (item === data[idx]) {\n          data.splice(idx, 1);\n          this.dataChanged({\n            action: 'remove',\n            item: item\n          });\n          break;\n        }\n      }\n    }\n  }, {\n    key: \"assignValues\",\n    value: function assignValues(target, source) {\n      Object.assign(target, source);\n    }\n  }, {\n    key: \"dataChanged\",\n    value: function dataChanged() {\n      var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (this.hasLocalData) {\n        this.localDataChangesService.changes.emit(args);\n      }\n    }\n  }, {\n    key: \"hasLocalData\",\n    get: function get() {\n      return Array.isArray(this.localDataChangesService.data);\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      if (this.hasLocalData) {\n        return this.localDataChangesService.data;\n      }\n\n      var data = this.grid.data;\n\n      if (Array.isArray(data)) {\n        return data;\n      }\n\n      if (isDevMode()) {\n        throw new Error('The default edit service of the editing directives works only when binding to plain array.' + 'Please provide an editService.');\n      }\n\n      return [];\n    }\n  }]);\n\n  return LocalEditService;\n}();\n/**\n * @hidden\n */\n\n\nvar EditingDirectiveBase = /*#__PURE__*/function () {\n  function EditingDirectiveBase(grid, localDataChangesService) {\n    _classCallCheck(this, EditingDirectiveBase);\n\n    this.grid = grid;\n    this.localDataChangesService = localDataChangesService;\n    this.defaultEditService = this.createDefaultService();\n  } // Consider adding support for the dependency injection of the service to allow for specifying a generic service without code.\n  // The Input should still be kept.\n\n  /**\n   * The edit service that will handle the operations.\n   */\n\n\n  _createClass(EditingDirectiveBase, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngOnInit() {\n      this.subscriptions = this.grid.add.subscribe(this.addHandler.bind(this));\n      this.subscriptions.add(this.grid.remove.subscribe(this.removeHandler.bind(this)));\n      this.subscriptions.add(this.grid.cancel.subscribe(this.cancelHandler.bind(this)));\n      this.subscriptions.add(this.grid.save.subscribe(this.saveHandler.bind(this)));\n      this.subscriptions.add(this.grid.dataStateChange.subscribe(this.onStateChange.bind(this)));\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n  }, {\n    key: \"createDefaultService\",\n    value: function createDefaultService() {\n      return new LocalEditService(this.grid, this.localDataChangesService);\n    }\n  }, {\n    key: \"addHandler\",\n    value: function addHandler() {\n      this.grid.addRow(this.createModel({\n        isNew: true\n      }));\n    }\n  }, {\n    key: \"saveHandler\",\n    value: function saveHandler(args) {\n      var item = this.saveModel(args);\n\n      if (item) {\n        if (args.isNew) {\n          this.editService.create(item);\n        } else {\n          this.editService.update(item);\n        }\n      }\n\n      this.grid.closeRow(args.rowIndex);\n    }\n  }, {\n    key: \"cancelHandler\",\n    value: function cancelHandler(_ref80) {\n      var rowIndex = _ref80.rowIndex;\n      this.closeEditor(rowIndex);\n    }\n  }, {\n    key: \"removeHandler\",\n    value: function removeHandler(_ref81) {\n      var _this137 = this;\n\n      var dataItem = _ref81.dataItem;\n\n      var removeItem = function removeItem(shouldRemove) {\n        if (shouldRemove) {\n          _this137.editService.remove(dataItem);\n        }\n      };\n\n      if (this.removeConfirmation) {\n        var result = this.removeConfirmation(dataItem);\n\n        if (result instanceof Promise) {\n          result.then(removeItem);\n        } else if (result instanceof Observable) {\n          result.pipe(take(1)).subscribe(removeItem);\n        } else {\n          removeItem(result);\n        }\n      } else {\n        removeItem(true);\n      }\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange() {\n      this.closeEditor();\n    }\n  }, {\n    key: \"closeEditor\",\n    value: function closeEditor(rowIndex) {\n      this.grid.closeRow(rowIndex);\n    }\n  }, {\n    key: \"editService\",\n    set: function set(value) {\n      this.userEditService = value;\n    },\n    get: function get() {\n      return this.userEditService || this.defaultEditService;\n    }\n  }]);\n\n  return EditingDirectiveBase;\n}();\n\nEditingDirectiveBase.ɵfac = function EditingDirectiveBase_Factory(t) {\n  ɵngcc0.ɵɵinvalidFactory();\n};\n\nEditingDirectiveBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: EditingDirectiveBase,\n  inputs: {\n    editService: \"editService\",\n    removeConfirmation: \"removeConfirmation\"\n  }\n});\nEditingDirectiveBase.propDecorators = {\n  editService: [{\n    type: Input\n  }],\n  removeConfirmation: [{\n    type: Input\n  }]\n};\n/**\n * @hidden\n */\n\nvar LocalRowEditService = /*#__PURE__*/function (_LocalEditService) {\n  _inherits(LocalRowEditService, _LocalEditService);\n\n  var _super70 = _createSuper(LocalRowEditService);\n\n  function LocalRowEditService() {\n    _classCallCheck(this, LocalRowEditService);\n\n    return _super70.apply(this, arguments);\n  }\n\n  _createClass(LocalRowEditService, [{\n    key: \"update\",\n    value: function update(_item) {\n      this.dataChanged();\n    }\n  }]);\n\n  return LocalRowEditService;\n}(LocalEditService);\n/**\n * @hidden\n */\n\n\nvar RowEditingDirectiveBase = /*#__PURE__*/function (_EditingDirectiveBase) {\n  _inherits(RowEditingDirectiveBase, _EditingDirectiveBase);\n\n  var _super71 = _createSuper(RowEditingDirectiveBase);\n\n  function RowEditingDirectiveBase() {\n    _classCallCheck(this, RowEditingDirectiveBase);\n\n    return _super71.apply(this, arguments);\n  }\n\n  _createClass(RowEditingDirectiveBase, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngOnInit() {\n      _get(_getPrototypeOf(RowEditingDirectiveBase.prototype), \"ngOnInit\", this).call(this);\n\n      this.subscriptions.add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n    }\n  }, {\n    key: \"createDefaultService\",\n    value: function createDefaultService() {\n      return new LocalRowEditService(this.grid, this.localDataChangesService);\n    }\n  }, {\n    key: \"addHandler\",\n    value: function addHandler() {\n      this.closeEditor();\n\n      _get(_getPrototypeOf(RowEditingDirectiveBase.prototype), \"addHandler\", this).call(this);\n    }\n  }, {\n    key: \"editHandler\",\n    value: function editHandler(args) {\n      this.closeEditor();\n      this.rowIndex = args.rowIndex;\n      this.grid.editRow(args.rowIndex, this.createModel(args));\n    }\n  }, {\n    key: \"saveHandler\",\n    value: function saveHandler(args) {\n      _get(_getPrototypeOf(RowEditingDirectiveBase.prototype), \"saveHandler\", this).call(this, args);\n\n      this.clean();\n    }\n  }, {\n    key: \"closeEditor\",\n    value: function closeEditor() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.rowIndex;\n\n      _get(_getPrototypeOf(RowEditingDirectiveBase.prototype), \"closeEditor\", this).call(this, rowIndex);\n\n      this.clean();\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      delete this.rowIndex;\n    }\n  }]);\n\n  return RowEditingDirectiveBase;\n}(EditingDirectiveBase);\n\nRowEditingDirectiveBase.ɵfac = function RowEditingDirectiveBase_Factory(t) {\n  return ɵRowEditingDirectiveBase_BaseFactory(t || RowEditingDirectiveBase);\n};\n\nRowEditingDirectiveBase.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: RowEditingDirectiveBase,\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nvar ɵRowEditingDirectiveBase_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(RowEditingDirectiveBase);\n/**\n * A directive which encapsulates the editing operations of the Grid when using\n * the Template-Driven Angular Forms ([see example]({% slug editing_directives_grid %}#toc-the-template-directive)).\n */\n\nvar TemplateEditingDirective = /*#__PURE__*/function (_RowEditingDirectiveB) {\n  _inherits(TemplateEditingDirective, _RowEditingDirectiveB);\n\n  var _super72 = _createSuper(TemplateEditingDirective);\n\n  function TemplateEditingDirective(grid, localDataChangesService) {\n    var _this138;\n\n    _classCallCheck(this, TemplateEditingDirective);\n\n    _this138 = _super72.call(this, grid, localDataChangesService);\n    _this138.grid = grid;\n    _this138.localDataChangesService = localDataChangesService;\n    return _this138;\n  }\n\n  _createClass(TemplateEditingDirective, [{\n    key: \"editHandler\",\n    value: function editHandler(args) {\n      _get(_getPrototypeOf(TemplateEditingDirective.prototype), \"editHandler\", this).call(this, args);\n\n      this.dataItem = args.dataItem;\n      this.originalValues = {};\n      this.editService.assignValues(this.originalValues, this.dataItem);\n    }\n  }, {\n    key: \"closeEditor\",\n    value: function closeEditor(rowIndex) {\n      if (this.dataItem) {\n        this.editService.assignValues(this.dataItem, this.originalValues);\n      }\n\n      _get(_getPrototypeOf(TemplateEditingDirective.prototype), \"closeEditor\", this).call(this, rowIndex);\n    }\n  }, {\n    key: \"createModel\",\n    value: function createModel(args) {\n      if (args.isNew) {\n        return this.createNewItem();\n      }\n    }\n  }, {\n    key: \"saveModel\",\n    value: function saveModel(args) {\n      return args.dataItem;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      _get(_getPrototypeOf(TemplateEditingDirective.prototype), \"clean\", this).call(this);\n\n      delete this.dataItem;\n    }\n  }]);\n\n  return TemplateEditingDirective;\n}(RowEditingDirectiveBase);\n\nTemplateEditingDirective.ɵfac = function TemplateEditingDirective_Factory(t) {\n  return new (t || TemplateEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nTemplateEditingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TemplateEditingDirective,\n  selectors: [[\"\", \"kendoGridTemplateEditing\", \"\"]],\n  inputs: {\n    createNewItem: [\"kendoGridTemplateEditing\", \"createNewItem\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nTemplateEditingDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n\nTemplateEditingDirective.propDecorators = {\n  createNewItem: [{\n    type: Input,\n    args: ['kendoGridTemplateEditing']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TemplateEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridTemplateEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    createNewItem: [{\n      type: Input,\n      args: ['kendoGridTemplateEditing']\n    }]\n  });\n})();\n/**\n * @hidden\n */\n\n\nvar markAllAsTouched = function markAllAsTouched(control) {\n  control.markAsTouched();\n\n  if (control.hasOwnProperty('controls')) {\n    var controls = control.controls;\n\n    for (var inner in controls) {\n      if (controls.hasOwnProperty(inner)) {\n        markAllAsTouched(controls[inner]);\n      }\n    }\n  }\n};\n/**\n * A directive which encapsulates the editing operations of the Grid when using the\n * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).\n */\n\n\nvar ReactiveEditingDirective = /*#__PURE__*/function (_RowEditingDirectiveB2) {\n  _inherits(ReactiveEditingDirective, _RowEditingDirectiveB2);\n\n  var _super73 = _createSuper(ReactiveEditingDirective);\n\n  function ReactiveEditingDirective(grid, localDataChangesService) {\n    var _this139;\n\n    _classCallCheck(this, ReactiveEditingDirective);\n\n    _this139 = _super73.call(this, grid, localDataChangesService);\n    _this139.grid = grid;\n    _this139.localDataChangesService = localDataChangesService;\n    return _this139;\n  }\n\n  _createClass(ReactiveEditingDirective, [{\n    key: \"createModel\",\n    value: function createModel(args) {\n      return this.createFormGroup(args);\n    }\n  }, {\n    key: \"saveModel\",\n    value: function saveModel(_ref82) {\n      var dataItem = _ref82.dataItem,\n          formGroup = _ref82.formGroup,\n          isNew = _ref82.isNew;\n\n      if (!formGroup.dirty && !isNew) {\n        return;\n      }\n\n      if (formGroup.valid) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        return dataItem;\n      }\n\n      markAllAsTouched(formGroup);\n    }\n  }]);\n\n  return ReactiveEditingDirective;\n}(RowEditingDirectiveBase);\n\nReactiveEditingDirective.ɵfac = function ReactiveEditingDirective_Factory(t) {\n  return new (t || ReactiveEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nReactiveEditingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ReactiveEditingDirective,\n  selectors: [[\"\", \"kendoGridReactiveEditing\", \"\"]],\n  inputs: {\n    createFormGroup: [\"kendoGridReactiveEditing\", \"createFormGroup\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nReactiveEditingDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n\nReactiveEditingDirective.propDecorators = {\n  createFormGroup: [{\n    type: Input,\n    args: ['kendoGridReactiveEditing']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ReactiveEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridReactiveEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    createFormGroup: [{\n      type: Input,\n      args: ['kendoGridReactiveEditing']\n    }]\n  });\n})();\n/**\n * A directive which encapsulates the editing operations of the Grid when using the in-cell\n * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).\n */\n\n\nvar InCellEditingDirective = /*#__PURE__*/function (_EditingDirectiveBase2) {\n  _inherits(InCellEditingDirective, _EditingDirectiveBase2);\n\n  var _super74 = _createSuper(InCellEditingDirective);\n\n  function InCellEditingDirective(grid, localDataChangesService) {\n    var _this140;\n\n    _classCallCheck(this, InCellEditingDirective);\n\n    _this140 = _super74.call(this, grid, localDataChangesService);\n    _this140.grid = grid;\n    _this140.localDataChangesService = localDataChangesService;\n    return _this140;\n  } // Need mixin\n\n\n  _createClass(InCellEditingDirective, [{\n    key: \"createModel\",\n    value: function createModel(args) {\n      return this.createFormGroup(args);\n    }\n  }, {\n    key: \"saveModel\",\n    value: function saveModel(_ref83) {\n      var dataItem = _ref83.dataItem,\n          formGroup = _ref83.formGroup,\n          isNew = _ref83.isNew;\n\n      if (!formGroup.dirty && !isNew) {\n        return;\n      }\n\n      if (formGroup.valid) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        return dataItem;\n      }\n\n      markAllAsTouched(formGroup);\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      _get(_getPrototypeOf(InCellEditingDirective.prototype), \"ngOnInit\", this).call(this);\n\n      this.subscriptions.add(this.grid.cellClick.subscribe(this.cellClickHandler.bind(this)));\n      this.subscriptions.add(this.grid.cellClose.subscribe(this.cellCloseHandler.bind(this)));\n    }\n  }, {\n    key: \"removeHandler\",\n    value: function removeHandler(args) {\n      _get(_getPrototypeOf(InCellEditingDirective.prototype), \"removeHandler\", this).call(this, args);\n\n      this.grid.cancelCell();\n    }\n  }, {\n    key: \"cellClickHandler\",\n    value: function cellClickHandler(args) {\n      if (!args.isEdited && args.type !== 'contextmenu') {\n        this.grid.editCell(args.rowIndex, args.columnIndex, this.createFormGroup(args));\n      }\n    }\n  }, {\n    key: \"cellCloseHandler\",\n    value: function cellCloseHandler(args) {\n      var formGroup = args.formGroup,\n          dataItem = args.dataItem;\n\n      if (!formGroup.valid) {\n        args.preventDefault();\n      } else if (formGroup.dirty) {\n        this.editService.assignValues(dataItem, formGroup.value);\n        this.editService.update(dataItem);\n      }\n    }\n  }]);\n\n  return InCellEditingDirective;\n}(EditingDirectiveBase);\n\nInCellEditingDirective.ɵfac = function InCellEditingDirective_Factory(t) {\n  return new (t || InCellEditingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nInCellEditingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: InCellEditingDirective,\n  selectors: [[\"\", \"kendoGridInCellEditing\", \"\"]],\n  inputs: {\n    createFormGroup: [\"kendoGridInCellEditing\", \"createFormGroup\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nInCellEditingDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n\nInCellEditingDirective.propDecorators = {\n  createFormGroup: [{\n    type: Input,\n    args: ['kendoGridInCellEditing']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(InCellEditingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridInCellEditing]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    createFormGroup: [{\n      type: Input,\n      args: ['kendoGridInCellEditing']\n    }]\n  });\n})();\n\nvar hasGroups = function hasGroups(items) {\n  return items && items.length && items[0].field && items[0].items;\n};\n\nvar groupDescriptorsPresent = function groupDescriptorsPresent(descriptors) {\n  return isPresent(descriptors) && descriptors.length > 0;\n};\n\nvar _processGroups = function processGroups(data, state$$1) {\n  return _process(data, state$$1).data;\n};\n\nvar removeParentDescriptors = function removeParentDescriptors(parents, owner) {\n  return function (g) {\n    return g.field !== owner.field && !parents.some(function (y) {\n      return y.field === g.field;\n    });\n  };\n};\n\nvar findGroup = function findGroup(groupIndex, groups) {\n  var parents = [];\n  return {\n    group: groupIndex.split(\"_\").reduce(function (acc, x) {\n      var idx = parseInt(x, 10);\n\n      if (acc.items) {\n        parents.push(acc);\n        return acc.items[idx];\n      }\n\n      return isArray(acc) ? acc[idx] : acc;\n    }, groups),\n    parents: parents\n  };\n};\n\nvar findChildren = function findChildren(data, parents) {\n  var filters = parents.map(function (p) {\n    return {\n      field: p.field,\n      operator: \"eq\",\n      value: p.value\n    };\n  });\n  return filterBy(data, {\n    filters: filters,\n    logic: \"and\"\n  });\n};\n/**\n * @hidden\n */\n\n\nvar count = function count(groups) {\n  var includeFooters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return groups.reduce(function (acc, group) {\n    if (!group.skipHeader) {\n      acc++;\n    }\n\n    if (group.items) {\n      var _children = count(group.items, includeFooters);\n\n      if (includeFooters && _children && !group.hideFooter) {\n        acc++;\n      }\n\n      acc += _children;\n    }\n\n    return acc;\n  }, 0) // tslint:disable-line:align\n  ;\n};\n/**\n * @hidden\n */\n\n\nvar slice = function slice(groups, skip, take$$1) {\n  var includeFooters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  if (!isPresent(take$$1)) {\n    return groups;\n  }\n\n  var result = [];\n\n  for (var idx = 0, length = groups.length; idx < length; idx++) {\n    if (take$$1 <= 0) {\n      break;\n    }\n\n    var group = groups[idx];\n    var groupItems = group.items;\n    var itemCount = count(groupItems, includeFooters);\n\n    if (includeFooters && groupItems.length) {\n      itemCount++;\n    }\n\n    var skipHeader = skip > 0;\n\n    if (skip) {\n      skip--;\n\n      if (itemCount && skip >= itemCount) {\n        skip -= itemCount;\n        continue;\n      }\n    }\n\n    if (!skipHeader || itemCount) {\n      var items = [];\n      var hideFooter = true;\n\n      if (!skipHeader) {\n        take$$1--;\n      }\n\n      if (take$$1) {\n        if (hasGroups(groupItems)) {\n          var _children2 = slice(groupItems, skip, take$$1, includeFooters);\n\n          items.push.apply(items, _toConsumableArray(_children2));\n          take$$1 -= count(_children2, includeFooters);\n        } else {\n          items.push.apply(items, _toConsumableArray(groupItems.slice(skip, Math.min(skip + take$$1, groupItems.length))));\n          take$$1 -= items.length;\n        }\n\n        if (take$$1 && includeFooters) {\n          hideFooter = false;\n          take$$1--;\n        }\n\n        skip = 0;\n      }\n\n      result.push({\n        aggregates: group.aggregates,\n        field: group.field,\n        hideFooter: hideFooter,\n        items: items,\n        offset: idx,\n        skipHeader: skipHeader,\n        value: group.value\n      });\n    }\n  }\n\n  return result;\n};\n\nvar skippedHeaders = function skippedHeaders(groupItem) {\n  var total = 0;\n\n  while (groupItem) {\n    if (groupItem.skipHeader) {\n      total++;\n    }\n\n    groupItem = groupItem.items && groupItem.items[0] || null;\n  }\n\n  return total;\n};\n/**\n * A directive which encapsulates the in-memory handling of grouping with virtual scrolling.\n */\n\n\nvar GroupBindingDirective = /*#__PURE__*/function (_DataBindingDirective) {\n  _inherits(GroupBindingDirective, _DataBindingDirective);\n\n  var _super75 = _createSuper(GroupBindingDirective);\n\n  function GroupBindingDirective(grid, changeDetector, localDataChangesService) {\n    _classCallCheck(this, GroupBindingDirective);\n\n    return _super75.call(this, grid, changeDetector, localDataChangesService);\n  }\n  /**\n   * The array of data which will be used to populate the Grid.\n   */\n\n\n  _createClass(GroupBindingDirective, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @hidden\n     */\n    value: function ngOnInit() {\n      _get(_getPrototypeOf(GroupBindingDirective.prototype), \"ngOnInit\", this).call(this);\n\n      this.grid.groupExpand.subscribe(this.groupExpand.bind(this));\n      this.grid.groupCollapse.subscribe(this.groupCollapse.bind(this));\n    }\n  }, {\n    key: \"groupExpand\",\n    value: function groupExpand(_ref84) {\n      var groupIndex = _ref84.groupIndex;\n      this.grid.expandGroupChildren(groupIndex);\n\n      var _findGroup = findGroup(groupIndex, this.groups),\n          group = _findGroup.group,\n          parents = _findGroup.parents;\n\n      if (!group.items.length) {\n        var descriptors = this.state.group.filter(removeParentDescriptors(parents, group));\n\n        var _children3 = findChildren(this.originalData, parents.concat(group));\n\n        group.items = _processGroups(_children3, {\n          filter: this.state.filter,\n          group: descriptors,\n          sort: this.state.sort\n        });\n      }\n\n      this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n  }, {\n    key: \"groupCollapse\",\n    value: function groupCollapse(_ref85) {\n      var groupIndex = _ref85.groupIndex;\n\n      var _findGroup2 = findGroup(groupIndex, this.groups),\n          group = _findGroup2.group;\n\n      if (group) {\n        group.items = [];\n      }\n\n      this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n  }, {\n    key: \"process\",\n    value: function process(state$$1) {\n      if (state$$1.group && state$$1.group.length) {\n        var groups = this.processGroups(state$$1);\n        this.grid.skip -= skippedHeaders(groups.data[0]);\n        return groups;\n      } else {\n        this.groups = null;\n      }\n\n      return _get(_getPrototypeOf(GroupBindingDirective.prototype), \"process\", this).call(this, state$$1);\n    }\n  }, {\n    key: \"processGroups\",\n    value: function processGroups(state$$1) {\n      if (!this.groups || !this.groups.length) {\n        this.groups = _processGroups(this.originalData, {\n          filter: state$$1.filter,\n          group: state$$1.group,\n          sort: state$$1.sort\n        });\n      }\n\n      return this.dataResult(state$$1.skip, state$$1.take);\n    }\n  }, {\n    key: \"dataResult\",\n    value: function dataResult(skip, take$$1) {\n      var includeFooters = this.grid.showGroupFooters;\n      return {\n        data: slice(this.groups, skip, take$$1, includeFooters),\n        total: count(this.groups, includeFooters)\n      };\n    }\n  }, {\n    key: \"applyState\",\n    value: function applyState(_ref86) {\n      var skip = _ref86.skip,\n          take$$1 = _ref86.take,\n          sort = _ref86.sort,\n          group = _ref86.group,\n          filter$$1 = _ref86.filter;\n      this.skip = skip;\n      this.state.take = take$$1; // this.pageSize = take; // do need to update take as the process with slice correctly\n\n      this.sort = sort;\n      this.group = group;\n      this.filter = filter$$1;\n    }\n  }, {\n    key: \"kendoGridGroupBinding\",\n    set: function set(value) {\n      this.groups = null;\n      this.grid.resetGroupsState();\n      this.data = value;\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"data\",\n    set: function set(value) {\n      this.originalData = value || [];\n      this.dataChanged = true;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n\n  }, {\n    key: \"sort\",\n    set: function set(value) {\n      var clear = this.state.sort !== value;\n      this.grid.sort = this.state.sort = value;\n\n      if (clear) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n      }\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n\n  }, {\n    key: \"filter\",\n    set: function set(value) {\n      var clear = diffFilters(this.state.filter, value);\n\n      if (clear) {\n        this.state.filter = value;\n        this.grid.filter = cloneFilters(value);\n        this.groups = null;\n        this.grid.resetGroupsState();\n      }\n    }\n    /**\n     * Defines the descriptors by which the data will be grouped.\n     */\n\n  }, {\n    key: \"group\",\n    set: function set(value) {\n      // don't clear if no groups are present in previous and current value\n      var groupsPresent = groupDescriptorsPresent(this.state.group) || groupDescriptorsPresent(value);\n      var clear = this.state.group !== value && groupsPresent;\n      this.grid.group = this.state.group = value;\n\n      if (clear) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n        this.skip = 0;\n      }\n    }\n  }]);\n\n  return GroupBindingDirective;\n}(DataBindingDirective);\n\nGroupBindingDirective.ɵfac = function GroupBindingDirective_Factory(t) {\n  return new (t || GroupBindingDirective)(ɵngcc0.ɵɵdirectiveInject(GridComponent), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(LocalDataChangesService));\n};\n\nGroupBindingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: GroupBindingDirective,\n  selectors: [[\"\", \"kendoGridGroupBinding\", \"\"]],\n  inputs: {\n    kendoGridGroupBinding: \"kendoGridGroupBinding\",\n    sort: \"sort\",\n    filter: \"filter\",\n    group: \"group\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nGroupBindingDirective.ctorParameters = function () {\n  return [{\n    type: GridComponent\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: LocalDataChangesService\n  }];\n};\n\nGroupBindingDirective.propDecorators = {\n  kendoGridGroupBinding: [{\n    type: Input,\n    args: [\"kendoGridGroupBinding\"]\n  }],\n  sort: [{\n    type: Input\n  }],\n  filter: [{\n    type: Input\n  }],\n  group: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GroupBindingDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridGroupBinding]'\n    }]\n  }], function () {\n    return [{\n      type: GridComponent\n    }, {\n      type: ChangeDetectorRef\n    }, {\n      type: LocalDataChangesService\n    }];\n  }, {\n    kendoGridGroupBinding: [{\n      type: Input,\n      args: [\"kendoGridGroupBinding\"]\n    }],\n    sort: [{\n      type: Input\n    }],\n    filter: [{\n      type: Input\n    }],\n    group: [{\n      type: Input\n    }]\n  });\n})();\n\nvar exportedModules$4 = [GridComponent, ToolbarTemplateDirective, ToolbarComponent, DataBindingDirective, SelectionDirective, CustomMessagesComponent, GroupBindingDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective].concat(_toConsumableArray(GroupModule.exports()), _toConsumableArray(SharedModule.exports()), _toConsumableArray(BodyModule.exports()), _toConsumableArray(HeaderModule.exports()), _toConsumableArray(FooterModule.exports()), _toConsumableArray(PagerModule.exports()), _toConsumableArray(RowFilterModule.exports()), _toConsumableArray(FilterMenuModule.exports()), _toConsumableArray(ColumnMenuModule.exports()));\nvar declarations = [GridComponent, ListComponent, ToolbarComponent, LocalizedMessagesDirective, CustomMessagesComponent, DataBindingDirective, ToolbarTemplateDirective, SelectionDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, GroupBindingDirective, GridMarqueeDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid module\n * import { GridModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule], // import Grid module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nvar GridModule = function GridModule() {\n  _classCallCheck(this, GridModule);\n};\n\nGridModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: GridModule\n});\nGridModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function GridModule_Factory(t) {\n    return new (t || GridModule)();\n  },\n  imports: [[CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(GridModule, {\n    declarations: function declarations() {\n      return [GridComponent, ListComponent, ToolbarComponent, LocalizedMessagesDirective, CustomMessagesComponent, DataBindingDirective, ToolbarTemplateDirective, SelectionDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, GroupBindingDirective, GridMarqueeDirective];\n    },\n    imports: function imports() {\n      return [CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule];\n    },\n    exports: function exports() {\n      return [GridComponent, ToolbarTemplateDirective, ToolbarComponent, DataBindingDirective, SelectionDirective, CustomMessagesComponent, GroupBindingDirective, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, ExpandDetailsDirective, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ColumnComponent, SpanColumnComponent, ColumnGroupComponent, FooterTemplateDirective, DetailTemplateDirective, FocusableDirective, CommandColumnComponent, CheckboxColumnComponent, SelectionCheckboxDirective, CellTemplateDirective, NoRecordsTemplateDirective, EditTemplateDirective, EditCommandDirective, CancelCommandDirective, SaveCommandDirective, RemoveCommandDirective, AddCommandDirective, HeaderTemplateDirective, SelectAllCheckboxDirective, PagerComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, PagerTemplateDirective, FilterRowComponent, FilterCellComponent, FilterCellTemplateDirective, FilterCellOperatorsComponent, StringFilterCellComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, BooleanFilterCellComponent, DateFilterCellComponent, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, StringFilterMenuComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, FilterCellOperatorsComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, AfterFilterOperatorComponent, AfterEqFilterOperatorComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, ColumnChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemComponent, ColumnMenuItemContentTemplateDirective, ColumnMenuSortComponent, ColumnMenuLockComponent, ColumnMenuChooserComponent, ColumnMenuTemplateDirective, ColumnMenuComponent];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GridModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations],\n      exports: [exportedModules$4],\n      imports: [CommonModule, GroupModule, SharedModule, BodyModule, HeaderModule, FooterModule, PagerModule, RowFilterModule, FilterMenuModule, ResizeSensorModule, ColumnMenuModule]\n    }]\n  }], null, null);\n})();\n\nvar PDFMarginComponent$1 = /*#__PURE__*/function (_PDFMarginComponent) {\n  _inherits(PDFMarginComponent$1, _PDFMarginComponent);\n\n  var _super76 = _createSuper(PDFMarginComponent$1);\n\n  function PDFMarginComponent$1() {\n    _classCallCheck(this, PDFMarginComponent$1);\n\n    return _super76.apply(this, arguments);\n  }\n\n  return PDFMarginComponent$1;\n}(PDFMarginComponent);\n\nPDFMarginComponent$1.ɵfac = function PDFMarginComponent$1_Factory(t) {\n  return ɵPDFMarginComponent$1_BaseFactory(t || PDFMarginComponent$1);\n};\n\nPDFMarginComponent$1.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PDFMarginComponent$1,\n  selectors: [[\"kendo-grid-pdf-margin\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function PDFMarginComponent$1_Template(rf, ctx) {},\n  encapsulation: 2\n});\nvar ɵPDFMarginComponent$1_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(PDFMarginComponent$1);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFMarginComponent$1, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-pdf-margin',\n      template: ''\n    }]\n  }], null, null);\n})();\n/**\n * Represents the PDF page template of the Grid that helps to customize the PDF pages. To define a page template,\n * nest an `<ng-template>` tag with the `kendoGridPDFTemplate` directive inside `<kendo-grid-pdf>`.\n *\n * The template context provides the following fields:\n * - `pageNumber`&mdash;Defines PDF page number.\n * - `totalPages`&mdash;Defines the total number of PDF pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <ng-template kendoGridToolbarTemplate>\n *                 <button kendoGridPDFCommand icon=\"file-pdf\">Export to PDF</button>\n *             </ng-template>\n *             <kendo-grid-column field=\"ProductName\">\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *             </kendo-grid-column>\n *             <kendo-grid-pdf fileName=\"Products.pdf\" paperSize=\"A4\" [margin]=\"{ top: '1cm', left: '1cm', right: '1cm', bottom: '1cm' }\">\n *                 <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n *                     <div style=\"position: absolute;top: 5px; left: 5px;\">\n *                         Page {{ pageNum }} of {{ totalPages }}\n *                     </div>\n *                 </ng-template>\n *             </kendo-grid-pdf>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000\n *       }\n *     ];\n * }\n *\n * ```\n */\n\n\nvar PDFTemplateDirective$1 = /*#__PURE__*/function (_PDFTemplateDirective) {\n  _inherits(PDFTemplateDirective$1, _PDFTemplateDirective);\n\n  var _super77 = _createSuper(PDFTemplateDirective$1);\n\n  function PDFTemplateDirective$1(templateRef) {\n    _classCallCheck(this, PDFTemplateDirective$1);\n\n    return _super77.call(this, templateRef);\n  }\n\n  return PDFTemplateDirective$1;\n}(PDFTemplateDirective);\n\nPDFTemplateDirective$1.ɵfac = function PDFTemplateDirective$1_Factory(t) {\n  return new (t || PDFTemplateDirective$1)(ɵngcc0.ɵɵdirectiveInject(TemplateRef, 8));\n};\n\nPDFTemplateDirective$1.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PDFTemplateDirective$1,\n  selectors: [[\"\", \"kendoGridPDFTemplate\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nPDFTemplateDirective$1.ctorParameters = function () {\n  return [{\n    type: TemplateRef,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFTemplateDirective$1, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPDFTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: TemplateRef,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @hidden\n */\n\n\nvar HEADER_CLASS = 'k-grid-header';\n/**\n * @hidden\n */\n\nvar FOOTER_CLASS = 'k-grid-footer';\nvar GRID_LIST = 'KENDO-GRID-LIST';\nvar TABLE = 'TABLE';\nvar matchesList = matchesNodeName(GRID_LIST);\nvar matchesTable = matchesNodeName(TABLE);\n\nvar suffix = function suffix(locked) {\n  return locked ? 'locked' : 'wrap';\n};\n/**\n * @hidden\n */\n\n\nvar GridQuery = /*#__PURE__*/function () {\n  function GridQuery(element) {\n    _classCallCheck(this, GridQuery);\n\n    this.element = element;\n    this.list = findElement(element, matchesList);\n  }\n\n  _createClass(GridQuery, [{\n    key: \"content\",\n    value: function content(locked) {\n      return findElement(this.list, matchesClasses(\"k-grid-content\".concat(locked ? '-locked' : '')));\n    }\n  }, {\n    key: \"header\",\n    value: function header(locked) {\n      this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));\n      return findElement(this.headerWrap, matchesClasses(\"\".concat(HEADER_CLASS, \"-\").concat(suffix(locked))));\n    }\n  }, {\n    key: \"footer\",\n    value: function footer(locked) {\n      this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));\n      return findElement(this.footerWrap, matchesClasses(\"\".concat(FOOTER_CLASS, \"-\").concat(suffix(locked))));\n    }\n  }, {\n    key: \"table\",\n    value: function table() {\n      return findElement(this.element, matchesTable);\n    }\n  }]);\n\n  return GridQuery;\n}();\n\nvar FIRST_CLASS = 'k-first';\nvar INPUTS = ['input', 'select', 'textarea', 'option'];\n/** @hidden */\n\nvar cloneNode = function cloneNode(node) {\n  var clone = node.cloneNode(false);\n\n  if (node._kendoExportVisual) {\n    clone._kendoExportVisual = node._kendoExportVisual;\n  }\n\n  if (INPUTS.indexOf(String(node.nodeName).toLowerCase()) >= 0) {\n    clone.removeAttribute(\"id\");\n    clone.removeAttribute(\"name\");\n    clone.value = node.value;\n    clone.checked = node.checked;\n    clone.selected = node.selected;\n  }\n\n  var child = node.firstChild;\n\n  while (child) {\n    clone.appendChild(cloneNode(child));\n    child = child.nextSibling;\n  }\n\n  return clone;\n};\n\nvar appendNodes = function appendNodes(element, nodes) {\n  var length = nodes.length;\n\n  for (var idx = 0; idx < length; idx++) {\n    element.appendChild(cloneNode(nodes[idx]));\n  }\n};\n\nvar wrapTable = function wrapTable(table) {\n  var wrapper = document.createElement('div');\n  wrapper.className = 'k-widget k-grid';\n  wrapper.appendChild(table);\n  return wrapper;\n};\n\nvar createTableElement = function createTableElement(sources) {\n  var sourceCount = sources.length;\n  var element = cloneNode(sources[0]);\n  var rowsCount = element.rows.length;\n\n  if (sourceCount > 1) {\n    for (var rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n      for (var sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {\n        appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);\n      }\n    }\n  }\n\n  return element;\n};\n\nvar setFirstCellClass = function setFirstCellClass(header, headers) {\n  if (headers.length > 1 && header.rows.length > 1) {\n    for (var idx = 1; idx < header.rows.length; idx++) {\n      var firstCellIndex = headers[0].rows[idx].cells.length;\n      var _cell6 = header.rows[idx].cells[firstCellIndex];\n\n      if (String(_cell6.className).indexOf(FIRST_CLASS) === -1) {\n        _cell6.className += \" \".concat(FIRST_CLASS);\n      }\n    }\n  }\n};\n\nvar createTable = function createTable(colGroups, headers, bodies, footers) {\n  var table = document.createElement('table');\n  var colGroup = colGroups[0].cloneNode(true);\n\n  for (var idx = 1; idx < colGroups.length; idx++) {\n    appendNodes(colGroup, colGroups[idx].querySelectorAll('col'));\n  }\n\n  var header = createTableElement(headers);\n  var body = createTableElement(bodies);\n  header.className = HEADER_CLASS;\n  setFirstCellClass(header, headers);\n  table.appendChild(colGroup);\n  table.appendChild(header);\n  table.appendChild(body);\n\n  if (footers.length) {\n    var footer = createTableElement(footers);\n    footer.className = FOOTER_CLASS;\n    table.appendChild(footer);\n  }\n\n  return wrapTable(table);\n};\n/**\n * @hidden\n */\n\n\nvar exportElement = function exportElement(wrapper) {\n  var query = new GridQuery(wrapper);\n  var content = query.content();\n  var result;\n\n  if (content) {\n    var colGroups = [content.querySelector('colgroup')];\n    var headers = [query.header().querySelector('thead')];\n    var bodies = [content.querySelector('tbody')];\n    var footer = query.footer();\n    var footers = [];\n\n    if (footer) {\n      footers.push(footer.querySelector('tfoot'));\n    }\n\n    var lockedContent = query.content(true);\n\n    if (lockedContent) {\n      colGroups.unshift(lockedContent.querySelector('colgroup'));\n      headers.unshift(query.header(true).querySelector('thead'));\n      bodies.unshift(lockedContent.querySelector('tbody'));\n\n      if (footer) {\n        footers.unshift(query.footer(true).querySelector('tfoot'));\n      }\n    }\n\n    result = createTable(colGroups, headers, bodies, footers);\n  } else {\n    result = wrapTable(query.table().cloneNode(true));\n  }\n\n  return result;\n};\n\nvar createElement$1 = function createElement$1(tagName, className) {\n  var element = document.createElement(tagName);\n\n  if (className) {\n    element.className = className;\n  }\n\n  return element;\n};\n\nvar createDiv = function createDiv(className) {\n  return createElement$1('div', className);\n};\n/**\n * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).\n */\n\n\nvar PDFComponent = /*#__PURE__*/function (_PDFExportComponent) {\n  _inherits(PDFComponent, _PDFExportComponent);\n\n  var _super78 = _createSuper(PDFComponent);\n\n  function PDFComponent(pdfService, suspendService, ngZone, element) {\n    var _this141;\n\n    _classCallCheck(this, PDFComponent);\n\n    _this141 = _super78.call(this, element);\n    _this141.pdfService = pdfService;\n    _this141.suspendService = suspendService;\n    _this141.ngZone = ngZone;\n    _this141.columns = new QueryList();\n    _this141.saveSubscription = pdfService.savePDF.subscribe(_this141.savePDF.bind(_assertThisInitialized(_this141)));\n    _this141.drawSubscription = pdfService.drawPDF.subscribe(_this141.drawPDF.bind(_assertThisInitialized(_this141)));\n    _this141.reset = _this141.reset.bind(_assertThisInitialized(_this141));\n    _this141.draw = _this141.draw.bind(_assertThisInitialized(_this141));\n    return _this141;\n  }\n\n  _createClass(PDFComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.saveSubscription.unsubscribe();\n      this.drawSubscription.unsubscribe();\n      this.reset();\n    }\n  }, {\n    key: \"savePDF\",\n    value: function savePDF(component) {\n      this.createPDF(component, this.draw);\n    }\n  }, {\n    key: \"drawPDF\",\n    value: function drawPDF(_ref87) {\n      var _this142 = this;\n\n      var component = _ref87.component,\n          promise = _ref87.promise;\n      this.createPDF(component, function () {\n        _this142.createExportGroup(promise);\n      });\n    }\n  }, {\n    key: \"createPDF\",\n    value: function createPDF(component, callback) {\n      var pageSize = component.pageSize;\n      var total = component.view.total;\n      var columns = this.columns.toArray();\n\n      if (columns.length) {\n        this.originalColumns = component.columns.toArray();\n      }\n\n      this.component = component;\n      this.suspendService.scroll = true;\n      this.pdfService.exporting = true;\n      this.initProgress();\n      this.renderAllPages = this.allPages && pageSize < total;\n\n      if (this.renderAllPages) {\n        this.skip = component.skip;\n        this.pageSize = pageSize;\n        this.changePage(0, total, callback, columns);\n      } else if (columns.length || component.virtualColumns) {\n        this.changeColumns(columns, callback);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"initProgress\",\n    value: function initProgress() {\n      var wrapperElement = this.component.wrapper.nativeElement;\n      var progress = this.progress = createDiv('k-loading-pdf-mask');\n      var overlay = cloneNode(wrapperElement);\n      progress.appendChild(overlay);\n      progress.appendChild(createDiv('k-loading-color'));\n      progress.appendChild(createElement$1('span', 'k-i-loading k-icon'));\n      this.originalHeight = wrapperElement.style.height;\n      this.originalOverflow = wrapperElement.style.overflow;\n      wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n      wrapperElement.style.overflow = 'hidden';\n      wrapperElement.appendChild(progress);\n      this.applyScroll(overlay);\n    }\n  }, {\n    key: \"applyScroll\",\n    value: function applyScroll(overlay) {\n      var query = new GridQuery(this.component.wrapper.nativeElement);\n      var content = query.content();\n\n      if (content) {\n        var overlayQuery = new GridQuery(overlay);\n        var overlayContent = overlayQuery.content();\n        overlayContent.scrollTop = content.scrollTop;\n        overlayContent.scrollLeft = content.scrollLeft;\n        overlayQuery.header().scrollLeft = query.header().scrollLeft;\n        var footer = query.footer();\n\n        if (footer) {\n          overlayQuery.footer().scrollLeft = footer.scrollLeft;\n        }\n\n        var lockedContent = query.content(true);\n\n        if (lockedContent) {\n          var overlayLockedContent = overlayQuery.content(true);\n          overlayLockedContent.scrollTop = lockedContent.scrollTop;\n          overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n        }\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this143 = this;\n\n      this.createExportElement(function (element) {\n        _this143.save(element, _this143.fileName);\n      });\n    }\n  }, {\n    key: \"createExportGroup\",\n    value: function createExportGroup(promise) {\n      var _this144 = this;\n\n      this.createExportElement(function (element) {\n        _this144.exportElement(element).then(function (group) {\n          return promise.resolve(group);\n        });\n      });\n    }\n  }, {\n    key: \"createExportElement\",\n    value: function createExportElement(callback) {\n      var _this145 = this;\n\n      this.ngZone.runOutsideAngular(function () {\n        var container = _this145.container = createDiv('k-grid-pdf-export-element');\n        var element = exportElement(_this145.component.wrapper.nativeElement);\n        container.appendChild(element);\n        document.body.appendChild(container);\n        callback(element);\n      });\n    }\n  }, {\n    key: \"drawOptions\",\n    value: function drawOptions() {\n      var options = _get(_getPrototypeOf(PDFComponent.prototype), \"drawOptions\", this).call(this);\n\n      options._destructive = true;\n      return options;\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      _get(_getPrototypeOf(PDFComponent.prototype), \"cleanup\", this).call(this);\n\n      this.pdfService.exporting = false;\n\n      if (this.component) {\n        var originalColumns = this.originalColumns;\n        delete this.originalColumns;\n\n        if (this.renderAllPages) {\n          this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n        } else if (originalColumns || this.component.virtualColumns) {\n          this.changeColumns(originalColumns, this.reset);\n        } else {\n          this.reset();\n        }\n      } else {\n        this.reset();\n      }\n\n      this.removeContainer();\n    }\n  }, {\n    key: \"removeContainer\",\n    value: function removeContainer() {\n      if (this.container) {\n        document.body.removeChild(this.container);\n        delete this.container;\n      }\n    }\n  }, {\n    key: \"changePage\",\n    value: function changePage(skip, _take, callback, columns) {\n      var _this146 = this;\n\n      this.ngZone.run(function () {\n        _this146.pdfService.dataChanged.pipe(take(1)).subscribe(function () {\n          if (columns && columns.length || _this146.component.virtualColumns) {\n            _this146.changeColumns(columns, callback);\n          } else {\n            _this146.onStable(callback);\n          }\n        });\n\n        _this146.component.notifyPageChange('pdf', {\n          skip: skip,\n          take: _take\n        });\n      });\n    }\n  }, {\n    key: \"changeColumns\",\n    value: function changeColumns(columns, callback) {\n      var _this147 = this;\n\n      this.ngZone.run(function () {\n        _this147.onStable(callback);\n\n        if (columns && columns.length) {\n          _this147.component.columns.reset(columns);\n        }\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.suspendService.scroll = false;\n      this.renderAllPages = false;\n\n      if (!this.component) {\n        return;\n      }\n\n      var wrapperElement = this.component.wrapper.nativeElement;\n      wrapperElement.removeChild(this.progress);\n      wrapperElement.style.height = this.originalHeight;\n      wrapperElement.style.overflow = this.originalOverflow;\n      delete this.progress;\n      delete this.component;\n    }\n  }, {\n    key: \"onStable\",\n    value: function onStable(callback) {\n      var _this148 = this;\n\n      // not sure if it is an actual scenario. occurs in the tests.\n      // onStable is triggered in the same pass without the change detection.\n      // thus, the callback is called before the changes are applied without the timeout.\n      setTimeout(function () {\n        _this148.ngZone.onStable.asObservable().pipe(take(1)).subscribe(callback);\n      }, 0); // tslint:disable-line: align\n    }\n  }]);\n\n  return PDFComponent;\n}(PDFExportComponent);\n\nPDFComponent.ɵfac = function PDFComponent_Factory(t) {\n  return new (t || PDFComponent)(ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(SuspendService), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ElementRef));\n};\n\nPDFComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: PDFComponent,\n  selectors: [[\"kendo-grid-pdf\"]],\n  contentQueries: function PDFComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PDFMarginComponent$1, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, PDFTemplateDirective$1, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase$1, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.marginComponent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pageTemplateDirective = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    allPages: \"allPages\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  decls: 0,\n  vars: 0,\n  template: function PDFComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nPDFComponent.ctorParameters = function () {\n  return [{\n    type: PDFService\n  }, {\n    type: SuspendService\n  }, {\n    type: NgZone\n  }, {\n    type: ElementRef\n  }];\n};\n\nPDFComponent.propDecorators = {\n  allPages: [{\n    type: Input\n  }],\n  columns: [{\n    type: ContentChildren,\n    args: [ColumnBase$1]\n  }],\n  marginComponent: [{\n    type: ContentChild,\n    args: [PDFMarginComponent$1]\n  }],\n  pageTemplateDirective: [{\n    type: ContentChild,\n    args: [PDFTemplateDirective$1]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-pdf',\n      template: ''\n    }]\n  }], function () {\n    return [{\n      type: PDFService\n    }, {\n      type: SuspendService\n    }, {\n      type: NgZone\n    }, {\n      type: ElementRef\n    }];\n  }, {\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase$1]\n    }],\n    allPages: [{\n      type: Input\n    }],\n    marginComponent: [{\n      type: ContentChild,\n      args: [PDFMarginComponent$1]\n    }],\n    pageTemplateDirective: [{\n      type: ContentChild,\n      args: [PDFTemplateDirective$1]\n    }]\n  });\n})();\n/**\n * Represents the `export-to-PDF` command of the Grid.\n * You can apply this directive to any `button` element inside a\n * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button that is associated with the directive, the\n * [`pdfExport`]({% slug api_grid_gridcomponent %}#toc-pdfexport) event\n * fires ([see example]({% slug pdfexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridPDFCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-pdf fileName=\"Grid.pdf\">\n *      </kendo-grid-pdf>\n * </kendo-grid>\n * ```\n */\n\n\nvar PDFCommandDirective = /*#__PURE__*/function (_Button6) {\n  _inherits(PDFCommandDirective, _Button6);\n\n  var _super79 = _createSuper(PDFCommandDirective);\n\n  function PDFCommandDirective(pdfService, element, renderer, localization, ngZone) {\n    var _this149;\n\n    _classCallCheck(this, PDFCommandDirective);\n\n    _this149 = _super79.call(this, element, renderer, null, localization, ngZone);\n    _this149.pdfService = pdfService;\n    _this149.ngZone = ngZone;\n    return _this149;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(PDFCommandDirective, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      e.preventDefault();\n      this.pdfService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"pdfClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return PDFCommandDirective;\n}(Button);\n\nPDFCommandDirective.ɵfac = function PDFCommandDirective_Factory(t) {\n  return new (t || PDFCommandDirective)(ɵngcc0.ɵɵdirectiveInject(PDFService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nPDFCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: PDFCommandDirective,\n  selectors: [[\"\", \"kendoGridPDFCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function PDFCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function PDFCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-pdf\", ctx.pdfClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nPDFCommandDirective.ctorParameters = function () {\n  return [{\n    type: PDFService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nPDFCommandDirective.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  pdfClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-pdf']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridPDFCommand]'\n    }]\n  }], function () {\n    return [{\n      type: PDFService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    pdfClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-pdf']\n    }]\n  });\n})();\n\nvar exportedModules$5 = [PDFComponent, PDFMarginComponent$1, PDFCommandDirective, PDFTemplateDirective$1];\nvar declarations$1 = [PDFComponent, PDFMarginComponent$1, PDFCommandDirective, PDFTemplateDirective$1];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid PDF component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and PDF modules\n * import { GridModule, PDFModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, PDFModule], // import Grid and PDF modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nvar PDFModule = function PDFModule() {\n  _classCallCheck(this, PDFModule);\n};\n\nPDFModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: PDFModule\n});\nPDFModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function PDFModule_Factory(t) {\n    return new (t || PDFModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PDFModule, {\n    declarations: [PDFComponent, PDFMarginComponent$1, PDFCommandDirective, PDFTemplateDirective$1],\n    exports: [PDFComponent, PDFMarginComponent$1, PDFCommandDirective, PDFTemplateDirective$1]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(PDFModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$1],\n      exports: [exportedModules$5]\n    }]\n  }], null, null);\n})();\n/**\n * Arguments for the `excelExport` event.\n */\n\n\nvar ExcelExportEvent = /*#__PURE__*/function (_PreventableEvent7) {\n  _inherits(ExcelExportEvent, _PreventableEvent7);\n\n  var _super80 = _createSuper(ExcelExportEvent);\n\n  function ExcelExportEvent(workbook) {\n    var _this150;\n\n    _classCallCheck(this, ExcelExportEvent);\n\n    _this150 = _super80.call(this);\n    _this150.workbook = workbook;\n    return _this150;\n  }\n\n  return ExcelExportEvent;\n}(PreventableEvent);\n/* tslint:disable object-literal-sort-keys */\n\n\nvar fetchComponentData = function fetchComponentData(component) {\n  return {\n    data: component.view.map(function (item) {\n      return item;\n    }),\n    group: component.group\n  };\n};\n\nvar toExcelColumn = function toExcelColumn(column) {\n  return {\n    title: column.title,\n    field: column.field,\n    locked: Boolean(column.locked),\n    width: column.width,\n    level: column.level,\n    hidden: !column.isVisible,\n    groupHeaderTemplate: column.groupHeaderTemplate,\n    groupHeaderColumnTemplate: column.groupHeaderColumnTemplate,\n    groupFooterTemplate: column.groupFooterTemplate,\n    footerTemplate: column.footerTemplate\n  };\n};\n\nvar toExcelColumns = function toExcelColumns(columns) {\n  var result = [];\n  sortColumns(columns).forEach(function (column) {\n    if (column.isSpanColumn) {\n      result.push.apply(result, _toConsumableArray(toExcelColumns(column.childrenArray)));\n    } else {\n      var excelColumn = toExcelColumn(column);\n\n      if (column.isColumnGroup) {\n        excelColumn.children = [excelColumn].concat(toExcelColumns(column.childrenArray));\n      }\n\n      result.push(excelColumn);\n    }\n  });\n  return result;\n};\n\nvar componentColumns = function componentColumns(component) {\n  var columns = toExcelColumns(component.columns.toArray());\n  return orderBy(columns, [{\n    field: 'locked',\n    dir: 'desc'\n  }]);\n};\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\n\n\nvar ExcelComponent = /*#__PURE__*/function () {\n  function ExcelComponent(excelService, localization, zone) {\n    _classCallCheck(this, ExcelComponent);\n\n    this.localization = localization;\n    this.zone = zone;\n    /**\n     * Specifies the file name of the exported Excel file.\n     * @default \"Export.xlsx\"\n     */\n\n    this.fileName = 'Export.xlsx';\n    /**\n     * @hidden\n     */\n\n    this.columns = new QueryList();\n    this.saveSubscription = excelService.saveToExcel.subscribe(this.save.bind(this));\n  }\n\n  _createClass(ExcelComponent, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.saveSubscription.unsubscribe();\n\n      if (this.dataSubscription) {\n        this.dataSubscription.unsubscribe();\n      }\n    }\n  }, {\n    key: \"save\",\n    value: function save(component) {\n      var _this151 = this;\n\n      var data = (this.fetchData || fetchComponentData)(component);\n\n      var exportData = function exportData(result) {\n        delete _this151.dataSubscription;\n\n        _this151.exportData(component, result);\n      };\n\n      if (data instanceof Promise) {\n        data.then(exportData);\n      } else if (data instanceof Observable) {\n        this.dataSubscription = data.pipe(take(1)).subscribe(exportData);\n      } else {\n        exportData(data);\n      }\n    }\n  }, {\n    key: \"exportData\",\n    value: function exportData(component, result) {\n      var _this152 = this;\n\n      var options = workbookOptions({\n        columns: this.columns.length ? this.columns : componentColumns(component),\n        data: result.data,\n        group: result.group,\n        filterable: this.filterable,\n        creator: this.creator,\n        date: this.date,\n        paddingCellOptions: this.paddingCellOptions,\n        headerPaddingCellOptions: this.headerPaddingCellOptions,\n        rtl: this.localization.rtl,\n        collapsible: this.collapsible\n      });\n      var args = new ExcelExportEvent(options);\n      component.excelExport.emit(args);\n\n      if (!args.isDefaultPrevented()) {\n        this.zone.runOutsideAngular(function () {\n          return _this152.saveFile(options);\n        });\n      }\n    }\n  }, {\n    key: \"saveFile\",\n    value: function saveFile(options) {\n      var _this153 = this;\n\n      toDataURL(options).then(function (dataURL) {\n        saveAs(dataURL, _this153.fileName, {\n          forceProxy: _this153.forceProxy,\n          proxyURL: _this153.proxyURL\n        });\n      });\n    }\n  }]);\n\n  return ExcelComponent;\n}();\n\nExcelComponent.ɵfac = function ExcelComponent_Factory(t) {\n  return new (t || ExcelComponent)(ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nExcelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: ExcelComponent,\n  selectors: [[\"kendo-grid-excel\"]],\n  contentQueries: function ExcelComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnBase, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columns = _t);\n    }\n  },\n  inputs: {\n    fileName: \"fileName\",\n    filterable: \"filterable\",\n    creator: \"creator\",\n    date: \"date\",\n    forceProxy: \"forceProxy\",\n    proxyURL: \"proxyURL\",\n    fetchData: \"fetchData\",\n    paddingCellOptions: \"paddingCellOptions\",\n    headerPaddingCellOptions: \"headerPaddingCellOptions\",\n    collapsible: \"collapsible\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function ExcelComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n/** @nocollapse */\n\nExcelComponent.ctorParameters = function () {\n  return [{\n    type: ExcelService\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nExcelComponent.propDecorators = {\n  fileName: [{\n    type: Input\n  }],\n  filterable: [{\n    type: Input\n  }],\n  creator: [{\n    type: Input\n  }],\n  date: [{\n    type: Input\n  }],\n  forceProxy: [{\n    type: Input\n  }],\n  proxyURL: [{\n    type: Input\n  }],\n  fetchData: [{\n    type: Input\n  }],\n  paddingCellOptions: [{\n    type: Input\n  }],\n  headerPaddingCellOptions: [{\n    type: Input\n  }],\n  collapsible: [{\n    type: Input\n  }],\n  columns: [{\n    type: ContentChildren,\n    args: [ColumnBase, {\n      descendants: true\n    }]\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ExcelComponent, [{\n    type: Component,\n    args: [{\n      selector: 'kendo-grid-excel',\n      template: \"\"\n    }]\n  }], function () {\n    return [{\n      type: ExcelService\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    fileName: [{\n      type: Input\n    }],\n    columns: [{\n      type: ContentChildren,\n      args: [ColumnBase, {\n        descendants: true\n      }]\n    }],\n    filterable: [{\n      type: Input\n    }],\n    creator: [{\n      type: Input\n    }],\n    date: [{\n      type: Input\n    }],\n    forceProxy: [{\n      type: Input\n    }],\n    proxyURL: [{\n      type: Input\n    }],\n    fetchData: [{\n      type: Input\n    }],\n    paddingCellOptions: [{\n      type: Input\n    }],\n    headerPaddingCellOptions: [{\n      type: Input\n    }],\n    collapsible: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Represents the `export-to-Excel` command of the Grid. You can apply this\n * directive to any `button` element inside a\n * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button associated with the directive, the\n * [`excelExport`]({% slug api_grid_gridcomponent %}#toc-excelexport) event\n * fires ([see example]({% slug excelexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridExcelCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-excel fileName=\"Grid.xlsx\">\n *      </kendo-grid-excel>\n * </kendo-grid>\n * ```\n */\n\n\nvar ExcelCommandDirective = /*#__PURE__*/function (_Button7) {\n  _inherits(ExcelCommandDirective, _Button7);\n\n  var _super81 = _createSuper(ExcelCommandDirective);\n\n  function ExcelCommandDirective(excelService, element, renderer, localization, ngZone) {\n    var _this154;\n\n    _classCallCheck(this, ExcelCommandDirective);\n\n    _this154 = _super81.call(this, element, renderer, null, localization, ngZone);\n    _this154.excelService = excelService;\n    _this154.ngZone = ngZone;\n    return _this154;\n  }\n  /**\n   * @hidden\n   */\n\n\n  _createClass(ExcelCommandDirective, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      e.preventDefault();\n      this.excelService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n\n  }, {\n    key: \"excelClass\",\n    get: function get() {\n      return true;\n    }\n  }]);\n\n  return ExcelCommandDirective;\n}(Button);\n\nExcelCommandDirective.ɵfac = function ExcelCommandDirective_Factory(t) {\n  return new (t || ExcelCommandDirective)(ɵngcc0.ɵɵdirectiveInject(ExcelService), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(LocalizationService), ɵngcc0.ɵɵdirectiveInject(NgZone));\n};\n\nExcelCommandDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ExcelCommandDirective,\n  selectors: [[\"\", \"kendoGridExcelCommand\", \"\"]],\n  hostVars: 2,\n  hostBindings: function ExcelCommandDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function ExcelCommandDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"k-grid-excel\", ctx.excelClass);\n    }\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n/** @nocollapse */\n\nExcelCommandDirective.ctorParameters = function () {\n  return [{\n    type: ExcelService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }, {\n    type: LocalizationService\n  }, {\n    type: NgZone\n  }];\n};\n\nExcelCommandDirective.propDecorators = {\n  onClick: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  excelClass: [{\n    type: HostBinding,\n    args: ['class.k-grid-excel']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ExcelCommandDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[kendoGridExcelCommand]'\n    }]\n  }], function () {\n    return [{\n      type: ExcelService\n    }, {\n      type: ElementRef\n    }, {\n      type: Renderer2\n    }, {\n      type: LocalizationService\n    }, {\n      type: NgZone\n    }];\n  }, {\n    /**\n     * @hidden\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n    excelClass: [{\n      type: HostBinding,\n      args: ['class.k-grid-excel']\n    }]\n  });\n})();\n\nvar declarations$2 = [ExcelComponent, ExcelCommandDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Excel component of the Grid.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and Excel modules\n * import { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, ExcelModule], // import Grid and Excel modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\n\nvar ExcelModule = function ExcelModule() {\n  _classCallCheck(this, ExcelModule);\n};\n\nExcelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: ExcelModule\n});\nExcelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function ExcelModule_Factory(t) {\n    return new (t || ExcelModule)();\n  },\n  imports: [ExcelExportModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ExcelModule, {\n    declarations: function declarations() {\n      return [ExcelComponent, ExcelCommandDirective];\n    },\n    exports: function exports() {\n      return [ExcelComponent, ExcelCommandDirective, ExcelExportModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ExcelModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [declarations$2],\n      exports: [declarations$2, ExcelExportModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { ColumnChooserComponent, ColumnListComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemBase, ColumnMenuItemContentTemplateDirective, ColumnMenuItemComponent, ColumnMenuLockComponent, ColumnMenuSortComponent, ColumnMenuTemplateDirective, ColumnMenuModule, ColumnMenuService, ColumnHandleDirective, ColumnResizingService, TableDirective, ColumnInfoService, DomEventsService, ExpandStateService, IdService, PreventableEvent, SortService, ChangeNotificationService, ColumnReorderService, DragAndDropModule, DragAndDropService, DragHintService, DraggableColumnDirective, DropCueService, DropTargetDirective, EditingDirectiveBase, RowEditingDirectiveBase, AddCommandDirective, CancelCommandDirective, EditCommandDirective, EditService as EditService$1, LocalDataChangesService, RemoveCommandDirective, SaveCommandDirective, ExcelCommandDirective, BooleanFilterComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellOperatorsComponent, FilterCellWrapperComponent, DateFilterComponent, FilterHostDirective, FilterInputWrapperComponent, FilterInputDirective, FilterRowComponent, DateFilterMenuInputComponent, FilterMenuContainerComponent, FilterMenuHostDirective, FilterMenuInputWrapperComponent, FilterMenuComponent, NumericFilterMenuInputComponent, StringFilterMenuInputComponent, NumericFilterComponent, FilterOperatorBase, SharedFilterModule, StringFilterComponent, GroupHeaderComponent, GroupIndicatorComponent, GroupInfoService, GroupPanelComponent, GroupsService, BrowserSupportService, ResizeService, ResponsiveService, LocalizedMessagesDirective, Messages, FocusGroup, FocusRoot, LogicalCellDirective, LogicalRowDirective, NavigationService, PagerContextService, PagerElementComponent, PDFCommandDirective, PDFTemplateDirective$1 as PDFTemplateDirective, CellComponent, CELL_CONTEXT, EMPTY_CELL_CONTEXT, FieldAccessorPipe, DetailsService, DEFAULT_SCROLLER_FACTORY, SCROLLER_FACTORY_TOKEN, ScrollRequestService, ScrollSyncService, ScrollerService, CellSelectionService, GridMarqueeDirective, SelectAllCheckboxDirective, SelectionCheckboxDirective, Selection, SelectionService, GridModule, SharedModule, GridComponent, ColumnBase$1 as ColumnBase, ColumnComponent, CommandColumnComponent, SpanColumnComponent, ColumnGroupComponent, CheckboxColumnComponent, ToolbarComponent, ToolbarTemplateDirective, CellTemplateDirective, HeaderTemplateDirective, FooterTemplateDirective, PagerTemplateDirective, ExpandDetailsDirective, DetailTemplateDirective, DetailExpandEvent, DetailCollapseEvent, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ResizableContainerDirective, TemplateContextDirective, NoRecordsTemplateDirective, DataBindingDirective, SelectionDirective, FilterService, FilterCellTemplateDirective, FilterCellComponent, StringFilterCellComponent, DateFilterCellComponent, BaseFilterCellComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, StringFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, AfterEqFilterOperatorComponent, AfterFilterOperatorComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, RowFilterModule, FilterMenuModule, BodyModule, GroupModule, HeaderModule, FooterModule, PagerModule, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, EditTemplateDirective, ColGroupComponent, HeaderComponent, ListComponent, FooterComponent, TableBodyComponent, PagerComponent, CustomMessagesComponent, LoadingComponent, PDFModule, PDFComponent, PDFMarginComponent$1 as PDFMarginComponent, PDFService, ExcelModule, ExcelComponent, ExcelService, ExcelExportEvent, CellCloseEvent, SuspendService, GroupBindingDirective, slice, count, Skip, ColumnReorderEvent, FocusableDirective, ColumnVisibilityChangeEvent, ColumnMenuComponent, SinglePopupService, PopupCloseEvent };","map":{"version":3,"sources":["index.js"],"names":[],"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","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2020 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, Injectable, InjectionToken, Directive, HostBinding, TemplateRef, Optional, QueryList, Input, ContentChildren, ContentChild, Component, forwardRef, SkipSelf, Host, NgZone, ChangeDetectorRef, Output, Inject, isDevMode, Renderer2, SecurityContext, ElementRef, ViewEncapsulation, ViewChild, ViewChildren, Self, ViewContainerRef, Pipe, NgModule, ComponentFactoryResolver, ChangeDetectionStrategy, HostListener } from '@angular/core';\nimport { DraggableDirective, isDocumentAvailable, Keys, isChanged, anyChanged, hasObservers, ResizeSensorComponent, DraggableModule, EventsModule, guid, ResizeSensorModule } from '@progress/kendo-angular-common';\nimport { merge, of, fromEvent, Subject, Subscription, zip, from, interval, BehaviorSubject, Observable } from 'rxjs';\nimport { take, delay, auditTime, switchMap, map, distinctUntilChanged, filter, tap, throttleTime, takeUntil, switchMapTo, debounceTime, bufferCount } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { orderBy, process, isCompositeFilterDescriptor, filterBy } from '@progress/kendo-data-query';\nimport { LocalizationService, L10N_PREFIX, ComponentMessages } from '@progress/kendo-angular-l10n';\nimport { PopupService, PopupModule } from '@progress/kendo-angular-popup';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { getter } from '@progress/kendo-common';\nimport { DropDownListModule, AutoCompleteModule } from '@progress/kendo-angular-dropdowns';\nimport { InputsModule, NumericTextBoxComponent, NumericTextBoxModule } from '@progress/kendo-angular-inputs';\nimport { DatePickerModule } from '@progress/kendo-angular-dateinputs';\nimport { IntlService } from '@progress/kendo-angular-intl';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Button } from '@progress/kendo-angular-buttons';\nimport { PDFMarginComponent, PDFTemplateDirective, PDFExportComponent } from '@progress/kendo-angular-pdf-export';\nimport { saveAs } from '@progress/kendo-file-saver';\nimport { workbookOptions, toDataURL, ColumnBase, ExcelExportModule } from '@progress/kendo-angular-excel-export';\n\n/**\n * @hidden\n */\nclass DomEventsService {\n    constructor() {\n        this.cellClick = new EventEmitter();\n        this.cellMousedown = new EventEmitter();\n        this.cellMouseup = new EventEmitter();\n        this.click = new EventEmitter();\n        this.keydown = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.focusOut = new EventEmitter();\n        this.windowBlur = new EventEmitter();\n    }\n}\nDomEventsService.decorators = [\n    { type: Injectable },\n];\n\nconst EMPTY_REGEX = /^\\s*$/;\n/**\n * @hidden\n */\nconst isPresent = (value) => value !== null && value !== undefined;\n/**\n * @hidden\n */\nconst isBlank = (value) => value === null || value === undefined;\n/**\n * @hidden\n */\nconst isArray = (value) => Array.isArray(value);\n/**\n * @hidden\n */\nconst isTruthy = (value) => !!value;\n/**\n * @hidden\n */\nconst isNullOrEmptyString = (value) => isBlank(value) || EMPTY_REGEX.test(value);\n/**\n * @hidden\n */\nconst observe = (list) => merge(of(list), list.changes);\n/**\n * @hidden\n */\nconst isUniversal = () => typeof document === 'undefined';\n/**\n * @hidden\n */\nconst isString = (value) => typeof value === 'string';\n/**\n * @hidden\n */\nconst isNumber = (value) => typeof value === \"number\" && !isNaN(value);\n/**\n * @hidden\n */\nconst extractFormat = (format) => {\n    if (isString(format) && !isNullOrEmptyString(format) && format.startsWith('{0:')) {\n        return format.slice(3, format.length - 1);\n    }\n    return format;\n};\n/**\n * @hidden\n */\nconst not = (fn) => (...args) => !fn.apply(null, args);\n/**\n * @hidden\n */\nconst or = (...conditions) => (value) => conditions.reduce((acc, x) => acc || x(value), false);\n/**\n * @hidden\n */\nconst and = (...conditions) => (value) => conditions.reduce((acc, x) => acc && x(value), true);\n/**\n * @hidden\n */\nconst Skip = new InjectionToken(\"Skip\"); // tslint:disable-line:variable-name\n/**\n * @hidden\n */\nconst createPromise = () => {\n    let resolveFn, rejectFn;\n    const promise = new Promise((resolve, reject) => {\n        resolveFn = (data) => {\n            resolve(data);\n            return promise;\n        };\n        rejectFn = (data) => {\n            reject(data);\n            return promise;\n        };\n    });\n    promise.resolve = resolveFn;\n    promise.reject = rejectFn;\n    return promise;\n};\n/** @hidden */\nconst iterator = getIterator();\n// TODO: Move to kendo-common\nfunction getIterator() {\n    if (typeof Symbol === 'function' && Symbol.iterator) {\n        return Symbol.iterator;\n    }\n    const keys = Object.getOwnPropertyNames(Map.prototype);\n    const proto = Map.prototype;\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' && proto[key] === proto.entries) {\n            return key;\n        }\n    }\n}\nconst FRAME_DURATION = 1000 / 60;\nconst wnd = typeof window !== 'undefined' ? window : {};\n/** @hidden */\nconst requestAnimationFrame = wnd.requestAnimationFrame || wnd.msRequestAnimationFrame || (callback => setTimeout(callback, FRAME_DURATION));\n/** @hidden */\nconst cancelAnimationFrame = wnd.cancelAnimationFrame || wnd.msCancelRequestAnimationFrame || clearTimeout;\n\n/**\n * @hidden\n */\nclass LocalDataChangesService {\n    constructor() {\n        this.changes = new EventEmitter();\n    }\n}\nLocalDataChangesService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass SelectionService {\n    constructor(domEvents, localDataChangesService) {\n        this.domEvents = domEvents;\n        this.localDataChangesService = localDataChangesService;\n        this.changes = new EventEmitter();\n        this.lastSelectionStartIndex = 0;\n        this.currentSelection = [];\n        this.selectAllChecked = false;\n        this.active = false;\n        this.dragging = false;\n        this.addSubscriptions();\n    }\n    get enableMarquee() {\n        const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n        if (!this.settings || checkboxOnly) {\n            return false;\n        }\n        const selectableSettings = this.settings.selectable;\n        const dragAndMultiple = typeof (selectableSettings) === 'object' &&\n            selectableSettings.mode === 'multiple' &&\n            !selectableSettings.checkboxOnly &&\n            selectableSettings.drag;\n        return this.active && dragAndMultiple;\n    }\n    init(settings) {\n        this.settings = settings;\n        this.currentSelection = [];\n        if (settings.selectable && settings.selectable.enabled !== false) {\n            const iterator$$1 = this.getIterator();\n            this._selectAllState = true;\n            let item = iterator$$1.next();\n            while (!item.done) {\n                if (item.value && item.value.type === \"data\") {\n                    const rowArgs = {\n                        dataItem: item.value.data,\n                        index: item.value.index\n                    };\n                    if (settings.rowSelected(rowArgs)) {\n                        this.currentSelection[item.value.index] = rowArgs;\n                    }\n                    else {\n                        this._selectAllState = undefined;\n                    }\n                }\n                item = iterator$$1.next();\n            }\n            if (this.currentSelection.length === 0) {\n                this._selectAllState = false;\n            }\n        }\n    }\n    isSelected(index) {\n        if (this.settings && this.active) {\n            return this.options.enabled && isPresent(this.currentSelection[index]);\n        }\n    }\n    handleClick(item, event) {\n        if (this.dragging) {\n            this.dragging = false;\n            return;\n        }\n        let ev;\n        const ctrlKey = event.ctrlKey || event.metaKey;\n        if (this.options.mode === \"single\" && ctrlKey && this.isSelected(item.index)) {\n            ev = this.toggle(item);\n        }\n        else if (this.options.mode === \"multiple\") {\n            if (ctrlKey && !event.shiftKey) {\n                ev = this.toggle(item);\n            }\n            else if (event.shiftKey) {\n                ev = this.addAllTo(item, ctrlKey);\n            }\n        }\n        if (!isPresent(ev)) {\n            ev = this.select(item);\n            this.currentSelection[item.index] = {\n                dataItem: item.data,\n                index: item.index\n            };\n        }\n        if (!ev.selectedRows.length && !ev.deselectedRows.length) {\n            return;\n        }\n        ev.ctrlKey = ctrlKey;\n        ev.shiftKey = event.shiftKey;\n        this.changes.emit(ev);\n    }\n    toggle(item) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        this.lastSelectionStartIndex = item.index;\n        const rowArgs = { dataItem: item.data, index: item.index };\n        if (this.isSelected(item.index)) {\n            deselectedRows.push(rowArgs);\n        }\n        else {\n            selectedRows.push(rowArgs);\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    toggleByIndex(index) {\n        const iterator$$1 = this.getIterator();\n        if (this.selectAllChecked && this.isSelected(index)) {\n            this.selectAllChecked = false;\n        }\n        let item = iterator$$1.next();\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.index === index) {\n                const itemToToggle = {\n                    data: item.value.data,\n                    index: item.value.index\n                };\n                if (this.isSelected(index) || this.options.mode === \"multiple\") {\n                    return this.toggle(itemToToggle);\n                }\n                else {\n                    return this.select(itemToToggle);\n                }\n            }\n            item = iterator$$1.next();\n        }\n    }\n    select(item) {\n        let deselectedRows = [];\n        let selectedRows = [];\n        this.lastSelectionStartIndex = item.index;\n        if (!this.isSelected(item.index)) {\n            selectedRows.push({ dataItem: item.data, index: item.index });\n        }\n        this.currentSelection.forEach((row) => {\n            if (row.index !== item.index) {\n                deselectedRows.push(row);\n            }\n        });\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    //Used to manually deselect removed items\n    deselect(removedItem) {\n        const iterator$$1 = this.getIterator();\n        let item = iterator$$1.next();\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n                const rowArgs = {\n                    dataItem: item.value.data,\n                    index: item.value.index\n                };\n                if (this.isSelected(rowArgs.index)) {\n                    let ev = {\n                        ctrlKey: false,\n                        deselectedRows: [rowArgs],\n                        selectedRows: []\n                    };\n                    this.changes.emit(ev);\n                }\n            }\n            item = iterator$$1.next();\n        }\n    }\n    addAllTo(item, ctrlKey) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        const start = Math.min(this.lastSelectionStartIndex, item.index);\n        const end = Math.max(this.lastSelectionStartIndex, item.index);\n        const iterator$$1 = this.getIterator();\n        let next = iterator$$1.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if ((idx < start || idx > end) && this.isSelected(idx) && !ctrlKey) {\n                    deselectedRows.push(rowArgs);\n                }\n                if ((idx >= start && idx <= end) && !this.isSelected(idx)) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator$$1.next();\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    updateAll(selectAllChecked) {\n        this.selectAllChecked = selectAllChecked;\n        let selectedRows = [];\n        let deselectedRows = [];\n        const iterator$$1 = this.getIterator();\n        let next = iterator$$1.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if (this.isSelected(idx) && !selectAllChecked) {\n                    deselectedRows.push(rowArgs);\n                }\n                if (!this.isSelected(idx) && selectAllChecked) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator$$1.next();\n        }\n        if (!selectedRows.length && !deselectedRows.length) {\n            return;\n        }\n        let ev = {\n            ctrlKey: true,\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows,\n            shiftKey: true\n        };\n        this.changes.emit(ev);\n    }\n    selectRange(startIndex, endIndex) {\n        let selectedRows = [];\n        let deselectedRows = [];\n        const start = Math.min(startIndex, endIndex);\n        const end = Math.max(startIndex, endIndex);\n        const iterator$$1 = this.getIterator();\n        let next = iterator$$1.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const rowArgs = { dataItem: next.value.data, index: idx };\n                if ((idx < start || idx > end) && this.isSelected(idx)) {\n                    deselectedRows.push(rowArgs);\n                }\n                if ((idx >= start && idx <= end) && !this.isSelected(idx)) {\n                    selectedRows.push(rowArgs);\n                }\n            }\n            next = iterator$$1.next();\n        }\n        return {\n            deselectedRows: deselectedRows,\n            selectedRows: selectedRows\n        };\n    }\n    get selectAllState() {\n        return this._selectAllState;\n    }\n    get selected() {\n        return this.currentSelection.map((item) => {\n            return item.index;\n        }).filter((n) => typeof n === \"number\");\n    }\n    get options() {\n        const defaultOptions = {\n            checkboxOnly: false,\n            enabled: true,\n            mode: \"multiple\"\n        };\n        if (!isPresent(this.settings)) {\n            return defaultOptions;\n        }\n        if (typeof this.settings.selectable === 'boolean') {\n            return {\n                checkboxOnly: false,\n                enabled: this.settings.selectable,\n                mode: \"multiple\"\n            };\n        }\n        else {\n            return Object.assign(defaultOptions, this.settings.selectable);\n        }\n    }\n    ngOnDestroy() {\n        this.removeSubscriptions();\n    }\n    targetArgs() {\n        return {\n            index: this.mouseDownEventArgs.rowIndex,\n            dataItem: this.mouseDownEventArgs.dataItem\n        };\n    }\n    addSubscriptions() {\n        if (!this.cellClickSubscription) {\n            this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n                if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n                    if (this.active) {\n                        this.handleClick({ index: args.rowIndex, data: args.dataItem }, args.originalEvent);\n                    }\n                }\n            });\n        }\n        if (!this.mousedownSubscription) {\n            this.mousedownSubscription = this.domEvents.cellMousedown.subscribe((args) => {\n                this.mouseDownEventArgs = args;\n                if ((this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") &&\n                    !this.options.checkboxOnly && args.originalEvent.shiftKey)) {\n                    if (this.active) {\n                        args.originalEvent.preventDefault();\n                    }\n                }\n            });\n        }\n        if (this.localDataChangesService && !this.dataChangedSubscription) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe((args) => {\n                if (this.active) {\n                    if (isPresent(args.action) && args.action === 'remove') {\n                        this.deselect(args.item);\n                    }\n                }\n            });\n        }\n    }\n    getIterator() {\n        const accessor = this.settings.view.accessor();\n        if (!accessor) {\n            return;\n        }\n        return accessor[iterator]();\n    }\n    removeSubscriptions() {\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n            this.cellClickSubscription = null;\n        }\n        if (this.mousedownSubscription) {\n            this.mousedownSubscription.unsubscribe();\n            this.mousedownSubscription = null;\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n            this.dataChangedSubscription = null;\n        }\n    }\n}\nSelectionService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSelectionService.ctorParameters = () => [\n    { type: DomEventsService },\n    { type: LocalDataChangesService }\n];\n\n/**\n * @hidden\n */\nclass CellSelectionService {\n    constructor(domEvents, localDataChangesService) {\n        this.domEvents = domEvents;\n        this.localDataChangesService = localDataChangesService;\n        this.changes = new EventEmitter();\n        this.mouseUpEvent = new EventEmitter();\n        this.currentSelection = [];\n        this.active = false;\n        this.dragging = false;\n        this.dragSelectDeselect = false;\n        this.lastSelectionItem = { itemKey: 0, columnKey: 0 };\n        this.lastSelectionItemRowIndex = 0;\n        this.lastSelectionItemColIndex = 0;\n        this.addSubscriptions();\n    }\n    get enableMarquee() {\n        const checkboxOnly = this.settings && typeof this.settings === 'object' && this.settings.checkboxOnly;\n        if (!this.settings || checkboxOnly) {\n            return false;\n        }\n        const selectableSettings = this.settings.selectable;\n        const dragAndMultiple = typeof (selectableSettings) === 'object' &&\n            selectableSettings.mode === 'multiple' &&\n            selectableSettings.cell &&\n            selectableSettings.drag;\n        return this.active && dragAndMultiple;\n    }\n    init(settings) {\n        this.settings = settings;\n        this.currentSelection = [];\n        if (settings.selectable && settings.selectable.enabled !== false) {\n            const iterator$$1 = this.getIterator();\n            let item = iterator$$1.next();\n            while (!item.done) {\n                if (item.value && item.value.type === \"data\") {\n                    const rowArgs = {\n                        dataItem: item.value.data,\n                        index: item.value.index\n                    };\n                    settings.columns.forEach(col => {\n                        const selectedCellArgs = settings.cellSelected(rowArgs, col, col.leafIndex);\n                        if (selectedCellArgs.selected) {\n                            this.currentSelection.push(selectedCellArgs.item);\n                        }\n                    });\n                }\n                item = iterator$$1.next();\n            }\n        }\n    }\n    isCellSelected(item, col) {\n        if (this.settings && this.active) {\n            const selectedCellArgs = this.settings.cellSelected({ dataItem: item.data, index: item.index }, col, col.leafIndex);\n            return selectedCellArgs.selected;\n        }\n        return false;\n    }\n    handleClick(item, event) {\n        if (this.dragging) {\n            this.dragging = false;\n            return;\n        }\n        let ev;\n        const ctrlKey = event.ctrlKey || event.metaKey;\n        if (this.options.mode === \"single\" && ctrlKey && this.isCellSelected(item, item.column)) {\n            ev = this.toggle(item);\n        }\n        else if (this.options.mode === \"multiple\") {\n            if (ctrlKey && !event.shiftKey) {\n                ev = this.toggle(item);\n            }\n            else if (event.shiftKey) {\n                const startRowIndex = Math.min(this.lastSelectionItemRowIndex, item.index);\n                const startColIndex = Math.min(this.lastSelectionItemColIndex, item.column.leafIndex);\n                const endRowIndex = Math.max(this.lastSelectionItemRowIndex, item.index);\n                const endColIndex = Math.max(this.lastSelectionItemColIndex, item.column.leafIndex);\n                ev = this.selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex);\n            }\n        }\n        if (!isPresent(ev)) {\n            ev = this.select(item);\n            this.currentSelection = [this.lastSelectionItem];\n        }\n        if (!ev.selectedCells.length && !ev.deselectedCells.length) {\n            return;\n        }\n        ev.ctrlKey = ctrlKey;\n        ev.shiftKey = event.shiftKey;\n        this.changes.emit(ev);\n    }\n    toggle(item) {\n        let selectedCells = [];\n        let deselectedCells = [];\n        this.lastSelectionItem =\n            this.settings.cellSelected({ dataItem: item.data, index: item.index }, item.column, item.column.leafIndex).item;\n        this.lastSelectionItemRowIndex = item.index;\n        this.lastSelectionItemColIndex = item.column.leafIndex;\n        if (this.isCellSelected(item, item.column)) {\n            deselectedCells.push(this.lastSelectionItem);\n        }\n        else {\n            selectedCells.push(this.lastSelectionItem);\n        }\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    select(item) {\n        const selectedCells = [];\n        const deselectedCells = [];\n        this.lastSelectionItem =\n            this.settings.cellSelected({ dataItem: item.data, index: item.index }, item.column, item.column.leafIndex).item;\n        this.lastSelectionItemRowIndex = item.index;\n        this.lastSelectionItemColIndex = item.column.leafIndex;\n        if (!this.isCellSelected(item, item.column)) {\n            selectedCells.push(this.lastSelectionItem);\n        }\n        this.currentSelection.forEach((selectedItem) => {\n            if (selectedItem.itemKey !== this.lastSelectionItem.itemKey || selectedItem.columnKey !== this.lastSelectionItem.columnKey) {\n                deselectedCells.push(selectedItem);\n            }\n        });\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    //Used to manually deselect removed items\n    deselect(removedItem) {\n        const iterator$$1 = this.getIterator();\n        let item = iterator$$1.next();\n        let rowArgs;\n        while (!item.done) {\n            if (item.value && item.value.type === \"data\" && item.value.data === removedItem) {\n                rowArgs = {\n                    dataItem: item.value.data,\n                    index: item.value.index\n                };\n                break;\n            }\n            item = iterator$$1.next();\n        }\n        if (rowArgs) {\n            const cellsToRemove = this.currentSelection.filter(selectedItem => {\n                const contender = this.settings.cellSelected(rowArgs, null, null).item;\n                return selectedItem.itemKey === contender.itemKey;\n            });\n            if (cellsToRemove.length) {\n                let ev = {\n                    ctrlKey: false,\n                    deselectedCells: cellsToRemove,\n                    selectedCells: []\n                };\n                this.changes.emit(ev);\n            }\n        }\n    }\n    selectRange(startRowIndex, startColIndex, endRowIndex, endColIndex) {\n        const selectedCells = [];\n        const deselectedCells = [];\n        const selectionStartRow = Math.min(startRowIndex, endRowIndex);\n        const selectionStartCol = Math.min(startColIndex, endColIndex);\n        const selectionEndRow = Math.max(startRowIndex, endRowIndex);\n        const selectionEndCol = Math.max(startColIndex, endColIndex);\n        const iterator$$1 = this.getIterator();\n        let next = iterator$$1.next();\n        while (!next.done) {\n            if (next.value && next.value.type === \"data\") {\n                const idx = next.value.index;\n                const data = next.value.data;\n                const rowArgs = {\n                    dataItem: data,\n                    index: idx\n                };\n                this.settings.columns.forEach(col => {\n                    const { item } = this.settings.cellSelected(rowArgs, col, col.leafIndex);\n                    const selected = this.isCellSelected(next.value, col);\n                    const isInRowRange = selectionStartRow <= idx && idx <= selectionEndRow;\n                    const isInColRange = selectionStartCol <= col.leafIndex && col.leafIndex <= selectionEndCol;\n                    const isInSelectionRect = isInRowRange && isInColRange;\n                    if (!isInSelectionRect && selected) {\n                        deselectedCells.push(item);\n                    }\n                    if (isInSelectionRect && !selected) {\n                        selectedCells.push(item);\n                    }\n                });\n            }\n            next = iterator$$1.next();\n        }\n        return {\n            deselectedCells,\n            selectedCells\n        };\n    }\n    get options() {\n        const defaultOptions = {\n            checkboxOnly: false,\n            enabled: true,\n            mode: \"multiple\"\n        };\n        if (!isPresent(this.settings)) {\n            return defaultOptions;\n        }\n        if (typeof this.settings.selectable === 'boolean') {\n            return {\n                checkboxOnly: false,\n                enabled: this.settings.selectable,\n                mode: \"multiple\"\n            };\n        }\n        else {\n            return Object.assign(defaultOptions, this.settings.selectable);\n        }\n    }\n    ngOnDestroy() {\n        this.removeSubscriptions();\n    }\n    addSubscriptions() {\n        if (!this.cellClickSubscription) {\n            this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n                if (this.options.enabled && !this.options.checkboxOnly && args.type !== 'contextmenu') {\n                    if (this.active) {\n                        this.handleClick({ index: args.rowIndex, data: args.dataItem, column: args.column }, args.originalEvent);\n                    }\n                }\n            });\n        }\n        if (!this.mousedownSubscription) {\n            this.mousedownSubscription = this.domEvents.cellMousedown.subscribe((args) => {\n                this.mouseDownEventArgs = args;\n                if (this.options.enabled && (!this.options.mode || this.options.mode === \"multiple\") &&\n                    !this.options.checkboxOnly && args.originalEvent.shiftKey) {\n                    if (this.active) {\n                        args.originalEvent.preventDefault();\n                    }\n                }\n            });\n        }\n        if (this.localDataChangesService && !this.dataChangedSubscription) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe((args) => {\n                if (this.active) {\n                    if (isPresent(args.action) && args.action === 'remove') {\n                        this.deselect(args.item);\n                    }\n                }\n            });\n        }\n    }\n    getIterator() {\n        const accessor = this.settings.view.accessor();\n        if (!accessor) {\n            return;\n        }\n        return accessor[iterator]();\n    }\n    removeSubscriptions() {\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n            this.cellClickSubscription = null;\n        }\n        if (this.mousedownSubscription) {\n            this.mousedownSubscription.unsubscribe();\n            this.mousedownSubscription = null;\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n            this.dataChangedSubscription = null;\n        }\n    }\n}\nCellSelectionService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nCellSelectionService.ctorParameters = () => [\n    { type: DomEventsService },\n    { type: LocalDataChangesService }\n];\n\nconst createElement = () => {\n    const marquee = document.createElement(\"div\");\n    marquee.className = \"k-marquee\";\n    const marqueeColor = document.createElement(\"div\");\n    marqueeColor.className = \"k-marquee-color\";\n    marquee.appendChild(marqueeColor);\n    return marquee;\n};\nconst POINTER_OFFSET = 2;\nconst MINIMAL_DRAG_DISTANCE = 5;\nconst offsets = {\n    topLeft: { x: POINTER_OFFSET, y: POINTER_OFFSET },\n    topRight: { x: -POINTER_OFFSET, y: POINTER_OFFSET },\n    bottomLeft: { x: POINTER_OFFSET, y: -POINTER_OFFSET },\n    bottomRight: { x: -POINTER_OFFSET, y: -POINTER_OFFSET }\n};\n/**\n * @hidden\n */\nclass GridMarqueeDirective {\n    constructor(draggable, selection, cellSelection, domEvents) {\n        this.draggable = draggable;\n        this.selection = selection;\n        this.cellSelection = cellSelection;\n        this.domEvents = domEvents;\n        this.selectionStarted = false;\n    }\n    get userSelection() {\n        return (this.cellSelection.enableMarquee || this.selection.enableMarquee) ? 'none' : null;\n    }\n    ngOnInit() {\n        this.subscriptions = (this.draggable.kendoPress.subscribe(this.start.bind(this)));\n        this.subscriptions.add(this.draggable.kendoDrag.subscribe(this.moveMarquee.bind(this)));\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n        this.clean();\n    }\n    start(args) {\n        if (args.originalEvent.target.classList.contains('k-checkbox')) {\n            this.pressArgs = null;\n            return;\n        }\n        this.pressArgs = args;\n        this.pressTarget = null;\n    }\n    moveMarquee(args) {\n        if (!this.pressTarget) {\n            this.pressTarget = this.cellSelection.active ? this.cellSelection.mouseDownEventArgs : this.selection.mouseDownEventArgs;\n        }\n        const press = this.pressArgs;\n        if (!press) {\n            return;\n        }\n        if (!this.selectionStarted) {\n            const distance = Math.sqrt(Math.pow((args.pageX - press.pageX), 2) + Math.pow((args.pageY - press.pageY), 2));\n            if (distance > MINIMAL_DRAG_DISTANCE) {\n                this.selectionStarted = true;\n                this.dragEndSubscription = merge(this.domEvents.cellMouseup.pipe(take(1)), this.draggable.kendoRelease.pipe(delay(1), take(1)))\n                    .subscribe(this.endSelection.bind(this));\n            }\n            else {\n                return;\n            }\n        }\n        this.initMarquee();\n        const element = this.marqueeElement;\n        const marqueeQuadrant = this.getMarqueeQuadrant(args.pageX, args.pageY, press.pageX, press.pageY);\n        let left = Math.min(args.pageX, press.pageX);\n        let top = Math.min(args.pageY, press.pageY);\n        const width = Math.abs(args.pageX - press.pageX);\n        const height = Math.abs(args.pageY - press.pageY);\n        if (marqueeQuadrant) {\n            left += offsets[marqueeQuadrant].x;\n            top += offsets[marqueeQuadrant].y;\n        }\n        element.style.left = `${left}px`;\n        element.style.top = `${top}px`;\n        element.style.width = `${width}px`;\n        element.style.height = `${height}px`;\n    }\n    endSelection(args) {\n        if (args.type === 'mouseup') {\n            const mouseUpArgs = args;\n            if (this.cellSelection.active) {\n                this.cellSelection.dragging = true;\n                this.cellSelection.changes.emit(this.cellSelection.selectRange(this.pressTarget.rowIndex, this.pressTarget.column.leafIndex, mouseUpArgs.rowIndex, mouseUpArgs.column.leafIndex));\n            }\n            else if (this.selection.active) {\n                this.selection.dragging = true;\n                this.selection.changes.emit(this.selection.selectRange(this.pressTarget.rowIndex, mouseUpArgs.rowIndex));\n            }\n        }\n        this.clean();\n    }\n    clean() {\n        if (this.marqueeElement) {\n            document.body.removeChild(this.marqueeElement);\n            this.marqueeElement = null;\n        }\n        if (this.dragEndSubscription) {\n            this.dragEndSubscription.unsubscribe();\n        }\n        this.dragEndSubscription = null;\n        this.pressTarget = null;\n        this.pressArgs = null;\n        this.selectionStarted = false;\n        this.cellSelection.active ? this.cellSelection.dragging = false : this.selection.dragging = false;\n    }\n    initMarquee() {\n        if (!this.marqueeElement) {\n            this.marqueeElement = createElement();\n            document.body.appendChild(this.marqueeElement);\n        }\n    }\n    getMarqueeQuadrant(pointerX, pointerY, startX, startY) {\n        const leftHalf = pointerX < startX;\n        const rightHalf = pointerX > startX;\n        const topHalf = pointerY < startY;\n        const bottomHalf = pointerY > startY;\n        if (leftHalf && topHalf) {\n            return 'topLeft';\n        }\n        if (leftHalf && bottomHalf) {\n            return 'bottomLeft';\n        }\n        if (rightHalf && topHalf) {\n            return 'topRight';\n        }\n        if (rightHalf && bottomHalf) {\n            return 'bottomRight';\n        }\n        return null;\n    }\n}\nGridMarqueeDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridSelectionMarquee]'\n            },] },\n];\n/** @nocollapse */\nGridMarqueeDirective.ctorParameters = () => [\n    { type: DraggableDirective },\n    { type: SelectionService },\n    { type: CellSelectionService },\n    { type: DomEventsService }\n];\nGridMarqueeDirective.propDecorators = {\n    userSelection: [{ type: HostBinding, args: ['style.user-select',] }]\n};\n\n/**\n * @hidden\n */\nclass ZoneAwareEventEmitter extends EventEmitter {\n    constructor(ngZone, isAsync = false) {\n        super(isAsync);\n        this.ngZone = ngZone;\n    }\n    subscribe(generatorOrNext, error, complete) {\n        let schedulerFn;\n        let errorFn = (_) => null;\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = (value) => { this.ngZone.run(() => generatorOrNext.next(value)); };\n            if (generatorOrNext.error) {\n                errorFn = (err) => { this.ngZone.run(() => generatorOrNext.error(err)); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = () => { this.ngZone.run(() => generatorOrNext.complete()); };\n            }\n        }\n        else {\n            schedulerFn = (value) => { this.ngZone.run(() => generatorOrNext(value)); };\n            if (error) {\n                errorFn = (err) => { this.ngZone.run(() => error(err)); };\n            }\n            if (complete) {\n                completeFn = () => { this.ngZone.run(() => complete()); };\n            }\n        }\n        return super.subscribe(schedulerFn, errorFn, completeFn);\n    }\n}\n\n/**\n * Represents the column cell template of the Grid ([more information and example]({% slug templates_columns_grid %}#toc-cell-template)).\n * Helps to customize the content of the cells. To define the cell template, nest an `<ng-template>` tag\n * with the `kendoGridCellTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index. Use it as an alias for a template variable by utilizing the `let-columnIndex=\"columnIndex\"` syntax.\n * - `rowIndex`&mdash;The current data row index. Use it as an alias for a template variable by utilizing the `let-rowIndex=\"rowIndex\"` syntax.\n * - `dataItem`&mdash;The current data item. Represents the default context that will be assigned to any template variable which utilizes the `let-x` syntax&mdash;for example, `let-dataItem`.\n * - `column`&mdash;The current column instance. Use it as an alias for a template variable by utilizing the `let-column=\"column\"` syntax.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridCellTemplate let-dataItem let-rowIndex=\"rowIndex\">\n *                     Data Row #: {{rowIndex}} /\n *                     <strong>{{dataItem.ProductName}}</strong>\n *                     ({{dataItem.Discontinued ? \"discontinued\" : \"active\"}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass CellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the group-header cell template of the Grid which helps to customize the content of the group header item.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n * - `index`&mdash;The index of the current group.\n * - `expanded`&mdash;A boolean value indicating if the group is currently expanded.\n * ([see example]({% slug groupable_grid_with_aggregates %})).\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupHeaderTemplate let-group let-field=\"field\" let-value=\"value\">\n *                    <strong>{{field}}</strong>: {{value}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\" }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n *\n * ```\n */\nclass GroupHeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridGroupHeaderTemplate]'\n            },] },\n];\n/** @nocollapse */\nGroupHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the group-header column template of the Grid which helps to customize the content of the group headers.\n * To define the group header template, nest an `<ng-template>` tag with the `kendoGridGroupHeaderColumnTemplate`\n * directive inside `<kendo-grid-column>`.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `group`&mdash;The current group item.\n * - `field`&mdash;The name of the field by which data is grouped.\n * - `value`&mdash;The current group value.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * {% meta height:600 %}\n * {% embed_file grouping/app.component.ts preview %}\n * {% embed_file grouping/app.module.ts %}\n * {% embed_file grouping/main.ts %}\n * {% endmeta %}\n *\n * ```\n */\nclass GroupHeaderColumnTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupHeaderColumnTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridGroupHeaderColumnTemplate]'\n            },] },\n];\n/** @nocollapse */\nGroupHeaderColumnTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the column edit-cell template of the Grid ([see example]({% slug editing_template_forms_grid %})).\n * Helps to customize the content of the edited cells. To define the cell template, nest an `<ng-template>`\n * tag with the `kendoGridEditTemplate` directive inside a `<kendo-grid-column>` tag.\n *\n * The template context contains the following fields:\n * - `formGroup`&mdash;The current [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }}).\n * If you use the Grid inside [Template-Driven Forms]({{ site.data.urls.angular['forms'] }}), it will be `undefined`.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex` is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n */\nclass EditTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nEditTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridEditTemplate]'\n            },] },\n];\n/** @nocollapse */\nEditTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the column group footer cell template of the Grid which helps to customize the group footer cell for the column.\n * To define the group footer template, nest an `<ng-template>` tag with the `kendoGridGroupFooterTemplate` directive\n * inside `<kendo-grid-column>`.\n *\n * The template context is set to the current aggregates and the following additional fields are passed:\n * - `column`&mdash;Defines an instance of the `ColumnComponent` option.\n * - `field`&mdash;The current column field name.\n * - `group`&mdash;The current group data item.\n * - `aggregates`&mdash;All aggregate values for the current group.\n *\n * @example\n * ```ts-preview\n * import { process } from '@progress/kendo-data-query';\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" [group]=\"groups\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridGroupFooterTemplate let-aggregates let-field=\"field\">\n *                    Count: {{aggregates[field].count}}\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public groups = [{ field: \"ProductName\", aggregates: [{ field: \"ProductName\", aggregate: \"count\" }] }];\n *\n *     public gridData = process([{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ], {\n *      group: this.groups\n *     });\n * }\n * ```\n */\nclass GroupFooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nGroupFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridGroupFooterTemplate]'\n            },] },\n];\n/** @nocollapse */\nGroupFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the column header cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-header-template)).\n * Helps to customize the table header cell for the column.\n * To define a header template, nest an `<ng-template>` tag with the\n * [`kendoGridHeaderTemplate`]({% slug api_grid_headertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n *  The template context is set to the current column and then the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [`ColumnComponent`]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridHeaderTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass HeaderTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nHeaderTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridHeaderTemplate]'\n            },] },\n];\n/** @nocollapse */\nHeaderTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the column footer cell template of the Grid\n * ([more information and example]({% slug templates_columns_grid %}#toc-footer-template)).\n * Helps to customize the table footer cell for the column.\n * To define a footer template, nest an `<ng-template>` tag with the\n * [`kendoGridFooterTemplate`]({% slug api_grid_footertemplatedirective %}) directive inside the `<kendo-grid-column>` tag.\n *\n * The template context is set to the current column and the following additional fields are passed:\n * * `column`&mdash;Defines an instance of the [`ColumnComponent`]({% slug api_grid_columncomponent %}) option.\n * * `columnIndex`&mdash;Defines the current column index.\n *\n * For more information on how to display aggregates in the footer of the Grid,\n * refer to the article on [aggregates]({% slug groupable_grid_with_aggregates %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\" scrollable=\"none\">\n *             <kendo-grid-column field=\"ProductName\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *                 <ng-template kendoGridFooterTemplate let-column let-columnIndex=\"columnIndex\">\n *                   {{column.field}}({{columnIndex}})\n *                 </ng-template>\n *             </kendo-grid-column>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass FooterTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFooterTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridFooterTemplate]'\n            },] },\n];\n/** @nocollapse */\nFooterTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/* tslint:disable:max-line-length */\n/**\n * Represents the template for the column menu in the Grid. Provides an option for\n * customizing the content of the column menu for all or for specific columns.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuTemplate` directive inside the `kendo-grid` or the `<kendo-grid-column>` component.\n *\n * The template context is passes through the following fields:\n * - `service`&mdash;Represents the [ColumnMenuService]({% slug api_grid_columnmenuservice %}).\n * - `column`&mdash;Represents the Grid column.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\">\n *              <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *                  <kendo-grid-columnmenu-lock [service]=\"service\">\n *                  </kendo-grid-columnmenu-lock>\n *                  <kendo-grid-columnmenu-sort [service]=\"service\">\n *                  </kendo-grid-columnmenu-sort>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\nclass ColumnMenuTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnMenuTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridColumnMenuTemplate]'\n            },] },\n];\n/** @nocollapse */\nColumnMenuTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * @hidden\n */\nconst isSpanColumn = column => column.isSpanColumn;\n/**\n * @hidden\n */\nconst isCheckboxColumn = column => column.isCheckboxColumn;\nconst isColumnContainer = column => column.isColumnGroup || isSpanColumn(column);\n/**\n * The base class for the column components of the Grid.\n */\nclass ColumnBase$1 {\n    constructor(parent) {\n        this.parent = parent;\n        /**\n         * @hidden\n         */\n        this.matchesMedia = true;\n        /**\n         * The column index after reordering.\n         *\n         * > `orderIndex` is a read-only property. Setting this field does not affect column order.\n         */\n        this.orderIndex = 0;\n        /**\n         * @hidden\n         */\n        this.isColumnGroup = false;\n        /**\n         * @hidden\n         */\n        this.isSpanColumn = false;\n        /**\n         * Indicates whether the column is resizable.\n         * @default true\n         */\n        this.resizable = true;\n        /**\n         * Indicates whether the column is reorderable.\n         * @default true\n         */\n        this.reorderable = true;\n        /**\n         * The width (in pixels) below which the user is not able to resize the column by using the UI.\n         */\n        this.minResizableWidth = 10;\n        /**\n         * Toggles the locked (frozen) state of the columns ([more information and example]({% slug locked_columns_grid %})).\n         *\n         * @default false\n         *\n         * @example\n         * ```ts\n         * _@Component({\n         *    selector: 'my-app',\n         *    template: `\n         *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n         *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\" [locked]=\"true\">\n         *          </kendo-grid-column>\n         *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n         *          </kendo-grid-column>\n         *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n         *          </kendo-grid-column>\n         *        </kendo-grid>\n         *    `\n         * })\n         *\n         * class AppComponent {\n         *    public gridData: any[];\n         *\n         *    constructor() {\n         *        this.gridData = products;\n         *    }\n         * }\n         *\n         * const products = [{\n         *    \"ProductID\": 1,\n         *    \"ProductName\": \"Chai\",\n         *    \"UnitPrice\": 18.0000,\n         *    \"Discontinued\": true\n         *  }, {\n         *    \"ProductID\": 2,\n         *    \"ProductName\": \"Chang\",\n         *    \"UnitPrice\": 19.0000,\n         *    \"Discontinued\": false\n         *  }\n         * ];\n         *\n         * ```\n         */\n        this.locked = false;\n        /**\n         * Specifies if the column can be locked or unlocked from the column menu or by reordering the columns.\n         */\n        this.lockable = true;\n        /**\n         * Specifies if the column menu will be shown for the column.\n         */\n        this.columnMenu = true;\n        /**\n         * Specifies if the column will be included in the column-chooser list.\n         */\n        this.includeInChooser = true;\n        /**\n         * @hidden\n         */\n        this.headerTemplates = new QueryList();\n        /**\n         * @hidden\n         */\n        this.columnMenuTemplates = new QueryList();\n        if (parent && !isColumnContainer(parent)) {\n            throw new Error('Columns can be nested only inside ColumnGroupComponent');\n        }\n    }\n    /**\n     * The width of the column (in pixels).\n     */\n    set width(value) {\n        this._width = parseInt(value, 10);\n    }\n    get width() { return this._width; }\n    /**\n     * @hidden\n     */\n    get level() {\n        if (this.parent && isSpanColumn(this.parent)) {\n            return this.parent.level;\n        }\n        return this.parent ? this.parent.level + 1 : 0;\n    }\n    /**\n     * @hidden\n     */\n    get isLocked() {\n        return this.parent ? this.parent.isLocked : this.locked;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    rowspan(totalColumnLevels) {\n        return this.level < totalColumnLevels ? (totalColumnLevels - this.level) + 1 : 1;\n    }\n    /**\n     * @hidden\n     */\n    get headerTemplateRef() {\n        const template = this.headerTemplates.first;\n        return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get footerTemplateRef() {\n        return this.footerTemplate ? this.footerTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get columnMenuTemplateRef() {\n        const template = this.columnMenuTemplates.first;\n        return template ? template.templateRef : null;\n    }\n    /**\n     * @hidden\n     */\n    get displayTitle() {\n        return this.title;\n    }\n    /**\n     * @hidden\n     */\n    get isVisible() {\n        return !this.hidden && this.matchesMedia;\n    }\n}\nColumnBase$1.propDecorators = {\n    resizable: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    minResizableWidth: [{ type: Input }],\n    title: [{ type: Input }],\n    width: [{ type: Input }],\n    autoSize: [{ type: Input }],\n    locked: [{ type: Input }],\n    hidden: [{ type: Input }],\n    media: [{ type: Input }],\n    lockable: [{ type: Input }],\n    columnMenu: [{ type: Input }],\n    includeInChooser: [{ type: Input }],\n    style: [{ type: Input }],\n    headerStyle: [{ type: Input }],\n    footerStyle: [{ type: Input }],\n    cssClass: [{ type: Input, args: ['class',] }],\n    headerClass: [{ type: Input }],\n    footerClass: [{ type: Input }],\n    headerTemplates: [{ type: ContentChildren, args: [HeaderTemplateDirective, { descendants: false },] }],\n    footerTemplate: [{ type: ContentChild, args: [FooterTemplateDirective,] }],\n    columnMenuTemplates: [{ type: ContentChildren, args: [ColumnMenuTemplateDirective,] }]\n};\n\n/**\n * Represents the filter-cell template ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-rows)).\n */\nclass FilterCellTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFilterCellTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridFilterCellTemplate]'\n            },] },\n];\n/** @nocollapse */\nFilterCellTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents the filter-menu template\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-customizing-filter-menus)).\n */\nclass FilterMenuTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nFilterMenuTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridFilterMenuTemplate]'\n            },] },\n];\n/** @nocollapse */\nFilterMenuTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * @hidden\n */\nfunction isColumnComponent(column) {\n    return isPresent(column.field);\n}\n/**\n * Represents the columns of the [Angular Data Grid]({% slug overview_grid %}).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass ColumnComponent extends ColumnBase$1 {\n    constructor(parent) {\n        super(parent);\n        /**\n         * Allows the column headers to be clicked and the `sortChange` event emitted.\n         * You have to handle the `sortChange` event yourself and sort the data.\n         */\n        this.sortable = true;\n        /**\n         * Determines if the column can be dragged to the group panel. The default value is `true`.\n         * If set to `false`, you can group the columns by the column field by using the API of the Grid.\n         */\n        this.groupable = true;\n        /**\n         * Defines the editor type ([see example]({% slug editing_reactive_forms_grid %}#toc-setup)).\n         * Used when the column enters the edit mode. The default value is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" editor=\"numeric\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.editor = 'text';\n        /**\n         * Defines the filter type that is displayed inside the filter row. The default value is `text`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" filter=\"numeric\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.filter = 'text';\n        /**\n         * Defines if a filter UI will be displayed for this column. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [filterable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.filterable = true;\n        /**\n         * Defines whether the column is editable. The default value is `true`.\n         *\n         * @example\n         * ```html-no-run\n         * <kendo-grid>\n         *    <kendo-grid-column field=\"UnitPrice\" [editable]=\"false\">\n         *    </kendo-grid-column>\n         * </kendo-grid>\n         * ```\n         */\n        this.editable = true;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n    get groupHeaderTemplateRef() {\n        return this.groupHeaderTemplate ? this.groupHeaderTemplate.templateRef : undefined;\n    }\n    get groupHeaderColumnTemplateRef() {\n        return this.groupHeaderColumnTemplate ? this.groupHeaderColumnTemplate.templateRef : undefined;\n    }\n    get groupFooterTemplateRef() {\n        return this.groupFooterTemplate ? this.groupFooterTemplate.templateRef : undefined;\n    }\n    get editTemplateRef() {\n        return this.editTemplate ? this.editTemplate.templateRef : undefined;\n    }\n    get filterCellTemplateRef() {\n        return this.filterCellTemplate ? this.filterCellTemplate.templateRef : undefined;\n    }\n    get filterMenuTemplateRef() {\n        return this.filterMenuTemplate ? this.filterMenuTemplate.templateRef : undefined;\n    }\n    get displayTitle() {\n        return this.title === undefined ? this.field : this.title;\n    }\n}\nColumnComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: ColumnBase$1,\n                        useExisting: forwardRef(() => ColumnComponent)\n                    }\n                ],\n                selector: 'kendo-grid-column',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nColumnComponent.ctorParameters = () => [\n    { type: ColumnBase$1, decorators: [{ type: SkipSelf }, { type: Host }, { type: Optional }] }\n];\nColumnComponent.propDecorators = {\n    field: [{ type: Input }],\n    format: [{ type: Input }],\n    sortable: [{ type: Input }],\n    groupable: [{ type: Input }],\n    editor: [{ type: Input }],\n    filter: [{ type: Input }],\n    filterable: [{ type: Input }],\n    editable: [{ type: Input }],\n    template: [{ type: ContentChild, args: [CellTemplateDirective,] }],\n    groupHeaderTemplate: [{ type: ContentChild, args: [GroupHeaderTemplateDirective,] }],\n    groupHeaderColumnTemplate: [{ type: ContentChild, args: [GroupHeaderColumnTemplateDirective,] }],\n    groupFooterTemplate: [{ type: ContentChild, args: [GroupFooterTemplateDirective,] }],\n    editTemplate: [{ type: ContentChild, args: [EditTemplateDirective,] }],\n    filterCellTemplate: [{ type: ContentChild, args: [FilterCellTemplateDirective,] }],\n    filterMenuTemplate: [{ type: ContentChild, args: [FilterMenuTemplateDirective,] }]\n};\n\n/**\n * @hidden\n */\nfunction isSpanColumnComponent(column) {\n    return column.isSpanColumn;\n}\n/**\n * Represents a column which can be spanned over multiple data cells while the individual\n * header and footer cells are retained ([see example]({% slug spanned_columns_grid %})).\n * Enables you to achieve more flexible layout while keeping the built-in UI element for\n * [sorting]({% slug sorting_grid %}), [filtering]({% slug filtering_grid %}), and\n * [grouping]({% slug groupingbasics_grid %}). Wrap the columns that will be\n * merged inside the `<kendo-grid-span-column>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid\n *              [sortable]=\"true\"\n *              [filterable]=\"true\"\n *              [kendoGridBinding]=\"products\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-span-column>\n *              <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *              </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" filter=\"numeric\" width=\"180\" format=\"{0:c}\">\n *              </kendo-grid-column>\n *          </kendo-grid-span-column>\n *          <kendo-grid-column field=\"Discontinued\" width=\"120\" filter=\"boolean\">\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *              </ng-template>\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *   public products = [{\n *      \"ProductID\": 1,\n *      \"ProductName\": \"Chai\",\n *      \"UnitPrice\": 18.0000,\n *      \"Discontinued\": true\n *    }, {\n *      \"ProductID\": 2,\n *      \"ProductName\": \"Chang\",\n *      \"UnitPrice\": 19.0000,\n *      \"Discontinued\": false\n *    }\n *   ];\n * }\n *\n * ```\n *\n * By default, the data cell displays the data for the specified fields. To further customize\n * the span-column functionality, use a [cell template]({% slug api_grid_celltemplatedirective %}).\n *\n * ```html-no-run\n * <kendo-grid-span-column>\n *  <kendo-grid-column field=\"field1\" title=\"Field 1\"></kendo-grid-column>\n *  <kendo-grid-column field=\"field2\" title=\"Field 2\"></kendo-grid-column>\n *    <ng-template kendoGridCellTemplate let-dataItem>\n *        <h5>{{ dataItem.field1 }}</h5>\n *        <p>{{ dataItem.field2 }}</p>\n *    </ng-template>\n *  </kendo-grid-span-column>\n * ```\n */\nclass SpanColumnComponent extends ColumnBase$1 {\n    constructor(parent) {\n        super(parent);\n        /*\n         * @hidden\n         */\n        this.isSpanColumn = true;\n        this.template = new QueryList();\n        this.editTemplate = new QueryList();\n        /**\n         * @hidden\n         */\n        this.childColumns = new QueryList();\n        /**\n         * @hidden\n         */\n        this.includeInChooser = false;\n        this._editable = true;\n        this._locked = false;\n        if (parent && parent.isSpanColumn) {\n            throw new Error('SpanColumn cannot be nested inside another SpanColumn');\n        }\n    }\n    /**\n     * Defines whether the edit template of the column will be rendered. The default value is `false`.\n     *\n     * > To enable the editing functionality for a spanned column, set an edit template for it.\n     *\n     * @example\n     * ```html-no-run\n     * <kendo-grid>\n     *    <kendo-grid-span-column [editable]=\"false\">\n     *      <kendo-grid-column field=\"UnitPrice\">\n     *      </kendo-grid-column>\n     *      <kendo-grid-column field=\"ProductName\">\n     *      </kendo-grid-column>\n     *      <ng-template kendoGridEditTemplate>\n     *         .....\n     *      </ng-template>\n     *    </kendo-grid-span-column>\n     * </kendo-grid>\n     * ```\n     */\n    set editable(value) {\n        this._editable = value;\n    }\n    get editable() {\n        return isPresent(this.editTemplateRef) && this._editable;\n    }\n    /**\n     * @hidden\n     * added for backwards compitability\n     */\n    set width(_value) {\n    }\n    get width() {\n        return this.childColumns.reduce((total, column) => total + column.width, 0);\n    }\n    /**\n     * @hidden\n     */\n    get leafIndex() {\n        return this.childColumns.first.leafIndex;\n    }\n    /**\n     * @hidden\n     */\n    get templateRef() {\n        const template = this.template.first;\n        return template ? template.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get editTemplateRef() {\n        const editTemplate = this.editTemplate.first;\n        return editTemplate ? editTemplate.templateRef : undefined;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        return this.childColumns.filter(c => c.isVisible).length;\n    }\n    /**\n     * Toggles the locked (frozen) state of the columns. Locked columns are visible\n     * at all times during the horizontal scrolling of the Grid.\n     *\n     * For the option to work properly, make sure that:\n     * - Scrolling is enabled.\n     * - The `height` option of the Grid is set.\n     * - The widths of all Grid columns are explicitly set in pixels. In this way,\n     * the Grid adjusts the layout of the locked and unlocked columns.\n     *\n     * @default false\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [scrollable]=\"scrollable\" style=\"height: 200px\">\n     *          <kendo-grid-span-column [locked]=\"true\">\n     *             <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n     *             </kendo-grid-column>\n     *             <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"200\">\n     *             </kendo-grid-column>\n     *          </kendo-grid-span-column>\n     *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n     *          </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     *\n     * class AppComponent {\n     *    public gridData: any[];\n     *\n     *    constructor() {\n     *        this.gridData = products;\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     *\n     * ```\n     */\n    set locked(value) {\n        this._locked = value;\n    }\n    get locked() {\n        return this._locked || this.childColumns.some(c => c.locked);\n    }\n    get childrenArray() {\n        return this.childColumns.toArray();\n    }\n    get hasChildren() {\n        return this.childColumns.length > 0;\n    }\n}\nSpanColumnComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: ColumnBase$1,\n                        useExisting: forwardRef(() => SpanColumnComponent)\n                    }\n                ],\n                selector: 'kendo-grid-span-column',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nSpanColumnComponent.ctorParameters = () => [\n    { type: ColumnBase$1, decorators: [{ type: SkipSelf }, { type: Host }, { type: Optional }] }\n];\nSpanColumnComponent.propDecorators = {\n    template: [{ type: ContentChildren, args: [CellTemplateDirective, { descendants: false },] }],\n    editTemplate: [{ type: ContentChildren, args: [EditTemplateDirective, { descendants: false },] }],\n    childColumns: [{ type: ContentChildren, args: [ColumnComponent,] }],\n    editable: [{ type: Input }],\n    locked: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nconst expandColumns = (columns) => (columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ? column.childrenArray : [column]), []) // tslint:disable-line:align\n);\n/**\n * @hidden\n */\nconst expandColumnsWithSpan = (columns) => (columns.reduce((acc, column) => acc.concat(isSpanColumnComponent(column) ?\n    [column].concat(column.childrenArray) :\n    [column]), []) // tslint:disable-line:align\n);\n/**\n * @hidden\n */\nconst columnsToRender = (columns) => (expandColumns(columns).filter(x => x.isVisible));\nconst sumProp = (prop) => (array) => (array || []).reduce((prev, curr) => prev + (curr[prop] || 0), 0);\n/**\n * @hidden\n */\nconst sumColumnWidths = sumProp('width');\n/**\n * @hidden\n */\nconst columnsSpan = sumProp('colspan');\n// tslint:disable-next-line:max-line-length\nconst validField = new RegExp(`^[$A-Z\\_a-z][$A-Z\\_a-z0-9\\\\.]*$`);\n/**\n * @hidden\n */\nconst isValidFieldName = (fieldName) => !isNullOrEmptyString(fieldName) && validField.test(fieldName) &&\n    fieldName[0] !== \".\" && fieldName[fieldName.length - 1] !== \".\";\n/**\n * @hidden\n */\nconst children = column => column.children.filter(child => child !== column);\n/**\n * @hidden\n */\nconst leafColumns = columns => {\n    return columns.reduce((acc, column) => {\n        if (column.isColumnGroup) {\n            acc = acc.concat(leafColumns(children(column)));\n        }\n        else if (column.isSpanColumn) {\n            acc = acc.concat(column.childrenArray);\n        }\n        else {\n            acc.push(column);\n        }\n        return acc;\n    }, []).filter(x => x.isVisible); // tslint:disable-line:align\n};\n/**\n * @hidden\n */\nconst someLeafColumn = (callback, ...columns) => leafColumns(columns).some(callback);\n/**\n * @hidden\n */\nconst resizableColumns = columns => columns.filter(column => isTruthy(column.resizable) && column.isVisible);\n/**\n * @hidden\n */\nconst sortColumns = (columns) => orderBy(columns, [{ field: 'orderIndex', dir: 'asc' }]);\n/**\n * @hidden\n */\nconst isInSpanColumn = (column) => isTruthy(column.parent) && isSpanColumnComponent(column.parent);\n\n/**\n * @hidden\n */\nfunction isColumnGroupComponent(column) {\n    return column.isColumnGroup;\n}\n/**\n * Represents the column group header of the Grid\n * ([more information and examples]({% slug multicolumnheaders_columns_grid %})).\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *     <kendo-grid [data]=\"gridData\">\n *       <kendo-grid-column-group title=\"Product Info\">\n *         <ng-template kendoGridHeaderTemplate let-columnIndex=\"columnIndex\" let-column=\"column\">\n *               Column index: {{columnIndex}} / column title: {{column.title}}\n *         </ng-template>\n *         <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *         </kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *         </kendo-grid-column>\n *       </kendo-grid-column-group>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"Discontinued\" width=\"120\">\n *           <ng-template kendoGridCellTemplate let-dataItem>\n *               <input type=\"checkbox\" [checked]=\"dataItem.Discontinued\" disabled/>\n *           </ng-template>\n *       </kendo-grid-column>\n *     </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass ColumnGroupComponent extends ColumnBase$1 {\n    constructor(parent) {\n        super(parent);\n        this.parent = parent;\n        /**\n         * @hidden\n         */\n        this.includeInChooser = false;\n        /**\n         * @hidden\n         */\n        this.isColumnGroup = true;\n        /**\n         * @hidden\n         */\n        this.minResizableWidth = 10;\n        if (parent && parent.isSpanColumn) {\n            throw new Error('ColumnGroupComponent cannot be nested inside SpanColumnComponent');\n        }\n    }\n    /**\n     * @hidden\n     */\n    rowspan() {\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    get colspan() {\n        if (!this.children || this.children.length === 1) {\n            return 1;\n        }\n        return columnsSpan(this.children\n            .filter(child => child !== this && child.isVisible));\n    }\n    /**\n     * @hidden\n     */\n    get leafIndex() {\n        return this.children ? (this.firstChild || {}).leafIndex : -1;\n    }\n    get childrenArray() {\n        return this.children.filter(c => c !== this);\n    }\n    get hasChildren() {\n        return Boolean(this.firstChild);\n    }\n    get firstChild() {\n        return this.children.find(column => column !== this);\n    }\n}\nColumnGroupComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: ColumnBase$1,\n                        useExisting: forwardRef(() => ColumnGroupComponent)\n                    }\n                ],\n                selector: 'kendo-grid-column-group',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nColumnGroupComponent.ctorParameters = () => [\n    { type: ColumnBase$1, decorators: [{ type: SkipSelf }, { type: Host }, { type: Optional }] }\n];\nColumnGroupComponent.propDecorators = {\n    children: [{ type: ContentChildren, args: [ColumnBase$1,] }]\n};\n\n/**\n * Represents the detail template of the Grid ([more information and examples]({% slug detailrowtemplate_grid %})).\n * To define the detail template, nest an `<ng-template>` tag with the `kendoGridDetailTemplate` directive inside a `<kendo-grid>` tag.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid\n *         [data]=\"data\"\n *         selectable=\"true\"\n *         style=\"height: 160px\"\n *         >\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridDetailTemplate let-dataItem>\n *           <div *ngIf=\"dataItem.Category\">\n *             <header>{{dataItem.Category?.CategoryName}}</header>\n *             <span>{{dataItem.Category?.Description}}</span>\n *           </div>\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 1,\n *             \"CategoryName\": \"Beverages\",\n *             \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *         }\n *       }, {\n *         \"ProductID\": 3,\n *         \"ProductName\": \"Aniseed Syrup\",\n *         \"UnitPrice\": 10.0000,\n *         \"Discontinued\": false,\n *         \"Category\": {\n *             \"CategoryID\": 2,\n *             \"CategoryName\": \"Condiments\",\n *             \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *         }\n *     }];\n *\n * }\n *\n * ```\n *\n */\nclass DetailTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._condition = () => true;\n    }\n    /**\n     * Defines the function that indicates if a given detail row and the associated **Expand** or **Collapse** button will be displayed.\n     */\n    set showIf(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`showIf must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._condition = fn;\n    }\n    get showIf() {\n        return this._condition;\n    }\n}\nDetailTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridDetailTemplate]'\n            },] },\n];\n/** @nocollapse */\nDetailTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\nDetailTemplateDirective.propDecorators = {\n    showIf: [{ type: Input, args: [\"kendoGridDetailTemplateShowIf\",] }]\n};\n\nconst canCreateElement = () => isDocumentAvailable() && document.createElement;\nlet cachedScrollbarWidth = null;\nlet cachedPixelRatio;\nlet cachedRtlScrollLeft = null;\nfunction scrollbarWidth() {\n    if (cachedScrollbarWidth === null && canCreateElement()) {\n        cachedPixelRatio = window.devicePixelRatio || 1;\n        const div = document.createElement(\"div\");\n        div.style.cssText = \"overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block\";\n        div.innerHTML = \"&nbsp;\";\n        document.body.appendChild(div);\n        cachedScrollbarWidth = div.offsetWidth - div.scrollWidth;\n        document.body.removeChild(div);\n    }\n    return cachedScrollbarWidth;\n}\nfunction rtlScrollLeft() {\n    if (cachedRtlScrollLeft === null && canCreateElement()) {\n        const div = document.createElement(\"div\");\n        div.style.cssText = \"overflow:scroll;zoom:1;clear:both;display:block;width:100px;visibility:hidden;position:absolute;left:-10000px;direction:rtl;\";\n        div.innerHTML = \"<div style='width:200px;height:1px;'</div>\";\n        document.body.appendChild(div);\n        const initial = div.scrollLeft;\n        div.scrollLeft = -1;\n        cachedRtlScrollLeft = div.scrollLeft < 0 ? div.scrollLeft : initial;\n        document.body.removeChild(div);\n    }\n    return cachedRtlScrollLeft;\n}\n/**\n * @hidden\n * move to kendo-common\n */\nclass BrowserSupportService {\n    constructor(zone, changeDetector) {\n        this.zone = zone;\n        this.changeDetector = changeDetector;\n        this.changes = new EventEmitter();\n        if (typeof window === 'undefined') {\n            return;\n        }\n        this.zone.runOutsideAngular(() => {\n            this.subscriptions = fromEvent(window, 'resize').pipe(auditTime(100)).subscribe(() => {\n                if (cachedPixelRatio !== window.devicePixelRatio) {\n                    zone.run(() => {\n                        cachedScrollbarWidth = null;\n                        this.changes.emit();\n                        this.changeDetector.markForCheck();\n                    });\n                }\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n            this.subscriptions = null;\n        }\n    }\n    get scrollbarWidth() {\n        return scrollbarWidth();\n    }\n    get rtlScrollLeft() {\n        return rtlScrollLeft();\n    }\n}\nBrowserSupportService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nBrowserSupportService.ctorParameters = () => [\n    { type: NgZone },\n    { type: ChangeDetectorRef }\n];\n\n/* tslint:disable:use-life-cycle-interface */\nconst isGroupItem = (source) => {\n    return source.items !== undefined &&\n        source.field !== undefined;\n};\nconst isVirtualGroupItem = (source) => {\n    return source.offset !== undefined &&\n        source.skipHeader !== undefined;\n};\nconst flattenGroups = (groups) => (groups.reduce((acc, curr) => {\n    if (isGroupItem(curr)) {\n        return acc.concat(flattenGroups(curr.items));\n    }\n    return acc.concat([curr]);\n}, []) // tslint:disable-line:align\n);\n/**\n * @hidden\n */\nconst itemAt = (data, index) => {\n    const first = data[0];\n    if (isPresent(first) && isGroupItem(first)) {\n        return flattenGroups(data)[index];\n    }\n    return data[index];\n};\n/**\n * @hidden\n */\nconst getIterator$1 = (data, { footers, level, dataIndex, parentGroupIndex, groupIndex }) => {\n    const first = data[0];\n    if (isPresent(first) && isGroupItem(first)) {\n        if (isVirtualGroupItem(first)) {\n            groupIndex = isPresent(first.offset) ? first.offset : groupIndex;\n        }\n        //tslint:disable-next-line:no-use-before-declare\n        return new GroupIterator(data, footers, level, dataIndex, parentGroupIndex, groupIndex);\n    }\n    //tslint:disable-next-line:no-use-before-declare\n    return new ItemIterator(data, dataIndex, parentGroupIndex);\n};\nclass ArrayIterator {\n    constructor(arr, idx = 0) {\n        this.arr = arr;\n        this.idx = idx;\n        this.arr = arr || [];\n    }\n    [iterator]() {\n        return this;\n    }\n    next() {\n        return this.idx < this.arr.length ? {\n            done: false,\n            value: this.arr[this.idx++]\n        } : { done: true, value: undefined };\n    }\n}\n/**\n * @hidden\n */\nclass Iterator {\n    constructor(arr, dataIndex = 0, resultMap = (x) => x) {\n        this.dataIndex = dataIndex;\n        this.resultMap = resultMap;\n        const iter = arr[iterator];\n        this._innerIterator = iter ? arr[iterator]() : new ArrayIterator(arr);\n    }\n    [iterator]() {\n        return this;\n    }\n    next() {\n        return this.resultMap(this._innerIterator.next(), this.dataIndex++);\n    }\n}\n/**\n * @hidden\n */\nclass ItemIterator extends Iterator {\n    constructor(arr, dataIndex, groupIndex) {\n        super(arr, dataIndex, (x, idx) => ({\n            done: x.done,\n            value: {\n                data: x.value,\n                groupIndex: groupIndex,\n                index: idx,\n                type: 'data'\n            }\n        }));\n    }\n    /**\n     * The index of the next record.\n     * @readonly\n     * @type {number}\n     */\n    get index() {\n        return this.dataIndex;\n    }\n}\nconst prefix = (s, n) => {\n    const p = s ? s + \"_\" : s;\n    return `${p}${n}`;\n};\n/**\n * @hidden\n */\nclass GroupIterator {\n    constructor(arr, outputFooters = false, level = 0, dataIndex = 0, parentIndex = \"\", groupIndex = 0) {\n        this.arr = arr;\n        this.outputFooters = outputFooters;\n        this.level = level;\n        this.dataIndex = dataIndex;\n        this.parentIndex = parentIndex;\n        this.groupIndex = groupIndex;\n        this.currentGroupIndex = \"\";\n        this.arr = arr || [];\n        this._iterator = new Iterator(this.arr, this.dataIndex);\n    }\n    [iterator]() {\n        return this;\n    }\n    nextGroupItem() {\n        this.current = this._iterator.next().value;\n        this._innerIterator = null;\n        if (this.current) {\n            this.currentGroupIndex = prefix(this.parentIndex, this.groupIndex++);\n            return {\n                done: false,\n                value: {\n                    data: this.current,\n                    index: this.currentGroupIndex,\n                    level: this.level,\n                    type: 'group'\n                }\n            };\n        }\n        else {\n            this.current = null;\n            return { done: true, value: undefined };\n        }\n    }\n    footerItem() {\n        if (this.current) {\n            const group = this.current;\n            this.current = null;\n            return {\n                done: false,\n                value: {\n                    data: group,\n                    groupIndex: this.currentGroupIndex,\n                    level: this.level,\n                    type: 'footer'\n                }\n            };\n        }\n        else {\n            this.current = null;\n            return { done: true, value: undefined };\n        }\n    }\n    innerIterator(group) {\n        if (!this._innerIterator) {\n            this._innerIterator = getIterator$1(group.items, {\n                dataIndex: this.dataIndex,\n                footers: this.outputFooters,\n                level: this.level + 1,\n                parentGroupIndex: this.currentGroupIndex\n            });\n        }\n        return this._innerIterator;\n    }\n    nextDataItem(group) {\n        const iterator$$1 = this.innerIterator(group);\n        const result = iterator$$1.next();\n        if (isPresent(result.value) && !result.done && result.value.type === \"data\") {\n            this.dataIndex = result.value.index + 1;\n        }\n        return !result.done ? result : undefined;\n    }\n    next() {\n        if (!isPresent(this.current)) {\n            return this.nextGroupItem();\n        }\n        const item = this.nextDataItem(this.current);\n        return item ? item : (this.outputFooters ? this.footerItem() : this.nextGroupItem());\n    }\n    /**\n     * The index of the last iterated data record.\n     * @readonly\n     * @type {number}\n     */\n    get index() {\n        return this.dataIndex + 1;\n    }\n}\n\n/**\n * @hidden\n */\nclass DataResultIterator {\n    constructor(source, skip = 0, groupFooters = false) {\n        this.source = source;\n        this.skip = skip;\n        this.groupFooters = groupFooters;\n        this.source = this.source ? this.source : [];\n        this.isObject = this.isGridDataResult(this.source);\n    }\n    isGridDataResult(source) {\n        return source.total !== undefined && source.data !== undefined;\n    }\n    get total() {\n        return this.isObject ? this.source.total : this.source.length;\n    }\n    get data() {\n        return this.isObject ? this.source.data : this.source;\n    }\n    map(fn) {\n        return this.data.map(fn);\n    }\n    filter(fn) {\n        return this.data.filter(fn);\n    }\n    reduce(fn, init) {\n        return this.data.reduce(fn, init);\n    }\n    forEach(fn) {\n        this.data.forEach(fn);\n    }\n    some(fn) {\n        return this.data.some(fn);\n    }\n    [iterator]() {\n        return getIterator$1(this.data, {\n            dataIndex: this.skip,\n            footers: this.groupFooters,\n            groupIndex: this.skip\n        });\n    }\n    toString() { return this.data.toString(); }\n}\n/**\n * @hidden\n */\nclass DataCollection {\n    constructor(accessor) {\n        this.accessor = accessor;\n    }\n    get total() { return this.accessor().total; }\n    get length() { return this.accessor().data.length; }\n    get first() { return this.accessor().data[0]; }\n    get last() { return this.accessor().data[this.length - 1]; }\n    at(index) {\n        return itemAt(this.accessor().data, index);\n    }\n    map(fn) { return this.accessor().map(fn); }\n    filter(fn) {\n        return this.accessor().filter(fn);\n    }\n    reduce(fn, init) {\n        return this.accessor().reduce(fn, init);\n    }\n    forEach(fn) {\n        this.accessor().forEach(fn);\n    }\n    some(fn) {\n        return this.accessor().some(fn);\n    }\n    [iterator]() {\n        return this.accessor()[iterator]();\n    }\n    toString() { return this.accessor().toString(); }\n}\n\n/* tslint:disable:no-input-rename */\n/**\n * @hidden\n */\nclass Selection {\n    constructor(grid, cd) {\n        this.grid = grid;\n        this.cd = cd;\n        /**\n         * Defines the collection that will store the selected item keys.\n         */\n        this.selectedKeys = [];\n        /**\n         * Fires when the `selectedKeys` collection has been updated.\n         */\n        this.selectedKeysChange = new EventEmitter();\n        this.init();\n    }\n    init() {\n        if (!isPresent(this.grid.rowSelected)) {\n            this.grid.rowSelected = (row) => {\n                return this.selectedKeys.indexOf(this.getItemKey(row)) >= 0;\n            };\n        }\n        if (!isPresent(this.grid.cellSelected)) {\n            this.grid.cellSelected = (row, column, colIndex) => {\n                const contender = this.getSelectionItem(row, column, colIndex);\n                return {\n                    selected: this.selectedKeys.some(item => item.columnKey === contender.columnKey && item.itemKey === contender.itemKey),\n                    item: contender\n                };\n            };\n        }\n        this.selectionChangeSubscription = this.grid\n            .selectionChange\n            .subscribe(this.onSelectionChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    destroy() {\n        this.selectionChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    reset() {\n        this.selectedKeys = [];\n    }\n    getItemKey(row) {\n        if (this.selectionKey) {\n            if (typeof this.selectionKey === \"string\") {\n                return row.dataItem[this.selectionKey];\n            }\n            if (typeof this.selectionKey === \"function\") {\n                return this.selectionKey(row);\n            }\n        }\n        return row.index;\n    }\n    getSelectionItem(row, col, colIndex) {\n        const itemIdentifiers = {};\n        itemIdentifiers.itemKey = this.getItemKey(row);\n        if (!isPresent(col) && !isPresent(colIndex)) {\n            return itemIdentifiers;\n        }\n        if (this.columnKey) {\n            if (typeof this.columnKey === \"string\") {\n                itemIdentifiers.columnKey = row.dataItem[this.columnKey];\n            }\n            if (typeof this.columnKey === \"function\") {\n                itemIdentifiers.columnKey = this.columnKey(col, colIndex);\n            }\n        }\n        return {\n            itemKey: itemIdentifiers.itemKey,\n            columnKey: itemIdentifiers.columnKey ? itemIdentifiers.columnKey : colIndex\n        };\n    }\n    onSelectionChange(selection) {\n        if (selection.selectedRows) {\n            selection.deselectedRows.forEach((item) => {\n                const itemKey = this.getItemKey(item);\n                const itemIndex = this.selectedKeys.indexOf(itemKey);\n                if (itemIndex >= 0) {\n                    this.selectedKeys.splice(itemIndex, 1);\n                }\n            });\n            if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n                this.reset();\n            }\n            selection.selectedRows.forEach((item) => {\n                const itemKey = this.getItemKey(item);\n                if (this.selectedKeys.indexOf(itemKey) < 0) {\n                    this.selectedKeys.push(itemKey);\n                }\n            });\n        }\n        else {\n            selection.deselectedCells.forEach((item) => {\n                const itemIndex = this.getCellSelectionItemIndex(item);\n                if (itemIndex >= 0) {\n                    this.selectedKeys.splice(itemIndex, 1);\n                }\n            });\n            if (this.grid.selectableSettings.mode === \"single\" && this.selectedKeys.length > 0) {\n                this.reset();\n            }\n            selection.selectedCells.forEach((item) => {\n                const itemIndex = this.getCellSelectionItemIndex(item);\n                if (itemIndex < 0) {\n                    this.selectedKeys.push(item);\n                }\n            });\n        }\n        this.cd.markForCheck();\n        this.selectedKeysChange.emit(this.selectedKeys);\n    }\n    getCellSelectionItemIndex(item) {\n        return this.selectedKeys.findIndex(selectedItem => selectedItem.itemKey === item.itemKey && selectedItem.columnKey === item.columnKey);\n    }\n}\nSelection.propDecorators = {\n    selectedKeys: [{ type: Input }],\n    selectionKey: [{ type: Input, args: [\"kendoGridSelectBy\",] }],\n    columnKey: [{ type: Input }],\n    selectedKeysChange: [{ type: Output }]\n};\n\n/**\n * @hidden\n */\nclass PreventableEvent {\n    constructor() {\n        this.prevented = false;\n    }\n    /**\n     * Prevents the default action for a specified event.\n     * In this way, the source component suppresses\n     * the built-in behavior that follows the event.\n     */\n    preventDefault() {\n        this.prevented = true;\n    }\n    /**\n     * Returns `true` if the event was prevented\n     * by any of its subscribers.\n     *\n     * @returns `true` if the default action was prevented.\n     * Otherwise, returns `false`.\n     */\n    isDefaultPrevented() {\n        return this.prevented;\n    }\n}\n\n/**\n * Arguments for the `cellClose` event.\n */\nclass CellCloseEvent extends PreventableEvent {\n    constructor(options) {\n        super();\n        /**\n         * @hidden\n         */\n        this.action = 'cellClose';\n        Object.assign(this, options);\n    }\n}\n\n/**\n * @hidden\n */\nconst isEqual = (index) => (item) => item.index === index;\n/**\n * @hidden\n */\nconst isNotEqual = (index) => (item) => item.index !== index;\n/**\n * @hidden\n */\nconst isNewRow = (index) => index === -1 || index === undefined;\n/**\n * @hidden\n */\nclass EditService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new EventEmitter();\n        this.editedIndices = [];\n        this.keepEditCell = false;\n        this.closingCell = false;\n        this.changedSource = new Subject();\n        this.changed = this.changedSource.asObservable().pipe(switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))));\n    }\n    editRow(index, group = undefined) {\n        this.editedIndices.push({ index, group });\n        this.onChanged();\n    }\n    addRow(group) {\n        this.newItemGroup = { group };\n        this.onChanged();\n    }\n    editCell(rowIndex, column, group) {\n        if (isNewRow(rowIndex) || column.editable === false || !(column.editTemplate || column.field)) {\n            return;\n        }\n        this.preventCellClose();\n        if (!this.closeCell()) {\n            this.editRow(rowIndex, group);\n            this.column = column;\n            this.onChanged();\n        }\n    }\n    isEditing() {\n        return this.editedIndices.length > 0;\n    }\n    isEditingCell() {\n        return this.isEditing() && this.column !== undefined;\n    }\n    get hasNewItem() {\n        return isPresent(this.newItemGroup);\n    }\n    get newDataItem() {\n        if (this.hasNewItem) {\n            return this.newItemGroup.group.value;\n        }\n        return {};\n    }\n    close(index) {\n        if (isNewRow(index)) {\n            this.newItemGroup = undefined;\n            return;\n        }\n        this.editedIndices = this.editedIndices.filter(isNotEqual(index));\n        delete this.column;\n        this.onChanged();\n    }\n    closeCell(originalEvent) {\n        if (this.column && !this.closingCell) {\n            return this.ngZone.run(() => {\n                const { index, group } = this.editedIndices[0];\n                const args = new CellCloseEvent({\n                    column: this.column,\n                    formGroup: group,\n                    originalEvent: originalEvent,\n                    rowIndex: index\n                });\n                this.closingCell = true;\n                this.changes.emit(args);\n                this.closingCell = false;\n                if (!args.isDefaultPrevented()) {\n                    this.cancelCell();\n                }\n                return args.isDefaultPrevented();\n            });\n        }\n    }\n    cancelCell() {\n        if (this.column) {\n            this.editedIndices = [];\n            delete this.column;\n            this.onChanged();\n        }\n    }\n    shouldCloseCell() {\n        return this.column && !this.keepEditCell;\n    }\n    preventCellClose() {\n        this.ngZone.runOutsideAngular(() => {\n            window.clearTimeout(this.keepCellTimeout);\n            this.keepEditCell = true;\n            this.keepCellTimeout = window.setTimeout(() => {\n                this.keepEditCell = false;\n            }, 0); // tslint:disable-line:align\n        });\n    }\n    context(index) {\n        if (isNewRow(index)) {\n            return this.newItemGroup;\n        }\n        return this.findByIndex(index);\n    }\n    columnContext(index, column) {\n        if (isNewRow(index)) {\n            return this.newItemGroup;\n        }\n        if (!this.column || column === this.column) {\n            return this.findByIndex(index);\n        }\n    }\n    isEdited(index) {\n        if (isNewRow(index) && isPresent(this.newItemGroup)) {\n            return true;\n        }\n        return !this.column && isPresent(this.findByIndex(index));\n    }\n    hasEdited(index) {\n        return isPresent(this.context(index));\n    }\n    isEditedColumn(index, column) {\n        if (this.column && this.column === column) {\n            return isPresent(this.findByIndex(index));\n        }\n        return false;\n    }\n    beginEdit(rowIndex) {\n        this.changes.emit({ action: 'edit', rowIndex });\n    }\n    beginAdd() {\n        this.changes.emit({ action: 'add' });\n    }\n    endEdit(rowIndex) {\n        const { group: formGroup } = this.context(rowIndex);\n        this.changes.emit({ action: 'cancel', rowIndex, formGroup, isNew: isNewRow(rowIndex) });\n    }\n    save(rowIndex) {\n        const { group: formGroup } = this.context(rowIndex);\n        this.changes.emit({ action: 'save', rowIndex, formGroup, isNew: isNewRow(rowIndex) });\n    }\n    remove(rowIndex) {\n        this.changes.emit({ action: 'remove', rowIndex });\n    }\n    findByIndex(index) {\n        return this.editedIndices.find(isEqual(index));\n    }\n    onChanged() {\n        this.ngZone.runOutsideAngular(() => {\n            this.changedSource.next();\n        });\n    }\n}\nEditService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nEditService.ctorParameters = () => [\n    { type: NgZone }\n];\n\n/**\n * Arguments for the `detailCollapse` event.\n */\nclass DetailCollapseEvent extends PreventableEvent {\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n}\n\n/**\n * Arguments for the `detailExpand` event.\n */\nclass DetailExpandEvent extends PreventableEvent {\n    constructor(args) {\n        super();\n        Object.assign(this, args);\n    }\n}\n\n/**\n * @hidden\n */\nclass DetailsService {\n    constructor() {\n        this.changes = new Subject();\n        this.rowState = new Set();\n    }\n    ngOnDestroy() {\n        this.rowState.clear();\n    }\n    isExpanded(index, dataItem) {\n        if (this.userCallback) {\n            return this.userCallback({ index, dataItem });\n        }\n        return this.rowState.has(index);\n    }\n    toggleRow(index, dataItem) {\n        if (this.isExpanded(index, dataItem)) {\n            this.collapseRow(index, dataItem);\n        }\n        else {\n            this.expandRow(index, dataItem);\n        }\n    }\n    expandRow(index, dataItem) {\n        const prevented = this.emitEvent({ dataItem, index, expand: true });\n        if (!prevented && !this.userCallback) {\n            this.rowState.add(index);\n        }\n    }\n    collapseRow(index, dataItem) {\n        const prevented = this.emitEvent({ dataItem, index, expand: false });\n        if (!prevented && !this.userCallback) {\n            this.rowState.delete(index);\n        }\n    }\n    emitEvent(args) {\n        const eventArg = new (args.expand ? DetailExpandEvent : DetailCollapseEvent)(args);\n        this.changes.next(eventArg);\n        return eventArg.isDefaultPrevented();\n    }\n}\nDetailsService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass ExpandStateService {\n    constructor(isInitiallyCollapsed) {\n        this.isInitiallyCollapsed = isInitiallyCollapsed;\n        this.changes = new Subject();\n        this.rowState = new Set();\n    }\n    toggleRow(index, dataItem) {\n        const found = this.rowState.has(index);\n        const expand = !this.isInitiallyCollapsed ? found : !found;\n        const prevented = this.emitEvent({ dataItem, expand, index });\n        if (prevented) {\n            return;\n        }\n        if (found) {\n            this.rowState.delete(index);\n        }\n        else {\n            this.rowState.add(index);\n        }\n    }\n    isExpanded(index) {\n        const found = this.rowState.has(index);\n        return this.isInitiallyCollapsed ? found : !found;\n    }\n    reset() {\n        this.rowState.clear();\n    }\n    emitEvent(args) {\n        this.changes.next(args);\n        return false;\n    }\n}\n\nconst removeLast = groupIndex => groupIndex.lastIndexOf(\"_\") > -1\n    ? groupIndex.slice(0, groupIndex.lastIndexOf(\"_\"))\n    : \"\";\nconst isChildIndex = (targetIndex, parentIndex) => parentIndex !== targetIndex && targetIndex.startsWith(parentIndex);\n/**\n * @hidden\n */\nclass GroupsService extends ExpandStateService {\n    constructor(isCollapsed = false) {\n        super(isCollapsed);\n    }\n    isInExpandedGroup(groupIndex, skipSelf = true) {\n        if (skipSelf) {\n            groupIndex = removeLast(groupIndex);\n        }\n        let expanded = true;\n        while (groupIndex && expanded) {\n            expanded = this.isExpanded(groupIndex);\n            groupIndex = removeLast(groupIndex);\n        }\n        return expanded;\n    }\n    expandChildren(parentIndex) {\n        this.rowState.forEach(index => isChildIndex(index, parentIndex) && this.rowState.delete(index));\n    }\n}\nGroupsService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nGroupsService.ctorParameters = () => [\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [Skip,] }] }\n];\n\nconst reset = (...lists) => {\n    let diff = false;\n    for (let idx = 0; idx < lists.length; idx++) {\n        const [list, columns] = lists[idx];\n        diff = diff || list.length !== columns.length;\n        list.reset(columns);\n    }\n    return diff;\n};\n/**\n * @hidden\n */\nclass ColumnsContainer {\n    constructor(columns) {\n        this.columns = columns;\n        this.allColumns = new QueryList();\n        this.leafColumns = new QueryList();\n        this.lockedColumns = new QueryList();\n        this.nonLockedColumns = new QueryList();\n        this.lockedLeafColumns = new QueryList();\n        this.nonLockedLeafColumns = new QueryList();\n        this.totalLevels = 0;\n        this.changes = new EventEmitter();\n        this.leafColumnsToRender = [];\n        this.lockedColumnsToRender = [];\n        this.nonLockedColumnsToRender = [];\n        this.hasGroupHeaderColumn = false;\n        this.hasGroupFooter = false;\n        this.hasFooter = false;\n        this.unlockedWidth = 0;\n    }\n    refresh() {\n        const currentLevels = this.totalLevels;\n        const leafColumns$$1 = new Array();\n        const lockedLeafColumns = new Array();\n        const nonLockedLeafColumns = new Array();\n        const lockedColumns = new Array();\n        const nonLockedColumns = new Array();\n        const allColumns = new Array();\n        const leafColumnsToRender = new Array();\n        const lockedColumnsToRender = new Array();\n        const nonLockedColumnsToRender = new Array();\n        let hasGroupHeaderColumn = false;\n        let hasGroupFooter = false;\n        let hasFooter = false;\n        let unlockedWidth = 0;\n        let leafIndex = 0;\n        this.totalLevels = 0;\n        this.columns().forEach(column => {\n            const containerLeafColumns = column.isLocked === true ? lockedLeafColumns : nonLockedLeafColumns;\n            const containerColumns = column.isLocked === true ? lockedColumns : nonLockedColumns;\n            const toRenderContainer = column.isLocked === true ? lockedColumnsToRender : nonLockedColumnsToRender;\n            if (!isColumnGroupComponent(column)) {\n                containerLeafColumns.push(column);\n                leafColumns$$1.push(column);\n                leafColumnsToRender.push.apply(leafColumnsToRender, columnsToRender([column]));\n                toRenderContainer.push.apply(toRenderContainer, columnsToRender([column]));\n                hasGroupHeaderColumn = hasGroupHeaderColumn || someLeafColumn(leaf => Boolean(leaf.groupHeaderColumnTemplateRef), column);\n                hasGroupFooter = hasGroupFooter || someLeafColumn(leaf => Boolean(leaf.groupFooterTemplateRef), column);\n                hasFooter = hasFooter || someLeafColumn(leaf => Boolean(leaf.footerTemplateRef), column);\n                if (!column.isLocked) {\n                    unlockedWidth += column.width || 0;\n                }\n                if (column.isSpanColumn) {\n                    column.childColumns.forEach(c => {\n                        c.leafIndex = leafIndex++;\n                    });\n                }\n                else {\n                    column.leafIndex = leafIndex++;\n                }\n            }\n            containerColumns.push(column);\n            allColumns.push(column);\n            this.totalLevels = column.level > this.totalLevels ? column.level : this.totalLevels;\n        });\n        this.hasGroupHeaderColumn = hasGroupHeaderColumn;\n        this.hasGroupFooter = hasGroupFooter;\n        this.hasFooter = hasFooter;\n        this.leafColumnsToRender = leafColumnsToRender;\n        this.lockedColumnsToRender = lockedColumnsToRender;\n        this.nonLockedColumnsToRender = nonLockedColumnsToRender;\n        this.unlockedWidth = unlockedWidth;\n        const changes = reset([this.leafColumns, leafColumns$$1], [this.lockedLeafColumns, lockedLeafColumns], [this.nonLockedLeafColumns, nonLockedLeafColumns], [this.lockedColumns, lockedColumns], [this.allColumns, allColumns], [this.nonLockedColumns, nonLockedColumns]) || currentLevels !== this.totalLevels;\n        if (changes) {\n            this.changes.emit();\n        }\n        return changes;\n    }\n}\n\nconst forEachColumn = (list, callback) => {\n    list.forEach((column) => {\n        callback(column);\n        if (column.isColumnGroup && column.hasChildren) {\n            forEachColumn(column.childrenArray, callback);\n        }\n    });\n};\nconst forEachLevel = (list, callback) => {\n    sortColumns(list)\n        .forEach((column) => {\n        callback(column);\n        if (column.isColumnGroup && column.hasChildren) {\n            forEachLevel(column.childrenArray, callback);\n        }\n    });\n};\nconst filterHierarchy = (list, predicate) => {\n    const result = [];\n    sortColumns(list)\n        .forEach((column) => {\n        if (predicate(column)) {\n            if (column.isColumnGroup) {\n                const children$$1 = filterHierarchy(column.childrenArray, predicate);\n                if (children$$1.length) {\n                    result.push(column, ...children$$1);\n                }\n            }\n            else if (!column.isSpanColumn || filterHierarchy(column.childrenArray, predicate).length) {\n                result.push(column);\n            }\n        }\n    });\n    return result;\n};\n/**\n * @hidden\n */\nclass ColumnList {\n    constructor(columns) {\n        this.columns = columns;\n    }\n    static empty() {\n        return new ColumnList(new QueryList());\n    }\n    forEach(callback) {\n        forEachColumn(this.columns, callback);\n    }\n    filter(callback) {\n        const result = [];\n        forEachColumn(this.columns, (column) => {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    }\n    filterHierarchy(predicate) {\n        return filterHierarchy(this.columns.toArray(), predicate);\n    }\n    filterSort(callback) {\n        const result = [];\n        forEachLevel(this.columns.toArray(), (column) => {\n            if (callback(column)) {\n                result.push(column);\n            }\n        });\n        return result;\n    }\n    toArray() {\n        const result = [];\n        forEachColumn(this.columns, (column) => {\n            result.push(column);\n        });\n        return result;\n    }\n    rootColumns() {\n        return this.columns.toArray();\n    }\n}\n\n/**\n * @hidden\n */\nclass GroupInfoService {\n    constructor() {\n        this._columnList = ColumnList.empty;\n    }\n    get columns() {\n        return expandColumns(this._columnList().toArray()).filter(isColumnComponent);\n    }\n    registerColumnsContainer(columns) {\n        this._columnList = columns;\n    }\n    formatForGroup(item) {\n        const column = this.columnForGroup(item);\n        return column ? column.format : \"\";\n    }\n    isGroupable(groupField) {\n        const [column] = this.columns.filter(x => x.field === groupField);\n        return column ? column.groupable : true;\n    }\n    groupTitle(item) {\n        const column = this.columnForGroup(item);\n        return column ? (column.title || column.field) : this.groupField(item);\n    }\n    groupHeaderTemplate(item) {\n        const column = this.columnForGroup(item);\n        return column ? column.groupHeaderTemplateRef || column.groupHeaderColumnTemplateRef : undefined;\n    }\n    groupField(group) {\n        return group.data ? group.data.field : group.field;\n    }\n    columnForGroup(group) {\n        const field = this.groupField(group);\n        const [column] = this.columns.filter(x => x.field === field);\n        return column;\n    }\n}\n\n/**\n * @hidden\n */\nclass ChangeNotificationService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new EventEmitter();\n    }\n    notify() {\n        if (!this.subscription || this.subscription.closed) {\n            this.subscription = this.ngZone.onStable\n                .asObservable().pipe(take(1))\n                .subscribe(() => this.changes.emit());\n        }\n    }\n}\nChangeNotificationService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nChangeNotificationService.ctorParameters = () => [\n    { type: NgZone }\n];\n\n/**\n * Represents the no-records template of the Grid. Provides an option to customize the\n * appearance of the item that is displayed when no data is present. To define the no-records template,\n * nest an `<ng-template>` tag with the `kendoGridNoRecordsTemplate` directive inside `<kendo-grid>`.\n *\n * > When the locked columns of the Grid are in use, the template is displayed in the non-locked part of the content.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *       <kendo-grid [data]=\"data\">\n *         <kendo-grid-column field=\"ProductID\"></kendo-grid-column>\n *         <kendo-grid-column field=\"ProductName\"></kendo-grid-column>\n *         <kendo-grid-column field=\"UnitPrice\"></kendo-grid-column>\n *         <ng-template kendoGridNoRecordsTemplate>\n *            There are not products. <a href=\"#\" (click)=\"refresh()\">Click here to refresh</a>.\n *         </ng-template>\n *       </kendo-grid>\n *   `\n * })\n *\n * class AppComponent {\n *     public data = [];\n *     public refresh() {\n *       this.data = [{\n *            \"ProductID\": 1,\n *            \"ProductName\": \"Chai\",\n *            \"UnitPrice\": 18.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 2,\n *            \"ProductName\": \"Chang\",\n *            \"UnitPrice\": 19.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 1,\n *                \"CategoryName\": \"Beverages\",\n *                \"Description\": \"Soft drinks, coffees, teas, beers, and ales\"\n *            }\n *          }, {\n *            \"ProductID\": 3,\n *            \"ProductName\": \"Aniseed Syrup\",\n *            \"UnitPrice\": 10.0000,\n *            \"Discontinued\": false,\n *            \"Category\": {\n *                \"CategoryID\": 2,\n *                \"CategoryName\": \"Condiments\",\n *                \"Description\": \"Sweet and savory sauces, relishes, spreads, and seasonings\"\n *            }\n *        }];\n *\n *     }\n * }\n *\n * ```\n */\nclass NoRecordsTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNoRecordsTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridNoRecordsTemplate]'\n            },] },\n];\n/** @nocollapse */\nNoRecordsTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\nconst set = value => pair => pair.forEach(x => x.style.height = value);\nconst clearHeight = pairs => pairs\n    .filter(([left, right]) => left.style.height || right.style.height)\n    .forEach(set(\"\"));\nconst zip$1 = (arr1, arr2) => {\n    const result = [];\n    for (let idx = 0, len = arr1.length; idx < len; idx++) {\n        if (!arr2[idx]) {\n            break;\n        }\n        result.push([arr1[idx], arr2[idx]]);\n    }\n    return result;\n};\nconst setHeight = heights => (row, idx) => set(`${heights[idx] + 1}px`)(row);\nconst getHeights = rows => rows.map(([left, right]) => {\n    const height = left.offsetHeight;\n    const offsetHeight2 = right.offsetHeight;\n    if (height < offsetHeight2) {\n        return offsetHeight2;\n    }\n    return height;\n});\n/**\n * @hidden\n */\nconst syncRowsHeight = (table1, table2) => {\n    const activeElement = document.activeElement;\n    const rows = zip$1(table1.rows, table2.rows);\n    clearHeight(rows);\n    const heights = getHeights(rows);\n    [table1, table2].forEach(x => x.style.display = 'none');\n    rows.forEach(setHeight(heights));\n    [table1, table2].forEach(x => x.style.display = '');\n    if (document.activeElement !== activeElement &&\n        (table1.contains(activeElement) || table2.contains(activeElement))) {\n        activeElement.focus();\n    }\n};\n\n/**\n * @hidden\n */\nconst CELL_CONTEXT = new InjectionToken('grid-cell-context');\n/**\n * @hidden\n */\nconst EMPTY_CELL_CONTEXT = {};\n\n/**\n * Represents a service to set the filter descriptor\n * ([see example]({% slug reusablecustomfilters_grid %})).\n */\nclass FilterService {\n    constructor() {\n        /**\n         * Fires when the filter descriptors is set.\n         */\n        this.changes = new Subject();\n    }\n    /**\n     * Sets the filter descriptor.\n     *\n     * @param {CompositeFilterDescriptor} value - The filter descriptor that will be set.\n     */\n    filter(value) {\n        this.changes.next(value);\n    }\n}\n\n/**\n * Represents the pager template which helps to customize the pager appearance in the Grid. To define a pager\n * template, nest an `<ng-template>` tag with the `kendoPagerTemplate` directive inside `<kendo-grid>`.\n *\n * The template context provides the following fields:\n * * `currentPage`&mdash;The index of the displayed page.\n * * `pageSize`&mdash;The value of the current `pageSize`.\n * * `skip`&mdash;The current skip value.\n * * `total`&mdash;The total number of records.\n * * `totalPages`&mdash;The total number of available pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-info></kendo-pager-info>\n *          Current page: {{currentPage}}\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PagerTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nPagerTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoPagerTemplate]'\n            },] },\n];\n/** @nocollapse */\nPagerTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * @hidden\n */\nclass PagerContextService {\n    constructor() {\n        this.changes = new Subject();\n        this.pageChange = new Subject();\n    }\n    get currentPage() {\n        return this.skip / this.pageSize;\n    }\n    notifyChanges(changes) {\n        this.total = changes.total;\n        this.pageSize = changes.pageSize;\n        this.skip = changes.skip;\n        this.changes.next(changes);\n    }\n    changePage(page) {\n        this.pageChange.next({ skip: page * this.pageSize, take: this.pageSize });\n    }\n    changePageSize(value) {\n        this.pageChange.next({ skip: 0, take: value });\n    }\n    nextPage() {\n        const nextPage = this.currentPage + 1;\n        if (nextPage * this.pageSize <= this.total) {\n            this.changePage(nextPage);\n        }\n    }\n    prevPage() {\n        const prevPage = this.currentPage - 1;\n        if (prevPage * this.pageSize >= 0) {\n            this.changePage(prevPage);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nclass PDFService {\n    constructor() {\n        this.savePDF = new EventEmitter();\n        this.drawPDF = new EventEmitter();\n        this.exportClick = new EventEmitter();\n        this.dataChanged = new EventEmitter();\n    }\n    save(component) {\n        this.emitEvent(this.savePDF, component);\n    }\n    draw(component, promise) {\n        this.emitEvent(this.drawPDF, { component, promise });\n    }\n    emitEvent(emitter, args) {\n        if (emitter.observers.length === 0) {\n            if (isDevMode()) {\n                throw new Error('Creating PDF requires including the PDFModule and adding the <kendo-grid-pdf> component.');\n            }\n        }\n        else {\n            emitter.emit(args);\n        }\n    }\n}\nPDFService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * Arguments for the `pdfExport` event.\n */\nclass PDFExportEvent extends PreventableEvent {\n}\n\n/**\n * @hidden\n */\nclass SuspendService {\n    constructor() {\n        this.scroll = false;\n    }\n}\nSuspendService.decorators = [\n    { type: Injectable },\n];\n\n/* tslint:disable: object-literal-sort-keys */\nconst bootstrapToMedia = (media) => (({\n    \"xs\": \"(max-width: 576px)\",\n    \"sm\": \"(min-width: 576px)\",\n    \"md\": \"(min-width: 768px)\",\n    \"lg\": \"(min-width: 992px)\",\n    \"xl\": \"(min-width: 1200px)\"\n})[media] || media);\n/* tslint:enable: object-literal-sort-keys */\nconst browserMatchMedia = (media) => window.matchMedia(media).matches;\n/**\n * @hidden\n */\nclass ResponsiveService {\n    constructor() {\n        /**\n         * @hidden\n         */\n        this.matchMedia = browserMatchMedia;\n    }\n    /**\n     * @hidden\n     */\n    matchesMedia(media) {\n        return !media || this.matchMedia(bootstrapToMedia(media));\n    }\n}\nResponsiveService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass ExcelService {\n    constructor() {\n        this.saveToExcel = new EventEmitter();\n        this.exportClick = new EventEmitter();\n    }\n    save(component) {\n        if (this.saveToExcel.observers.length === 0) {\n            if (isDevMode()) {\n                throw new Error('Saving excel requires including the ExcelModule and adding the <kendo-grid-excel> component.');\n            }\n        }\n        else {\n            this.saveToExcel.emit(component);\n        }\n    }\n}\nExcelService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * Represents the toolbar template of the Grid.\n *\n * The template context has the following field:\n * - `position`&mdash;The position at which the toolbar template is rendered. The possible values are \"top\" and \"bottom\".\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <div class=\"example-config\">\n *         <input type=\"radio\" id=\"top\" name=\"position\" class=\"k-radio\" value=\"top\" checked (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"top\">Top</label><br/>\n *         <input type=\"radio\" id=\"bottom\" name=\"position\" class=\"k-radio\" value=\"bottom\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"bottom\">Bottom</label><br/>\n *         <input type=\"radio\" id=\"both\" name=\"position\" value=\"both\" class=\"k-radio\" (click)=\"positionChange($event)\"/>\n *         <label class=\"k-radio-label\" for=\"both\">Both</label><br/>\n *       </div>\n *       <kendo-grid [data]=\"gridData\" style=\"height: 200px\">\n *            <ng-template kendoGridToolbarTemplate [position]=\"position\" let-position=\"position\">\n *                <button (click)=\"onClick()\" class=\"k-button\">Custom action</button>\n *            </ng-template>\n *            <kendo-grid-column field=\"ProductName\">\n *            </kendo-grid-column>\n *            <kendo-grid-column field=\"UnitPrice\">\n *            </kendo-grid-column>\n *        </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public position: 'top' | 'bottom' | 'both' = 'top';\n *\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n *\n *     public onClick(): void {\n *         console.log(\"button was clicked\");\n *     }\n *\n *     public positionChange({ target }): void {\n *        this.position = target.value;\n *     }\n * }\n *\n * ```\n */\nclass ToolbarTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._position = \"top\";\n    }\n    /**\n     * The position of the toolbar ([see example]({% slug toolbartemplate_grid %})).\n     *\n     * The possible values are:\n     * - `top`&mdash;Positions the toolbar above the group panel or header.\n     * - `bottom`&mdash;Positions the toolbar below the pager.\n     * - `both`&mdash;Displays two toolbar instances. Positions the first one above\n     * the group panel or header and the second one below the pager.\n     */\n    set position(position) {\n        this._position = position;\n    }\n    get position() {\n        return this._position;\n    }\n}\nToolbarTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridToolbarTemplate]'\n            },] },\n];\n/** @nocollapse */\nToolbarTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\nToolbarTemplateDirective.propDecorators = {\n    position: [{ type: Input, args: [\"position\",] }]\n};\n\n/**\n * @hidden\n */\nclass ScrollSyncService {\n    constructor(ngZone) {\n        this.ngZone = ngZone;\n        this.changes = new Subject();\n        this.elements = [];\n        this.subscriptions = new Subscription();\n        this.headerSubscription = new Subscription();\n        this.bodySubscription = new Subscription();\n        this.subscriptions.add(this.changes.subscribe(args => this.scrollLeft(args)));\n    }\n    registerEmitter(el, sourceType) {\n        this.unregister(sourceType);\n        this.elements.push({ element: el, sourceType });\n        if (sourceType === \"body\" || sourceType === \"header\") {\n            this.ngZone.runOutsideAngular(() => {\n                const obs = fromEvent(el, \"scroll\").pipe(map(({ target: { scrollLeft } }) => ({\n                    scrollLeft,\n                    sourceType\n                })));\n                const subscription = obs.pipe(distinctUntilChanged((x, y) => (x.scrollLeft === y.scrollLeft)), filter(x => !this.source || this.source === x.sourceType), tap(x => this.source = x.sourceType))\n                    .subscribe((x) => this.changes.next(x));\n                subscription.add(obs.pipe(filter(x => this.source && this.source !== x.sourceType))\n                    .subscribe(() => this.source = undefined));\n                if (sourceType === \"body\") {\n                    this.bodySubscription.add(subscription);\n                }\n                else {\n                    this.headerSubscription.add(subscription);\n                }\n            });\n        }\n    }\n    /**\n     * destroy\n     */\n    destroy() {\n        this.subscriptions.unsubscribe();\n        this.headerSubscription.unsubscribe();\n        this.bodySubscription.unsubscribe();\n    }\n    scrollLeft({ scrollLeft, sourceType }) {\n        this.ngZone.runOutsideAngular(() => {\n            this.elements\n                .filter(x => sourceType !== x.sourceType)\n                .forEach(({ element }) => element.scrollLeft = scrollLeft);\n        });\n    }\n    unregister(sourceType) {\n        const index = this.elements.findIndex(x => x.sourceType === sourceType);\n        if (index > -1) {\n            if (sourceType === \"header\") {\n                this.headerSubscription.unsubscribe();\n                this.headerSubscription = new Subscription();\n            }\n            else if (sourceType === \"body\") {\n                this.bodySubscription.unsubscribe();\n                this.bodySubscription = new Subscription();\n            }\n            this.elements.splice(index, 1);\n        }\n    }\n}\nScrollSyncService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nScrollSyncService.ctorParameters = () => [\n    { type: NgZone }\n];\n\n/**\n * @hidden\n */\nclass ResizeService {\n    constructor() {\n        this.resizeSubscription = new Subscription(() => { });\n        this.dispatcher = new Subject();\n        // tslint:disable-next-line:member-ordering\n        this.changes = this.dispatcher.asObservable().pipe(throttleTime(100));\n    }\n    connect(resizes) {\n        this.resizeSubscription.add(resizes.subscribe(this.dispatcher));\n    }\n    destroy() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n}\nResizeService.decorators = [\n    { type: Injectable },\n];\n\nconst focusableRegex = /^(?:a|input|select|option|textarea|button|object)$/i;\nconst NODE_NAME_PREDICATES = {};\nconst toClassList = (classNames) => String(classNames).trim().split(' ');\n/**\n * @hidden\n */\nconst hasClasses = (element, classNames) => {\n    const namesList = toClassList(classNames);\n    return Boolean(toClassList(element.className).find((className) => namesList.indexOf(className) >= 0));\n};\n/**\n * @hidden\n */\nconst matchesClasses = (classNames) => (element) => hasClasses(element, classNames);\n/**\n * @hidden\n */\nconst matchesNodeName = (nodeName) => {\n    if (!NODE_NAME_PREDICATES[nodeName]) {\n        NODE_NAME_PREDICATES[nodeName] = (element) => String(element.nodeName).toLowerCase() === nodeName.toLowerCase();\n    }\n    return NODE_NAME_PREDICATES[nodeName];\n};\n/**\n * @hidden\n */\nconst closest = (node, predicate) => {\n    while (node && !predicate(node)) {\n        node = node.parentNode;\n    }\n    return node;\n};\n/**\n * @hidden\n */\nconst closestInScope = (node, predicate, scope) => {\n    while (node && node !== scope && !predicate(node)) {\n        node = node.parentNode;\n    }\n    if (node !== scope) {\n        return node;\n    }\n};\n/**\n * @hidden\n */\nconst contains = (parent, node, matchSelf = false) => {\n    const outside = !closest(node, (child) => child === parent);\n    if (outside) {\n        return false;\n    }\n    const el = closest(node, (child) => child === node);\n    return el && (matchSelf || el !== parent);\n};\n/**\n * @hidden\n */\nconst isVisible = (element) => {\n    const rect = element.getBoundingClientRect();\n    const hasSize = rect.width > 0 && rect.height > 0;\n    const hasPosition = rect.x !== 0 && rect.y !== 0;\n    // Elements can have zero size due to styling, but they will still count as visible.\n    // For example, the selection checkbox has no size, but is made visible through styling.\n    return (hasSize || hasPosition) && window.getComputedStyle(element).visibility !== 'hidden';\n};\n/**\n * @hidden\n */\nconst isFocusable = (element) => {\n    if (!element.tagName) {\n        return false;\n    }\n    const tagName = element.tagName.toLowerCase();\n    const hasTabIndex = Boolean(element.getAttribute('tabIndex'));\n    const focusable = !element.disabled && focusableRegex.test(tagName);\n    return focusable || hasTabIndex;\n};\n/**\n * @hidden\n */\nconst isFocusableWithTabKey = (element, checkVisibility = true) => {\n    if (!isFocusable(element)) {\n        return false;\n    }\n    const tabIndex = element.getAttribute('tabIndex');\n    const visible = !checkVisibility || isVisible(element);\n    return visible && tabIndex !== '-1';\n};\n/**\n * @hidden\n */\nconst findElement = (node, predicate, matchSelf = true) => {\n    if (!node) {\n        return;\n    }\n    if (matchSelf && predicate(node)) {\n        return node;\n    }\n    node = node.firstChild;\n    while (node) {\n        if (node.nodeType === 1) {\n            const element = findElement(node, predicate);\n            if (element) {\n                return element;\n            }\n        }\n        node = node.nextSibling;\n    }\n};\n/**\n * @hidden\n */\nconst findFocusable = (element, checkVisibility = true) => {\n    return findElement(element, (node) => isFocusableWithTabKey(node, checkVisibility));\n};\n/**\n * @hidden\n */\nconst findFocusableChild = (element, checkVisibility = true) => {\n    return findElement(element, (node) => isFocusableWithTabKey(node, checkVisibility), false);\n};\n/**\n * @hidden\n */\nfunction rtlScrollPosition(position, element, initial) {\n    let result = position;\n    if (initial < 0) {\n        result = -position;\n    }\n    else if (initial > 0) {\n        result = element.scrollWidth - element.offsetWidth - position;\n    }\n    return result;\n}\n\n/**\n * @hidden\n */\nconst isLocked = column => column.parent ? isLocked(column.parent) : !!column.locked;\n/**\n * @hidden\n */\nconst resizeArgs = (column, extra) => Object.assign({\n    columns: leafColumns([column]),\n    locked: isLocked(column)\n}, extra); // tslint:disable-line:align\n/**\n * @hidden\n */\nclass ColumnResizingService {\n    constructor() {\n        this.changes = new EventEmitter();\n        this.tables = [];\n        this.batch = null;\n    }\n    start(column) {\n        this.trackColumns(column);\n        const columns = (this.column.isColumnGroup ? [column] : [])\n            .concat(leafColumns([column]));\n        this.changes.emit({\n            columns: columns,\n            locked: isLocked(this.column),\n            type: 'start'\n        });\n    }\n    resizeColumns(deltaPercent) {\n        const action = resizeArgs(this.column, {\n            deltaPercent,\n            type: 'resizeColumn'\n        });\n        this.changes.emit(action);\n    }\n    resizeTable(column, delta) {\n        const action = resizeArgs(column, {\n            delta,\n            type: 'resizeTable'\n        });\n        this.changes.emit(action);\n    }\n    resizedColumn(state$$1) {\n        this.resizedColumns.push(state$$1);\n    }\n    end() {\n        this.changes.emit({\n            columns: [],\n            resizedColumns: this.resizedColumns,\n            type: 'end'\n        });\n    }\n    registerTable(tableMetadata) {\n        this.tables.push(tableMetadata);\n        const unregisterTable = () => {\n            this.tables.splice(this.tables.indexOf(tableMetadata), 1);\n        };\n        return unregisterTable;\n    }\n    measureColumns(info) {\n        if (this.batch !== null) {\n            this.batch.push(...info);\n        }\n        else {\n            this.autoFitBatch(info, () => this.end());\n        }\n    }\n    autoFit(...columns) {\n        const nonLockedColumns = columns.filter(column => !column.isLocked);\n        this.autoFitStart(nonLockedColumns);\n        this.autoFitBatch(this.batch, () => {\n            if (nonLockedColumns.length < columns.length) {\n                const lockedColumns = columns.filter(column => column.isLocked);\n                this.autoFitStart(lockedColumns);\n                this.autoFitBatch(this.batch, () => this.end());\n            }\n            else {\n                this.end();\n            }\n        });\n    }\n    trackColumns(column) {\n        this.resizedColumns = [];\n        this.column = column;\n    }\n    autoFitStart(columns) {\n        this.batch = [];\n        this.resizedColumns = [];\n        if (columns.length === 0) {\n            return;\n        }\n        const locked = columns[0].isLocked;\n        this.changes.emit({\n            type: 'start',\n            columns,\n            locked\n        });\n        this.changes.emit({\n            type: 'triggerAutoFit',\n            columns,\n            locked\n        });\n    }\n    autoFitBatch(info, onComplete) {\n        const locked = info.length > 0 ? info[0].column.isLocked : false;\n        const observables = this.tables\n            .filter(table => table.locked === locked)\n            .map(table => table.autoFit(info));\n        zip(...observables)\n            .pipe(take(1))\n            .subscribe(widths => {\n            this.changes.emit({\n                columns: info.map(i => i.column),\n                type: 'autoFitComplete',\n                widths,\n                locked\n            });\n            if (onComplete) {\n                onComplete();\n            }\n        });\n        this.batch = null;\n    }\n}\nColumnResizingService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\n/**\n * @hidden\n */\nconst hasFilterMenu = (settings) => typeof settings === 'string' && settings.indexOf('menu') > -1;\n/**\n * @hidden\n */\nconst hasFilterRow = (settings) => settings === true || (typeof settings === 'string' && settings.indexOf('row') > -1);\n\nconst contains$1 = (node, predicate) => {\n    while (node) {\n        if (predicate(node)) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n};\n/**\n * Arguments for the `close` event of the filter and column-menu popup.\n */\nclass PopupCloseEvent extends PreventableEvent {\n    constructor(e) {\n        super();\n        this.originalEvent = e;\n    }\n}\nconst DEFAULT_POPUP_CLASS = 'k-grid-filter-popup';\n/**\n * The service that is used for the popups of the filter and column menus\n * ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-menu-with-popup)).\n */\nclass SinglePopupService {\n    constructor(popupService, renderer, ngZone, scrollSyncService, localization) {\n        this.popupService = popupService;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.localization = localization;\n        /**\n         * Fires when the filter or column menus are about to close because the user clicked outside their popups.\n         * Used to prevent the popup from closing.\n         */\n        this.onClose = new Subject();\n        this.scrollSubscription = scrollSyncService.changes.subscribe(() => this.destroy());\n    }\n    /**\n     * @hidden\n     */\n    open(anchor, template, popupRef, popupClass = DEFAULT_POPUP_CLASS) {\n        const toggle = isPresent(popupRef) && this.popupRef === popupRef;\n        this.destroy();\n        if (!toggle) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                popupAlign: { vertical: 'top', horizontal: direction },\n                anchor: anchor,\n                popupClass: popupClass,\n                content: template,\n                positionMode: \"absolute\"\n            });\n            this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n            this.attachClose(anchor);\n        }\n        return this.popupRef;\n    }\n    /**\n     * @hidden\n     */\n    destroy() {\n        if (this.popupRef) {\n            this.detachClose();\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n    }\n    ngOnDestroy() {\n        this.destroy();\n        this.scrollSubscription.unsubscribe();\n    }\n    detachClose() {\n        if (this.removeClick) {\n            this.removeClick();\n        }\n    }\n    attachClose(skipElement) {\n        this.detachClose();\n        this.ngZone.runOutsideAngular(() => this.removeClick = this.renderer.listen(\"document\", \"click\", (e) => {\n            if (!contains$1(e.target, x => this.popupRef.popupElement === x || x === skipElement)) {\n                const args = new PopupCloseEvent(e);\n                this.onClose.next(args);\n                if (!args.isDefaultPrevented()) {\n                    this.destroy();\n                }\n            }\n        }));\n    }\n}\nSinglePopupService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSinglePopupService.ctorParameters = () => [\n    { type: PopupService },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: ScrollSyncService },\n    { type: LocalizationService }\n];\n\n/* tslint:disable: no-bitwise */\n/**\n * @hidden\n */\nconst append = (element) => {\n    let appended = false;\n    return () => {\n        if (!appended) {\n            document.body.appendChild(element);\n            appended = true;\n        }\n        return element;\n    };\n};\n/**\n * @hidden\n */\nconst getDocument = element => element.ownerDocument.documentElement;\n/**\n * @hidden\n */\nconst getWindow = element => element.ownerDocument.defaultView;\n/**\n * @hidden\n */\nconst offset = element => {\n    const { clientTop, clientLeft } = getDocument(element);\n    const { pageYOffset, pageXOffset } = getWindow(element);\n    const { top, left } = element.getBoundingClientRect();\n    return {\n        top: top + pageYOffset - clientTop,\n        left: left + pageXOffset - clientLeft\n    };\n};\n/**\n * @hidden\n * If the target is before the draggable element, returns `true`.\n *\n * DOCUMENT_POSITION_FOLLOWING = 4\n */\nconst isTargetBefore = (draggable, target) => (target.compareDocumentPosition(draggable) & 4) !== 0;\n/**\n * @hidden\n * If the container and the element are the same\n * or if the container holds (contains) the element, returns `true`.\n *\n * DOCUMENT_POSITION_CONTAINED_BY = 16\n */\nconst contains$2 = (element, container) => element === container ||\n    (container.compareDocumentPosition(element) & 16) !== 0;\n/**\n * @hidden\n */\nconst position = (target, before) => {\n    const targetRect = offset(target);\n    const { offsetWidth, offsetHeight } = target;\n    const left = targetRect.left + (before ? 0 : offsetWidth);\n    const top = targetRect.top;\n    const height = offsetHeight;\n    return { left, top, height };\n};\n\n/**\n * @hidden\n */\nclass DragAndDropService {\n    constructor() {\n        this.changes = new EventEmitter();\n        this.register = [];\n        this.lastTarget = null;\n    }\n    add(target) {\n        this.register.push(target);\n    }\n    remove(target) {\n        this.register = this.register.filter(current => current !== target);\n    }\n    notifyDrag(draggable, element, mouseEvent) {\n        const target = this.targetFor(element);\n        if (this.lastTarget === target) {\n            return;\n        }\n        this.changes.next({\n            draggable,\n            mouseEvent,\n            target: this.lastTarget,\n            type: 'leave'\n        });\n        if (target) {\n            this.changes.next({\n                draggable,\n                mouseEvent,\n                target,\n                type: 'enter'\n            });\n        }\n        this.lastTarget = target;\n    }\n    notifyDrop(draggable, mouseEvent) {\n        this.changes.next({\n            draggable,\n            mouseEvent,\n            target: this.lastTarget,\n            type: 'drop'\n        });\n        this.lastTarget = null;\n    }\n    targetFor(element) {\n        const comparer = contains$2.bind(null, element);\n        return this.register.find(({ element: { nativeElement } }) => comparer(nativeElement));\n    }\n}\nDragAndDropService.decorators = [\n    { type: Injectable },\n];\n\nconst updateClass = (element, valid) => {\n    const icon = element.querySelector('.k-icon');\n    icon.className = icon.className\n        .replace(/(plus|cancel)/, valid ? 'plus' : 'cancel');\n};\nconst updateLock = (element, locked = null) => {\n    const icon = element.querySelectorAll('.k-icon')[1];\n    const value = locked == null ? '' : (locked ? 'k-i-lock' : 'k-i-unlock');\n    icon.className = icon.className\n        .replace(/(k-i-unlock|k-i-lock)/, '') + ` ${value}`;\n};\nconst decorate = (element, target) => {\n    const targetStyles = getComputedStyle(target);\n    element.className = 'k-header k-drag-clue';\n    element.style.position = 'absolute';\n    element.style.zIndex = '20000';\n    element.style.paddingLeft = targetStyles.paddingLeft;\n    element.style.paddingTop = targetStyles.paddingTop;\n    element.style.paddingBottom = targetStyles.paddingBottom;\n    element.style.paddingRight = targetStyles.paddingRight;\n    element.style.width = targetStyles.width;\n    element.style.height = targetStyles.height;\n};\n/**\n * @hidden\n */\nclass DragHintService {\n    constructor(santizer) {\n        this.santizer = santizer;\n    }\n    create(down, target, title) {\n        this.initCoords(down);\n        this.dom = document.createElement(\"div\");\n        decorate(this.dom, target);\n        const safeTitle = this.santizer.sanitize(SecurityContext.HTML, title);\n        this.dom.innerHTML = `\n            <span class=\"k-icon k-drag-status k-i-cancel k-icon-with-modifier\">\n                <span class=\"k-icon k-icon-modifier\"></span>\n            </span>\n            ${safeTitle}\n        `;\n    }\n    attach() {\n        return append(this.dom);\n    }\n    remove() {\n        if (this.dom && this.dom.parentNode) {\n            (function (el) {\n                setTimeout(() => document.body.removeChild(el));\n            })(this.dom); // hack for IE + pointer events!\n            this.dom = null;\n        }\n    }\n    show() {\n        this.dom.style.display = \"\";\n    }\n    hide() {\n        this.dom.style.display = \"none\";\n    }\n    enable() {\n        updateClass(this.dom, true);\n    }\n    disable() {\n        updateClass(this.dom, false);\n    }\n    removeLock() {\n        updateLock(this.dom);\n    }\n    toggleLock(locked) {\n        updateLock(this.dom, locked);\n    }\n    move(move) {\n        this.dom.style.top = this.initialTop + move.pageY + 'px';\n        this.dom.style.left = this.initialLeft + move.pageX + 'px';\n    }\n    initCoords(down) {\n        const { top, left } = offset(down.originalEvent.target);\n        this.initialTop = top - down.pageY;\n        this.initialLeft = left - down.pageX;\n    }\n}\nDragHintService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nDragHintService.ctorParameters = () => [\n    { type: DomSanitizer }\n];\n\n/**\n * @hidden\n */\nclass DropCueService {\n    create() {\n        this.dom = document.createElement(\"div\");\n        this.dom.className = 'k-grouping-dropclue';\n        this.hide();\n    }\n    attach() {\n        return append(this.dom);\n    }\n    remove() {\n        if (this.dom && this.dom.parentElement) {\n            document.body.removeChild(this.dom);\n            this.dom = null;\n        }\n    }\n    hide() {\n        this.dom.style.display = \"none\";\n    }\n    position({ left, top, height }) {\n        this.dom.style.display = 'block';\n        this.dom.style.height = height + 'px';\n        this.dom.style.top = top + 'px';\n        const width = this.dom.offsetWidth / 2;\n        this.dom.style.left = left - width + 'px';\n    }\n}\nDropCueService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass ColumnReorderService {\n    constructor() {\n        this.changes = new EventEmitter();\n    }\n    reorder(e) {\n        this.changes.emit(e);\n    }\n}\nColumnReorderService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * Arguments for the `columnReorder` event.\n */\nclass ColumnReorderEvent extends PreventableEvent {\n    /**\n     * @hidden\n     */\n    constructor({ column, newIndex, oldIndex }) {\n        super();\n        this.column = column;\n        this.newIndex = newIndex;\n        this.oldIndex = oldIndex;\n    }\n}\n\n/**\n * @hidden\n */\nclass FocusRoot {\n    constructor() {\n        this.groups = new Set();\n    }\n    registerGroup(group) {\n        if (this.alive) {\n            this.groups.add(group);\n        }\n    }\n    unregisterGroup(group) {\n        if (this.alive) {\n            this.groups.delete(group);\n        }\n    }\n    activate() {\n        if (this.alive) {\n            this.groups.forEach(f => f.activate());\n        }\n    }\n    deactivate() {\n        if (this.alive) {\n            this.groups.forEach(f => f.deactivate());\n        }\n    }\n}\nFocusRoot.decorators = [\n    { type: Injectable },\n];\n\nconst isButton = matchesNodeName('button');\nconst isInputTag = matchesNodeName('input');\nconst navigableRegex = /(button|checkbox|color|file|radio|reset|submit)/i;\nconst isNavigableInput = element => isInputTag(element) && navigableRegex.test(element.type);\nconst isNavigable = element => !element.disabled && (isButton(element) || isNavigableInput(element));\n/**\n * @hidden\n */\nclass DefaultFocusableElement {\n    constructor(host, renderer) {\n        this.renderer = renderer;\n        this.element = host.nativeElement;\n        this.focusable = findFocusable(this.element, false) || this.element;\n    }\n    get enabled() {\n        return this.focusable && !this.focusable.disabled;\n    }\n    get visible() {\n        return this.focusable && isVisible(this.focusable);\n    }\n    isNavigable() {\n        return this.canFocus() && isNavigable(this.element);\n    }\n    toggle(active) {\n        this.renderer.setAttribute(this.focusable, 'tabIndex', active ? '0' : '-1');\n    }\n    focus() {\n        if (this.focusable) {\n            this.focusable.focus();\n        }\n    }\n    canFocus() {\n        return this.visible && this.enabled;\n    }\n    hasFocus() {\n        return document.activeElement !== this.element && closest(document.activeElement, e => e === this.element);\n    }\n}\n\n/**\n * A directive that controls the way focusable elements receive\n * [focus in a navigable Grid]({% slug keyboard_navigation_grid %}).\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #0\" style=\"margin-bottom: 8px;\" />\n *      <kendo-grid [data]=\"data\" [navigable]=\"true\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"100\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\" width=\"150\">\n *          </kendo-grid-column>\n *          <kendo-grid-column>\n *              <ng-template kendoGridCellTemplate let-dataItem>\n *                  <!-- The first focusable element will be focused when pressing Enter on the cell -->\n *                  <input type=\"text\" class=\"k-textbox\" kendoGridFocusable [value]=\"dataItem.ProductName\" style=\"margin-right: 8px;\" />\n *                  <button class=\"k-button\" kendoGridFocusable>Update</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *          <kendo-grid-column width=\"100\">\n *              <ng-template kendoGridCellTemplate>\n *                  <!-- A single focusable element will be focused during navigation -->\n *                  <button class=\"k-button\" kendoGridFocusable>Delete</button>\n *              </ng-template>\n *          </kendo-grid-column>\n *      </kendo-grid>\n *      <input type=\"text\" class=\"k-textbox\" placeholder=\"Tab stop #2\" style=\"margin-top: 8px;\" />\n *    `\n * })\n *\n * class AppComponent {\n *     public readonly data: any = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": true\n *     }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": false\n *     }];\n * }\n * ```\n */\nclass FocusableDirective {\n    constructor(cellContext, hostElement, renderer) {\n        this.cellContext = cellContext;\n        this.hostElement = hostElement;\n        this.renderer = renderer;\n        this.active = true;\n        if (this.cellContext) {\n            this.group = this.cellContext.focusGroup;\n        }\n        if (this.group) {\n            this.group.registerElement(this);\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.element) {\n            this.element = new DefaultFocusableElement(this.hostElement, this.renderer);\n        }\n        if (this.group) {\n            const isActive = this.group.isActive;\n            this.toggle(isActive);\n        }\n    }\n    ngOnDestroy() {\n        if (this.group) {\n            this.group.unregisterElement(this);\n        }\n    }\n    /**\n     * @hidden\n     */\n    toggle(active) {\n        if (this.element && active !== this.active) {\n            this.active = active;\n            this.element.toggle(active);\n        }\n    }\n    /**\n     * @hidden\n     */\n    canFocus() {\n        return this.element && this.element.canFocus();\n    }\n    /**\n     * @hidden\n     */\n    isNavigable() {\n        return this.element && this.element.isNavigable();\n    }\n    /**\n     * @hidden\n     */\n    focus() {\n        if (this.element) {\n            this.element.focus();\n        }\n    }\n    /**\n     * @hidden\n     */\n    hasFocus() {\n        return this.element && this.element.hasFocus();\n    }\n    /**\n     * @hidden\n     */\n    registerElement(element) {\n        this.element = element;\n    }\n}\nFocusableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridFocusable]' + `,\n        [kendoGridEditCommand],\n        [kendoGridRemoveCommand],\n        [kendoGridSaveCommand],\n        [kendoGridCancelCommand],\n        [kendoGridSelectionCheckbox]\n    `\n            },] },\n];\n/** @nocollapse */\nFocusableDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CELL_CONTEXT,] }, { type: SkipSelf }] },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\n\n/**\n * @hidden\n */\nclass GridFocusableElement {\n    constructor(navigationService) {\n        this.navigationService = navigationService;\n    }\n    focus() {\n        this.navigationService.focusCell();\n    }\n    toggle(active) {\n        this.navigationService.toggle(active);\n    }\n    canFocus() {\n        return true;\n    }\n    hasFocus() {\n        return this.navigationService.hasFocus();\n    }\n    isNavigable() {\n        return false;\n    }\n}\n\n/**\n * @hidden\n */\nclass NavigationCursor {\n    constructor(model) {\n        this.model = model;\n        this.changes = new Subject();\n        this.activeRow = 0;\n        this.activeCol = 0;\n        this.virtualCol = 0;\n        this.virtualRow = 0;\n    }\n    get row() {\n        return this.model.findRow(this.activeRow);\n    }\n    get cell() {\n        const row = this.row;\n        if (row) {\n            return this.model.findCell(this.activeCol, row);\n        }\n    }\n    get dataRowIndex() {\n        const row = this.row;\n        if (row) {\n            return row.dataRowIndex;\n        }\n        return -1;\n    }\n    /**\n     * Assumes and announces a new cursor position.\n     */\n    reset(rowIndex = this.activeRow, colIndex = this.activeCol, force = true) {\n        if (this.activate(rowIndex, colIndex, force)) {\n            this.virtualRow = rowIndex;\n            this.virtualCol = colIndex;\n        }\n    }\n    activate(rowIndex, colIndex, force) {\n        if (!force && this.isActiveRange(rowIndex, colIndex)) {\n            return false;\n        }\n        const prevColIndex = this.activeCol;\n        const prevRowIndex = this.activeRow;\n        this.activeCol = colIndex;\n        this.activeRow = rowIndex;\n        this.changes.next({\n            colIndex,\n            prevColIndex,\n            prevRowIndex,\n            rowIndex\n        });\n        return true;\n    }\n    isActiveRange(rowIndex, colIndex) {\n        if (this.activeRow !== rowIndex) {\n            return false;\n        }\n        const cell = this.cell;\n        const { start, end } = this.model.cellRange(cell);\n        return !Boolean(cell) || (start <= colIndex && colIndex <= end);\n    }\n    /**\n     * Assumes a new cursor position without announcing it.\n     */\n    assume(rowIndex = this.activeRow, colIndex = this.activeCol) {\n        this.virtualRow = rowIndex;\n        this.virtualCol = colIndex;\n        this.activeCol = colIndex;\n        this.activeRow = rowIndex;\n    }\n    /**\n     * Announces a current cursor position to subscribers.\n     */\n    announce() {\n        this.changes.next({\n            colIndex: this.activeCol,\n            prevColIndex: this.activeCol,\n            prevRowIndex: this.activeRow,\n            rowIndex: this.activeRow\n        });\n    }\n    activateVirtualCell(cell) {\n        const rowRange = this.model.rowRange(cell);\n        const cellRange = this.model.cellRange(cell);\n        const activeCol = this.activeCol;\n        const activeRow = this.activeRow;\n        if (rowRange.start <= activeRow && activeRow <= rowRange.end &&\n            cellRange.start <= activeCol && activeCol <= cellRange.end) {\n            this.activeRow = cell.rowIndex;\n            this.activeCol = cell.colIndex;\n            return true;\n        }\n    }\n    isActive(rowIndex, colIndex) {\n        return this.activeCol === colIndex && this.activeRow === rowIndex;\n    }\n    moveUp(offset = 1) {\n        return this.offsetRow(-offset);\n    }\n    moveDown(offset = 1) {\n        return this.offsetRow(offset);\n    }\n    moveLeft(offset = 1) {\n        return this.offsetCol(-offset);\n    }\n    moveRight(offset = 1) {\n        return this.offsetCol(offset);\n    }\n    lastCellIndex(row) {\n        return this.metadata.columns.leafColumnsToRender.length - 1 +\n            (this.metadata.hasDetailTemplate && (!row || !row.groupItem) ? 1 : 0);\n    }\n    offsetCol(offset) {\n        const prevRow = this.model.findRow(this.virtualRow);\n        const lastIndex = this.lastCellIndex(prevRow);\n        const virtualCol = this.virtualCol;\n        this.virtualCol = Math.max(0, Math.min(virtualCol + offset, lastIndex));\n        let nextColIndex = this.virtualCol;\n        let nextRowIndex = this.virtualRow;\n        let cell = this.model.findCell(this.virtualCol, prevRow);\n        if (!cell && this.metadata.virtualColumns) {\n            return this.activate(nextRowIndex, nextColIndex);\n        }\n        if (cell.colSpan > 1 && cell.colIndex <= virtualCol && virtualCol < cell.colIndex + cell.colSpan) {\n            nextColIndex = offset > 0 ? Math.min(cell.colIndex + cell.colSpan, lastIndex) : Math.max(0, cell.colIndex + offset);\n            const nextCell = this.model.findCell(nextColIndex, prevRow);\n            if (cell !== nextCell) {\n                cell = nextCell;\n                this.virtualCol = cell.colIndex;\n            }\n            else {\n                this.virtualCol = virtualCol;\n            }\n        }\n        return this.activate(cell.rowIndex, cell.colIndex);\n    }\n    offsetRow(offset) {\n        let nextColIndex = this.virtualCol;\n        if (this.metadata && this.metadata.isVirtual) {\n            const maxIndex = this.metadata.maxLogicalRowIndex;\n            let nextIndex = Math.max(0, Math.min(this.activeRow + offset, maxIndex));\n            if (this.metadata.hasDetailTemplate && !this.model.findRow(nextIndex)) {\n                nextIndex = offset > 0 ? nextIndex + 1 : nextIndex - 1;\n                nextIndex = Math.max(0, Math.min(nextIndex, maxIndex));\n            }\n            if (this.metadata.hasDetailTemplate && nextIndex === maxIndex) {\n                if (this.model.lastRow.index !== maxIndex) {\n                    // Don't attempt to navigate past the last collapsed row.\n                    nextIndex--;\n                }\n            }\n            const nextRow = this.model.findRow(nextIndex);\n            if (nextRow) {\n                // remove duplication\n                let cell = this.model.findCell(this.virtualCol, nextRow);\n                if (cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) {\n                    cell = this.model.findCell(this.virtualCol, this.model.findRow(cell.rowIndex + cell.rowSpan - 1 + offset));\n                }\n                nextIndex = cell.rowIndex;\n                nextColIndex = cell.colIndex;\n            }\n            this.virtualRow = nextIndex;\n            return this.activate(nextIndex, nextColIndex);\n        }\n        const nextRow = this.model.findRow(this.virtualRow + offset) || this.model.nextRow(this.virtualRow, offset);\n        if (!nextRow) {\n            return false;\n        }\n        let cell = this.model.findCell(this.virtualCol, nextRow);\n        if (cell && cell.rowIndex <= this.virtualRow && offset > 0 && cell.rowSpan > 1) { // spanned cell go to next\n            const nextPos = cell.rowIndex + cell.rowSpan - 1 + offset;\n            cell = this.model.findCell(this.virtualCol, this.model.findRow(nextPos));\n        }\n        if (!cell && this.metadata.virtualColumns) {\n            return this.activate(this.virtualRow + offset, this.virtualCol);\n        }\n        this.virtualRow = cell.rowIndex;\n        return this.activate(this.virtualRow, cell.colIndex);\n    }\n}\n\n/**\n * @hidden\n */\nclass ItemMap {\n    constructor() {\n        this.count = 0;\n        this.items = {};\n    }\n    get first() {\n        if (this.count > 0) {\n            let result;\n            this.forEach(item => {\n                result = item;\n                return true;\n            });\n            return result;\n        }\n    }\n    get last() {\n        if (this.count > 0) {\n            const keys = Object.keys(this.items);\n            return this.items[keys[keys.length - 1]];\n        }\n    }\n    removeItem(key) {\n        if (this.items[key]) {\n            delete this.items[key];\n            this.count--;\n        }\n    }\n    setItem(key, item) {\n        if (!this.items[key]) {\n            this.count++;\n        }\n        this.items[key] = item;\n    }\n    getItem(key) {\n        return this.items[key];\n    }\n    toArray() {\n        const result = [];\n        this.forEach(item => {\n            result.push(item);\n        });\n        return result;\n    }\n    forEach(callback) {\n        for (let key in this.items) {\n            if (this.items.hasOwnProperty(key) && callback(this.items[key])) {\n                return this.items[key];\n            }\n        }\n    }\n    find(callback) {\n        return this.forEach(callback);\n    }\n}\n\n/**\n * @hidden\n *\n * Contains information for the currently rendered rows and cells.\n */\nclass NavigationModel {\n    constructor() {\n        this.rows = new ItemMap();\n    }\n    get firstRow() {\n        return this.rows.first;\n    }\n    get lastRow() {\n        return this.rows.last;\n    }\n    registerCell(cell) {\n        const row = this.rows.getItem(cell.logicalRowIndex);\n        if (!row) {\n            return;\n        }\n        const colIndex = cell.logicalColIndex;\n        const modelCell = {\n            uid: cell.uid,\n            colIndex,\n            rowIndex: row.index,\n            colSpan: cell.colSpan,\n            rowSpan: cell.rowSpan,\n            detailExpandCell: cell.detailExpandCell,\n            dataItem: row.dataItem,\n            dataRowIndex: row.dataRowIndex,\n            focusGroup: cell.focusGroup\n        };\n        row.cells.setItem(colIndex, modelCell);\n        if (cell.groupItem) {\n            row.groupItem = cell.groupItem;\n        }\n        return modelCell;\n    }\n    unregisterCell(index, rowIndex, cell) {\n        const row = this.rows.getItem(rowIndex);\n        if (row) {\n            const match = row.cells.getItem(index);\n            if (match && match.uid === cell.uid) {\n                row.cells.removeItem(index);\n            }\n        }\n    }\n    registerRow(row) {\n        const modelRow = {\n            uid: row.uid,\n            index: row.logicalRowIndex,\n            dataItem: row.dataItem,\n            dataRowIndex: row.dataRowIndex,\n            cells: new ItemMap()\n        };\n        this.rows.setItem(row.logicalRowIndex, modelRow);\n    }\n    updateRow(row) {\n        const current = this.rows.getItem(row.logicalRowIndex);\n        if (current) {\n            Object.assign(current, {\n                dataItem: row.dataItem,\n                dataRowIndex: row.dataRowIndex\n            });\n        }\n    }\n    unregisterRow(index, row) {\n        const match = this.rows.getItem(index);\n        if (match && match.uid === row.uid) {\n            this.rows.removeItem(index);\n        }\n    }\n    cellRange(cell) {\n        if (cell) {\n            const start = cell.colIndex;\n            const end = cell.colIndex + (cell.colSpan || 1) - 1;\n            return {\n                start,\n                end\n            };\n        }\n        return {};\n    }\n    rowRange(cell) {\n        if (cell) {\n            const start = cell.rowIndex;\n            const end = cell.rowIndex + (cell.rowSpan || 1) - 1;\n            return {\n                start,\n                end\n            };\n        }\n        return {};\n    }\n    nextRow(rowIndex, offset) {\n        const rows = this.rows.toArray();\n        const row = this.rows.getItem(rowIndex);\n        const position = rows.indexOf(row);\n        const next = rows[position + offset];\n        return next;\n    }\n    findRow(index) {\n        return this.rows.getItem(index);\n    }\n    findCell(index, row) {\n        if (!row) {\n            return;\n        }\n        const rowIndex = row.index;\n        let cell = row.cells.getItem(index);\n        let currentIndex = rowIndex;\n        while (!cell && row) {\n            row = this.rows.getItem(currentIndex);\n            cell = this.rowCell(index, row);\n            currentIndex--;\n        }\n        if (cell && rowIndex <= row.index + (cell.rowSpan || 1) - 1) {\n            return cell;\n        }\n    }\n    rowCell(index, row) {\n        if (!row || !row.cells.count) {\n            return;\n        }\n        const firstCell = row.cells.first;\n        let cell, currentIndex = index;\n        while (!cell && currentIndex >= firstCell.colIndex) {\n            cell = row.cells.getItem(currentIndex);\n            currentIndex--;\n        }\n        if (cell && index <= cell.colIndex + (cell.colSpan || 1) - 1) {\n            return cell;\n        }\n    }\n}\n\n/**\n * @hidden\n */\nclass ScrollRequestService {\n    constructor() {\n        this.requests = new Subject();\n    }\n    scrollTo(request) {\n        this.requests.next(request);\n    }\n}\nScrollRequestService.decorators = [\n    { type: Injectable },\n];\n\nconst isInSameGrid = (element, gridElement) => closest(element, matchesNodeName('kendo-grid')) === gridElement;\nconst matchHeaderCell = matchesNodeName('th');\nconst matchDataCell = matchesNodeName('td');\nconst matchCell = (element) => matchDataCell(element) || matchHeaderCell(element);\nconst gridCell = (element, gridElement) => {\n    let target = closest(element, matchCell);\n    while (target && !isInSameGrid(target, gridElement)) {\n        target = closest(target.parentElement, matchCell);\n    }\n    return target;\n};\nconst targetCell = (target, gridElement) => {\n    const cell = gridCell(target, gridElement);\n    const row = closest(cell, matchesNodeName('tr'));\n    if (cell && row) {\n        let rowIndex = row.getAttribute('aria-rowindex');\n        rowIndex = rowIndex ? parseInt(rowIndex, 10) - 1 : null;\n        let colIndex = cell.getAttribute('aria-colindex');\n        colIndex = colIndex ? parseInt(colIndex, 10) - 1 : null;\n        if (rowIndex !== null && colIndex !== null) {\n            return { colIndex, rowIndex, element: cell };\n        }\n    }\n};\nconst isArrowKey = keyCode => keyCode === Keys.ArrowLeft || keyCode === Keys.ArrowRight ||\n    keyCode === Keys.ArrowUp || keyCode === Keys.ArrowDown;\nconst isNavigationKey = keyCode => isArrowKey(keyCode) ||\n    keyCode === Keys.PageUp || keyCode === Keys.PageDown ||\n    keyCode === Keys.Home || keyCode === Keys.End;\nconst isInput = matchesNodeName('input');\nconst isTextInput = element => element && isInput(element) && element.type.toLowerCase() === 'text';\nconst isPrintableCharacter = (str) => str.length === 1 && str.match(/\\S/);\n/**\n * @hidden\n */\nclass NavigationViewport {\n    constructor(firstItemIndex, lastItemIndex) {\n        this.firstItemIndex = firstItemIndex;\n        this.lastItemIndex = lastItemIndex;\n    }\n    containsRow(dataRowIndex) {\n        const headerRow = dataRowIndex < 0;\n        return headerRow || (dataRowIndex >= this.firstItemIndex && dataRowIndex <= this.lastItemIndex);\n    }\n    intersects(start, end) {\n        return (start <= this.firstItemIndex && this.lastItemIndex <= end) ||\n            (this.firstItemIndex <= start && start <= this.lastItemIndex) ||\n            (this.firstItemIndex <= end && end <= this.lastItemIndex);\n    }\n}\n/**\n * @hidden\n */\nclass NavigationService {\n    constructor(zone, domEvents, pagerContextService, scrollRequestService, groupsService, detailsService, focusRoot, editService, cd, localization, focusableParent) {\n        this.zone = zone;\n        this.domEvents = domEvents;\n        this.pagerContextService = pagerContextService;\n        this.scrollRequestService = scrollRequestService;\n        this.groupsService = groupsService;\n        this.detailsService = detailsService;\n        this.focusRoot = focusRoot;\n        this.editService = editService;\n        this.cd = cd;\n        this.localization = localization;\n        this.focusableParent = focusableParent;\n        this.cellKeydown = new EventEmitter();\n        this.activeRowIndex = 0;\n        this.alive = false;\n        this.active = true;\n        this.mode = 0 /* Standby */;\n        this.model = new NavigationModel();\n        this.cursor = new NavigationCursor(this.model);\n        this.changes = this.cursor.changes;\n    }\n    set metadata(value) {\n        this.meta = value;\n        this.cursor.metadata = value;\n    }\n    get metadata() {\n        return this.meta;\n    }\n    get enabled() {\n        return this.alive;\n    }\n    get activeCell() {\n        if (this.mode !== 0 /* Standby */) {\n            return this.cursor.cell;\n        }\n    }\n    get activeRow() {\n        if (this.mode !== 0 /* Standby */) {\n            return Object.assign({}, this.cursor.row, {\n                cells: this.cursor.row.cells.toArray()\n            });\n        }\n    }\n    get activeDataRow() {\n        return Math.max(0, this.activeRowIndex - this.meta.headerRows);\n    }\n    init(meta) {\n        this.alive = true;\n        this.focusRoot.alive = true;\n        this.metadata = meta;\n        const onStableSubscriber = (...operators) => (args) => this.zone.isStable ?\n            from([true]).pipe(map(() => args)) :\n            this.zone.onStable.pipe(take(1), map(() => args), ...operators);\n        const onStable = onStableSubscriber();\n        this.subs = new Subscription();\n        this.subs.add(this.cursor.changes\n            .subscribe(args => this.onCursorChanges(args)));\n        this.subs.add(this.domEvents.focus.pipe(switchMap(onStable))\n            .subscribe((args) => this.navigateTo(args.target)));\n        this.subs.add(this.domEvents.focusOut.pipe(filter(() => this.mode !== 0 /* Standby */), switchMap(onStableSubscriber(takeUntil(this.domEvents.focus))))\n            .subscribe(args => this.onFocusOut(args)));\n        this.subs.add(this.domEvents.windowBlur.pipe(filter(() => this.mode !== 0 /* Standby */))\n            .subscribe(() => this.onWindowBlur()));\n        this.subs.add(\n        // Closing the editor will not always trigger focusout in Firefox.\n        // To get around this, we ensure that the cell is closed after editing.\n        this.editService.changes.pipe(filter(e => e.action !== 'edit' && this.mode === 2 /* Content */), filter((e) => e.action === 'cellClose' && !e.prevented), switchMap(onStable))\n            .subscribe(() => this.leaveCell()));\n        this.subs.add(this.pagerContextService.pageChange\n            .subscribe(() => this.cursor.reset(0, 0)));\n        this.subs.add(this.domEvents.keydown\n            .subscribe(args => this.onKeydown(args)));\n        this.subs.add(this.domEvents.keydown.pipe(filter(args => args.keyCode === Keys.Tab && this.mode === 2 /* Content */), switchMapTo(this.domEvents.focusOut.pipe(takeUntil(\n        // Timeout if focusOut doesn't fire very soon\n        interval(0).pipe(take(1))))))\n            .subscribe(() => this.onTabout()));\n        if (this.focusableParent) {\n            const element = new GridFocusableElement(this);\n            this.focusableParent.registerElement(element);\n        }\n        this.deactivateElements();\n    }\n    ngOnDestroy() {\n        if (this.subs) {\n            this.subs.unsubscribe();\n        }\n        this.alive = false;\n    }\n    registerCell(cell) {\n        if (cell.logicalRowIndex !== this.pendingRowIndex) {\n            const modelCell = this.model.registerCell(cell);\n            if (this.virtualCell && this.cursor.activateVirtualCell(modelCell)) {\n                this.virtualCell = false;\n            }\n        }\n    }\n    registerCellOnCurrentRow(cell) {\n        if (cell.logicalRowIndex === this.pendingRowIndex) {\n            this.model.registerCell(cell);\n        }\n    }\n    unregisterCell(index, rowIndex, cell) {\n        this.model.unregisterCell(index, rowIndex, cell);\n    }\n    registerRow(row) {\n        this.model.registerRow(row);\n        this.pendingRowIndex = row.logicalRowIndex;\n    }\n    updateRow(row) {\n        this.model.updateRow(row);\n    }\n    unregisterRow(index, row) {\n        this.model.unregisterRow(index, row);\n    }\n    isCellFocusable(cell) {\n        return this.alive &&\n            this.active &&\n            this.mode !== 2 /* Content */ &&\n            this.cursor.isActive(cell.logicalRowIndex, cell.logicalColIndex);\n    }\n    isCellFocused(cell) {\n        return this.mode === 1 /* Cursor */ && this.isCellFocusable(cell);\n    }\n    navigateTo(el) {\n        if (!this.alive) {\n            return;\n        }\n        const cell = targetCell(el, this.meta.gridElement.nativeElement);\n        if (!cell) {\n            return;\n        }\n        const oldMode = this.mode;\n        const focusInCell = contains(cell.element, document.activeElement);\n        const focusInActiveRowContent = this.mode === 2 /* Content */ &&\n            this.activeRowIndex === cell.rowIndex &&\n            el !== cell.element;\n        if (focusInCell) {\n            this.mode = 2 /* Content */;\n            this.cursor.reset(cell.rowIndex, cell.colIndex);\n            this.activateRow();\n        }\n        else if (!focusInActiveRowContent) {\n            this.mode = 1 /* Cursor */;\n            this.deactivateElements();\n            const alreadyActive = this.cursor.isActive(cell.rowIndex, cell.colIndex);\n            const isCursor = oldMode === 1 /* Cursor */ && alreadyActive;\n            if (!isCursor) {\n                this.cursor.reset(cell.rowIndex, cell.colIndex);\n            }\n        }\n    }\n    tryFocus(el) {\n        this.activateElements();\n        const focusable = findFocusableChild(el);\n        if (focusable) {\n            const cell = targetCell(focusable, this.meta.gridElement.nativeElement);\n            if (cell) {\n                this.cursor.reset(cell.rowIndex, cell.colIndex);\n                this.deactivateElements();\n                this.enterCell();\n            }\n            focusable.focus();\n        }\n        else {\n            this.deactivateElements();\n        }\n        return !!focusable;\n    }\n    needsViewport() {\n        return this.meta && this.meta.isVirtual;\n    }\n    setViewport(firstItemIndex, lastItemIndex) {\n        this.viewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n        if (this.meta && this.meta.isVirtual && this.activeDataRow > -1) {\n            const dataRowIndex = this.activeDataRow;\n            const ahead = firstItemIndex - dataRowIndex;\n            const behind = dataRowIndex - lastItemIndex;\n            if (ahead > 0) {\n                this.cursor.reset(firstItemIndex + this.meta.headerRows);\n            }\n            else if (behind > 0) {\n                this.cursor.reset(lastItemIndex - this.meta.headerRows);\n            }\n        }\n    }\n    setColumnViewport(firstItemIndex, lastItemIndex) {\n        this.columnViewport = new NavigationViewport(firstItemIndex, lastItemIndex);\n    }\n    focusCell(rowIndex = undefined, colIndex = undefined) {\n        this.mode = 1 /* Cursor */;\n        this.cursor.reset(rowIndex, colIndex);\n        return this.activeCell;\n    }\n    focusNextCell(wrap = true) {\n        return this.focusAdjacentCell(true, wrap);\n    }\n    focusPrevCell(wrap = true) {\n        return this.focusAdjacentCell(false, wrap);\n    }\n    toggle(active) {\n        this.active = active;\n        this.cursor.announce();\n    }\n    hasFocus() {\n        return this.mode === 1 /* Cursor */ || this.mode === 2 /* Content */;\n    }\n    autoFocusCell(start, end) {\n        return !this.meta.virtualColumns || end < this.meta.columns.lockedLeafColumns.length || this.columnViewport.intersects(start, end);\n    }\n    focusAdjacentCell(fwd, wrap) {\n        this.focusCell();\n        let success = fwd ? this.moveCursorFwd() : this.moveCursorBwd();\n        if (wrap && !success) {\n            success = fwd ? this.cursor.moveDown(1) : this.cursor.moveUp(1);\n            if (success) {\n                const row = this.cursor.row;\n                const colIdx = fwd ? 0 : this.cursor.lastCellIndex(row);\n                this.cursor.reset(row.index, colIdx);\n            }\n        }\n        if (success) {\n            return this.activeCell;\n        }\n        else {\n            this.mode = 0 /* Standby */;\n            this.cursor.announce();\n        }\n        return null;\n    }\n    enterCell() {\n        const cell = this.cursor.cell;\n        if (!cell) {\n            return;\n        }\n        const group = cell.focusGroup;\n        const focusable = group && group.canFocus();\n        this.mode = focusable ? 2 /* Content */ : 1 /* Cursor */;\n        this.cursor.announce();\n        if (focusable) {\n            this.activateRow();\n            group.focus();\n        }\n    }\n    leaveCell() {\n        const cell = this.cursor.cell;\n        if (!cell) {\n            return;\n        }\n        const group = cell.focusGroup;\n        const focusable = group && group.canFocus();\n        if (!focusable) {\n            this.deactivateElements();\n        }\n        this.mode = 1 /* Cursor */;\n        this.cursor.announce();\n    }\n    activateElements() {\n        this.focusRoot.activate();\n    }\n    deactivateElements() {\n        this.focusRoot.deactivate();\n    }\n    activateRow() {\n        this.cursor.row.cells\n            .forEach(cell => cell.focusGroup && cell.focusGroup.activate());\n    }\n    moveCursorFwd() {\n        return this.localization.rtl ? this.cursor.moveLeft() : this.cursor.moveRight();\n    }\n    moveCursorBwd() {\n        return this.localization.rtl ? this.cursor.moveRight() : this.cursor.moveLeft();\n    }\n    onCursorKeydown(args) {\n        let preventDefault = false;\n        const modifier = args.ctrlKey || args.metaKey;\n        const step = modifier ? 5 : 1;\n        if (!this.onCellKeydown(args)) {\n            return;\n        }\n        const row = this.cursor.row;\n        switch (args.keyCode) {\n            case Keys.ArrowDown:\n                preventDefault = this.cursor.moveDown(step);\n                break;\n            case Keys.ArrowUp:\n                preventDefault = this.cursor.moveUp(step);\n                break;\n            case Keys.ArrowRight:\n                preventDefault = this.moveCursorFwd();\n                break;\n            case Keys.ArrowLeft:\n                preventDefault = this.moveCursorBwd();\n                break;\n            case Keys.PageDown:\n                if (this.metadata.isVirtual && this.viewport) {\n                    let nextItemIndex = this.meta.headerRows + this.viewport.lastItemIndex + 1;\n                    if (this.metadata.hasDetailTemplate) {\n                        nextItemIndex++;\n                    }\n                    nextItemIndex = Math.min(this.meta.maxLogicalRowIndex, nextItemIndex);\n                    this.cursor.reset(nextItemIndex);\n                    preventDefault = true;\n                }\n                else if (this.metadata.hasPager) {\n                    this.zone.run(() => this.pagerContextService.nextPage());\n                    preventDefault = true;\n                }\n                break;\n            case Keys.PageUp:\n                if (this.metadata.isVirtual && this.viewport) {\n                    let viewportSize = this.viewport.lastItemIndex - this.viewport.firstItemIndex;\n                    let firstItemIndex = this.viewport.firstItemIndex;\n                    let nextItemIndex = Math.max(this.meta.headerRows, firstItemIndex - viewportSize - 1);\n                    this.cursor.reset(nextItemIndex);\n                    preventDefault = true;\n                }\n                else if (this.metadata.hasPager) {\n                    this.zone.run(() => this.pagerContextService.prevPage());\n                    preventDefault = true;\n                }\n                break;\n            case Keys.Home:\n                if (modifier) {\n                    if (this.meta.isVirtual) {\n                        this.cursor.reset(this.meta.headerRows, 0, false);\n                    }\n                    else {\n                        this.cursor.reset(this.model.firstRow.index, 0, false);\n                    }\n                }\n                else {\n                    this.cursor.reset(row.index, 0, false);\n                }\n                preventDefault = true;\n                break;\n            case Keys.End:\n                if (modifier) {\n                    if (this.meta.isVirtual) {\n                        let lastRowIndex = this.meta.maxLogicalRowIndex;\n                        if (this.meta.hasDetailTemplate) {\n                            lastRowIndex--;\n                        }\n                        this.cursor.reset(lastRowIndex, this.cursor.lastCellIndex(), false);\n                    }\n                    else {\n                        this.cursor.reset(this.model.lastRow.index, this.cursor.lastCellIndex(this.model.lastRow), false);\n                    }\n                }\n                else {\n                    const lastIndex = this.cursor.lastCellIndex(row);\n                    const cell = this.model.findCell(lastIndex, row);\n                    if (cell) {\n                        this.cursor.reset(cell.rowIndex, cell.colIndex);\n                    }\n                    else {\n                        this.cursor.reset(row.index, lastIndex);\n                    }\n                }\n                preventDefault = true;\n                break;\n            case Keys.Enter:\n            case Keys.F2:\n                const groupItem = row.groupItem;\n                if (groupItem) {\n                    this.zone.run(() => this.groupsService.toggleRow(groupItem.index, groupItem.data));\n                }\n                else if (this.cursor.cell.detailExpandCell) {\n                    this.zone.run(() => this.detailsService.toggleRow(row.dataRowIndex, row.dataItem));\n                }\n                else {\n                    this.enterCell();\n                    if (!this.cursor.cell.focusGroup.isNavigable()) {\n                        preventDefault = true;\n                    }\n                }\n                break;\n            default:\n                if (!args.ctrlKey && !args.altKey && isPrintableCharacter(args.key)) {\n                    this.enterCell();\n                }\n        }\n        if (preventDefault) {\n            args.preventDefault();\n        }\n    }\n    onContentKeydown(args) {\n        if (!this.onCellKeydown(args)) {\n            return;\n        }\n        const confirm = !args.defaultPrevented && args.keyCode === Keys.Enter && isTextInput(args.srcElement);\n        if (args.keyCode === Keys.Escape || args.keyCode === Keys.F2 || confirm) {\n            this.leaveCell();\n            this.cursor.reset();\n            args.stopPropagation();\n        }\n        else if (isNavigationKey(args.keyCode) && this.cursor.cell.focusGroup.isNavigable()) {\n            this.onCursorKeydown(args);\n            if (args.defaultPrevented) {\n                this.leaveCell();\n            }\n        }\n    }\n    onCellKeydown(args) {\n        if (this.editService.isEditingCell()) {\n            const confirm = args.keyCode === Keys.Enter;\n            const cancel = args.keyCode === Keys.Escape;\n            const navigate = isNavigationKey(args.keyCode);\n            if (confirm) {\n                this.editService.closeCell(args);\n            }\n            else if (cancel) {\n                this.editService.cancelCell();\n                this.cd.detectChanges();\n            }\n            else if (navigate) {\n                return false;\n            }\n        }\n        this.cellKeydown.emit(args);\n        return true;\n    }\n    onCursorChanges(args) {\n        this.activeRowIndex = args.rowIndex;\n        const dataRowIndex = this.activeDataRow;\n        if (this.meta && (this.meta.isVirtual && this.viewport &&\n            !this.viewport.containsRow(dataRowIndex) && dataRowIndex > -1)) {\n            this.scrollRequestService.scrollTo({ row: dataRowIndex });\n        }\n        if (this.meta.virtualColumns && args.colIndex >= this.meta.columns.lockedLeafColumns.length) {\n            const cell = this.activeCell;\n            const { start, end } = this.model.cellRange(cell);\n            if (!cell) {\n                this.virtualCell = true;\n            }\n            if ((!cell && this.mode !== 0 /* Standby */) || (cell && !this.columnViewport.intersects(start, end))) {\n                this.scrollRequestService.scrollTo({ column: args.colIndex - (this.metadata.hasDetailTemplate ? 1 : 0) });\n            }\n        }\n    }\n    onFocusOut(args) {\n        if (isVisible(args.target)) {\n            this.mode = 0 /* Standby */;\n        }\n        else {\n            // Focused target is no longer visible,\n            // reset to cursor mode and recapture focus.\n            this.mode = 1 /* Cursor */;\n        }\n        this.deactivateElements();\n        this.cursor.announce();\n    }\n    onWindowBlur() {\n        this.mode = 0 /* Standby */;\n        this.deactivateElements();\n        this.cursor.announce();\n    }\n    onKeydown(args) {\n        if (this.mode === 1 /* Cursor */) {\n            this.onCursorKeydown(args);\n        }\n        else if (this.mode === 2 /* Content */) {\n            this.onContentKeydown(args);\n        }\n    }\n    onTabout() {\n        // Tabbed out of the last focusable content element\n        // reset to cursor mode and recapture focus.\n        if (this.cursor.cell.focusGroup.isNavigable()) {\n            // Unless the cell has a single focusable element,\n            // otherwise we'd return to Content mode and enter an endless loop\n            return;\n        }\n        this.leaveCell();\n        this.cursor.reset();\n    }\n}\nNavigationService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nNavigationService.ctorParameters = () => [\n    { type: NgZone },\n    { type: DomEventsService },\n    { type: PagerContextService },\n    { type: ScrollRequestService },\n    { type: GroupsService },\n    { type: DetailsService },\n    { type: FocusRoot },\n    { type: EditService },\n    { type: ChangeDetectorRef },\n    { type: LocalizationService },\n    { type: FocusableDirective, decorators: [{ type: Optional }] }\n];\n\n/**\n * @hidden\n */\nclass NavigationMetadata {\n    constructor(dataRows, headerRows, isVirtual, hasPager, hasDetailTemplate, gridElement, virtualColumns, columns) {\n        this.dataRows = dataRows;\n        this.headerRows = headerRows;\n        this.isVirtual = isVirtual;\n        this.hasPager = hasPager;\n        this.hasDetailTemplate = hasDetailTemplate;\n        this.gridElement = gridElement;\n        this.virtualColumns = virtualColumns;\n        this.columns = columns;\n    }\n    get maxLogicalRowIndex() {\n        const dataRows = this.hasDetailTemplate ? this.dataRows * 2 : this.dataRows;\n        return this.headerRows + dataRows - 1;\n    }\n}\n\n// Incremented each time the service is instantiated.\nlet sequence = 0;\n/**\n * @hidden\n */\nclass IdService {\n    constructor() {\n        this.prefix = `k-grid${sequence++}`;\n    }\n    cellId(rowIndex, colIndex) {\n        return `${this.prefix}-r${rowIndex}c${colIndex}`;\n    }\n    selectionCheckboxId(itemIndex) {\n        return `${this.prefix}-checkbox${itemIndex}`;\n    }\n    selectAllCheckboxId() {\n        return `${this.prefix}-select-all`;\n    }\n}\nIdService.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nIdService.ctorParameters = () => [];\n\n/**\n * @hidden\n */\nclass ColumnInfoService {\n    constructor() {\n        this.visibilityChange = new EventEmitter();\n        this.lockedChange = new EventEmitter();\n        this.columnRangeChange = new EventEmitter();\n        this.columnsContainer = new ColumnsContainer(() => []);\n    }\n    get lockedLeafColumns() {\n        return this.columnsContainer.lockedLeafColumns;\n    }\n    get nonLockedLeafColumns() {\n        return this.columnsContainer.nonLockedLeafColumns;\n    }\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    get totalLevels() {\n        return this.columnsContainer.totalLevels;\n    }\n    get leafNamedColumns() {\n        const columns = expandColumns(this.list().filterSort(column => !column.isColumnGroup))\n            .filter(column => column.matchesMedia && column.displayTitle);\n        return orderBy(columns, [{ field: 'locked', dir: 'desc' }]);\n    }\n    get unlockedRootCount() {\n        return this.list().rootColumns().filter(column => !column.locked && column.isVisible).length;\n    }\n    init(columns, list) {\n        this.columnsContainer = columns;\n        this.list = list;\n    }\n    changeVisibility(columns) {\n        this.visibilityChange.emit(columns);\n    }\n    changeLocked(columns) {\n        this.lockedChange.emit(columns);\n    }\n}\nColumnInfoService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass SortService {\n    constructor() {\n        this.changes = new Subject();\n    }\n    sort(value) {\n        this.changes.next(value);\n    }\n}\n\n/**\n * Arguments for the `columnVisibilityChange` event.\n */\nclass ColumnVisibilityChangeEvent {\n    /**\n     * @hidden\n     */\n    constructor(columns) {\n        this.columns = columns;\n    }\n}\n\n/**\n * Arguments for the `columnLockedChange` event.\n */\nclass ColumnLockedChangeEvent {\n    /**\n     * @hidden\n     */\n    constructor(columns) {\n        this.columns = columns;\n    }\n}\n\n/**\n * @hidden\n */\nconst GROUP_CELL_WIDTH = 32; // this should be the value of group-cell inside the theme!\n\n/**\n * @hidden\n */\nfunction defaultTrackBy(index, item) {\n    if (item.type === 'data' && item.isEditing) {\n        return item.data;\n    }\n    return index;\n}\n\nconst createControl = (source) => (acc, key) => {\n    acc[key] = new FormControl(source[key]);\n    return acc;\n};\nconst validateColumnsField = (columns) => expandColumns(columns.toArray())\n    .filter(isColumnComponent)\n    .filter(({ field }) => !isValidFieldName(field))\n    .forEach(({ field }) => console.warn(`\n                Grid column field name '${field}' does not look like a valid JavaScript identifier.\n                Identifiers can contain only alphanumeric characters (including \"$\" or \"_\"), and may not start with a digit.\n                Please use only valid identifier names to ensure error-free operation.\n            `));\nconst handleExpandCollapseService = (service, expandEmitter, collapseEmitter, map$$1) => (service.changes.pipe(filter(({ dataItem }) => isPresent(dataItem)))\n    .subscribe((x) => x.expand ? expandEmitter.emit(map$$1(x)) : collapseEmitter.emit(map$$1(x))));\nconst isInEditedCell = (element, gridElement) => closest(element, matchesClasses('k-grid-edit-cell')) &&\n    closest(element, matchesNodeName('kendo-grid')) === gridElement;\nconst ɵ4$2 = EMPTY_CELL_CONTEXT;\n/**\n * Represents the Kendo UI Grid component for Angular.\n *\n * @example\n * ```ts-preview\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *        </kendo-grid>\n *    `\n * })\n * class AppComponent {\n *    public gridData: any[] = products;\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n * ```\n */\nclass GridComponent {\n    constructor(supportService, selectionService, cellSelectionService, wrapper, groupInfoService, groupsService, changeNotification, detailsService, editService, filterService, pdfService, responsiveService, renderer, excelService, ngZone, scrollSyncService, domEvents, columnResizingService, changeDetectorRef, columnReorderService, columnInfoService, navigationService, sortService, scrollRequestService, localization) {\n        this.supportService = supportService;\n        this.selectionService = selectionService;\n        this.cellSelectionService = cellSelectionService;\n        this.wrapper = wrapper;\n        this.groupInfoService = groupInfoService;\n        this.groupsService = groupsService;\n        this.changeNotification = changeNotification;\n        this.detailsService = detailsService;\n        this.editService = editService;\n        this.filterService = filterService;\n        this.pdfService = pdfService;\n        this.responsiveService = responsiveService;\n        this.renderer = renderer;\n        this.excelService = excelService;\n        this.ngZone = ngZone;\n        this.scrollSyncService = scrollSyncService;\n        this.domEvents = domEvents;\n        this.columnResizingService = columnResizingService;\n        this.changeDetectorRef = changeDetectorRef;\n        this.columnReorderService = columnReorderService;\n        this.columnInfoService = columnInfoService;\n        this.navigationService = navigationService;\n        this.sortService = sortService;\n        this.scrollRequestService = scrollRequestService;\n        /**\n         * Sets the data of the Grid. If an array is provided, the Grid automatically gets the total count\n         * ([more information and example]({% slug databinding_grid %})).\n         */\n        this.data = [];\n        /**\n         * Defines the scroll mode used by the Grid.\n         *\n         * The available options are:\n         *  - `none`&mdash;Renders no scrollbar.\n         *  - `scrollable`&mdash;The default scroll mode. It requires the setting of the `height` option.\n         *  - `virtual`&mdash;Displays no pager and renders a portion of the data (optimized rendering) while the user is scrolling the content.\n         */\n        this.scrollable = 'scrollable';\n        /**\n         * Enables the single-row [selection]({% slug selection_grid %}) of the Grid.\n         */\n        this.selectable = false;\n        /**\n         * A function that defines how to track changes for the data rows.\n         *\n         * By default, the Grid tracks changes by the index of the data item.\n         * Edited rows are tracked by reference.\n         * In some cases, you might need to override the default behavior,\n         * for example, when you implement editing with immutable data items.\n         *\n         * The following example demonstrates how to track items only by index.\n         *\n         * @example\n         * ```ts\n         * import { Component } from '@angular/core';\n         * import { GridItem } from '@progress/kendo-angular-grid';\n         *\n         * _@Component({\n         *    selector: 'my-app',\n         *    template: `\n         *        <kendo-grid [data]=\"gridData\" [trackBy]=\"trackBy\">\n         *        </kendo-grid>\n         *    `\n         * })\n         * class AppComponent {\n         *    public gridData: any[] = products;\n         *\n         *    public trackBy(index: number, item: GridItem): any {\n         *        console.log(item);\n         *        return index;\n         *    }\n         * }\n         *\n         * const products = [{\n         *    \"ProductID\": 1,\n         *    \"ProductName\": \"Chai\",\n         *    \"UnitPrice\": 18.0000,\n         *    \"Discontinued\": true\n         *  }, {\n         *    \"ProductID\": 2,\n         *    \"ProductName\": \"Chang\",\n         *    \"UnitPrice\": 19.0000,\n         *    \"Discontinued\": false\n         *  }\n         * ];\n         * ```\n         */\n        this.trackBy = defaultTrackBy;\n        /**\n         * If set to `true`, the grid will render only the columns in the current viewport.\n         */\n        this.virtualColumns = false;\n        /**\n         * Enables the [filtering]({% slug filtering_grid %}) of the Grid columns that have their `field` option set.\n         */\n        this.filterable = false;\n        /**\n         * Enables the [sorting]({% slug sorting_grid %}) of the Grid columns that have their `field` option set.\n         */\n        this.sortable = false;\n        /**\n         * Configures the pager of the Grid ([see example]({% slug paging_grid %})).\n         *\n         * The available options are:\n         * - `buttonCount: Number`&mdash;Sets the maximum numeric buttons count before the buttons are collapsed.\n         * - `info: Boolean`&mdash;Toggles the information about the current page and the total number of records.\n         * - `type: PagerType`&mdash;Accepts the `numeric` (buttons with numbers) and `input` (input for typing the page number) values.\n         * - `pageSizes: Boolean` or `Array<number>`&mdash;Shows a menu for selecting the page size.\n         * - `previousNext: Boolean`&mdash;Toggles the **Previous** and **Next** buttons.\n         */\n        this.pageable = false;\n        /**\n         * If set to `true`, the user can group the Grid by dragging the column header cells.\n         * By default, grouping is disabled ([see example]({% slug groupingbasics_grid %})).\n         */\n        this.groupable = false;\n        /**\n         * If set to `true`, the user can use dedicated shortcuts to interact with the Grid.\n         * By default, navigation is disabled and the Grid content is accessible in the normal tab sequence.\n         */\n        this.navigable = false;\n        /**\n         * Indicates whether the Grid columns will be resized during initialization so that\n         * they fit their headers and row content. Defaults to `false`.\n         * Columns with `autoSize` set to `false` are excluded.\n         * To dynamically update the column width to match the new content,\n         * refer to [this example]({% slug resizing_columns_grid %}).\n         */\n        this.autoSize = false;\n        /**\n         * If set to `true`, the user can resize columns by dragging the edges (resize handles) of their header cells\n         * ([see example]({% slug resizing_columns_grid %})).\n         *\n         * @default false\n         */\n        this.resizable = false;\n        /**\n         * If set to `true`, the user can reorder columns by dragging their header cells\n         * ([see example]({% slug reordering_columns_grid %})).\n         *\n         * @default false\n         */\n        this.reorderable = false;\n        /**\n         * Specifies if the loading indicator of the Grid will be displayed ([see example]({% slug databinding_grid %})).\n         *\n         * @default false\n         */\n        this.loading = false;\n        /**\n         * Specifies if the column menu of the columns will be displayed ([see example]({% slug columnmenu_grid %})).\n         *\n         * @default false\n         */\n        this.columnMenu = false;\n        /**\n         * Specifies if the header of the grid will be hidden. The header is visible by default.\n         *\n         * > The header includes column headers and the [filter row]({% slug filtering_grid %}#toc-filter-row).\n         */\n        this.hideHeader = false;\n        /**\n         * Fires when the Grid filter is modified through the UI.\n         * You have to handle the event yourself and filter the data.\n         */\n        this.filterChange = new EventEmitter();\n        /**\n         * Fires when the page of the Grid is changed ([see example]({% slug paging_grid %})).\n         * You have to handle the event yourself and page the data.\n         */\n        this.pageChange = new EventEmitter();\n        /**\n         * Fires when the grouping of the Grid is changed.\n         * You have to handle the event yourself and group the data ([see example]({% slug groupingbasics_grid %})).\n         */\n        this.groupChange = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the sorting of the Grid is changed ([see example]({% slug sorting_grid %})).\n         * You have to handle the event yourself and sort the data.\n         */\n        this.sortChange = new EventEmitter();\n        /**\n         * Fires when the user selects a Grid row.\n         * Emits the [`SelectionEvent`]({% slug api_grid_selectionevent %}#toc-selectionchange).\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Fires when the data state of the Grid is changed.\n         */\n        this.dataStateChange = new EventEmitter();\n        /**\n         * Fires when the user expands a group header.\n         */\n        this.groupExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a group header.\n         */\n        this.groupCollapse = new EventEmitter();\n        /**\n         * Fires when the user expands a master row.\n         */\n        this.detailExpand = new EventEmitter();\n        /**\n         * Fires when the user collapses a master row.\n         */\n        this.detailCollapse = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Edit** command button to edit a row\n         * ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n         */\n        this.edit = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Cancel** command button to close a row\n         * ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Save** command button to save changes in a row\n         * ([see example]({% slug editing_template_forms_grid %}#toc-saving-records)).\n         */\n        this.save = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Remove** command button to remove a row\n         * ([see example]({% slug editing_template_forms_grid %}#toc-removing-records)).\n         */\n        this.remove = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Add** command button to add a new row\n         * ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n         */\n        this.add = new EventEmitter();\n        /**\n         * Fires when the user leaves an edited cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n         */\n        this.cellClose = new EventEmitter();\n        /**\n         * Fires when the user clicks a cell ([see example]({% slug editing_incell_grid %}#toc-basic-concepts)).\n         */\n        this.cellClick = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the user clicks the **Export to PDF** command button.\n         */\n        this.pdfExport = new EventEmitter();\n        /**\n         * Fires when the user clicks the **Export to Excel** command button.\n         */\n        this.excelExport = new EventEmitter();\n        /**\n         * Fires when the user completes the resizing of the column.\n         */\n        this.columnResize = new ZoneAwareEventEmitter(this.ngZone);\n        /**\n         * Fires when the user completes the reordering of the column.\n         */\n        this.columnReorder = new EventEmitter();\n        /**\n         * Fires when the user changes the visibility of the columns from the column menu or column chooser.\n         */\n        this.columnVisibilityChange = new EventEmitter();\n        /**\n         * Fires when the user changes the locked state of the columns from the column menu or by reordering the columns.\n         */\n        this.columnLockedChange = new EventEmitter();\n        /**\n         * Fires when the user scrolls to the last record on the page and enables endless scrolling\n         * ([see example]({% slug scrollmmodes_grid %}#toc-endless-scrolling)).\n         * You have to handle the event yourself and page the data.\n         */\n        this.scrollBottom = new EventEmitter();\n        /**\n         * Fires when the grid content is scrolled.\n         * For performance reasons, the event is triggered outside the Angular zone. Enter the Angular zone if you make any changes that require change detection.\n         */\n        this.contentScroll = new EventEmitter();\n        /**\n         * A query list of all declared columns.\n         */\n        this.columns = new QueryList();\n        this.footer = new QueryList();\n        this.selectionDirective = false;\n        this.columnsContainer = new ColumnsContainer(() => this.columnList.filterHierarchy(column => {\n            column.matchesMedia = this.matchesMedia(column);\n            return column.isVisible;\n        }));\n        this.view = new DataCollection(() => new DataResultIterator(this.data, this.skip, this.hasGroupFooters));\n        this.shouldGenerateColumns = true;\n        this._sort = new Array();\n        this._group = new Array();\n        this._skip = 0;\n        this.cachedWindowWidth = 0;\n        this._rowSelected = null;\n        this._cellSelected = null;\n        this.rtl = false;\n        this._rowClass = () => null;\n        this.localizationSubscription = localization.changes.subscribe(({ rtl }) => {\n            this.rtl = rtl;\n            this.direction = this.rtl ? 'rtl' : 'ltr';\n        });\n        this.groupInfoService.registerColumnsContainer(() => this.columnList);\n        this.columnInfoService.init(this.columnsContainer, () => this.columnList);\n        this.columnVisibilityChangeSubscription = this.columnInfoService.visibilityChange.subscribe((changed) => {\n            this.columnVisibilityChange.emit(new ColumnVisibilityChangeEvent(changed));\n        });\n        this.columnLockedChangeSubscription = this.columnInfoService.lockedChange.subscribe((changed) => {\n            this.columnLockedChange.emit(new ColumnLockedChangeEvent(changed));\n        });\n        this.groupExpandCollapseSubscription = handleExpandCollapseService(groupsService, this.groupExpand, this.groupCollapse, ({ dataItem: group, index }) => ({ group, groupIndex: index }));\n        this.detailsServiceSubscription = handleExpandCollapseService(detailsService, this.detailExpand, this.detailCollapse, args => args);\n        this.filterSubscription = this.filterService.changes.subscribe(x => {\n            this.filterChange.emit(x);\n        });\n        this.sortSubscription = this.sortService.changes.subscribe(x => {\n            this.sortChange.emit(x);\n        });\n        this.attachStateChangesEmitter();\n        this.attachEditHandlers();\n        this.attachDomEventHandlers();\n        this.pdfSubscription = this.pdfService.exportClick.subscribe(this.emitPDFExportEvent.bind(this));\n        this.excelSubscription = this.excelService.exportClick.subscribe(this.saveAsExcel.bind(this));\n        this.columnsContainerChange();\n        this.handleColumnResize();\n        this.columnList = new ColumnList(this.columns);\n        this.columnReorderSubscription = this.columnReorderService\n            .changes.subscribe(this.reorder.bind(this));\n        this.columnRangeChangeSubscription = this.columnInfoService.columnRangeChange.subscribe(this.onColumnRangeChange.bind(this));\n    }\n    /**\n     * Defines the number of records to be skipped by the pager.\n     * Required by the [paging]({% slug paging_grid %}) functionality.\n     */\n    get skip() {\n        return this._skip;\n    }\n    set skip(value) {\n        if (value >= 0) {\n            this._skip = value;\n        }\n    }\n    /**\n     * The descriptors by which the data will be sorted ([see example]({% slug sorting_grid %})).\n     */\n    set sort(value) {\n        if (isArray(value)) {\n            this._sort = value;\n        }\n    }\n    get sort() {\n        return this._sort;\n    }\n    /**\n     * The descriptors by which the data will be grouped ([see example]({% slug groupingbasics_grid %})).\n     */\n    set group(value) {\n        if (isArray(value)) {\n            this._group = value;\n        }\n    }\n    /**\n     */\n    get group() {\n        return this._group;\n    }\n    /**\n     * @hidden\n     */\n    get showTopToolbar() {\n        return this.toolbarTemplate && ['top', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n    get showBottomToolbar() {\n        return this.toolbarTemplate && ['bottom', 'both'].indexOf(this.toolbarTemplate.position) > -1;\n    }\n    /**\n     * @hidden\n     */\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    /**\n     * @hidden\n     */\n    get showPager() {\n        return !this.isVirtual && this.pageable !== false;\n    }\n    /**\n     * @hidden\n     */\n    get showGroupPanel() {\n        return this.groupable && this.groupable.enabled !== false;\n    }\n    /**\n     * @hidden\n     */\n    get groupableEmptyText() {\n        return this.groupable.emptyText;\n    }\n    /**\n     * @hidden\n     */\n    get marqueeSelection() {\n        return this.selectionService.enableMarquee || this.cellSelectionService.enableMarquee;\n    }\n    /**\n     * @hidden\n     *\n     * An alias for `navigable` for users who migrate from Kendo UI for jQuery.\n     */\n    set navigatable(value) {\n        this.navigable = value;\n    }\n    /**\n     * @hidden\n     */\n    get navigatable() {\n        return this.navigable;\n    }\n    /**\n     * Defines a function that is executed for every data row in the component.\n     *\n     * @example\n     * ```ts\n     * import { Component, ViewEncapsulation } from '@angular/core';\n     * import { RowClassArgs } from '@progress/kendo-angular-grid';\n     *\n     * _@Component({\n     *    selector: 'my-app',\n     *    encapsulation: ViewEncapsulation.None,\n     *    styles: [`\n     *        .k-grid tr.even { background-color: #f45c42; }\n     *        .k-grid tr.odd { background-color: #41f4df; }\n     *    `],\n     *    template: `\n     *        <kendo-grid [data]=\"gridData\" [rowClass]=\"rowCallback\">\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *\n     *    public rowCallback(context: RowClassArgs) {\n     *        const isEven = context.index % 2 == 0;\n     *        return {\n     *            even: isEven,\n     *            odd: !isEven\n     *        };\n     *    }\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    set rowClass(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`rowClass must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._rowClass = fn;\n    }\n    get rowClass() {\n        return this._rowClass;\n    }\n    /**\n     * Defines a Boolean function that is executed for each data row in the component\n     * ([see example]({% slug selection_grid %}#toc-setting-the-selected-rows)).\n     * Determines whether the row will be selected.\n     */\n    set rowSelected(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`rowSelected must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._rowSelected = fn;\n    }\n    get rowSelected() {\n        return this._rowSelected;\n    }\n    /**\n     * Defines a function that determines the selected state of a data cell.\n     * Returns an object with `selected` and `item` properties.\n     * The cell is marked as selected only if the `selected` property equals `true`.\n     *\n     * The function is executed for each data cell and may be called more than once\n     * as part of a change detection cycle. ([see example]({% slug grid_selection_custom %}toc-setting-the-selected-cells))\n     */\n    set cellSelected(fn) {\n        if (isDevMode && typeof fn !== 'function') {\n            throw new Error(`cellSelected must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._cellSelected = fn;\n    }\n    get cellSelected() {\n        return this._cellSelected;\n    }\n    /**\n     * Returns the currently focused cell (if any).\n     */\n    get activeCell() {\n        return this.navigationService.activeCell;\n    }\n    /**\n     * Returns the currently focused row (if any).\n     */\n    get activeRow() {\n        return this.navigationService.activeRow;\n    }\n    get dir() {\n        return this.direction;\n    }\n    get hostClasses() {\n        return true;\n    }\n    get lockedClasses() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    get virtualClasses() {\n        return this.isVirtual;\n    }\n    get noScrollbarClass() {\n        return this.scrollbarWidth === 0;\n    }\n    get detailTemplate() {\n        if (this._customDetailTemplate) {\n            return this._customDetailTemplate;\n        }\n        return this.detailTemplateChildren ? this.detailTemplateChildren.first : undefined;\n    }\n    set detailTemplate(detailTemplate) {\n        this._customDetailTemplate = detailTemplate;\n    }\n    get noRecordsTemplate() {\n        if (this._customNoRecordsTemplate) {\n            return this._customNoRecordsTemplate;\n        }\n        return this.noRecordsTemplateChildren ? this.noRecordsTemplateChildren.first : undefined;\n    }\n    set noRecordsTemplate(customNoRecordsTemplate) {\n        this._customNoRecordsTemplate = customNoRecordsTemplate;\n    }\n    get pagerTemplate() {\n        if (this._customPagerTemplate) {\n            return this._customPagerTemplate;\n        }\n        return this.pagerTemplateChildren ? this.pagerTemplateChildren.first : undefined;\n    }\n    set pagerTemplate(customPagerTemplate) {\n        this._customPagerTemplate = customPagerTemplate;\n    }\n    get toolbarTemplate() {\n        if (this._customToolbarTemplate) {\n            return this._customToolbarTemplate;\n        }\n        return this.toolbarTemplateChildren ? this.toolbarTemplateChildren.first : undefined;\n    }\n    set toolbarTemplate(customToolbarTemplate) {\n        this._customToolbarTemplate = customToolbarTemplate;\n    }\n    get scrollbarWidth() {\n        return this.supportService.scrollbarWidth;\n    }\n    get headerPadding() {\n        if (isUniversal()) {\n            return \"\";\n        }\n        const padding = Math.max(0, this.scrollbarWidth - 1) + 'px';\n        const right = this.rtl ? 0 : padding;\n        const left = this.rtl ? padding : 0;\n        return `0 ${right} 0 ${left}`;\n    }\n    get hasGroupFooters() {\n        return this.columnsContainer.hasGroupFooter;\n    }\n    get showFooter() {\n        return this.columnsContainer.hasFooter;\n    }\n    get showGroupFooters() {\n        return this.groupable && this.groupable.showFooter;\n    }\n    get ariaRowCount() {\n        return this.totalColumnLevels + 1 + this.view.total;\n    }\n    get ariaColCount() {\n        return this.columnsContainer.leafColumnsToRender.length;\n    }\n    get isVirtual() {\n        return this.scrollable === 'virtual';\n    }\n    get isScrollable() {\n        return this.scrollable !== 'none';\n    }\n    get visibleColumns() {\n        return this.columnsContainer.allColumns;\n    }\n    get lockedColumns() {\n        return this.columnsContainer.lockedColumns;\n    }\n    get nonLockedColumns() {\n        return this.columnsContainer.nonLockedColumns;\n    }\n    get lockedLeafColumns() {\n        return this.columnsContainer.lockedLeafColumns;\n    }\n    get nonLockedLeafColumns() {\n        return this.columnsContainer.nonLockedLeafColumns;\n    }\n    get leafColumns() {\n        return this.columnsContainer.leafColumns;\n    }\n    get totalColumnLevels() {\n        return this.columnsContainer.totalLevels;\n    }\n    get headerColumns() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.viewportColumns;\n        }\n        return this.nonLockedColumns;\n    }\n    get headerLeafColumns() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.leafViewportColumns;\n        }\n        return this.nonLockedLeafColumns;\n    }\n    get lockedWidth() {\n        const groupCellsWidth = this.group.length * GROUP_CELL_WIDTH;\n        return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n    get nonLockedWidth() {\n        if ((!this.rtl && this.lockedLeafColumns.length) || this.virtualColumns) {\n            return !this.virtualColumns ? this.columnsContainer.unlockedWidth :\n                this.leafViewportColumns.reduce((acc, column) => acc + (column.width || 0), 0);\n        }\n        return undefined;\n    }\n    get selectableSettings() {\n        if (this.selectionService) {\n            return this.selectionService.options;\n        }\n        return undefined;\n    }\n    get columnMenuTemplate() {\n        const template = this.columnMenuTemplates.first;\n        return template ? template.templateRef : null;\n    }\n    get totalCount() {\n        if (this.isVirtual || !isPresent(this.pageSize)) {\n            return this.view.total;\n        }\n        return this.pageSize;\n    }\n    /**\n     * Expands the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [`kendoGridDetailsExpandBy` directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n    expandRow(index) {\n        this.toggleDetailRowLegacy(index, true);\n    }\n    /**\n     * Collapses the specified master row ([see example]({% slug hierarchy_grid %})).\n     *\n     * This method is provided only for backwards-compatibility with legacy versions.\n     * These versions tracked the expanded state internally using the data row index.\n     *\n     * For new development, use the [`kendoGridDetailsExpandBy` directive]({% slug api_grid_expanddetailsdirective %})\n     * or provide an isDetailExpanded callback. See [Controlling the Expanded State]({% slug master_detail_expanded_state_grid %})\n     * for examples on how to control the expanded state.\n     *\n     * @param index - The data row index of the master row.\n     */\n    collapseRow(index) {\n        this.toggleDetailRowLegacy(index, false);\n    }\n    /**\n     * Expands a group header item for the given index. For example,\n     * `0_1` expands the second inner group of the first master group.\n     *\n     * > * When you use the [`kendoGridGroupBinding`]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `expandGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [`skip`]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n    expandGroup(index) {\n        if (!this.groupsService.isExpanded(index)) {\n            this.groupsService.toggleRow(index, null);\n        }\n    }\n    /**\n     * Collapses a group header item for the given index. For example,\n     * `0_1` collapses the second inner group of the first master group.\n     *\n     * > * When you use the [`kendoGridGroupBinding`]({% slug api_grid_groupbindingdirective %}) directive,\n     * > the `collapseGroup` method is not supported.\n     * > * When a Grid is pageable, the indexes of the groups are offset by the current Grid [`skip`]({% slug api_grid_gridcomponent %}#toc-skip).\n     *\n     * @param {string} index - The underscore separated hierarchical index of the group.\n     */\n    collapseGroup(index) {\n        if (this.groupsService.isExpanded(index)) {\n            this.groupsService.toggleRow(index, null);\n        }\n    }\n    /**\n     * @hidden\n     */\n    resetGroupsState() {\n        this.groupsService.reset();\n    }\n    /**\n     * @hidden\n     */\n    expandGroupChildren(groupIndex) {\n        this.groupsService.expandChildren(groupIndex);\n    }\n    /**\n     * @hidden\n     */\n    onDataChange() {\n        this.autoGenerateColumns();\n        this.changeNotification.notify();\n        this.pdfService.dataChanged.emit();\n        if (isPresent(this.defaultSelection)) {\n            this.defaultSelection.reset();\n        }\n        this.initSelectionService();\n        this.updateNavigationMetadata();\n    }\n    ngOnChanges(changes) {\n        if (isChanged(\"data\", changes)) {\n            this.onDataChange();\n        }\n        if (this.lockedLeafColumns.length && anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\"], changes)) {\n            this.changeNotification.notify();\n        }\n        if (anyChanged([\"pageSize\", \"scrollable\", 'virtualColumns'], changes)) {\n            this.updateNavigationMetadata();\n        }\n        if (isChanged(\"virtualColumns\", changes)) {\n            this.viewportColumns = this.leafViewportColumns = null;\n        }\n        if (isChanged(\"height\", changes, false)) {\n            this.renderer.setStyle(this.wrapper.nativeElement, 'height', `${this.height}px`);\n        }\n        if (isChanged(\"filterable\", changes) && this.lockedColumns.length) {\n            this.syncHeaderHeight(this.ngZone.onStable.asObservable().pipe(take(1)));\n        }\n        if (anyChanged([\"columnMenu\", \"sortable\", \"filterable\"], changes, false)) {\n            this.columnMenuOptions = this.columnMenu && Object.assign({\n                filter: Boolean(this.filterable),\n                sort: Boolean(this.sortable)\n            }, this.columnMenu); // tslint:disable-line:align\n        }\n        if (isChanged(\"scrollable\", changes) && this.isScrollable) {\n            this.ngZone.onStable.pipe(take(1)).subscribe(() => this.attachScrollSync());\n        }\n        if (isChanged(\"selectable\", changes)) {\n            if (this.defaultSelection) {\n                this.defaultSelection.reset();\n            }\n            else if (this.selectionDirective) {\n                this.selectionDirective.reset();\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this.attachScrollSync();\n        this.attachElementEventHandlers();\n        this.updateNavigationMetadata();\n        this.applyAutoSize();\n    }\n    ngAfterContentChecked() {\n        this.columnsContainer.refresh();\n        this.verifySettings();\n        this.initSelectionService();\n    }\n    ngAfterContentInit() {\n        this.shouldGenerateColumns = !this.columns.length;\n        this.autoGenerateColumns();\n        this.columnList = new ColumnList(this.columns);\n        this.columnsChangeSubscription = this.columns.changes.subscribe(() => this.verifySettings());\n    }\n    ngOnInit() {\n        if (this.navigable) {\n            this.navigationService.init(this.navigationMetadata());\n        }\n    }\n    ngOnDestroy() {\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (this.stateChangeSubscription) {\n            this.stateChangeSubscription.unsubscribe();\n        }\n        if (this.groupExpandCollapseSubscription) {\n            this.groupExpandCollapseSubscription.unsubscribe();\n        }\n        if (this.detailsServiceSubscription) {\n            this.detailsServiceSubscription.unsubscribe();\n        }\n        if (this.editServiceSubscription) {\n            this.editServiceSubscription.unsubscribe();\n        }\n        if (this.pdfSubscription) {\n            this.pdfSubscription.unsubscribe();\n        }\n        if (this.filterSubscription) {\n            this.filterSubscription.unsubscribe();\n        }\n        if (this.sortSubscription) {\n            this.sortSubscription.unsubscribe();\n        }\n        if (this.columnsChangeSubscription) {\n            this.columnsChangeSubscription.unsubscribe();\n        }\n        if (this.excelSubscription) {\n            this.excelSubscription.unsubscribe();\n        }\n        if (this.columnsContainerChangeSubscription) {\n            this.columnsContainerChangeSubscription.unsubscribe();\n        }\n        if (this.scrollSyncService) {\n            this.scrollSyncService.destroy();\n        }\n        if (this.detachElementEventHandlers) {\n            this.detachElementEventHandlers();\n        }\n        if (this.defaultSelection) {\n            this.defaultSelection.destroy();\n        }\n        if (this.cellClickSubscription) {\n            this.cellClickSubscription.unsubscribe();\n        }\n        if (this.footerChangeSubscription) {\n            this.footerChangeSubscription.unsubscribe();\n        }\n        this.ngZone = null;\n        if (this.columnResizingSubscription) {\n            this.columnResizingSubscription.unsubscribe();\n        }\n        if (this.columnReorderSubscription) {\n            this.columnReorderSubscription.unsubscribe();\n        }\n        if (this.localizationSubscription) {\n            this.localizationSubscription.unsubscribe();\n        }\n        if (this.columnVisibilityChangeSubscription) {\n            this.columnVisibilityChangeSubscription.unsubscribe();\n        }\n        if (this.columnLockedChangeSubscription) {\n            this.columnLockedChangeSubscription.unsubscribe();\n        }\n        if (this.focusElementSubscription) {\n            this.focusElementSubscription.unsubscribe();\n        }\n        this.columnRangeChangeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    attachScrollSync() {\n        if (isUniversal()) {\n            return;\n        }\n        if (this.header) {\n            this.scrollSyncService.registerEmitter(this.header.nativeElement, \"header\");\n        }\n        if (this.footer) {\n            this.footerChangeSubscription = observe(this.footer)\n                .subscribe(footers => footers\n                .map(footer => footer.nativeElement)\n                .filter(isPresent)\n                .forEach(element => this.scrollSyncService.registerEmitter(element, \"footer\")));\n        }\n    }\n    /**\n     * Switches the specified table row in the edit mode ([see example]({% slug editing_template_forms_grid %}#toc-editing-records)).\n     *\n     * @param rowIndex - The data row index that will be switched in the edit mode.\n     * @param group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     * @param options - Additional options configuring the focus target once the editor opens.\n     */\n    editRow(rowIndex, group, options) {\n        this.editService.editRow(rowIndex, group);\n        if (isPresent(options) && options.skipFocus) {\n            return;\n        }\n        const row = `tr[data-kendo-grid-item-index=\"${rowIndex}\"]`;\n        const columnIndex = options && options.columnIndex;\n        const target = isNaN(columnIndex) ? row : `${row} td[data-kendo-grid-column-index=\"${columnIndex}\"]`;\n        this.focusEditElement(target);\n    }\n    /**\n     * Closes the editor for a given row ([see example]({% slug editing_template_forms_grid %}#toc-cancelling-editing)).\n     *\n     * @param {number} index - The row index that will be switched out of the edit mode. If no index is provided, it is assumed\n     * that the new item editor will be closed.\n     */\n    closeRow(index) {\n        this.editService.close(index);\n    }\n    /**\n     * Creates a new row editor ([see example]({% slug editing_template_forms_grid %}#toc-adding-records)).\n     *\n     * @param {FormGroup} group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }}) that describes\n     * the edit form. If called with a data item, it will build the `FormGroup` from the data item fields.\n     */\n    addRow(group) {\n        const isFormGroup = group instanceof FormGroup;\n        if (!isFormGroup) {\n            const fields = Object.keys(group).reduce(createControl(group), {}); // FormBuilder?\n            group = new FormGroup(fields);\n        }\n        this.editService.addRow(group);\n        this.focusEditElement('.k-grid-add-row');\n    }\n    /**\n     * Puts the cell that is specified by the table row and column in edit mode.\n     *\n     * @param {number} rowIndex - The data row index that will be switched in the edit mode.\n     * @param {number|string|any} column - The leaf column index, or the field name or the column instance that should be edited.\n     * @param {FormGroup} group - The [`FormGroup`]({{ site.data.urls.angular['formgroupapi'] }})\n     * that describes the edit form.\n     */\n    editCell(rowIndex, column, group) {\n        const instance = this.columnInstance(column);\n        this.editService.editCell(rowIndex, instance, group);\n        this.focusEditElement('.k-grid-edit-cell');\n    }\n    /**\n     * Closes the current cell in edit mode and fires\n     * the [`cellClose`]({% slug api_grid_gridcomponent %}#toc-cellclose) event.\n     *\n     * @return {boolean} Indicates whether the edited cell was closed.\n     * A `false` value indicates that the\n     * [`cellClose`]({% slug api_grid_gridcomponent %}#toc-cellclose) event was prevented.\n     */\n    closeCell() {\n        return !this.editService.closeCell();\n    }\n    /**\n     * Closes the current cell in edit mode.\n     */\n    cancelCell() {\n        this.editService.cancelCell();\n    }\n    /**\n     * Returns a flag which indicates if a row or a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a row or a cell is currently edited.\n     */\n    isEditing() {\n        return this.editService.isEditing();\n    }\n    /**\n     * Returns a flag which indicates if a cell is currently edited.\n     *\n     * @return {boolean} A flag which indicates if a cell is currently being edited.\n     */\n    isEditingCell() {\n        return this.editService.isEditingCell();\n    }\n    /**\n     * Initiates the PDF export ([see example]({% slug pdfexport_grid %})).\n     */\n    saveAsPDF() {\n        this.pdfService.save(this);\n    }\n    /**\n     * Exports the Grid element to a Drawing [`Group`]({% slug api_kendo-drawing_group %}) by using the `kendo-grid-pdf` component options.\n     * ([see example]({% slug pdfexport_grid %}#toc-exporting-multiple-grids-to-the-same-pdf)).\n     *\n     * @return {Promise} - A promise that will be resolved with the Drawing `Group`.\n     */\n    drawPDF() {\n        const promise = createPromise();\n        this.pdfService.draw(this, promise);\n        return promise;\n    }\n    /**\n     * Initiates the Excel export ([see example]({% slug excelexport_grid %})).\n     */\n    saveAsExcel() {\n        this.excelService.save(this);\n    }\n    /**\n     * Applies the minimum possible width for the specified column,\n     * so that the whole text fits without wrapping. This method expects the Grid\n     * to be resizable (set `resizable` to `true`).\n     * Makes sense to execute this method only\n     * after the Grid is already populated with data.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [resizable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\" (click)=\"grid.autoFitColumn(groupColumn)\">\n     *                     Auto-fit the group column\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    [minResizableWidth]=\"30\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                filter=\"numeric\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    autoFitColumn(column) {\n        this.columnResizingService.autoFit(column);\n    }\n    /**\n     * Adjusts the width of the specified columns to fit the entire content, including headers, without wrapping.\n     * If no columns are specified, `autoFitColumns` is applied to all columns.\n     *\n     * This method requires the Grid to be resizable (set `resizable` to `true`).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *      <kendo-grid\n     *          #grid\n     *          [data]=\"gridData\"\n     *          [resizable]=\"true\"\n     *          style=\"height: 300px\">\n     *          <ng-template kendoGridToolbarTemplate>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns([firstColumn, lastColumn])\">\n     *                  Auto-fit the first and last column\n     *              </button>\n     *              <button class=\"k-button\" (click)=\"grid.autoFitColumns()\">\n     *                  Auto-fit all columns\n     *              </button>\n     *          </ng-template>\n     *          <kendo-grid-column-group title=\"Product Info\">\n     *              <kendo-grid-column\n     *                  #firstColumn\n     *                  field=\"ProductID\"\n     *                  [width]=\"50\"\n     *                  [minResizableWidth]=\"30\"\n     *                  title=\"ID\">\n     *              </kendo-grid-column>\n     *\n     *              <kendo-grid-column\n     *                  field=\"ProductName\"\n     *                  title=\"Product Name\"\n     *                  >\n     *              </kendo-grid-column>\n     *          </kendo-grid-column-group>\n     *\n     *          <kendo-grid-column\n     *              #lastColumn\n     *              field=\"UnitPrice\"\n     *              title=\"Unit Price\"\n     *              [width]=\"180\"\n     *              filter=\"numeric\"\n     *              format=\"{0:c}\">\n     *          </kendo-grid-column>\n     *      </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    autoFitColumns(columns = this.columns) {\n        let cols;\n        if (columns instanceof QueryList) {\n            cols = columns.toArray();\n        }\n        else {\n            cols = columns;\n        }\n        this.columnResizingService.autoFit(...cols);\n    }\n    /**\n     * @hidden\n     */\n    notifyPageChange(source, event) {\n        if (source === \"list\" && !this.isVirtual) {\n            return;\n        }\n        this.pageChange.emit(event);\n    }\n    /**\n     * @hidden\n     */\n    notifyScrollBottom() {\n        if (this.scrollable === 'none') {\n            return;\n        }\n        if (hasObservers(this.scrollBottom)) {\n            this.ngZone.run(() => this.scrollBottom.emit({ sender: this }));\n        }\n    }\n    /**\n     * @hidden\n     */\n    focusEditElement(containerSelector) {\n        if (this.focusElementSubscription) {\n            this.focusElementSubscription.unsubscribe();\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.focusElementSubscription = this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const wrapper = this.wrapper.nativeElement;\n                if (!this.setEditFocus(wrapper.querySelector(containerSelector)) && this.isLocked) {\n                    this.setEditFocus(wrapper.querySelector(`.k-grid-content ${containerSelector}`));\n                }\n                this.focusElementSubscription = null;\n            });\n        });\n    }\n    /**\n     * Focuses the last active or the first cell of the Grid.\n     *\n     * @returns {NavigationCell} The focused cell.\n     */\n    focus() {\n        this.assertNavigable();\n        return this.navigationService.focusCell();\n    }\n    /**\n     * Focuses the cell with the specified row and column index.\n     *\n     * The row index is based on the logical structure of the Grid and does not correspond to the data item index:\n     * * Header rows are included, starting at index 0.\n     * * Group headers and footers are included.\n     * * The row indexing is absolute and does not change with paging.\n     *\n     * If the Grid is configured for scrolling, including virtual scrolling, the scroll position will be updated.\n     * If the row is not present on the current page, the method will have no effect.\n     *\n     * @param rowIndex - The logical row index to focus. The top header row has an index 0.\n     * @param colIndex - The column index to focus.\n     * @returns {NavigationCell} The focused cell.\n     *\n     */\n    focusCell(rowIndex, colIndex) {\n        this.assertNavigable();\n        return this.navigationService.focusCell(rowIndex, colIndex);\n    }\n    /**\n     * Focuses the next cell, optionally wrapping to the next row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the last cell, returns `null`.\n     */\n    focusNextCell(wrap = true) {\n        this.assertNavigable();\n        return this.navigationService.focusNextCell(wrap);\n    }\n    /**\n     * Focuses the previous cell. Optionally wraps to the previous row.\n     *\n     * @param wrap - A Boolean value which indicates if the focus will move to the next row. Defaults to `true`.\n     * @returns {NavigationCell} The focused cell. If the focus is already on the first cell, returns `null`.\n     */\n    focusPrevCell(wrap = true) {\n        this.assertNavigable();\n        return this.navigationService.focusPrevCell(wrap);\n    }\n    /**\n     * Scrolls to the specified row and column\n     */\n    scrollTo(request) {\n        this.scrollRequestService.scrollTo(request);\n    }\n    /**\n     * Changes the position of the specified column.\n     * The reordering of columns operates only on the level\n     * which is inferred by the source column.\n     * For the `reorderColumn` method to work properly,\n     * the `source` column has to be visible.\n     *\n     * @param {ColumnBase} source - The column whose position will be changed.\n     * @param {number} destIndex - The new position of the column.\n     * @param {ColumnReorderConfig} options - Additional options.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid\n     *            #grid\n     *            [data]=\"gridData\"\n     *            [reorderable]=\"true\"\n     *            style=\"height: 300px\">\n     *            <ng-template kendoGridToolbarTemplate>\n     *                 <button class=\"k-button\"\n     *                     (click)=\"grid.reorderColumn(groupColumn, 2, { before: true })\">\n     *                     Move the group column before the last one.\n     *                 </button>\n     *            </ng-template>\n     *            <kendo-grid-column-group #groupColumn title=\"Product Info\">\n     *                <kendo-grid-column\n     *                    field=\"ProductID\"\n     *                    [width]=\"50\"\n     *                    title=\"ID\">\n     *                </kendo-grid-column>\n     *\n     *                <kendo-grid-column\n     *                    field=\"ProductName\"\n     *                    title=\"Product Name\">\n     *                </kendo-grid-column>\n     *            </kendo-grid-column-group>\n     *\n     *            <kendo-grid-column\n     *                field=\"UnitPrice\"\n     *                title=\"Unit Price\"\n     *                [width]=\"180\"\n     *                format=\"{0:c}\">\n     *            </kendo-grid-column>\n     *\n     *            <kendo-grid-column\n     *                field=\"Discontinued\"\n     *                title=\"Discontinued\"\n     *                [width]=\"100\">\n     *            </kendo-grid-column>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     * }\n     *\n     * const products = [{\n     *    \"ProductID\": 1,\n     *    \"ProductName\": \"Chai\",\n     *    \"UnitPrice\": 18.0000,\n     *    \"Discontinued\": true\n     *  }, {\n     *    \"ProductID\": 2,\n     *    \"ProductName\": \"Chang\",\n     *    \"UnitPrice\": 19.0000,\n     *    \"Discontinued\": false\n     *  }\n     * ];\n     * ```\n     */\n    reorderColumn(source, destIndex, options = { before: false }) {\n        const columnsForLevel = this.columnsForLevel(source.level);\n        let target = columnsForLevel[destIndex];\n        if (!target) {\n            return;\n        }\n        const lastNonLocked = target.isLocked &&\n            !source.isLocked &&\n            this.columnsContainer.nonLockedColumns.length === 1;\n        if (lastNonLocked) {\n            return;\n        }\n        if (isSpanColumnComponent(target) && !options.before) {\n            target = target.childColumns.last;\n        }\n        this.reorder({\n            before: options.before,\n            source: source,\n            target: target\n        });\n    }\n    /**\n     * A function which determines if a specific row is expanded.\n     */\n    set isDetailExpanded(callback) {\n        this.detailsService.userCallback = callback;\n    }\n    get isDetailExpanded() {\n        return this.detailsService.userCallback;\n    }\n    /**\n     * @hidden\n     */\n    reorder({ target, source, before, changeContainer }) {\n        this.ngZone.run(() => {\n            const columnsForLevel = this.columnsForLevel(source.level);\n            let newIndex = columnsForLevel.indexOf(target);\n            if (target.parent && target.parent.isSpanColumn) {\n                newIndex = columnsForLevel.indexOf(target.parent);\n                if (before) {\n                    target = target.parent;\n                }\n            }\n            let oldIndex = columnsForLevel.indexOf(source);\n            if (changeContainer) {\n                if (before && 0 < newIndex && oldIndex < newIndex) { // dropped before the first not locked column\n                    newIndex--;\n                }\n                else if (!before && oldIndex > newIndex) { // dropped after the last locked column\n                    newIndex++;\n                }\n            }\n            const args = new ColumnReorderEvent({\n                column: source,\n                oldIndex: oldIndex,\n                newIndex: newIndex\n            });\n            this.columnReorder.emit(args);\n            if (args.isDefaultPrevented()) {\n                return;\n            }\n            if (changeContainer) {\n                this.columnLockedChange.emit(new ColumnLockedChangeEvent([source]));\n            }\n            this.updateColumnIndices({ source, target, before });\n            if (source.locked !== target.locked) {\n                source.locked = target.locked;\n            }\n            this.columnsContainer.refresh();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n    updateColumnIndices({ source, target, before }) {\n        const expandedColumns = expandColumnsWithSpan(this.columnsForLevel(source.level));\n        const sourceColumnIndex = expandedColumns.indexOf(source);\n        let nextSourceIndex = 0;\n        let nextIndex = 0;\n        let toSkip = 1;\n        // Possible only when called from the API.\n        if (source.isSpanColumn) {\n            toSkip += source.childColumns.length;\n        }\n        let i = 0;\n        while (i < expandedColumns.length) {\n            let column = expandedColumns[i];\n            if (column === target) {\n                nextSourceIndex = before ? nextIndex : nextIndex + 1;\n                nextIndex = before ? nextIndex + toSkip : nextIndex;\n                column.orderIndex = nextIndex;\n                if (nextSourceIndex === nextIndex + 1) {\n                    nextIndex += toSkip;\n                }\n            }\n            else if (column === source) {\n                i += toSkip;\n                continue;\n            }\n            else {\n                column.orderIndex = nextIndex;\n            }\n            nextIndex++;\n            i++;\n        }\n        for (i = sourceColumnIndex; i < sourceColumnIndex + toSkip; i++) {\n            expandedColumns[i].orderIndex = nextSourceIndex++;\n        }\n        this.updateIndicesForLevel(source.level + 1);\n    }\n    updateIndicesForLevel(level) {\n        const colsForParentLevel = this.columnsForLevel(level - 1);\n        const colsForLevel = [];\n        sortColumns(colsForParentLevel).forEach((c) => {\n            if (c.isColumnGroup) {\n                colsForLevel.push(...c.childrenArray.sort((a, b) => a.orderIndex - b.orderIndex));\n            }\n        });\n        expandColumnsWithSpan(colsForLevel).map((c, i) => c.orderIndex = i);\n        if (level < this.columnsContainer.totalLevels) {\n            this.updateIndicesForLevel(level + 1);\n        }\n    }\n    columnsForLevel(level) {\n        return this.columnsContainer\n            .allColumns.filter(column => column.level === level);\n    }\n    initSelectionService() {\n        if (!this.selectable) {\n            this.selectionService.ngOnDestroy();\n            this.cellSelectionService.ngOnDestroy();\n            return;\n        }\n        if (!this.selectionDirective && !isPresent(this.defaultSelection)) {\n            this.defaultSelection = new Selection(this, this.changeDetectorRef);\n        }\n        const cellSelectionMode = this.selectable['cell'];\n        const activeService = cellSelectionMode ? this.cellSelectionService : this.selectionService;\n        const inactiveService = cellSelectionMode ? this.selectionService : this.cellSelectionService;\n        if (inactiveService.active) {\n            inactiveService.ngOnDestroy();\n            activeService.addSubscriptions();\n            inactiveService.active = false;\n        }\n        activeService.active = true;\n        activeService.init({\n            cellSelected: cellSelectionMode ? this.cellSelected : undefined,\n            rowSelected: cellSelectionMode ? undefined : this.rowSelected,\n            selectable: this.selectable,\n            view: this.view,\n            columns: cellSelectionMode ? this.columnList.toArray() : undefined\n        });\n        if (!this.selectionDirective && !this.selectableSettings.enabled) {\n            this.defaultSelection.reset();\n        }\n        if (this.selectionSubscription) {\n            this.selectionSubscription.unsubscribe();\n        }\n        if (cellSelectionMode) {\n            this.selectionSubscription = this.cellSelectionService.changes.subscribe((event) => {\n                this.ngZone.run(() => this.selectionChange.emit(event));\n            });\n        }\n        else {\n            this.selectionSubscription = this.selectionService.changes.subscribe((event) => {\n                this.ngZone.run(() => this.selectionChange.emit(event));\n            });\n        }\n    }\n    setEditFocus(element) {\n        if (element) {\n            return this.navigationService.tryFocus(element);\n        }\n    }\n    columnInstance(column) {\n        let instance;\n        if (typeof column === 'number') {\n            instance = this.columnsContainer.lockedLeafColumns.toArray()\n                .concat(this.columnsContainer.nonLockedLeafColumns.toArray())[column];\n        }\n        else if (typeof column === 'string') {\n            instance = this.columnList.filter((item) => item.field === column)[0];\n        }\n        else {\n            instance = column;\n        }\n        if (!instance && isDevMode()) {\n            throw new Error(`Invalid column ${column}`);\n        }\n        return instance;\n    }\n    verifySettings() {\n        if (isDevMode()) {\n            const locked = this.lockedLeafColumns.length || (this.columnMenu && this.columnMenu.lock);\n            if (locked && this.detailTemplate) {\n                throw new Error('Having both detail template and locked columns is not supported.');\n            }\n            if (this.lockedLeafColumns.length && !this.nonLockedLeafColumns.length) {\n                throw new Error('There should be at least one non-locked column');\n            }\n            if ((locked || this.virtualColumns) && expandColumns(this.columnList.toArray()).filter(column => !column.width && !isColumnGroupComponent(column)).length) {\n                throw new Error((locked ? 'Locked' : 'Virtual') + ' columns feature requires all columns to have set width.');\n            }\n            if (locked && !this.isScrollable) {\n                throw new Error('Locked columns are only supported when scrolling is enabled.');\n            }\n            if (this.columnList.filter(isColumnGroupComponent).filter((x) => !x.hasChildren).length) {\n                throw new Error('ColumnGroupComponent should contain ColumnComponent or CommandColumnComponent.');\n            }\n            if (this.columnList.filter(x => x.locked && x.parent && !x.parent.isLocked).length) {\n                throw new Error('Locked child columns require their parent columns to be locked.');\n            }\n            if ((this.rowHeight || this.detailRowHeight) && !this.isVirtual) {\n                throw new Error('Row height and detail row height settings require virtual scrolling mode to be enabled.');\n            }\n            validateColumnsField(this.columnList);\n        }\n    }\n    autoGenerateColumns() {\n        if (this.shouldGenerateColumns && !this.columns.length && this.view.length) {\n            this.columns.reset(Object.keys(this.view.at(0)).map(field => {\n                let column = new ColumnComponent();\n                column.field = field;\n                return column;\n            }));\n        }\n    }\n    attachStateChangesEmitter() {\n        this.stateChangeSubscription =\n            merge(this.pageChange.pipe(map(x => ({\n                filter: this.filter, group: this.group, skip: x.skip, sort: this.sort, take: x.take\n            }))), this.sortChange.pipe(map(sort => ({ filter: this.filter, group: this.group, skip: this.skip, sort: sort, take: this.pageSize }))), this.groupChange.pipe(map(group => ({\n                filter: this.filter, group: group, skip: this.skip, sort: this.sort, take: this.pageSize\n            }))), this.filterChange.pipe(map(filter$$1 => ({\n                filter: filter$$1, group: this.group, skip: 0, sort: this.sort, take: this.pageSize\n            }))))\n                .subscribe(x => {\n                this.closeCell();\n                this.cancelCell();\n                this.dataStateChange.emit(x);\n            });\n    }\n    attachEditHandlers() {\n        if (!this.editService) {\n            return;\n        }\n        this.editServiceSubscription = this.editService\n            .changes.subscribe(this.emitCRUDEvent.bind(this));\n    }\n    emitCRUDEvent(args) {\n        const { action, rowIndex, formGroup } = args;\n        let dataItem = this.view.at(rowIndex - this.skip);\n        if (action !== 'add' && !dataItem) {\n            dataItem = formGroup.value;\n        }\n        this.closeCell();\n        Object.assign(args, {\n            dataItem: dataItem,\n            sender: this\n        });\n        switch (action) {\n            case 'add':\n                this.add.emit(args);\n                break;\n            case 'cancel':\n                this.cancel.emit(args);\n                break;\n            case 'edit':\n                this.edit.emit(args);\n                break;\n            case 'remove':\n                this.remove.emit(args);\n                break;\n            case 'save':\n                this.save.emit(args);\n                break;\n            case 'cellClose':\n                this.cellClose.emit(args);\n                break;\n            default: break;\n        }\n    }\n    attachDomEventHandlers() {\n        this.cellClickSubscription = this.domEvents.cellClick.subscribe((args) => {\n            this.cellClick.emit(Object.assign({ sender: this }, args));\n        });\n    }\n    attachElementEventHandlers() {\n        if (isUniversal()) {\n            return;\n        }\n        const wrapper = this.wrapper.nativeElement;\n        const ariaRoot = this.ariaRoot.nativeElement;\n        this.ngZone.runOutsideAngular(() => {\n            const resizeCheck = this.resizeCheck.bind(this);\n            const resizeSubscription = this.renderer.listen('window', 'resize', resizeCheck);\n            const orientationSubscription = this.renderer.listen('window', 'orientationchange', resizeCheck);\n            const documentClickSubscription = this.renderer.listen('document', 'click', (args) => {\n                const activeElement = document.activeElement;\n                if (this.editService.shouldCloseCell() &&\n                    !closest(args.target, matchesClasses('k-animation-container k-grid-ignore-click')) &&\n                    !(activeElement &&\n                        (closest(activeElement, matchesClasses('k-animation-container')) ||\n                            isInEditedCell(activeElement, this.wrapper.nativeElement)))) {\n                    this.editService.closeCell(args);\n                }\n            });\n            const windowBlurSubscription = this.renderer.listen('window', 'blur', (args) => {\n                const activeElement = document.activeElement;\n                if (activeElement && !(matchesNodeName('input')(activeElement) && activeElement.type === 'file' &&\n                    isInEditedCell(activeElement, this.wrapper.nativeElement))) {\n                    this.editService.closeCell(args);\n                }\n                this.domEvents.windowBlur.emit(args);\n            });\n            const clickSubscription = this.renderer.listen(wrapper, 'click', (args) => {\n                this.domEvents.click.emit(args);\n            });\n            const keydownSubscription = this.renderer.listen(wrapper, 'keydown', (args) => {\n                this.domEvents.keydown.emit(args);\n            });\n            // focusIn and focusOut are relative to the element with ARIA role \"grid\"\n            let focused = false;\n            const focusInSubscription = this.renderer.listen(ariaRoot, 'focusin', (args) => {\n                this.domEvents.focus.emit(args);\n                if (!focused) {\n                    this.domEvents.focusIn.emit(args);\n                    focused = true;\n                }\n            });\n            const focusOutSubscription = this.renderer.listen(ariaRoot, 'focusout', (args) => {\n                const next = args.relatedTarget || document.activeElement;\n                const outside = !closest(next, (node) => node === ariaRoot);\n                if (outside) {\n                    this.domEvents.focusOut.emit(args);\n                    focused = false;\n                }\n            });\n            this.detachElementEventHandlers = () => {\n                resizeSubscription();\n                orientationSubscription();\n                documentClickSubscription();\n                windowBlurSubscription();\n                clickSubscription();\n                keydownSubscription();\n                focusInSubscription();\n                focusOutSubscription();\n            };\n        });\n    }\n    matchesMedia(c) {\n        return this.responsiveService.matchesMedia(c.media);\n    }\n    resizeCheck() {\n        if (window.innerWidth !== this.cachedWindowWidth) {\n            this.cachedWindowWidth = window.innerWidth;\n            let hasChanges = false;\n            this.columnList.filterHierarchy(column => {\n                const matchesMedia = this.matchesMedia(column);\n                if (column.matchesMedia !== matchesMedia) {\n                    hasChanges = true;\n                    column.matchesMedia = matchesMedia;\n                }\n                return column.isVisible;\n            });\n            if (hasChanges) {\n                this.ngZone.run(() => {\n                    this.changeDetectorRef.markForCheck();\n                });\n            }\n        }\n    }\n    emitPDFExportEvent() {\n        const args = new PDFExportEvent();\n        this.pdfExport.emit(args);\n        if (!args.isDefaultPrevented()) {\n            this.saveAsPDF();\n        }\n    }\n    syncHeaderHeight(observable) {\n        return observable\n            .pipe(filter(() => isPresent(this.lockedHeader)))\n            .subscribe(() => syncRowsHeight(this.lockedHeader.nativeElement.children[0], this.header.nativeElement.children[0]));\n    }\n    columnsContainerChange() {\n        this.columnsContainerChangeSubscription =\n            this.syncHeaderHeight(this.columnsContainer.changes.pipe(filter(() => this.lockedColumns.length > 0), switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1)))));\n    }\n    handleColumnResize() {\n        const resizes = this.columnResizingService.changes;\n        this.columnResizingSubscription = resizes.pipe(tap(e => {\n            if (e.type === 'start') {\n                this.renderer.addClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n            }\n            else if (e.type === 'end') {\n                this.renderer.removeClass(this.wrapper.nativeElement, 'k-grid-column-resizing');\n            }\n        }), filter(e => e.type === 'start'), switchMap(() => resizes.pipe(\n        // tslint:disable-next-line: rxjs-no-unsafe-takeuntil\n        takeUntil(resizes.pipe(filter(e => e.type === 'triggerAutoFit'))), filter(e => e.type === 'end'))))\n            .subscribe(this.notifyResize.bind(this));\n    }\n    notifyResize(e) {\n        const args = e.resizedColumns\n            .filter(item => isTruthy(item.column.resizable) && !item.column.isColumnGroup)\n            .map(item => ({\n            column: item.column,\n            newWidth: item.column.width,\n            oldWidth: item.oldWidth\n        }));\n        this.columnResize.emit(args);\n    }\n    assertNavigable() {\n        if (isDevMode() && !this.navigable) {\n            throw new Error('The Grid should be configured as [navigable]=\"true\" to control focus');\n        }\n    }\n    navigationMetadata() {\n        const isVirtual = this.isVirtual;\n        const pageSize = this.pageSize;\n        const dataRows = isVirtual ? this.view.total : pageSize;\n        const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n        const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n        const headerRows = this.totalColumnLevels + 1 + filterRowOffset + addRowOffset;\n        return new NavigationMetadata(dataRows, headerRows, isVirtual, this.showPager, isPresent(this.detailTemplate), this.wrapper, this.virtualColumns, this.columnsContainer);\n    }\n    updateNavigationMetadata() {\n        this.navigationService.metadata = this.navigationMetadata();\n    }\n    applyAutoSize() {\n        const cols = this.columns.filter((c) => this.autoSize ? c.autoSize !== false : c.autoSize);\n        if (cols.length > 0) {\n            this.ngZone.onStable.pipe(take(1)).subscribe(_ => this.autoFitColumns(cols));\n        }\n    }\n    onColumnRangeChange(range) {\n        const viewportColumns = this.viewportColumns = [];\n        const leafViewportColumns = this.columnsContainer\n            .nonLockedLeafColumns.toArray().slice(range.start, range.end + 1);\n        for (let idx = 0; idx < leafViewportColumns.length; idx++) {\n            let column = leafViewportColumns[idx];\n            while (column.parent) {\n                column = column.parent;\n            }\n            const toAdd = [column];\n            while (toAdd.length) {\n                column = toAdd.shift();\n                viewportColumns.push(column);\n                if (column.isColumnGroup) {\n                    toAdd.unshift.apply(toAdd, column.childrenArray);\n                }\n            }\n            const lastFromGroup = viewportColumns[viewportColumns.length - 1];\n            column = leafViewportColumns[idx];\n            while (column !== lastFromGroup && idx < leafViewportColumns.length) {\n                idx++;\n                column = leafViewportColumns[idx];\n            }\n        }\n        if (range.start > 0) {\n            const first = leafViewportColumns[0];\n            let offset = range.offset;\n            let current = viewportColumns[0];\n            let index = 0;\n            while (current !== first) {\n                offset -= current.isColumnGroup ? 0 : current.width;\n                index++;\n                current = viewportColumns[index];\n            }\n            if (offset > 0) {\n                const totalLevels = this.columnsContainer.totalLevels;\n                let previous;\n                for (let idx = 0; idx <= totalLevels; idx++) {\n                    const offsetColumn = idx < totalLevels ? new ColumnGroupComponent(previous) : new ColumnBase$1(previous);\n                    previous = offsetColumn;\n                    offsetColumn.title = \"\\u00A0\";\n                    offsetColumn.width = offset;\n                    viewportColumns.unshift(offsetColumn);\n                }\n            }\n        }\n        this.leafViewportColumns = viewportColumns.filter(c => !c.isColumnGroup);\n    }\n    toggleDetailRowLegacy(index, expand) {\n        const hasCallback = typeof this.isDetailExpanded === 'function';\n        if (isDevMode() && hasCallback) {\n            throw new Error('The expandRow and collapseRow methods should not be called when using the ' +\n                'kendoGridDetailsExpandBy directive or the isDetailExpanded callback. ' +\n                'These methods are provided only for backwards compatibility with legacy versions.');\n        }\n        if (!isDevMode() && hasCallback) {\n            return;\n        }\n        if (this.detailsService.isExpanded(index, null) !== expand) {\n            this.detailsService.toggleRow(index, null);\n        }\n    }\n}\nGridComponent.decorators = [\n    { type: Component, args: [{\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'kendoGrid',\n                providers: [\n                    BrowserSupportService,\n                    LocalizationService,\n                    ColumnInfoService,\n                    SelectionService,\n                    CellSelectionService,\n                    DetailsService,\n                    GroupsService,\n                    GroupInfoService,\n                    ChangeNotificationService,\n                    EditService,\n                    PDFService,\n                    SuspendService,\n                    {\n                        provide: CELL_CONTEXT,\n                        useValue: ɵ4$2\n                    },\n                    {\n                        provide: L10N_PREFIX,\n                        useValue: 'kendo.grid'\n                    },\n                    FilterService,\n                    ResponsiveService,\n                    PagerContextService,\n                    ExcelService,\n                    ScrollSyncService,\n                    ResizeService,\n                    LocalDataChangesService,\n                    DomEventsService,\n                    ColumnResizingService,\n                    SinglePopupService,\n                    DragAndDropService,\n                    DragHintService,\n                    DropCueService,\n                    ColumnReorderService,\n                    NavigationService,\n                    FocusRoot,\n                    IdService,\n                    ScrollRequestService,\n                    SortService\n                ],\n                selector: 'kendo-grid',\n                styles: [\n                    // Styles for backwards compatibility with kendo-theme-default@v2.46.0 and earlier.\n                    `   .k-grid .k-grid-aria-root {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            overflow: hidden;\n        }\n\n        .k-grid .k-filter-row td {\n            white-space: nowrap;\n        }`\n                ],\n                template: `\n        <ng-container kendoGridLocalizedMessages\n            i18n-groupPanelEmpty=\"kendo.grid.groupPanelEmpty|The label visible in the Grid group panel when it is empty\"\n            groupPanelEmpty=\"Drag a column header and drop it here to group by that column\"\n\n            i18n-noRecords=\"kendo.grid.noRecords|The label visible in the Grid when there are no records\"\n            noRecords=\"No records available.\"\n\n            i18n-pagerFirstPage=\"kendo.grid.pagerFirstPage|The label for the first page button in Grid pager\"\n            pagerFirstPage=\"Go to the first page\"\n\n            i18n-pagerPreviousPage=\"kendo.grid.pagerPreviousPage|The label for the previous page button in Grid pager\"\n            pagerPreviousPage=\"Go to the previous page\"\n\n            i18n-pagerNextPage=\"kendo.grid.pagerNextPage|The label for the next page button in Grid pager\"\n            pagerNextPage=\"Go to the next page\"\n\n            i18n-pagerLastPage=\"kendo.grid.pagerLastPage|The label for the last page button in Grid pager\"\n            pagerLastPage=\"Go to the last page\"\n\n            i18n-pagerPage=\"kendo.grid.pagerPage|The label before the current page number in the Grid pager\"\n            pagerPage=\"Page\"\n\n            i18n-pagerOf=\"kendo.grid.pagerOf|The label before the total pages number in the Grid pager\"\n            pagerOf=\"of\"\n\n            i18n-pagerItems=\"kendo.grid.pagerItems|The label after the total pages number in the Grid pager\"\n            pagerItems=\"items\"\n\n            i18n-pagerPageNumberInputTitle=\"kendo.grid.pagerPageNumberInputTitle|The label for the pager input in the Grid pager\"\n            pagerPageNumberInputTitle=\"Page Number\"\n\n            i18n-pagerItemsPerPage=\"kendo.grid.pagerItemsPerPage|The label for the page size chooser in the Grid pager\"\n            pagerItemsPerPage=\"items per page\"\n\n            i18n-filter=\"kendo.grid.filter|The label of the filter cell or icon\"\n            filter=\"Filter\"\n\n            i18n-filterEqOperator=\"kendo.grid.filterEqOperator|The text of the equal filter operator\"\n            filterEqOperator=\"Is equal to\"\n\n            i18n-filterNotEqOperator=\"kendo.grid.filterNotEqOperator|The text of the not equal filter operator\"\n            filterNotEqOperator=\"Is not equal to\"\n\n            i18n-filterIsNullOperator=\"kendo.grid.filterIsNullOperator|The text of the is null filter operator\"\n            filterIsNullOperator=\"Is null\"\n\n            i18n-filterIsNotNullOperator=\"kendo.grid.filterIsNotNullOperator|The text of the is not null filter operator\"\n            filterIsNotNullOperator=\"Is not null\"\n\n            i18n-filterIsEmptyOperator=\"kendo.grid.filterIsEmptyOperator|The text of the is empty filter operator\"\n            filterIsEmptyOperator=\"Is empty\"\n\n            i18n-filterIsNotEmptyOperator=\"kendo.grid.filterIsNotEmptyOperator|The text of the is not empty filter operator\"\n            filterIsNotEmptyOperator=\"Is not empty\"\n\n            i18n-filterStartsWithOperator=\"kendo.grid.filterStartsWithOperator|The text of the starts with filter operator\"\n            filterStartsWithOperator=\"Starts with\"\n\n            i18n-filterContainsOperator=\"kendo.grid.filterContainsOperator|The text of the contains filter operator\"\n            filterContainsOperator=\"Contains\"\n\n            i18n-filterNotContainsOperator=\"kendo.grid.filterNotContainsOperator|The text of the does not contain filter operator\"\n            filterNotContainsOperator=\"Does not contain\"\n\n            i18n-filterEndsWithOperator=\"kendo.grid.filterEndsWithOperator|The text of the ends with filter operator\"\n            filterEndsWithOperator=\"Ends with\"\n\n            i18n-filterGteOperator=\"kendo.grid.filterGteOperator|The text of the greater than or equal filter operator\"\n            filterGteOperator=\"Is greater than or equal to\"\n\n            i18n-filterGtOperator=\"kendo.grid.filterGtOperator|The text of the greater than filter operator\"\n            filterGtOperator=\"Is greater than\"\n\n            i18n-filterLteOperator=\"kendo.grid.filterLteOperator|The text of the less than or equal filter operator\"\n            filterLteOperator=\"Is less than or equal to\"\n\n            i18n-filterLtOperator=\"kendo.grid.filterLtOperator|The text of the less than filter operator\"\n            filterLtOperator=\"Is less than\"\n\n            i18n-filterIsTrue=\"kendo.grid.filterIsTrue|The text of the IsTrue boolean filter option\"\n            filterIsTrue=\"Is True\"\n\n            i18n-filterIsFalse=\"kendo.grid.filterIsFalse|The text of the IsFalse boolean filter option\"\n            filterIsFalse=\"Is False\"\n\n            i18n-filterBooleanAll=\"kendo.grid.filterBooleanAll|The text of the (All) boolean filter option\"\n            filterBooleanAll=\"(All)\"\n\n            i18n-filterAfterOrEqualOperator=\"kendo.grid.filterAfterOrEqualOperator|The text of the after or equal date filter operator\"\n            filterAfterOrEqualOperator=\"Is after or equal to\"\n\n            i18n-filterAfterOperator=\"kendo.grid.filterAfterOperator|The text of the after date filter operator\"\n            filterAfterOperator=\"Is after\"\n\n            i18n-filterBeforeOperator=\"kendo.grid.filterBeforeOperator|The text of the before date filter operator\"\n            filterBeforeOperator=\"Is before\"\n\n            i18n-filterBeforeOrEqualOperator=\"kendo.grid.filterBeforeOrEqualOperator|The text of the before or equal date filter operator\"\n            filterBeforeOrEqualOperator=\"Is before or equal to\"\n\n            i18n-filterFilterButton=\"kendo.grid.filterFilterButton|The text of the filter button\"\n            filterFilterButton=\"Filter\"\n\n            i18n-filterClearButton=\"kendo.grid.filterClearButton|The text of the clear filter button\"\n            filterClearButton=\"Clear\"\n\n            i18n-filterAndLogic=\"kendo.grid.filterAndLogic|The text of the And filter logic\"\n            filterAndLogic=\"And\"\n\n            i18n-filterOrLogic=\"kendo.grid.filterOrLogic|The text of the Or filter logic\"\n            filterOrLogic=\"Or\"\n\n            i18n-loading=\"kendo.grid.loading|The loading text\"\n            loading=\"Loading\"\n\n            i18n-columnMenu=\"kendo.grid.columnMenu|The title of the column menu icon\"\n            columnMenu=\"Column Menu\"\n\n            i18n-columns=\"kendo.grid.columns|The text shown in the column menu for the columns item\"\n            columns=\"Columns\"\n\n            i18n-lock=\"kendo.grid.lock|The text shown in the column menu for the lock item\"\n            lock=\"Lock\"\n\n            i18n-unlock=\"kendo.grid.unlock|The text shown in the column menu for the unlock item\"\n            unlock=\"Unlock\"\n\n            i18n-sortable=\"kendo.grid.sortable|The label of the sort icon\"\n            sortable=\"Sortable\"\n\n            i18n-sortAscending=\"kendo.grid.sortAscending|The text shown in the column menu for the sort ascending item\"\n            sortAscending=\"Sort Ascending\"\n\n            i18n-sortDescending=\"kendo.grid.sortDescending|The text shown in the column menu for the sort descending item\"\n            sortDescending=\"Sort Descending\"\n\n            i18n-sortedAscending=\"kendo.grid.sortedAscending|The status announcement when a column is sorted ascending\"\n            sortedAscending=\"Sorted Ascending\"\n\n            i18n-sortedDescending=\"kendo.grid.sortedDescending|The status announcement when a column is sorted descending\"\n            sortedDescending=\"Sorted Descending\"\n\n            i18n-sortedDefault=\"kendo.grid.sortedDefault|The status announcement when a column is no longer sorted\"\n            sortedDefault=\"Not Sorted\"\n\n            i18n-columnsApply=\"kendo.grid.columnsApply|The text shown in the column menu or column chooser for the columns apply button\"\n            columnsApply=\"Apply\"\n\n            i18n-columnsReset=\"kendo.grid.columnsReset|The text shown in the column menu or column chooser for the columns reset button\"\n            columnsReset=\"Reset\"\n\n            i18n-detailExpand=\"kendo.grid.detailExpand|The title of the expand icon of detail rows.\"\n            detailExpand=\"Expand Details\"\n\n            i18n-detailCollapse=\"kendo.grid.detailCollapse|The title of the collapse icon of detail rows.\"\n            detailCollapse=\"Collapse Details\"\n\n            i18n-filterDateToday=\"kendo.grid.filterDateToday|The text of the Today button of the Date filter.\"\n            filterDateToday=\"TODAY\"\n\n            i18n-filterDateToggle=\"kendo.grid.filterDateToggle|The title of the Toggle button of the Date filter.\"\n            filterDateToggle=\"Toggle Calendar\"\n\n            i18n-filterNumericDecrement=\"kendo.grid.filterNumericDecrement|The title of the Decrement button of the Numeric filter.\"\n            filterNumericDecrement=\"Decrement\"\n\n            i18n-filterNumericIncrement=\"kendo.grid.filterNumericIncrement|The title of the Increment button of the Numeric filter.\"\n            filterNumericIncrement=\"Increment\"\n        >\n        </ng-container>\n        <kendo-grid-toolbar *ngIf=\"showTopToolbar\" position=\"top\"></kendo-grid-toolbar>\n        <kendo-grid-group-panel\n            *ngIf=\"showGroupPanel\"\n            [text]=\"groupableEmptyText\"\n            [groups]=\"group\"\n            (change)=\"groupChange.emit($event)\">\n        </kendo-grid-group-panel>\n        <div #ariaRoot\n            class=\"k-grid-aria-root\"\n            role=\"grid\"\n            [attr.aria-rowcount]=\"ariaRowCount\"\n            [attr.aria-colcount]=\"ariaColCount\">\n        <ng-template [ngIf]=\"isScrollable\">\n            <div *ngIf=\"!hideHeader\"\n                class=\"k-grid-header\"\n                role=\"presentation\"\n                [style.padding]=\"headerPadding\">\n                <div *ngIf=\"isLocked\"\n                     #lockedHeader\n                     role=\"presentation\"\n                     class=\"k-grid-header-locked\"\n                     [style.width.px]=\"lockedWidth\">\n                    <table [locked]=\"true\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"lockedLeafColumns\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            [scrollable]=\"true\"\n                            [columns]=\"lockedColumns\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [groups]=\"group\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </thead>\n                    </table>\n                </div><div #header class=\"k-grid-header-wrap\" role=\"presentation\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 2\">\n                    <table role=\"presentation\" [style.width.px]=\"nonLockedWidth\" [virtualColumns]=\"virtualColumns\">\n                        <colgroup kendoGridColGroup\n                            role=\"presentation\"\n                            [columns]=\"headerLeafColumns\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <thead kendoGridHeader\n                            [resizable]=\"resizable\"\n                            role=\"presentation\"\n                            [scrollable]=\"true\"\n                            [columns]=\"headerColumns\"\n                            [totalColumnLevels]=\"totalColumnLevels\"\n                            [sort]=\"sort\"\n                            [filter]=\"filter\"\n                            [filterable]=\"filterable\"\n                            [groupable]=\"showGroupPanel\"\n                            [reorderable]=\"reorderable\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [sortable]=\"sortable\"\n                            [columnMenu]=\"columnMenuOptions\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [totalColumnsCount]=\"leafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </thead>\n                    </table>\n                    <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n                        <div [style.width.px]=\"columnsContainer.unlockedWidth\"></div>\n                    </div>\n                </div>\n            </div>\n            <kendo-grid-list\n                [data]=\"view\"\n                [rowHeight]=\"rowHeight\"\n                [detailRowHeight]=\"detailRowHeight\"\n                [total]=\"totalCount\"\n                [take]=\"pageSize\"\n                [groups]=\"group\"\n                [groupable]=\"groupable\"\n                [skip]=\"skip\"\n                [trackBy]=\"trackBy\"\n                [columns]=\"columnsContainer\"\n                [selectable]=\"selectable\"\n                [filterable]=\"filterable\"\n                [detailTemplate]=\"detailTemplate\"\n                [noRecordsTemplate]=\"noRecordsTemplate\"\n                (pageChange)=\"notifyPageChange('list', $event)\"\n                [rowClass]=\"rowClass\"\n                [loading]=\"loading\"\n                [isVirtual]=\"isVirtual\"\n                [virtualColumns]=\"virtualColumns\"\n                (scrollBottom)=\"notifyScrollBottom()\"\n                (contentScroll)=\"contentScroll.emit($event)\"\n                kendoDraggable\n                kendoGridSelectionMarquee\n                [enableDrag]=\"marqueeSelection\"\n                >\n            </kendo-grid-list>\n            <div\n                *ngIf=\"showFooter\"\n                class=\"k-grid-footer\"\n                [style.padding]=\"headerPadding\">\n                <div\n                    *ngIf=\"lockedLeafColumns.length\"\n                    class=\"k-grid-footer-locked\"\n                    [style.width.px]=\"lockedWidth\">\n                    <table [locked]=\"true\" [style.width.px]=\"lockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"lockedLeafColumns\"\n                            [groups]=\"group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [scrollable]=\"true\"\n                            [groups]=\"group\"\n                            [columns]=\"lockedLeafColumns\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </tfoot>\n                    </table>\n                </div><div #footer\n                    class=\"k-grid-footer-wrap\" data-scrollable\n                    [kendoGridResizableContainer]=\"lockedLeafColumns.length\"\n                    [lockedWidth]=\"lockedWidth + scrollbarWidth + 3\">\n                    <table [style.width.px]=\"nonLockedWidth\">\n                        <colgroup kendoGridColGroup\n                            [columns]=\"nonLockedLeafColumns\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </colgroup>\n                        <tfoot kendoGridFooter\n                            [scrollable]=\"true\"\n                            [groups]=\"isLocked ? [] : group\"\n                            [columns]=\"nonLockedLeafColumns\"\n                            [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                            [detailTemplate]=\"detailTemplate\">\n                        </tfoot>\n                    </table>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"!isScrollable\">\n            <table [style.table-layout]=\"resizable ? 'fixed' : null\">\n                <colgroup kendoGridColGroup\n                    [columns]=\"leafColumns\"\n                    [groups]=\"group\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <thead kendoGridHeader\n                    *ngIf=\"!hideHeader\"\n                    [resizable]=\"resizable\"\n                    [scrollable]=\"false\"\n                    [columns]=\"visibleColumns\"\n                    [totalColumnLevels]=\"totalColumnLevels\"\n                    [groups]=\"group\"\n                    [groupable]=\"showGroupPanel\"\n                    [reorderable]=\"reorderable\"\n                    [sort]=\"sort\"\n                    [sortable]=\"sortable\"\n                    [filter]=\"filter\"\n                    [filterable]=\"filterable\"\n                    [columnMenu]=\"columnMenuOptions\"\n                    [columnMenuTemplate]=\"columnMenuTemplate\"\n                    [detailTemplate]=\"detailTemplate\">\n                </thead>\n                <tbody kendoGridTableBody\n                    [groups]=\"group\"\n                    [data]=\"view\"\n                    [skip]=\"skip\"\n                    [columns]=\"leafColumns\"\n                    [selectable]=\"selectable\"\n                    [filterable]=\"filterable\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showGroupFooters\"\n                    [trackBy]=\"trackBy\"\n                    [rowClass]=\"rowClass\"\n                    kendoDraggable\n                    kendoGridSelectionMarquee\n                    [enableDrag]=\"marqueeSelection\">\n                </tbody>\n                <tfoot kendoGridFooter\n                    *ngIf=\"showFooter\"\n                    [scrollable]=\"false\"\n                    [groups]=\"group\"\n                    [columns]=\"leafColumns\"\n                    [detailTemplate]=\"detailTemplate\">\n                </tfoot>\n            </table>\n            <div *ngIf=\"loading\" kendoGridLoading>\n            </div>\n        </ng-template>\n        </div>\n        <kendo-pager\n            *ngIf=\"showPager\"\n            [template]=\"pagerTemplate\"\n            [pageSize]=\"pageSize\"\n            [total]=\"view.total\"\n            [skip]=\"skip\"\n            [options]=\"pageable\"\n            (pageChange)=\"notifyPageChange('pager', $event)\">\n        </kendo-pager>\n        <kendo-grid-toolbar *ngIf=\"showBottomToolbar\" position=\"bottom\"></kendo-grid-toolbar>\n    `\n            },] },\n];\n/** @nocollapse */\nGridComponent.ctorParameters = () => [\n    { type: BrowserSupportService },\n    { type: SelectionService },\n    { type: CellSelectionService },\n    { type: ElementRef },\n    { type: GroupInfoService },\n    { type: GroupsService },\n    { type: ChangeNotificationService },\n    { type: DetailsService },\n    { type: EditService },\n    { type: FilterService },\n    { type: PDFService },\n    { type: ResponsiveService },\n    { type: Renderer2 },\n    { type: ExcelService },\n    { type: NgZone },\n    { type: ScrollSyncService },\n    { type: DomEventsService },\n    { type: ColumnResizingService },\n    { type: ChangeDetectorRef },\n    { type: ColumnReorderService },\n    { type: ColumnInfoService },\n    { type: NavigationService },\n    { type: SortService },\n    { type: ScrollRequestService },\n    { type: LocalizationService }\n];\nGridComponent.propDecorators = {\n    data: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    height: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    detailRowHeight: [{ type: Input }],\n    skip: [{ type: Input }],\n    scrollable: [{ type: Input }],\n    selectable: [{ type: Input }],\n    sort: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    filter: [{ type: Input }],\n    group: [{ type: Input }],\n    virtualColumns: [{ type: Input }],\n    filterable: [{ type: Input }],\n    sortable: [{ type: Input }],\n    pageable: [{ type: Input }],\n    groupable: [{ type: Input }],\n    navigable: [{ type: Input }],\n    navigatable: [{ type: Input }],\n    autoSize: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    rowSelected: [{ type: Input }],\n    cellSelected: [{ type: Input }],\n    resizable: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    loading: [{ type: Input }],\n    columnMenu: [{ type: Input }],\n    hideHeader: [{ type: Input }],\n    filterChange: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    groupChange: [{ type: Output }],\n    sortChange: [{ type: Output }],\n    selectionChange: [{ type: Output }],\n    dataStateChange: [{ type: Output }],\n    groupExpand: [{ type: Output }],\n    groupCollapse: [{ type: Output }],\n    detailExpand: [{ type: Output }],\n    detailCollapse: [{ type: Output }],\n    edit: [{ type: Output }],\n    cancel: [{ type: Output }],\n    save: [{ type: Output }],\n    remove: [{ type: Output }],\n    add: [{ type: Output }],\n    cellClose: [{ type: Output }],\n    cellClick: [{ type: Output }],\n    pdfExport: [{ type: Output }],\n    excelExport: [{ type: Output }],\n    columnResize: [{ type: Output }],\n    columnReorder: [{ type: Output }],\n    columnVisibilityChange: [{ type: Output }],\n    columnLockedChange: [{ type: Output }],\n    scrollBottom: [{ type: Output }],\n    contentScroll: [{ type: Output }],\n    columns: [{ type: ContentChildren, args: [ColumnBase$1,] }],\n    dir: [{ type: HostBinding, args: ['attr.dir',] }],\n    hostClasses: [{ type: HostBinding, args: ['class.k-widget',] }, { type: HostBinding, args: ['class.k-grid',] }],\n    lockedClasses: [{ type: HostBinding, args: ['class.k-grid-lockedcolumns',] }],\n    virtualClasses: [{ type: HostBinding, args: ['class.k-grid-virtual',] }],\n    noScrollbarClass: [{ type: HostBinding, args: ['class.k-grid-no-scrollbar',] }],\n    detailTemplateChildren: [{ type: ContentChildren, args: [DetailTemplateDirective,] }],\n    noRecordsTemplateChildren: [{ type: ContentChildren, args: [NoRecordsTemplateDirective,] }],\n    pagerTemplateChildren: [{ type: ContentChildren, args: [PagerTemplateDirective,] }],\n    toolbarTemplateChildren: [{ type: ContentChildren, args: [ToolbarTemplateDirective,] }],\n    columnMenuTemplates: [{ type: ContentChildren, args: [ColumnMenuTemplateDirective,] }],\n    lockedHeader: [{ type: ViewChild, args: [\"lockedHeader\",] }],\n    header: [{ type: ViewChild, args: [\"header\",] }],\n    footer: [{ type: ViewChildren, args: [\"footer\",] }],\n    ariaRoot: [{ type: ViewChild, args: ['ariaRoot',] }],\n    isDetailExpanded: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nconst update = (arr, idx, value) => ([\n    ...arr.slice(0, idx + 1),\n    ...(arr.slice(idx + 1).map(x => x + value))\n]);\n/**\n * @hidden\n */\nclass RowHeightService {\n    constructor(total = 0, rowHeight, detailRowHeight) {\n        this.total = total;\n        this.rowHeight = rowHeight;\n        this.detailRowHeight = detailRowHeight;\n        this.offsets = [];\n        this.heights = [];\n        let agg = 0;\n        for (let idx = 0; idx < total; idx++) {\n            this.offsets.push(agg);\n            agg += rowHeight;\n            this.heights.push(rowHeight);\n        }\n    }\n    height(rowIndex) {\n        return this.heights[rowIndex];\n    }\n    expandDetail(rowIndex) {\n        if (this.height(rowIndex) === this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight);\n        }\n    }\n    collapseDetail(rowIndex) {\n        if (this.height(rowIndex) > this.rowHeight) {\n            this.updateRowHeight(rowIndex, this.detailRowHeight * -1);\n        }\n    }\n    isExpanded(rowIndex) {\n        return this.height(rowIndex) > this.rowHeight;\n    }\n    index(position) {\n        if (position < 0) {\n            return undefined;\n        }\n        const result = this.offsets.reduce((prev, current, idx) => {\n            if (prev !== undefined) {\n                return prev;\n            }\n            else if (current === position) {\n                return idx;\n            }\n            else if (current > position) {\n                return idx - 1;\n            }\n            return undefined;\n        }, undefined); // tslint:disable-line:align\n        return result === undefined ? this.total - 1 : result;\n    }\n    offset(rowIndex) {\n        return this.offsets[rowIndex];\n    }\n    totalHeight() {\n        return this.heights.reduce((prev, curr) => prev + curr, 0);\n    }\n    updateRowHeight(rowIndex, value) {\n        if (this.total > 0) {\n            this.heights[rowIndex] += value;\n            this.offsets = update(this.offsets, rowIndex, value);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nclass ScrollAction {\n    constructor(offset) {\n        this.offset = offset;\n    }\n}\n/**\n * @hidden\n */\nclass PageAction {\n    constructor(skip, take$$1) {\n        this.skip = skip;\n        this.take = take$$1;\n    }\n}\n/**\n * @hidden\n */\nclass ScrollBottomAction {\n}\nconst SCROLL_BOTTOM_THRESHOLD = 2;\n/**\n * @hidden\n */\nclass ScrollerService {\n    constructor(scrollObservable) {\n        this.scrollObservable = scrollObservable;\n        this.firstLoaded = 0;\n    }\n    create(rowHeightService, skip, take$$1, total) {\n        this.rowHeightService = rowHeightService;\n        this.firstLoaded = skip;\n        this.lastLoaded = skip + take$$1;\n        this.take = take$$1;\n        this.total = total;\n        this.lastScrollTop = 0;\n        const subject = new BehaviorSubject(new ScrollAction(this.rowHeightService.offset(skip)));\n        this.subscription = Observable.create(observer => {\n            this.unsubscribe();\n            this.scrollSubscription = this.scrollObservable.subscribe(x => this.onScroll(x, observer));\n        }).subscribe(x => subject.next(x));\n        return subject;\n    }\n    destroy() {\n        this.unsubscribe();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    onScroll({ scrollTop, offsetHeight, scrollHeight, clientHeight }, observer) {\n        if (this.lastScrollTop === scrollTop) {\n            return;\n        }\n        const up = this.lastScrollTop >= scrollTop;\n        this.lastScrollTop = scrollTop;\n        let firstItemIndex = this.rowHeightService.index(scrollTop);\n        let firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n        const lastItemIndex = this.rowHeightService.index(scrollTop + offsetHeight);\n        if (!up) {\n            if (lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {\n                const overflow = (firstItemIndex + this.take) - this.total;\n                if (overflow > 0) {\n                    firstItemIndex = firstItemIndex - overflow;\n                    firstItemOffset = this.rowHeightService.offset(firstItemIndex);\n                }\n                this.firstLoaded = firstItemIndex;\n                observer.next(new ScrollAction(firstItemOffset));\n                let nextTake = this.firstLoaded + this.take;\n                this.lastLoaded = Math.min(nextTake, this.total);\n                nextTake = nextTake > this.total ? this.total - this.firstLoaded : this.take;\n                observer.next(new PageAction(this.firstLoaded, this.take));\n            }\n            else {\n                const atBottom = scrollHeight - clientHeight - scrollTop < SCROLL_BOTTOM_THRESHOLD;\n                if (atBottom) {\n                    observer.next(new ScrollBottomAction());\n                }\n            }\n        }\n        if (up && firstItemIndex < this.firstLoaded) {\n            const nonVisibleBuffer = Math.floor(this.take * 0.3);\n            this.firstLoaded = Math.max(firstItemIndex - nonVisibleBuffer, 0);\n            observer.next(new ScrollAction(this.rowHeightService.offset(this.firstLoaded)));\n            this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);\n            observer.next(new PageAction(this.firstLoaded, this.take));\n        }\n    }\n    unsubscribe() {\n        if (this.scrollSubscription) {\n            this.scrollSubscription.unsubscribe();\n            this.scrollSubscription = undefined;\n        }\n    }\n}\n\n/**\n * @hidden\n */\nconst NON_DATA_CELL_CLASSES = 'k-hierarchy-cell k-detail-cell k-group-cell';\n/**\n * @hidden\n */\nconst NON_DATA_ROW_CLASSES = 'k-grouping-row k-group-footer k-detail-row k-grid-norecords';\n/**\n * @hidden\n */\nconst IGNORE_TARGET_CLASSSES = 'k-icon';\n/**\n * @hidden\n */\nconst IGNORE_CONTAINER_CLASSES = 'k-widget k-grid-ignore-click';\n\nconst elementAt = (index, elements, elementOffset) => {\n    for (let idx = 0, elementIdx = 0; idx < elements.length; idx++) {\n        const offset = elementOffset(elements[idx]);\n        if (elementIdx <= index && index <= elementIdx + offset - 1) {\n            return elements[idx];\n        }\n        elementIdx += offset;\n    }\n};\nconst rowAt = (index, rows) => elementAt(index, rows, row => row.hasAttribute('data-kendo-grid-item-index') ? 1 : 0);\nconst cellAt = (index, cells) => elementAt(index, cells, cell => !hasClasses(cell, NON_DATA_CELL_CLASSES) ? parseInt(cell.getAttribute('colSpan'), 10) || 1 : 0);\nconst EMPTY_OBJECT = {};\n/**\n * @hidden\n */\nconst SCROLLER_FACTORY_TOKEN = new InjectionToken('grid-scroll-service-factory');\n/**\n * @hidden\n */\nfunction DEFAULT_SCROLLER_FACTORY(observable) {\n    return new ScrollerService(observable);\n}\nconst wheelDeltaY = (e) => {\n    const deltaY = e.wheelDeltaY;\n    if (e.wheelDelta && (deltaY === undefined || deltaY)) {\n        return e.wheelDelta;\n    }\n    else if (e.detail && e.axis === e.VERTICAL_AXIS) {\n        return (-e.detail) * 10;\n    }\n    return 0;\n};\nconst preventLockedScroll = (args, element) => {\n    const delta = wheelDeltaY(args);\n    const scrollTop = element.scrollTop;\n    const allowScroll = (scrollTop === 0 && 0 < delta) || (element.scrollHeight <= element.offsetHeight + scrollTop && delta < 0);\n    if (!allowScroll) {\n        event.preventDefault();\n    }\n};\nconst translateY = (renderer, value) => el => renderer.setStyle(el, \"transform\", `translateY(${value}px)`);\nconst maybeNativeElement = el => el ? el.nativeElement : null;\nconst hasScrollbar = (el, parent) => el.nativeElement.offsetWidth > parent.nativeElement.clientWidth;\nconst setHeight$1 = renderer => ({ el, height }) => renderer.setStyle(el, \"height\", `${height}px`);\nconst bufferSize = 1;\n/**\n * @hidden\n */\nclass ListComponent {\n    constructor(scrollerFactory, detailsService, changeNotification, suspendService, groupsService, ngZone, renderer, scrollSyncService, resizeService, editService, supportService, navigationService, scrollRequestService, localization, columnResizingService, changeDetector, pdfService, columnInfo) {\n        this.changeNotification = changeNotification;\n        this.suspendService = suspendService;\n        this.groupsService = groupsService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.scrollSyncService = scrollSyncService;\n        this.resizeService = resizeService;\n        this.editService = editService;\n        this.supportService = supportService;\n        this.navigationService = navigationService;\n        this.localization = localization;\n        this.columnResizingService = columnResizingService;\n        this.changeDetector = changeDetector;\n        this.pdfService = pdfService;\n        this.columnInfo = columnInfo;\n        this.groups = [];\n        this.skip = 0;\n        this.columns = new ColumnsContainer(() => []);\n        this.selectable = false;\n        this.groupable = false;\n        this.trackBy = defaultTrackBy;\n        this.contentScroll = new EventEmitter();\n        this.pageChange = new EventEmitter();\n        this.scrollBottom = new EventEmitter();\n        this.columnsStartIdx = 0;\n        this.resizeSensors = new QueryList();\n        this.dispatcher = new Subject();\n        this.containerScrollTop = 0;\n        this.scrollLeft = 0;\n        this.rtl = false;\n        this.scroller = scrollerFactory(this.dispatcher);\n        this.subscriptions =\n            detailsService.changes.subscribe(x => this.detailExpand(x)).add(scrollRequestService.requests.subscribe(x => this.scrollTo(x)));\n    }\n    get hostClass() {\n        return true;\n    }\n    get hostRole() {\n        return 'presentation';\n    }\n    get showFooter() {\n        return this.groupable && this.groupable.showFooter;\n    }\n    get totalWidth() {\n        if (this.virtualColumns && this.columns.unlockedWidth) {\n            return this.columns.unlockedWidth;\n        }\n    }\n    get lockedLeafColumns() {\n        return this.columns.lockedLeafColumns;\n    }\n    get nonLockedLeafColumns() {\n        return this.columns.nonLockedLeafColumns;\n    }\n    get nonLockedColumnsToRender() {\n        if (this.virtualColumns && !this.pdfService.exporting) {\n            return this.viewportColumns;\n        }\n        return this.nonLockedLeafColumns;\n    }\n    get leafColumns() {\n        return this.columns.leafColumnsToRender;\n    }\n    get lockedWidth() {\n        const groupCellsWidth = this.groups.length * GROUP_CELL_WIDTH;\n        return expandColumns(this.lockedLeafColumns.toArray()).reduce((prev, curr) => prev + (curr.width || 0), groupCellsWidth);\n    }\n    get nonLockedWidth() {\n        if ((!this.rtl && this.lockedLeafColumns.length) || this.virtualColumns) {\n            return sumColumnWidths(expandColumns(this.nonLockedColumnsToRender.toArray()));\n        }\n        return undefined;\n    }\n    get isLocked() {\n        return this.lockedLeafColumns.length > 0;\n    }\n    ngOnInit() {\n        this.init();\n        this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowSync.bind(this)));\n        this.subscriptions.add(this.ngZone.runOutsideAngular(this.handleRowNavigationLocked.bind(this)));\n        this.subscriptions.add(merge(this.columns.changes, this.resizeService.changes).subscribe(() => {\n            if (this.virtualColumns) {\n                this.ngZone.run(() => {\n                    this.updateViewportColumns();\n                    this.changeDetector.markForCheck();\n                });\n            }\n        }));\n        this.subscriptions.add(this.localization.changes.subscribe(({ rtl }) => this.rtl = rtl));\n    }\n    ngOnChanges(changes) {\n        const hasInitialSkip = changes.skip && changes.skip.firstChange && changes.skip.currentValue > 0;\n        if (hasInitialSkip) {\n            this.handleInitialScrollToSkip();\n        }\n        if (isChanged(\"skip\", changes) && !this.rebind) {\n            this.skipScroll = true;\n            this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n        }\n        if (anyChanged([\"total\", \"take\"], changes)) {\n            this.init();\n        }\n        this.rebind = false;\n    }\n    ngDoCheck() {\n        if (this.virtualColumns && (!this.viewportColumns || this.viewportWidthChange())) {\n            this.updateViewportColumns();\n        }\n    }\n    ngAfterViewInit() {\n        if (this.skip && this.isVirtual) {\n            this.container.nativeElement.scrollTop = this.rowHeightService.offset(this.skip);\n        }\n        this.resetNavigationViewport();\n        this.attachContainerScroll();\n        this.initResizeService();\n    }\n    ngAfterViewChecked() {\n        const isLocked = this.isLocked;\n        if (isLocked && !this.hasLockedContainer) {\n            this.syncRowsHeight();\n        }\n        this.hasLockedContainer = isLocked;\n    }\n    syncRowsHeight() {\n        if (this.lockedContainer) {\n            syncRowsHeight(this.lockedTable.nativeElement, this.table.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n        if (this.resizeService) {\n            this.resizeService.destroy();\n        }\n        this.cleanupScroller();\n    }\n    init() {\n        if (this.suspendService.scroll) {\n            return;\n        }\n        this.rowHeightService = new RowHeightService(this.total, this.rowHeight, this.detailRowHeight);\n        this.totalHeight = this.rowHeightService.totalHeight();\n        if (!isUniversal()) {\n            this.ngZone.runOutsideAngular(this.createScroller.bind(this));\n        }\n    }\n    lockedScroll() {\n        if (!this.suspendService.scroll) {\n            const lockedScrollTop = this.lockedContainer.nativeElement.scrollTop;\n            if (lockedScrollTop !== this.containerScrollTop) {\n                this.container.nativeElement.scrollTop = this.containerScrollTop = lockedScrollTop;\n            }\n        }\n    }\n    lockedMousewheel(args) {\n        if (!args.ctrlKey) {\n            preventLockedScroll(args, this.container.nativeElement);\n            const scrollDelta = wheelDeltaY(args);\n            this.container.nativeElement.scrollTop -= scrollDelta;\n        }\n    }\n    lockedKeydown(args) {\n        if (args.keyCode === Keys.PageDown || args.keyCode === Keys.PageUp) {\n            const dir = args.keyCode === Keys.PageDown ? 1 : -1;\n            const element = this.container.nativeElement;\n            element.scrollTop += element.offsetHeight * dir * 0.8;\n            args.preventDefault();\n        }\n    }\n    detailExpand({ index, expand }) {\n        if (expand) {\n            this.rowHeightService.expandDetail(index);\n        }\n        else {\n            this.rowHeightService.collapseDetail(index);\n        }\n        this.totalHeight = this.rowHeightService.totalHeight();\n        this.resetNavigationViewport();\n    }\n    attachContainerScroll() {\n        if (isUniversal()) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.subscriptions.add(fromEvent(this.container.nativeElement, 'scroll').pipe(map((event) => event.target), filter(() => !this.suspendService.scroll), tap((target) => {\n                this.onContainerScroll(target);\n                this.resetNavigationViewport();\n                if (this.virtualColumns) {\n                    this.handleColumnScroll();\n                }\n                const rowViewport = this.navigationService.viewport || EMPTY_OBJECT;\n                const columnViewport = this.navigationService.columnViewport || EMPTY_OBJECT;\n                this.contentScroll.emit({\n                    scrollLeft: target.scrollLeft,\n                    scrollTop: target.scrollTop,\n                    startRow: rowViewport.firstItemIndex,\n                    endRow: rowViewport.lastItemIndex,\n                    startColumn: columnViewport.firstItemIndex,\n                    endColumn: columnViewport.lastItemIndex\n                });\n            })).subscribe(this.dispatcher));\n        });\n        this.scrollSyncService.registerEmitter(this.container.nativeElement, \"body\");\n    }\n    createScroller() {\n        this.cleanupScroller();\n        const observable = this.scroller\n            .create(this.rowHeightService, this.skip, this.take, this.total);\n        this.skipScroll = false;\n        this.scrollerSubscription = observable.pipe(filter((x) => x instanceof PageAction), filter(() => {\n            const temp = this.skipScroll;\n            this.skipScroll = false;\n            return !temp;\n        }), tap(() => this.rebind = true))\n            .subscribe((x) => this.ngZone.run(() => this.pageChange.emit(x)));\n        this.scrollerSubscription.add(observable.pipe(filter((x) => x instanceof ScrollAction))\n            .subscribe(this.scroll.bind(this)));\n        this.scrollerSubscription.add(observable.pipe(filter((x) => x instanceof ScrollBottomAction))\n            .subscribe(() => this.scrollBottom.emit()));\n    }\n    scroll({ offset = 0 }) {\n        if (this.isVirtual) {\n            [\n                maybeNativeElement(this.table),\n                maybeNativeElement(this.lockedTable)\n            ].filter(isPresent).forEach(translateY(this.renderer, offset));\n        }\n        this.resetNavigationViewport();\n    }\n    onContainerScroll({ scrollTop }) {\n        this.containerScrollTop = scrollTop;\n        if (this.lockedContainer) {\n            this.lockedContainer.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    handleInitialScrollToSkip() {\n        const shouldScroll = () => this.isVirtual && this.skip > 0 && this.total > 0;\n        const sub = this.changeNotification.changes\n            .pipe(filter(shouldScroll))\n            .subscribe(_ => {\n            this.scrollTo({ row: this.skip });\n            sub.unsubscribe();\n        });\n    }\n    handleRowSync() {\n        const isLocked = () => isPresent(this.lockedContainer);\n        const onStable = () => this.ngZone.onStable.asObservable().pipe(take(1));\n        return merge(this.changeNotification.changes, this.groupsService.changes\n            .pipe(filter(isLocked), switchMapTo(onStable())), this.editService.changed, this.resizeService.changes, this.columnResizingService.changes\n            .pipe(filter(change => change.type === 'end')), this.supportService.changes)\n            .pipe(tap(() => this.resetNavigationViewport()), filter(isLocked))\n            .subscribe(() => {\n            const scrollTop = this.container.nativeElement.scrollTop;\n            const scrollLeft = this.container.nativeElement.scrollLeft;\n            this.syncRowsHeight();\n            this.syncContainerHeight();\n            this.lockedContainer.nativeElement.scrollTop = this.container.nativeElement.scrollTop = scrollTop;\n            // fixes scroll left position in IE when editing\n            this.container.nativeElement.scrollLeft = scrollLeft;\n            this.resizeSensors.forEach(sensor => sensor.acceptSize());\n        });\n    }\n    handleRowNavigationLocked() {\n        return this.navigationService.changes.pipe(filter(() => isPresent(this.lockedContainer)), delay(10)).subscribe((args) => {\n            if (this.lockedLeafColumns.length <= args.prevColIndex && args.colIndex < this.lockedLeafColumns.length) {\n                const cell = this.navigationService.activeCell;\n                if (cell && cell.colIndex + cell.colSpan < args.prevColIndex) {\n                    this.container.nativeElement.scrollLeft = 0;\n                }\n            }\n        });\n    }\n    scrollToVirtualRow(itemIndex) {\n        if (isPresent(this.detailTemplate)) {\n            itemIndex = Math.floor(itemIndex / 2);\n        }\n        const offset = this.rowHeightService.offset(itemIndex);\n        this.container.nativeElement.scrollTop = offset;\n        this.resetNavigationViewport();\n    }\n    scrollTo({ row, column }) {\n        if (isNumber(row)) {\n            if (this.isVirtual) {\n                this.scrollToVirtualRow(row);\n            }\n            else {\n                const element = rowAt(row, this.table.nativeElement.rows);\n                if (element) {\n                    this.container.nativeElement.scrollTop = element.offsetTop;\n                }\n            }\n        }\n        if (isNumber(column)) {\n            column -= this.lockedLeafColumns.length;\n            if (this.virtualColumns) {\n                const columns = this.columns.leafColumnsToRender;\n                let offset = 0;\n                for (let idx = 0; idx < column; idx++) {\n                    offset += columns[idx].width || 0;\n                }\n                const startOffset = this.lockedLeafColumns.length ? 0 : this.groups.length * GROUP_CELL_WIDTH + (this.detailTemplate && column > 0 ? GROUP_CELL_WIDTH : 0);\n                this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(offset + startOffset);\n            }\n            else if (column === 0 && this.detailTemplate) {\n                this.container.nativeElement.scrollLeft = this.normalizeScrollLeft(0);\n            }\n            else {\n                const firstRow = rowAt(0, this.table.nativeElement.rows);\n                if (firstRow) {\n                    const element = cellAt(column, firstRow.cells);\n                    if (element) {\n                        this.container.nativeElement.scrollLeft = this.elementScrollLeft(element);\n                    }\n                }\n            }\n        }\n    }\n    resetNavigationViewport() {\n        if (!this.container || !this.navigationService.enabled ||\n            !this.navigationService.needsViewport() || this.data.length === 0) {\n            return;\n        }\n        const { scrollTop, offsetHeight } = this.container.nativeElement;\n        const scrollBottom = scrollTop + offsetHeight;\n        const firstItemIndex = this.rowHeightService.index(scrollTop);\n        let lastItemIndex = this.rowHeightService.index(scrollBottom);\n        const lastItemOffset = this.rowHeightService.offset(lastItemIndex);\n        const lastItemOverflows = lastItemOffset + this.rowHeight > scrollBottom;\n        if (lastItemIndex > 0 && lastItemOverflows) {\n            lastItemIndex--;\n        }\n        let viewportStart = firstItemIndex;\n        let viewportEnd = lastItemIndex;\n        if (isPresent(this.detailTemplate)) {\n            viewportStart *= 2;\n            viewportEnd *= 2;\n            const firstItemHeight = this.rowHeightService.offset(firstItemIndex);\n            if (firstItemHeight + this.rowHeight < scrollTop) {\n                viewportStart++;\n            }\n            const lastItemHeight = this.rowHeightService.height(lastItemIndex);\n            const lastItemExpanded = this.rowHeightService.isExpanded(lastItemIndex);\n            const lastItemDetailOverflows = lastItemOffset + lastItemHeight > scrollBottom;\n            if (lastItemExpanded && !lastItemDetailOverflows) {\n                viewportEnd++;\n            }\n        }\n        this.navigationService.setViewport(viewportStart, viewportEnd);\n    }\n    cleanupScroller() {\n        if (this.scrollerSubscription) {\n            this.scrollerSubscription.unsubscribe();\n        }\n        if (this.scroller) {\n            this.scroller.destroy();\n        }\n    }\n    initResizeService() {\n        this.resizeService.connect(merge(...this.resizeSensors.map(sensor => sensor.resize)));\n    }\n    syncContainerHeight() {\n        [maybeNativeElement(this.lockedContainer)]\n            .filter(isPresent)\n            .map(el => {\n            el.style.height = '';\n            let height = this.container.nativeElement.offsetHeight;\n            if (hasScrollbar(this.table, this.container)) {\n                height -= this.supportService.scrollbarWidth;\n            }\n            return { el, height };\n        })\n            .forEach(setHeight$1(this.renderer));\n    }\n    updateViewportColumns(range) {\n        const columns = this.columns.nonLockedLeafColumns.toArray();\n        let { startIdx, endIdx, offset } = range || this.calculateViewportColumns();\n        const start = Math.max(0, startIdx - bufferSize);\n        const end = Math.min(endIdx + bufferSize, columns.length - 1);\n        if (start < startIdx) {\n            for (let idx = startIdx - 1; idx >= start; idx--) {\n                offset -= columns[idx].width;\n            }\n        }\n        let currentColumns = columns.slice(start, end + 1);\n        this.viewportColumnsWidth = currentColumns.reduce((total, column) => total + column.width, 0);\n        if (start > 0) {\n            const offsetColumn = new ColumnBase$1();\n            offsetColumn.width = offset;\n            currentColumns.unshift(offsetColumn);\n        }\n        this.viewportColumns = new QueryList();\n        this.viewportColumns.reset(currentColumns);\n        this.columnsStartIdx = start;\n        this.columnsEndIdx = end;\n        this.columnInfo.columnRangeChange.emit({ start, end, offset });\n        if (!range) {\n            this.updateColumnViewport(startIdx, endIdx);\n        }\n    }\n    handleColumnScroll() {\n        const container = this.container.nativeElement;\n        const scrollLeft = container.scrollLeft;\n        if (this.scrollLeft !== scrollLeft) {\n            this.scrollLeft = scrollLeft;\n            const range = this.calculateViewportColumns();\n            this.updateColumnViewport(range.startIdx, range.endIdx);\n            if (range.startIdx < this.columnsStartIdx || this.columnsEndIdx < range.endIdx) {\n                cancelAnimationFrame(this.columnUpdateFrame);\n                this.columnUpdateFrame = requestAnimationFrame(() => {\n                    this.ngZone.run(() => {\n                        this.updateViewportColumns(range);\n                        this.changeDetector.markForCheck();\n                    });\n                });\n            }\n        }\n    }\n    updateColumnViewport(startIdx, endIdx) {\n        const lockedCount = this.lockedLeafColumns.length;\n        const leafColumns$$1 = this.nonLockedLeafColumns.toArray();\n        const viewportStart = lockedCount + startIdx + (this.detailTemplate && startIdx > 0 ? 1 : 0);\n        let viewportEnd = lockedCount + endIdx + (this.detailTemplate ? 1 : 0);\n        for (let idx = 0; idx < leafColumns$$1.length; idx++) {\n            const column = leafColumns$$1[idx];\n            if (column.isSpanColumn) {\n                viewportEnd += column.childColumns.length;\n            }\n        }\n        this.navigationService.setColumnViewport(viewportStart, viewportEnd);\n    }\n    calculateViewportColumns() {\n        const { scrollLeft, clientWidth } = this.container.nativeElement;\n        const columns = this.columns.nonLockedLeafColumns.toArray();\n        const normalizedScrollLeft = this.normalizeScrollLeft(scrollLeft);\n        const viewportEnd = normalizedScrollLeft + clientWidth;\n        let startIdx;\n        let endIdx = 0;\n        let current = 0;\n        let offset = 0;\n        let idx;\n        for (idx = 0; idx < columns.length; idx++) {\n            const column = columns[idx];\n            current += column.width || 0;\n            if (startIdx === undefined && current > normalizedScrollLeft) {\n                startIdx = idx;\n                offset = current - (column.width || 0);\n            }\n            if (current >= viewportEnd) {\n                endIdx = idx;\n                break;\n            }\n        }\n        if (!endIdx && idx > 0) {\n            endIdx = columns.length - 1;\n        }\n        return { startIdx, endIdx, offset };\n    }\n    viewportWidthChange() {\n        const currentWidth = this.viewportColumns.toArray().reduce((total, column) => total + column.width, 0);\n        return currentWidth !== this.viewportColumnsWidth;\n    }\n    normalizeScrollLeft(position) {\n        return this.rtl ? rtlScrollPosition(position, this.container.nativeElement, this.supportService.rtlScrollLeft) : position;\n    }\n    elementScrollLeft(element) {\n        if (this.rtl) {\n            return this.normalizeScrollLeft(this.container.nativeElement.scrollWidth - element.offsetLeft - element.offsetWidth);\n        }\n        return element.offsetLeft;\n    }\n}\nListComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: SCROLLER_FACTORY_TOKEN,\n                        useValue: DEFAULT_SCROLLER_FACTORY\n                    }\n                ],\n                selector: 'kendo-grid-list',\n                template: `\n    <div #lockedContainer class=\"k-grid-content-locked\" role=\"presentation\"\n        *ngIf=\"isLocked\" [style.width.px]=\"lockedWidth\"\n        [kendoEventsOutsideAngular]=\"{\n            keydown: lockedKeydown,\n            scroll: lockedScroll,\n            mousewheel: lockedMousewheel,\n            DOMMouseScroll: lockedMousewheel\n        }\"\n        [scope]=\"this\"\n        >\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [locked]=\"true\" #lockedTable class=\"k-grid-table\" role=\"presentation\" [style.width.px]=\"lockedWidth\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [columns]=\"lockedLeafColumns\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [groups]=\"groups\"\n                    [isLocked]=\"true\"\n                    [data]=\"data\"\n                    [noRecordsText]=\"''\"\n                    [columns]=\"lockedLeafColumns\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [showGroupFooters]=\"showFooter\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor></kendo-resize-sensor>\n        </div>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n    </div><div #container\n               class=\"k-grid-content k-virtual-content\"\n               role=\"presentation\" tabindex=\"-1\"\n               [kendoGridResizableContainer]=\"lockedLeafColumns.length\"\n               [lockedWidth]=\"lockedWidth + 1\">\n        <div role=\"presentation\" class=\"k-grid-table-wrap\">\n            <table [style.width.px]=\"nonLockedWidth\" #table [virtualColumns]=\"virtualColumns\"\n              class=\"k-grid-table\" role=\"presentation\">\n                <colgroup kendoGridColGroup\n                    role=\"presentation\"\n                    [groups]=\"isLocked ? [] : groups\"\n                    [columns]=\"nonLockedColumnsToRender\"\n                    [detailTemplate]=\"detailTemplate\">\n                </colgroup>\n                <tbody kendoGridTableBody\n                    role=\"presentation\"\n                    [skipGroupDecoration]=\"isLocked\"\n                    [data]=\"data\"\n                    [groups]=\"groups\"\n                    [showGroupFooters]=\"showFooter\"\n                    [columns]=\"nonLockedColumnsToRender\"\n                    [allColumns]=\"nonLockedLeafColumns\"\n                    [detailTemplate]=\"detailTemplate\"\n                    [noRecordsTemplate]=\"noRecordsTemplate\"\n                    [lockedColumnsCount]=\"lockedLeafColumns.length\"\n                    [totalColumnsCount]=\"leafColumns.length\"\n                    [skip]=\"skip\"\n                    [selectable]=\"selectable\"\n                    [trackBy]=\"trackBy\"\n                    [filterable]=\"filterable\"\n                    [rowClass]=\"rowClass\"\n                    [virtualColumns]=\"virtualColumns\">\n                </tbody>\n            </table>\n            <kendo-resize-sensor *ngIf=\"isLocked\"></kendo-resize-sensor>\n        </div>\n        <kendo-resize-sensor *ngIf=\"isLocked || virtualColumns\"></kendo-resize-sensor>\n        <div class=\"k-height-container\" role=\"presentation\">\n            <div [style.height.px]=\"totalHeight\"></div>\n        </div>\n        <div *ngIf=\"virtualColumns\" class=\"k-width-container\" role=\"presentation\">\n            <div [style.width.px]=\"totalWidth\"></div>\n        </div>\n    </div>\n    <div *ngIf=\"loading\" kendoGridLoading>\n    </div>\n    `\n            },] },\n];\n/** @nocollapse */\nListComponent.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [SCROLLER_FACTORY_TOKEN,] }] },\n    { type: DetailsService },\n    { type: ChangeNotificationService },\n    { type: SuspendService },\n    { type: GroupsService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ScrollSyncService },\n    { type: ResizeService },\n    { type: EditService },\n    { type: BrowserSupportService },\n    { type: NavigationService },\n    { type: ScrollRequestService },\n    { type: LocalizationService },\n    { type: ColumnResizingService },\n    { type: ChangeDetectorRef },\n    { type: PDFService },\n    { type: ColumnInfoService }\n];\nListComponent.propDecorators = {\n    hostClass: [{ type: HostBinding, args: [\"class.k-grid-container\",] }],\n    hostRole: [{ type: HostBinding, args: [\"attr.role\",] }],\n    data: [{ type: Input }],\n    groups: [{ type: Input }],\n    total: [{ type: Input }],\n    rowHeight: [{ type: Input }],\n    detailRowHeight: [{ type: Input }],\n    take: [{ type: Input }],\n    skip: [{ type: Input }],\n    columns: [{ type: Input }],\n    detailTemplate: [{ type: Input }],\n    noRecordsTemplate: [{ type: Input }],\n    selectable: [{ type: Input }],\n    groupable: [{ type: Input }],\n    filterable: [{ type: Input }],\n    rowClass: [{ type: Input }],\n    loading: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    virtualColumns: [{ type: Input }],\n    isVirtual: [{ type: Input }],\n    contentScroll: [{ type: Output }],\n    pageChange: [{ type: Output }],\n    scrollBottom: [{ type: Output }],\n    container: [{ type: ViewChild, args: [\"container\", { static: true },] }],\n    lockedContainer: [{ type: ViewChild, args: [\"lockedContainer\",] }],\n    lockedTable: [{ type: ViewChild, args: [\"lockedTable\",] }],\n    table: [{ type: ViewChild, args: [\"table\",] }],\n    resizeSensors: [{ type: ViewChildren, args: [ResizeSensorComponent,] }]\n};\n\n/**\n * A directive which encapsulates the in-memory handling of data operations such as [paging]({% slug paging_grid %}),\n * [sorting]({% slug sorting_grid %}), and [grouping]({% slug groupingbasics_grid %})\n * ([more information and examples]({% slug automaticoperations_grid %})).\n */\nclass DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n        this.grid = grid;\n        this.changeDetector = changeDetector;\n        this.localDataChangesService = localDataChangesService;\n        this.state = {\n            skip: 0\n        };\n        this.originalData = [];\n        if (localDataChangesService) {\n            this.dataChangedSubscription = this.localDataChangesService.changes.subscribe(this.rebind.bind(this));\n        }\n    }\n    /**\n     * Defines the number of records that will be skipped by the pager.\n     */\n    set skip(value) {\n        if (!isPresent(value)) {\n            value = 0;\n        }\n        this.grid.skip = this.state.skip = value;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n    set sort(value) {\n        this.grid.sort = this.state.sort = value;\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n    set filter(value) {\n        this.grid.filter = this.state.filter = value;\n    }\n    /**\n     * Defines the page size used by the Grid pager.\n     */\n    set pageSize(value) {\n        this.grid.pageSize = this.state.take = value;\n    }\n    /**\n     * The descriptors by which the data will be grouped.\n     */\n    set group(value) {\n        this.grid.group = this.state.group = value;\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n    set data(value) {\n        this.originalData = value || [];\n        if (this.localDataChangesService) {\n            this.localDataChangesService.data = value;\n        }\n        this.dataChanged = true;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.applyState(this.state);\n        this.stateChangeSubscription = this.grid\n            .dataStateChange\n            .subscribe(this.onStateChange.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        if (this.stateChangeSubscription) {\n            this.stateChangeSubscription.unsubscribe();\n        }\n        if (this.dataChangedSubscription) {\n            this.dataChangedSubscription.unsubscribe();\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes) {\n        if (anyChanged([\"pageSize\", \"skip\", \"sort\", \"group\", \"filter\"], changes)) {\n            this.rebind();\n        }\n    }\n    ngDoCheck() {\n        if (this.dataChanged) {\n            this.updateGridData();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onStateChange(state$$1) {\n        this.applyState(state$$1);\n        this.rebind();\n    }\n    /**\n     * @hidden\n     */\n    rebind() {\n        this.data = this.originalData;\n        this.updateGridData();\n        this.notifyDataChange();\n    }\n    /**\n     * Notifies the Grid that its data has changed.\n     */\n    notifyDataChange() {\n        this.grid.onDataChange();\n        if (this.changeDetector) {\n            this.changeDetector.markForCheck();\n        }\n    }\n    process(state$$1) {\n        return process(this.originalData, state$$1);\n    }\n    applyState({ skip, take: take$$1, sort, group, filter: filter$$1 }) {\n        this.skip = skip;\n        this.pageSize = take$$1;\n        this.sort = sort;\n        this.group = group;\n        this.filter = filter$$1;\n    }\n    updateGridData() {\n        this.grid.data = this.process(this.state);\n        this.dataChanged = false;\n    }\n}\nDataBindingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridBinding]'\n            },] },\n];\n/** @nocollapse */\nDataBindingDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: ChangeDetectorRef },\n    { type: LocalDataChangesService }\n];\nDataBindingDirective.propDecorators = {\n    skip: [{ type: Input }],\n    sort: [{ type: Input }],\n    filter: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    group: [{ type: Input }],\n    data: [{ type: Input, args: [\"kendoGridBinding\",] }]\n};\n\n/**\n * A directive which stores the row selection state of the Grid in memory\n * ([see example]({% slug selection_grid %}#toc-during-data-operations)).\n */\nclass SelectionDirective extends Selection {\n    constructor(grid, cd) {\n        super(grid, cd);\n        this.grid = grid;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        if (this.grid.selectable === false) {\n            this.grid.selectable = true;\n        }\n        this.grid.selectionDirective = this;\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        super.destroy();\n    }\n}\nSelectionDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridSelectBy]'\n            },] },\n];\n/** @nocollapse */\nSelectionDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: ChangeDetectorRef }\n];\n\n/**\n * A directive which controls the expanded state of the master detail rows.\n */\nclass ExpandDetailsDirective {\n    constructor(grid) {\n        this.grid = grid;\n        /**\n         * Fires when the expandedDetailKeys are changed.\n         */\n        this.expandedDetailKeysChange = new EventEmitter();\n        /**\n         * Defines the collection that will store the expanded keys.\n         */\n        this.expandedDetailKeys = [];\n        /**\n         * Specifies if the items should be initially expanded.\n         * @default false\n         */\n        this.initiallyExpanded = false;\n        this.subscriptions = new Subscription();\n        this.grid.isDetailExpanded = this.isExpanded.bind(this);\n        this.subscriptions.add(merge(this.grid.detailExpand.pipe(map(e => (Object.assign({ expand: true }, e)))), this.grid.detailCollapse.pipe(map(e => (Object.assign({ expand: false }, e))))).subscribe(this.toggleState.bind(this)));\n    }\n    /**\n     * Defines the item key that will be stored in the `expandedDetailKeys` collection ([see example]({% slug master_detail_expanded_state_grid %}#toc-built-in-directive)).\n     */\n    get expandDetailsKey() {\n        return this._expandBy;\n    }\n    set expandDetailsKey(key) {\n        if (isString(key)) {\n            this._expandBy = getter(key);\n        }\n        else {\n            this._expandBy = key;\n        }\n    }\n    /**\n     *\n     * @hidden\n     * A deprecated alias for setting the `expandDetailsKey` property.\n     */\n    get expandDetailBy() {\n        return this.expandDetailsKey;\n    }\n    set expandDetailBy(key) {\n        this.expandDetailsKey = key;\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    get keyGetter() {\n        return this._expandBy || getter(undefined);\n    }\n    /**\n     * @hidden\n     */\n    isExpanded(args) {\n        const key = this.keyGetter(args.dataItem);\n        return this.expandedDetailKeys.indexOf(key) > -1 ? !this.initiallyExpanded : this.initiallyExpanded;\n    }\n    toggleState(args) {\n        const key = this.keyGetter(args.dataItem);\n        if (Boolean(this.initiallyExpanded) !== args.expand) {\n            this.expandedDetailKeys.push(key);\n        }\n        else {\n            const index = this.expandedDetailKeys.indexOf(key);\n            this.expandedDetailKeys.splice(index, 1);\n        }\n        this.expandedDetailKeysChange.emit(this.expandedDetailKeys);\n    }\n}\nExpandDetailsDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridExpandDetailsBy]',\n                exportAs: 'kendoGridExpandDetailsBy'\n            },] },\n];\n/** @nocollapse */\nExpandDetailsDirective.ctorParameters = () => [\n    { type: GridComponent }\n];\nExpandDetailsDirective.propDecorators = {\n    expandedDetailKeysChange: [{ type: Output }],\n    expandDetailsKey: [{ type: Input, args: ['kendoGridExpandDetailsBy',] }],\n    expandDetailBy: [{ type: Input }],\n    expandedDetailKeys: [{ type: Input }],\n    initiallyExpanded: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass Messages extends ComponentMessages {\n}\nMessages.propDecorators = {\n    groupPanelEmpty: [{ type: Input }],\n    noRecords: [{ type: Input }],\n    pagerFirstPage: [{ type: Input }],\n    pagerLastPage: [{ type: Input }],\n    pagerPreviousPage: [{ type: Input }],\n    pagerNextPage: [{ type: Input }],\n    pagerPage: [{ type: Input }],\n    pagerItemsPerPage: [{ type: Input }],\n    pagerOf: [{ type: Input }],\n    pagerItems: [{ type: Input }],\n    pagerPageNumberInputTitle: [{ type: Input }],\n    filter: [{ type: Input }],\n    filterEqOperator: [{ type: Input }],\n    filterNotEqOperator: [{ type: Input }],\n    filterIsNullOperator: [{ type: Input }],\n    filterIsNotNullOperator: [{ type: Input }],\n    filterIsEmptyOperator: [{ type: Input }],\n    filterIsNotEmptyOperator: [{ type: Input }],\n    filterStartsWithOperator: [{ type: Input }],\n    filterContainsOperator: [{ type: Input }],\n    filterNotContainsOperator: [{ type: Input }],\n    filterEndsWithOperator: [{ type: Input }],\n    filterGteOperator: [{ type: Input }],\n    filterGtOperator: [{ type: Input }],\n    filterLteOperator: [{ type: Input }],\n    filterLtOperator: [{ type: Input }],\n    filterIsTrue: [{ type: Input }],\n    filterIsFalse: [{ type: Input }],\n    filterBooleanAll: [{ type: Input }],\n    filterAfterOrEqualOperator: [{ type: Input }],\n    filterAfterOperator: [{ type: Input }],\n    filterBeforeOperator: [{ type: Input }],\n    filterBeforeOrEqualOperator: [{ type: Input }],\n    filterFilterButton: [{ type: Input }],\n    filterClearButton: [{ type: Input }],\n    filterAndLogic: [{ type: Input }],\n    filterOrLogic: [{ type: Input }],\n    loading: [{ type: Input }],\n    columnMenu: [{ type: Input }],\n    columns: [{ type: Input }],\n    lock: [{ type: Input }],\n    unlock: [{ type: Input }],\n    sortable: [{ type: Input }],\n    sortAscending: [{ type: Input }],\n    sortDescending: [{ type: Input }],\n    sortedAscending: [{ type: Input }],\n    sortedDescending: [{ type: Input }],\n    sortedDefault: [{ type: Input }],\n    columnsApply: [{ type: Input }],\n    columnsReset: [{ type: Input }],\n    detailExpand: [{ type: Input }],\n    detailCollapse: [{ type: Input }],\n    filterDateToday: [{ type: Input }],\n    filterDateToggle: [{ type: Input }],\n    filterNumericDecrement: [{ type: Input }],\n    filterNumericIncrement: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass LocalizedMessagesDirective extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n}\nLocalizedMessagesDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => LocalizedMessagesDirective)\n                    }\n                ],\n                selector: '[kendoGridLocalizedMessages]'\n            },] },\n];\n/** @nocollapse */\nLocalizedMessagesDirective.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Custom component messages override default component messages\n * ([see example]({% slug globalization_grid %}#toc-localization)).\n */\nclass CustomMessagesComponent extends Messages {\n    constructor(service) {\n        super();\n        this.service = service;\n    }\n    get override() {\n        return true;\n    }\n}\nCustomMessagesComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: Messages,\n                        useExisting: forwardRef(() => CustomMessagesComponent)\n                    }\n                ],\n                selector: 'kendo-grid-messages',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nCustomMessagesComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * @hidden\n */\nclass FilterRowComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.columns = [];\n        this.groups = [];\n        this.filterRowClass = true;\n        this.filterLabel = this.localization.get('filter');\n    }\n}\nFilterRowComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridFilterRow]',\n                template: `\n      <td\n         [class.k-group-cell]=\"true\"\n         *ngFor=\"let g of groups\"\n         role=\"presentation\">\n      </td>\n      <td\n         [class.k-hierarchy-cell]=\"true\"\n         *ngIf=\"detailTemplate?.templateRef\"\n         role=\"presentation\">\n      </td>\n      <td *ngFor=\"let column of columns; let columnIndex = index\"\n          [attr.aria-label]=\"filterLabel\"\n          kendoGridFilterCell\n            [column]=\"column\"\n            [filter]=\"filter\"\n          kendoGridLogicalCell\n            [logicalRowIndex]=\"logicalRowIndex\"\n            [logicalColIndex]=\"lockedColumnsCount + columnIndex\"\n      ></td>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterRowComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nFilterRowComponent.propDecorators = {\n    columns: [{ type: Input }],\n    filter: [{ type: Input }],\n    groups: [{ type: Input }],\n    detailTemplate: [{ type: Input }],\n    logicalRowIndex: [{ type: Input }],\n    lockedColumnsCount: [{ type: Input }],\n    filterRowClass: [{ type: HostBinding, args: ['class.k-filter-row',] }]\n};\n\nconst areDifferent = (a, b) => a.field !== b.field || a.operator !== b.operator || a.value !== b.value;\nconst isChanged$1 = (a, b) => {\n    if (a.length !== b.length) {\n        return true;\n    }\n    for (let idx = 0, len = a.length; idx < len; idx++) {\n        const prev = a[idx];\n        const curr = b[idx];\n        if (isCompositeFilterDescriptor(prev)) {\n            // tslint:disable-next-line:no-use-before-declare\n            if (diffFilters(prev, curr[idx])) {\n                return true;\n            }\n        }\n        else if (areDifferent(prev, curr)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst copyObject = (obj) => {\n    const result = {};\n    Object.assign(result, obj);\n    if (obj.constructor !== Object) {\n        const proto = obj.constructor.prototype;\n        Object.getOwnPropertyNames(proto).forEach((property) => {\n            if (property !== 'constructor' && proto.hasOwnProperty(property)) {\n                result[property] = obj[property];\n            }\n        });\n    }\n    return result;\n};\nconst cloneFilter = (filter$$1) => copyObject(filter$$1);\n/**\n * @hidden\n */\nconst cloneFilters = (filter$$1) => {\n    if (!filter$$1) {\n        return;\n    }\n    if (isCompositeFilterDescriptor(filter$$1)) {\n        return {\n            filters: cloneFilters(filter$$1.filters),\n            logic: filter$$1.logic\n        };\n    }\n    else if (Array.isArray(filter$$1)) {\n        return filter$$1.map(cloneFilters);\n    }\n    return cloneFilter(filter$$1);\n};\n/**\n * @hidden\n */\nconst diffFilters = (a, b) => {\n    if (isPresent(a) && !isPresent(b)) {\n        return true;\n    }\n    if (!isPresent(a) && isPresent(b)) {\n        return true;\n    }\n    return isPresent(a) && isPresent(b) && isChanged$1(a.filters, b.filters);\n};\n\n/**\n * @hidden\n */\nclass FilterCellComponent {\n    constructor() {\n        this._templateContext = {};\n    }\n    get filter() {\n        return this._filter;\n    }\n    set filter(value) {\n        this._filter = cloneFilters(value);\n    }\n    get templateContext() {\n        this._templateContext.column = this.column;\n        this._templateContext.filter = this.filter;\n        // tslint:disable-next-line:no-string-literal\n        this._templateContext[\"$implicit\"] = this.filter;\n        return this._templateContext;\n    }\n    get hasTemplate() {\n        return isPresent(this.column.filterCellTemplateRef);\n    }\n    get isFilterable() {\n        return isPresent(this.column) && !isNullOrEmptyString(this.column.field) && this.column.filterable;\n    }\n}\nFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridFilterCell]',\n                template: `\n        <ng-template [ngIf]=\"isFilterable\">\n            <ng-container [ngSwitch]=\"hasTemplate\">\n                <ng-container *ngSwitchCase=\"false\">\n                    <ng-container kendoFilterCellHost [column]=\"column\" [filter]=\"filter\"></ng-container>\n                </ng-container>\n                <ng-container *ngSwitchCase=\"true\">\n                    <ng-template\n                        *ngIf=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutlet]=\"column.filterCellTemplateRef\"\n                        [ngTemplateOutletContext]=\"templateContext\">\n                    </ng-template>\n                </ng-container>\n            </ng-container>\n        </ng-template>\n    `\n            },] },\n];\nFilterCellComponent.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }]\n};\n\nconst localizeOperators = operators => localization => Object.keys(operators).reduce((acc, key) => {\n    acc[operators[key]] = localization.get(key);\n    return acc;\n}, {}); // tslint:disable-line:align\nconst operatorTexts = localizeOperators({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterGteOperator\": \"gte\",\n    \"filterGtOperator\": \"gt\",\n    \"filterLteOperator\": \"lte\",\n    \"filterLtOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\",\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterAfterOrEqualOperator\": \"after-eq\",\n    \"filterAfterOperator\": \"after\",\n    \"filterBeforeOrEqualOperator\": \"before-eq\",\n    \"filterBeforeOperator\": \"before\"\n});\n/**\n * @hidden\n */\nconst toJSON = (xs) => xs.map(x => x.toJSON());\n/**\n * @hidden\n */\nclass FilterOperatorBase {\n    constructor(operator, localization) {\n        this.operator = operator;\n        this.localization = localization;\n        this.messages = operatorTexts(this.localization);\n        this._text = this.messages[this.operator];\n        this.localization.changes.subscribe(this.refreshText.bind(this));\n    }\n    /**\n     * The text that will be displayed in the drop-down list.\n     * @readonly\n     * @type {string}\n     * @memberOf FilterOperatorBase\n     */\n    get text() {\n        return this._text;\n    }\n    /**\n     *\n     */\n    set text(value) {\n        this._text = isNullOrEmptyString(value) ? this.messages[this.operator] : value;\n    }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: this.operator\n        };\n    }\n    refreshText() {\n        const update = this._text === this.messages[this.operator];\n        this.messages = operatorTexts(this.localization);\n        if (update) {\n            this._text = this.messages[this.operator];\n        }\n    }\n}\nFilterOperatorBase.propDecorators = {\n    text: [{ type: Input }]\n};\n\nconst insertDefaultFilter = (index, rootFilter, filter$$1) => {\n    rootFilter = (rootFilter || { filters: [], logic: \"and\" });\n    rootFilter.filters[index] = filter$$1;\n    return filter$$1;\n};\n/**\n * @hidden\n */\nconst setFilter = (index, filter$$1, field, defaultOperator) => {\n    if (isPresent(filter$$1) && isPresent(filter$$1.filters) && filter$$1.filters.length > index) {\n        return filter$$1.filters[index];\n    }\n    else {\n        return insertDefaultFilter(index, filter$$1, {\n            field,\n            operator: defaultOperator\n        });\n    }\n};\n/**\n * @hidden\n */\nconst logicOperators = (localization) => [\n    { text: localization.get(\"filterAndLogic\"), value: \"and\" },\n    { text: localization.get(\"filterOrLogic\"), value: \"or\" }\n];\n/**\n * @hidden\n */\nconst flatten = (filter$$1) => {\n    if (isPresent(filter$$1.filters)) {\n        return filter$$1.filters.reduce((acc, curr) => acc.concat(isCompositeFilterDescriptor(curr) ? flatten(curr) : [curr]), []);\n    }\n    return [];\n};\nconst trimFilterByField = (filter$$1, field) => {\n    if (isPresent(filter$$1) && isPresent(filter$$1.filters)) {\n        filter$$1.filters = filter$$1.filters.filter(x => {\n            if (isCompositeFilterDescriptor(x)) {\n                trimFilterByField(x, field);\n                return x.filters.length;\n            }\n            else {\n                return x.field !== field;\n            }\n        });\n    }\n};\n/**\n * @hidden\n */\nconst filtersByField = (filter$$1, field) => flatten(filter$$1 || {}).filter(x => x.field === field);\n/**\n * @hidden\n */\nconst filterByField = (filter$$1, field) => {\n    let [currentFilter] = filtersByField(filter$$1, field);\n    return currentFilter;\n};\n/**\n * @hidden\n */\nconst removeFilter = (filter$$1, field) => {\n    trimFilterByField(filter$$1, field);\n    return filter$$1;\n};\n/**\n * @hidden\n */\nconst localizeOperators$1 = operators => localization => Object.keys(operators).map(key => ({\n    text: localization.get(key),\n    value: operators[key]\n}));\n/**\n * An abstract base class for the filter-cell component ([see example]({% slug reusablecustomfilters_grid %}#toc-filter-row)).\n */\nclass BaseFilterCellComponent {\n    constructor(filterService) {\n        this.filterService = filterService;\n        this.operatorList = new QueryList();\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return true;\n    }\n    get operators() {\n        return this._operators.length ? this._operators : this.defaultOperators;\n    }\n    set operators(values) {\n        this._operators = values;\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        this.operationListSubscription = observe(this.operatorList)\n            .pipe(map(q => q.toArray()), map(toJSON))\n            .subscribe(x => {\n            this.operators = x;\n        });\n    }\n    ngOnDestroy() {\n        if (this.operationListSubscription) {\n            this.operationListSubscription.unsubscribe();\n        }\n    }\n    filterByField(field) {\n        return filterByField(this.filter, field);\n    }\n    filtersByField(field) {\n        return filtersByField(this.filter, field);\n    }\n    removeFilter(field) {\n        return removeFilter(this.filter, field);\n    }\n    updateFilter(filter$$1) {\n        const root = this.filter || {\n            filters: [],\n            logic: \"and\"\n        };\n        let [currentFilter] = flatten(root).filter(x => x.field === filter$$1.field);\n        if (!isPresent(currentFilter)) {\n            root.filters.push(filter$$1);\n        }\n        else {\n            Object.assign(currentFilter, filter$$1);\n        }\n        return root;\n    }\n    applyFilter(filter$$1) {\n        this.filterService.filter(filter$$1);\n    }\n}\nBaseFilterCellComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    operatorList: [{ type: ContentChildren, args: [FilterOperatorBase,] }]\n};\n\n// tslint:disable:no-access-missing-member\nconst numericOperators = localizeOperators$1({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterGteOperator\": \"gte\",\n    \"filterGtOperator\": \"gt\",\n    \"filterLteOperator\": \"lte\",\n    \"filterLtOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * Represents a base numeric filter component.\n */\nclass NumericFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `eq`.\n         * @type {string}\n         */\n        this.operator = \"eq\";\n        /**\n         * Specifies the value that is used to increment or decrement the component value.\n         * @type {numeric}\n         */\n        this.step = 1;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n         * @type {boolean}\n         */\n        this.spinners = true;\n        this.defaultOperators = numericOperators(this.localization);\n    }\n    /**\n     * Specifies the number format used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n    set format(value) {\n        this._format = value;\n    }\n    /**\n     * Specifies the number format used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n    get format() {\n        return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    get columnFormat() {\n        return this.column && !isNullOrEmptyString(this.column.format) ?\n            extractFormat(this.column.format) : \"n2\";\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = numericOperators(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nNumericFilterComponent.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }],\n    step: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    spinners: [{ type: Input }],\n    decimals: [{ type: Input }],\n    format: [{ type: Input }]\n};\n\n/**\n * Represents a numeric filter cell.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-numeric-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-numeric-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass NumericFilterCellComponent extends NumericFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        this.localization = localization;\n        /**\n         * Determines the delay time (in milliseconds) before the filter value is submitted.\n         * A value of `0` indicates no delay. The default value is `500`.\n         * @type {boolean}\n         */\n        this.filterDelay = 500;\n        /**\n         * Determines if the drop-down filter operators will be displayed.\n         * The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n}\nNumericFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-numeric-filter-cell',\n                template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-numerictextbox\n                kendoGridFocusable\n                kendoFilterInput\n                [filterDelay]=\"filterDelay\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-wrapper-cell>\n    `\n            },] },\n];\n/** @nocollapse */\nNumericFilterCellComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: LocalizationService }\n];\nNumericFilterCellComponent.propDecorators = {\n    filterDelay: [{ type: Input }],\n    showOperators: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass FilterInputDirective {\n    constructor(valueAccessors, ngZone, element, renderer) {\n        this.change = new EventEmitter();\n        this.composing = false;\n        this.filterDelay = 500;\n        this.changeRequests = new Subject();\n        this.accessor = valueAccessors[0];\n        ngZone.runOutsideAngular(() => {\n            const unsubscribeStart = renderer.listen(element.nativeElement, 'compositionstart', () => this.composing = true);\n            const unsubscribeEnd = renderer.listen(element.nativeElement, 'compositionend', () => this.composing = false);\n            this.unsubscribeEvents = () => {\n                unsubscribeStart();\n                unsubscribeEnd();\n            };\n        });\n    }\n    set value(value) {\n        this.accessor.writeValue(value);\n    }\n    set disabled(value) {\n        this.accessor.setDisabledState(value);\n    }\n    ngAfterViewInit() {\n        this.accessor.registerOnChange(x => this.filterDelay > 0 ?\n            this.changeRequests.next(x) :\n            this.change.emit(x));\n        this.subscribeChanges();\n    }\n    ngOnChanges(changes) {\n        if (isChanged('filterDelay', changes)) {\n            this.unsubscribeChanges();\n            this.subscribeChanges();\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribeChanges();\n        this.unsubscribeEvents();\n    }\n    subscribeChanges() {\n        this.changeRequestsSubscription = this.changeRequests\n            .pipe(debounceTime(this.filterDelay), filter(() => !this.composing))\n            .subscribe(x => this.change.emit(x));\n    }\n    unsubscribeChanges() {\n        if (this.changeRequestsSubscription) {\n            this.changeRequestsSubscription.unsubscribe();\n        }\n    }\n}\nFilterInputDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoFilterInput]'\n            },] },\n];\n/** @nocollapse */\nFilterInputDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nFilterInputDirective.propDecorators = {\n    filterDelay: [{ type: Input }],\n    value: [{ type: Input }]\n};\n\nconst EMPTY_VALUE_OPERATORS = new Set(['isnull', 'isnotnull', 'isempty', 'isnotempty']);\nconst isEmptyValueOperator = (operator) => EMPTY_VALUE_OPERATORS.has(operator);\n/**\n * @hidden\n */\nclass FilterInputWrapperComponent extends BaseFilterCellComponent {\n    constructor(filterService) {\n        super(filterService);\n        this.operators = [];\n    }\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    get currentOperator() {\n        const filter$$1 = this.currentFilter;\n        if (!this._operator) {\n            this._operator = filter$$1 ? filter$$1.operator : this.defaultOperator;\n        }\n        return this._operator;\n    }\n    set currentOperator(value) {\n        this._operator = value;\n        const emptyValueOperator = isEmptyValueOperator(value);\n        this.filterInputDisabled = emptyValueOperator;\n        if (emptyValueOperator) {\n            this.applyNoValueFilter(value);\n        }\n        else if (!isBlank(value) && isPresent(this.currentFilter)) {\n            this.onChange(this.currentFilter.value);\n        }\n    }\n    get defaultOperator() {\n        if (!isNullOrEmptyString(this._defaultOperator)) {\n            return this._defaultOperator;\n        }\n        else if (this.operators && this.operators.length) {\n            return this.operators[0].value;\n        }\n        return \"eq\";\n    }\n    set defaultOperator(value) {\n        this._defaultOperator = value;\n    }\n    set filterInputDisabled(disabled) {\n        if (!this.input) {\n            return;\n        }\n        this.input.disabled = disabled;\n    }\n    ngAfterContentInit() {\n        if (isPresent(this.input)) {\n            this.changeSubscription = this.input.change.subscribe(this.onChange.bind(this));\n            this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    }\n    onChange(value) {\n        if (!isNullOrEmptyString(value) || this.filterByField(this.column.field)) {\n            this.filterChange(isNullOrEmptyString(value) ?\n                this.removeFilter(this.column.field) :\n                this.updateFilter({\n                    field: this.column.field,\n                    operator: this.currentOperator,\n                    value: value\n                }));\n        }\n    }\n    onClear() {\n        this.onChange(null);\n        this.filterInputDisabled = isEmptyValueOperator(this.defaultOperator);\n    }\n    applyNoValueFilter(operator) {\n        this.filterChange(this.updateFilter({\n            field: this.column.field,\n            operator: operator,\n            value: null\n        }));\n    }\n    ngOnChanges(changes) {\n        if (isChanged(\"filter\", changes, false)) {\n            this._operator = null;\n            this.filterInputDisabled = isEmptyValueOperator(this.currentOperator);\n        }\n    }\n}\nFilterInputWrapperComponent.propDecorators = {\n    operators: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    input: [{ type: ContentChild, args: [FilterInputDirective,] }],\n    defaultOperator: [{ type: Input }]\n};\n\nconst EMPTY_FILTER_OPERATORS = ['isnull', 'isnotnull', 'isempty', 'isnotempty'];\n/**\n * @hidden\n */\nclass FilterCellWrapperComponent extends FilterInputWrapperComponent {\n    constructor(filterService) {\n        super(filterService);\n        this.showOperators = true;\n    }\n    get hostClasses() {\n        return true;\n    }\n    get overrideBaseClasses() {\n        return false;\n    }\n    get showButton() {\n        const filter$$1 = this.currentFilter;\n        return isPresent(filter$$1) && (!isNullOrEmptyString(filter$$1.value) ||\n            EMPTY_FILTER_OPERATORS.indexOf(String(filter$$1.operator)) >= 0);\n    }\n    filterChange(filter$$1) {\n        this.applyFilter(filter$$1);\n    }\n}\nFilterCellWrapperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-filter-wrapper-cell',\n                template: `\n        <ng-content></ng-content>\n        <kendo-grid-filter-cell-operators\n            [showOperators]=\"showOperators\"\n            [operators]=\"operators\"\n            (clear)=\"onClear()\"\n            [showButton]=\"showButton\"\n            [(value)]=\"currentOperator\">\n        </kendo-grid-filter-cell-operators>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterCellWrapperComponent.ctorParameters = () => [\n    { type: FilterService }\n];\nFilterCellWrapperComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell-wrapper',] }],\n    overrideBaseClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    showOperators: [{ type: Input }]\n};\n\n// tslint:disable:no-access-missing-member\nconst stringOperators = localizeOperators$1({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * Represents a base string filter component.\n */\nclass StringFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `contains`.\n         * @type {string}\n         */\n        this.operator = \"contains\";\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField((this.column || {}).field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = stringOperators(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nStringFilterComponent.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }]\n};\n\n/**\n * Represents a string-filter cell component\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-string-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-string-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass StringFilterCellComponent extends StringFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        /**\n         * Determines the delay time (in milliseconds) before the filter value is submitted.\n         * A value of `0` indicates no delay. The default value is `500`.\n         * @type {boolean}\n         */\n        this.filterDelay = 500;\n        /**\n         * Determines if the drop-down filter operators will be displayed.\n         * The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n}\nStringFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-string-filter-cell',\n                template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\">\n            <input\n                class=\"k-textbox\"\n                kendoGridFocusable\n                kendoFilterInput\n                [filterDelay]=\"filterDelay\"\n                [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-wrapper-cell>\n    `\n            },] },\n];\n/** @nocollapse */\nStringFilterCellComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: LocalizationService }\n];\nStringFilterCellComponent.propDecorators = {\n    filterDelay: [{ type: Input }],\n    showOperators: [{ type: Input }]\n};\n\n/**\n * Represents a component which accommodates the filter operators.\n */\nclass FilterCellOperatorsComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.clearText = 'Clear';\n        /**\n         * The filter operators that will be displayed.\n         */\n        this.operators = [];\n        /**\n         * Determines if the list of operators will be displayed.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n        /**\n         * Fires when the operator is selected.\n         * @type {EventEmitter<string>}\n         */\n        this.valueChange = new EventEmitter();\n        /**\n         * Fires when the **Clear** button is clicked.\n         * @type {EventEmitter<{}>}\n         */\n        this.clear = new EventEmitter();\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return true;\n    }\n    /**\n     * @hidden\n     */\n    onChange(dataItem) {\n        this.valueChange.emit(dataItem);\n    }\n    /**\n     * @hidden\n     */\n    clearClick() {\n        this.clear.emit();\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    clearKeydown(args) {\n        if (args.keyCode === Keys.Enter || args.keyCode === Keys.Space) {\n            this.clear.emit();\n        }\n    }\n    /**\n     * @hidden\n     */\n    dropdownKeydown(args) {\n        if (args.defaultPrevented) {\n            return;\n        }\n        if (args.keyCode === Keys.Enter && !this.dropdown.isOpen) {\n            this.dropdown.toggle(true);\n            args.preventDefault();\n        }\n    }\n    ngOnInit() {\n        this.localization.changes.subscribe(() => this.clearText = this.localization.get(\"filterClearButton\"));\n    }\n}\nFilterCellOperatorsComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-filter-cell-operators',\n                template: `\n        <kendo-dropdownlist\n            #dropdown\n            *ngIf=\"showOperators\"\n            kendoGridFocusable\n            [data]=\"operators\"\n            class=\"k-dropdown-operator\"\n            (valueChange)=\"onChange($event)\"\n            [value]=\"value\"\n            iconClass=\"k-i-filter\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            [popupSettings]=\"{ width: 'auto' }\"\n            valueField=\"value\"\n            (keydown)=\"dropdownKeydown($event)\">\n        </kendo-dropdownlist>\n        <button type=\"button\"\n            kendoGridFocusable\n            [ngClass]=\"{'k-clear-button-visible': showButton}\"\n            class=\"k-button k-button-icon\"\n            [title]=\"clearText\"\n            (click)=\"clearClick()\"\n            (keydown)=\"clearKeydown($event)\">\n                <span class=\"k-icon k-i-filter-clear\"></span>\n        </button>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterCellOperatorsComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nFilterCellOperatorsComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell-operator',] }],\n    dropdown: [{ type: ViewChild, args: ['dropdown',] }],\n    operators: [{ type: Input }],\n    showButton: [{ type: Input }],\n    showOperators: [{ type: Input }],\n    value: [{ type: Input }],\n    valueChange: [{ type: Output }],\n    clear: [{ type: Output }]\n};\n\n// tslint:disable:no-access-missing-member\nconst stringOperators$1 = localizeOperators$1({\n    \"filterContainsOperator\": \"contains\",\n    \"filterNotContainsOperator\": \"doesnotcontain\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    \"filterStartsWithOperator\": \"startswith\",\n    \"filterEndsWithOperator\": \"endswith\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\",\n    \"filterIsEmptyOperator\": \"isempty\",\n    \"filterIsNotEmptyOperator\": \"isnotempty\"\n});\n/**\n * @hidden\n */\nclass AutoCompleteFilterCellComponent extends BaseFilterCellComponent {\n    constructor(filterService, column, localization) {\n        super(filterService);\n        this.localization = localization;\n        this.showOperators = true;\n        this.defaultOperators = stringOperators$1(this.localization);\n        this.column = column;\n    }\n    set valueField(value) {\n        this._valueField = value;\n    }\n    get valueField() {\n        return this._valueField ? this._valueField : this.column.field;\n    }\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : \"contains\";\n    }\n}\nAutoCompleteFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-autocomplete-filter-cell',\n                template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [showOperators]=\"showOperators\">\n            <kendo-autocomplete\n                kendoFilterInput\n                [data]=\"data\"\n                [valueField]=\"valueField\"\n                [value]=\"currentFilter?.value\">\n            </kendo-autocomplete>\n        </kendo-grid-filter-wrapper-cell>\n    `\n            },] },\n];\n/** @nocollapse */\nAutoCompleteFilterCellComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: ColumnComponent },\n    { type: LocalizationService }\n];\nAutoCompleteFilterCellComponent.propDecorators = {\n    showOperators: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    data: [{ type: Input }],\n    valueField: [{ type: Input }]\n};\n\n// tslint:disable:no-access-missing-member\n/**\n * @hidden\n */\nclass BooleanFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * @hidden\n         */\n        this.operator = \"eq\";\n        /**\n         * @hidden\n         */\n        this.items = [\n            { text: this.localization.get(\"filterIsTrue\"), value: true },\n            { text: this.localization.get(\"filterIsFalse\"), value: false }\n        ];\n        /**\n         * @hidden\n         */\n        this.defaultItem = { text: this.localization.get(\"filterBooleanAll\"), value: null };\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return true;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.items = [\n            { text: this.localization.get(\"filterIsTrue\"), value: true },\n            { text: this.localization.get(\"filterIsFalse\"), value: false }\n        ];\n        this.defaultItem = { text: this.localization.get(\"filterBooleanAll\"), value: null };\n    }\n}\nBooleanFilterComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell-boolean',] }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }]\n};\n\n/**\n * Represents a Boolean filter-cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-boolean-filter-cell\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-boolean-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass BooleanFilterCellComponent extends BooleanFilterComponent {\n    constructor(filterService, localization, cd) {\n        super(filterService, localization);\n        this.cd = cd;\n    }\n    localizationChange() {\n        super.localizationChange();\n        this.cd.markForCheck();\n    }\n}\nBooleanFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-boolean-filter-cell',\n                template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [showOperators]=\"false\"\n            [defaultOperator]=\"operator\">\n            <kendo-dropdownlist\n                kendoFilterInput\n                [defaultItem]=\"defaultItem\"\n                [data]=\"items\"\n                textField=\"text\"\n                valueField=\"value\"\n                [popupSettings]=\"{ width: 'auto' }\"\n                [valuePrimitive]=\"true\"\n                [value]=\"currentFilter?.value\">\n            </kendo-dropdownlist>\n        </kendo-grid-filter-wrapper-cell>\n    `\n            },] },\n];\n/** @nocollapse */\nBooleanFilterCellComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef }\n];\n\n// tslint:disable:no-access-missing-member\nconst dateOperators = localizeOperators$1({\n    \"filterEqOperator\": \"eq\",\n    \"filterNotEqOperator\": \"neq\",\n    // tslint:disable-next-line:object-literal-sort-keys\n    \"filterAfterOrEqualOperator\": \"gte\",\n    \"filterAfterOperator\": \"gt\",\n    \"filterBeforeOrEqualOperator\": \"lte\",\n    \"filterBeforeOperator\": \"lt\",\n    \"filterIsNullOperator\": \"isnull\",\n    \"filterIsNotNullOperator\": \"isnotnull\"\n});\n/**\n * @hidden\n */\nclass DateFilterComponent extends BaseFilterCellComponent {\n    constructor(filterService, localization) {\n        super(filterService);\n        this.localization = localization;\n        /**\n         * The default filter operator. Defaults to `contains`.\n         * @type {string}\n         */\n        this.operator = \"gte\";\n        /**\n         * Defines the active view that the calendar initially renders.\n         * By default, the active view is `month`.\n         *\n         * > You have to set `activeView` within the `topView`-`bottomView` range.\n         */\n        this.activeView = \"month\";\n        /**\n         * Defines the bottommost calendar view, to which the user can navigate.\n         */\n        this.bottomView = \"month\";\n        /**\n         * Defines the topmost calendar view, to which the user can navigate.\n         */\n        this.topView = \"century\";\n        /**\n         * Determines whether to display a week number column in the `month` view of the Calendar.\n         */\n        this.weekNumber = false;\n        this.defaultOperators = dateOperators(this.localization);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this.filterByField(this.column.field);\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     */\n    set format(value) {\n        this._format = value;\n    }\n    /**\n     * Specifies the date format that is used when the component is not focused.\n     * By default, the `column.format` value is used (if set).\n     *\n     * @readonly\n     * @type {string}\n     */\n    get format() {\n        return !isNullOrEmptyString(this._format) ? this._format : this.columnFormat;\n    }\n    get columnFormat() {\n        return this.column && !isNullOrEmptyString(this.column.format) ?\n            extractFormat(this.column.format) : \"d\";\n    }\n    /**\n     * The current filter operator for the associated column field.\n     * @readonly\n     * @type {string}\n     */\n    get currentOperator() {\n        return this.currentFilter ? this.currentFilter.operator : this.operator;\n    }\n    ngOnInit() {\n        this.subscription = this.localization.changes.subscribe(this.localizationChange.bind(this));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        super.ngOnDestroy();\n    }\n    localizationChange() {\n        this.defaultOperators = dateOperators(this.localization);\n        if (this.operatorList.length) {\n            this.operators = toJSON(this.operatorList.toArray());\n        }\n    }\n}\nDateFilterComponent.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }],\n    format: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    activeView: [{ type: Input }],\n    bottomView: [{ type: Input }],\n    topView: [{ type: Input }],\n    weekNumber: [{ type: Input }]\n};\n\n/**\n * Represents a date-filter cell component.\n *\n * @example\n *\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterCellTemplate let-filter let-column=\"column\">\n *          <kendo-grid-date-filter-cell\n *              [showOperators]=\"false\"\n *              [column]=\"column\"\n *              [filter]=\"filter\">\n *          </kendo-grid-date-filter-cell>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass DateFilterCellComponent extends DateFilterComponent {\n    constructor(filterService, localization) {\n        super(filterService, localization);\n        this.localization = localization;\n        /**\n         * Determines if the drop-down filter operators will be displayed. The default value is `true`.\n         * @type {boolean}\n         */\n        this.showOperators = true;\n    }\n    /**\n     * @hidden\n     */\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n}\nDateFilterCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-date-filter-cell',\n                template: `\n        <kendo-grid-filter-wrapper-cell\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [showOperators]=\"showOperators\"\n        >\n            <kendo-datepicker\n                kendoFilterInput\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [placeholder]=\"placeholder\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-wrapper-cell>\n    `\n            },] },\n];\n/** @nocollapse */\nDateFilterCellComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: LocalizationService }\n];\nDateFilterCellComponent.propDecorators = {\n    showOperators: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass ColGroupComponent {\n    constructor() {\n        this.columns = [];\n        this.groups = [];\n    }\n    get columnsToRender() {\n        return columnsToRender(this.columns);\n    }\n    trackBy(index, _item) {\n        return index;\n    }\n}\nColGroupComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridColGroup]',\n                template: `\n    <ng-template [ngIf]=\"true\">\n        <col [class.k-group-col]=\"true\" *ngFor=\"let g of groups\" />\n        <col [class.k-hierarchy-col]=\"true\" *ngIf=\"detailTemplate?.templateRef\"/>\n        <col *ngFor=\"let column of columnsToRender; trackBy: trackBy;\" [style.width.px]=\"column.width\"/>\n    </ng-template>\n    `\n            },] },\n];\nColGroupComponent.propDecorators = {\n    columns: [{ type: Input }],\n    groups: [{ type: Input }],\n    detailTemplate: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass LoadingComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.hostClass = true;\n    }\n    get loadingText() {\n        return this.localization.get('loading');\n    }\n}\nLoadingComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridLoading]',\n                template: `\n        <span class=\"k-loading-text\">{{ loadingText }}</span>\n        <div class=\"k-loading-image\"></div>\n        <div class=\"k-loading-color\"></div>\n    `\n            },] },\n];\n/** @nocollapse */\nLoadingComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nLoadingComponent.propDecorators = {\n    hostClass: [{ type: HostBinding, args: ['class.k-loading-mask',] }]\n};\n\n/**\n * @hidden\n */\nclass ResizableContainerDirective {\n    constructor(el, renderer, resizeService, grid) {\n        this.el = el;\n        this.renderer = renderer;\n        this.resizeService = resizeService;\n        this.grid = grid;\n        this.enabled = false;\n    }\n    set lockedWidth(value) {\n        this._lockedWidth = value;\n        if (this.enabled) {\n            this.attachResize();\n            this.resize();\n        }\n    }\n    set kendoGridResizableContainer(enabled) {\n        const refresh = enabled !== this.enabled;\n        this.enabled = enabled;\n        if (refresh) {\n            this.attachResize();\n            this.resize();\n        }\n    }\n    ngOnDestroy() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n    }\n    attachResize() {\n        if (this.resizeSubscription && !this.enabled) {\n            this.resizeSubscription.unsubscribe();\n            this.resizeSubscription = null;\n        }\n        if (!this.resizeSubscription && this.enabled) {\n            this.resizeSubscription = this.resizeService.changes.subscribe(this.resize.bind(this));\n        }\n    }\n    resize() {\n        if (this.grid && this.grid.wrapper) {\n            const containerElement = this.grid.wrapper.nativeElement;\n            const width = Math.max(containerElement.clientWidth - this._lockedWidth, 0);\n            if (this.enabled && width > 0) {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", width + \"px\");\n            }\n            else {\n                this.renderer.setStyle(this.el.nativeElement, \"width\", \"\");\n            }\n        }\n    }\n}\nResizableContainerDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridResizableContainer]'\n            },] },\n];\n/** @nocollapse */\nResizableContainerDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ResizeService },\n    { type: GridComponent, decorators: [{ type: Optional }] }\n];\nResizableContainerDirective.propDecorators = {\n    lockedWidth: [{ type: Input, args: ['lockedWidth',] }],\n    kendoGridResizableContainer: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass TemplateContextDirective {\n    constructor(viewContainerRef) {\n        this.viewContainerRef = viewContainerRef;\n    }\n    set templateContext(context) {\n        this.removeView();\n        if (context.templateRef) {\n            this.insertedViewRef = this.viewContainerRef.createEmbeddedView(context.templateRef, context);\n        }\n    }\n    ngOnDestroy() {\n        this.removeView();\n    }\n    removeView() {\n        if (this.insertedViewRef) {\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.insertedViewRef));\n            this.insertedViewRef = undefined;\n        }\n    }\n}\nTemplateContextDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[templateContext]' // tslint:disable-line:directive-selector\n            },] },\n];\n/** @nocollapse */\nTemplateContextDirective.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nTemplateContextDirective.propDecorators = {\n    templateContext: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass FocusGroup {\n    constructor(root) {\n        this.root = root;\n        this.active = true;\n        this.children = [];\n        this.root.registerGroup(this);\n    }\n    get focusableChildren() {\n        return this.children.filter(el => el.canFocus());\n    }\n    get isActive() {\n        return this.active;\n    }\n    ngOnDestroy() {\n        this.root.unregisterGroup(this);\n    }\n    registerElement(element) {\n        this.unregisterElement(element);\n        this.children.push(element);\n    }\n    unregisterElement(element) {\n        this.children = this.children.filter(f => f !== element);\n    }\n    /**\n     * Returns a Boolean value which indicates if the group will receive focus when the cell is focused.\n     * Requires a single \"simple\" focusable element such as a button or a checkbox.\n     */\n    isNavigable() {\n        const focusable = this.focusableChildren;\n        return focusable.length === 1 && focusable[0].isNavigable();\n    }\n    canFocus() {\n        return this.focusableChildren.length > 0;\n    }\n    focus() {\n        if (this.canFocus() && !this.hasFocus()) {\n            this.focusableChildren[0].focus();\n        }\n    }\n    activate() {\n        this.toggleState(true);\n    }\n    deactivate() {\n        this.toggleState(false);\n    }\n    hasFocus() {\n        return this.children.reduce((focused, element) => focused || element.hasFocus(), false);\n    }\n    toggleState(active) {\n        if (this.active !== active) {\n            this.active = active;\n            this.children.forEach(f => f.toggle(active));\n        }\n    }\n}\nFocusGroup.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nFocusGroup.ctorParameters = () => [\n    { type: FocusRoot }\n];\n\nlet id = 0;\nfunction nextId() {\n    return id++;\n}\n/**\n * @hidden\n */\nclass LogicalCellDirective {\n    constructor(focusGroup, element, columnInfoService, idService, navigationService, renderer, zone, cellContext) {\n        this.focusGroup = focusGroup;\n        this.element = element;\n        this.columnInfoService = columnInfoService;\n        this.idService = idService;\n        this.navigationService = navigationService;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.cellContext = cellContext;\n        this.logicalSlaveCell = false;\n        this.colSpan = 1;\n        this.rowSpan = 1;\n        this.dataRowIndex = -1;\n        this.detailExpandCell = false;\n        this.uid = nextId();\n    }\n    get id() {\n        if (!this.logicalSlaveCell && this.columnInfoService.isLocked) {\n            return this.idService.cellId(this.logicalRowIndex, this.logicalColIndex);\n        }\n    }\n    get ariaColIndex() {\n        if (this.logicalSlaveCell || this.logicalColIndex === -1) {\n            return undefined;\n        }\n        return this.logicalColIndex + 1;\n    }\n    ngOnInit() {\n        if (!this.navigationService.enabled) {\n            return;\n        }\n        this.navigationChange = this.navigationService.changes.subscribe((e) => this.onNavigationChange(e));\n    }\n    ngDoCheck() {\n        if (!this.navigationService.enabled || this.logicalColIndex === -1) {\n            return;\n        }\n        if (this.cellContext) {\n            this.cellContext.focusGroup = this.focusGroup;\n        }\n        this.registerNoChanges();\n    }\n    ngOnChanges(changes) {\n        if (!this.navigationService.enabled) {\n            return;\n        }\n        const keys = Object.keys(changes);\n        if ((keys.length === 1 && keys[0] === 'groupItem') || this.logicalColIndex === -1) {\n            // Ignore groupItem changes as the reference is not stable\n            return;\n        }\n        const indexChange = changes.logicalColIndex;\n        const rowIndexChange = changes.logicalRowIndex;\n        const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalColIndex;\n        const rowIndex = rowIndexChange && !rowIndexChange.isFirstChange() ? rowIndexChange.previousValue : this.logicalRowIndex;\n        this.navigationService.unregisterCell(index, rowIndex, this);\n        this.registerChanges();\n        this.updateElement();\n    }\n    ngOnDestroy() {\n        if (this.navigationChange) {\n            this.navigationChange.unsubscribe();\n        }\n        this.navigationService.unregisterCell(this.logicalColIndex, this.logicalRowIndex, this);\n    }\n    onNavigationChange(e) {\n        const active = this.logicalColIndex === e.colIndex && this.logicalRowIndex === e.rowIndex;\n        const wasActive = this.logicalColIndex === e.prevColIndex && this.logicalRowIndex === e.prevRowIndex;\n        if (active || wasActive) {\n            this.updateElement();\n        }\n    }\n    updateElement() {\n        const el = this.element.nativeElement;\n        this.renderer.setAttribute(el, 'tabIndex', this.isFocusable() && !this.logicalSlaveCell ? '0' : '-1');\n        if (this.isFocused()) {\n            if (this.focusGroup.isNavigable()) {\n                this.focusGroup.focus();\n            }\n            else {\n                if (!this.logicalSlaveCell && this.navigationService.autoFocusCell(this.logicalColIndex, this.logicalColIndex + this.colSpan - 1)) {\n                    this.microtask(() => this.isFocused() && el.focus());\n                }\n                this.renderer.addClass(el, 'k-state-focused');\n            }\n        }\n        else {\n            this.renderer.removeClass(el, 'k-state-focused');\n        }\n    }\n    microtask(callback) {\n        this.zone.runOutsideAngular(() => Promise.resolve(null).then(callback));\n    }\n    registerChanges() {\n        if (!this.logicalSlaveCell) {\n            this.navigationService.registerCell(this);\n        }\n    }\n    registerNoChanges() {\n        if (!this.logicalSlaveCell) {\n            this.navigationService.registerCellOnCurrentRow(this);\n        }\n    }\n    isFocusable() {\n        return this.navigationService.isCellFocusable(this);\n    }\n    isFocused() {\n        return this.navigationService.isCellFocused(this);\n    }\n}\nLogicalCellDirective.decorators = [\n    { type: Directive, args: [{\n                providers: [{\n                        provide: FocusGroup,\n                        deps: [FocusRoot],\n                        useClass: FocusGroup\n                    }],\n                selector: '[kendoGridLogicalCell]'\n            },] },\n];\n/** @nocollapse */\nLogicalCellDirective.ctorParameters = () => [\n    { type: FocusGroup },\n    { type: ElementRef },\n    { type: ColumnInfoService },\n    { type: IdService },\n    { type: NavigationService },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CELL_CONTEXT,] }] }\n];\nLogicalCellDirective.propDecorators = {\n    logicalColIndex: [{ type: Input }],\n    logicalRowIndex: [{ type: Input }],\n    logicalSlaveCell: [{ type: Input }],\n    colIndex: [{ type: Input }],\n    colSpan: [{ type: Input }],\n    rowSpan: [{ type: Input }],\n    groupItem: [{ type: Input }],\n    dataRowIndex: [{ type: Input }],\n    dataItem: [{ type: Input }],\n    detailExpandCell: [{ type: Input }],\n    id: [{ type: HostBinding, args: ['attr.id',] }],\n    ariaColIndex: [{ type: HostBinding, args: ['attr.aria-colindex',] }]\n};\n\nlet id$1 = 0;\nfunction nextId$1() {\n    return id$1++;\n}\n/**\n * @hidden\n */\nclass LogicalRowDirective {\n    constructor(idService, navigation) {\n        this.idService = idService;\n        this.navigation = navigation;\n        this.logicalSlaveRow = false;\n        this.logicalSlaveCellsCount = 0;\n        this.dataRowIndex = -1;\n        this.uid = nextId$1();\n    }\n    get hostRole() {\n        return this.logicalSlaveRow ? 'presentation' : 'row';\n    }\n    get ariaRowIndex() {\n        if (this.navigation.enabled) {\n            return this.logicalRowIndex + 1;\n        }\n    }\n    get ariaOwns() {\n        if (!this.navigation.enabled || this.logicalSlaveRow || this.logicalSlaveCellsCount === 0) {\n            return undefined;\n        }\n        const ids = [];\n        const total = this.logicalCellsCount + this.logicalSlaveCellsCount;\n        for (let cellIndex = this.logicalCellsCount; cellIndex < total; cellIndex++) {\n            ids.push(this.idService.cellId(this.logicalRowIndex, cellIndex));\n        }\n        return ids.join(' ');\n    }\n    ngOnChanges(changes) {\n        if (!this.navigation.enabled || this.logicalSlaveRow) {\n            return;\n        }\n        const indexChange = changes.logicalRowIndex;\n        const logicalSlaveRowChange = changes.logicalSlaveRow;\n        if (indexChange || logicalSlaveRowChange) {\n            const index = indexChange && !indexChange.isFirstChange() ? indexChange.previousValue : this.logicalRowIndex;\n            this.navigation.unregisterRow(index, this);\n            this.navigation.registerRow(this);\n        }\n        else if (anyChanged(['dataRowIndex', 'dataItem'], changes)) {\n            this.navigation.updateRow(this);\n        }\n    }\n    ngOnDestroy() {\n        this.navigation.unregisterRow(this.logicalRowIndex, this);\n    }\n}\nLogicalRowDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridLogicalRow]'\n            },] },\n];\n/** @nocollapse */\nLogicalRowDirective.ctorParameters = () => [\n    { type: IdService },\n    { type: NavigationService }\n];\nLogicalRowDirective.propDecorators = {\n    logicalRowIndex: [{ type: Input }],\n    logicalSlaveRow: [{ type: Input }],\n    logicalCellsCount: [{ type: Input }],\n    logicalSlaveCellsCount: [{ type: Input }],\n    dataRowIndex: [{ type: Input }],\n    dataItem: [{ type: Input }],\n    hostRole: [{ type: HostBinding, args: ['attr.role',] }],\n    ariaRowIndex: [{ type: HostBinding, args: ['attr.aria-rowindex',] }],\n    ariaOwns: [{ type: HostBinding, args: ['attr.aria-owns',] }]\n};\n\n/* tslint:disable:pipe-naming */\nconst FORMAT_REGEX = /\\{\\d+:?/;\n/**\n * @hidden\n */\nclass FieldAccessorPipe {\n    constructor(intlService) {\n        this.intlService = intlService;\n    }\n    transform(dataItem, fieldName, format) {\n        if (!isNullOrEmptyString(fieldName)) {\n            const value = getter(fieldName)(dataItem);\n            if (!isNullOrEmptyString(format)) {\n                return this.formatValue(format, value);\n            }\n            return value;\n        }\n        return dataItem;\n    }\n    formatValue(format, value) {\n        const intl = this.intlService;\n        if (isString(format) && format.match(FORMAT_REGEX)) {\n            return intl.format(format, value);\n        }\n        return intl.toString(value, format);\n    }\n}\nFieldAccessorPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'valueOf',\n                pure: false\n            },] },\n];\n/** @nocollapse */\nFieldAccessorPipe.ctorParameters = () => [\n    { type: IntlService }\n];\n\n/**\n * @hidden\n */\nconst columnsToResize = ({ columns }) => Math.max(1, resizableColumns(columns).length);\n/**\n * @hidden\n */\nconst row = selector => element => element.querySelector(selector);\n/**\n * @hidden\n */\nconst headerRow = index => element => element.querySelectorAll('thead>tr')[index];\n/**\n * @hidden\n */\nconst cell = (index, selector = 'td') => element => element.querySelectorAll(`${selector}:not(.k-group-cell):not(.k-hierarchy-cell)`)[index];\n/**\n * @hidden\n */\nconst offsetWidth = element => element.offsetWidth;\n/**\n * @hidden\n */\nconst pipe = (...fns) => data => fns.reduce((state$$1, fn) => state$$1 ? fn(state$$1) : 0, data);\n/**\n * @hidden\n */\nclass TableDirective {\n    constructor(element, renderer, service, zone, cdr) {\n        this.element = element;\n        this.renderer = renderer;\n        this.service = service;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.locked = false;\n        this.firstResize = false;\n    }\n    get minWidth() {\n        return this.firstResize ? 0 : null;\n    }\n    ngOnInit() {\n        const obs = this.service\n            .changes.pipe(filter(e => this.locked === e.locked));\n        this.subscription = obs.pipe(filter(e => e.type === 'start'), tap(this.initState.bind(this)), map(columnsToResize), switchMap((take$$1) => obs.pipe(filter(e => e.type === 'resizeTable'), map(e => e.delta), bufferCount(take$$1)))).subscribe(this.resize.bind(this));\n        this.autoFitSubscription = this.service\n            .registerTable({\n            autoFit: this.autoFitObservable.bind(this),\n            locked: this.locked\n        });\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.autoFitSubscription) {\n            this.autoFitSubscription();\n            this.autoFitSubscription = null;\n        }\n    }\n    initState() {\n        this.firstResize = true;\n        if (!this.virtualColumns || this.locked) {\n            this.originalWidth = offsetWidth(this.element.nativeElement);\n        }\n    }\n    resize(deltas) {\n        if (!this.virtualColumns || this.locked) {\n            const delta = deltas.reduce((sum, item) => sum + item, 0);\n            const width = this.originalWidth + delta;\n            this.renderer.setStyle(this.element.nativeElement, 'width', width + 'px');\n        }\n        this.cdr.detectChanges();\n    }\n    autoFitObservable(columnInfo) {\n        return Observable.create(observer => {\n            this.zone.runOutsideAngular(() => {\n                this.renderer.addClass(this.element.nativeElement, 'k-autofitting');\n                this.cdr.detectChanges();\n                const widths = columnInfo.map(this.measureColumn.bind(this));\n                this.renderer.removeClass(this.element.nativeElement, 'k-autofitting');\n                observer.next(widths);\n            });\n        });\n    }\n    measureColumn(info) {\n        const dom = this.element.nativeElement;\n        const header = pipe(headerRow(info.level), cell(info.headerIndex, 'th'), offsetWidth)(dom);\n        let data = 0;\n        if (!info.isParentSpan || (info.isParentSpan && info.isLastInSpan)) {\n            data = pipe(row('tbody>tr:not(.k-grouping-row):not(.k-grid-norecords)'), cell(info.index), offsetWidth)(dom);\n        }\n        const footer = pipe(row('tfoot>tr'), cell(info.index), offsetWidth)(dom);\n        return Math.max(header, data, footer);\n    }\n}\nTableDirective.decorators = [\n    { type: Directive, args: [{\n                selector: 'table' // tslint:disable-line:directive-selector\n            },] },\n];\n/** @nocollapse */\nTableDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ColumnResizingService },\n    { type: NgZone },\n    { type: ChangeDetectorRef }\n];\nTableDirective.propDecorators = {\n    locked: [{ type: Input }],\n    virtualColumns: [{ type: Input }],\n    minWidth: [{ type: HostBinding, args: ['style.min-width',] }]\n};\n\nconst exportedModules = [\n    ColumnComponent,\n    ColumnGroupComponent,\n    LogicalCellDirective,\n    LogicalRowDirective,\n    FocusableDirective,\n    FooterTemplateDirective,\n    ColGroupComponent,\n    ResizableContainerDirective,\n    TemplateContextDirective,\n    FieldAccessorPipe,\n    DetailTemplateDirective,\n    SpanColumnComponent,\n    TableDirective,\n    LoadingComponent\n];\n/**\n * @hidden\n */\nclass SharedModule {\n    static exports() {\n        return [\n            ColumnComponent,\n            SpanColumnComponent,\n            ColumnGroupComponent,\n            FooterTemplateDirective,\n            DetailTemplateDirective,\n            FocusableDirective\n        ];\n    }\n}\nSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exportedModules],\n                exports: [exportedModules, DraggableModule, EventsModule],\n                imports: [CommonModule]\n            },] },\n];\n\n/**\n * Represents the `Contains` (**Contains**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass ContainsFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"contains\", localization); }\n}\nContainsFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => ContainsFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-contains-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nContainsFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `DoesNotContain` (**Does not contain**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass DoesNotContainFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"doesnotcontain\", localization); }\n}\nDoesNotContainFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => DoesNotContainFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-not-contains-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nDoesNotContainFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `EndsWith` (**Ends with**) string filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass EndsWithFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"endswith\", localization); }\n}\nEndsWithFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => EndsWithFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-endswith-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nEndsWithFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `Equal` (**Is equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass EqualFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"eq\", localization); }\n}\nEqualFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => EqualFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-eq-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nEqualFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `IsEmpty` (**Is empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass IsEmptyFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isempty\", localization); }\n}\nIsEmptyFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => IsEmptyFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-isempty-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nIsEmptyFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `IsNotEmpty` (**Is not empty**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass IsNotEmptyFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnotempty\", localization); }\n}\nIsNotEmptyFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => IsNotEmptyFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-isnotempty-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nIsNotEmptyFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `IsNotNull` (**Is not null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass IsNotNullFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnotnull\", localization); }\n}\nIsNotNullFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => IsNotNullFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-isnotnull-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nIsNotNullFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `IsNull` (**Is null**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass IsNullFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"isnull\", localization); }\n}\nIsNullFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => IsNullFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-isnull-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nIsNullFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `NotEqual` (**Is not equal to**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass NotEqualFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"neq\", localization); }\n}\nNotEqualFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => NotEqualFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-neq-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nNotEqualFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `StartsWith` (**Starts with**) filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass StartsWithFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"startswith\", localization); }\n}\nStartsWithFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => StartsWithFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-startswith-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nStartsWithFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `Greater` (**Is greater than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass GreaterFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"gt\", localization); }\n}\nGreaterFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => GreaterFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-gt-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nGreaterFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/**\n * Represents the `GreaterOrEqualTo` (**Is greater than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass GreaterOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"gte\", localization); }\n}\nGreaterOrEqualToFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => GreaterOrEqualToFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-gte-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nGreaterOrEqualToFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `Less` (**Is less than**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass LessFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"lt\", localization); }\n}\nLessFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => LessFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-lt-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nLessFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `LessOrEqualTo` (**Is less than or equal to**) numeric filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass LessOrEqualToFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"lte\", localization); }\n}\nLessOrEqualToFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => LessOrEqualToFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-lte-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nLessOrEqualToFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `Greater` (**Is after**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass AfterFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"after\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"gt\"\n        };\n    }\n}\nAfterFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => AfterFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-after-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nAfterFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `GreaterOrEqualTo` (**Is after or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass AfterEqFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"after-eq\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"gte\"\n        };\n    }\n}\nAfterEqFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => AfterEqFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-after-eq-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nAfterEqFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `LessOrEqualTo` (**Is before or equal to**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass BeforeEqFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"before-eq\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"lte\"\n        };\n    }\n}\nBeforeEqFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => BeforeEqFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-before-eq-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nBeforeEqFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\n/*\n * Represents the `Less then` (**Is before**) date filter operator.\n *\n * For more information and examples, refer to:\n * * [Setting the default filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-default-filter-operator)\n * * [Setting the order of the filter operators]({% slug builtinfiltertemplate_grid %}#toc-setting-the-order-of-the-filter-operators)\n */\nclass BeforeFilterOperatorComponent extends FilterOperatorBase {\n    constructor(localization) { super(\"before\", localization); }\n    /**\n     * @hidden\n     */\n    toJSON() {\n        return {\n            text: this.text,\n            value: \"lt\"\n        };\n    }\n}\nBeforeFilterOperatorComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: FilterOperatorBase,\n                        useExisting: forwardRef(() => BeforeFilterOperatorComponent)\n                    }\n                ],\n                selector: 'kendo-filter-before-operator',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nBeforeFilterOperatorComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\n\nconst FILTER_OPERATORS = [\n    FilterCellOperatorsComponent,\n    ContainsFilterOperatorComponent,\n    DoesNotContainFilterOperatorComponent,\n    EndsWithFilterOperatorComponent,\n    EqualFilterOperatorComponent,\n    IsEmptyFilterOperatorComponent,\n    IsNotEmptyFilterOperatorComponent,\n    IsNotNullFilterOperatorComponent,\n    IsNullFilterOperatorComponent,\n    NotEqualFilterOperatorComponent,\n    StartsWithFilterOperatorComponent,\n    GreaterFilterOperatorComponent,\n    GreaterOrEqualToFilterOperatorComponent,\n    LessFilterOperatorComponent,\n    LessOrEqualToFilterOperatorComponent,\n    AfterFilterOperatorComponent,\n    AfterEqFilterOperatorComponent,\n    BeforeEqFilterOperatorComponent,\n    BeforeFilterOperatorComponent\n];\nconst importedModules = [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DropDownListModule,\n    AutoCompleteModule,\n    InputsModule,\n    DatePickerModule,\n    PopupModule,\n    SharedModule\n];\nconst COMPONENTS = [\n    FilterInputDirective\n];\n/**\n * @hidden\n */\nclass SharedFilterModule {\n    static exports() {\n        return [\n            ...FILTER_OPERATORS\n        ];\n    }\n}\nSharedFilterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FILTER_OPERATORS, COMPONENTS],\n                exports: [FILTER_OPERATORS, importedModules, COMPONENTS],\n                imports: [...importedModules]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass FilterHostDirective {\n    constructor(host, resolver) {\n        this.host = host;\n        this.resolver = resolver;\n    }\n    ngOnInit() {\n        this.component = this.host.createComponent(this.resolver.resolveComponentFactory(this.componentType()));\n        this.initComponent({\n            column: this.column,\n            filter: this.filter\n        });\n    }\n    ngOnDestroy() {\n        if (this.component) {\n            this.component.destroy();\n            this.component = null;\n        }\n    }\n    ngOnChanges(changes) {\n        if (anyChanged([\"column\", \"filter\"], changes)) {\n            this.initComponent({\n                column: this.column,\n                filter: this.filter\n            });\n        }\n    }\n    initComponent({ column, filter: filter$$1 }) {\n        const instance = this.component.instance;\n        instance.column = column;\n        instance.filter = filter$$1;\n    }\n}\nFilterHostDirective.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }]\n};\n\n/**\n * @hidden\n *\n * > List the following components in the GridModule as `entryComponents`.\n */\nconst filterComponentFactory = (type) => ({\n    \"boolean\": BooleanFilterCellComponent,\n    \"date\": DateFilterCellComponent,\n    \"numeric\": NumericFilterCellComponent,\n    \"text\": StringFilterCellComponent\n}[type]);\n\n/**\n * @hidden\n */\nclass FilterCellHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n        super(host, resolver);\n    }\n    componentType() {\n        if (!isNullOrEmptyString(this.column.filter)) {\n            return filterComponentFactory(this.column.filter);\n        }\n        return StringFilterCellComponent;\n    }\n}\nFilterCellHostDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoFilterCellHost]'\n            },] },\n];\n/** @nocollapse */\nFilterCellHostDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver }\n];\n\nconst INTERNAL_COMPONENTS = [\n    FilterRowComponent,\n    FilterCellComponent,\n    FilterCellTemplateDirective,\n    StringFilterCellComponent,\n    NumericFilterCellComponent,\n    AutoCompleteFilterCellComponent,\n    BooleanFilterCellComponent,\n    FilterCellHostDirective,\n    FilterCellWrapperComponent,\n    DateFilterCellComponent\n];\nconst ENTRY_COMPONENTS = [\n    StringFilterCellComponent,\n    NumericFilterCellComponent,\n    BooleanFilterCellComponent,\n    DateFilterCellComponent\n];\n/**\n * @hidden\n */\nclass RowFilterModule {\n    static exports() {\n        return [\n            FilterRowComponent,\n            FilterCellComponent,\n            FilterCellTemplateDirective,\n            FilterCellOperatorsComponent,\n            StringFilterCellComponent,\n            NumericFilterCellComponent,\n            AutoCompleteFilterCellComponent,\n            BooleanFilterCellComponent,\n            DateFilterCellComponent,\n            SharedFilterModule.exports()\n        ];\n    }\n}\nRowFilterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [INTERNAL_COMPONENTS],\n                entryComponents: ENTRY_COMPONENTS,\n                exports: [INTERNAL_COMPONENTS, SharedFilterModule],\n                imports: [SharedFilterModule]\n            },] },\n];\n\n/**\n * @hidden\n */\nconst normalizeSettings = ({ buttonCount = 10, info = true, type = 'numeric', pageSizes = false, previousNext = true }) => ({\n    buttonCount,\n    info,\n    pageSizes: pageSizes === true ? [5, 10, 20] : pageSizes,\n    previousNext,\n    type\n});\n/**\n * @hidden\n */\nconst normalize = (settings) => normalizeSettings(settings === true ? {} : settings);\n\n/**\n * @hidden\n */\nclass PagerComponent {\n    constructor(pagerContext) {\n        this.pagerContext = pagerContext;\n        this.total = 0;\n        this.skip = 1;\n        this.pageChange = new EventEmitter();\n        this.settings = normalize({});\n        this._templateContext = {};\n    }\n    set options(value) {\n        this.settings = normalize(value);\n    }\n    get pagerWrapClass() {\n        return true;\n    }\n    get gridPagerClass() {\n        return true;\n    }\n    get widgetClass() {\n        return true;\n    }\n    get totalPages() {\n        return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    get currentPage() {\n        return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    get templateContext() {\n        const context = this._templateContext;\n        context.totalPages = this.totalPages;\n        context.total = this.total;\n        context.skip = this.skip;\n        context.pageSize = this.pageSize;\n        context.currentPage = this.currentPage;\n        return context;\n    }\n    ngOnInit() {\n        this.pageChangeSubscription = this.pagerContext.pageChange.subscribe(this.changePage.bind(this));\n    }\n    ngOnChanges(changes) {\n        if (anyChanged([\"pageSize\", \"skip\", \"total\"], changes, false)) {\n            this.pagerContext.notifyChanges({\n                pageSize: this.pageSize,\n                skip: this.skip,\n                total: this.total\n            });\n        }\n    }\n    ngOnDestroy() {\n        if (this.pageChangeSubscription) {\n            this.pageChangeSubscription.unsubscribe();\n        }\n    }\n    changePage(event) {\n        this.pageChange.emit(event);\n    }\n}\nPagerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-pager',\n                template: `\n        <ng-container\n            *ngIf=\"template?.templateRef\"\n            [ngTemplateOutlet]=\"template.templateRef\"\n            [ngTemplateOutletContext]=\"templateContext\">\n        </ng-container>\n        <ng-container *ngIf=\"!template?.templateRef\">\n            <kendo-pager-prev-buttons *ngIf=\"settings.previousNext\"></kendo-pager-prev-buttons>\n            <kendo-pager-numeric-buttons\n                *ngIf=\"settings.type === 'numeric'\"\n                [buttonCount]=\"settings.buttonCount\">\n            </kendo-pager-numeric-buttons>\n            <kendo-pager-input *ngIf=\"settings.type === 'input'\"></kendo-pager-input>\n            <kendo-pager-next-buttons *ngIf=\"settings.previousNext\"></kendo-pager-next-buttons>\n            <kendo-pager-info *ngIf='settings.info'></kendo-pager-info>\n            <kendo-pager-page-sizes *ngIf=\"settings.pageSizes\" [pageSizes]=\"settings.pageSizes\"></kendo-pager-page-sizes>\n        </ng-container>\n  `\n            },] },\n];\n/** @nocollapse */\nPagerComponent.ctorParameters = () => [\n    { type: PagerContextService }\n];\nPagerComponent.propDecorators = {\n    total: [{ type: Input }],\n    skip: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    options: [{ type: Input }],\n    template: [{ type: Input }],\n    pageChange: [{ type: Output }],\n    pagerWrapClass: [{ type: HostBinding, args: ['class.k-pager-wrap',] }],\n    gridPagerClass: [{ type: HostBinding, args: ['class.k-grid-pager',] }],\n    widgetClass: [{ type: HostBinding, args: ['class.k-widget',] }]\n};\n\n/**\n * @hidden\n */\nclass PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n        this.localization = localization;\n        this.pagerContext = pagerContext;\n        this.cd = cd;\n        this.total = this.pagerContext.total;\n        this.skip = this.pagerContext.skip;\n        this.pageSize = this.pagerContext.pageSize;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get currentPage() {\n        return Math.floor((this.skip || 0) / this.pageSize) + 1;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerElementComponent\n     */\n    get totalPages() {\n        return Math.ceil((this.total || 0) / this.pageSize);\n    }\n    /**\n     * @hidden\n     *\n     * @param {string} key\n     * @returns {string}\n     *\n     * @memberOf PagerElementComponent\n     */\n    textFor(key) {\n        return this.localization.get(key);\n    }\n    /**\n     * @hidden\n     *\n     * @param {number} page\n     *\n     * @memberOf PagerElementComponent\n     */\n    changePage(page) {\n        this.pagerContext.changePage(page);\n        return false;\n    }\n    /**\n     * @hidden\n     *\n     * @memberOf PagerElementComponent\n     */\n    ngOnInit() {\n        this.subscriptions = this.pagerContext.changes.subscribe(this.onChanges.bind(this));\n        this.subscriptions.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n}\n\n// tslint:disable:no-access-missing-member\n/**\n * Displays buttons for navigating to the first and to the previous page ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerPrevButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n        super(localization, pagerContext, cd);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerPrevButtonsComponent\n     */\n    get disabled() {\n        return this.currentPage === 1 || !this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerPrevButtonsComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-pager-prev-buttons',\n                template: `\n        <a  href=\"#\"\n            tabindex=\"-1\"\n            [title]=\"textFor('pagerFirstPage')\"\n            (click)=\"currentPage !== 1 ? changePage(0) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-state-disabled': disabled,\n                'k-pager-first': true\n            }\">\n            <span [attr.aria-label]=\"textFor('pagerFirstPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-seek-w': true\n                }\">\n            </span>\n        </a>\n        <a  href=\"#\"\n            tabindex=\"-1\"\n            [title]=\"textFor('pagerPreviousPage')\"\n            (click)=\"currentPage !== 1 ? changePage(currentPage-2) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-state-disabled': disabled,\n                '': true\n            }\">\n            <span [attr.aria-label]=\"textFor('pagerPreviousPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-arrow-w': true\n                }\">\n            </span>\n        </a>\n    `\n            },] },\n];\n/** @nocollapse */\nPagerPrevButtonsComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PagerContextService },\n    { type: ChangeDetectorRef }\n];\n\n// tslint:disable: no-access-missing-member\n/**\n * Displays buttons for navigating to the next and to the last page ([see example]({% slug paging_grid %}#toc-pager-template)).\n */\nclass PagerNextButtonsComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, cd) {\n        super(localization, pagerContext, cd);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerNextButtonsComponent\n     */\n    get disabled() {\n        return this.currentPage === this.totalPages || !this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerNextButtonsComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-pager-next-buttons',\n                template: `\n        <a  href=\"#\"\n            tabindex=\"-1\"\n            [title]=\"textFor('pagerNextPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(currentPage) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-state-disabled': disabled,\n                '': true\n            }\">\n            <span [attr.aria-label]=\"textFor('pagerNextPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-arrow-e': true\n                }\">\n            </span>\n        </a>\n        <a  href=\"#\"\n            tabindex=\"-1\"\n            [title]=\"textFor('pagerLastPage')\"\n            (click)=\"currentPage !== totalPages ? changePage(totalPages-1) : false\"\n            [ngClass]=\"{\n                'k-link': true,\n                'k-pager-nav': true,\n                'k-state-disabled': disabled,\n                'k-pager-last': true\n            }\">\n            <span [attr.aria-label]=\"textFor('pagerLastPage')\"\n                [ngClass]=\"{\n                    'k-icon':true,\n                    'k-i-seek-e': true\n                }\">\n            </span>\n        </a>\n    `\n            },] },\n];\n/** @nocollapse */\nPagerNextButtonsComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PagerContextService },\n    { type: ChangeDetectorRef }\n];\n\n/**\n * Displays numeric buttons to enable navigation between the pages.\n */\nclass PagerNumericButtonsComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number[]}\n     * @memberOf PagerNumericButtonsComponent\n     */\n    get buttons() {\n        let result = [];\n        for (let idx = this.start; idx <= this.end; idx++) {\n            result.push(idx);\n        }\n        return result;\n    }\n    /**\n     * @hidden\n     */\n    get end() {\n        return Math.min((this.start + this.buttonCount) - 1, this.totalPages);\n    }\n    /**\n     * @hidden\n     */\n    get start() {\n        const page = this.currentPage;\n        const buttonCount = this.buttonCount;\n        if (page > buttonCount) {\n            const reminder = (page % buttonCount);\n            return (reminder === 0) ? (page - buttonCount) + 1 : (page - reminder) + 1;\n        }\n        return 1;\n    }\n    /**\n     * @hidden\n     */\n    pageLabel(num) {\n        const pageText = this.textFor('pagerPage');\n        if (pageText) {\n            return pageText + ' ' + num;\n        }\n        return num.toString();\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerNumericButtonsComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-pager-numeric-buttons',\n                template: `\n       <ul [ngClass]=\"{'k-pager-numbers': true, 'k-reset': true}\">\n            <li *ngIf=\"start > 1\">\n                <a  class=\"k-link\"\n                    [attr.aria-label]=\"pageLabel(start - 1)\"\n                    href=\"#\"\n                    tabindex=\"-1\"\n                    (click)=\"changePage(start - 2)\">...</a>\n            </li>\n            <li *ngFor=\"let num of buttons\">\n                <a  href=\"#\"\n                    [attr.aria-label]=\"pageLabel(num)\"\n                    tabindex=\"-1\"\n                    [ngClass]=\"{'k-link': true, 'k-state-selected':currentPage == num}\"\n                    (click)=\"changePage(num - 1)\">\n                    {{num}}\n                </a>\n            </li>\n            <li *ngIf=\"end < totalPages\">\n                <a  class=\"k-link\"\n                    [attr.aria-label]=\"pageLabel(end + 1)\"\n                    href=\"#\"\n                    tabindex=\"-1\"\n                    (click)=\"changePage(end)\">...</a>\n            </li>\n        </ul>\n    `\n            },] },\n];\n/** @nocollapse */\nPagerNumericButtonsComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: PagerContextService }\n];\nPagerNumericButtonsComponent.propDecorators = {\n    buttonCount: [{ type: Input }]\n};\n\n/**\n * Displays an input element which allows the typing and rendering of page numbers.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *      <kendo-grid\n *        [kendoGridBinding]=\"gridData\"\n *        [pageSize]=\"1\"\n *        [pageable]=\"true\"\n *      >\n *       <kendo-grid-column field=\"ProductID\" title=\"ID\" width=\"40\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"ProductName\" title=\"Name\" width=\"250\">\n *       </kendo-grid-column>\n *       <kendo-grid-column field=\"UnitPrice\" title=\"Price\" width=\"80\" format=\"{0:c}\">\n *       </kendo-grid-column>\n *\n *       <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n *          <kendo-pager-prev-buttons></kendo-pager-prev-buttons>\n *          <kendo-pager-numeric-buttons [buttonCount]=\"10\"></kendo-pager-numeric-buttons>\n *          <kendo-pager-next-buttons></kendo-pager-next-buttons>\n *          <kendo-pager-input></kendo-pager-input>\n *          <kendo-pager-info></kendo-pager-info>\n *       </ng-template>\n *\n *    </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000,\n *         \"Discontinued\": false\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000,\n *         \"Discontinued\": true\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PagerInputComponent extends PagerElementComponent {\n    constructor(localization, pagerContext, zone, cd) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n        this.zone = zone;\n        /**\n         * @hidden\n         *\n         * @param {string} value\n         *\n         * @memberOf PagerInputComponent\n         */\n        this.handleKeyDown = (event) => {\n            let incomingValue = this.numericInput.value || this.current;\n            if (event.keyCode === Keys.Enter) {\n                event.preventDefault();\n                if (incomingValue !== this.current) {\n                    this.zone.run(() => {\n                        this.changePage(incomingValue - 1);\n                    });\n                }\n            }\n        };\n        /**\n         * @hidden\n         *\n         * @param {string} value\n         *\n         * @memberOf PagerInputComponent\n         */\n        this.handleBlur = () => {\n            const inputValue = this.numericInput.value;\n            if (!inputValue) {\n                this.numericInput.writeValue(this.current);\n                return;\n            }\n            if (inputValue !== this.current) {\n                this.zone.run(() => {\n                    this.changePage(inputValue - 1);\n                });\n            }\n        };\n    }\n    /**\n     * @hidden\n     */\n    get current() {\n        return this.hasPages ? this.currentPage : 0;\n    }\n    get hasPages() {\n        return this.totalPages !== 0;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerInputComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-pager-input',\n                template: `\n     <span [ngClass]=\"{'k-pager-input': true, 'k-label': true}\">\n        {{textFor('pagerPage')}}\n        <kendo-numerictextbox\n            [spinners]=\"false\"\n            [decimals]=\"0\"\n            format=\"n0\"\n            [disabled]=\"!hasPages\"\n            [value]=\"current\"\n            [min]=\"hasPages ? 1 : 0\"\n            [max]=\"totalPages\"\n            [autoCorrect]=\"true\"\n            [title]=\"textFor('pagerPageNumberInputTitle')\"\n            [kendoEventsOutsideAngular]=\"{\n                keydown: handleKeyDown,\n                focusout: handleBlur\n            }\">\n        </kendo-numerictextbox>\n        {{textFor('pagerOf')}} {{totalPages}}\n     </span>\n    `\n            },] },\n];\n/** @nocollapse */\nPagerInputComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: PagerContextService },\n    { type: NgZone },\n    { type: ChangeDetectorRef }\n];\nPagerInputComponent.propDecorators = {\n    numericInput: [{ type: ViewChild, args: [NumericTextBoxComponent,] }]\n};\n\n// tslint:disable:no-access-missing-member\n/**\n * Displays information about the current page and the total number of records ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerInfoComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get maxItems() {\n        return Math.min(this.currentPage * this.pageSize, this.total);\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {number}\n     * @memberOf PagerInfoComponent\n     */\n    get currentPageText() {\n        return this.total ?\n            (this.currentPage - 1) * this.pageSize + 1 :\n            0;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     * @type {boolean}\n     * @memberOf PagerInfoComponent\n     */\n    get classes() {\n        return true;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = pageSize;\n        this.cd.markForCheck();\n    }\n}\nPagerInfoComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-pager-info',\n                template: `{{currentPageText}} - {{maxItems}} {{textFor('pagerOf')}} {{total}} {{textFor('pagerItems')}}`\n            },] },\n];\n/** @nocollapse */\nPagerInfoComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: PagerContextService }\n];\nPagerInfoComponent.propDecorators = {\n    classes: [{ type: HostBinding, args: [\"class.k-pager-info\",] }, { type: HostBinding, args: [\"class.k-label\",] }]\n};\n\n// tslint:disable:no-access-missing-member\n/**\n * Displays a drop-down list for the page size selection ([see example]({% slug paging_grid %}#toc-pager-templates)).\n */\nclass PagerPageSizesComponent extends PagerElementComponent {\n    constructor(localization, cd, pagerContext) {\n        super(localization, pagerContext, cd);\n        this.pagerContext = pagerContext;\n        this._pageSizes = [];\n    }\n    get pageSizes() {\n        return this._pageSizes;\n    }\n    /**\n     * The page sizes collection. Can be an Array of numbers and/or PageSizeItem objects.\n     *\n     * @example\n     * ```ts-preview\n     * _@Component({\n     *    selector: 'my-app',\n     *    template: `\n     *        <kendo-grid [kendoGridBinding]=\"gridData\" [height]=\"200\"\n     *           [pageable]=\"true\"\n     *            [pageSize]=\"pageSize\">\n     *            <ng-template kendoPagerTemplate let-totalPages=\"totalPages\" let-currentPage=\"currentPage\">\n     *                <kendo-pager-page-sizes [pageSizes]=\"pagesizes\"></kendo-pager-page-sizes>\n     *            </ng-template>\n     *        </kendo-grid>\n     *    `\n     * })\n     * class AppComponent {\n     *    public gridData: any[] = products;\n     *    public pageSize = 2;\n     *    public pagesizes = [{text: 'One', value: 1}, {text: 'Two', value: 2}, {text: 'All', value : 'all'}];\n     * }\n     *\n     * const products = [{\n     *   'ProductID' : 1,\n     *   'ProductName' : \"Chai\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"10 boxes x 20 bags\",\n     *   'UnitPrice' : 18.0000,\n     *   'UnitsInStock' : 39,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 10,\n     *   'Discontinued' : false\n     *\n     * }, {\n     *   'ProductID' : 2,\n     *   'ProductName' : \"Chang\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 1,\n     *   'QuantityPerUnit' : \"24 - 12 oz bottles\",\n     *   'UnitPrice' : 19.0000,\n     *   'UnitsInStock' : 17,\n     *   'UnitsOnOrder' : 40,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 3,\n     *   'ProductName' : \"Aniseed Syrup\",\n     *   'SupplierID' : 1,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 550 ml bottles\",\n     *   'UnitPrice' : 10.0000,\n     *   'UnitsInStock' : 13,\n     *   'UnitsOnOrder' : 70,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 4,\n     *   'ProductName' : \"Chef Anton\\'s Cajun Seasoning\",\n     *   'SupplierID' : 2,\n     *  'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"48 - 6 oz jars\",\n     *   'UnitPrice' : 22.0000,\n     *   'UnitsInStock' : 53,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : false\n     * }, {\n     *   'ProductID' : 5,\n     *   'ProductName' : \"Chef Anton\\'s Gumbo Mix\",\n     *   'SupplierID' : 2,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"36 boxes\",\n     *   'UnitPrice' : 21.3500,\n     *   'UnitsInStock' : 0,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 0,\n     *   'Discontinued' : true\n     * }, {\n     *   'ProductID' : 6,\n     *   'ProductName' : \"Grandma\\'s Boysenberry Spread\",\n     *   'SupplierID' : 3,\n     *   'CategoryID' : 2,\n     *   'QuantityPerUnit' : \"12 - 8 oz jars\",\n     *   'UnitPrice' : 25.0000,\n     *   'UnitsInStock' : 120,\n     *   'UnitsOnOrder' : 0,\n     *   'ReorderLevel' : 25,\n     *   'Discontinued' : false\n     * }];\n     * ```\n     */\n    set pageSizes(pageSizes) {\n        const normalizedItems = [];\n        pageSizes.forEach(item => {\n            if (typeof item === 'number') {\n                normalizedItems.push({\n                    text: item.toString(),\n                    value: item\n                });\n            }\n            else {\n                normalizedItems.push(item);\n            }\n        });\n        this._pageSizes = normalizedItems;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n    get classes() {\n        return true;\n    }\n    /**\n     * @hidden\n     *\n     * @readonly\n     */\n    get showInitialPageSize() {\n        return this.pageSizes\n            .filter(item => {\n            if (typeof item.value === 'number') {\n                return item.value === Number(this.pageSize);\n            }\n            return this.total === Number(this.pageSize);\n        })\n            .length === 0;\n    }\n    /**\n     * @hidden\n     */\n    pageSizeChange(value) {\n        this.pageSize = parseInt(value, 10);\n        this.pagerContext.changePageSize(this.pageSize);\n    }\n    /**\n     * @hidden\n     */\n    getValue(page) {\n        return typeof page.value === 'number' ? page.value : this.total;\n    }\n    /**\n     * @hidden\n     */\n    getSelectedState(page) {\n        if (typeof page.value === 'number') {\n            return page.value === this.pageSize ? true : undefined;\n        }\n        return this.pageSize === this.total;\n    }\n    onChanges({ total, skip, pageSize }) {\n        this.total = total;\n        this.skip = skip;\n        this.pageSize = typeof pageSize === 'number' ? pageSize : this.total;\n        this.cd.markForCheck();\n    }\n}\nPagerPageSizesComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-pager-page-sizes',\n                template: `\n        <select #select\n            (change)=\"pageSizeChange(select.value)\"\n            [attr.aria-label]=\"textFor('pagerItemsPerPage')\">\n            <option *ngIf=\"showInitialPageSize\" [value]=\"pageSize\">{{pageSize}}</option>\n            <option *ngFor=\"let page of pageSizes\" [value]=\"getValue(page)\" [selected]=\"getSelectedState(page)\">\n                {{page['text']}}\n            </option>\n        </select>\n        {{ textFor('pagerItemsPerPage') }}\n    `\n            },] },\n];\n/** @nocollapse */\nPagerPageSizesComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ChangeDetectorRef },\n    { type: PagerContextService }\n];\nPagerPageSizesComponent.propDecorators = {\n    pageSizes: [{ type: Input }],\n    classes: [{ type: HostBinding, args: [\"class.k-pager-sizes\",] }, { type: HostBinding, args: [\"class.k-label\",] }]\n};\n\nconst importedModules$1 = [\n    CommonModule,\n    InputsModule,\n    SharedModule\n];\nconst INTERNAL_COMPONENTS$1 = [\n    PagerComponent,\n    PagerPrevButtonsComponent,\n    PagerNextButtonsComponent,\n    PagerNumericButtonsComponent,\n    PagerInputComponent,\n    PagerInfoComponent,\n    PagerPageSizesComponent,\n    PagerTemplateDirective\n];\n/**\n * @hidden\n */\nclass PagerModule {\n    static exports() {\n        return [\n            PagerComponent,\n            PagerPrevButtonsComponent,\n            PagerNextButtonsComponent,\n            PagerNumericButtonsComponent,\n            PagerInputComponent,\n            PagerInfoComponent,\n            PagerPageSizesComponent,\n            PagerTemplateDirective\n        ];\n    }\n}\nPagerModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [INTERNAL_COMPONENTS$1],\n                exports: [INTERNAL_COMPONENTS$1],\n                imports: [...importedModules$1]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass GroupHeaderComponent {\n    constructor(groupsService, groupInfoService) {\n        this.groupsService = groupsService;\n        this.groupInfoService = groupInfoService;\n        this.skipGroupDecoration = false;\n        this.hasDetails = false;\n        this.totalColumnsCount = 0;\n        this.groups = [];\n        this.isExpanded = false;\n    }\n    get groupItemClass() {\n        return true;\n    }\n    ngDoCheck() {\n        this.isExpanded = this.groupsService.isExpanded(this.item.index);\n    }\n    prefixGroupCell(item) {\n        return new Array(item.level);\n    }\n    toggleGroup(item) {\n        this.groupsService.toggleRow(item.index, item.data);\n        return false;\n    }\n    groupSpan(item) {\n        const groupCount = (this.groups || []).length;\n        const detailOffset = this.hasDetails ? 1 : 0;\n        if (this.hasGroupHeaderColumn) {\n            return groupCount + 1 + detailOffset - item.level;\n        }\n        let columnCount = columnsSpan(this.columns);\n        if (this.skipGroupDecoration) {\n            return columnCount;\n        }\n        return groupCount + columnCount + detailOffset - item.level;\n    }\n    logicalColSpan() {\n        return this.skipGroupDecoration ? 1 : this.totalColumnsCount;\n    }\n    ariaRole() {\n        if (this.skipGroupDecoration) {\n            return 'presentation';\n        }\n        return 'gridcell';\n    }\n    formatForGroup(item) {\n        return this.groupInfoService.formatForGroup(item);\n    }\n    groupTitle(item) {\n        return this.groupInfoService.groupTitle(item);\n    }\n    groupHeaderTemplate(item) {\n        return this.groupInfoService.groupHeaderTemplate(item);\n    }\n}\nGroupHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridGroupHeader]',\n                template: `\n        <ng-template [ngIf]=\"!skipGroupDecoration\">\n            <td class=\"k-group-cell\"\n                role=\"presentation\"\n                *ngFor=\"let g of prefixGroupCell(item)\"></td>\n        </ng-template>\n        <td [attr.colspan]=\"groupSpan(item)\" *ngIf=\"!(skipGroupDecoration && hasGroupHeaderColumn)\"\n            [attr.role]=\"ariaRole()\"\n            aria-selected=\"false\"\n            [attr.aria-expanded]=\"isExpanded\"\n            kendoGridLogicalCell\n            [logicalRowIndex]=\"logicalRowIndex\"\n            [logicalColIndex]=\"0\"\n            [logicalSlaveCell]=\"skipGroupDecoration\"\n            [groupItem]=\"item\"\n            [colSpan]=\"logicalColSpan()\">\n            <p class=\"k-reset\">\n                <ng-template [ngIf]=\"!skipGroupDecoration\">\n                    <a href=\"#\" tabindex=\"-1\" (click)=\"toggleGroup(item)\"\n                        class=\"k-icon\"\n                        [ngClass]=\"{ 'k-i-collapse': isExpanded, 'k-i-expand': !isExpanded }\" role=\"presentation\">\n                    </a>\n                    <ng-template [ngIf]=\"!groupHeaderTemplate(item)\">\n                    {{groupTitle(item)}}: {{item.data | valueOf:\"value\": formatForGroup(item)}}\n                    </ng-template>\n                    <ng-template\n                        [templateContext]=\"{\n                            templateRef: groupHeaderTemplate(item),\n                            group: item.data,\n                            aggregates: item.data?.aggregates,\n                            value: item.data?.value,\n                            field: item.data?.field,\n                            index: item.index,\n                            expanded: isExpanded,\n                            $implicit: item.data\n                            }\">\n                    </ng-template>\n                </ng-template>\n            </p>\n        </td>\n        <ng-container *ngIf=\"hasGroupHeaderColumn\">\n            <td *ngFor=\"let column of groupHeaderColumns; let index = index\"\n                role=\"gridcell\"\n                aria-selected=\"false\"\n                kendoGridLogicalCell\n                [logicalRowIndex]=\"logicalRowIndex\"\n                [logicalColIndex]=\"index + 1\"\n                [logicalSlaveCell]=\"false\"\n                [groupItem]=\"item\"\n                [colSpan]=\"1\"\n            >\n                <ng-container *ngIf=\"column.groupHeaderColumnTemplateRef\" [ngTemplateOutlet]=\"column.groupHeaderColumnTemplateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        group: item.data,\n                        aggregates: item.data?.aggregates,\n                        value: item.data?.value,\n                        field: item.data?.field,\n                        index: item.index,\n                        $implicit: item.data\n                        }\">\n                </ng-container>\n            </td>\n        </ng-container>\n    `\n            },] },\n];\n/** @nocollapse */\nGroupHeaderComponent.ctorParameters = () => [\n    { type: GroupsService },\n    { type: GroupInfoService }\n];\nGroupHeaderComponent.propDecorators = {\n    rowIndex: [{ type: Input }],\n    logicalRowIndex: [{ type: Input }],\n    item: [{ type: Input }],\n    skipGroupDecoration: [{ type: Input }],\n    hasDetails: [{ type: Input }],\n    totalColumnsCount: [{ type: Input }],\n    hasGroupHeaderColumn: [{ type: Input }],\n    groupHeaderColumns: [{ type: Input }],\n    columns: [{ type: Input }],\n    groups: [{ type: Input }],\n    groupItemClass: [{ type: HostBinding, args: ['class.k-grouping-row',] }]\n};\n\n/**\n * @hidden\n */\nclass DropTargetDirective {\n    constructor(element, service) {\n        this.element = element;\n        this.service = service;\n        this.context = {};\n        this.enter = new EventEmitter();\n        this.leave = new EventEmitter();\n        this.drop = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    ngOnInit() {\n        this.service.add(this);\n        const changes = this.service.changes.pipe(filter(({ target }) => target === this));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'leave'))\n            .subscribe(e => {\n            this.leave.next(this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'enter'))\n            .subscribe(e => {\n            this.enter.next(this.eventArgs(e));\n        }));\n        this.subscriptions.add(changes.pipe(filter(({ type }) => type === 'drop'))\n            .subscribe(e => {\n            this.drop.next(this.eventArgs(e));\n        }));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    eventArgs(e) {\n        return {\n            target: this,\n            mouseEvent: e.mouseEvent,\n            draggable: e.draggable\n        };\n    }\n}\nDropTargetDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDropTarget]'\n            },] },\n];\n/** @nocollapse */\nDropTargetDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragAndDropService }\n];\nDropTargetDirective.propDecorators = {\n    context: [{ type: Input }],\n    enter: [{ type: Output }],\n    leave: [{ type: Output }],\n    drop: [{ type: Output }]\n};\n\nconst withoutField = ({ field }) => isNullOrEmptyString(field);\nconst alreadyGrouped = ({ groups, field }) => groups.some(group => group.field === field);\nconst overSameTarget = ({ target, field }) => target.field === field;\nconst overLastTarget = ({ target }) => target.lastTarget;\nconst isLastGroup = ({ groups, field }) => groups.map(group => group.field).indexOf(field) === groups.length - 1;\nconst isNotGroupable = (groupsService) => ({ field }) => !groupsService.isGroupable(field);\nconst columnRules = (groupService) => or(withoutField, alreadyGrouped, isNotGroupable(groupService));\nconst indicatorRules = or(overSameTarget, and(overLastTarget, isLastGroup));\n/**\n * @hidden\n */\nclass GroupPanelComponent {\n    constructor(hint, cue, groupInfoService, localization, cd) {\n        this.hint = hint;\n        this.cue = cue;\n        this.groupInfoService = groupInfoService;\n        this.localization = localization;\n        this.cd = cd;\n        this.change = new EventEmitter();\n        this.groups = [];\n        this.dropTargets = new QueryList();\n        this.groupTitles = [];\n        this.subscription = new Subscription();\n    }\n    get groupHeaderClass() {\n        return true;\n    }\n    set text(value) {\n        this.emptyText = value;\n    }\n    get text() {\n        return this.emptyText ? this.emptyText : this.localization.get('groupPanelEmpty');\n    }\n    ngAfterViewInit() {\n        this.subscription.add(observe(this.dropTargets)\n            .subscribe(this.attachTargets.bind(this)));\n    }\n    ngOnInit() {\n        this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngDoCheck() {\n        const currentTitles = this.groups.map(group => this.groupInfoService.groupTitle(group));\n        if (currentTitles.length !== this.groupTitles.length || currentTitles.some((current, idx) => current !== this.groupTitles[idx])) {\n            this.groupTitles = currentTitles;\n            this.cd.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n    }\n    directionChange(group) {\n        const index = this.groups.findIndex(x => x.field === group.field);\n        const groups = [...this.groups.slice(0, index), group, ...this.groups.slice(index + 1)];\n        this.change.emit(groups);\n    }\n    insert(field, index) {\n        const groups = this.groups.filter(x => x.field !== field);\n        if (groups.length || this.groups.length === 0) {\n            this.change.emit([...groups.slice(0, index), { field: field }, ...groups.slice(index)]);\n        }\n    }\n    remove(group) {\n        this.change.emit(this.groups.filter(x => x.field !== group.field));\n    }\n    canDrop(draggable, target) {\n        const isIndicator = draggable.type === 'groupIndicator';\n        const rules = isIndicator\n            ? indicatorRules\n            : columnRules(this.groupInfoService);\n        return !rules({\n            field: draggable.field,\n            groups: this.groups,\n            target\n        });\n    }\n    attachTargets() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        this.targetSubscription = new Subscription();\n        const enterStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.enter), from([]));\n        const leaveStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.leave), from([]));\n        const dropStream = this.dropTargets\n            .reduce((acc, target) => merge(acc, target.drop), from([]));\n        this.targetSubscription.add(enterStream.pipe(tap(_ => this.hint.removeLock()), filter(({ draggable, target }) => this.canDrop(draggable.context, target.context)), tap(this.enter.bind(this)), switchMapTo(dropStream.pipe(takeUntil(leaveStream.pipe(tap(this.leave.bind(this))))))).subscribe(this.drop.bind(this)));\n    }\n    enter({ draggable, target }) {\n        this.hint.enable();\n        let before = target.context.lastTarget || isTargetBefore(draggable.element.nativeElement, target.element.nativeElement);\n        if (this.localization.rtl) {\n            before = !before;\n        }\n        this.cue.position(position(target.element.nativeElement, before));\n    }\n    leave() {\n        this.hint.disable();\n        this.cue.hide();\n    }\n    drop({ target, draggable }) {\n        const field = draggable.context.field;\n        const index = this.dropTargets.toArray().indexOf(target);\n        this.insert(field, index);\n    }\n}\nGroupPanelComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'kendo-grid-group-panel',\n                template: `\n        <ng-template [ngIf]=\"groups.length === 0\">\n            <div\n                class=\"k-indicator-container\"\n                [context]=\"{\n                    lastTarget: true\n                }\"\n                kendoDropTarget>\n                {{ text }}\n            </div>\n        </ng-template>\n        <div *ngFor=\"let group of groups; let index = index;\"\n            class=\"k-indicator-container\"\n            [context]=\"{\n                field: group.field\n            }\"\n            kendoDropTarget>\n            <div\n                kendoDraggableColumn\n                [enableDrag]=\"true\"\n                [context]=\"{\n                    field: group.field,\n                    type: 'groupIndicator',\n                    hint:  groupTitles[index]\n                }\"\n                kendoGroupIndicator\n                kendoDraggable\n                [group]=\"group\"\n                [groupTitle]=\"groupTitles[index]\"\n                (directionChange)=\"directionChange($event)\"\n                (remove)=\"remove($event)\">\n            </div>\n        </div>\n        <div class=\"k-indicator-container\"\n            *ngIf=\"groups.length !== 0\"\n            [context]=\"{\n                lastTarget: true\n            }\"\n            kendoDropTarget>&nbsp;</div>\n    `\n            },] },\n];\n/** @nocollapse */\nGroupPanelComponent.ctorParameters = () => [\n    { type: DragHintService },\n    { type: DropCueService },\n    { type: GroupInfoService },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef }\n];\nGroupPanelComponent.propDecorators = {\n    change: [{ type: Output }],\n    groupHeaderClass: [{ type: HostBinding, args: [\"class.k-grouping-header\",] }, { type: HostBinding, args: [\"class.k-grouping-header-flex\",] }],\n    text: [{ type: Input }],\n    groups: [{ type: Input }],\n    dropTargets: [{ type: ViewChildren, args: [DropTargetDirective,] }]\n};\n\n/**\n * @hidden\n */\nclass GroupIndicatorComponent {\n    constructor() {\n        this.directionChange = new EventEmitter();\n        this.remove = new EventEmitter();\n    }\n    get groupIndicatorClass() {\n        return true;\n    }\n    get dir() {\n        return this.group.dir ? this.group.dir : \"asc\";\n    }\n    toggleDirection() {\n        this.directionChange.emit({\n            dir: this.dir === \"asc\" ? \"desc\" : \"asc\",\n            field: this.group.field\n        });\n        return false;\n    }\n    removeDescriptor() {\n        this.remove.emit({\n            dir: this.group.dir,\n            field: this.group.field\n        });\n        return false;\n    }\n}\nGroupIndicatorComponent.decorators = [\n    { type: Component, args: [{\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: '[kendoGroupIndicator]',\n                template: `\n        <a href=\"#\" class=\"k-link\" tabindex=\"-1\" (click)=\"toggleDirection()\">\n            <span class=\"k-icon\"\n                [class.k-i-sort-asc-sm]=\"dir === 'asc'\"\n                [class.k-i-sort-desc-sm]=\"dir === 'desc'\"></span>\n            {{groupTitle}}</a>\n        <a class=\"k-button k-button-icon k-bare\" tabindex=\"-1\" (click)=\"removeDescriptor()\">\n            <span class=\"k-icon k-i-group-delete\"></span>\n        </a>\n    `\n            },] },\n];\nGroupIndicatorComponent.propDecorators = {\n    directionChange: [{ type: Output }],\n    remove: [{ type: Output }],\n    group: [{ type: Input }],\n    groupTitle: [{ type: Input }],\n    groupIndicatorClass: [{ type: HostBinding, args: [\"class.k-group-indicator\",] }]\n};\n\n// TODO\n// tslint:disable:rxjs-no-unsafe-takeuntil\n/**\n * @hidden\n */\nconst preventOnDblClick = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\nconst hasClass = className => el => new RegExp(`(^| )${className}( |$)`).test(el.className);\nconst isDeleteButton = or(hasClass(\"k-i-group-delete\"), hasClass(\"k-button-icon\"));\nconst isSortIcon = or(hasClass(\"k-i-sort-asc-sm\"), hasClass(\"k-i-sort-desc-sm\"));\nconst skipButtons = and(not(isDeleteButton), not(isSortIcon), not(isFocusableWithTabKey), not(matchesNodeName(\"label\")));\nconst elementUnderCursor = ({ clientX, clientY }) => document.elementFromPoint(clientX, clientY);\nconst hideThenShow = (element, cont) => {\n    element.style.display = 'none';\n    const result = cont();\n    element.style.display = 'block';\n    return result;\n};\n/**\n * @hidden\n */\nclass DraggableColumnDirective {\n    constructor(draggable, element, zone, service, hint, cue, nav, renderer) {\n        this.draggable = draggable;\n        this.element = element;\n        this.zone = zone;\n        this.service = service;\n        this.hint = hint;\n        this.cue = cue;\n        this.nav = nav;\n        this.renderer = renderer;\n        this.context = {};\n        this.drag = new EventEmitter();\n        this.subscriptions = new Subscription();\n    }\n    set enableDrag(enabled) {\n        this.enabled = enabled;\n        this.updateTouchAction();\n    }\n    get hostClass() {\n        return this.enabled;\n    }\n    ngOnInit() {\n        this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(filter(_ => this.enabled), filter(({ originalEvent: { target } }) => target === this.element.nativeElement || skipButtons(target)), tap((e) => {\n            const originalEvent = e.originalEvent;\n            if (!e.isTouch) {\n                originalEvent.preventDefault();\n            }\n            this.nav.navigateTo(originalEvent.target);\n        }), switchMap(preventOnDblClick(this.draggable.kendoRelease)), tap(down => {\n            this.hint.create(down, this.element.nativeElement, this.context.hint);\n            this.cue.create();\n        }), switchMap(down => this.draggable.kendoDrag.pipe(tap((e) => {\n            if (e.isTouch) {\n                e.originalEvent.preventDefault();\n            }\n        }), tap(this.hint.attach()), tap(this.cue.attach()), takeUntil(this.draggable.kendoRelease), map(move => ({ move, down })))), tap(this.performDrag.bind(this)), switchMapTo(this.draggable.kendoRelease)).subscribe(this.drop.bind(this))));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    drop(upEvent) {\n        this.hint.remove();\n        this.cue.remove();\n        this.service.notifyDrop(this, upEvent);\n    }\n    performDrag({ move }) {\n        this.hint.move(move);\n        const cursorElement = this.elementUnderCursor(move);\n        if (cursorElement) {\n            this.service.notifyDrag(this, cursorElement, move);\n        }\n        this.drag.emit({\n            draggable: this,\n            mouseEvent: move\n        });\n    }\n    elementUnderCursor(mouseEvent) {\n        this.hint.hide();\n        let target = elementUnderCursor(mouseEvent);\n        if (target && /k-grouping-dropclue/.test(target.className)) {\n            target = hideThenShow(target, elementUnderCursor.bind(this, mouseEvent));\n        }\n        this.hint.show();\n        return target;\n    }\n    updateTouchAction() {\n        if (!this.element) {\n            return;\n        }\n        this.renderer.setStyle(this.element.nativeElement, 'touch-action', this.enabled ? 'none' : '');\n    }\n}\nDraggableColumnDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoDraggableColumn]'\n            },] },\n];\n/** @nocollapse */\nDraggableColumnDirective.ctorParameters = () => [\n    { type: DraggableDirective, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: DragAndDropService },\n    { type: DragHintService },\n    { type: DropCueService },\n    { type: NavigationService },\n    { type: Renderer2 }\n];\nDraggableColumnDirective.propDecorators = {\n    context: [{ type: Input }],\n    enableDrag: [{ type: Input }],\n    drag: [{ type: Output }],\n    hostClass: [{ type: HostBinding, args: ['class.k-grid-draggable-header',] }]\n};\n\nconst exported = [\n    DraggableColumnDirective,\n    DropTargetDirective\n];\n/**\n * @hidden\n */\nclass DragAndDropModule {\n}\nDragAndDropModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exported],\n                exports: [exported]\n            },] },\n];\n\nconst exportedModules$1 = [\n    GroupHeaderTemplateDirective,\n    GroupHeaderColumnTemplateDirective,\n    GroupFooterTemplateDirective,\n    GroupHeaderComponent,\n    GroupPanelComponent,\n    GroupIndicatorComponent\n];\n/**\n * @hidden\n */\nclass GroupModule {\n    static exports() {\n        return [\n            GroupHeaderTemplateDirective,\n            GroupHeaderColumnTemplateDirective,\n            GroupFooterTemplateDirective\n        ];\n    }\n}\nGroupModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exportedModules$1],\n                exports: [exportedModules$1],\n                imports: [CommonModule, SharedModule, DragAndDropModule]\n            },] },\n];\n\n/**\n * @hidden\n */\nconst DEFAULTS = {\n    allowUnsort: true,\n    mode: 'single',\n    showIndexes: true,\n    initialDirection: 'asc'\n};\n/**\n * @hidden\n */\nconst normalize$1 = (...settings) => Object.assign({}, DEFAULTS, ...settings);\n\n/**\n * @hidden\n */\nconst hasFilter = (settings, column) => settings.filter !== false && column.field && column.filterable;\n/**\n * @hidden\n */\nconst hasSort = (settings, column) => settings.sort !== false && column.field && column.sortable;\n/**\n * @hidden\n */\nconst hasLock = (settings, column) => settings.lock && column.lockable && !(column.parent && !column.parent.isSpanColumn);\n/**\n * @hidden\n */\nconst hasColumnChooser = (settings) => settings.columnChooser !== false;\n/**\n * @hidden\n */\nconst hasItems = (settings, column) => hasColumnChooser(settings) || hasLock(settings, column) || hasSort(settings, column) || hasFilter(settings, column);\n\nconst mergeObjects = (...args) => Object.assign.apply(null, [{}].concat(args));\nconst directions = initialDirection => initialDirection === \"asc\" ? [\"asc\", \"desc\"] : [\"desc\", \"asc\"];\n/**\n * @hidden\n */\nconst isRootLevel = ({ parent }) => !isTruthy(parent);\nconst ofColumnType = ({ draggable }) => ['column', 'columnGroup']\n    .indexOf(draggable.context.type) >= 0;\nconst notSameElement = ({ draggable, target }) => draggable.element.nativeElement !== target.element.nativeElement;\nconst inSameParent = (x, y) => x.parent === y.parent ||\n    (isInSpanColumn(y) && inSameParent(x, y.parent));\nconst sameParent = ({ draggable, target }) => inSameParent(draggable.context.column, target.context.column);\nconst lastNonLocked = ({ draggable }) => !isTruthy(draggable.context.column.locked) &&\n    isRootLevel(draggable.context.column) &&\n    draggable.context.lastColumn;\nconst notInSpanColumn = ({ draggable }) => !isInSpanColumn(draggable.context.column);\nconst reorderable = ({ draggable }) => draggable.context.column.reorderable;\nconst lockable = ({ draggable, target }) => draggable.context.column.lockable !== false ||\n    draggable.context.column.isLocked === target.context.column.isLocked;\nconst rules = and(ofColumnType, reorderable, notInSpanColumn, notSameElement, sameParent, not(lastNonLocked), lockable);\n/**\n * @hidden\n */\nclass HeaderComponent {\n    constructor(popupService, hint, cue, reorderService, idService, sortService, localization, cd) {\n        this.popupService = popupService;\n        this.hint = hint;\n        this.cue = cue;\n        this.reorderService = reorderService;\n        this.idService = idService;\n        this.sortService = sortService;\n        this.localization = localization;\n        this.cd = cd;\n        this.columns = [];\n        this.groups = [];\n        this.sort = new Array();\n        this.sortable = false;\n        this.groupable = false;\n        this.lockedColumnsCount = 0;\n        this.resizable = false;\n        this.reorderable = false;\n        this.columnMenu = false;\n        this.totalColumnsCount = 0;\n        this.sortedFields = {};\n        this.dropTargets = new QueryList();\n        this.subscription = new Subscription();\n    }\n    get headerClass() {\n        return !this.scrollable;\n    }\n    get sortableLabel() {\n        return this.localization.get('sortable');\n    }\n    // Number of unlocked columns in the next table, if any\n    get unlockedColumnsCount() {\n        return this.totalColumnsCount - this.lockedColumnsCount - this.columns.length;\n    }\n    sortColumn(column) {\n        this.sortService.sort(this.toggleSort(column));\n    }\n    onSortClick(column, event, link) {\n        const target = event.target;\n        if (column.headerTemplateRef && target !== link) {\n            const hasFocusableParent = Boolean(closestInScope(target, isFocusable, link));\n            if (hasFocusableParent) {\n                // Do not sort when clicking focusable template elements.\n                return;\n            }\n        }\n        this.sortColumn(column);\n    }\n    onHeaderKeydown(column, args) {\n        if (!this.sortable || args.defaultPrevented || column.sortable === false) {\n            return;\n        }\n        if (args.keyCode === Keys.Enter) {\n            this.sortService.sort(this.toggleSort(column));\n        }\n    }\n    showSortNumbering(column) {\n        const { showIndexes } = normalize$1(this.sortable);\n        return showIndexes\n            && this.sort\n            && this.sort.filter(({ dir }) => isPresent(dir)).length > 1\n            && this.sortOrder(column.field) > 0;\n    }\n    sortOrder(field) {\n        return this.sort\n            .filter(({ dir }) => isPresent(dir))\n            .findIndex(x => x.field === field)\n            + 1;\n    }\n    sortIcon(field) {\n        const state$$1 = this.sortDescriptor(field);\n        return {\n            'k-icon': isPresent(state$$1.dir),\n            'k-i-sort-desc-sm': state$$1.dir === \"desc\",\n            'k-i-sort-asc-sm': state$$1.dir === \"asc\"\n        };\n    }\n    sortState(column) {\n        if (!this.isSortable(column)) {\n            return;\n        }\n        const state$$1 = this.sortDescriptor(column.field);\n        if (state$$1.dir === 'asc') {\n            return 'ascending';\n        }\n        if (state$$1.dir === 'desc') {\n            return 'descending';\n        }\n    }\n    sortStatus(column) {\n        if (!this.sortedFields[column.field] || !this.isSortable(column)) {\n            return;\n        }\n        let msg = 'sortedDefault';\n        const state$$1 = this.sortDescriptor(column.field);\n        if (state$$1.dir === 'asc') {\n            msg = 'sortedAscending';\n        }\n        else if (state$$1.dir === 'desc') {\n            msg = 'sortedDescending';\n        }\n        return this.localization.get(msg);\n    }\n    toggleSort(column) {\n        const { allowUnsort, mode, initialDirection } = normalize$1(this.sortable, column.sortable);\n        const descriptor = this.toggleDirection(column.field, allowUnsort, initialDirection);\n        if (mode === 'single') {\n            return [descriptor];\n        }\n        return [...this.sort.filter(desc => desc.field !== column.field), descriptor];\n    }\n    ngAfterViewInit() {\n        this.subscription.add(observe(this.dropTargets)\n            .subscribe(this.attachTargets.bind(this)));\n    }\n    ngDoCheck() {\n        this._leafColumns = columnsToRender(this.columns || []).filter(x => !isColumnGroupComponent(x));\n    }\n    ngOnChanges(changes) {\n        const sortChange = changes.sort;\n        if (sortChange && !sortChange.isFirstChange()) {\n            sortChange.currentValue.forEach(change => {\n                this.sortedFields[change.field] = true;\n            });\n        }\n    }\n    ngOnInit() {\n        this.subscription.add(this.localization.changes\n            .subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        if (this.popupService) {\n            this.popupService.destroy();\n        }\n        this.subscription.unsubscribe();\n    }\n    selectAllCheckboxId() {\n        return this.idService.selectAllCheckboxId();\n    }\n    isFirstOnRow(column, index) {\n        const isTailing = (c) => c &&\n            (this.columnsForLevel(c.level).indexOf(c) > 0 || isTailing(c.parent));\n        return index === 0 && !this.groups.length && !this.detailTemplate && isTailing(column.parent);\n    }\n    logicalColumnIndex(column) {\n        const index = column.leafIndex;\n        if (isPresent(index)) {\n            return index + (isPresent(this.detailTemplate) ? 1 : 0);\n        }\n        return -1;\n    }\n    get showFilterMenu() {\n        return !this.columnMenu && hasFilterMenu(this.filterable);\n    }\n    get showFilterRow() {\n        return hasFilterRow(this.filterable);\n    }\n    showColumnMenu(column) {\n        return this.columnMenu && column.columnMenu &&\n            (this.columnMenuTemplate || column.columnMenuTemplates.length || hasItems(this.columnMenu, column));\n    }\n    isFilterable(column) {\n        return !isNullOrEmptyString(column.field) && column.filterable === true;\n    }\n    canDrop(draggable, target) {\n        return this.reorderable && rules({ draggable, target });\n    }\n    shouldActivate(column) {\n        const canReorder = this.reorderable && column.reorderable;\n        if (!canReorder && !isColumnComponent(column)) {\n            return false;\n        }\n        const groupable = this.groupable && isColumnComponent(column) && column.groupable !== false;\n        return groupable || canReorder;\n    }\n    isSortable(column) {\n        return !isNullOrEmptyString(column.field)\n            && isTruthy(this.sortable) && isTruthy(column.sortable);\n    }\n    isCheckboxColumn(column) {\n        return isCheckboxColumn(column) && !column.templateRef;\n    }\n    trackByIndex(index, _item) {\n        return index;\n    }\n    toggleDirection(field, allowUnsort, initialDirection) {\n        const descriptor = this.sortDescriptor(field);\n        const [first, second] = directions(initialDirection);\n        let dir = first;\n        if (descriptor.dir === first) {\n            dir = second;\n        }\n        else if (descriptor.dir === second && allowUnsort) {\n            dir = undefined;\n        }\n        return { dir, field };\n    }\n    columnsForLevel(level) {\n        const columns = this.columns ? this.columns.filter(column => column.level === level) : [];\n        return sortColumns(columnsToRender(columns));\n    }\n    isColumnGroupComponent(column) {\n        return isColumnGroupComponent(column);\n    }\n    get columnLevels() {\n        return new Array((this.totalColumnLevels || 0) + 1);\n    }\n    sortDescriptor(field) {\n        return this.sort.find(item => item.field === field) || { field };\n    }\n    get leafColumns() {\n        return this._leafColumns;\n    }\n    attachTargets() {\n        if (this.targetSubscription) {\n            this.targetSubscription.unsubscribe();\n        }\n        this.targetSubscription = new Subscription();\n        const enterStream = merge(...this.dropTargets.map(target => target.enter));\n        const leaveStream = merge(...this.dropTargets.map(target => target.leave));\n        const dropStream = merge(...this.dropTargets.map(target => target.drop));\n        this.targetSubscription.add(enterStream.pipe(tap(({ target, draggable }) => {\n            if (draggable.context.type === 'groupIndicator') {\n                return;\n            }\n            const targetLocked = isTruthy(target.context.column.isLocked);\n            const draggableLocked = isTruthy(draggable.context.column.isLocked);\n            if (this.lockedColumnsCount > 0 || targetLocked || draggableLocked) {\n                this.hint.toggleLock(targetLocked);\n            }\n        }), filter(({ draggable, target }) => this.canDrop(draggable, target)), switchMap(this.trackMove.bind(this, leaveStream, dropStream)), map((e) => mergeObjects(e, { before: this.calculateBefore(e), changeContainer: e.changeContainer })), map(this.normalizeTarget.bind(this)), tap(this.enter.bind(this)), switchMap((args) => dropStream.pipe(map(() => args), takeUntil(leaveStream.pipe(tap(this.leave.bind(this)))))))\n            .subscribe(this.drop.bind(this)));\n    }\n    normalizeTarget(e) {\n        let target = e.target;\n        const parent = target.context.column.parent;\n        if (parent && parent.isSpanColumn) {\n            const arr = this.dropTargets.toArray();\n            const firstSpan = arr.find(t => t.context.column.parent === parent);\n            const index = arr.indexOf(firstSpan);\n            const adjust = e.before ? 0 : parent.childColumns.length - 1;\n            target = arr[index + adjust];\n        }\n        return mergeObjects(e, { target });\n    }\n    trackMove(leaveStream, dropStream, e) {\n        const column = e.target.context.column;\n        const levelColumns = this.columnsForLevel(column.level);\n        const index = levelColumns.indexOf(column);\n        const isFirst = (column.locked ? index === levelColumns.length - 1 : index === 0);\n        const changed = e.draggable.context.column.isLocked !== column.isLocked;\n        if (changed && isFirst) {\n            return e.draggable.drag\n                .pipe(takeUntil(leaveStream), takeUntil(dropStream), map(({ mouseEvent }) => mergeObjects({ changeContainer: true }, e, { mouseEvent })));\n        }\n        return of(mergeObjects({ changeContainer: changed }, e));\n    }\n    calculateBefore({ draggable, target, mouseEvent, changeContainer = false }) {\n        const targetElement = target.element.nativeElement;\n        let before = false;\n        if (changeContainer) {\n            const { left } = offset(targetElement);\n            const halfWidth = targetElement.offsetWidth / 2;\n            const middle = left + halfWidth;\n            before = middle > mouseEvent.pageX;\n            if (this.localization.rtl) {\n                before = !before;\n            }\n        }\n        else {\n            before = isTargetBefore(draggable.element.nativeElement, targetElement);\n        }\n        return before;\n    }\n    enter({ target, before }) {\n        this.hint.enable();\n        if (this.localization.rtl) {\n            before = !before;\n        }\n        this.cue.position(position(target.element.nativeElement, before));\n    }\n    leave() {\n        this.hint.disable();\n        this.cue.hide();\n    }\n    drop({ draggable, target, before, changeContainer }) {\n        this.reorderService.reorder({\n            before,\n            changeContainer,\n            source: draggable.context.column,\n            target: target.context.column\n        });\n    }\n}\nHeaderComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridHeader]',\n                styles: [`\n        .k-column-resizer {\n            cursor: col-resize;\n            display: block;\n            height: 1000%;\n            position: absolute;\n            top: 0;\n            width: .5em;\n        }\n    `],\n                template: `\n    <ng-template [ngIf]=\"true\">\n        <tr *ngFor=\"let i of columnLevels; let levelIndex = index\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"levelIndex\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <th\n                class=\"k-group-cell k-header\"\n                role=\"presentation\"\n                *ngFor=\"let g of groups\">\n            </th>\n            <th class=\"k-hierarchy-cell k-header\"\n                role=\"presentation\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"levelIndex\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n            >\n            </th>\n            <ng-template ngFor let-column [ngForOf]=\"columnsForLevel(levelIndex)\" [ngForTrackBy]=\"trackByIndex\" let-columnIndex=\"index\" let-last=\"last\">\n                <th *ngIf=\"!isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell [logicalRowIndex]=\"levelIndex\"\n                                         [logicalColIndex]=\"logicalColumnIndex(column)\"\n                                         [colSpan]=\"column.colspan\"\n                                         [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                                         role=\"columnheader\"\n                                         aria-selected=\"false\"\n                                         [attr.aria-sort]=\"sortState(column)\"\n                                         (keydown)=\"onHeaderKeydown(column, $event)\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        field: column.field,\n                        type: 'column',\n                        column: column,\n                        hint: column.title || column.field,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-filterable]=\"(showFilterMenu && isFilterable(column)) || showColumnMenu(column)\"\n                    [class.k-first]=\"isFirstOnRow(column, columnIndex)\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n                    <kendo-grid-filter-menu\n                        *ngIf=\"showFilterMenu && isFilterable(column)\"\n                        [column]=\"column\"\n                        [filter]=\"filter\">\n                    </kendo-grid-filter-menu>\n                    <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                        [standalone]=\"false\"\n                        [settings]=\"columnMenu\"\n                        [column]=\"column\"\n                        [columnMenuTemplate]=\"columnMenuTemplate\"\n                        [sort]=\"sort\"\n                        [filter]=\"filter\"\n                        [sortable]=\"sortable\">\n                    </kendo-grid-column-menu>\n                    <ng-template [ngIf]=\"!isSortable(column)\">\n                        <ng-template\n                            [templateContext]=\"{\n                                templateRef: column.headerTemplateRef,\n                                columnIndex: column.leafIndex,\n                                column: column,\n                                $implicit: column\n                            }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!column.headerTemplateRef\">{{column.displayTitle}}</ng-template>\n                    </ng-template>\n                    <ng-template [ngIf]=\"isSortable(column)\">\n                        <span #link class=\"k-link\" (click)=\"onSortClick(column, $event, link)\">\n                            <ng-template\n                                [templateContext]=\"{\n                                    templateRef: column.headerTemplateRef,\n                                    columnIndex: column.leafIndex,\n                                    column: column,\n                                    $implicit: column\n                                }\">\n                            </ng-template>\n                            <ng-template [ngIf]=\"!column.headerTemplateRef\">{{column.displayTitle}}</ng-template>\n                            <span [attr.aria-label]=\"sortableLabel\" [ngClass]=\"sortIcon(column.field)\"></span>\n                            <span *ngIf=\"showSortNumbering(column)\" class=\"k-sort-order\">{{sortOrder(column.field)}}</span>\n                        </span>\n                        <span role=\"status\"\n                              class=\"k-sort-status\"\n                              style=\"position: absolute; left: -10000px;\"\n                              [innerHtml]=\"sortStatus(column)\">\n                        </span>\n                    </ng-template>\n                    <ng-template [ngIf]=\"isCheckboxColumn(column) && !column.headerTemplateRef && column.showSelectAll\">\n                        <input\n                            class=\"k-checkbox\"\n                            [attr.id]=\"selectAllCheckboxId()\"\n                            kendoGridSelectAllCheckbox\n                            kendoGridFocusable>\n                        <label class=\"k-checkbox-label\" [attr.for]=\"selectAllCheckboxId()\"></label>\n                    </ng-template>\n                    <span kendoGridColumnHandle\n                        kendoDraggable\n                        class=\"k-column-resizer\"\n                        *ngIf=\"resizable\"\n                        [column]=\"column\"\n                        [columns]=\"columns\">\n                    </span>\n                </th>\n                <th *ngIf=\"isColumnGroupComponent(column)\"\n                    kendoGridLogicalCell [logicalRowIndex]=\"levelIndex\"\n                                         [logicalColIndex]=\"logicalColumnIndex(column)\"\n                                         [rowSpan]=\"column.rowspan(totalColumnLevels)\"\n                                         [colSpan]=\"column.colspan\"\n                    kendoDropTarget\n                    kendoDraggable\n                    kendoDraggableColumn\n                    [enableDrag]=\"shouldActivate(column)\"\n                    [context]=\"{\n                        type: 'columnGroup',\n                        column: column,\n                        hint: column.title,\n                        lastColumn: last && columnIndex === 0\n                    }\"\n                    class=\"k-header\"\n                    [class.k-first]=\"isFirstOnRow(column, columnIndex)\"\n                    [class.k-filterable]=\"showColumnMenu(column)\"\n                    [ngClass]=\"column.headerClass\"\n                    [ngStyle]=\"column.headerStyle\"\n                    [attr.rowspan]=\"column.rowspan(totalColumnLevels)\"\n                    [attr.colspan]=\"column.colspan\">\n                        <kendo-grid-column-menu *ngIf=\"showColumnMenu(column)\"\n                            [standalone]=\"false\"\n                            [settings]=\"columnMenu\"\n                            [column]=\"column\"\n                            [columnMenuTemplate]=\"columnMenuTemplate\">\n                        </kendo-grid-column-menu>\n                        <ng-template\n                            [templateContext]=\"{\n                                templateRef: column.headerTemplateRef,\n                                columnIndex: lockedColumnsCount + columnIndex,\n                                column: column,\n                                $implicit: column\n                            }\">\n                        </ng-template>\n                        <ng-template [ngIf]=\"!column.headerTemplateRef\">{{column.displayTitle}}</ng-template>\n                        <span kendoGridColumnHandle\n                            kendoDraggable\n                            class=\"k-column-resizer\"\n                            *ngIf=\"resizable\"\n                            [column]=\"column\"\n                            [columns]=\"columns\">\n                        </span>\n                </th>\n            </ng-template>\n        </tr>\n        <tr *ngIf=\"showFilterRow\"\n            kendoGridFilterRow\n                [columns]=\"leafColumns\"\n                [filter]=\"filter\"\n                [groups]=\"groups\"\n                [detailTemplate]=\"detailTemplate\"\n                [lockedColumnsCount]=\"lockedColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"totalColumnLevels + 1\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n        ></tr>\n    </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nHeaderComponent.ctorParameters = () => [\n    { type: SinglePopupService },\n    { type: DragHintService },\n    { type: DropCueService },\n    { type: ColumnReorderService },\n    { type: IdService },\n    { type: SortService },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef }\n];\nHeaderComponent.propDecorators = {\n    totalColumnLevels: [{ type: Input }],\n    columns: [{ type: Input }],\n    groups: [{ type: Input }],\n    detailTemplate: [{ type: Input }],\n    scrollable: [{ type: Input }],\n    filterable: [{ type: Input }],\n    sort: [{ type: Input }],\n    filter: [{ type: Input }],\n    sortable: [{ type: Input }],\n    groupable: [{ type: Input }],\n    lockedColumnsCount: [{ type: Input }],\n    resizable: [{ type: Input }],\n    reorderable: [{ type: Input }],\n    columnMenu: [{ type: Input }],\n    columnMenuTemplate: [{ type: Input }],\n    totalColumnsCount: [{ type: Input }],\n    headerClass: [{ type: HostBinding, args: ['class.k-grid-header',] }],\n    dropTargets: [{ type: ViewChildren, args: [DropTargetDirective,] }]\n};\n\n// TODO\n// tslint:disable:rxjs-no-unsafe-takeuntil\n/**\n * @hidden\n */\nconst fromPercentage = (value, percent) => {\n    const sign = percent < 0 ? -1 : 1;\n    return Math.ceil((Math.abs(percent) / 100) * value) * sign;\n};\n/**\n * @hidden\n */\nconst toPercentage = (value, whole) => (value / whole) * 100;\n/**\n * @hidden\n */\nconst headerWidth = (handle) => handle.nativeElement.parentElement.offsetWidth;\n/**\n * @hidden\n */\nconst allLeafColumns = columns => expandColumns(columns)\n    .filter(c => !c.isColumnGroup);\n/**\n * @hidden\n */\nconst stopPropagation = ({ originalEvent: event }) => {\n    event.stopPropagation();\n    event.preventDefault();\n};\n/**\n * @hidden\n */\nconst createMoveStream = (service, draggable) => mouseDown => draggable.kendoDrag.pipe(takeUntil(draggable.kendoRelease.pipe(tap(() => service.end()))), map(({ pageX }) => ({\n    originalX: mouseDown.pageX,\n    pageX\n})));\n/**\n * @hidden\n */\nconst preventOnDblClick$1 = release => mouseDown => of(mouseDown).pipe(delay(150), takeUntil(release));\n/**\n * @hidden\n */\nconst isInSpanColumn$1 = column => !!(column.parent && column.parent.isSpanColumn);\n/**\n * @hidden\n *\n * Calculates the column index. If the column is stated in `SpanColumn`,\n * the index for all child columns equals the index of the first child.\n */\nconst indexOf = (target, list) => {\n    let index = 0;\n    let ignore = 0;\n    let skip = 0;\n    while (index < list.length) {\n        const current = list[index];\n        const isParentSpanColumn = isInSpanColumn$1(current);\n        if (current === target) {\n            break;\n        }\n        if ((ignore-- <= 0) && isParentSpanColumn) {\n            ignore = current.parent.childColumns.length - 1;\n            skip += ignore;\n        }\n        index++;\n    }\n    return index - skip;\n};\n/**\n * @hidden\n */\nclass ColumnHandleDirective {\n    constructor(draggable, element, service, zone, cdr, localization) {\n        this.draggable = draggable;\n        this.element = element;\n        this.service = service;\n        this.zone = zone;\n        this.cdr = cdr;\n        this.localization = localization;\n        this.columns = [];\n        this.subscriptions = new Subscription();\n        this.rtl = false;\n    }\n    get visible() {\n        return this.column.resizable ? 'block' : 'none';\n    }\n    get leftStyle() {\n        return isTruthy(this.rtl) ? 0 : null;\n    }\n    get rightStyle() {\n        return isTruthy(this.rtl) ? null : 0;\n    }\n    autoFit() {\n        const allLeafs = allLeafColumns(this.columns);\n        const currentLeafs = leafColumns([this.column]).filter(column => isTruthy(column.resizable));\n        const columnInfo = currentLeafs.map(column => {\n            const isParentSpan = isInSpanColumn$1(column);\n            const isLastInSpan = isParentSpan ? column.parent.childColumns.last === column : false;\n            const index = indexOf(column, allLeafs);\n            return {\n                column,\n                headerIndex: this.columnsForLevel(column.level).indexOf(column),\n                index,\n                isLastInSpan,\n                isParentSpan,\n                level: column.level\n            };\n        });\n        currentLeafs.forEach(column => column.width = 0);\n        this.service.measureColumns(columnInfo);\n    }\n    ngOnInit() {\n        const service = this.service.changes.pipe(filter(() => this.column.resizable), filter(e => isPresent(e.columns.find(column => column === this.column))));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'start'))\n            .subscribe(this.initState.bind(this)));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'resizeColumn'))\n            .subscribe(this.resize.bind(this)));\n        this.subscriptions.add(this.service.changes.pipe(filter(e => e.type === 'start'), filter(this.shouldUpdate.bind(this)), take(1) //on first resize only\n        ).subscribe(this.initColumnWidth.bind(this)));\n        this.subscriptions.add(this.zone.runOutsideAngular(() => this.draggable.kendoPress.pipe(tap(stopPropagation), tap(() => this.service.start(this.column)), switchMap(preventOnDblClick$1(this.draggable.kendoRelease)), switchMap(createMoveStream(this.service, this.draggable)))\n            .subscribe(({ pageX, originalX }) => {\n            const delta = pageX - originalX;\n            const percent = toPercentage(delta, this.column.resizeStartWidth || this.column.width);\n            this.service.resizeColumns(percent);\n        })));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'autoFitComplete'))\n            .subscribe(this.sizeToFit.bind(this)));\n        this.subscriptions.add(service.pipe(filter(e => e.type === 'triggerAutoFit'))\n            .subscribe(this.autoFit.bind(this)));\n        this.subscriptions.add(this.localization.changes.subscribe(({ rtl }) => this.rtl = rtl));\n    }\n    ngOnDestroy() {\n        if (this.subscriptions) {\n            this.subscriptions.unsubscribe();\n        }\n    }\n    shouldUpdate() {\n        return !allLeafColumns(this.columns)\n            .map(column => column.width)\n            .some(isBlank);\n    }\n    initColumnWidth() {\n        this.column.width = headerWidth(this.element);\n    }\n    initState() {\n        this.column.resizeStartWidth = headerWidth(this.element);\n        this.service.resizedColumn({\n            column: this.column,\n            oldWidth: this.column.resizeStartWidth\n        });\n    }\n    resize({ deltaPercent }) {\n        let delta = fromPercentage(this.column.resizeStartWidth, deltaPercent);\n        if (isTruthy(this.rtl)) {\n            delta *= -1;\n        }\n        const newWidth = Math.max(this.column.resizeStartWidth + delta, this.column.minResizableWidth);\n        const tableDelta = newWidth > this.column.minResizableWidth ?\n            delta : this.column.minResizableWidth - this.column.resizeStartWidth;\n        this.updateWidth(this.column, newWidth);\n        this.service.resizeTable(this.column, tableDelta);\n    }\n    sizeToFit({ columns, widths }) {\n        const index = columns.indexOf(this.column);\n        const width = Math.max(...widths.map(w => w[index])) + 1; //add 1px for IE\n        const tableDelta = width - this.column.resizeStartWidth;\n        this.updateWidth(this.column, width);\n        this.service.resizeTable(this.column, tableDelta);\n    }\n    updateWidth(column, width) {\n        column.width = width;\n        this.cdr.markForCheck(); //force CD cycle\n    }\n    columnsForLevel(level) {\n        return columnsToRender(this.columns ? this.columns.filter(column => column.level === level) : []);\n    }\n}\nColumnHandleDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridColumnHandle]'\n            },] },\n];\n/** @nocollapse */\nColumnHandleDirective.ctorParameters = () => [\n    { type: DraggableDirective, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: ColumnResizingService },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: LocalizationService }\n];\nColumnHandleDirective.propDecorators = {\n    columns: [{ type: Input }],\n    column: [{ type: Input }],\n    visible: [{ type: HostBinding, args: ['style.display',] }],\n    leftStyle: [{ type: HostBinding, args: ['style.left',] }],\n    rightStyle: [{ type: HostBinding, args: ['style.right',] }],\n    autoFit: [{ type: HostListener, args: ['dblclick',] }]\n};\n\n/**\n * Represents the select-all checkbox feature of the Grid ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n */\nclass SelectAllCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n        this.selectionService = selectionService;\n        this.el = el;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        /**\n         * Fires when the user clicks the `kendoGridSelectAllCheckbox` select-all checkbox\n         * ([see example]({% slug selection_grid %}#toc-select-all-feature)).\n         */\n        this.selectAllChange = new EventEmitter();\n        this.type = \"checkbox\";\n        this.stateSet = false;\n        this.ngZone.runOutsideAngular(() => {\n            this.destroyClick = this.renderer.listen(this.el.nativeElement, \"click\", this.onClick.bind(this));\n        });\n    }\n    ngAfterContentChecked() {\n        this.setState();\n    }\n    ngOnChanges() {\n        this.stateSet = true;\n    }\n    ngOnDestroy() {\n        if (this.destroyClick) {\n            this.destroyClick();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        const isChecked = this.el.nativeElement.checked;\n        const options = this.selectionService.options;\n        this.selectAllChange.emit(isChecked ? \"checked\" : \"unchecked\");\n        if (options.enabled && options.mode === \"multiple\") {\n            this.ngZone.run(() => {\n                this.selectionService.updateAll(isChecked);\n            });\n        }\n    }\n    /**\n     * @hidden\n     */\n    setState() {\n        const state$$1 = this.stateSet ? this.stateToBool() : this.selectionService.selectAllState;\n        const elem = this.el.nativeElement;\n        this.renderer.setProperty(elem, \"indeterminate\", !isPresent(state$$1));\n        this.renderer.setProperty(elem, \"checked\", isPresent(state$$1) ? state$$1 : false);\n    }\n    /**\n     * @hidden\n     */\n    stateToBool() {\n        switch (this.state) {\n            case \"checked\":\n                return true;\n            case \"unchecked\":\n                return false;\n            default:\n                return undefined;\n        }\n    }\n}\nSelectAllCheckboxDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridSelectAllCheckbox]'\n            },] },\n];\n/** @nocollapse */\nSelectAllCheckboxDirective.ctorParameters = () => [\n    { type: SelectionService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nSelectAllCheckboxDirective.propDecorators = {\n    state: [{ type: Input }],\n    selectAllChange: [{ type: Output }],\n    type: [{ type: HostBinding, args: ['attr.type',] }]\n};\n\n/**\n * @hidden\n */\nclass FilterMenuComponent {\n    constructor(filterService, popupService, localization) {\n        this.filterService = filterService;\n        this.popupService = popupService;\n        this.localization = localization;\n        /**\n         * @hidden\n         */\n        this.filterLabel = this.localization.get('filter');\n    }\n    get hasFilters() {\n        return filtersByField(this.filter, (this.column || {}).field).length > 0;\n    }\n    toggle(anchor, template) {\n        this.popupRef = this.popupService.open(anchor, template, this.popupRef);\n        return false;\n    }\n    close() {\n        this.popupService.destroy();\n    }\n}\nFilterMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-filter-menu',\n                template: `\n        <a #anchor\n            [ngClass]=\"{'k-grid-filter':true, 'k-state-active': hasFilters}\"\n            (click)=\"toggle(anchor, template)\"\n            href=\"#\"\n            [attr.title]=\"filterLabel\">\n            <span class=\"k-icon k-i-filter\"></span>\n        </a>\n        <ng-template #template>\n            <kendo-grid-filter-menu-container\n                [column]=\"column\"\n                [filter]=\"filter\"\n                (close)=\"close()\"\n                >\n            </kendo-grid-filter-menu-container>\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterMenuComponent.ctorParameters = () => [\n    { type: FilterService },\n    { type: SinglePopupService },\n    { type: LocalizationService }\n];\nFilterMenuComponent.propDecorators = {\n    column: [{ type: Input }],\n    filter: [{ type: Input }]\n};\n\nconst isNoValueOperator = operator => (operator === \"isnull\"\n    || operator === \"isnotnull\"\n    || operator === \"isempty\"\n    || operator === \"isnotempty\");\nconst validFilters = ({ value, operator }) => !isNullOrEmptyString(value) || isNoValueOperator(operator);\nconst trimFilters = filter$$1 => {\n    filter$$1.filters = filter$$1.filters.filter(validFilters);\n    return filter$$1;\n};\nconst findParent = (filters, field, parent) => {\n    return filters.reduce((acc, filter$$1) => {\n        if (acc) {\n            return acc;\n        }\n        if (filter$$1.filters) {\n            return findParent(filter$$1.filters, field, filter$$1);\n        }\n        else if (filter$$1.field === field) {\n            return parent;\n        }\n        return acc;\n    }, undefined); // tslint:disable-line:align\n};\nconst parentLogicOfDefault = (filter$$1, field, def = \"and\") => {\n    const parent = findParent(((filter$$1 || {}).filters || []), field);\n    return isPresent(parent) ? parent.logic : def;\n};\n/**\n * @hidden\n */\nclass FilterMenuContainerComponent {\n    constructor(parentService, childService, localization, cd) {\n        this.parentService = parentService;\n        this.childService = childService;\n        this.localization = localization;\n        this.cd = cd;\n        this.close = new EventEmitter();\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-action-buttons k-button-group';\n        this._templateContext = {};\n    }\n    get filter() {\n        return this._filter;\n    }\n    /**\n     * The current root filter.\n     * @type {CompositeFilterDescriptor}\n     */\n    set filter(value) {\n        this._filter = cloneFilters(value);\n    }\n    get childFilter() {\n        if (!isPresent(this._childFilter)) {\n            this._childFilter = {\n                filters: filtersByField(this.filter, (this.column || {}).field),\n                logic: parentLogicOfDefault(this.filter, (this.column || {}).field)\n            };\n        }\n        return this._childFilter;\n    }\n    ngOnInit() {\n        this.subscription = this.childService.changes.subscribe(filter$$1 => this._childFilter = filter$$1);\n        this.subscription.add(this.localization.changes.subscribe(() => this.cd.markForCheck()));\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    get disabled() {\n        return !this.childFilter.filters.some(validFilters);\n    }\n    get templateContext() {\n        this._templateContext.column = this.column;\n        this._templateContext.filter = this.childFilter;\n        this._templateContext.filterService = this.childService;\n        // tslint:disable-next-line:no-string-literal\n        this._templateContext[\"$implicit\"] = this.childFilter;\n        return this._templateContext;\n    }\n    get hasTemplate() {\n        return isPresent(this.column) && isPresent(this.column.filterMenuTemplateRef);\n    }\n    submit() {\n        const filter$$1 = trimFilters(this.childFilter);\n        if (filter$$1.filters.length) {\n            const root = this.filter || {\n                filters: [],\n                logic: \"and\"\n            };\n            removeFilter(root, this.column.field);\n            root.filters.push(filter$$1);\n            this.parentService.filter(root);\n        }\n        this.close.emit();\n        return false;\n    }\n    reset() {\n        const root = this.filter || {\n            filters: [],\n            logic: \"and\"\n        };\n        removeFilter(root, this.column.field);\n        this.parentService.filter(root);\n        this.close.emit();\n    }\n    get clearText() {\n        return this.localization.get(\"filterClearButton\");\n    }\n    get filterText() {\n        return this.localization.get(\"filterFilterButton\");\n    }\n}\nFilterMenuContainerComponent.decorators = [\n    { type: Component, args: [{\n                providers: [FilterService],\n                selector: 'kendo-grid-filter-menu-container',\n                template: `\n        <form (submit)=\"submit()\" (reset)=\"reset()\"\n            class=\"k-filter-menu k-group k-reset k-state-border-up\">\n            <div class=\"k-filter-menu-container\">\n                <ng-container [ngSwitch]=\"hasTemplate\">\n                    <ng-container *ngSwitchCase=\"false\">\n                        <ng-container\n                            kendoFilterMenuHost\n                            [filterService]=\"childService\"\n                            [column]=\"column\"\n                            [filter]=\"childFilter\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngSwitchCase=\"true\">\n                        <ng-template\n                            *ngIf=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutlet]=\"column.filterMenuTemplateRef\"\n                            [ngTemplateOutletContext]=\"templateContext\"\n                            >\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n                <div [ngClass]=\"actionsClass\">\n                    <button type=\"reset\" class=\"k-button\">{{clearText}}</button>\n                    <button type=\"submit\" class=\"k-button k-primary\" [disabled]=\"disabled\">{{filterText}}</button>\n                </div>\n            </div>\n        </form>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterMenuContainerComponent.ctorParameters = () => [\n    { type: FilterService, decorators: [{ type: SkipSelf }] },\n    { type: FilterService },\n    { type: LocalizationService },\n    { type: ChangeDetectorRef }\n];\nFilterMenuContainerComponent.propDecorators = {\n    close: [{ type: Output }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    actionsClass: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass FilterMenuInputWrapperComponent extends FilterInputWrapperComponent {\n    constructor() {\n        super(null);\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    operatorChange(dataItem) {\n        this.currentOperator = dataItem;\n    }\n    filterChange(filter$$1) {\n        this.applyFilter(filter$$1);\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    get currentFilter() {\n        return this._currentFilter;\n    }\n    /**\n     * The current filter for the associated column field.\n     * @readonly\n     * @type {FilterDescriptor}\n     */\n    set currentFilter(value) {\n        this._currentFilter = value;\n    }\n    updateFilter(filter$$1) {\n        Object.assign(this.currentFilter, filter$$1);\n        return this.filter;\n    }\n    onChange(value) {\n        this.filterChange(this.updateFilter({\n            field: this.column.field,\n            operator: this.currentOperator,\n            value: value\n        }));\n    }\n}\nFilterMenuInputWrapperComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-filter-menu-input-wrapper',\n                template: `\n        <kendo-dropdownlist\n            [data]=\"operators\"\n            (valueChange)=\"operatorChange($event)\"\n            [value]=\"currentOperator\"\n            [valuePrimitive]=\"true\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <ng-content></ng-content>\n    `\n            },] },\n];\n/** @nocollapse */\nFilterMenuInputWrapperComponent.ctorParameters = () => [];\nFilterMenuInputWrapperComponent.propDecorators = {\n    filterService: [{ type: Input }],\n    currentFilter: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass StringFilterMenuInputComponent {\n    constructor() {\n        this.operators = [];\n    }\n}\nStringFilterMenuInputComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-string-filter-menu-input',\n                template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n            >\n            <input class=\"k-textbox\" kendoFilterInput [filterDelay]=\"0\" [ngModel]=\"currentFilter?.value\" />\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n            },] },\n];\nStringFilterMenuInputComponent.propDecorators = {\n    operators: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }],\n    currentFilter: [{ type: Input }],\n    filterService: [{ type: Input }]\n};\n\n/**\n * Represents a string-filter menu component.\n * ([see example]({% slug builtinfiltertemplate_grid %}#toc-configuration-components-for-filter-templates)).\n */\nclass StringFilterMenuComponent extends StringFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will displayed.\n         */\n        this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nStringFilterMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-string-filter-menu',\n                template: `\n        <kendo-grid-string-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\">\n        </kendo-grid-string-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\" (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-string-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\">\n        </kendo-grid-string-filter-menu-input>\n    `\n            },] },\n];\n/** @nocollapse */\nStringFilterMenuComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nStringFilterMenuComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    extra: [{ type: Input }],\n    filterService: [{ type: Input }]\n};\n\n/**\n * Represents a numeric-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *          <kendo-grid-numeric-filter-menu\n *              [column]=\"column\"\n *              [filter]=\"filter\"\n *              [filterService]=\"filterService\"\n *              >\n *          </kendo-grid-numeric-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass NumericFilterMenuComponent extends NumericFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will displayed.\n         */\n        this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nNumericFilterMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-numeric-filter-menu',\n                template: `\n        <kendo-grid-numeric-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-numeric-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [format]=\"format\"\n            [decimals]=\"decimals\"\n            [spinners]=\"spinners\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [step]=\"step\"\n            >\n        </kendo-grid-numeric-filter-menu-input>\n    `\n            },] },\n];\n/** @nocollapse */\nNumericFilterMenuComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nNumericFilterMenuComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    extra: [{ type: Input }],\n    filterService: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass NumericFilterMenuInputComponent {\n    constructor(localization) {\n        this.localization = localization;\n        this.operators = [];\n        /**\n         * Specifies the value which is used to increment or decrement the component value.\n         * @type {numeric}\n         */\n        this.step = 1;\n        /**\n         * Specifies whether the **Up** and **Down** spin buttons will be rendered.\n         * @type {boolean}\n         */\n        this.spinners = true;\n    }\n    messageFor(key) {\n        return this.localization.get(key);\n    }\n}\nNumericFilterMenuInputComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-numeric-filter-menu-input',\n                template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n        >\n            <kendo-numerictextbox\n                kendoFilterInput\n                [filterDelay]=\"0\"\n                [autoCorrect]=\"true\"\n                [value]=\"currentFilter?.value\"\n                [format]=\"format\"\n                [decimals]=\"decimals\"\n                [spinners]=\"spinners\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [step]=\"step\"\n            >\n                <kendo-numerictextbox-messages\n                    [increment]=\"messageFor('filterNumericIncrement')\"\n                    [decrement]=\"messageFor('filterNumericDecrement')\"\n                >\n                </kendo-numerictextbox-messages>\n            </kendo-numerictextbox>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n            },] },\n];\n/** @nocollapse */\nNumericFilterMenuInputComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nNumericFilterMenuInputComponent.propDecorators = {\n    operators: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }],\n    currentFilter: [{ type: Input }],\n    filterService: [{ type: Input }],\n    step: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    spinners: [{ type: Input }],\n    decimals: [{ type: Input }],\n    format: [{ type: Input }]\n};\n\n/**\n * Represents a date-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"OrderDate\" title=\"Order Date\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-date-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-date-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass DateFilterMenuComponent extends DateFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        this.logicOperators = logicOperators(this.localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        /**\n         * Determines if the inputs of second criteria will be displayed.\n         */\n        this.extra = true;\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    get firstFilter() {\n        return setFilter(0, this.filter, (this.column || {}).field, this.operator);\n    }\n    get secondFilter() {\n        return setFilter(1, this.filter, (this.column || {}).field, this.operator);\n    }\n    logicChange(value) {\n        this.filter.logic = value;\n    }\n    localizationChange() {\n        this.logicOperators = logicOperators(this.localization);\n        super.localizationChange();\n    }\n}\nDateFilterMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-date-filter-menu',\n                template: `\n        <kendo-grid-date-filter-menu-input\n            [currentFilter]=\"firstFilter\"\n            [operators]=\"operators\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            >\n        </kendo-grid-date-filter-menu-input>\n        <kendo-dropdownlist\n            *ngIf=\"extra\"\n            class=\"k-filter-and\"\n            [data]=\"logicOperators\"\n            [valuePrimitive]=\"true\"\n            (valueChange)=\"logicChange($event)\"\n            [value]=\"filter?.logic\"\n            textField=\"text\"\n            valueField=\"value\">\n        </kendo-dropdownlist>\n        <kendo-grid-date-filter-menu-input\n            *ngIf=\"extra\"\n            [operators]=\"operators\"\n            [currentFilter]=\"secondFilter\"\n            [filterService]=\"filterService\"\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [activeView]=\"activeView\"\n            [bottomView]=\"bottomView\"\n            [topView]=\"topView\"\n            [format]=\"format\"\n            [formatPlaceholder]=\"formatPlaceholder\"\n            [placeholder]=\"placeholder\"\n            [min]=\"min\"\n            [max]=\"max\"\n            [weekNumber]=\"weekNumber\"\n            >\n        </kendo-grid-date-filter-menu-input>\n    `\n            },] },\n];\n/** @nocollapse */\nDateFilterMenuComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nDateFilterMenuComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    extra: [{ type: Input }],\n    filterService: [{ type: Input }]\n};\n\n/**\n * Represents a Boolean-filter menu component.\n *\n * @example\n *  ```html-no-run\n *      <kendo-grid-column field=\"Discontinued\" title=\"Discontinued\">\n *          <ng-template kendoGridFilterMenuTemplate let-filter let-column=\"column\" let-filterService=\"filterService\">\n *            <kendo-grid-boolean-filter-menu\n *                [column]=\"column\"\n *                [filter]=\"filter\"\n *                [filterService]=\"filterService\"\n *                >\n *            </kendo-grid-boolean-filter-menu>\n *          </ng-template>\n *      </kendo-grid-column>\n *   ```\n */\nclass BooleanFilterMenuComponent extends BooleanFilterComponent {\n    constructor(localization) {\n        super(null, localization);\n        /**\n         * The current menu filter.\n         * @type {CompositeFilterDescriptor}\n         */\n        this.filter = { filters: [], logic: \"and\" };\n        this.idPrefix = guid();\n    }\n    /**\n     * @hidden\n     */\n    get hostClasses() {\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    radioId(value) {\n        return `${this.idPrefix}_${value}`;\n    }\n    /**\n     * @hidden\n     */\n    onChange(value) {\n        this.applyFilter(this.updateFilter({\n            field: this.column.field,\n            operator: \"eq\",\n            value: value\n        }));\n    }\n    /**\n     * @hidden\n     */\n    isSelected(radioValue) {\n        return this.filtersByField(this.column.field).some(({ value }) => value === radioValue);\n    }\n}\nBooleanFilterMenuComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-boolean-filter-menu',\n                template: `\n        <ul class=\"k-radio-list k-reset\">\n            <li *ngFor=\"let item of items\">\n                <input type=\"radio\"\n                    [name]=\"idPrefix\"\n                    class=\"k-radio\"\n                    [checked]=\"isSelected(item.value)\"\n                    [attr.id]=\"radioId(item.value)\"\n                    (change)=\"onChange(item.value)\"\n                />\n                <label class=\"k-radio-label\" [attr.for]=\"radioId(item.value)\">{{item.text}}</label>\n            </li>\n        </ul>\n    `\n            },] },\n];\n/** @nocollapse */\nBooleanFilterMenuComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nBooleanFilterMenuComponent.propDecorators = {\n    hostClasses: [{ type: HostBinding, args: ['class.k-filtercell',] }],\n    filter: [{ type: Input }],\n    filterService: [{ type: Input }]\n};\n\n/**\n * @hidden\n *\n * > List the following components as `entryComponents` in the GridModule.\n */\nconst filterMenuComponentFactory = (type) => ({\n    \"boolean\": BooleanFilterMenuComponent,\n    \"date\": DateFilterMenuComponent,\n    \"numeric\": NumericFilterMenuComponent,\n    \"text\": StringFilterMenuComponent\n}[type]);\n\n/**\n * @hidden\n */\nclass FilterMenuHostDirective extends FilterHostDirective {\n    constructor(host, resolver) {\n        super(host, resolver);\n    }\n    componentType() {\n        if (isPresent(this.column) && !isNullOrEmptyString(this.column.filter)) {\n            return filterMenuComponentFactory(this.column.filter);\n        }\n        return StringFilterMenuComponent;\n    }\n    initComponent(ctx) {\n        super.initComponent(ctx);\n        this.component.instance.filterService = this.filterService;\n    }\n}\nFilterMenuHostDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoFilterMenuHost]'\n            },] },\n];\n/** @nocollapse */\nFilterMenuHostDirective.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver }\n];\nFilterMenuHostDirective.propDecorators = {\n    filterService: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass DateFilterMenuInputComponent {\n    constructor(popupService, localizationService) {\n        this.popupService = popupService;\n        this.localizationService = localizationService;\n        this.operators = [];\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    open(picker) {\n        this.subscription = this.popupService.onClose\n            .pipe(filter(() => picker.isActive))\n            .subscribe(e => e.preventDefault());\n    }\n    messageFor(key) {\n        return this.localizationService.get(key);\n    }\n}\nDateFilterMenuInputComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-date-filter-menu-input',\n                template: `\n        <kendo-grid-filter-menu-input-wrapper\n            [column]=\"column\"\n            [filter]=\"filter\"\n            [operators]=\"operators\"\n            [defaultOperator]=\"operator\"\n            [currentFilter]=\"currentFilter\"\n            [filterService]=\"filterService\"\n        >\n            <kendo-datepicker\n                #picker\n                kendoFilterInput\n                [filterDelay]=\"0\"\n                (open)=\"open(picker)\"\n                [value]=\"currentFilter?.value\"\n                [placeholder]=\"placeholder\"\n                [formatPlaceholder]=\"formatPlaceholder\"\n                [format]=\"format\"\n                [min]=\"min\"\n                [max]=\"max\"\n                [activeView]=\"activeView\"\n                [bottomView]=\"bottomView\"\n                [topView]=\"topView\"\n                [weekNumber]=\"weekNumber\"\n            >\n                <kendo-datepicker-messages\n                    [toggle]=\"messageFor('filterDateToggle')\"\n                    [today]=\"messageFor('filterDateToday')\"\n                >\n                </kendo-datepicker-messages>\n            </kendo-datepicker>\n        </kendo-grid-filter-menu-input-wrapper>\n    `\n            },] },\n];\n/** @nocollapse */\nDateFilterMenuInputComponent.ctorParameters = () => [\n    { type: SinglePopupService },\n    { type: LocalizationService }\n];\nDateFilterMenuInputComponent.propDecorators = {\n    operators: [{ type: Input }],\n    column: [{ type: Input }],\n    filter: [{ type: Input }],\n    operator: [{ type: Input }],\n    currentFilter: [{ type: Input }],\n    filterService: [{ type: Input }],\n    format: [{ type: Input }],\n    formatPlaceholder: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    min: [{ type: Input }],\n    max: [{ type: Input }],\n    activeView: [{ type: Input }],\n    bottomView: [{ type: Input }],\n    topView: [{ type: Input }],\n    weekNumber: [{ type: Input }]\n};\n\nconst INTERNAL_COMPONENTS$2 = [\n    FilterMenuComponent,\n    FilterMenuContainerComponent,\n    FilterMenuInputWrapperComponent,\n    StringFilterMenuInputComponent,\n    StringFilterMenuComponent,\n    FilterMenuTemplateDirective,\n    NumericFilterMenuComponent,\n    NumericFilterMenuInputComponent,\n    DateFilterMenuInputComponent,\n    DateFilterMenuComponent,\n    FilterMenuHostDirective,\n    BooleanFilterMenuComponent\n];\nconst ENTRY_COMPONENTS$1 = [\n    StringFilterMenuComponent,\n    NumericFilterMenuComponent,\n    DateFilterMenuComponent,\n    BooleanFilterMenuComponent\n];\n/**\n * @hidden\n */\nclass FilterMenuModule {\n    static exports() {\n        return [\n            StringFilterMenuComponent,\n            FilterMenuTemplateDirective,\n            NumericFilterMenuComponent,\n            DateFilterMenuComponent,\n            BooleanFilterMenuComponent,\n            SharedFilterModule.exports()\n        ];\n    }\n}\nFilterMenuModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [INTERNAL_COMPONENTS$2],\n                entryComponents: ENTRY_COMPONENTS$1,\n                exports: [INTERNAL_COMPONENTS$2, SharedFilterModule],\n                imports: [SharedFilterModule]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass ColumnListComponent {\n    constructor(element, ngZone, renderer) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.reset = new EventEmitter();\n        this.apply = new EventEmitter();\n        this.columnChange = new EventEmitter();\n        this.autoSync = true;\n        this.allowHideAll = false;\n        this.actionsClass = 'k-action-buttons';\n        this.unlockedCount = 0;\n    }\n    get className() {\n        return true;\n    }\n    set columns(value) {\n        this._columns = value.filter(column => column.includeInChooser !== false);\n        this.allColumns = value;\n        this.updateColumnState();\n    }\n    get columns() {\n        return this._columns;\n    }\n    isDisabled(column) {\n        return !(this.allowHideAll || this.hasFiltered || column.hidden || this.columns.find(current => current !== column && !current.hidden)) ||\n            (this.hasVisibleLocked && !this.hasUnlockedFiltered && this.unlockedCount === 1 && !column.locked && !column.hidden);\n    }\n    ngOnInit() {\n        if (!this.element) {\n            return;\n        }\n        this.ngZone.runOutsideAngular(() => {\n            this.domSubscriptions = this.renderer.listen(this.element.nativeElement, 'click', (e) => {\n                if (hasClasses(e.target, 'k-checkbox')) {\n                    if (this.autoSync) {\n                        const index = parseInt(e.target.getAttribute('data-index'), 10);\n                        const column = this.columns[index];\n                        const hidden = !e.target.checked;\n                        if (Boolean(column.hidden) !== hidden) {\n                            this.ngZone.run(() => {\n                                column.hidden = hidden;\n                                this.columnChange.emit([column]);\n                            });\n                        }\n                    }\n                    else {\n                        this.updateDisabled();\n                    }\n                }\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.domSubscriptions) {\n            this.domSubscriptions();\n        }\n    }\n    cancelChanges() {\n        this.forEachCheckBox((element, index) => {\n            element.checked = !this.columns[index].hidden;\n        });\n        this.updateDisabled();\n        this.reset.emit();\n    }\n    applyChanges() {\n        const changed = [];\n        this.forEachCheckBox((element, index) => {\n            const column = this.columns[index];\n            const hidden = !element.checked;\n            if (Boolean(column.hidden) !== hidden) {\n                column.hidden = hidden;\n                changed.push(column);\n            }\n        });\n        this.updateDisabled();\n        this.apply.emit(changed);\n    }\n    forEachCheckBox(callback) {\n        const checkboxes = this.element.nativeElement.getElementsByClassName('k-checkbox');\n        const length = checkboxes.length;\n        for (let idx = 0; idx < length; idx++) {\n            callback(checkboxes[idx], idx);\n        }\n    }\n    updateDisabled() {\n        if (this.allowHideAll && !this.hasLocked) {\n            return;\n        }\n        const checkedItems = [];\n        this.forEachCheckBox((checkbox, index) => {\n            if (checkbox.checked) {\n                checkedItems.push({ checkbox, index });\n            }\n            checkbox.disabled = false;\n        });\n        if (!this.allowHideAll && checkedItems.length === 1 && !this.hasFiltered) {\n            checkedItems[0].checkbox.disabled = true;\n        }\n        else if (this.hasLocked && !this.hasUnlockedFiltered) {\n            const columns = this.columns;\n            const checkedUnlocked = checkedItems.filter(item => !columns[item.index].locked);\n            if (checkedUnlocked.length === 1) {\n                checkedUnlocked[0].checkbox.disabled = true;\n            }\n        }\n    }\n    updateColumnState() {\n        this.hasLocked = this.allColumns.filter(column => column.locked && (!column.hidden || column.includeInChooser !== false)).length > 0;\n        this.hasVisibleLocked = this.allColumns.filter(column => column.locked && !column.hidden).length > 0;\n        this.unlockedCount = this.columns.filter(column => !column.locked && !column.hidden).length;\n        const filteredColumns = this.allColumns.filter(column => column.includeInChooser === false && !column.hidden);\n        if (filteredColumns.length) {\n            this.hasFiltered = filteredColumns.length > 0;\n            this.hasUnlockedFiltered = filteredColumns.filter(column => !column.locked).length > 0;\n        }\n        else {\n            this.hasFiltered = false;\n            this.hasUnlockedFiltered = false;\n        }\n    }\n}\nColumnListComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-columnlist',\n                template: `\n        <div class=\"k-column-list\">\n            <label *ngFor=\"let column of columns; let index = index;\" class='k-column-list-item'>\n                <input class=\"k-checkbox\" type=\"checkbox\" [attr.data-index]=\"index\" [checked]=\"!column.hidden\" [disabled]=\"isDisabled(column)\" /><span class=\"k-checkbox-label\">{{ column.displayTitle }}</span>\n            </label>\n        </div>\n        <div [ngClass]=\"actionsClass\" *ngIf=\"!autoSync\">\n            <button type=\"button\" class=\"k-button\" (click)=\"cancelChanges()\">{{ resetText }}</button>\n            <button type=\"button\" class=\"k-button k-primary\" (click)=\"applyChanges()\">{{ applyText }}</button>\n        </div>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnListComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 }\n];\nColumnListComponent.propDecorators = {\n    className: [{ type: HostBinding, args: [\"class.k-column-list-wrapper\",] }],\n    reset: [{ type: Output }],\n    apply: [{ type: Output }],\n    columnChange: [{ type: Output }],\n    columns: [{ type: Input }],\n    autoSync: [{ type: Input }],\n    allowHideAll: [{ type: Input }],\n    applyText: [{ type: Input }],\n    resetText: [{ type: Input }],\n    actionsClass: [{ type: Input }]\n};\n\n/**\n * Represents the component for selecting columns in the Grid. To enable the user to show or hide columns,\n * add the component inside a [`ToolbarTemplate`]({% slug api_grid_toolbartemplatedirective %}) directive.\n *\n * @example\n * {% meta height:300 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\">\n *          <ng-template kendoGridToolbarTemplate>\n *             <kendo-grid-column-chooser></kendo-grid-column-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\nclass ColumnChooserComponent {\n    constructor(localization, columnInfoService, popupService, ngZone, renderer, changeDetector) {\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.popupService = popupService;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.changeDetector = changeDetector;\n        /**\n         * Specifies if the changes in the visibility of the column will be immediately applied.\n         */\n        this.autoSync = false;\n        /**\n         * Specifies if all columns can be hidden.\n         */\n        this.allowHideAll = true;\n    }\n    get columns() {\n        return this.columnInfoService.leafNamedColumns;\n    }\n    ngOnDestroy() {\n        this.close();\n    }\n    /**\n     * @hidden\n     */\n    toggle(anchor, template) {\n        if (!this.popupRef) {\n            const direction = this.localization.rtl ? 'right' : 'left';\n            this.popupRef = this.popupService.open({\n                anchor: anchor,\n                content: template,\n                positionMode: 'absolute',\n                anchorAlign: { vertical: 'bottom', horizontal: direction },\n                popupAlign: { vertical: 'top', horizontal: direction }\n            });\n            this.renderer.setAttribute(this.popupRef.popupElement, 'dir', this.localization.rtl ? 'rtl' : 'ltr');\n            this.ngZone.runOutsideAngular(() => this.closeClick = this.renderer.listen(\"document\", \"click\", ({ target }) => {\n                if (!closest(target, node => node === this.popupRef.popupElement || node === anchor)) {\n                    this.close();\n                }\n            }));\n        }\n        else {\n            this.close();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onApply(changed) {\n        this.close();\n        if (changed.length) {\n            this.changeDetector.markForCheck();\n            this.columnInfoService.changeVisibility(changed);\n        }\n    }\n    /**\n     * @hidden\n     */\n    onChange(changed) {\n        this.changeDetector.markForCheck();\n        this.columnInfoService.changeVisibility(changed);\n    }\n    close() {\n        if (this.popupRef) {\n            this.popupRef.close();\n            this.popupRef = null;\n        }\n        this.detachClose();\n    }\n    detachClose() {\n        if (this.closeClick) {\n            this.closeClick();\n            this.closeClick = null;\n        }\n    }\n}\nColumnChooserComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-column-chooser',\n                template: `\n        <button #anchor\n            type=\"button\"\n            (click)=\"toggle(anchor, template)\"\n            class=\"k-button k-bare k-button-icon\"\n            [attr.title]=\"localization.get('columns')\">\n            <span class=\"k-icon k-i-columns\"></span>\n        </button>\n        <ng-template #template>\n            <span class='k-column-chooser-title'>{{ localization.get('columns') }}</span>\n            <kendo-grid-columnlist\n                [columns]=\"columns\"\n                [applyText]=\"localization.get('columnsApply')\"\n                [resetText]=\"localization.get('columnsReset')\"\n                [autoSync]=\"autoSync\"\n                [allowHideAll]=\"allowHideAll\"\n                (apply)=\"onApply($event)\"\n                (columnChange)=\"onChange($event)\">\n            </kendo-grid-columnlist>\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnChooserComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ColumnInfoService },\n    { type: PopupService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nColumnChooserComponent.propDecorators = {\n    autoSync: [{ type: Input }],\n    allowHideAll: [{ type: Input }]\n};\n\n/**\n * Represents the service that is passed to the\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <span class=\"k-icon k-i-close\" (click)=\"service.close()\"\n *                  style=\"position: absolute; right: 5px; top: 5px;cursor: pointer;\"></span>\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuService {\n    constructor() {\n        /**\n         * @hidden\n         */\n        this.closeMenu = new EventEmitter();\n    }\n    /**\n     * Closes the column menu.\n     */\n    close() {\n        this.closeMenu.emit();\n    }\n}\nColumnMenuService.decorators = [\n    { type: Injectable },\n];\n\n/**\n * @hidden\n */\nclass ColumnMenuItemBase {\n    constructor() {\n        this.hostClass = true;\n    }\n    ngOnInit() {\n        if (isDevMode() && !this.service) {\n            throw new Error('The service input of the predefined column menu components is mandatory.');\n        }\n    }\n    /**\n     * @hidden\n     */\n    close() {\n        this.service.close();\n    }\n}\nColumnMenuItemBase.propDecorators = {\n    service: [{ type: Input }],\n    hostClass: [{ type: HostBinding, args: ['class.k-columnmenu-item-wrapper',] }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Represents the component for selecting columns in the Grid that can be placed\n * inside a [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-chooser` component.\n *\n * @example\n * {% meta height:300 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-chooser [service]=\"service\">\n *              </kendo-grid-columnmenu-chooser>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [hidden]=\"true\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\nclass ColumnMenuChooserComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n        super();\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.changeDetector = changeDetector;\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        /**\n         * Specifies if the content is expanded.\n         */\n        this.expanded = false;\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-columnmenu-actions';\n    }\n    get columns() {\n        return this.columnInfoService.leafNamedColumns;\n    }\n    /**\n     * @hidden\n     */\n    onApply(changed) {\n        this.close();\n        if (changed.length) {\n            this.changeDetector.markForCheck();\n            this.columnInfoService.changeVisibility(changed);\n        }\n    }\n}\nColumnMenuChooserComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-columnmenu-chooser',\n                template: `\n        <kendo-grid-columnmenu-item [text]=\"localization.get('columns')\"\n            icon=\"columns\" [expanded]=\"expanded\" (collapse)=\"collapse.emit()\" (expand)=\"expand.emit()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                <kendo-grid-columnlist\n                    [applyText]=\"localization.get('columnsApply')\"\n                    [resetText]=\"localization.get('columnsReset')\"\n                    [columns]=\"columns\"\n                    [autoSync]=\"false\"\n                    [allowHideAll]=\"false\"\n                    [actionsClass]=\"actionsClass\"\n                    (apply)=\"onApply($event)\">\n                </kendo-grid-columnlist>\n            </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnMenuChooserComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ColumnInfoService },\n    { type: ChangeDetectorRef }\n];\nColumnMenuChooserComponent.propDecorators = {\n    expand: [{ type: Output }],\n    collapse: [{ type: Output }],\n    expanded: [{ type: Input }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Represents the component for editing column filters in the Grid that can be placed\n * inside a [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-filter` component.\n *\n * @example\n * {% meta height:400 %}\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-filter [service]=\"service\">\n *              </kendo-grid-columnmenu-filter>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n * {% endmeta %}\n */\nclass ColumnMenuFilterComponent extends ColumnMenuItemBase {\n    constructor(localization) {\n        super();\n        this.localization = localization;\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        /**\n         * Specifies if the content is expanded.\n         */\n        this.expanded = false;\n        /**\n         * @hidden\n         */\n        this.actionsClass = 'k-columnmenu-actions';\n    }\n}\nColumnMenuFilterComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-columnmenu-filter',\n                template: `\n        <kendo-grid-columnmenu-item [text]=\"localization.get('filter')\" icon=\"filter\"\n            [expanded]=\"expanded\" (collapse)=\"collapse.emit()\" (expand)=\"expand.emit()\">\n            <ng-template kendoGridColumnMenuItemContentTemplate>\n                    <kendo-grid-filter-menu-container\n                        [column]=\"service.column\"\n                        [filter]=\"service.filter\"\n                        [actionsClass]=\"actionsClass\"\n                        (close)=\"close()\">\n                    </kendo-grid-filter-menu-container>\n                </ng-template>\n        </kendo-grid-columnmenu-item>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnMenuFilterComponent.ctorParameters = () => [\n    { type: LocalizationService }\n];\nColumnMenuFilterComponent.propDecorators = {\n    expand: [{ type: Output }],\n    collapse: [{ type: Output }],\n    expanded: [{ type: Input }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Represents the content template of the\n * [`kendo-grid-columnmenu-item`]({% slug api_grid_columnmenuitemcomponent %}) component.\n * Provides an option for specifying the content of a column item.\n * To define the content template, nest an `<ng-template>` tag with the\n * `kendoGridColumnMenuItemContentTemplate` directive inside a `<kendo-grid-columnmenu-item>`.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate>\n *              <kendo-grid-columnmenu-item text=\"Item Text\" [expanded]=\"true\">\n *                  <ng-template kendoGridColumnMenuItemContentTemplate>\n *                      Item Content\n *                  </ng-template>\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuItemContentTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nColumnMenuItemContentTemplateDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridColumnMenuItemContentTemplate]'\n            },] },\n];\n/** @nocollapse */\nColumnMenuItemContentTemplateDirective.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * Represents an item that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\" [resizable]=\"true\" #grid>\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\" let-column=\"column\">\n *              <kendo-grid-columnmenu-item icon=\"arrows-resizing\" text=\"Fit column\"\n *                  (itemClick)=\"grid.autoFitColumn(column); service.close()\">\n *              </kendo-grid-columnmenu-item>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuItemComponent {\n    constructor() {\n        /**\n         * Fires when the item is clicked.\n         */\n        this.itemClick = new EventEmitter();\n        /**\n         * Fires when the content is expanded.\n         */\n        this.expand = new EventEmitter();\n        /**\n         * Fires when the content is collapsed.\n         */\n        this.collapse = new EventEmitter();\n        this.contentState = 'collapsed';\n    }\n    get iconClass() {\n        return `k-i-${this.icon}`;\n    }\n    ngOnChanges(changes) {\n        if (changes.expanded) {\n            this.updateContentState();\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        this.itemClick.emit(e);\n        if (this.contentTemplate) {\n            this.expanded = !this.expanded;\n            this.updateContentState();\n            if (this.expanded) {\n                this.expand.emit();\n            }\n            else {\n                this.collapse.emit();\n            }\n        }\n    }\n    updateContentState() {\n        this.contentState = this.expanded ? 'expanded' : 'collapsed';\n    }\n}\nColumnMenuItemComponent.decorators = [\n    { type: Component, args: [{\n                animations: [\n                    trigger('state', [\n                        state('collapsed', style({ display: 'none' })),\n                        state('expanded', style({ display: 'block' })),\n                        transition('collapsed => expanded', [\n                            style({\n                                height: '0px',\n                                display: 'block'\n                            }),\n                            animate('100ms ease-in', style({\n                                height: '*'\n                            }))\n                        ]),\n                        transition('expanded => collapsed', [\n                            style({\n                                height: '*'\n                            }),\n                            animate('100ms ease-in', style({\n                                height: '0px'\n                            }))\n                        ])\n                    ])\n                ],\n                selector: 'kendo-grid-columnmenu-item',\n                template: `\n        <div class=\"k-columnmenu-item\" (click)=\"onClick($event)\" [class.k-state-selected]=\"selected\" [class.k-state-disabled]=\"disabled\">\n           <span *ngIf=\"icon\" class=\"k-icon\" [ngClass]=\"iconClass\">\n           </span>\n           {{ text }}\n        </div>\n        <div *ngIf=\"contentTemplate\" [@state]=\"contentState\" style=\"overflow:hidden;\" class=\"k-columnmenu-item-content\">\n            <ng-container [ngTemplateOutlet]=\"contentTemplate.templateRef\">\n            </ng-container>\n        <div>\n    `\n            },] },\n];\nColumnMenuItemComponent.propDecorators = {\n    itemClick: [{ type: Output }],\n    expand: [{ type: Output }],\n    collapse: [{ type: Output }],\n    icon: [{ type: Input }],\n    text: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    expanded: [{ type: Input }],\n    contentTemplate: [{ type: ContentChild, args: [ColumnMenuItemContentTemplateDirective,] }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Represents a column-menu item for sorting Grid columns that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to sort the column.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-sort` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [kendoGridBinding]=\"data\" [sortable]=\"true\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-sort [service]=\"service\">\n *              </kendo-grid-columnmenu-sort>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }, { Field1: 'Foo1', Field2: 'Bar1' }];\n * }\n *\n * ```\n */\nclass ColumnMenuSortComponent extends ColumnMenuItemBase {\n    constructor(localization, sortService) {\n        super();\n        this.localization = localization;\n        this.sortService = sortService;\n    }\n    get sortedAsc() {\n        const descriptor = this.descriptor;\n        return descriptor && (!descriptor.dir || descriptor.dir === 'asc');\n    }\n    get sortedDesc() {\n        const descriptor = this.descriptor;\n        return descriptor && descriptor.dir === 'desc';\n    }\n    /**\n     * @hidden\n     */\n    toggleSort(dir) {\n        const field = this.service.column.field;\n        const { mode, allowUnsort } = normalize$1(this.service.sortable);\n        const descriptor = this.descriptor;\n        const sort = mode === 'multiple' ? this.service.sort.filter(s => s.field !== field) : [];\n        if (descriptor && descriptor.dir === dir) {\n            if (!allowUnsort) {\n                return;\n            }\n        }\n        else {\n            sort.push({ field, dir });\n        }\n        this.sortService.sort(sort);\n        this.close();\n    }\n    get descriptor() {\n        return [].concat(this.service.sort || []).find(s => s.field === this.service.column.field);\n    }\n}\nColumnMenuSortComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-columnmenu-sort',\n                template: `\n        <kendo-grid-columnmenu-item [text]=\"localization.get('sortAscending')\"\n            icon=\"sort-asc-sm\" (itemClick)=\"toggleSort('asc')\" [selected]=\"sortedAsc\">\n        </kendo-grid-columnmenu-item>\n        <kendo-grid-columnmenu-item [text]=\"localization.get('sortDescending')\"\n            icon=\"sort-desc-sm\" (itemClick)=\"toggleSort('desc')\" [selected]=\"sortedDesc\">\n        </kendo-grid-columnmenu-item>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnMenuSortComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: SortService }\n];\n\nconst POPUP_CLASS = 'k-grid-columnmenu-popup';\n/**\n * Represents the [column menu]({% slug columnmenu_grid %}) component.\n */\nclass ColumnMenuComponent {\n    constructor(popupService, localization, service) {\n        this.popupService = popupService;\n        this.localization = localization;\n        this.service = service;\n        /**\n         * @hidden\n         */\n        this.standalone = true;\n        /**\n         * The settings for the Column Menu.\n         */\n        this.settings = {};\n        /**\n         * @hidden\n         */\n        this.sortable = true;\n        /**\n         * @hidden\n         */\n        this.expandedFilter = false;\n        /**\n         * @hidden\n         */\n        this.expandedColumns = false;\n        this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));\n    }\n    /**\n     * @hidden\n     */\n    get isActive() {\n        return (this.hasFilter && filtersByField(this.filter, this.column.field).length > 0) ||\n            (!this.sortable && this.hasSort && this.sort.find(descriptor => descriptor.field === this.column.field));\n    }\n    /**\n     * @hidden\n     */\n    get hasFilter() {\n        return hasFilter(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasSort() {\n        return hasSort(this.settings, this.column);\n    }\n    /**\n     * @hidden\n     */\n    get hasColumnChooser() {\n        return hasColumnChooser(this.settings);\n    }\n    /**\n     * @hidden\n     */\n    get hasLock() {\n        return hasLock(this.settings, this.column);\n    }\n    ngOnChanges() {\n        this.service.column = this.column;\n        this.service.sort = this.sort;\n        this.service.filter = this.filter;\n        this.service.sortable = this.sortable;\n    }\n    ngOnDestroy() {\n        this.close();\n        this.closeSubscription.unsubscribe();\n    }\n    /**\n     * @hidden\n     */\n    toggle(e, anchor, template) {\n        e.preventDefault();\n        this.expandedFilter = !this.hasColumnChooser;\n        this.expandedColumns = !this.hasFilter;\n        this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);\n    }\n    /**\n     * @hidden\n     */\n    close() {\n        this.popupService.destroy();\n        this.popupRef = null;\n    }\n    /**\n     * @hidden\n     */\n    onColumnsExpand() {\n        this.expandedColumns = true;\n        this.expandedFilter = false;\n    }\n    /**\n     * @hidden\n     */\n    onFilterExpand() {\n        this.expandedFilter = true;\n        this.expandedColumns = false;\n    }\n}\nColumnMenuComponent.decorators = [\n    { type: Component, args: [{\n                providers: [ColumnMenuService],\n                selector: 'kendo-grid-column-menu',\n                template: `\n        <a #anchor\n            class=\"k-grid-column-menu k-grid-filter\"\n            [ngClass]=\"{ 'k-state-active': isActive }\"\n            (click)=\"toggle($event, anchor, template)\"\n            href=\"#\"\n            tabindex=\"-1\"\n            [attr.title]=\"localization.get('columnMenu')\">\n            <span class=\"k-icon k-i-more-vertical\"></span>\n        </a>\n        <ng-template #template>\n            <ng-container [ngTemplateOutlet]=\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\"\n                          [ngTemplateOutletContext]=\"{ service: service, column: column }\">\n            </ng-container>\n        </ng-template>\n        <ng-template #defaultTemplate>\n            <kendo-grid-columnmenu-sort *ngIf=\"hasSort\" [service]=\"service\">\n            </kendo-grid-columnmenu-sort>\n            <kendo-grid-columnmenu-lock *ngIf=\"hasLock\" [service]=\"service\">\n            </kendo-grid-columnmenu-lock>\n            <kendo-grid-columnmenu-chooser *ngIf=\"hasColumnChooser\" [service]=\"service\"\n                [expanded]=\"expandedColumns\" (expand)=\"onColumnsExpand()\">\n            </kendo-grid-columnmenu-chooser>\n            <kendo-grid-columnmenu-filter *ngIf=\"hasFilter\" [service]=\"service\"\n                [expanded]=\"expandedFilter\" (expand)=\"onFilterExpand()\">\n            </kendo-grid-columnmenu-filter>\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnMenuComponent.ctorParameters = () => [\n    { type: SinglePopupService },\n    { type: LocalizationService },\n    { type: ColumnMenuService }\n];\nColumnMenuComponent.propDecorators = {\n    standalone: [{ type: HostBinding, args: ['class.k-grid-column-menu-standalone',] }, { type: Input }],\n    column: [{ type: Input }],\n    settings: [{ type: Input }],\n    sort: [{ type: Input }],\n    filter: [{ type: Input }],\n    sortable: [{ type: Input }],\n    columnMenuTemplate: [{ type: Input }]\n};\n\n/* tslint:disable:max-line-length */\n/**\n * Represents a column-menu item that can be placed inside a\n * [`ColumnMenuTemplate`]({% slug api_grid_columnmenutemplatedirective %}) directive.\n * Allows the user to lock or unlock the columns.\n *\n * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by\n * > the template to the service input of the `kendo-grid-columnmenu-lock` component.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *       <kendo-grid [data]=\"data\" [columnMenu]=\"true\">\n *          <ng-template kendoGridColumnMenuTemplate let-service=\"service\">\n *              <kendo-grid-columnmenu-lock [service]=\"service\">\n *              </kendo-grid-columnmenu-lock>\n *          </ng-template>\n *          <kendo-grid-column field=\"Field1\" [width]=\"100\"></kendo-grid-column>\n *          <kendo-grid-column field=\"Field2\" [width]=\"100\"></kendo-grid-column>\n *       </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];\n * }\n *\n * ```\n */\nclass ColumnMenuLockComponent extends ColumnMenuItemBase {\n    constructor(localization, columnInfoService, changeDetector) {\n        super();\n        this.localization = localization;\n        this.columnInfoService = columnInfoService;\n        this.changeDetector = changeDetector;\n    }\n    get text() {\n        return this.localization.get(this.locked ? 'unlock' : 'lock');\n    }\n    get icon() {\n        return this.locked ? 'unlock' : 'lock';\n    }\n    get disabled() {\n        return !this.locked && this.columnInfoService.unlockedRootCount < 2;\n    }\n    /**\n     * @hidden\n     */\n    toggleColumn() {\n        this.toggleHierarchy(!this.locked);\n        this.close();\n        this.changeDetector.markForCheck();\n    }\n    toggleHierarchy(locked) {\n        let root = this.service.column;\n        while (root.parent) {\n            root = root.parent;\n        }\n        const columns = [root];\n        const allChanged = [];\n        while (columns.length) {\n            const column = columns.shift();\n            column.locked = locked;\n            allChanged.push(column);\n            if (column.hasChildren) {\n                columns.push(...column.childrenArray);\n            }\n        }\n        this.columnInfoService.changeLocked(allChanged);\n    }\n    get locked() {\n        return this.service.column.locked;\n    }\n}\nColumnMenuLockComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-columnmenu-lock',\n                template: `\n       <kendo-grid-columnmenu-item [text]=\"text\" [icon]=\"icon\" (itemClick)=\"toggleColumn()\" [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    `\n            },] },\n];\n/** @nocollapse */\nColumnMenuLockComponent.ctorParameters = () => [\n    { type: LocalizationService },\n    { type: ColumnInfoService },\n    { type: ChangeDetectorRef }\n];\n\nconst COMPONENTS$1 = [\n    ColumnListComponent,\n    ColumnChooserComponent,\n    ColumnMenuChooserComponent,\n    ColumnMenuFilterComponent,\n    ColumnMenuItemComponent,\n    ColumnMenuItemContentTemplateDirective,\n    ColumnMenuSortComponent,\n    ColumnMenuComponent,\n    ColumnMenuLockComponent,\n    ColumnMenuTemplateDirective\n];\n/**\n * @hidden\n */\nclass ColumnMenuModule {\n    static exports() {\n        return [\n            ColumnChooserComponent,\n            ColumnMenuFilterComponent,\n            ColumnMenuItemComponent,\n            ColumnMenuItemContentTemplateDirective,\n            ColumnMenuSortComponent,\n            ColumnMenuLockComponent,\n            ColumnMenuChooserComponent,\n            ColumnMenuTemplateDirective,\n            ColumnMenuComponent\n        ];\n    }\n}\nColumnMenuModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMPONENTS$1],\n                imports: [CommonModule, FilterMenuModule],\n                exports: [COMPONENTS$1]\n            },] },\n];\n\nconst exportedModules$2 = [\n    HeaderComponent,\n    HeaderTemplateDirective,\n    ColumnHandleDirective,\n    SelectAllCheckboxDirective\n];\nconst importedModules$2 = [\n    CommonModule,\n    GroupModule,\n    RowFilterModule,\n    FilterMenuModule,\n    SharedModule,\n    DragAndDropModule,\n    ColumnMenuModule\n];\n/**\n * @hidden\n */\nclass HeaderModule {\n    static exports() {\n        return [\n            HeaderTemplateDirective,\n            SelectAllCheckboxDirective\n        ];\n    }\n}\nHeaderModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exportedModules$2],\n                exports: [exportedModules$2],\n                imports: [...importedModules$2]\n            },] },\n];\n\n/**\n * Represents the command columns of the Grid. You have to define the content of the\n * column inside an `<ng-template>` tag. The template context is set to the current\n * data item. For more information and examples on using the passed fields\n * and the command directives, refer to the article on\n * [editing the Grid in Angular Reactive Forms]({% slug editing_reactive_forms_grid %}).\n *\n * The following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, `rowIndex`is `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * Usually, the template contains CRUD command directives such as:\n * - [`EditCommandDirective`]({% slug api_grid_editcommanddirective %})\n * - [`RemoveCommandDirective`]({% slug api_grid_removecommanddirective %})\n * - [`CancelCommandDirective`]({% slug api_grid_cancelcommanddirective %})\n * - [`SaveCommandDirective`]({% slug api_grid_savecommanddirective %})\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"UnitPrice\" title=\"Unit Price\" width=\"230\">\n *          </kendo-grid-column>\n *          <kendo-grid-command-column title=\"command\" width=\"220\">\n *               <ng-template kendoGridCellTemplate>\n *                   <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *                   <button kendoGridRemoveCommand>Remove</button>\n *               </ng-template>\n *           </kendo-grid-command-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass CommandColumnComponent extends ColumnBase$1 {\n    constructor(parent) {\n        super(parent);\n        this.parent = parent;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n}\nCommandColumnComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: ColumnBase$1,\n                        useExisting: forwardRef(() => CommandColumnComponent)\n                    }\n                ],\n                selector: 'kendo-grid-command-column',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nCommandColumnComponent.ctorParameters = () => [\n    { type: ColumnBase$1, decorators: [{ type: SkipSelf }, { type: Host }, { type: Optional }] }\n];\nCommandColumnComponent.propDecorators = {\n    template: [{ type: ContentChild, args: [CellTemplateDirective,] }]\n};\n\n/**\n * Represents the checkbox for selecting columns in the Grid. If the column is\n * defined as empty, it renders a default checkbox for row selection.\n * You can also define the content of the column inside an `<ng-template>` tag.\n * The input requires you to include the `SelectionCheckbox` option.\n *\n * The template context is set to the current data item and the following additional fields are passed:\n * - `columnIndex`&mdash;The current column index.\n * - `rowIndex`&mdash;The current data row index. If inside a new item row, it will be `-1`.\n * - `dataItem`&mdash;The current data item.\n * - `column`&mdash;The current column instance.\n * - `isNew`&mdash;The state of the current item.\n *\n * For more examples, refer to:\n * - [Selecting or deselecting all items on a page]({% slug selection_grid %}#toc-select-all-feature)\n * - [Persisting the selection]({% slug selection_grid %}#toc-in-combination-with-the-select-all-feature)\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *          <kendo-grid-checkbox-column title=\"Default checkbox\">\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass CheckboxColumnComponent extends ColumnBase$1 {\n    constructor(parent) {\n        super(parent);\n        this.parent = parent;\n        /*\n         * @hidden\n         */\n        this.isCheckboxColumn = true;\n    }\n    get templateRef() {\n        return this.template ? this.template.templateRef : undefined;\n    }\n}\nCheckboxColumnComponent.decorators = [\n    { type: Component, args: [{\n                providers: [\n                    {\n                        provide: ColumnBase$1,\n                        useExisting: forwardRef(() => CheckboxColumnComponent)\n                    }\n                ],\n                selector: 'kendo-grid-checkbox-column',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nCheckboxColumnComponent.ctorParameters = () => [\n    { type: ColumnBase$1, decorators: [{ type: SkipSelf }, { type: Host }, { type: Optional }] }\n];\nCheckboxColumnComponent.propDecorators = {\n    showSelectAll: [{ type: Input }],\n    template: [{ type: ContentChild, args: [CellTemplateDirective,] }]\n};\n\n/* tslint:disable:no-input-rename */\n/**\n * Represents the row-selection checkbox of the Grid. The directive expects the\n * index of the current row as an input parameter. Inside the\n * [`CheckboxColumnComponent`]({% slug api_grid_checkboxcolumncomponent %}), apply the\n * directive to an `input` element. When the user clicks the checkbox that is associated\n * with the directive, a [`selectionChange`]({% slug api_grid_gridcomponent %}#toc-selectionChange)\n * event is triggered.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *    selector: 'my-app',\n *    template: `\n *        <kendo-grid [data]=\"gridData\" [selectable]=\"{enabled: true, checkboxOnly: true}\">\n *          <kendo-grid-checkbox-column title=\"Custom checkbox\">\n *            <ng-template kendoGridCellTemplate let-idx=\"rowIndex\">\n *              Select row <input [kendoGridSelectionCheckbox]=\"idx\" />\n *            </ng-template>\n *          </kendo-grid-checkbox-column>\n *          <kendo-grid-column field=\"ProductID\" title=\"Product ID\" width=\"120\">\n *          </kendo-grid-column>\n *          <kendo-grid-column field=\"ProductName\" title=\"Product Name\">\n *          </kendo-grid-column>\n *        </kendo-grid>\n *    `\n * })\n *\n * class AppComponent {\n *    public gridData: any[];\n *\n *    constructor() {\n *        this.gridData = products;\n *    }\n * }\n *\n * const products = [{\n *    \"ProductID\": 1,\n *    \"ProductName\": \"Chai\",\n *    \"UnitPrice\": 18.0000,\n *    \"Discontinued\": true\n *  }, {\n *    \"ProductID\": 2,\n *    \"ProductName\": \"Chang\",\n *    \"UnitPrice\": 19.0000,\n *    \"Discontinued\": false\n *  }\n * ];\n *\n * ```\n */\nclass SelectionCheckboxDirective {\n    constructor(selectionService, el, renderer, ngZone) {\n        this.selectionService = selectionService;\n        this.el = el;\n        this.renderer = renderer;\n        this.ngZone = ngZone;\n        this.type = \"checkbox\";\n        this.ngZone.runOutsideAngular(() => {\n            this.destroyClick = this.renderer.listen(this.el.nativeElement, \"click\", this.onClick.bind(this));\n            this.destroyKeyDown = this.renderer.listen(this.el.nativeElement, \"keydown\", this.onKeyDown.bind(this));\n        });\n    }\n    ngAfterContentChecked() {\n        this.setCheckedState();\n    }\n    ngOnDestroy() {\n        if (this.destroyClick) {\n            this.destroyClick();\n        }\n        if (this.destroyKeyDown) {\n            this.destroyKeyDown();\n        }\n    }\n    onClick() {\n        if (this.selectionService.options.enabled) {\n            this.ngZone.run(() => {\n                const ev = this.selectionService.toggleByIndex(this.itemIndex);\n                ev.ctrlKey = true;\n                ev.shiftKey = false;\n                this.selectionService.changes.emit(ev);\n            });\n        }\n    }\n    onKeyDown(e) {\n        if (e.keyCode === Keys.Enter) {\n            this.onClick();\n        }\n    }\n    /*\n     * @hidden\n     */\n    setCheckedState() {\n        this.renderer.setProperty(this.el.nativeElement, \"checked\", this.selectionService.isSelected(this.itemIndex));\n    }\n}\nSelectionCheckboxDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridSelectionCheckbox]'\n            },] },\n];\n/** @nocollapse */\nSelectionCheckboxDirective.ctorParameters = () => [\n    { type: SelectionService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone }\n];\nSelectionCheckboxDirective.propDecorators = {\n    itemIndex: [{ type: Input, args: [\"kendoGridSelectionCheckbox\",] }],\n    type: [{ type: HostBinding, args: ['attr.type',] }]\n};\n\nconst columnCellIndex = (cell, cells) => {\n    let cellIndex = 0;\n    for (let idx = 0; idx < cells.length; idx++) {\n        if (cells[idx] === cell) {\n            return cellIndex;\n        }\n        if (!hasClasses(cells[idx], 'k-hierarchy-cell k-group-cell')) {\n            cellIndex++;\n        }\n    }\n};\n/**\n * @hidden\n */\nclass TableBodyComponent {\n    constructor(detailsService, groupsService, changeNotification, editService, localization, ngZone, renderer, element, domEvents, selectionService, cellSelectionService, columnInfoService, navigationService) {\n        this.detailsService = detailsService;\n        this.groupsService = groupsService;\n        this.changeNotification = changeNotification;\n        this.editService = editService;\n        this.localization = localization;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.element = element;\n        this.domEvents = domEvents;\n        this.selectionService = selectionService;\n        this.cellSelectionService = cellSelectionService;\n        this.columnInfoService = columnInfoService;\n        this.navigationService = navigationService;\n        this.columns = [];\n        this.groups = [];\n        this.skip = 0;\n        this.noRecordsText = this.localization.get('noRecords');\n        this.isLocked = false;\n        this.skipGroupDecoration = false;\n        this.showGroupFooters = false;\n        this.lockedColumnsCount = 0;\n        this.totalColumnsCount = 0;\n        this.trackBy = defaultTrackBy;\n        this.rowClass = () => null;\n        this.cellKeydownSubscription = this.navigationService.cellKeydown.subscribe((args) => this.cellKeydownHandler(args));\n        this.trackByWrapper = this.trackByWrapper.bind(this);\n        this.trackByColumns = this.trackByColumns.bind(this);\n    }\n    get newDataItem() {\n        return this.editService.newDataItem;\n    }\n    // Number of unlocked columns in the next table, if any\n    get unlockedColumnsCount() {\n        return this.totalColumnsCount - this.lockedColumnsCount - (this.allColumns || this.columns).length;\n    }\n    toggleRow(index, dataItem) {\n        this.detailsService.toggleRow(index, dataItem);\n        return false;\n    }\n    isExpanded(viewItem) {\n        return this.detailsService.isExpanded(viewItem.index, viewItem.data);\n    }\n    detailButtonStyles(viewItem) {\n        const expanded = this.isExpanded(viewItem);\n        return expanded ? 'k-minus' : 'k-plus';\n    }\n    detailButtonTitle(viewItem) {\n        const messageKey = this.isExpanded(viewItem) ? 'detailCollapse' : 'detailExpand';\n        return this.localization.get(messageKey);\n    }\n    isGroup(item) {\n        return item.type === 'group';\n    }\n    isDataItem(item) {\n        return !this.isGroup(item) && !this.isFooter(item);\n    }\n    isFooter(item) {\n        return item.type === 'footer';\n    }\n    isInExpandedGroup(item) {\n        return this.groupsService.isInExpandedGroup(item.groupIndex, false);\n    }\n    isParentGroupExpanded(item) {\n        return this.groupsService.isInExpandedGroup(item.index || item.groupIndex);\n    }\n    isOdd(item) {\n        return item.index % 2 !== 0;\n    }\n    isSelectable() {\n        return this.selectable && this.selectable.enabled !== false;\n    }\n    isRowSelected(item) {\n        return this.selectionService.isSelected(item.index);\n    }\n    trackByWrapper(index, item) {\n        if (item.type === 'data') {\n            item.isEditing = this.editService.hasEdited(item.index);\n        }\n        return this.trackBy(index, item);\n    }\n    trackByColumns(index, item) {\n        return this.virtualColumns ? index : item;\n    }\n    ngDoCheck() {\n        if (this.hasGroupHeaderColumn) {\n            this.groupHeaderColumns = columnsToRender(this.skipGroupDecoration ? this.columns : this.columns.toArray().slice(1));\n        }\n        else {\n            this.groupHeaderColumns = [];\n        }\n        if (this.isLocked) {\n            this.groupHeaderSlaveCellsCount =\n                this.hasGroupHeaderColumn ? this.columnsContainer.nonLockedColumnsToRender.length : 1;\n        }\n        else {\n            this.groupHeaderSlaveCellsCount = 0;\n        }\n    }\n    ngOnChanges(changes) {\n        if (isChanged(\"columns\", changes, false)) {\n            this.changeNotification.notify();\n        }\n    }\n    logicalRowIndex(rowIndex) {\n        let pos = this.skip + rowIndex;\n        if (this.hasDetailTemplate) {\n            pos *= 2;\n        }\n        const absoluteRowIndex = 1 + pos;\n        const addRowOffset = this.editService.hasNewItem ? 1 : 0;\n        const filterRowOffset = hasFilterRow(this.filterable) ? 1 : 0;\n        const headerRowCount = this.columnInfoService.totalLevels + filterRowOffset + addRowOffset;\n        return absoluteRowIndex + headerRowCount;\n    }\n    addRowLogicalIndex() {\n        return this.columnInfoService.totalLevels + 1 +\n            (hasFilterRow(this.filterable) ? 1 : 0);\n    }\n    logicalColIndex(column) {\n        if (!isPresent(column.leafIndex)) {\n            return -1;\n        }\n        return column.leafIndex + (this.hasDetailTemplate ? 1 : 0);\n    }\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            const clickHandler = this.clickHandler.bind(this);\n            const mousedownSubscription = this.renderer.listen(this.element.nativeElement, 'mousedown', clickHandler);\n            const mouseupSubscription = this.renderer.listen(this.element.nativeElement, 'mouseup', clickHandler);\n            const clickSubscription = this.renderer.listen(this.element.nativeElement, 'click', clickHandler);\n            const contextmenuSubscription = this.renderer.listen(this.element.nativeElement, 'contextmenu', clickHandler);\n            this.clickSubscription = () => {\n                mousedownSubscription();\n                mouseupSubscription();\n                clickSubscription();\n                contextmenuSubscription();\n            };\n        });\n        let originalNoRecordText = this.localization.get('noRecords');\n        this.localization.changes.subscribe(() => {\n            if (this.noRecordsText === originalNoRecordText) {\n                this.noRecordsText = this.localization.get('noRecords');\n                originalNoRecordText = this.noRecordsText;\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.clickSubscription) {\n            this.clickSubscription();\n        }\n        this.cellKeydownSubscription.unsubscribe();\n        clearTimeout(this.clickTimeout);\n    }\n    isEditingCell(index, column) {\n        return this.editService.isEditing() && this.editService.isEditedColumn(index, column);\n    }\n    isEditingRow(index) {\n        return this.editService.isEditing() && this.editService.hasEdited(index);\n    }\n    get hasGroupHeaderColumn() {\n        return this.columnsContainer.hasGroupHeaderColumn;\n    }\n    get columnsContainer() {\n        return this.columnInfoService.columnsContainer;\n    }\n    get columnsSpan() {\n        return columnsSpan(this.columns);\n    }\n    get allColumnsSpan() {\n        return columnsSpan(this.allColumns || this.columns);\n    }\n    get colSpan() {\n        return this.columnsSpan + this.groups.length + (this.hasDetailTemplate ? 1 : 0);\n    }\n    get footerColumns() {\n        return this.isLocked ? this.columnsContainer.lockedColumnsToRender : this.columnsContainer.nonLockedColumnsToRender;\n    }\n    showGroupHeader(item) {\n        return !item.data.skipHeader;\n    }\n    get hasDetailTemplate() {\n        return isPresent(this.detailTemplate);\n    }\n    clickHandler(eventArg) {\n        const element = this.element.nativeElement;\n        const target = eventArg.target;\n        let cell, row, body, gridElement;\n        let currentTarget = target;\n        do {\n            cell = closest(currentTarget, matchesNodeName('td'));\n            row = closest(cell, matchesNodeName('tr'));\n            body = closest(row, matchesNodeName('tbody'));\n            currentTarget = body;\n            gridElement = closestInScope(currentTarget, matchesClasses('k-grid'), element);\n        } while (body && body !== element && !gridElement);\n        if (cell && !hasClasses(cell, NON_DATA_CELL_CLASSES) &&\n            !hasClasses(row, NON_DATA_ROW_CLASSES) &&\n            body === element && !gridElement) {\n            this.editService.preventCellClose();\n            const focusable = target !== cell && isFocusableWithTabKey(target, false);\n            if (!focusable && !matchesNodeName('label')(target) && !hasClasses(target, IGNORE_TARGET_CLASSSES) &&\n                !closestInScope(target, matchesClasses(IGNORE_CONTAINER_CLASSES), cell)) {\n                const args = this.cellClickArgs(cell, row, eventArg);\n                if (eventArg.type === 'mousedown') {\n                    this.domEvents.cellMousedown.emit(args);\n                }\n                else if (eventArg.type === 'mouseup') {\n                    this.domEvents.cellMouseup.emit(args);\n                }\n                else {\n                    if (args.isEditedColumn || !this.editService.closeCell(eventArg)) {\n                        if (eventArg.type === 'click') {\n                            this.clickTimeout = setTimeout(() => {\n                                this.emitCellClick(args);\n                            }, 0);\n                        }\n                        else {\n                            this.emitCellClick(args);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    emitCellClick(args) {\n        this.domEvents.cellClick.emit(Object.assign(args, {\n            isEdited: args.isEditedRow || args.isEditedColumn\n        }));\n    }\n    cellKeydownHandler(args) {\n        if (args.keyCode === Keys.Enter) {\n            this.clickHandler(args);\n        }\n    }\n    cellClickArgs(cell, row, eventArg) {\n        const index = columnCellIndex(cell, row.cells);\n        const column = this.columns.toArray()[index];\n        const columnIndex = this.lockedColumnsCount + index;\n        let rowIndex = row.getAttribute('data-kendo-grid-item-index');\n        rowIndex = rowIndex ? parseInt(rowIndex, 10) : -1;\n        const dataItem = rowIndex === -1 ? this.editService.newDataItem : this.data.at(rowIndex - this.skip);\n        const isEditedColumn = this.editService.isEditedColumn(rowIndex, column);\n        const isEditedRow = this.editService.isEdited(rowIndex);\n        const type = eventArg.type === 'keydown' ? 'click' : eventArg.type;\n        return {\n            column: column,\n            columnIndex: columnIndex,\n            dataItem: dataItem,\n            isEditedColumn: isEditedColumn,\n            isEditedRow: isEditedRow,\n            originalEvent: eventArg,\n            rowIndex: rowIndex,\n            type: type\n        };\n    }\n}\nTableBodyComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridTableBody]',\n                template: `\n    <ng-template [ngIf]=\"editService.hasNewItem\">\n        <tr class=\"k-grid-add-row k-grid-edit-row\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"addRowLogicalIndex()\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-template [ngIf]=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-template>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\"\n                kendoGridCell\n                    [rowIndex]=\"-1\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [isNew]=\"true\"\n                    [column]=\"column\"\n                    [dataItem]=\"newDataItem\"\n                [ngClass]=\"column.cssClass\"\n                [ngStyle]=\"column.style\"\n                [attr.colspan]=\"column.colspan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"addRowLogicalIndex()\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [colSpan]=\"column.colspan\"\n                role=\"gridcell\">\n            </td>\n        </tr>\n    </ng-template>\n    <tr *ngIf=\"data?.length === 0 || data == null\" class=\"k-grid-norecords\">\n        <td [attr.colspan]=\"colSpan\">\n            <ng-template\n                [ngIf]=\"noRecordsTemplate?.templateRef\"\n                [templateContext]=\"{\n                    templateRef: noRecordsTemplate?.templateRef\n                 }\">\n            </ng-template>\n            <ng-container *ngIf=\"!noRecordsTemplate?.templateRef\">\n                {{noRecordsText}}\n            </ng-container>\n        </td>\n    </tr>\n    <ng-template ngFor\n        [ngForOf]=\"data\"\n        [ngForTrackBy]=\"trackByWrapper\"\n        let-item\n        let-rowIndex=\"index\">\n        <tr *ngIf=\"isGroup(item) && isParentGroupExpanded(item) && showGroupHeader(item)\"\n            kendoGridGroupHeader\n                [columns]=\"columns\"\n                [groups]=\"groups\"\n                [item]=\"item\"\n                [hasDetails]=\"detailTemplate?.templateRef\"\n                [skipGroupDecoration]=\"skipGroupDecoration\"\n                [hasGroupHeaderColumn]=\"hasGroupHeaderColumn\"\n                [groupHeaderColumns]=\"groupHeaderColumns\"\n                [rowIndex]=\"rowIndex + 1\"\n                [totalColumnsCount]=\"totalColumnsCount\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"groupHeaderSlaveCellsCount\">\n        </tr>\n        <tr\n            *ngIf=\"isDataItem(item) && isInExpandedGroup(item)\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"item.index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\"\n            [ngClass]=\"rowClass({ dataItem: item.data, index: item.index })\"\n            [class.k-alt]=\"isOdd(item)\"\n            [class.k-master-row]=\"detailTemplate?.templateRef\"\n            [class.k-grid-edit-row]=\"isEditingRow(item.index)\"\n            [attr.data-kendo-grid-item-index]=\"item.index\"\n            [class.k-state-selected]=\"isSelectable() && isRowSelected(item)\">\n            <ng-template [ngIf]=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\" role=\"presentation\"></td>\n            </ng-template>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"item.index\"\n                    [dataItem]=\"item.data\"\n                    [detailExpandCell]=\"true\"\n                    aria-selected=\"false\"\n                >\n                <a class=\"k-icon\"\n                    *ngIf=\"detailTemplate.showIf(item.data, item.index)\"\n                    [ngClass]=\"detailButtonStyles(item)\"\n                    [attr.title]=\"detailButtonTitle(item)\"\n                    href=\"#\" tabindex=\"-1\" (click)=\"toggleRow(item.index, item.data)\"></a>\n            </td>\n            <td\n                kendoGridCell\n                    [rowIndex]=\"item.index\"\n                    [columnIndex]=\"lockedColumnsCount + columnIndex\"\n                    [attr.data-kendo-grid-column-index]=\"lockedColumnsCount + columnIndex\"\n                    [column]=\"column\"\n                    [dataItem]=\"item.data\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                    [dataRowIndex]=\"item.index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"columnIndex\"\n                    [colSpan]=\"column.colspan\"\n                    role=\"gridcell\" aria-selected=\"false\"\n                [ngClass]=\"column.cssClass\"\n                [class.k-grid-edit-cell]=\"isEditingCell(item.index, column)\"\n                [ngStyle]=\"column.style\"\n                [attr.colspan]=\"column.colspan\"\n                [class.k-state-selected]=\"cellSelectionService.isCellSelected(item, column)\"\n                *ngFor=\"let column of columns; let columnIndex = index; trackBy: trackByColumns;\">\n            </td>\n        </tr>\n        <tr *ngIf=\"isDataItem(item) && isInExpandedGroup(item) && detailTemplate?.templateRef &&\n            detailTemplate.showIf(item.data, item.index) && isExpanded(item)\"\n            class=\"k-detail-row\"\n            [class.k-alt]=\"isOdd(item)\"\n            kendoGridLogicalRow\n                [dataRowIndex]=\"item.index\"\n                [dataItem]=\"item.data\"\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                [logicalSlaveRow]=\"false\"\n                [logicalCellsCount]=\"1\"\n            >\n            <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            <td class=\"k-hierarchy-cell\"></td>\n            <td class=\"k-detail-cell\"\n                [attr.colspan]=\"columnsSpan\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex) + 1\"\n                    [logicalColIndex]=\"0\"\n                    [dataRowIndex]=\"item.index\"\n                    [dataItem]=\"item.data\"\n                    [colIndex]=\"0\"\n                    [colSpan]=\"allColumnsSpan + 1\"\n                    role=\"gridcell\" aria-selected=\"false\"\n                >\n                <ng-template\n                    [ngTemplateOutlet]=\"detailTemplate.templateRef\"\n                    [ngTemplateOutletContext]=\"{\n                        dataItem: item.data,\n                        rowIndex: item.index,\n                        $implicit: item.data\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n        <tr *ngIf=\"isFooter(item) && (isInExpandedGroup(item) || (showGroupFooters && isParentGroupExpanded(item)))\n            && !item.data.hideFooter\"\n            class=\"k-group-footer\"\n            kendoGridLogicalRow\n                [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                [logicalSlaveRow]=\"lockedColumnsCount > 0\"\n                [logicalCellsCount]=\"columns.length\"\n                [logicalSlaveCellsCount]=\"unlockedColumnsCount\">\n            <ng-template [ngIf]=\"!skipGroupDecoration\">\n                <td class=\"k-group-cell\" *ngFor=\"let g of groups\"></td>\n            </ng-template>\n            <td class=\"k-hierarchy-cell\"\n                *ngIf=\"detailTemplate?.templateRef\"\n                kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"0\"\n                    aria-selected=\"false\"\n                >\n            </td>\n            <td kendoGridLogicalCell\n                    [logicalRowIndex]=\"logicalRowIndex(rowIndex)\"\n                    [logicalColIndex]=\"logicalColIndex(column)\"\n                [attr.data-skip]=\"skipGroupDecoration\"\n                *ngFor=\"let column of footerColumns; let columnIndex = index; trackBy: trackByColumns;\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: column.groupFooterTemplateRef,\n                        group: item.data,\n                        field: column.field,\n                        column: column,\n                        aggregates: item.data?.aggregates,\n                        $implicit: item.data?.aggregates\n                    }\">\n                </ng-template>\n           </td>\n        </tr>\n    </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nTableBodyComponent.ctorParameters = () => [\n    { type: DetailsService },\n    { type: GroupsService },\n    { type: ChangeNotificationService },\n    { type: EditService },\n    { type: LocalizationService },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: DomEventsService },\n    { type: SelectionService },\n    { type: CellSelectionService },\n    { type: ColumnInfoService },\n    { type: NavigationService }\n];\nTableBodyComponent.propDecorators = {\n    columns: [{ type: Input }],\n    allColumns: [{ type: Input }],\n    groups: [{ type: Input }],\n    detailTemplate: [{ type: Input }],\n    noRecordsTemplate: [{ type: Input }],\n    data: [{ type: Input }],\n    skip: [{ type: Input }],\n    selectable: [{ type: Input }],\n    filterable: [{ type: Input }],\n    noRecordsText: [{ type: Input }],\n    isLocked: [{ type: Input }],\n    skipGroupDecoration: [{ type: Input }],\n    showGroupFooters: [{ type: Input }],\n    lockedColumnsCount: [{ type: Input }],\n    totalColumnsCount: [{ type: Input }],\n    virtualColumns: [{ type: Input }],\n    trackBy: [{ type: Input }],\n    rowClass: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass CellComponent {\n    constructor(editService, idService, cellContext) {\n        this.editService = editService;\n        this.idService = idService;\n        this.cellContext = cellContext;\n        this.isNew = false;\n        this._templateContext = {};\n        this._editTemplateContext = {};\n    }\n    get commandCellClass() {\n        return this.isCommand(this.column);\n    }\n    set rowIndex(index) {\n        this._rowIndex = index;\n        this.updateCellContext();\n    }\n    get rowIndex() {\n        return this._rowIndex;\n    }\n    get isEdited() {\n        if (!(this.editService.isEditing() || this.isNew) || !this.isColumnEditable) {\n            return false;\n        }\n        const editContext = this.editService.columnContext(this.rowIndex, this.column);\n        return this.isFieldEditable(editContext, this.column);\n    }\n    get formGroup() {\n        return this.editService.context(this.rowIndex).group;\n    }\n    get templateContext() {\n        return this._templateContext;\n    }\n    get editTemplateContext() {\n        this._editTemplateContext.$implicit = this.formGroup;\n        this._editTemplateContext.isNew = this.isNew;\n        this._editTemplateContext.column = this.column;\n        this._editTemplateContext.dataItem = this.dataItem;\n        this._editTemplateContext.formGroup = this.formGroup;\n        this._editTemplateContext.rowIndex = this.rowIndex;\n        return this._editTemplateContext;\n    }\n    get format() {\n        if (isColumnComponent(this.column) && !isNullOrEmptyString(this.column.format)) {\n            return extractFormat(this.column.format);\n        }\n        return undefined;\n    }\n    get isBoundColumn() {\n        return this.column.field && !this.column.templateRef;\n    }\n    get isCheckboxColumn() {\n        return isCheckboxColumn(this.column) && !this.column.templateRef;\n    }\n    get selectionCheckboxId() {\n        return this.idService.selectionCheckboxId(this.rowIndex);\n    }\n    get isSpanColumn() {\n        return isSpanColumn(this.column) && !this.column.templateRef;\n    }\n    get childColumns() {\n        return columnsToRender([this.column]);\n    }\n    get isColumnEditable() {\n        if (!this.column || this.isCommand(this.column)) {\n            return false;\n        }\n        return this.column.editable !== false;\n    }\n    ngDoCheck() {\n        this.updateCellContext();\n    }\n    ngOnChanges(_changes) {\n        this.updateTemplateContext();\n    }\n    isCommand(column) {\n        return column instanceof CommandColumnComponent;\n    }\n    isFieldEditable(editContext, column) {\n        if (!isPresent(editContext)) {\n            return false;\n        }\n        if (isPresent(column.editTemplate)) {\n            return true;\n        }\n        return isPresent(editContext.group) && isPresent(editContext.group.get(column.field));\n    }\n    updateCellContext() {\n        if (this.cellContext) {\n            this.cellContext.rowIndex = this._rowIndex;\n        }\n    }\n    updateTemplateContext() {\n        if (!this.column.templateRef) {\n            return;\n        }\n        const context = this._templateContext;\n        context.isNew = this.isNew;\n        context.column = this.column;\n        context.dataItem = this.dataItem;\n        context.rowIndex = this.rowIndex;\n        context.columnIndex = this.columnIndex;\n        context.$implicit = this.dataItem;\n    }\n}\nCellComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridCell]',\n                template: `\n        <ng-container [ngSwitch]=\"isEdited\">\n            <ng-container *ngSwitchCase=\"false\">\n                <ng-template [ngIf]=\"column.templateRef\"\n                    [ngTemplateOutlet]=\"column.templateRef\"\n                    [ngTemplateOutletContext]=\"templateContext\">\n                </ng-template>\n                <ng-template [ngIf]=\"isSpanColumn\">\n                    <ng-template ngFor let-childColumn [ngForOf]=\"childColumns\">\n                        {{ dataItem | valueOf: childColumn.field: childColumn.format}}\n                    </ng-template>\n                </ng-template>\n                <ng-template [ngIf]=\"isBoundColumn\">{{ dataItem | valueOf: column.field: column.format}}</ng-template>\n                <ng-template [ngIf]=\"isCheckboxColumn && !isNew\">\n                    <input class=\"k-checkbox\" [kendoGridSelectionCheckbox]=\"rowIndex\" [attr.id]=\"selectionCheckboxId\"><label class=\"k-checkbox-label\" [attr.for]=\"selectionCheckboxId\"></label>\n                </ng-template>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"true\">\n                <ng-template\n                    *ngIf=\"column.editTemplateRef\"\n                    [ngTemplateOutlet]=\"column.editTemplateRef\"\n                    [ngTemplateOutletContext]=\"editTemplateContext\">\n                </ng-template>\n                <ng-container [ngSwitch]=\"column.editor\" *ngIf=\"!column.editTemplateRef\">\n                    <kendo-numerictextbox\n                        *ngSwitchCase=\"'numeric'\"\n                        [format]=\"format\"\n                        [formControl]=\"formGroup.get(column.field)\"\n                        kendoGridFocusable\n                    ></kendo-numerictextbox>\n\n                    <kendo-datepicker\n                        *ngSwitchCase=\"'date'\"\n                        [format]=\"format\"\n                        [formControl]=\"formGroup.get(column.field)\"\n                        kendoGridFocusable\n                    ></kendo-datepicker>\n\n                    <input\n                        *ngSwitchCase=\"'boolean'\"\n                        type=\"checkbox\"\n                        [formControl]=\"formGroup.get(column.field)\"\n                        kendoGridFocusable\n                    />\n\n                    <input\n                        *ngSwitchDefault\n                        type=\"text\"\n                        class=\"k-textbox\"\n                        [formControl]=\"formGroup.get(column.field)\"\n                        kendoGridFocusable\n                    />\n                </ng-container>\n            </ng-container>\n        </ng-container>\n    `\n            },] },\n];\n/** @nocollapse */\nCellComponent.ctorParameters = () => [\n    { type: EditService },\n    { type: IdService },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CELL_CONTEXT,] }] }\n];\nCellComponent.propDecorators = {\n    commandCellClass: [{ type: HostBinding, args: ['class.k-command-cell',] }],\n    column: [{ type: Input }],\n    columnIndex: [{ type: Input }],\n    isNew: [{ type: Input }],\n    rowIndex: [{ type: Input }],\n    dataItem: [{ type: Input }]\n};\n\n/**\n * Represents the `edit` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`edit`]({% slug api_grid_gridcomponent %}#toc-edit) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is in the edit mode, the button with `kendoGridEditCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridEditCommand class=\"k-primary\">Edit</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n */\nclass EditCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.beginEdit(this.rowIndex);\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nEditCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridEditCommand]'\n            },] },\n];\n/** @nocollapse */\nEditCommandDirective.ctorParameters = () => [\n    { type: EditService },\n    { type: undefined, decorators: [{ type: Inject, args: [CELL_CONTEXT,] }] },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nEditCommandDirective.propDecorators = {\n    visible: [{ type: HostBinding, args: ['style.display',] }],\n    commandClass: [{ type: HostBinding, args: ['class.k-grid-edit-command',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * Represents the `cancel` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`cancel`]({% slug api_grid_gridcomponent %}#toc-cancel) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with the `kendoGridCancelCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridCancelCommand>Cancel changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridCancelCommand>{{isNew ? 'Discard' : 'Cancel changes'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass CancelCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        if (this.isEdited) {\n            this.editService.endEdit(this.rowIndex);\n        }\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nCancelCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridCancelCommand]'\n            },] },\n];\n/** @nocollapse */\nCancelCommandDirective.ctorParameters = () => [\n    { type: EditService },\n    { type: undefined, decorators: [{ type: Inject, args: [CELL_CONTEXT,] }] },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nCancelCommandDirective.propDecorators = {\n    visible: [{ type: HostBinding, args: ['style.display',] }],\n    commandClass: [{ type: HostBinding, args: ['class.k-grid-cancel-command',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * Represents the `save` command of the Grid. You can apply this directive to any `button`\n * element inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`save`]({% slug api_grid_gridcomponent %}#toc-save) event\n * is triggered ([see example]({% slug editing_grid %})).\n *\n * > When the row is not in the edit mode, the button with `kendoGridSaveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridSaveCommand>Save changes</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n *\n * You can control the content of the button based on the state of the row.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate let-isNew=\"isNew\">\n *       <button kendoGridSaveCommand>{{isNew ? 'Add' : 'Update'}}</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass SaveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return !this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        if (this.isEdited) {\n            this.editService.save(this.rowIndex);\n        }\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nSaveCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridSaveCommand]'\n            },] },\n];\n/** @nocollapse */\nSaveCommandDirective.ctorParameters = () => [\n    { type: EditService },\n    { type: undefined, decorators: [{ type: Inject, args: [CELL_CONTEXT,] }] },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nSaveCommandDirective.propDecorators = {\n    visible: [{ type: HostBinding, args: ['style.display',] }],\n    commandClass: [{ type: HostBinding, args: ['class.k-grid-save-command',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * Represents the `remove` command of the Grid. You can apply this directive to any `button` element\n * inside a [`CommandColumnComponent`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`remove` event]({% slug api_grid_gridcomponent %}#toc-remove)\n * is triggered ([see example]({% slug editing_reactive_forms_grid %})).\n *\n * > When the row is in the edit mode, the button with the `kendoGridRemoveCommand` is automatically hidden.\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *   <kendo-grid-command-column title=\"command\">\n *     <ng-template kendoGridCellTemplate>\n *       <button kendoGridRemoveCommand>Remove row</button>\n *     </ng-template>\n *   </kendo-grid-command-column>\n * </kendo-grid>\n * ```\n */\nclass RemoveCommandDirective extends Button {\n    constructor(editService, cellContext, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n        this.cellContext = cellContext;\n        /**\n         * @hidden\n         */\n        this.commandClass = true;\n    }\n    /**\n     * @hidden\n     */\n    get visible() {\n        return this.isEdited ? 'none' : '';\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.remove(this.rowIndex);\n    }\n    ngDoCheck() {\n        if (this.cellContext) {\n            this.rowIndex = this.cellContext.rowIndex;\n            this.isEdited = this.editService.isEdited(this.rowIndex);\n        }\n    }\n}\nRemoveCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridRemoveCommand]'\n            },] },\n];\n/** @nocollapse */\nRemoveCommandDirective.ctorParameters = () => [\n    { type: EditService },\n    { type: undefined, decorators: [{ type: Inject, args: [CELL_CONTEXT,] }] },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nRemoveCommandDirective.propDecorators = {\n    visible: [{ type: HostBinding, args: ['style.display',] }],\n    commandClass: [{ type: HostBinding, args: ['class.k-grid-remove-command',] }],\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]\n};\n\n/**\n * Represents the command for adding a new item to the Grid. You can apply this directive to any\n * `button` element inside a [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When an associated button with the directive is clicked, the\n * [`add`]({% slug api_grid_gridcomponent %}#toc-add) event is triggered\n * ([see example]({% slug editing_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *    <ng-template kendoGridToolbarTemplate>\n *       <button kendoGridAddCommand>Add new</button>\n *    </ng-template>\n * </kendo-grid>\n * ```\n */\nclass AddCommandDirective extends Button {\n    constructor(editService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.editService = editService;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.editService.beginAdd();\n    }\n    /**\n     * @hidden\n     */\n    get commandClass() {\n        return true;\n    }\n}\nAddCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridAddCommand]'\n            },] },\n];\n/** @nocollapse */\nAddCommandDirective.ctorParameters = () => [\n    { type: EditService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nAddCommandDirective.propDecorators = {\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n    commandClass: [{ type: HostBinding, args: ['class.k-grid-add-command',] }]\n};\n\nconst exported$1 = [\n    CommandColumnComponent,\n    CheckboxColumnComponent,\n    SelectionCheckboxDirective,\n    CellTemplateDirective,\n    EditTemplateDirective,\n    TableBodyComponent,\n    NoRecordsTemplateDirective,\n    CellComponent,\n    EditCommandDirective,\n    CancelCommandDirective,\n    SaveCommandDirective,\n    RemoveCommandDirective,\n    AddCommandDirective\n];\nconst importedModules$3 = [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    SharedModule,\n    GroupModule,\n    NumericTextBoxModule,\n    DatePickerModule\n];\n/**\n * @hidden\n */\nclass BodyModule {\n    static exports() {\n        return [\n            CommandColumnComponent,\n            CheckboxColumnComponent,\n            SelectionCheckboxDirective,\n            CellTemplateDirective,\n            NoRecordsTemplateDirective,\n            EditTemplateDirective,\n            EditCommandDirective,\n            CancelCommandDirective,\n            SaveCommandDirective,\n            RemoveCommandDirective,\n            AddCommandDirective\n        ];\n    }\n}\nBodyModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exported$1],\n                exports: [exported$1],\n                imports: [...importedModules$3]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass FooterComponent {\n    constructor() {\n        this.columns = [];\n        this.groups = [];\n        this.lockedColumnsCount = 0;\n    }\n    get footerClass() {\n        return !this.scrollable;\n    }\n    get columnsToRender() {\n        return columnsToRender(this.columns || []);\n    }\n}\nFooterComponent.decorators = [\n    { type: Component, args: [{\n                selector: '[kendoGridFooter]',\n                template: `\n    <ng-template [ngIf]=\"true\">\n        <tr [class.k-footer-template]=\"true\">\n            <td\n                [class.k-group-cell]=\"true\"\n                *ngFor=\"let g of groups\">\n            </td>\n            <td\n                [class.k-hierarchy-cell]=\"true\"\n                *ngIf=\"detailTemplate?.templateRef\">\n            </td>\n            <td\n                [ngClass]=\"column.footerClass\"\n                [ngStyle]=\"column.footerStyle\"\n                *ngFor=\"let column of columnsToRender; let columnIndex = index\">\n                <ng-template\n                    [templateContext]=\"{\n                        templateRef: column.footerTemplateRef,\n                        columnIndex: lockedColumnsCount + columnIndex,\n                        column: column,\n                        $implicit: column\n                    }\">\n                </ng-template>\n            </td>\n        </tr>\n    </ng-template>\n    `\n            },] },\n];\nFooterComponent.propDecorators = {\n    columns: [{ type: Input }],\n    groups: [{ type: Input }],\n    detailTemplate: [{ type: Input }],\n    scrollable: [{ type: Input }],\n    lockedColumnsCount: [{ type: Input }],\n    footerClass: [{ type: HostBinding, args: ['class.k-grid-footer',] }]\n};\n\nconst exportedModules$3 = [\n    FooterComponent\n];\nconst importedModules$4 = [\n    CommonModule,\n    SharedModule\n];\n/**\n * @hidden\n */\nclass FooterModule {\n    static exports() {\n        return [];\n    }\n}\nFooterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [exportedModules$3],\n                exports: [exportedModules$3],\n                imports: [...importedModules$4]\n            },] },\n];\n\n/**\n * @hidden\n */\nclass ToolbarComponent {\n    constructor(grid) {\n        this.grid = grid;\n        this.context = {};\n    }\n    get classNames() {\n        return 'k-header k-grid-toolbar';\n    }\n    set position(value) {\n        this.context.position = value;\n    }\n    get toolbarTemplateRef() {\n        return this.grid.toolbarTemplate ? this.grid.toolbarTemplate.templateRef : undefined;\n    }\n}\nToolbarComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-toolbar',\n                template: `\n        <ng-template\n            *ngIf=\"toolbarTemplateRef\"\n            [ngTemplateOutlet]=\"toolbarTemplateRef\"\n            [ngTemplateOutletContext]=\"context\"\n            >\n        </ng-template>\n    `\n            },] },\n];\n/** @nocollapse */\nToolbarComponent.ctorParameters = () => [\n    { type: GridComponent }\n];\nToolbarComponent.propDecorators = {\n    classNames: [{ type: HostBinding, args: ['class',] }],\n    position: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass LocalEditService {\n    constructor(grid, localDataChangesService) {\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    create(item) {\n        if (this.hasLocalData && this.grid.skip) {\n            this.localDataChangesService.data.splice(this.grid.skip, 0, item);\n        }\n        else {\n            this.data.unshift(item);\n        }\n        this.dataChanged();\n    }\n    update(_item) { } // tslint:disable-line:no-empty\n    remove(item) {\n        const data = this.data;\n        for (let idx = 0; idx < data.length; idx++) {\n            if (item === data[idx]) {\n                data.splice(idx, 1);\n                this.dataChanged({ action: 'remove', item: item });\n                break;\n            }\n        }\n    }\n    assignValues(target, source) {\n        Object.assign(target, source);\n    }\n    dataChanged(args = {}) {\n        if (this.hasLocalData) {\n            this.localDataChangesService.changes.emit(args);\n        }\n    }\n    get hasLocalData() {\n        return Array.isArray(this.localDataChangesService.data);\n    }\n    get data() {\n        if (this.hasLocalData) {\n            return this.localDataChangesService.data;\n        }\n        const data = this.grid.data;\n        if (Array.isArray(data)) {\n            return data;\n        }\n        if (isDevMode()) {\n            throw new Error('The default edit service of the editing directives works only when binding to plain array.' +\n                'Please provide an editService.');\n        }\n        return [];\n    }\n}\n\n/**\n * @hidden\n */\nclass EditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n        this.defaultEditService = this.createDefaultService();\n    }\n    // Consider adding support for the dependency injection of the service to allow for specifying a generic service without code.\n    // The Input should still be kept.\n    /**\n     * The edit service that will handle the operations.\n     */\n    set editService(value) {\n        this.userEditService = value;\n    }\n    get editService() {\n        return this.userEditService || this.defaultEditService;\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        this.subscriptions = this.grid.add.subscribe(this.addHandler.bind(this));\n        this.subscriptions.add(this.grid.remove.subscribe(this.removeHandler.bind(this)));\n        this.subscriptions.add(this.grid.cancel.subscribe(this.cancelHandler.bind(this)));\n        this.subscriptions.add(this.grid.save.subscribe(this.saveHandler.bind(this)));\n        this.subscriptions.add(this.grid.dataStateChange.subscribe(this.onStateChange.bind(this)));\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    createDefaultService() {\n        return new LocalEditService(this.grid, this.localDataChangesService);\n    }\n    addHandler() {\n        this.grid.addRow(this.createModel({ isNew: true }));\n    }\n    saveHandler(args) {\n        const item = this.saveModel(args);\n        if (item) {\n            if (args.isNew) {\n                this.editService.create(item);\n            }\n            else {\n                this.editService.update(item);\n            }\n        }\n        this.grid.closeRow(args.rowIndex);\n    }\n    cancelHandler({ rowIndex }) {\n        this.closeEditor(rowIndex);\n    }\n    removeHandler({ dataItem }) {\n        const removeItem = (shouldRemove) => {\n            if (shouldRemove) {\n                this.editService.remove(dataItem);\n            }\n        };\n        if (this.removeConfirmation) {\n            const result = this.removeConfirmation(dataItem);\n            if (result instanceof Promise) {\n                result.then(removeItem);\n            }\n            else if (result instanceof Observable) {\n                result.pipe(take(1)).subscribe(removeItem);\n            }\n            else {\n                removeItem(result);\n            }\n        }\n        else {\n            removeItem(true);\n        }\n    }\n    onStateChange() {\n        this.closeEditor();\n    }\n    closeEditor(rowIndex) {\n        this.grid.closeRow(rowIndex);\n    }\n}\nEditingDirectiveBase.propDecorators = {\n    editService: [{ type: Input }],\n    removeConfirmation: [{ type: Input }]\n};\n\n/**\n * @hidden\n */\nclass LocalRowEditService extends LocalEditService {\n    update(_item) {\n        this.dataChanged();\n    }\n}\n\n/**\n * @hidden\n */\nclass RowEditingDirectiveBase extends EditingDirectiveBase {\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.subscriptions\n            .add(this.grid.edit.subscribe(this.editHandler.bind(this)));\n    }\n    createDefaultService() {\n        return new LocalRowEditService(this.grid, this.localDataChangesService);\n    }\n    addHandler() {\n        this.closeEditor();\n        super.addHandler();\n    }\n    editHandler(args) {\n        this.closeEditor();\n        this.rowIndex = args.rowIndex;\n        this.grid.editRow(args.rowIndex, this.createModel(args));\n    }\n    saveHandler(args) {\n        super.saveHandler(args);\n        this.clean();\n    }\n    closeEditor(rowIndex = this.rowIndex) {\n        super.closeEditor(rowIndex);\n        this.clean();\n    }\n    clean() {\n        delete this.rowIndex;\n    }\n}\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using\n * the Template-Driven Angular Forms ([see example]({% slug editing_directives_grid %}#toc-the-template-directive)).\n */\nclass TemplateEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    editHandler(args) {\n        super.editHandler(args);\n        this.dataItem = args.dataItem;\n        this.originalValues = {};\n        this.editService.assignValues(this.originalValues, this.dataItem);\n    }\n    closeEditor(rowIndex) {\n        if (this.dataItem) {\n            this.editService.assignValues(this.dataItem, this.originalValues);\n        }\n        super.closeEditor(rowIndex);\n    }\n    createModel(args) {\n        if (args.isNew) {\n            return this.createNewItem();\n        }\n    }\n    saveModel(args) {\n        return args.dataItem;\n    }\n    clean() {\n        super.clean();\n        delete this.dataItem;\n    }\n}\nTemplateEditingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridTemplateEditing]'\n            },] },\n];\n/** @nocollapse */\nTemplateEditingDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: LocalDataChangesService }\n];\nTemplateEditingDirective.propDecorators = {\n    createNewItem: [{ type: Input, args: ['kendoGridTemplateEditing',] }]\n};\n\n/**\n * @hidden\n */\nconst markAllAsTouched = (control) => {\n    control.markAsTouched();\n    if (control.hasOwnProperty('controls')) {\n        let controls = control.controls;\n        for (let inner in controls) {\n            if (controls.hasOwnProperty(inner)) {\n                markAllAsTouched(controls[inner]);\n            }\n        }\n    }\n};\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using the\n * Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-reactive-directive)).\n */\nclass ReactiveEditingDirective extends RowEditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    createModel(args) {\n        return this.createFormGroup(args);\n    }\n    saveModel({ dataItem, formGroup, isNew }) {\n        if (!formGroup.dirty && !isNew) {\n            return;\n        }\n        if (formGroup.valid) {\n            this.editService.assignValues(dataItem, formGroup.value);\n            return dataItem;\n        }\n        markAllAsTouched(formGroup);\n    }\n}\nReactiveEditingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridReactiveEditing]'\n            },] },\n];\n/** @nocollapse */\nReactiveEditingDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: LocalDataChangesService }\n];\nReactiveEditingDirective.propDecorators = {\n    createFormGroup: [{ type: Input, args: ['kendoGridReactiveEditing',] }]\n};\n\n/**\n * A directive which encapsulates the editing operations of the Grid when using the in-cell\n * editing with Reactive Forms ([see example]({% slug editing_directives_grid %}#toc-the-incell-directive)).\n */\nclass InCellEditingDirective extends EditingDirectiveBase {\n    constructor(grid, localDataChangesService) {\n        super(grid, localDataChangesService);\n        this.grid = grid;\n        this.localDataChangesService = localDataChangesService;\n    }\n    // Need mixin\n    createModel(args) {\n        return this.createFormGroup(args);\n    }\n    saveModel({ dataItem, formGroup, isNew }) {\n        if (!formGroup.dirty && !isNew) {\n            return;\n        }\n        if (formGroup.valid) {\n            this.editService.assignValues(dataItem, formGroup.value);\n            return dataItem;\n        }\n        markAllAsTouched(formGroup);\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.subscriptions.add(this.grid.cellClick.subscribe(this.cellClickHandler.bind(this)));\n        this.subscriptions.add(this.grid.cellClose.subscribe(this.cellCloseHandler.bind(this)));\n    }\n    removeHandler(args) {\n        super.removeHandler(args);\n        this.grid.cancelCell();\n    }\n    cellClickHandler(args) {\n        if (!args.isEdited && args.type !== 'contextmenu') {\n            this.grid.editCell(args.rowIndex, args.columnIndex, this.createFormGroup(args));\n        }\n    }\n    cellCloseHandler(args) {\n        const { formGroup, dataItem } = args;\n        if (!formGroup.valid) {\n            args.preventDefault();\n        }\n        else if (formGroup.dirty) {\n            this.editService.assignValues(dataItem, formGroup.value);\n            this.editService.update(dataItem);\n        }\n    }\n}\nInCellEditingDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridInCellEditing]'\n            },] },\n];\n/** @nocollapse */\nInCellEditingDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: LocalDataChangesService }\n];\nInCellEditingDirective.propDecorators = {\n    createFormGroup: [{ type: Input, args: ['kendoGridInCellEditing',] }]\n};\n\nconst hasGroups = (items) => items && items.length && items[0].field && items[0].items;\nconst groupDescriptorsPresent = (descriptors) => isPresent(descriptors) && descriptors.length > 0;\nconst processGroups = (data, state$$1) => process(data, state$$1).data;\nconst removeParentDescriptors = (parents, owner) => g => g.field !== owner.field && !parents.some(y => y.field === g.field);\nconst findGroup = (groupIndex, groups) => {\n    const parents = [];\n    return {\n        group: groupIndex.split(\"_\").reduce((acc, x) => {\n            const idx = parseInt(x, 10);\n            if (acc.items) {\n                parents.push(acc);\n                return acc.items[idx];\n            }\n            return isArray(acc) ? acc[idx] : acc;\n        }, groups),\n        parents\n    };\n};\nconst findChildren = (data, parents) => {\n    const filters = parents.map(p => ({ field: p.field, operator: \"eq\", value: p.value }));\n    return filterBy(data, {\n        filters: filters,\n        logic: \"and\"\n    });\n};\n/**\n * @hidden\n */\nconst count = (groups, includeFooters = false) => (groups.reduce((acc, group) => {\n    if (!group.skipHeader) {\n        acc++;\n    }\n    if (group.items) {\n        const children = count(group.items, includeFooters);\n        if (includeFooters && children && !group.hideFooter) {\n            acc++;\n        }\n        acc += children;\n    }\n    return acc;\n}, 0) // tslint:disable-line:align\n);\n/**\n * @hidden\n */\nconst slice = (groups, skip, take$$1, includeFooters = false) => {\n    if (!isPresent(take$$1)) {\n        return groups;\n    }\n    const result = [];\n    for (let idx = 0, length = groups.length; idx < length; idx++) {\n        if (take$$1 <= 0) {\n            break;\n        }\n        const group = groups[idx];\n        const groupItems = group.items;\n        let itemCount = count(groupItems, includeFooters);\n        if (includeFooters && groupItems.length) {\n            itemCount++;\n        }\n        const skipHeader = skip > 0;\n        if (skip) {\n            skip--;\n            if (itemCount && skip >= itemCount) {\n                skip -= itemCount;\n                continue;\n            }\n        }\n        if (!skipHeader || itemCount) {\n            const items = [];\n            let hideFooter = true;\n            if (!skipHeader) {\n                take$$1--;\n            }\n            if (take$$1) {\n                if (hasGroups(groupItems)) {\n                    const children = slice(groupItems, skip, take$$1, includeFooters);\n                    items.push(...children);\n                    take$$1 -= count(children, includeFooters);\n                }\n                else {\n                    items.push(...groupItems.slice(skip, Math.min(skip + take$$1, groupItems.length)));\n                    take$$1 -= items.length;\n                }\n                if (take$$1 && includeFooters) {\n                    hideFooter = false;\n                    take$$1--;\n                }\n                skip = 0;\n            }\n            result.push({\n                aggregates: group.aggregates,\n                field: group.field,\n                hideFooter,\n                items,\n                offset: idx,\n                skipHeader,\n                value: group.value\n            });\n        }\n    }\n    return result;\n};\nconst skippedHeaders = (groupItem) => {\n    let total = 0;\n    while (groupItem) {\n        if (groupItem.skipHeader) {\n            total++;\n        }\n        groupItem = groupItem.items && groupItem.items[0] || null;\n    }\n    return total;\n};\n/**\n * A directive which encapsulates the in-memory handling of grouping with virtual scrolling.\n */\nclass GroupBindingDirective extends DataBindingDirective {\n    constructor(grid, changeDetector, localDataChangesService) {\n        super(grid, changeDetector, localDataChangesService);\n    }\n    /**\n     * The array of data which will be used to populate the Grid.\n     */\n    set kendoGridGroupBinding(value) {\n        this.groups = null;\n        this.grid.resetGroupsState();\n        this.data = value;\n    }\n    /**\n     * @hidden\n     */\n    set data(value) {\n        this.originalData = value || [];\n        this.dataChanged = true;\n    }\n    /**\n     * Defines the descriptors by which the data will be sorted.\n     */\n    set sort(value) {\n        const clear = this.state.sort !== value;\n        this.grid.sort = this.state.sort = value;\n        if (clear) {\n            this.groups = null;\n            this.grid.resetGroupsState();\n        }\n    }\n    /**\n     * Defines the descriptor by which the data will be filtered.\n     */\n    set filter(value) {\n        const clear = diffFilters(this.state.filter, value);\n        if (clear) {\n            this.state.filter = value;\n            this.grid.filter = cloneFilters(value);\n            this.groups = null;\n            this.grid.resetGroupsState();\n        }\n    }\n    /**\n     * Defines the descriptors by which the data will be grouped.\n     */\n    set group(value) {\n        // don't clear if no groups are present in previous and current value\n        const groupsPresent = groupDescriptorsPresent(this.state.group) || groupDescriptorsPresent(value);\n        const clear = this.state.group !== value && groupsPresent;\n        this.grid.group = this.state.group = value;\n        if (clear) {\n            this.groups = null;\n            this.grid.resetGroupsState();\n            this.skip = 0;\n        }\n    }\n    /**\n     * @hidden\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this.grid.groupExpand.subscribe(this.groupExpand.bind(this));\n        this.grid.groupCollapse.subscribe(this.groupCollapse.bind(this));\n    }\n    groupExpand({ groupIndex }) {\n        this.grid.expandGroupChildren(groupIndex);\n        const { group, parents } = findGroup(groupIndex, this.groups);\n        if (!group.items.length) {\n            const descriptors = this.state.group.filter(removeParentDescriptors(parents, group));\n            const children = findChildren(this.originalData, parents.concat(group));\n            group.items = processGroups(children, {\n                filter: this.state.filter,\n                group: descriptors,\n                sort: this.state.sort\n            });\n        }\n        this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n    groupCollapse({ groupIndex }) {\n        const { group } = findGroup(groupIndex, this.groups);\n        if (group) {\n            group.items = [];\n        }\n        this.grid.data = this.dataResult(this.state.skip, this.state.take);\n    }\n    process(state$$1) {\n        if (state$$1.group && state$$1.group.length) {\n            const groups = this.processGroups(state$$1);\n            this.grid.skip -= skippedHeaders(groups.data[0]);\n            return groups;\n        }\n        else {\n            this.groups = null;\n        }\n        return super.process(state$$1);\n    }\n    processGroups(state$$1) {\n        if (!this.groups || !this.groups.length) {\n            this.groups = processGroups(this.originalData, {\n                filter: state$$1.filter,\n                group: state$$1.group,\n                sort: state$$1.sort\n            });\n        }\n        return this.dataResult(state$$1.skip, state$$1.take);\n    }\n    dataResult(skip, take$$1) {\n        const includeFooters = this.grid.showGroupFooters;\n        return {\n            data: slice(this.groups, skip, take$$1, includeFooters),\n            total: count(this.groups, includeFooters)\n        };\n    }\n    applyState({ skip, take: take$$1, sort, group, filter: filter$$1 }) {\n        this.skip = skip;\n        this.state.take = take$$1;\n        // this.pageSize = take; // do need to update take as the process with slice correctly\n        this.sort = sort;\n        this.group = group;\n        this.filter = filter$$1;\n    }\n}\nGroupBindingDirective.decorators = [\n    { type: Directive, args: [{ selector: '[kendoGridGroupBinding]' },] },\n];\n/** @nocollapse */\nGroupBindingDirective.ctorParameters = () => [\n    { type: GridComponent },\n    { type: ChangeDetectorRef },\n    { type: LocalDataChangesService }\n];\nGroupBindingDirective.propDecorators = {\n    kendoGridGroupBinding: [{ type: Input, args: [\"kendoGridGroupBinding\",] }],\n    sort: [{ type: Input }],\n    filter: [{ type: Input }],\n    group: [{ type: Input }]\n};\n\nconst exportedModules$4 = [\n    GridComponent,\n    ToolbarTemplateDirective,\n    ToolbarComponent,\n    DataBindingDirective,\n    SelectionDirective,\n    CustomMessagesComponent,\n    GroupBindingDirective,\n    TemplateEditingDirective,\n    ReactiveEditingDirective,\n    InCellEditingDirective,\n    ExpandDetailsDirective,\n    ...GroupModule.exports(),\n    ...SharedModule.exports(),\n    ...BodyModule.exports(),\n    ...HeaderModule.exports(),\n    ...FooterModule.exports(),\n    ...PagerModule.exports(),\n    ...RowFilterModule.exports(),\n    ...FilterMenuModule.exports(),\n    ...ColumnMenuModule.exports()\n];\nconst declarations = [\n    GridComponent,\n    ListComponent,\n    ToolbarComponent,\n    LocalizedMessagesDirective,\n    CustomMessagesComponent,\n    DataBindingDirective,\n    ToolbarTemplateDirective,\n    SelectionDirective,\n    TemplateEditingDirective,\n    ReactiveEditingDirective,\n    InCellEditingDirective,\n    ExpandDetailsDirective,\n    GroupBindingDirective,\n    GridMarqueeDirective\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid module\n * import { GridModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule], // import Grid module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass GridModule {\n}\nGridModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [declarations],\n                exports: [exportedModules$4],\n                imports: [\n                    CommonModule,\n                    GroupModule,\n                    SharedModule,\n                    BodyModule,\n                    HeaderModule,\n                    FooterModule,\n                    PagerModule,\n                    RowFilterModule,\n                    FilterMenuModule,\n                    ResizeSensorModule,\n                    ColumnMenuModule\n                ]\n            },] },\n];\n\nclass PDFMarginComponent$1 extends PDFMarginComponent {\n}\nPDFMarginComponent$1.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-pdf-margin',\n                template: ''\n            },] },\n];\n\n/**\n * Represents the PDF page template of the Grid that helps to customize the PDF pages. To define a page template,\n * nest an `<ng-template>` tag with the `kendoGridPDFTemplate` directive inside `<kendo-grid-pdf>`.\n *\n * The template context provides the following fields:\n * - `pageNumber`&mdash;Defines PDF page number.\n * - `totalPages`&mdash;Defines the total number of PDF pages.\n *\n * @example\n * ```ts-preview\n *\n * _@Component({\n *     selector: 'my-app',\n *     template: `\n *         <kendo-grid [data]=\"gridData\">\n *             <ng-template kendoGridToolbarTemplate>\n *                 <button kendoGridPDFCommand icon=\"file-pdf\">Export to PDF</button>\n *             </ng-template>\n *             <kendo-grid-column field=\"ProductName\">\n *             </kendo-grid-column>\n *              <kendo-grid-column field=\"UnitPrice\">\n *             </kendo-grid-column>\n *             <kendo-grid-pdf fileName=\"Products.pdf\" paperSize=\"A4\" [margin]=\"{ top: '1cm', left: '1cm', right: '1cm', bottom: '1cm' }\">\n *                 <ng-template kendoGridPDFTemplate let-pageNum=\"pageNum\" let-totalPages=\"totalPages\">\n *                     <div style=\"position: absolute;top: 5px; left: 5px;\">\n *                         Page {{ pageNum }} of {{ totalPages }}\n *                     </div>\n *                 </ng-template>\n *             </kendo-grid-pdf>\n *         </kendo-grid>\n *     `\n * })\n *\n * class AppComponent {\n *     public gridData = [{\n *         \"ProductID\": 1,\n *         \"ProductName\": \"Chai\",\n *         \"UnitPrice\": 18.0000\n *       }, {\n *         \"ProductID\": 2,\n *         \"ProductName\": \"Chang\",\n *         \"UnitPrice\": 19.0000\n *       }\n *     ];\n * }\n *\n * ```\n */\nclass PDFTemplateDirective$1 extends PDFTemplateDirective {\n    constructor(templateRef) {\n        super(templateRef);\n    }\n}\nPDFTemplateDirective$1.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridPDFTemplate]'\n            },] },\n];\n/** @nocollapse */\nPDFTemplateDirective$1.ctorParameters = () => [\n    { type: TemplateRef, decorators: [{ type: Optional }] }\n];\n\n/**\n * @hidden\n */\nconst HEADER_CLASS = 'k-grid-header';\n/**\n * @hidden\n */\nconst FOOTER_CLASS = 'k-grid-footer';\nconst GRID_LIST = 'KENDO-GRID-LIST';\nconst TABLE = 'TABLE';\nconst matchesList = matchesNodeName(GRID_LIST);\nconst matchesTable = matchesNodeName(TABLE);\nconst suffix = (locked) => locked ? 'locked' : 'wrap';\n/**\n * @hidden\n */\nclass GridQuery {\n    constructor(element) {\n        this.element = element;\n        this.list = findElement(element, matchesList);\n    }\n    content(locked) {\n        return findElement(this.list, matchesClasses(`k-grid-content${locked ? '-locked' : ''}`));\n    }\n    header(locked) {\n        this.headerWrap = this.headerWrap || findElement(this.element, matchesClasses(HEADER_CLASS));\n        return findElement(this.headerWrap, matchesClasses(`${HEADER_CLASS}-${suffix(locked)}`));\n    }\n    footer(locked) {\n        this.footerWrap = this.footerWrap || findElement(this.element, matchesClasses(FOOTER_CLASS));\n        return findElement(this.footerWrap, matchesClasses(`${FOOTER_CLASS}-${suffix(locked)}`));\n    }\n    table() {\n        return findElement(this.element, matchesTable);\n    }\n}\n\nconst FIRST_CLASS = 'k-first';\nconst INPUTS = ['input', 'select', 'textarea', 'option'];\n/** @hidden */\nconst cloneNode = (node) => {\n    const clone = node.cloneNode(false);\n    if (node._kendoExportVisual) {\n        clone._kendoExportVisual = node._kendoExportVisual;\n    }\n    if (INPUTS.indexOf(String(node.nodeName).toLowerCase()) >= 0) {\n        clone.removeAttribute(\"id\");\n        clone.removeAttribute(\"name\");\n        clone.value = node.value;\n        clone.checked = node.checked;\n        clone.selected = node.selected;\n    }\n    let child = node.firstChild;\n    while (child) {\n        clone.appendChild(cloneNode(child));\n        child = child.nextSibling;\n    }\n    return clone;\n};\nconst appendNodes = (element, nodes) => {\n    const length = nodes.length;\n    for (let idx = 0; idx < length; idx++) {\n        element.appendChild(cloneNode(nodes[idx]));\n    }\n};\nconst wrapTable = (table) => {\n    const wrapper = document.createElement('div');\n    wrapper.className = 'k-widget k-grid';\n    wrapper.appendChild(table);\n    return wrapper;\n};\nconst createTableElement = (sources) => {\n    const sourceCount = sources.length;\n    const element = cloneNode(sources[0]);\n    const rowsCount = element.rows.length;\n    if (sourceCount > 1) {\n        for (let rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n            for (let sourceIdx = 1; sourceIdx < sourceCount; sourceIdx++) {\n                appendNodes(element.rows[rowIdx], sources[sourceIdx].rows[rowIdx].cells);\n            }\n        }\n    }\n    return element;\n};\nconst setFirstCellClass = (header, headers) => {\n    if (headers.length > 1 && header.rows.length > 1) {\n        for (let idx = 1; idx < header.rows.length; idx++) {\n            const firstCellIndex = headers[0].rows[idx].cells.length;\n            const cell = header.rows[idx].cells[firstCellIndex];\n            if (String(cell.className).indexOf(FIRST_CLASS) === -1) {\n                cell.className += ` ${FIRST_CLASS}`;\n            }\n        }\n    }\n};\nconst createTable = (colGroups, headers, bodies, footers) => {\n    const table = document.createElement('table');\n    const colGroup = colGroups[0].cloneNode(true);\n    for (let idx = 1; idx < colGroups.length; idx++) {\n        appendNodes(colGroup, colGroups[idx].querySelectorAll('col'));\n    }\n    const header = createTableElement(headers);\n    const body = createTableElement(bodies);\n    header.className = HEADER_CLASS;\n    setFirstCellClass(header, headers);\n    table.appendChild(colGroup);\n    table.appendChild(header);\n    table.appendChild(body);\n    if (footers.length) {\n        const footer = createTableElement(footers);\n        footer.className = FOOTER_CLASS;\n        table.appendChild(footer);\n    }\n    return wrapTable(table);\n};\n/**\n * @hidden\n */\nconst exportElement = (wrapper) => {\n    const query = new GridQuery(wrapper);\n    const content = query.content();\n    let result;\n    if (content) {\n        const colGroups = [content.querySelector('colgroup')];\n        const headers = [query.header().querySelector('thead')];\n        const bodies = [content.querySelector('tbody')];\n        const footer = query.footer();\n        const footers = [];\n        if (footer) {\n            footers.push(footer.querySelector('tfoot'));\n        }\n        const lockedContent = query.content(true);\n        if (lockedContent) {\n            colGroups.unshift(lockedContent.querySelector('colgroup'));\n            headers.unshift(query.header(true).querySelector('thead'));\n            bodies.unshift(lockedContent.querySelector('tbody'));\n            if (footer) {\n                footers.unshift(query.footer(true).querySelector('tfoot'));\n            }\n        }\n        result = createTable(colGroups, headers, bodies, footers);\n    }\n    else {\n        result = wrapTable(query.table().cloneNode(true));\n    }\n    return result;\n};\n\nconst createElement$1 = (tagName, className) => {\n    const element = document.createElement(tagName);\n    if (className) {\n        element.className = className;\n    }\n    return element;\n};\nconst createDiv = (className) => {\n    return createElement$1('div', className);\n};\n/**\n * Configures the settings for the export of Grid in PDF ([see example]({% slug pdfexport_grid %})).\n */\nclass PDFComponent extends PDFExportComponent {\n    constructor(pdfService, suspendService, ngZone, element) {\n        super(element);\n        this.pdfService = pdfService;\n        this.suspendService = suspendService;\n        this.ngZone = ngZone;\n        this.columns = new QueryList();\n        this.saveSubscription = pdfService.savePDF.subscribe(this.savePDF.bind(this));\n        this.drawSubscription = pdfService.drawPDF.subscribe(this.drawPDF.bind(this));\n        this.reset = this.reset.bind(this);\n        this.draw = this.draw.bind(this);\n    }\n    ngOnDestroy() {\n        this.saveSubscription.unsubscribe();\n        this.drawSubscription.unsubscribe();\n        this.reset();\n    }\n    savePDF(component) {\n        this.createPDF(component, this.draw);\n    }\n    drawPDF({ component, promise }) {\n        this.createPDF(component, () => {\n            this.createExportGroup(promise);\n        });\n    }\n    createPDF(component, callback) {\n        const pageSize = component.pageSize;\n        const total = component.view.total;\n        const columns = this.columns.toArray();\n        if (columns.length) {\n            this.originalColumns = component.columns.toArray();\n        }\n        this.component = component;\n        this.suspendService.scroll = true;\n        this.pdfService.exporting = true;\n        this.initProgress();\n        this.renderAllPages = this.allPages && pageSize < total;\n        if (this.renderAllPages) {\n            this.skip = component.skip;\n            this.pageSize = pageSize;\n            this.changePage(0, total, callback, columns);\n        }\n        else if (columns.length || component.virtualColumns) {\n            this.changeColumns(columns, callback);\n        }\n        else {\n            callback();\n        }\n    }\n    initProgress() {\n        const wrapperElement = this.component.wrapper.nativeElement;\n        const progress = this.progress = createDiv('k-loading-pdf-mask');\n        const overlay = cloneNode(wrapperElement);\n        progress.appendChild(overlay);\n        progress.appendChild(createDiv('k-loading-color'));\n        progress.appendChild(createElement$1('span', 'k-i-loading k-icon'));\n        this.originalHeight = wrapperElement.style.height;\n        this.originalOverflow = wrapperElement.style.overflow;\n        wrapperElement.style.height = wrapperElement.offsetHeight + 'px';\n        wrapperElement.style.overflow = 'hidden';\n        wrapperElement.appendChild(progress);\n        this.applyScroll(overlay);\n    }\n    applyScroll(overlay) {\n        const query = new GridQuery(this.component.wrapper.nativeElement);\n        const content = query.content();\n        if (content) {\n            const overlayQuery = new GridQuery(overlay);\n            const overlayContent = overlayQuery.content();\n            overlayContent.scrollTop = content.scrollTop;\n            overlayContent.scrollLeft = content.scrollLeft;\n            overlayQuery.header().scrollLeft = query.header().scrollLeft;\n            const footer = query.footer();\n            if (footer) {\n                overlayQuery.footer().scrollLeft = footer.scrollLeft;\n            }\n            const lockedContent = query.content(true);\n            if (lockedContent) {\n                const overlayLockedContent = overlayQuery.content(true);\n                overlayLockedContent.scrollTop = lockedContent.scrollTop;\n                overlayLockedContent.scrollLeft = lockedContent.scrollLeft;\n            }\n        }\n    }\n    draw() {\n        this.createExportElement((element) => {\n            this.save(element, this.fileName);\n        });\n    }\n    createExportGroup(promise) {\n        this.createExportElement((element) => {\n            this.exportElement(element).then(group => promise.resolve(group));\n        });\n    }\n    createExportElement(callback) {\n        this.ngZone.runOutsideAngular(() => {\n            const container = this.container = createDiv('k-grid-pdf-export-element');\n            const element = exportElement(this.component.wrapper.nativeElement);\n            container.appendChild(element);\n            document.body.appendChild(container);\n            callback(element);\n        });\n    }\n    drawOptions() {\n        const options = super.drawOptions();\n        options._destructive = true;\n        return options;\n    }\n    cleanup() {\n        super.cleanup();\n        this.pdfService.exporting = false;\n        if (this.component) {\n            const originalColumns = this.originalColumns;\n            delete this.originalColumns;\n            if (this.renderAllPages) {\n                this.changePage(this.skip, this.pageSize, this.reset, originalColumns);\n            }\n            else if (originalColumns || this.component.virtualColumns) {\n                this.changeColumns(originalColumns, this.reset);\n            }\n            else {\n                this.reset();\n            }\n        }\n        else {\n            this.reset();\n        }\n        this.removeContainer();\n    }\n    removeContainer() {\n        if (this.container) {\n            document.body.removeChild(this.container);\n            delete this.container;\n        }\n    }\n    changePage(skip, _take, callback, columns) {\n        this.ngZone.run(() => {\n            this.pdfService.dataChanged.pipe(take(1)).subscribe(() => {\n                if ((columns && columns.length) || this.component.virtualColumns) {\n                    this.changeColumns(columns, callback);\n                }\n                else {\n                    this.onStable(callback);\n                }\n            });\n            this.component.notifyPageChange('pdf', { skip: skip, take: _take });\n        });\n    }\n    changeColumns(columns, callback) {\n        this.ngZone.run(() => {\n            this.onStable(callback);\n            if (columns && columns.length) {\n                this.component.columns.reset(columns);\n            }\n        });\n    }\n    reset() {\n        this.suspendService.scroll = false;\n        this.renderAllPages = false;\n        if (!this.component) {\n            return;\n        }\n        const wrapperElement = this.component.wrapper.nativeElement;\n        wrapperElement.removeChild(this.progress);\n        wrapperElement.style.height = this.originalHeight;\n        wrapperElement.style.overflow = this.originalOverflow;\n        delete this.progress;\n        delete this.component;\n    }\n    onStable(callback) {\n        // not sure if it is an actual scenario. occurs in the tests.\n        // onStable is triggered in the same pass without the change detection.\n        // thus, the callback is called before the changes are applied without the timeout.\n        setTimeout(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(callback);\n        }, 0); // tslint:disable-line: align\n    }\n}\nPDFComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-pdf',\n                template: ''\n            },] },\n];\n/** @nocollapse */\nPDFComponent.ctorParameters = () => [\n    { type: PDFService },\n    { type: SuspendService },\n    { type: NgZone },\n    { type: ElementRef }\n];\nPDFComponent.propDecorators = {\n    allPages: [{ type: Input }],\n    columns: [{ type: ContentChildren, args: [ColumnBase$1,] }],\n    marginComponent: [{ type: ContentChild, args: [PDFMarginComponent$1,] }],\n    pageTemplateDirective: [{ type: ContentChild, args: [PDFTemplateDirective$1,] }]\n};\n\n/**\n * Represents the `export-to-PDF` command of the Grid.\n * You can apply this directive to any `button` element inside a\n * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button that is associated with the directive, the\n * [`pdfExport`]({% slug api_grid_gridcomponent %}#toc-pdfexport) event\n * fires ([see example]({% slug pdfexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridPDFCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-pdf fileName=\"Grid.pdf\">\n *      </kendo-grid-pdf>\n * </kendo-grid>\n * ```\n */\nclass PDFCommandDirective extends Button {\n    constructor(pdfService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.pdfService = pdfService;\n        this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.pdfService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    get pdfClass() {\n        return true;\n    }\n}\nPDFCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridPDFCommand]'\n            },] },\n];\n/** @nocollapse */\nPDFCommandDirective.ctorParameters = () => [\n    { type: PDFService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nPDFCommandDirective.propDecorators = {\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n    pdfClass: [{ type: HostBinding, args: ['class.k-grid-pdf',] }]\n};\n\nconst exportedModules$5 = [\n    PDFComponent,\n    PDFMarginComponent$1,\n    PDFCommandDirective,\n    PDFTemplateDirective$1\n];\nconst declarations$1 = [\n    PDFComponent,\n    PDFMarginComponent$1,\n    PDFCommandDirective,\n    PDFTemplateDirective$1\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Grid PDF component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and PDF modules\n * import { GridModule, PDFModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, PDFModule], // import Grid and PDF modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass PDFModule {\n}\nPDFModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [declarations$1],\n                exports: [exportedModules$5]\n            },] },\n];\n\n/**\n * Arguments for the `excelExport` event.\n */\nclass ExcelExportEvent extends PreventableEvent {\n    constructor(workbook) {\n        super();\n        this.workbook = workbook;\n    }\n}\n\n/* tslint:disable object-literal-sort-keys */\nconst fetchComponentData = (component) => {\n    return {\n        data: component.view.map(item => item),\n        group: component.group\n    };\n};\nconst toExcelColumn = (column) => {\n    return {\n        title: column.title,\n        field: column.field,\n        locked: Boolean(column.locked),\n        width: column.width,\n        level: column.level,\n        hidden: !column.isVisible,\n        groupHeaderTemplate: column.groupHeaderTemplate,\n        groupHeaderColumnTemplate: column.groupHeaderColumnTemplate,\n        groupFooterTemplate: column.groupFooterTemplate,\n        footerTemplate: column.footerTemplate\n    };\n};\nconst toExcelColumns = (columns) => {\n    const result = [];\n    sortColumns(columns)\n        .forEach((column) => {\n        if (column.isSpanColumn) {\n            result.push(...toExcelColumns(column.childrenArray));\n        }\n        else {\n            const excelColumn = toExcelColumn(column);\n            if (column.isColumnGroup) {\n                excelColumn.children = [excelColumn].concat(toExcelColumns(column.childrenArray));\n            }\n            result.push(excelColumn);\n        }\n    });\n    return result;\n};\nconst componentColumns = (component) => {\n    const columns = toExcelColumns(component.columns.toArray());\n    return orderBy(columns, [{ field: 'locked', dir: 'desc' }]);\n};\n/**\n * Configures the settings for the export of Grid in Excel ([see example]({% slug excelexport_grid %})).\n */\nclass ExcelComponent {\n    constructor(excelService, localization, zone) {\n        this.localization = localization;\n        this.zone = zone;\n        /**\n         * Specifies the file name of the exported Excel file.\n         * @default \"Export.xlsx\"\n         */\n        this.fileName = 'Export.xlsx';\n        /**\n         * @hidden\n         */\n        this.columns = new QueryList();\n        this.saveSubscription = excelService.saveToExcel.subscribe(this.save.bind(this));\n    }\n    ngOnDestroy() {\n        this.saveSubscription.unsubscribe();\n        if (this.dataSubscription) {\n            this.dataSubscription.unsubscribe();\n        }\n    }\n    save(component) {\n        const data = (this.fetchData || fetchComponentData)(component);\n        const exportData = (result) => {\n            delete this.dataSubscription;\n            this.exportData(component, result);\n        };\n        if (data instanceof Promise) {\n            data.then(exportData);\n        }\n        else if (data instanceof Observable) {\n            this.dataSubscription = data.pipe(take(1)).subscribe(exportData);\n        }\n        else {\n            exportData(data);\n        }\n    }\n    exportData(component, result) {\n        const options = workbookOptions({\n            columns: this.columns.length ? this.columns : componentColumns(component),\n            data: result.data,\n            group: result.group,\n            filterable: this.filterable,\n            creator: this.creator,\n            date: this.date,\n            paddingCellOptions: this.paddingCellOptions,\n            headerPaddingCellOptions: this.headerPaddingCellOptions,\n            rtl: this.localization.rtl,\n            collapsible: this.collapsible\n        });\n        const args = new ExcelExportEvent(options);\n        component.excelExport.emit(args);\n        if (!args.isDefaultPrevented()) {\n            this.zone.runOutsideAngular(() => this.saveFile(options));\n        }\n    }\n    saveFile(options) {\n        toDataURL(options).then((dataURL) => {\n            saveAs(dataURL, this.fileName, {\n                forceProxy: this.forceProxy,\n                proxyURL: this.proxyURL\n            });\n        });\n    }\n}\nExcelComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'kendo-grid-excel',\n                template: ``\n            },] },\n];\n/** @nocollapse */\nExcelComponent.ctorParameters = () => [\n    { type: ExcelService },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nExcelComponent.propDecorators = {\n    fileName: [{ type: Input }],\n    filterable: [{ type: Input }],\n    creator: [{ type: Input }],\n    date: [{ type: Input }],\n    forceProxy: [{ type: Input }],\n    proxyURL: [{ type: Input }],\n    fetchData: [{ type: Input }],\n    paddingCellOptions: [{ type: Input }],\n    headerPaddingCellOptions: [{ type: Input }],\n    collapsible: [{ type: Input }],\n    columns: [{ type: ContentChildren, args: [ColumnBase, { descendants: true },] }]\n};\n\n/**\n * Represents the `export-to-Excel` command of the Grid. You can apply this\n * directive to any `button` element inside a\n * [`ToolbarTemplate`]({% slug api_grid_commandcolumncomponent %}).\n * When the user clicks a button associated with the directive, the\n * [`excelExport`]({% slug api_grid_gridcomponent %}#toc-excelexport) event\n * fires ([see example]({% slug excelexport_grid %})).\n *\n * @example\n * ```html-no-run\n * <kendo-grid>\n *      <ng-template kendoGridToolbarTemplate>\n *          <button kendoGridExcelCommand>Export to PDF</button>\n *      </ng-template>\n *      <kendo-grid-excel fileName=\"Grid.xlsx\">\n *      </kendo-grid-excel>\n * </kendo-grid>\n * ```\n */\nclass ExcelCommandDirective extends Button {\n    constructor(excelService, element, renderer, localization, ngZone) {\n        super(element, renderer, null, localization, ngZone);\n        this.excelService = excelService;\n        this.ngZone = ngZone;\n    }\n    /**\n     * @hidden\n     */\n    onClick(e) {\n        e.preventDefault();\n        this.excelService.exportClick.emit();\n    }\n    /**\n     * @hidden\n     */\n    get excelClass() {\n        return true;\n    }\n}\nExcelCommandDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[kendoGridExcelCommand]'\n            },] },\n];\n/** @nocollapse */\nExcelCommandDirective.ctorParameters = () => [\n    { type: ExcelService },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: LocalizationService },\n    { type: NgZone }\n];\nExcelCommandDirective.propDecorators = {\n    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],\n    excelClass: [{ type: HostBinding, args: ['class.k-grid-excel',] }]\n};\n\nconst declarations$2 = [ExcelComponent, ExcelCommandDirective];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Excel component of the Grid.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Grid and Excel modules\n * import { GridModule, ExcelModule } from '@progress/kendo-angular-grid';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, GridModule, ExcelModule], // import Grid and Excel modules\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nclass ExcelModule {\n}\nExcelModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [declarations$2],\n                exports: [declarations$2, ExcelExportModule]\n            },] },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ColumnChooserComponent, ColumnListComponent, ColumnMenuChooserComponent, ColumnMenuFilterComponent, ColumnMenuItemBase, ColumnMenuItemContentTemplateDirective, ColumnMenuItemComponent, ColumnMenuLockComponent, ColumnMenuSortComponent, ColumnMenuTemplateDirective, ColumnMenuModule, ColumnMenuService, ColumnHandleDirective, ColumnResizingService, TableDirective, ColumnInfoService, DomEventsService, ExpandStateService, IdService, PreventableEvent, SortService, ChangeNotificationService, ColumnReorderService, DragAndDropModule, DragAndDropService, DragHintService, DraggableColumnDirective, DropCueService, DropTargetDirective, EditingDirectiveBase, RowEditingDirectiveBase, AddCommandDirective, CancelCommandDirective, EditCommandDirective, EditService as EditService$1, LocalDataChangesService, RemoveCommandDirective, SaveCommandDirective, ExcelCommandDirective, BooleanFilterComponent, BooleanFilterCellComponent, FilterCellHostDirective, FilterCellOperatorsComponent, FilterCellWrapperComponent, DateFilterComponent, FilterHostDirective, FilterInputWrapperComponent, FilterInputDirective, FilterRowComponent, DateFilterMenuInputComponent, FilterMenuContainerComponent, FilterMenuHostDirective, FilterMenuInputWrapperComponent, FilterMenuComponent, NumericFilterMenuInputComponent, StringFilterMenuInputComponent, NumericFilterComponent, FilterOperatorBase, SharedFilterModule, StringFilterComponent, GroupHeaderComponent, GroupIndicatorComponent, GroupInfoService, GroupPanelComponent, GroupsService, BrowserSupportService, ResizeService, ResponsiveService, LocalizedMessagesDirective, Messages, FocusGroup, FocusRoot, LogicalCellDirective, LogicalRowDirective, NavigationService, PagerContextService, PagerElementComponent, PDFCommandDirective, PDFTemplateDirective$1 as PDFTemplateDirective, CellComponent, CELL_CONTEXT, EMPTY_CELL_CONTEXT, FieldAccessorPipe, DetailsService, DEFAULT_SCROLLER_FACTORY, SCROLLER_FACTORY_TOKEN, ScrollRequestService, ScrollSyncService, ScrollerService, CellSelectionService, GridMarqueeDirective, SelectAllCheckboxDirective, SelectionCheckboxDirective, Selection, SelectionService, GridModule, SharedModule, GridComponent, ColumnBase$1 as ColumnBase, ColumnComponent, CommandColumnComponent, SpanColumnComponent, ColumnGroupComponent, CheckboxColumnComponent, ToolbarComponent, ToolbarTemplateDirective, CellTemplateDirective, HeaderTemplateDirective, FooterTemplateDirective, PagerTemplateDirective, ExpandDetailsDirective, DetailTemplateDirective, DetailExpandEvent, DetailCollapseEvent, GroupHeaderTemplateDirective, GroupHeaderColumnTemplateDirective, GroupFooterTemplateDirective, ResizableContainerDirective, TemplateContextDirective, NoRecordsTemplateDirective, DataBindingDirective, SelectionDirective, FilterService, FilterCellTemplateDirective, FilterCellComponent, StringFilterCellComponent, DateFilterCellComponent, BaseFilterCellComponent, FilterMenuTemplateDirective, NumericFilterMenuComponent, StringFilterMenuComponent, DateFilterMenuComponent, BooleanFilterMenuComponent, BeforeEqFilterOperatorComponent, BeforeFilterOperatorComponent, AfterEqFilterOperatorComponent, AfterFilterOperatorComponent, ContainsFilterOperatorComponent, DoesNotContainFilterOperatorComponent, EndsWithFilterOperatorComponent, EqualFilterOperatorComponent, IsEmptyFilterOperatorComponent, IsNotEmptyFilterOperatorComponent, IsNotNullFilterOperatorComponent, IsNullFilterOperatorComponent, NotEqualFilterOperatorComponent, StartsWithFilterOperatorComponent, NumericFilterCellComponent, AutoCompleteFilterCellComponent, GreaterFilterOperatorComponent, GreaterOrEqualToFilterOperatorComponent, LessOrEqualToFilterOperatorComponent, LessFilterOperatorComponent, PagerPrevButtonsComponent, PagerNextButtonsComponent, PagerNumericButtonsComponent, PagerInputComponent, PagerInfoComponent, PagerPageSizesComponent, RowFilterModule, FilterMenuModule, BodyModule, GroupModule, HeaderModule, FooterModule, PagerModule, TemplateEditingDirective, ReactiveEditingDirective, InCellEditingDirective, EditTemplateDirective, ColGroupComponent, HeaderComponent, ListComponent, FooterComponent, TableBodyComponent, PagerComponent, CustomMessagesComponent, LoadingComponent, PDFModule, PDFComponent, PDFMarginComponent$1 as PDFMarginComponent, PDFService, ExcelModule, ExcelComponent, ExcelService, ExcelExportEvent, CellCloseEvent, SuspendService, GroupBindingDirective, slice, count, Skip, ColumnReorderEvent, FocusableDirective, ColumnVisibilityChangeEvent, ColumnMenuComponent, SinglePopupService, PopupCloseEvent };\n"]},"metadata":{},"sourceType":"module"}