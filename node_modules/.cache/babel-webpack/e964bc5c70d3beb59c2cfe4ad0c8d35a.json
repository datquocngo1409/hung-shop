{"ast":null,"code":"import { adjustDST } from './adjust-dst';\nimport { cloneDate } from './clone-date';\nimport { lastDayOfMonth } from './last-day-of-month';\nvar MONTHS_LENGTH = 12;\n\nvar normalize = function normalize(date, expectedMonth) {\n  return date.getMonth() !== expectedMonth ? lastDayOfMonth(addMonths(date, -1)) : date //tslint:disable-line:no-use-before-declare\n  ;\n};\n/**\n * A function that adds and subtracts months from a `Date` object.\n *\n * @param date - The initial date value.\n * @param offset - The number of months to add or subtract from the date.\n * @returns - A new `Date` instance.\n *\n * @example\n * ```ts-no-run\n * addMonths(new Date(2016, 5, 1), 5); // 2016-11-1\n * addMonths(new Date(2016, 5, 1), -5); // 2015-1-1\n * ```\n */\n\n\nexport var addMonths = function addMonths(date, offset) {\n  var newDate = cloneDate(date);\n  var diff = (newDate.getMonth() + offset) % MONTHS_LENGTH;\n  var expectedMonth = (MONTHS_LENGTH + diff) % MONTHS_LENGTH;\n  newDate.setMonth(newDate.getMonth() + offset);\n  return normalize(adjustDST(newDate, date.getHours()), expectedMonth);\n};","map":{"version":3,"sources":["/home/datquocngo/Project/UET/gts-fe/node_modules/@progress/kendo-date-math/dist/es2015/add-months.js"],"names":["adjustDST","cloneDate","lastDayOfMonth","MONTHS_LENGTH","normalize","date","expectedMonth","getMonth","addMonths","offset","newDate","diff","setMonth","getHours"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,IAAMC,aAAa,GAAG,EAAtB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,aAAP;AAAA,SAA0BD,IAAI,CAACE,QAAL,OAAoBD,aAApB,GAAoCJ,cAAc,CAACM,SAAS,CAACH,IAAD,EAAO,CAAC,CAAR,CAAV,CAAlD,GAA0EA,IAApG,CAAyG;AAAzG;AAAA,CAAlB;AAEA;;;;;;;;;;;;;;;AAaA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACH,IAAD,EAAOI,MAAP,EAAkB;AACvC,MAAMC,OAAO,GAAGT,SAAS,CAACI,IAAD,CAAzB;AACA,MAAMM,IAAI,GAAG,CAACD,OAAO,CAACH,QAAR,KAAqBE,MAAtB,IAAgCN,aAA7C;AACA,MAAMG,aAAa,GAAG,CAACH,aAAa,GAAGQ,IAAjB,IAAyBR,aAA/C;AACAO,EAAAA,OAAO,CAACE,QAAR,CAAiBF,OAAO,CAACH,QAAR,KAAqBE,MAAtC;AACA,SAAOL,SAAS,CAACJ,SAAS,CAACU,OAAD,EAAUL,IAAI,CAACQ,QAAL,EAAV,CAAV,EAAsCP,aAAtC,CAAhB;AACH,CANM","sourcesContent":["import { adjustDST } from './adjust-dst';\nimport { cloneDate } from './clone-date';\nimport { lastDayOfMonth } from './last-day-of-month';\nconst MONTHS_LENGTH = 12;\nconst normalize = (date, expectedMonth) => (date.getMonth() !== expectedMonth ? lastDayOfMonth(addMonths(date, -1)) : date //tslint:disable-line:no-use-before-declare\n);\n/**\n * A function that adds and subtracts months from a `Date` object.\n *\n * @param date - The initial date value.\n * @param offset - The number of months to add or subtract from the date.\n * @returns - A new `Date` instance.\n *\n * @example\n * ```ts-no-run\n * addMonths(new Date(2016, 5, 1), 5); // 2016-11-1\n * addMonths(new Date(2016, 5, 1), -5); // 2015-1-1\n * ```\n */\nexport const addMonths = (date, offset) => {\n    const newDate = cloneDate(date);\n    const diff = (newDate.getMonth() + offset) % MONTHS_LENGTH;\n    const expectedMonth = (MONTHS_LENGTH + diff) % MONTHS_LENGTH;\n    newDate.setMonth(newDate.getMonth() + offset);\n    return normalize(adjustDST(newDate, date.getHours()), expectedMonth);\n};\n"]},"metadata":{},"sourceType":"module"}