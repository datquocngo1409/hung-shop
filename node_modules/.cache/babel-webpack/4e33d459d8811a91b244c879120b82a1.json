{"ast":null,"code":"import { Component, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { BreadcrumbService } from './breadcrumb.service';\n/**\n * This component shows a breadcrumb trail for available routes the router can navigate to.\n * It subscribes to the router in order to update the breadcrumb trail as you navigate to a component.\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction BreadcrumbComponent_li_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function BreadcrumbComponent_li_1_a_1_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.navigateTo(\"/\");\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var url_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(url_r1);\n  }\n}\n\nfunction BreadcrumbComponent_li_1_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function BreadcrumbComponent_li_1_a_2_Template_a_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      var url_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.navigateTo(url_r1);\n    });\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var url_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.friendlyName(url_r1));\n  }\n}\n\nfunction BreadcrumbComponent_li_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var url_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.friendlyName(url_r1));\n  }\n}\n\nfunction BreadcrumbComponent_li_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.friendlyName(\"/\"));\n  }\n}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    \"breadcrumb-item\": a0,\n    \"active\": a1\n  };\n};\n\nfunction BreadcrumbComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 1);\n    ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_li_1_a_1_Template, 2, 1, \"a\", 2);\n    ɵngcc0.ɵɵtemplate(2, BreadcrumbComponent_li_1_a_2_Template, 2, 1, \"a\", 2);\n    ɵngcc0.ɵɵtemplate(3, BreadcrumbComponent_li_1_span_3_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(4, BreadcrumbComponent_li_1_span_4_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var url_r1 = ctx.$implicit;\n    var last_r2 = ctx.last;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(5, _c0, ctx_r0.useBootstrap, last_r2));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !last_r2 && url_r1 == ctx_r0.prefix);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !last_r2 && url_r1 != ctx_r0.prefix);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", last_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", last_r2 && url_r1 == ctx_r0.prefix);\n  }\n}\n\nvar BreadcrumbComponent = function () {\n  function BreadcrumbComponent(router, breadcrumbService) {\n    this.router = router;\n    this.breadcrumbService = breadcrumbService;\n    this.useBootstrap = true;\n    this.prefix = '';\n  }\n\n  BreadcrumbComponent.prototype.ngOnInit = function () {\n    var _this = this;\n\n    this._urls = new Array();\n\n    if (this.prefix.length > 0) {\n      this._urls.unshift(this.prefix);\n    }\n\n    this._routerSubscription = this.router.events.subscribe(function (navigationEnd) {\n      if (navigationEnd instanceof NavigationEnd) {\n        _this._urls.length = 0; //Fastest way to clear out array\n\n        _this.generateBreadcrumbTrail(navigationEnd.urlAfterRedirects ? navigationEnd.urlAfterRedirects : navigationEnd.url);\n      }\n    });\n  };\n\n  BreadcrumbComponent.prototype.ngOnChanges = function (changes) {\n    if (!this._urls) {\n      return;\n    }\n\n    this._urls.length = 0;\n    this.generateBreadcrumbTrail(this.router.url);\n  };\n\n  BreadcrumbComponent.prototype.generateBreadcrumbTrail = function (url) {\n    if (!this.breadcrumbService.isRouteHidden(url)) {\n      //Add url to beginning of array (since the url is being recursively broken down from full url to its parent)\n      this._urls.unshift(url);\n    }\n\n    if (url.lastIndexOf('/') > 0) {\n      this.generateBreadcrumbTrail(url.substr(0, url.lastIndexOf('/'))); //Find last '/' and add everything before it as a parent route\n    } else if (this.prefix.length > 0) {\n      this._urls.unshift(this.prefix);\n    }\n  };\n\n  BreadcrumbComponent.prototype.navigateTo = function (url) {\n    this.router.navigateByUrl(url);\n  };\n\n  BreadcrumbComponent.prototype.friendlyName = function (url) {\n    return !url ? '' : this.breadcrumbService.getFriendlyNameForRoute(url);\n  };\n\n  BreadcrumbComponent.prototype.ngOnDestroy = function () {\n    this._routerSubscription.unsubscribe();\n  };\n  /** @nocollapse */\n\n\n  BreadcrumbComponent.ctorParameters = function () {\n    return [{\n      type: Router\n    }, {\n      type: BreadcrumbService\n    }];\n  };\n\n  BreadcrumbComponent.propDecorators = {\n    \"useBootstrap\": [{\n      type: Input\n    }],\n    \"prefix\": [{\n      type: Input\n    }]\n  };\n\n  BreadcrumbComponent.ɵfac = function BreadcrumbComponent_Factory(t) {\n    return new (t || BreadcrumbComponent)(ɵngcc0.ɵɵdirectiveInject(Router), ɵngcc0.ɵɵdirectiveInject(BreadcrumbService));\n  };\n\n  BreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: BreadcrumbComponent,\n    selectors: [[\"breadcrumb\"]],\n    inputs: {\n      useBootstrap: \"useBootstrap\",\n      prefix: \"prefix\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 2,\n    vars: 3,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [\"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"button\", 3, \"click\"]],\n    template: function BreadcrumbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\");\n        ɵngcc0.ɵɵtemplate(1, BreadcrumbComponent_li_1_Template, 5, 8, \"li\", 0);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"breadcrumb\", ctx.useBootstrap);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._urls);\n      }\n    },\n    directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgIf],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(BreadcrumbComponent, [{\n      type: Component,\n      args: [{\n        selector: 'breadcrumb',\n        template: \"\\n        <ul [class.breadcrumb]=\\\"useBootstrap\\\">\\n            <li *ngFor=\\\"let url of _urls; let last = last\\\" [ngClass]=\\\"{'breadcrumb-item': useBootstrap, 'active': last}\\\"> <!-- disable link of last item -->\\n                <a role=\\\"button\\\" *ngIf=\\\"!last && url == prefix\\\" (click)=\\\"navigateTo('/')\\\">{{url}}</a>\\n                <a role=\\\"button\\\" *ngIf=\\\"!last && url != prefix\\\" (click)=\\\"navigateTo(url)\\\">{{friendlyName(url)}}</a>\\n                <span *ngIf=\\\"last\\\">{{friendlyName(url)}}</span>\\n                <span *ngIf=\\\"last && url == prefix\\\">{{friendlyName('/')}}</span>\\n            </li>\\n        </ul>\\n    \"\n      }]\n    }], function () {\n      return [{\n        type: Router\n      }, {\n        type: BreadcrumbService\n      }];\n    }, {\n      useBootstrap: [{\n        type: Input\n      }],\n      prefix: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return BreadcrumbComponent;\n}();\n\nexport { BreadcrumbComponent };","map":{"version":3,"sources":["../../../../../src/app/components/breadcrumb/breadcrumb.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, OnInit, OnChanges} from '@angular/core';\nimport {Router, NavigationEnd} from '@angular/router';\nimport {BreadcrumbService} from './breadcrumb.service';\n\n/**\n * This component shows a breadcrumb trail for available routes the router can navigate to.\n * It subscribes to the router in order to update the breadcrumb trail as you navigate to a component.\n */\n@Component({\n    selector: 'breadcrumb',\n    template: `\n        <ul [class.breadcrumb]=\"useBootstrap\">\n            <li *ngFor=\"let url of _urls; let last = last\" [ngClass]=\"{'breadcrumb-item': useBootstrap, 'active': last}\"> <!-- disable link of last item -->\n                <a role=\"button\" *ngIf=\"!last && url == prefix\" (click)=\"navigateTo('/')\">{{url}}</a>\n                <a role=\"button\" *ngIf=\"!last && url != prefix\" (click)=\"navigateTo(url)\">{{friendlyName(url)}}</a>\n                <span *ngIf=\"last\">{{friendlyName(url)}}</span>\n                <span *ngIf=\"last && url == prefix\">{{friendlyName('/')}}</span>\n            </li>\n        </ul>\n    `\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n    @Input() useBootstrap: boolean = true;\n    @Input() prefix:       string  = '';\n\n    public _urls: string[];\n    public _routerSubscription: any;\n\n    constructor(\n        private router: Router,\n        private breadcrumbService: BreadcrumbService\n    ) {}\n\n    ngOnInit(): void {\n        this._urls = new Array();\n\n        if (this.prefix.length > 0) {\n            this._urls.unshift(this.prefix);\n        }\n\n        this._routerSubscription = this.router.events.subscribe((navigationEnd:NavigationEnd) => {\n\n           if (navigationEnd instanceof NavigationEnd) {\n                this._urls.length = 0; //Fastest way to clear out array\n                this.generateBreadcrumbTrail(navigationEnd.urlAfterRedirects ? navigationEnd.urlAfterRedirects : navigationEnd.url);\n            }\n        });\n    }\n\n    ngOnChanges(changes: any): void {\n        if (!this._urls) {\n            return;\n        }\n\n        this._urls.length = 0;\n        this.generateBreadcrumbTrail(this.router.url);\n    }\n\n    generateBreadcrumbTrail(url: string): void {\n        if (!this.breadcrumbService.isRouteHidden(url)) {\n            //Add url to beginning of array (since the url is being recursively broken down from full url to its parent)\n            this._urls.unshift(url);\n        }\n\n        if (url.lastIndexOf('/') > 0) {\n            this.generateBreadcrumbTrail(url.substr(0, url.lastIndexOf('/'))); //Find last '/' and add everything before it as a parent route\n        } else if (this.prefix.length > 0) {\n            this._urls.unshift(this.prefix);\n        }\n    }\n\n    navigateTo(url: string): void {\n        this.router.navigateByUrl(url);\n    }\n\n    friendlyName(url: string): string {\n        return !url ? '' : this.breadcrumbService.getFriendlyNameForRoute(url);\n    }\n\n    ngOnDestroy(): void {\n        this._routerSubscription.unsubscribe();\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}