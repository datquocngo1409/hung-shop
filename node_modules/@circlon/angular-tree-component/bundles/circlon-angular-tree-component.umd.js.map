{"version":3,"file":"circlon-angular-tree-component.umd.js","sources":["ng://@circlon/angular-tree-component/lib/mobx-angular/tree-mobx-autorun.directive.ts","ng://@circlon/angular-tree-component/lib/constants/keys.ts","ng://@circlon/angular-tree-component/lib/models/tree-options.model.ts","ng://@circlon/angular-tree-component/lib/constants/events.ts","ng://@circlon/angular-tree-component/lib/models/tree-node.model.ts","ng://@circlon/angular-tree-component/lib/models/tree.model.ts","ng://@circlon/angular-tree-component/lib/models/tree-dragged-element.model.ts","ng://@circlon/angular-tree-component/lib/models/tree-virtual-scroll.model.ts","ng://@circlon/angular-tree-component/lib/components/loading.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-viewport.component.ts","ng://@circlon/angular-tree-component/lib/components/tree.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-content.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-drop-slot.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-expander.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-children.component.ts","ng://@circlon/angular-tree-component/lib/mobx-angular/mobx-proxy.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-collection.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-wrapper.component.ts","ng://@circlon/angular-tree-component/lib/components/tree-node-checkbox.component.ts","ng://@circlon/angular-tree-component/lib/directives/tree-drop.directive.ts","ng://@circlon/angular-tree-component/lib/directives/tree-drag.directive.ts","ng://@circlon/angular-tree-component/lib/directives/tree-animate-open.directive.ts","ng://@circlon/angular-tree-component/lib/vendor/closest.ts","ng://@circlon/angular-tree-component/lib/angular-tree-component.module.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ViewContainerRef,\r\n  TemplateRef,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  EmbeddedViewRef\r\n} from '@angular/core';\r\nimport { autorun } from 'mobx';\r\n\r\n@Directive({ selector: '[treeMobxAutorun]' })\r\nexport class TreeMobxAutorunDirective implements OnInit, OnDestroy {\r\n  protected templateBindings = {};\r\n  protected dispose: any;\r\n  protected view: EmbeddedViewRef<any>;\r\n  @Input() treeMobxAutorun;\r\n\r\n  constructor(\r\n    protected templateRef: TemplateRef<any>,\r\n    protected viewContainer: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.view = this.viewContainer.createEmbeddedView(this.templateRef);\r\n\r\n    if (this.dispose) {\r\n      this.dispose();\r\n    }\r\n\r\n    if (this.shouldDetach()) {\r\n      this.view.detach();\r\n    }\r\n    this.autoDetect(this.view);\r\n  }\r\n\r\n  shouldDetach() {\r\n    return this.treeMobxAutorun && this.treeMobxAutorun.detach;\r\n  }\r\n\r\n  autoDetect(view: EmbeddedViewRef<any>) {\r\n    this.dispose = autorun(() => view.detectChanges());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.dispose) {\r\n      this.dispose();\r\n    }\r\n  }\r\n}\r\n","export const KEYS = {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n  ENTER: 13,\r\n  SPACE: 32,\r\n  CONTEXT_MENU: 32\r\n};\r\n","import { TreeNode } from './tree-node.model';\r\nimport { TreeModel } from './tree.model';\r\nimport { KEYS } from '../constants/keys';\r\nimport { ITreeOptions } from '../defs/api';\r\n\r\nimport { defaultsDeep, get, omit, isNumber } from 'lodash-es';\r\n\r\nexport interface IActionHandler {\r\n  (tree: TreeModel, node: TreeNode, $event: any, ...rest);\r\n}\r\n\r\nexport const TREE_ACTIONS = {\r\n  TOGGLE_ACTIVE: (tree: TreeModel, node: TreeNode, $event: any) => node && node.toggleActivated(),\r\n  TOGGLE_ACTIVE_MULTI: (tree: TreeModel, node: TreeNode, $event: any) => node && node.toggleActivated(true),\r\n  TOGGLE_SELECTED: (tree: TreeModel, node: TreeNode, $event: any) => node && node.toggleSelected(),\r\n  ACTIVATE: (tree: TreeModel, node: TreeNode, $event: any) => node.setIsActive(true),\r\n  DEACTIVATE: (tree: TreeModel, node: TreeNode, $event: any) => node.setIsActive(false),\r\n  SELECT: (tree: TreeModel, node: TreeNode, $event: any) => node.setIsSelected(true),\r\n  DESELECT: (tree: TreeModel, node: TreeNode, $event: any) => node.setIsSelected(false),\r\n  FOCUS: (tree: TreeModel, node: TreeNode, $event: any) => node.focus(),\r\n  TOGGLE_EXPANDED: (tree: TreeModel, node: TreeNode, $event: any) => node.hasChildren && node.toggleExpanded(),\r\n  EXPAND: (tree: TreeModel, node: TreeNode, $event: any) => node.expand(),\r\n  COLLAPSE: (tree: TreeModel, node: TreeNode, $event: any) => node.collapse(),\r\n  DRILL_DOWN: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusDrillDown(),\r\n  DRILL_UP: (tree: TreeModel, node: TreeNode, $event: any) => tree.focusDrillUp(),\r\n  NEXT_NODE: (tree: TreeModel, node: TreeNode, $event: any) =>  tree.focusNextNode(),\r\n  PREVIOUS_NODE: (tree: TreeModel, node: TreeNode, $event: any) =>  tree.focusPreviousNode(),\r\n  MOVE_NODE: (tree: TreeModel, node: TreeNode, $event: any, {from , to}: {from: any, to: any}) => {\r\n    // default action assumes from = node, to = {parent, index}\r\n    if ($event.ctrlKey) {\r\n      tree.copyNode(from, to);\r\n    } else {\r\n      tree.moveNode(from, to);\r\n    }\r\n  }\r\n};\r\n\r\nconst defaultActionMapping: IActionMapping = {\r\n  mouse: {\r\n    click: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n    dblClick: null,\r\n    contextMenu: null,\r\n    expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,\r\n    checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,\r\n    drop: TREE_ACTIONS.MOVE_NODE\r\n  },\r\n  keys: {\r\n    [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,\r\n    [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,\r\n    [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,\r\n    [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,\r\n    [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,\r\n    [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE\r\n  }\r\n};\r\n\r\nexport interface IActionMapping {\r\n  mouse?: {\r\n    click?: IActionHandler,\r\n    dblClick?: IActionHandler,\r\n    contextMenu?: IActionHandler,\r\n    expanderClick?: IActionHandler,\r\n    checkboxClick?: IActionHandler,\r\n    dragStart?: IActionHandler,\r\n    drag?: IActionHandler,\r\n    dragEnd?: IActionHandler,\r\n    dragOver?: IActionHandler,\r\n    dragLeave?: IActionHandler,\r\n    dragEnter?: IActionHandler,\r\n    drop?: IActionHandler,\r\n    mouseOver?: IActionHandler,\r\n    mouseOut?: IActionHandler\r\n  };\r\n  keys?: {\r\n    [key: number]: IActionHandler\r\n  };\r\n}\r\n\r\nexport class TreeOptions {\r\n  get hasChildrenField(): string { return this.options.hasChildrenField || 'hasChildren'; }\r\n  get childrenField(): string { return this.options.childrenField || 'children'; }\r\n  get displayField(): string { return this.options.displayField || 'name'; }\r\n  get idField(): string { return this.options.idField || 'id'; }\r\n  get isExpandedField(): string { return this.options.isExpandedField || 'isExpanded'; }\r\n  get getChildren(): any { return this.options.getChildren; }\r\n  get levelPadding(): number { return this.options.levelPadding || 0; }\r\n  get useVirtualScroll(): boolean { return this.options.useVirtualScroll; }\r\n  get animateExpand(): boolean { return this.options.animateExpand; }\r\n  get animateSpeed(): number { return this.options.animateSpeed || 1; }\r\n  get animateAcceleration(): number { return this.options.animateAcceleration || 1.2; }\r\n  get scrollOnActivate(): boolean { return this.options.scrollOnActivate === undefined ? true : this.options.scrollOnActivate; }\r\n  get rtl(): boolean { return !!this.options.rtl; }\r\n  get rootId(): any {return this.options.rootId; }\r\n  get useCheckbox(): boolean { return this.options.useCheckbox; }\r\n  get useTriState(): boolean { return this.options.useTriState === undefined ? true : this.options.useTriState; }\r\n  get scrollContainer(): HTMLElement { return this.options.scrollContainer; }\r\n  get allowDragoverStyling(): boolean { return this.options.allowDragoverStyling === undefined ? true : this.options.allowDragoverStyling; }\r\n  actionMapping: IActionMapping;\r\n\r\n  constructor(private options: ITreeOptions = {}) {\r\n    this.actionMapping = defaultsDeep({}, this.options.actionMapping, defaultActionMapping);\r\n    if (options.rtl) {\r\n      this.actionMapping.keys[KEYS.RIGHT] = <IActionHandler>get(options, ['actionMapping', 'keys', KEYS.RIGHT]) || TREE_ACTIONS.DRILL_UP;\r\n      this.actionMapping.keys[KEYS.LEFT] = <IActionHandler>get(options, ['actionMapping', 'keys', KEYS.LEFT]) || TREE_ACTIONS.DRILL_DOWN;\r\n    }\r\n  }\r\n\r\n  getNodeClone(node: TreeNode): any {\r\n    if (this.options.getNodeClone) {\r\n      return this.options.getNodeClone(node);\r\n    }\r\n\r\n    return omit(Object.assign({}, node.data), ['id']);\r\n  }\r\n\r\n  allowDrop(element, to, $event?): boolean {\r\n    if (this.options.allowDrop instanceof Function) {\r\n      return this.options.allowDrop(element, to, $event);\r\n    }\r\n    else {\r\n      return this.options.allowDrop === undefined ? true : this.options.allowDrop;\r\n    }\r\n  }\r\n\r\n  allowDrag(node: TreeNode): boolean {\r\n    if (this.options.allowDrag instanceof Function) {\r\n      return this.options.allowDrag(node);\r\n    } else {\r\n      return this.options.allowDrag;\r\n    }\r\n  }\r\n\r\n  nodeClass(node: TreeNode): string {\r\n    return this.options.nodeClass ? this.options.nodeClass(node) : '';\r\n  }\r\n\r\n  nodeHeight(node: TreeNode): number {\r\n    if (node.data.virtual) {\r\n      return 0;\r\n    }\r\n\r\n    let nodeHeight = this.options.nodeHeight || 22;\r\n\r\n    if (typeof nodeHeight === 'function') {\r\n      nodeHeight = nodeHeight(node);\r\n    }\r\n\r\n    // account for drop slots:\r\n    return nodeHeight + (node.index === 0 ?  2 : 1) * this.dropSlotHeight;\r\n  }\r\n\r\n  get dropSlotHeight(): number {\r\n    return isNumber(this.options.dropSlotHeight) ? this.options.dropSlotHeight : 2;\r\n  }\r\n}\r\n","export const TREE_EVENTS = {\r\n  toggleExpanded: 'toggleExpanded',\r\n  activate: 'activate',\r\n  deactivate: 'deactivate',\r\n  nodeActivate: 'nodeActivate',\r\n  nodeDeactivate: 'nodeDeactivate',\r\n  select: 'select',\r\n  deselect: 'deselect',\r\n  focus: 'focus',\r\n  blur: 'blur',\r\n  initialized: 'initialized',\r\n  updateData: 'updateData',\r\n  moveNode: 'moveNode',\r\n  copyNode: 'copyNode',\r\n  event: 'event',\r\n  loadNodeChildren: 'loadNodeChildren',\r\n  changeFilter: 'changeFilter',\r\n  stateChange: 'stateChange'\r\n};\r\n","import { observable, computed, reaction, autorun, action, IReactionDisposer } from 'mobx';\r\nimport { TreeModel } from './tree.model';\r\nimport { TreeOptions } from './tree-options.model';\r\nimport { ITreeNode } from '../defs/api';\r\nimport { TREE_EVENTS } from '../constants/events';\r\n\r\nimport { first, last, some, every } from 'lodash-es';\r\n\r\nexport class TreeNode implements ITreeNode {\r\n  private handler: IReactionDisposer;\r\n  @computed get isHidden() { return this.treeModel.isHidden(this); };\r\n  @computed get isExpanded() { return this.treeModel.isExpanded(this); };\r\n  @computed get isActive() { return this.treeModel.isActive(this); };\r\n  @computed get isFocused() { return this.treeModel.isNodeFocused(this); };\r\n  @computed get isSelected() {\r\n    if (this.isSelectable()) {\r\n        return this.treeModel.isSelected(this);\r\n    } else {\r\n      return some(this.children, (node: TreeNode) => node.isSelected);\r\n    }\r\n  };\r\n  @computed get isAllSelected() {\r\n    if (this.isSelectable()) {\r\n      return this.treeModel.isSelected(this);\r\n    } else {\r\n      return every(this.children, (node: TreeNode) => node.isAllSelected);\r\n    }\r\n  };\r\n  @computed get isPartiallySelected() {\r\n    return this.isSelected && !this.isAllSelected;\r\n  }\r\n\r\n  @observable children: TreeNode[];\r\n  @observable index: number;\r\n  @observable position = 0;\r\n  @observable height: number;\r\n  @computed get level(): number {\r\n    return this.parent ? this.parent.level + 1 : 0;\r\n  }\r\n  @computed get path(): string[] {\r\n    return this.parent ? [...this.parent.path, this.id] : [];\r\n  }\r\n\r\n  get elementRef(): any {\r\n    throw `Element Ref is no longer supported since introducing virtual scroll\\n\r\n      You may use a template to obtain a reference to the element`;\r\n  }\r\n\r\n  private _originalNode: any;\r\n  get originalNode() { return this._originalNode; };\r\n\r\n  constructor(public data: any, public parent: TreeNode, public treeModel: TreeModel, index: number) {\r\n    if (this.id === undefined || this.id === null) {\r\n      this.id = uuid();\r\n    } // Make sure there's a unique id without overriding existing ids to work with immutable data structures\r\n    this.index = index;\r\n\r\n    if (this.getField('children')) {\r\n      this._initChildren();\r\n    }\r\n    this.autoLoadChildren();\r\n  }\r\n\r\n  // helper get functions:\r\n  get hasChildren(): boolean {\r\n    return !!(this.getField('hasChildren') || (this.children && this.children.length > 0));\r\n  }\r\n  get isCollapsed(): boolean { return !this.isExpanded; }\r\n  get isLeaf(): boolean { return !this.hasChildren; }\r\n  get isRoot(): boolean { return this.parent.data.virtual; }\r\n  get realParent(): TreeNode { return this.isRoot ? null : this.parent; }\r\n\r\n  // proxy functions:\r\n  get options(): TreeOptions { return this.treeModel.options; }\r\n  fireEvent(event) { this.treeModel.fireEvent(event); }\r\n\r\n  // field accessors:\r\n  get displayField() {\r\n    return this.getField('display');\r\n  }\r\n\r\n  get id() {\r\n    return this.getField('id');\r\n  }\r\n\r\n  set id(value) {\r\n    this.setField('id', value);\r\n  }\r\n\r\n  getField(key) {\r\n    return this.data[this.options[`${key}Field`]];\r\n  }\r\n\r\n  setField(key, value) {\r\n    this.data[this.options[`${key}Field`]] = value;\r\n  }\r\n\r\n  // traversing:\r\n  _findAdjacentSibling(steps, skipHidden = false) {\r\n    const siblings = this._getParentsChildren(skipHidden);\r\n    const index = siblings.indexOf(this);\r\n\r\n    return siblings.length > index + steps ? siblings[index + steps] : null;\r\n  }\r\n\r\n  findNextSibling(skipHidden = false) {\r\n    return this._findAdjacentSibling(+1, skipHidden);\r\n  }\r\n\r\n  findPreviousSibling(skipHidden = false) {\r\n    return this._findAdjacentSibling(-1, skipHidden);\r\n  }\r\n\r\n  getVisibleChildren() {\r\n    return this.visibleChildren;\r\n  }\r\n\r\n  @computed get visibleChildren() {\r\n    return (this.children || []).filter((node) => !node.isHidden);\r\n  }\r\n\r\n  getFirstChild(skipHidden = false) {\r\n    let children = skipHidden ? this.visibleChildren : this.children;\r\n\r\n    return first(children || []);\r\n  }\r\n\r\n  getLastChild(skipHidden = false) {\r\n    let children = skipHidden ? this.visibleChildren : this.children;\r\n\r\n    return last(children || []);\r\n  }\r\n\r\n  findNextNode(goInside = true, skipHidden = false) {\r\n    return goInside && this.isExpanded && this.getFirstChild(skipHidden) ||\r\n           this.findNextSibling(skipHidden) ||\r\n           this.parent && this.parent.findNextNode(false, skipHidden);\r\n  }\r\n\r\n  findPreviousNode(skipHidden = false) {\r\n    let previousSibling = this.findPreviousSibling(skipHidden);\r\n    if (!previousSibling) {\r\n      return this.realParent;\r\n    }\r\n    return previousSibling._getLastOpenDescendant(skipHidden);\r\n  }\r\n\r\n  _getLastOpenDescendant(skipHidden = false) {\r\n    const lastChild = this.getLastChild(skipHidden);\r\n    return (this.isCollapsed || !lastChild)\r\n      ? this\r\n      : lastChild._getLastOpenDescendant(skipHidden);\r\n  }\r\n\r\n  private _getParentsChildren(skipHidden = false): any[] {\r\n    const children = this.parent &&\r\n      (skipHidden ? this.parent.getVisibleChildren() : this.parent.children);\r\n\r\n    return children || [];\r\n  }\r\n\r\n  private getIndexInParent(skipHidden = false) {\r\n    return this._getParentsChildren(skipHidden).indexOf(this);\r\n  }\r\n\r\n  isDescendantOf(node: TreeNode) {\r\n    if (this === node) return true;\r\n    else return this.parent && this.parent.isDescendantOf(node);\r\n  }\r\n\r\n  getNodePadding(): string {\r\n    return this.options.levelPadding * (this.level - 1) + 'px';\r\n  }\r\n\r\n  getClass(): string {\r\n    return [this.options.nodeClass(this), `tree-node-level-${ this.level }`].join(' ');\r\n  }\r\n\r\n  onDrop($event) {\r\n    this.mouseAction('drop', $event.event, {\r\n      from: $event.element,\r\n      to: { parent: this, index: 0, dropOnNode: true }\r\n    });\r\n  }\r\n\r\n  allowDrop = (element, $event?) => {\r\n    return this.options.allowDrop(element, { parent: this, index: 0 }, $event);\r\n  }\r\n\r\n  allowDragoverStyling = () => {\r\n    return this.options.allowDragoverStyling;\r\n  }\r\n\r\n  allowDrag() {\r\n    return this.options.allowDrag(this);\r\n  }\r\n\r\n\r\n  // helper methods:\r\n  loadNodeChildren() {\r\n    if (!this.options.getChildren) {\r\n      return Promise.resolve(); // Not getChildren method - for using redux\r\n    }\r\n    return Promise.resolve(this.options.getChildren(this))\r\n      .then((children) => {\r\n        if (children) {\r\n          this.setField('children', children);\r\n          this._initChildren();\r\n          if (this.options.useTriState && this.treeModel.isSelected(this)) {\r\n            this.setIsSelected(true);\r\n          }\r\n          this.children.forEach((child) => {\r\n            if (child.getField('isExpanded') && child.hasChildren) {\r\n              child.expand();\r\n            }\r\n          });\r\n      }}).then(() => {\r\n        this.fireEvent({\r\n          eventName: TREE_EVENTS.loadNodeChildren,\r\n          node: this\r\n        });\r\n      });\r\n  }\r\n\r\n  expand() {\r\n    if (!this.isExpanded) {\r\n      this.toggleExpanded();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  collapse() {\r\n    if (this.isExpanded) {\r\n      this.toggleExpanded();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  doForAll(fn: (node: ITreeNode) => any) {\r\n    Promise.resolve(fn(this)).then(() => {\r\n      if (this.children) {\r\n        this.children.forEach((child) => child.doForAll(fn));\r\n      }\r\n    });\r\n  }\r\n\r\n  expandAll() {\r\n    this.doForAll((node) => node.expand());\r\n  }\r\n\r\n  collapseAll() {\r\n    this.doForAll((node) => node.collapse());\r\n  }\r\n\r\n  ensureVisible() {\r\n    if (this.realParent) {\r\n      this.realParent.expand();\r\n      this.realParent.ensureVisible();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toggleExpanded() {\r\n    this.setIsExpanded(!this.isExpanded);\r\n\r\n    return this;\r\n  }\r\n\r\n  setIsExpanded(value) {\r\n    if (this.hasChildren) {\r\n      this.treeModel.setExpandedNode(this, value);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  autoLoadChildren() {\r\n    this.handler =\r\n      reaction(\r\n        () => this.isExpanded,\r\n        (isExpanded) => {\r\n          if (!this.children && this.hasChildren && isExpanded) {\r\n            this.loadNodeChildren();\r\n          }\r\n        },\r\n        { fireImmediately: true }\r\n      );\r\n  }\r\n\r\n  dispose() {\r\n    if (this.children) {\r\n      this.children.forEach((child) => child.dispose());\r\n    }\r\n    if (this.handler) {\r\n      this.handler();\r\n    }\r\n    this.parent = null;\r\n    this.children = null;\r\n  }\r\n\r\n  setIsActive(value, multi = false) {\r\n    this.treeModel.setActiveNode(this, value, multi);\r\n    if (value) {\r\n      this.focus(this.options.scrollOnActivate);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  isSelectable() {\r\n    return this.isLeaf || !this.children || !this.options.useTriState;\r\n  }\r\n\r\n  @action setIsSelected(value) {\r\n    if (this.isSelectable()) {\r\n      this.treeModel.setSelectedNode(this, value);\r\n    } else {\r\n      this.visibleChildren.forEach((child) => child.setIsSelected(value));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  toggleSelected() {\r\n    this.setIsSelected(!this.isSelected);\r\n\r\n    return this;\r\n  }\r\n\r\n  toggleActivated(multi = false) {\r\n    this.setIsActive(!this.isActive, multi);\r\n\r\n    return this;\r\n  }\r\n\r\n  setActiveAndVisible(multi = false) {\r\n    this.setIsActive(true, multi)\r\n      .ensureVisible();\r\n\r\n    setTimeout(this.scrollIntoView.bind(this));\r\n\r\n    return this;\r\n  }\r\n\r\n  scrollIntoView(force = false) {\r\n    this.treeModel.virtualScroll.scrollIntoView(this, force);\r\n  }\r\n\r\n  focus(scroll = true) {\r\n    let previousNode = this.treeModel.getFocusedNode();\r\n    this.treeModel.setFocusedNode(this);\r\n    if (scroll) {\r\n      this.scrollIntoView();\r\n    }\r\n    if (previousNode) {\r\n      this.fireEvent({ eventName: TREE_EVENTS.blur, node: previousNode });\r\n    }\r\n    this.fireEvent({ eventName: TREE_EVENTS.focus, node: this });\r\n\r\n    return this;\r\n  }\r\n\r\n  blur() {\r\n    let previousNode = this.treeModel.getFocusedNode();\r\n    this.treeModel.setFocusedNode(null);\r\n    if (previousNode) {\r\n      this.fireEvent({ eventName: TREE_EVENTS.blur, node: this });\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  setIsHidden(value) {\r\n    this.treeModel.setIsHidden(this, value);\r\n  }\r\n\r\n  hide() {\r\n    this.setIsHidden(true);\r\n  }\r\n\r\n  show() {\r\n    this.setIsHidden(false);\r\n  }\r\n\r\n  mouseAction(actionName: string, $event, data: any = null) {\r\n    this.treeModel.setFocus(true);\r\n\r\n    const actionMapping = this.options.actionMapping.mouse;\r\n    const action = actionMapping[actionName];\r\n\r\n    if (action) {\r\n      action(this.treeModel, this, $event, data);\r\n    }\r\n  }\r\n\r\n  getSelfHeight() {\r\n    return this.options.nodeHeight(this);\r\n  }\r\n\r\n  @action _initChildren() {\r\n    this.children = this.getField('children')\r\n      .map((c, index) => new TreeNode(c, this, this.treeModel, index));\r\n  }\r\n}\r\n\r\nfunction uuid() {\r\n  return Math.floor(Math.random() * 10000000000000);\r\n}\r\n","import { Injectable, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { observable, computed, action, autorun } from 'mobx';\r\nimport { Subscription } from 'rxjs';\r\nimport { TreeNode } from './tree-node.model';\r\nimport { TreeOptions } from './tree-options.model';\r\nimport { TreeVirtualScroll } from './tree-virtual-scroll.model';\r\nimport { ITreeModel, IDType, IDTypeDictionary } from '../defs/api';\r\nimport { TREE_EVENTS } from '../constants/events';\r\n\r\nimport { first, last, compact, find, isString, isFunction } from 'lodash-es';\r\n\r\n@Injectable()\r\nexport class TreeModel implements ITreeModel, OnDestroy {\r\n  static focusedTree = null;\r\n\r\n  options: TreeOptions = new TreeOptions();\r\n  nodes: any[];\r\n  eventNames = Object.keys(TREE_EVENTS);\r\n  virtualScroll: TreeVirtualScroll;\r\n\r\n  @observable roots: TreeNode[];\r\n  @observable expandedNodeIds: IDTypeDictionary = {};\r\n  @observable selectedLeafNodeIds: IDTypeDictionary = {};\r\n  @observable activeNodeIds: IDTypeDictionary = {};\r\n  @observable hiddenNodeIds: IDTypeDictionary = {};\r\n  @observable focusedNodeId: IDType = null;\r\n  @observable virtualRoot: TreeNode;\r\n\r\n  private firstUpdate = true;\r\n  private events: any;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  // events\r\n  fireEvent(event) {\r\n    event.treeModel = this;\r\n    this.events[event.eventName].emit(event);\r\n    this.events.event.emit(event);\r\n  }\r\n\r\n  subscribe(eventName, fn) {\r\n    const subscription = this.events[eventName].subscribe(fn);\r\n    this.subscriptions.push(subscription);\r\n  }\r\n\r\n\r\n  // getters\r\n  getFocusedNode(): TreeNode {\r\n    return this.focusedNode;\r\n  }\r\n\r\n\r\n  getActiveNode(): TreeNode {\r\n    return this.activeNodes[0];\r\n  }\r\n\r\n  getActiveNodes(): TreeNode[] {\r\n    return this.activeNodes;\r\n  }\r\n\r\n  getVisibleRoots() {\r\n    return this.virtualRoot.visibleChildren;\r\n  }\r\n\r\n  getFirstRoot(skipHidden = false) {\r\n    return first(skipHidden ? this.getVisibleRoots() : this.roots);\r\n  }\r\n\r\n  getLastRoot(skipHidden = false) {\r\n    return last(skipHidden ? this.getVisibleRoots() : this.roots);\r\n  }\r\n\r\n  get isFocused() {\r\n    return TreeModel.focusedTree === this;\r\n  }\r\n\r\n  isNodeFocused(node) {\r\n    return this.focusedNode === node;\r\n  }\r\n\r\n  isEmptyTree(): boolean {\r\n    return this.roots && this.roots.length === 0;\r\n  }\r\n\r\n  @computed get focusedNode() {\r\n    return this.focusedNodeId ? this.getNodeById(this.focusedNodeId) : null;\r\n  }\r\n\r\n  @computed get expandedNodes() {\r\n    const nodes = Object.keys(this.expandedNodeIds)\r\n      .filter((id) => this.expandedNodeIds[id])\r\n      .map((id) => this.getNodeById(id));\r\n\r\n    return compact(nodes);\r\n  }\r\n\r\n  @computed get activeNodes() {\r\n    const nodes = Object.keys(this.activeNodeIds)\r\n      .filter((id) => this.activeNodeIds[id])\r\n      .map((id) => this.getNodeById(id));\r\n\r\n    return compact(nodes);\r\n  }\r\n\r\n  @computed get hiddenNodes() {\r\n    const nodes = Object.keys(this.hiddenNodeIds)\r\n        .filter((id) => this.hiddenNodeIds[id])\r\n        .map((id) => this.getNodeById(id));\r\n\r\n    return compact(nodes);\r\n  }\r\n\r\n  @computed get selectedLeafNodes() {\r\n    const nodes = Object.keys(this.selectedLeafNodeIds)\r\n        .filter((id) => this.selectedLeafNodeIds[id])\r\n        .map((id) => this.getNodeById(id));\r\n\r\n    return compact(nodes);\r\n  }\r\n\r\n  // locating nodes\r\n  getNodeByPath(path: any[], startNode= null): TreeNode {\r\n    if (!path) return null;\r\n\r\n    startNode = startNode || this.virtualRoot;\r\n    if (path.length === 0) return startNode;\r\n\r\n    if (!startNode.children) return null;\r\n\r\n    const childId = path.shift();\r\n    const childNode = find(startNode.children, { id: childId });\r\n\r\n    if (!childNode) return null;\r\n\r\n    return this.getNodeByPath(path, childNode);\r\n  }\r\n\r\n  getNodeById(id) {\r\n    const idStr = id.toString();\r\n\r\n    return this.getNodeBy((node) => node.id.toString() === idStr);\r\n  }\r\n\r\n  getNodeBy(predicate, startNode = null) {\r\n    startNode = startNode || this.virtualRoot;\r\n\r\n    if (!startNode.children) return null;\r\n\r\n    const found = find(startNode.children, predicate);\r\n\r\n    if (found) { // found in children\r\n      return found;\r\n    } else { // look in children's children\r\n      for (let child of startNode.children) {\r\n        const foundInChildren = this.getNodeBy(predicate, child);\r\n        if (foundInChildren) return foundInChildren;\r\n      }\r\n    }\r\n  }\r\n\r\n  isExpanded(node) {\r\n    return this.expandedNodeIds[node.id];\r\n  }\r\n\r\n  isHidden(node) {\r\n    return this.hiddenNodeIds[node.id];\r\n  }\r\n\r\n  isActive(node) {\r\n    return this.activeNodeIds[node.id];\r\n  }\r\n\r\n  isSelected(node) {\r\n    return this.selectedLeafNodeIds[node.id];\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dispose();\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  dispose() {\r\n    // Dispose reactions of the replaced nodes\r\n    if (this.virtualRoot) {\r\n      this.virtualRoot.dispose();\r\n    }\r\n  }\r\n\r\n  unsubscribeAll() {\r\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\r\n    this.subscriptions = [];\r\n  }\r\n\r\n  // actions\r\n  @action setData({ nodes, options = null, events = null }: {nodes: any, options: any, events: any}) {\r\n    if (options) {\r\n      this.options = new TreeOptions(options);\r\n    }\r\n    if (events) {\r\n      this.events = events;\r\n    }\r\n    if (nodes) {\r\n      this.nodes = nodes;\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  @action update() {\r\n    // Rebuild tree:\r\n    let virtualRootConfig = {\r\n      id: this.options.rootId,\r\n      virtual: true,\r\n      [this.options.childrenField]: this.nodes\r\n    };\r\n\r\n    this.dispose();\r\n\r\n    this.virtualRoot = new TreeNode(virtualRootConfig, null, this, 0);\r\n\r\n    this.roots = this.virtualRoot.children;\r\n\r\n    // Fire event:\r\n    if (this.firstUpdate) {\r\n      if (this.roots) {\r\n        this.firstUpdate = false;\r\n        this._calculateExpandedNodes();\r\n      }\r\n    } else {\r\n      this.fireEvent({ eventName: TREE_EVENTS.updateData });\r\n    }\r\n  }\r\n\r\n\r\n  @action setFocusedNode(node) {\r\n    this.focusedNodeId = node ? node.id : null;\r\n  }\r\n\r\n  @action setFocus(value) {\r\n    TreeModel.focusedTree = value ? this : null;\r\n  }\r\n\r\n  @action doForAll(fn) {\r\n    this.roots.forEach((root) => root.doForAll(fn));\r\n  }\r\n\r\n  @action focusNextNode() {\r\n    let previousNode = this.getFocusedNode();\r\n    let nextNode = previousNode ? previousNode.findNextNode(true, true) : this.getFirstRoot(true);\r\n    if (nextNode) nextNode.focus();\r\n  }\r\n\r\n  @action focusPreviousNode() {\r\n    let previousNode = this.getFocusedNode();\r\n    let nextNode = previousNode ? previousNode.findPreviousNode(true) : this.getLastRoot(true);\r\n    if (nextNode) nextNode.focus();\r\n  }\r\n\r\n  @action focusDrillDown() {\r\n    let previousNode = this.getFocusedNode();\r\n    if (previousNode && previousNode.isCollapsed && previousNode.hasChildren) {\r\n      previousNode.toggleExpanded();\r\n    }\r\n    else {\r\n      let nextNode = previousNode ? previousNode.getFirstChild(true) : this.getFirstRoot(true);\r\n      if (nextNode) nextNode.focus();\r\n    }\r\n  }\r\n\r\n  @action focusDrillUp() {\r\n    let previousNode = this.getFocusedNode();\r\n    if (!previousNode) return;\r\n    if (previousNode.isExpanded) {\r\n      previousNode.toggleExpanded();\r\n    }\r\n    else {\r\n      let nextNode = previousNode.realParent;\r\n      if (nextNode) nextNode.focus();\r\n    }\r\n  }\r\n\r\n  @action setActiveNode(node, value, multi = false) {\r\n    if (multi) {\r\n      this._setActiveNodeMulti(node, value);\r\n    }\r\n    else {\r\n      this._setActiveNodeSingle(node, value);\r\n    }\r\n\r\n    if (value) {\r\n      node.focus(this.options.scrollOnActivate);\r\n      this.fireEvent({ eventName: TREE_EVENTS.activate, node });\r\n      this.fireEvent({ eventName: TREE_EVENTS.nodeActivate, node }); // For IE11\r\n    } else {\r\n      this.fireEvent({ eventName: TREE_EVENTS.deactivate, node });\r\n      this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node }); // For IE11\r\n    }\r\n  }\r\n\r\n  @action setSelectedNode(node, value) {\r\n    this.selectedLeafNodeIds = Object.assign({}, this.selectedLeafNodeIds, {[node.id]: value});\r\n\r\n    if (value) {\r\n      node.focus();\r\n      this.fireEvent({ eventName: TREE_EVENTS.select, node });\r\n    } else {\r\n      this.fireEvent({ eventName: TREE_EVENTS.deselect, node });\r\n    }\r\n  }\r\n\r\n  @action setExpandedNode(node, value) {\r\n    this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, {[node.id]: value});\r\n    this.fireEvent({ eventName: TREE_EVENTS.toggleExpanded, node, isExpanded: value });\r\n  }\r\n\r\n  @action expandAll() {\r\n    this.roots.forEach((root) => root.expandAll());\r\n  }\r\n\r\n  @action collapseAll() {\r\n    this.roots.forEach((root) => root.collapseAll());\r\n  }\r\n\r\n  @action setIsHidden(node, value) {\r\n    this.hiddenNodeIds = Object.assign({}, this.hiddenNodeIds, {[node.id]: value});\r\n  }\r\n\r\n  @action setHiddenNodeIds(nodeIds) {\r\n    this.hiddenNodeIds = nodeIds.reduce((hiddenNodeIds, id) => Object.assign(hiddenNodeIds, {\r\n      [id]: true\r\n    }), {});\r\n  }\r\n\r\n  performKeyAction(node, $event) {\r\n    const action = this.options.actionMapping.keys[$event.keyCode];\r\n    if (action) {\r\n      $event.preventDefault();\r\n      action(this, node, $event);\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action filterNodes(filter, autoShow = true) {\r\n    let filterFn;\r\n\r\n    if (!filter) {\r\n      return this.clearFilter();\r\n    }\r\n\r\n    // support function and string filter\r\n    if (isString(filter)) {\r\n      filterFn = (node) => node.displayField.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n    }\r\n    else if (isFunction(filter)) {\r\n       filterFn = filter;\r\n    }\r\n    else {\r\n      console.error('Don\\'t know what to do with filter', filter);\r\n      console.error('Should be either a string or function');\r\n      return;\r\n    }\r\n\r\n    const ids = {};\r\n    this.roots.forEach((node) => this._filterNode(ids, node, filterFn, autoShow));\r\n    this.hiddenNodeIds = ids;\r\n    this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n  }\r\n\r\n  @action clearFilter() {\r\n    this.hiddenNodeIds = {};\r\n    this.fireEvent({ eventName: TREE_EVENTS.changeFilter });\r\n  }\r\n\r\n  @action moveNode(node, to) {\r\n    const fromIndex = node.getIndexInParent();\r\n    const fromParent = node.parent;\r\n\r\n    if (!this.canMoveNode(node, to, fromIndex)) return;\r\n\r\n    const fromChildren = fromParent.getField('children');\r\n\r\n    // If node doesn't have children - create children array\r\n    if (!to.parent.getField('children')) {\r\n      to.parent.setField('children', []);\r\n    }\r\n    const toChildren = to.parent.getField('children');\r\n\r\n    const originalNode = fromChildren.splice(fromIndex, 1)[0];\r\n\r\n    // Compensate for index if already removed from parent:\r\n    let toIndex = (fromParent === to.parent && to.index > fromIndex) ? to.index - 1 : to.index;\r\n\r\n    toChildren.splice(toIndex, 0, originalNode);\r\n\r\n    fromParent.treeModel.update();\r\n    if (to.parent.treeModel !== fromParent.treeModel) {\r\n      to.parent.treeModel.update();\r\n    }\r\n\r\n    this.fireEvent({\r\n      eventName: TREE_EVENTS.moveNode,\r\n      node: originalNode,\r\n      to: { parent: to.parent.data, index: toIndex },\r\n      from: { parent: fromParent.data, index: fromIndex}\r\n    });\r\n  }\r\n\r\n  @action copyNode(node, to) {\r\n    const fromIndex = node.getIndexInParent();\r\n\r\n    if (!this.canMoveNode(node, to, fromIndex)) return;\r\n\r\n    // If node doesn't have children - create children array\r\n    if (!to.parent.getField('children')) {\r\n      to.parent.setField('children', []);\r\n    }\r\n    const toChildren = to.parent.getField('children');\r\n\r\n    const nodeCopy = this.options.getNodeClone(node);\r\n\r\n    toChildren.splice(to.index, 0, nodeCopy);\r\n\r\n    node.treeModel.update();\r\n    if (to.parent.treeModel !== node.treeModel) {\r\n      to.parent.treeModel.update();\r\n    }\r\n\r\n    this.fireEvent({ eventName: TREE_EVENTS.copyNode, node: nodeCopy, to: { parent: to.parent.data, index: to.index } });\r\n  }\r\n\r\n  getState() {\r\n    return {\r\n      expandedNodeIds: this.expandedNodeIds,\r\n      selectedLeafNodeIds: this.selectedLeafNodeIds,\r\n      activeNodeIds: this.activeNodeIds,\r\n      hiddenNodeIds: this.hiddenNodeIds,\r\n      focusedNodeId: this.focusedNodeId\r\n    };\r\n  }\r\n\r\n  @action setState(state) {\r\n    if (!state) return;\r\n\r\n    Object.assign(this, {\r\n      expandedNodeIds: state.expandedNodeIds || {},\r\n      selectedLeafNodeIds: state.selectedLeafNodeIds || {},\r\n      activeNodeIds: state.activeNodeIds || {},\r\n      hiddenNodeIds: state.hiddenNodeIds || {},\r\n      focusedNodeId: state.focusedNodeId\r\n    });\r\n  }\r\n\r\n  subscribeToState(fn) {\r\n    autorun(() => fn(this.getState()));\r\n  }\r\n\r\n  canMoveNode(node, to, fromIndex = undefined) {\r\n    const fromNodeIndex = fromIndex || node.getIndexInParent();\r\n\r\n    // same node:\r\n    if (node.parent === to.parent && fromIndex === to.index) {\r\n      return false;\r\n    }\r\n\r\n    return !to.parent.isDescendantOf(node);\r\n  }\r\n\r\n  calculateExpandedNodes() {\r\n      this._calculateExpandedNodes();\r\n  }\r\n\r\n  // private methods\r\n  private _filterNode(ids, node, filterFn, autoShow) {\r\n    // if node passes function then it's visible\r\n    let isVisible = filterFn(node);\r\n\r\n    if (node.children) {\r\n      // if one of node's children passes filter then this node is also visible\r\n      node.children.forEach((child) => {\r\n        if (this._filterNode(ids, child, filterFn, autoShow)) {\r\n          isVisible = true;\r\n        }\r\n      });\r\n    }\r\n\r\n    // mark node as hidden\r\n    if (!isVisible) {\r\n      ids[node.id] = true;\r\n    }\r\n    // auto expand parents to make sure the filtered nodes are visible\r\n    if (autoShow && isVisible) {\r\n      node.ensureVisible();\r\n    }\r\n    return isVisible;\r\n  }\r\n\r\n  private _calculateExpandedNodes(startNode = null) {\r\n    startNode = startNode || this.virtualRoot;\r\n\r\n    if (startNode.data[this.options.isExpandedField]) {\r\n      this.expandedNodeIds = Object.assign({}, this.expandedNodeIds, {[startNode.id]: true});\r\n    }\r\n    if (startNode.children) {\r\n      startNode.children.forEach((child) => this._calculateExpandedNodes(child));\r\n    }\r\n  }\r\n\r\n  private _setActiveNodeSingle(node, value) {\r\n    // Deactivate all other nodes:\r\n    this.activeNodes\r\n      .filter((activeNode) => activeNode !== node)\r\n      .forEach((activeNode) => {\r\n        this.fireEvent({ eventName: TREE_EVENTS.deactivate, node: activeNode });\r\n        this.fireEvent({ eventName: TREE_EVENTS.nodeDeactivate, node: activeNode }); // For IE11\r\n      });\r\n\r\n    if (value) {\r\n      this.activeNodeIds = {[node.id]: true};\r\n    }\r\n    else {\r\n      this.activeNodeIds = {};\r\n    }\r\n  }\r\n\r\n  private _setActiveNodeMulti(node, value) {\r\n    this.activeNodeIds = Object.assign({}, this.activeNodeIds, {[node.id]: value});\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TreeDraggedElement {\r\n  _draggedElement: any = null;\r\n\r\n  set(draggedElement: any) {\r\n    this._draggedElement = draggedElement;\r\n  }\r\n\r\n  get(): any {\r\n    return this._draggedElement;\r\n  }\r\n\r\n  isDragging() {\r\n    return !!this.get();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { observable, computed, action, autorun, reaction } from 'mobx';\r\nimport { TreeModel } from './tree.model';\r\nimport { TREE_EVENTS } from '../constants/events';\r\n\r\nconst Y_OFFSET = 500; // Extra pixels outside the viewport, in each direction, to render nodes in\r\nconst Y_EPSILON = 150; // Minimum pixel change required to recalculate the rendered nodes\r\n\r\n@Injectable()\r\nexport class TreeVirtualScroll {\r\n  private _dispose: any;\r\n\r\n  @observable yBlocks = 0;\r\n  @observable x = 0;\r\n  @observable viewportHeight = null;\r\n  viewport = null;\r\n\r\n  @computed get y() {\r\n    return this.yBlocks * Y_EPSILON;\r\n  }\r\n\r\n  @computed get totalHeight() {\r\n    return this.treeModel.virtualRoot ? this.treeModel.virtualRoot.height : 0;\r\n  }\r\n\r\n  constructor(private treeModel: TreeModel) {\r\n    treeModel.virtualScroll = this;\r\n    this._dispose = [autorun(() => this.fixScroll())];\r\n  }\r\n\r\n  fireEvent(event) {\r\n    this.treeModel.fireEvent(event);\r\n  }\r\n\r\n  init() {\r\n    const fn = this.recalcPositions.bind(this);\r\n\r\n    fn();\r\n    this._dispose = [\r\n      ...this._dispose,\r\n      reaction(() => this.treeModel.roots, fn),\r\n      reaction(() => this.treeModel.expandedNodeIds, fn),\r\n      reaction(() => this.treeModel.hiddenNodeIds, fn)\r\n    ];\r\n    this.treeModel.subscribe(TREE_EVENTS.loadNodeChildren, fn);\r\n  }\r\n\r\n  isEnabled() {\r\n    return this.treeModel.options.useVirtualScroll;\r\n  }\r\n\r\n  @action private _setYBlocks(value) {\r\n    this.yBlocks = value;\r\n  }\r\n\r\n  @action recalcPositions() {\r\n    this.treeModel.virtualRoot.height = this._getPositionAfter(this.treeModel.getVisibleRoots(), 0);\r\n  }\r\n\r\n  private _getPositionAfter(nodes, startPos) {\r\n    let position = startPos;\r\n\r\n    nodes.forEach((node) => {\r\n      node.position = position;\r\n      position = this._getPositionAfterNode(node, position);\r\n    });\r\n    return position;\r\n  }\r\n\r\n  private _getPositionAfterNode(node, startPos) {\r\n    let position = node.getSelfHeight() + startPos;\r\n\r\n    if (node.children && node.isExpanded) { // TBD: consider loading component as well\r\n      position = this._getPositionAfter(node.visibleChildren, position);\r\n    }\r\n    node.height = position - startPos;\r\n    return position;\r\n  }\r\n\r\n\r\n  clear() {\r\n    this._dispose.forEach((d) => d());\r\n  }\r\n\r\n  @action setViewport(viewport) {\r\n    Object.assign(this, {\r\n      viewport,\r\n      x: viewport.scrollLeft,\r\n      yBlocks: Math.round(viewport.scrollTop / Y_EPSILON),\r\n      viewportHeight: viewport.getBoundingClientRect ? viewport.getBoundingClientRect().height : 0\r\n    });\r\n  }\r\n\r\n  @action scrollIntoView(node, force, scrollToMiddle = true) {\r\n    if (node.options.scrollContainer) {\r\n      const scrollContainer = node.options.scrollContainer;\r\n      const scrollContainerHeight = scrollContainer.getBoundingClientRect().height;\r\n      const scrollContainerTop = scrollContainer.getBoundingClientRect().top;\r\n      const nodeTop = this.viewport.getBoundingClientRect().top + node.position - scrollContainerTop;\r\n\r\n      if (force || // force scroll to node\r\n        nodeTop < scrollContainer.scrollTop || // node is above scroll container\r\n        nodeTop + node.getSelfHeight() > scrollContainer.scrollTop + scrollContainerHeight) { // node is below container\r\n        scrollContainer.scrollTop = scrollToMiddle ?\r\n          nodeTop - scrollContainerHeight / 2 : // scroll to middle\r\n          nodeTop; // scroll to start\r\n      }\r\n    } else {\r\n      if (force || // force scroll to node\r\n        node.position < this.y || // node is above viewport\r\n        node.position + node.getSelfHeight() > this.y + this.viewportHeight) { // node is below viewport\r\n        if (this.viewport) {\r\n          this.viewport.scrollTop = scrollToMiddle ?\r\n          node.position - this.viewportHeight / 2 : // scroll to middle\r\n          node.position; // scroll to start\r\n\r\n          this._setYBlocks(Math.floor(this.viewport.scrollTop / Y_EPSILON));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getViewportNodes(nodes) {\r\n    if (!nodes) return [];\r\n\r\n    const visibleNodes = nodes.filter((node) => !node.isHidden);\r\n\r\n    if (!this.isEnabled()) return visibleNodes;\r\n\r\n    if (!this.viewportHeight || !visibleNodes.length) return [];\r\n\r\n    // Search for first node in the viewport using binary search\r\n    // Look for first node that starts after the beginning of the viewport (with buffer)\r\n    // Or that ends after the beginning of the viewport\r\n    const firstIndex = binarySearch(visibleNodes, (node) => {\r\n      return (node.position + Y_OFFSET > this.y) ||\r\n             (node.position + node.height > this.y);\r\n    });\r\n\r\n    // Search for last node in the viewport using binary search\r\n    // Look for first node that starts after the end of the viewport (with buffer)\r\n    const lastIndex = binarySearch(visibleNodes, (node) => {\r\n      return node.position - Y_OFFSET > this.y + this.viewportHeight;\r\n    }, firstIndex);\r\n\r\n    const viewportNodes = [];\r\n\r\n    // Loading async top nodes' children is too long.\r\n    // It happens when first node is visible withing viewport range (including Y_OFFSET).\r\n    // In that case firstIndex == 0 and lastIndex == visibleNodes.length - 1 (e.g. 1000),\r\n    // which means that it loops through every visibleNodes item and push them into viewportNodes array.\r\n    // lastIndex should not equal visibleNodes.length - 1, but something around 50-100 (depending on the viewport)\r\n    const nodeHeight = visibleNodes[0].treeModel.options.options.nodeHeight;\r\n    const renderedNodesMaxLength = (Y_OFFSET * 2 + this.viewportHeight) / nodeHeight;\r\n\r\n    // Something is probably wrong, prevent nodes from being pushed to an array.\r\n    if (lastIndex - firstIndex > renderedNodesMaxLength) {\r\n      return [];\r\n    }\r\n\r\n    for (let i = firstIndex; i <= lastIndex; i++) {\r\n      viewportNodes.push(visibleNodes[i]);\r\n    }\r\n\r\n    return viewportNodes;\r\n  }\r\n\r\n  fixScroll() {\r\n    const maxY = Math.max(0, this.totalHeight - this.viewportHeight);\r\n\r\n    if (this.y < 0) this._setYBlocks(0);\r\n    if (this.y > maxY) this._setYBlocks(maxY / Y_EPSILON);\r\n  }\r\n}\r\n\r\nfunction binarySearch(nodes, condition, firstIndex = 0) {\r\n  let index = firstIndex;\r\n  let toIndex = nodes.length - 1;\r\n\r\n  while (index !== toIndex) {\r\n    let midIndex = Math.floor((index + toIndex) / 2);\r\n\r\n    if (condition(nodes[midIndex])) {\r\n      toIndex = midIndex;\r\n    }\r\n    else {\r\n      if (index === midIndex) index = toIndex;\r\n      else index = midIndex;\r\n    }\r\n  }\r\n  return index;\r\n}\r\n","import { Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'tree-loading-component',\r\n  template: `\r\n    <span *ngIf=\"!template\">loading...</span>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"template\"\r\n      [ngTemplateOutletContext]=\"{ $implicit: node }\">\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class LoadingComponent {\r\n  @Input() template: TemplateRef<any>;\r\n  @Input() node: TreeNode;\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewEncapsulation,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnDestroy,\r\n  NgZone\r\n} from '@angular/core';\r\nimport { TreeVirtualScroll } from '../models/tree-virtual-scroll.model';\r\nimport { TREE_EVENTS } from '../constants/events';\r\nimport { throttle } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'tree-viewport',\r\n  styles: [],\r\n  providers: [TreeVirtualScroll],\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.height]=\"getTotalHeight()\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeViewportComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  setViewport = throttle(() => {\r\n    this.virtualScroll.setViewport(this.elementRef.nativeElement);\r\n  }, 17);\r\n  private readonly scrollEventHandler: ($event: Event) => void;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private ngZone: NgZone,\r\n    public virtualScroll: TreeVirtualScroll\r\n  ) {\r\n    this.scrollEventHandler = this.setViewport.bind(this);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.virtualScroll.init();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.setViewport();\r\n      this.virtualScroll.fireEvent({ eventName: TREE_EVENTS.initialized });\r\n    });\r\n    let el: HTMLElement = this.elementRef.nativeElement;\r\n    this.ngZone.runOutsideAngular(() => {\r\n      el.addEventListener('scroll', this.scrollEventHandler);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.virtualScroll.clear();\r\n    let el: HTMLElement = this.elementRef.nativeElement;\r\n    el.removeEventListener('scroll', this.scrollEventHandler);\r\n  }\r\n\r\n  getTotalHeight() {\r\n    return (\r\n      (this.virtualScroll.isEnabled() &&\r\n        this.virtualScroll.totalHeight + 'px') ||\r\n      'auto'\r\n    );\r\n  }\r\n}\r\n","import { Component, ContentChild, EventEmitter, HostListener, Input, OnChanges, Output, TemplateRef, ViewChild } from '@angular/core';\r\nimport { TreeModel } from '../models/tree.model';\r\nimport { TreeDraggedElement } from '../models/tree-dragged-element.model';\r\nimport { TreeOptions } from '../models/tree-options.model';\r\nimport { ITreeOptions } from '../defs/api';\r\nimport { TreeViewportComponent } from './tree-viewport.component';\r\n\r\nimport { includes, pick } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'Tree, tree-root',\r\n  providers: [TreeModel],\r\n  styles: [],\r\n  template: `\r\n      <tree-viewport #viewport>\r\n          <div\r\n                  class=\"angular-tree-component\"\r\n                  [class.node-dragging]=\"treeDraggedElement.isDragging()\"\r\n                  [class.angular-tree-component-rtl]=\"treeModel.options.rtl\">\r\n              <tree-node-collection\r\n                      *ngIf=\"treeModel.roots\"\r\n                      [nodes]=\"treeModel.roots\"\r\n                      [treeModel]=\"treeModel\"\r\n                      [templates]=\"{\r\n            loadingTemplate: loadingTemplate,\r\n            treeNodeTemplate: treeNodeTemplate,\r\n            treeNodeWrapperTemplate: treeNodeWrapperTemplate,\r\n            treeNodeFullTemplate: treeNodeFullTemplate\r\n          }\">\r\n              </tree-node-collection>\r\n              <tree-node-drop-slot\r\n                      class=\"empty-tree-drop-slot\"\r\n                      *ngIf=\"treeModel.isEmptyTree()\"\r\n                      [dropIndex]=\"0\"\r\n                      [node]=\"treeModel.virtualRoot\">\r\n              </tree-node-drop-slot>\r\n          </div>\r\n      </tree-viewport>\r\n  `\r\n})\r\nexport class TreeComponent implements OnChanges {\r\n  _nodes: any[];\r\n  _options: TreeOptions;\r\n\r\n  @ContentChild('loadingTemplate', { static: false }) loadingTemplate: TemplateRef<any>;\r\n  @ContentChild('treeNodeTemplate', { static: false }) treeNodeTemplate: TemplateRef<any>;\r\n  @ContentChild('treeNodeWrapperTemplate', { static: false }) treeNodeWrapperTemplate: TemplateRef<any>;\r\n  @ContentChild('treeNodeFullTemplate', { static: false }) treeNodeFullTemplate: TemplateRef<any>;\r\n  @ViewChild('viewport', { static: false }) viewportComponent: TreeViewportComponent;\r\n\r\n  // Will be handled in ngOnChanges\r\n  @Input() set nodes(nodes: any[]) {\r\n  };\r\n\r\n  @Input() set options(options: ITreeOptions) {\r\n  };\r\n\r\n  @Input() set focused(value: boolean) {\r\n    this.treeModel.setFocus(value);\r\n  }\r\n\r\n  @Input() set state(state) {\r\n    this.treeModel.setState(state);\r\n  }\r\n\r\n  @Output() toggleExpanded;\r\n  @Output() activate;\r\n  @Output() deactivate;\r\n  @Output() nodeActivate;\r\n  @Output() nodeDeactivate;\r\n  @Output() select;\r\n  @Output() deselect;\r\n  @Output() focus;\r\n  @Output() blur;\r\n  @Output() updateData;\r\n  @Output() initialized;\r\n  @Output() moveNode;\r\n  @Output() copyNode;\r\n  @Output() loadNodeChildren;\r\n  @Output() changeFilter;\r\n  @Output() event;\r\n  @Output() stateChange;\r\n\r\n  constructor(\r\n    public treeModel: TreeModel,\r\n    public treeDraggedElement: TreeDraggedElement) {\r\n\r\n    treeModel.eventNames.forEach((name) => this[name] = new EventEmitter());\r\n    treeModel.subscribeToState((state) => this.stateChange.emit(state));\r\n  }\r\n\r\n  @HostListener('body: keydown', ['$event'])\r\n  onKeydown($event) {\r\n    if (!this.treeModel.isFocused) return;\r\n    if (includes(['input', 'textarea'],\r\n      document.activeElement.tagName.toLowerCase())) return;\r\n\r\n    const focusedNode = this.treeModel.getFocusedNode();\r\n\r\n    this.treeModel.performKeyAction(focusedNode, $event);\r\n  }\r\n\r\n  @HostListener('body: mousedown', ['$event'])\r\n  onMousedown($event) {\r\n    function isOutsideClick(startElement: Element, nodeName: string) {\r\n      return !startElement ? true : startElement.localName === nodeName ? false : isOutsideClick(startElement.parentElement, nodeName);\r\n    }\r\n\r\n    if (isOutsideClick($event.target, 'tree-root')) {\r\n      this.treeModel.setFocus(false);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes) {\r\n    if (changes.options || changes.nodes) {\r\n      this.treeModel.setData({\r\n        options: changes.options && changes.options.currentValue,\r\n        nodes: changes.nodes && changes.nodes.currentValue,\r\n        events: pick(this, this.treeModel.eventNames)\r\n      });\r\n    }\r\n  }\r\n\r\n  sizeChanged() {\r\n    this.viewportComponent.setViewport();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'TreeNode, tree-node',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [],\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        *ngIf=\"!templates.treeNodeFullTemplate\"\r\n        [class]=\"node.getClass()\"\r\n        [class.tree-node]=\"true\"\r\n        [class.tree-node-expanded]=\"node.isExpanded && node.hasChildren\"\r\n        [class.tree-node-collapsed]=\"node.isCollapsed && node.hasChildren\"\r\n        [class.tree-node-leaf]=\"node.isLeaf\"\r\n        [class.tree-node-active]=\"node.isActive\"\r\n        [class.tree-node-focused]=\"node.isFocused\"\r\n      >\r\n        <tree-node-drop-slot\r\n          *ngIf=\"index === 0\"\r\n          [dropIndex]=\"node.index\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n\r\n        <tree-node-wrapper\r\n          [node]=\"node\"\r\n          [index]=\"index\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-wrapper>\r\n\r\n        <tree-node-children\r\n          [node]=\"node\"\r\n          [templates]=\"templates\"\r\n        ></tree-node-children>\r\n        <tree-node-drop-slot\r\n          [dropIndex]=\"node.index + 1\"\r\n          [node]=\"node.parent\"\r\n        ></tree-node-drop-slot>\r\n      </div>\r\n      <ng-container\r\n        [ngTemplateOutlet]=\"templates.treeNodeFullTemplate\"\r\n        [ngTemplateOutletContext]=\"{\r\n          $implicit: node,\r\n          node: node,\r\n          index: index,\r\n          templates: templates\r\n        }\"\r\n      >\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeNodeComponent {\r\n  @Input() node: TreeNode;\r\n  @Input() index: number;\r\n  @Input() templates: any;\r\n}\r\n","import { Component, Input, ViewEncapsulation, TemplateRef } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-content',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n  <span *ngIf=\"!template\">{{ node.displayField }}</span>\r\n  <ng-container\r\n    [ngTemplateOutlet]=\"template\"\r\n    [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index }\">\r\n  </ng-container>`,\r\n})\r\nexport class TreeNodeContent {\r\n  @Input() node: TreeNode;\r\n  @Input() index: number;\r\n  @Input() template: TemplateRef<any>;\r\n}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'TreeNodeDropSlot, tree-node-drop-slot',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [],\r\n  template: `\r\n    <div\r\n      class=\"node-drop-slot\"\r\n      (treeDrop)=\"onDrop($event)\"\r\n      [treeAllowDrop]=\"allowDrop.bind(this)\"\r\n      [allowDragoverStyling]=\"true\">\r\n    </div>\r\n  `\r\n})\r\nexport class TreeNodeDropSlot {\r\n  @Input() node: TreeNode;\r\n  @Input() dropIndex: number;\r\n\r\n  onDrop($event) {\r\n    this.node.mouseAction('drop', $event.event, {\r\n      from: $event.element,\r\n      to: { parent: this.node, index: this.dropIndex }\r\n    });\r\n  }\r\n\r\n  allowDrop(element, $event) {\r\n    return this.node.options.allowDrop(element, { parent: this.node, index: this.dropIndex }, $event);\r\n  }\r\n}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-expander',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [],\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <span\r\n        *ngIf=\"node.hasChildren\"\r\n        [class.toggle-children-wrapper-expanded]=\"node.isExpanded\"\r\n        [class.toggle-children-wrapper-collapsed]=\"node.isCollapsed\"\r\n        class=\"toggle-children-wrapper\"\r\n        (click)=\"node.mouseAction('expanderClick', $event)\"\r\n      >\r\n        <span class=\"toggle-children\"></span>\r\n      </span>\r\n      <span *ngIf=\"!node.hasChildren\" class=\"toggle-children-placeholder\">\r\n      </span>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeNodeExpanderComponent {\r\n  @Input() node: TreeNode;\r\n}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-children',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [],\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div\r\n        [class.tree-children]=\"true\"\r\n        [class.tree-children-no-padding]=\"node.options.levelPadding\"\r\n        *treeAnimateOpen=\"\r\n          node.isExpanded;\r\n          speed: node.options.animateSpeed;\r\n          acceleration: node.options.animateAcceleration;\r\n          enabled: node.options.animateExpand\r\n        \"\r\n      >\r\n        <tree-node-collection\r\n          *ngIf=\"node.children\"\r\n          [nodes]=\"node.children\"\r\n          [templates]=\"templates\"\r\n          [treeModel]=\"node.treeModel\"\r\n        >\r\n        </tree-node-collection>\r\n        <tree-loading-component\r\n          [style.padding-left]=\"node.getNodePadding()\"\r\n          class=\"tree-node-loading\"\r\n          *ngIf=\"!node.children\"\r\n          [template]=\"templates.loadingTemplate\"\r\n          [node]=\"node\"\r\n        ></tree-loading-component>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeNodeChildrenComponent {\r\n  @Input() node: TreeNode;\r\n  @Input() templates: any;\r\n}\r\n","import { action as mobxAction } from 'mobx';\r\nimport { computed as mobxComputed } from 'mobx';\r\nimport { observable as mobxObservable } from 'mobx';\r\n\r\n// Re-export mobx operators to be able to use inside components with AOT:\r\nexport function actionInternal(...args) {\r\n  return (mobxAction as any)(...args);\r\n}\r\nexport const action: typeof mobxAction = Object.assign(\r\n  actionInternal,\r\n  mobxAction\r\n) as any;\r\n\r\nfunction computedInternal(...args) {\r\n  return (mobxComputed as any)(...args);\r\n}\r\nexport const computed: typeof mobxComputed = Object.assign(\r\n  computedInternal,\r\n  mobxComputed\r\n) as any;\r\n\r\nfunction observableInternal(...args) {\r\n  return (mobxObservable as any)(...args);\r\n}\r\n\r\nexport const observable: typeof mobxObservable = Object.assign(\r\n  observableInternal,\r\n  mobxObservable\r\n) as any;\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { reaction } from 'mobx';\r\nimport { observable, computed, action } from '../mobx-angular/mobx-proxy';\r\nimport { TreeVirtualScroll } from '../models/tree-virtual-scroll.model';\r\nimport { TreeNode } from '../models/tree-node.model';\r\nimport { TreeModel } from '../models/tree.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-collection',\r\n  encapsulation: ViewEncapsulation.None,\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <div [style.margin-top]=\"marginTop\">\r\n        <tree-node\r\n          *ngFor=\"let node of viewportNodes; let i = index; trackBy: trackNode\"\r\n          [node]=\"node\"\r\n          [index]=\"i\"\r\n          [templates]=\"templates\"\r\n        >\r\n        </tree-node>\r\n      </div>\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeNodeCollectionComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  get nodes() {\r\n    return this._nodes;\r\n  }\r\n  set nodes(nodes) {\r\n    this.setNodes(nodes);\r\n  }\r\n\r\n  @Input() treeModel: TreeModel;\r\n\r\n  @observable _nodes;\r\n  private virtualScroll: TreeVirtualScroll; // Cannot inject this, because we might be inside treeNodeTemplateFull\r\n  @Input() templates;\r\n\r\n  @observable viewportNodes: TreeNode[];\r\n\r\n  @computed get marginTop(): string {\r\n    const firstNode =\r\n      this.viewportNodes && this.viewportNodes.length && this.viewportNodes[0];\r\n    const relativePosition =\r\n      firstNode && firstNode.parent\r\n        ? firstNode.position -\r\n          firstNode.parent.position -\r\n          firstNode.parent.getSelfHeight()\r\n        : 0;\r\n\r\n    return `${relativePosition}px`;\r\n  }\r\n\r\n  _dispose = [];\r\n\r\n  @action setNodes(nodes) {\r\n    this._nodes = nodes;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.virtualScroll = this.treeModel.virtualScroll;\r\n    this._dispose = [\r\n      // return node indexes so we can compare structurally,\r\n      reaction(\r\n        () => {\r\n          return this.virtualScroll\r\n            .getViewportNodes(this.nodes)\r\n            .map(n => n.index);\r\n        },\r\n        nodeIndexes => {\r\n          this.viewportNodes = nodeIndexes.map(i => this.nodes[i]);\r\n        },\r\n        { compareStructural: true, fireImmediately: true } as any\r\n      ),\r\n      reaction(\r\n        () => this.nodes,\r\n        nodes => {\r\n          this.viewportNodes = this.virtualScroll.getViewportNodes(nodes);\r\n        }\r\n      )\r\n    ];\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._dispose.forEach(d => d());\r\n  }\r\n\r\n  trackNode(index, node) {\r\n    return node.id;\r\n  }\r\n}\r\n","import { Component , Input , ViewEncapsulation , TemplateRef } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-wrapper' ,\r\n  encapsulation: ViewEncapsulation.None ,\r\n  styles: [] ,\r\n  template: `\r\n      <div *ngIf=\"!templates.treeNodeWrapperTemplate\" class=\"node-wrapper\" [style.padding-left]=\"node.getNodePadding()\">\r\n          <tree-node-checkbox *ngIf=\"node.options.useCheckbox\" [node]=\"node\"></tree-node-checkbox>\r\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\r\n          <div class=\"node-content-wrapper\"\r\n               [class.node-content-wrapper-active]=\"node.isActive\"\r\n               [class.node-content-wrapper-focused]=\"node.isFocused\"\r\n               (click)=\"node.mouseAction('click', $event)\"\r\n               (dblclick)=\"node.mouseAction('dblClick', $event)\"\r\n               (mouseover)=\"node.mouseAction('mouseOver', $event)\"\r\n               (mouseout)=\"node.mouseAction('mouseOut', $event)\"\r\n               (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\r\n               (treeDrop)=\"node.onDrop($event)\"\r\n               (treeDropDragOver)=\"node.mouseAction('dragOver', $event)\"\r\n               (treeDropDragLeave)=\"node.mouseAction('dragLeave', $event)\"\r\n               (treeDropDragEnter)=\"node.mouseAction('dragEnter', $event)\"\r\n               [treeAllowDrop]=\"node.allowDrop\"\r\n               [allowDragoverStyling]=\"node.allowDragoverStyling()\"\r\n               [treeDrag]=\"node\"\r\n               [treeDragEnabled]=\"node.allowDrag()\">\r\n\r\n              <tree-node-content [node]=\"node\" [index]=\"index\" [template]=\"templates.treeNodeTemplate\">\r\n              </tree-node-content>\r\n          </div>\r\n      </div>\r\n      <ng-container\r\n              [ngTemplateOutlet]=\"templates.treeNodeWrapperTemplate\"\r\n              [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index, templates: templates }\">\r\n      </ng-container>\r\n  `\r\n})\r\n\r\nexport class TreeNodeWrapperComponent {\r\n\r\n  @Input() node: TreeNode;\r\n  @Input() index: number;\r\n  @Input() templates: any;\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\r\nimport { TreeNode } from '../models/tree-node.model';\r\n\r\n@Component({\r\n  selector: 'tree-node-checkbox',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styles: [],\r\n  template: `\r\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\r\n      <input\r\n        class=\"tree-node-checkbox\"\r\n        type=\"checkbox\"\r\n        (click)=\"node.mouseAction('checkboxClick', $event)\"\r\n        [checked]=\"node.isSelected\"\r\n        [indeterminate]=\"node.isPartiallySelected\"\r\n      />\r\n    </ng-container>\r\n  `\r\n})\r\nexport class TreeNodeCheckboxComponent {\r\n  @Input() node: TreeNode;\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { TreeDraggedElement } from '../models/tree-dragged-element.model';\r\n\r\nconst DRAG_OVER_CLASS = 'is-dragging-over';\r\nconst DRAG_DISABLED_CLASS = 'is-dragging-over-disabled';\r\n\r\n@Directive({\r\n  selector: '[treeDrop]'\r\n})\r\nexport class TreeDropDirective implements AfterViewInit, OnDestroy {\r\n  @Input() allowDragoverStyling = true;\r\n  @Output('treeDrop') onDropCallback = new EventEmitter();\r\n  @Output('treeDropDragOver') onDragOverCallback = new EventEmitter();\r\n  @Output('treeDropDragLeave') onDragLeaveCallback = new EventEmitter();\r\n  @Output('treeDropDragEnter') onDragEnterCallback = new EventEmitter();\r\n  private readonly dragOverEventHandler: (ev: DragEvent) => void;\r\n  private readonly dragEnterEventHandler: (ev: DragEvent) => void;\r\n  private readonly dragLeaveEventHandler: (ev: DragEvent) => void;\r\n\r\n  private _allowDrop = (element, $event) => true;\r\n\r\n  @Input() set treeAllowDrop(allowDrop) {\r\n    if (allowDrop instanceof Function) {\r\n      this._allowDrop = allowDrop;\r\n    }\r\n    else this._allowDrop = (element, $event) => allowDrop;\r\n  }\r\n\r\n  allowDrop($event) {\r\n    return this._allowDrop(this.treeDraggedElement.get(), $event);\r\n  }\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2, private treeDraggedElement: TreeDraggedElement, private ngZone: NgZone) {\r\n    this.dragOverEventHandler = this.onDragOver.bind(this);\r\n    this.dragEnterEventHandler = this.onDragEnter.bind(this);\r\n    this.dragLeaveEventHandler = this.onDragLeave.bind(this);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let el: HTMLElement = this.el.nativeElement;\r\n    this.ngZone.runOutsideAngular(() => {\r\n      el.addEventListener('dragover', this.dragOverEventHandler);\r\n      el.addEventListener('dragenter', this.dragEnterEventHandler);\r\n      el.addEventListener('dragleave', this.dragLeaveEventHandler);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    let el: HTMLElement = this.el.nativeElement;\r\n    el.removeEventListener('dragover', this.dragOverEventHandler);\r\n    el.removeEventListener('dragenter', this.dragEnterEventHandler);\r\n    el.removeEventListener('dragleave', this.dragLeaveEventHandler);\r\n  }\r\n\r\n  onDragOver($event) {\r\n    if (!this.allowDrop($event)) {\r\n      if (this.allowDragoverStyling) {\r\n        return this.addDisabledClass();\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.onDragOverCallback.emit({event: $event, element: this.treeDraggedElement.get()});\r\n\r\n    $event.preventDefault();\r\n    if (this.allowDragoverStyling) {\r\n      this.addClass();\r\n    }\r\n  }\r\n\r\n  onDragEnter($event) {\r\n    if (!this.allowDrop($event)) return;\r\n\r\n    $event.preventDefault();\r\n    this.onDragEnterCallback.emit({event: $event, element: this.treeDraggedElement.get()});\r\n  }\r\n\r\n  onDragLeave($event) {\r\n    if (!this.allowDrop($event)) {\r\n      if (this.allowDragoverStyling) {\r\n        return this.removeDisabledClass();\r\n      }\r\n      return;\r\n    }\r\n    this.onDragLeaveCallback.emit({event: $event, element: this.treeDraggedElement.get()});\r\n\r\n    if (this.allowDragoverStyling) {\r\n      this.removeClass();\r\n    }\r\n  }\r\n\r\n  @HostListener('drop', ['$event']) onDrop($event) {\r\n    if (!this.allowDrop($event)) return;\r\n\r\n    $event.preventDefault();\r\n    this.onDropCallback.emit({event: $event, element: this.treeDraggedElement.get()});\r\n\r\n    if (this.allowDragoverStyling) {\r\n      this.removeClass();\r\n    }\r\n    this.treeDraggedElement.set(null);\r\n  }\r\n\r\n  private addClass() {\r\n    this.renderer.addClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n  }\r\n\r\n  private removeClass() {\r\n    this.renderer.removeClass(this.el.nativeElement, DRAG_OVER_CLASS);\r\n  }\r\n\r\n  private addDisabledClass() {\r\n    this.renderer.addClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n  }\r\n\r\n  private removeDisabledClass() {\r\n    this.renderer.removeClass(this.el.nativeElement, DRAG_DISABLED_CLASS);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, DoCheck, ElementRef, HostListener, Input, NgZone, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { TreeDraggedElement } from '../models/tree-dragged-element.model';\r\n\r\nconst DRAG_OVER_CLASS = 'is-dragging-over';\r\n\r\n@Directive({\r\n  selector: '[treeDrag]'\r\n})\r\nexport class TreeDragDirective implements AfterViewInit, DoCheck, OnDestroy {\r\n  @Input('treeDrag') draggedElement;\r\n  @Input() treeDragEnabled;\r\n  private readonly dragEventHandler: (ev: DragEvent) => void;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2, private treeDraggedElement: TreeDraggedElement, private ngZone: NgZone) {\r\n    this.dragEventHandler = this.onDrag.bind(this);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    let el: HTMLElement = this.el.nativeElement;\r\n    this.ngZone.runOutsideAngular(() => {\r\n      el.addEventListener('drag', this.dragEventHandler);\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    this.renderer.setAttribute(this.el.nativeElement, 'draggable', this.treeDragEnabled ? 'true' : 'false');\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    let el: HTMLElement = this.el.nativeElement;\r\n    el.removeEventListener('drag', this.dragEventHandler);\r\n  }\r\n\r\n  @HostListener('dragstart', ['$event']) onDragStart(ev) {\r\n    // setting the data is required by firefox\r\n    ev.dataTransfer.setData('text', ev.target.id);\r\n    this.treeDraggedElement.set(this.draggedElement);\r\n    if (this.draggedElement.mouseAction) {\r\n      this.draggedElement.mouseAction('dragStart', ev);\r\n    }\r\n  }\r\n\r\n  onDrag(ev) {\r\n    if (this.draggedElement.mouseAction) {\r\n      this.draggedElement.mouseAction('drag', ev);\r\n    }\r\n  }\r\n\r\n  @HostListener('dragend') onDragEnd() {\r\n    if (this.draggedElement.mouseAction) {\r\n      this.draggedElement.mouseAction('dragEnd');\r\n    }\r\n    this.treeDraggedElement.set(null);\r\n  }\r\n}\r\n","import { Directive, Input, Renderer2, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nconst EASE_ACCELERATION = 1.005;\r\n\r\n@Directive({\r\n  selector: '[treeAnimateOpen]'\r\n})\r\nexport class TreeAnimateOpenDirective {\r\n  private _isOpen: boolean;\r\n\r\n  @Input('treeAnimateOpenSpeed') animateSpeed: number;\r\n  @Input('treeAnimateOpenAcceleration') animateAcceleration: number;\r\n  @Input('treeAnimateOpenEnabled') isEnabled: boolean;\r\n\r\n  @Input('treeAnimateOpen')\r\n  set isOpen(value: boolean) {\r\n    if (value) {\r\n      this._show();\r\n      if (this.isEnabled && this._isOpen === false) {\r\n        this._animateOpen();\r\n      }\r\n    } else {\r\n      this.isEnabled ? this._animateClose() : this._hide();\r\n    }\r\n    this._isOpen = !!value;\r\n  };\r\n\r\n  private innerElement: any;\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainerRef: ViewContainerRef) {\r\n  }\r\n\r\n  private _show() {\r\n    if (this.innerElement) return;\r\n\r\n    // create child view\r\n    this.innerElement = this.viewContainerRef.createEmbeddedView(this.templateRef).rootNodes[0];\r\n  }\r\n\r\n  private _hide() {\r\n    this.viewContainerRef.clear();\r\n    this.innerElement = null;\r\n  }\r\n\r\n  private _animateOpen() {\r\n    let delta = this.animateSpeed;\r\n    let ease = this.animateAcceleration;\r\n    let maxHeight = 0;\r\n\r\n    // set height to 0\r\n    this.renderer.setStyle(this.innerElement, 'max-height', `0`);\r\n\r\n    // increase maxHeight until height doesn't change\r\n    setTimeout(() => { // Allow inner element to create its content\r\n      const i = setInterval(() => {\r\n        if (!this._isOpen || !this.innerElement) return clearInterval(i);\r\n\r\n        maxHeight += delta;\r\n        const roundedMaxHeight = Math.round(maxHeight);\r\n\r\n        this.renderer.setStyle(this.innerElement, 'max-height', `${roundedMaxHeight}px`);\r\n        const height = this.innerElement.getBoundingClientRect ? this.innerElement.getBoundingClientRect().height : 0; // TBD use renderer\r\n\r\n        delta *= ease;\r\n        ease *= EASE_ACCELERATION;\r\n        if (height < roundedMaxHeight) {\r\n          // Make maxHeight auto because animation finished and container might change height later on\r\n          this.renderer.setStyle(this.innerElement, 'max-height', null);\r\n          clearInterval(i);\r\n        }\r\n      }, 17);\r\n    });\r\n  }\r\n\r\n  private _animateClose() {\r\n    if (!this.innerElement) return;\r\n\r\n    let delta = this.animateSpeed;\r\n    let ease = this.animateAcceleration;\r\n    let height = this.innerElement.getBoundingClientRect().height; // TBD use renderer\r\n\r\n    // slowly decrease maxHeight to 0, starting from current height\r\n    const i = setInterval(() => {\r\n      if (this._isOpen || !this.innerElement) return clearInterval(i);\r\n\r\n      height -= delta;\r\n      this.renderer.setStyle(this.innerElement, 'max-height', `${height}px`);\r\n      delta *= ease;\r\n      ease *= EASE_ACCELERATION;\r\n\r\n      if (height <= 0) {\r\n        // after animation complete - remove child element\r\n        this.viewContainerRef.clear();\r\n        this.innerElement = null;\r\n        clearInterval(i);\r\n      }\r\n    }, 17);\r\n  }\r\n}\r\n","// element-closest | CC0-1.0 | github.com/jonathantneal/closest\r\nif (typeof Element !== 'undefined') {\r\n  if (typeof Element.prototype.matches !== 'function') {\r\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector ||\r\n        Element.prototype['mozMatchesSelector'] ||\r\n        Element.prototype.webkitMatchesSelector ||\r\n        function matches(selector) {\r\n          let element = this;\r\n          let elements = (element.document || element.ownerDocument).querySelectorAll(selector);\r\n          let index = 0;\r\n\r\n          while (elements[index] && elements[index] !== element) {\r\n            ++index;\r\n          }\r\n\r\n          return Boolean(elements[index]);\r\n        };\r\n  }\r\n\r\n  if (typeof Element.prototype['closest'] !== 'function') {\r\n    Element.prototype['closest'] = function closest(selector) {\r\n      let element = this;\r\n\r\n      while (element && element.nodeType === 1) {\r\n        if (element.matches(selector)) {\r\n          return element;\r\n        }\r\n\r\n        element = element.parentNode;\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TreeMobxAutorunDirective } from './mobx-angular/tree-mobx-autorun.directive';\r\n\r\nimport {\r\n  IActionHandler,\r\n  IActionMapping,\r\n  TREE_ACTIONS\r\n} from './models/tree-options.model';\r\nimport {\r\n  IAllowDragFn,\r\n  IAllowDropFn,\r\n  ITreeOptions,\r\n  ITreeState\r\n} from './defs/api';\r\nimport { KEYS } from './constants/keys';\r\nimport { TreeModel } from './models/tree.model';\r\nimport { TreeNode } from './models/tree-node.model';\r\nimport { TreeDraggedElement } from './models/tree-dragged-element.model';\r\nimport { TreeVirtualScroll } from './models/tree-virtual-scroll.model';\r\nimport { LoadingComponent } from './components/loading.component';\r\nimport { TreeComponent } from './components/tree.component';\r\nimport { TreeNodeComponent } from './components/tree-node.component';\r\nimport { TreeNodeContent } from './components/tree-node-content.component';\r\nimport { TreeNodeDropSlot } from './components/tree-node-drop-slot.component';\r\nimport { TreeNodeExpanderComponent } from './components/tree-node-expander.component';\r\nimport { TreeNodeChildrenComponent } from './components/tree-node-children.component';\r\nimport { TreeNodeCollectionComponent } from './components/tree-node-collection.component';\r\nimport { TreeNodeWrapperComponent } from './components/tree-node-wrapper.component';\r\nimport { TreeViewportComponent } from './components/tree-viewport.component';\r\nimport { TreeNodeCheckboxComponent } from './components/tree-node-checkbox.component';\r\nimport { TreeDropDirective } from './directives/tree-drop.directive';\r\nimport { TreeDragDirective } from './directives/tree-drag.directive';\r\nimport { TreeAnimateOpenDirective } from './directives/tree-animate-open.directive';\r\n\r\nimport './polyfills';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TreeComponent,\r\n    TreeNodeComponent,\r\n    TreeNodeContent,\r\n    LoadingComponent,\r\n    TreeDropDirective,\r\n    TreeDragDirective,\r\n    TreeNodeExpanderComponent,\r\n    TreeNodeChildrenComponent,\r\n    TreeNodeDropSlot,\r\n    TreeNodeCollectionComponent,\r\n    TreeViewportComponent,\r\n    TreeNodeWrapperComponent,\r\n    TreeNodeCheckboxComponent,\r\n    TreeAnimateOpenDirective,\r\n    TreeMobxAutorunDirective\r\n  ],\r\n  exports: [\r\n    TreeComponent,\r\n    TreeNodeComponent,\r\n    TreeNodeContent,\r\n    LoadingComponent,\r\n    TreeDropDirective,\r\n    TreeDragDirective,\r\n    TreeNodeExpanderComponent,\r\n    TreeNodeChildrenComponent,\r\n    TreeNodeDropSlot,\r\n    TreeNodeCollectionComponent,\r\n    TreeViewportComponent,\r\n    TreeNodeWrapperComponent,\r\n    TreeNodeCheckboxComponent,\r\n    TreeAnimateOpenDirective,\r\n    TreeMobxAutorunDirective\r\n  ],\r\n  imports: [CommonModule],\r\n  providers: []\r\n})\r\nexport class TreeModule {\r\n}\r\n\r\nexport {\r\n  TreeModel,\r\n  TreeNode,\r\n  TreeDraggedElement,\r\n  TreeVirtualScroll,\r\n  ITreeOptions,\r\n  TREE_ACTIONS,\r\n  KEYS,\r\n  IActionMapping,\r\n  IActionHandler,\r\n  IAllowDropFn,\r\n  IAllowDragFn,\r\n  LoadingComponent,\r\n  TreeAnimateOpenDirective,\r\n  TreeComponent,\r\n  TreeNodeComponent,\r\n  TreeNodeWrapperComponent,\r\n  TreeNodeContent,\r\n  TreeDropDirective,\r\n  TreeDragDirective,\r\n  TreeNodeExpanderComponent,\r\n  TreeNodeChildrenComponent,\r\n  TreeNodeDropSlot,\r\n  TreeNodeCollectionComponent,\r\n  TreeViewportComponent,\r\n  TreeNodeCheckboxComponent,\r\n  ITreeState\r\n};\r\n"],"names":["autorun","Directive","TemplateRef","ViewContainerRef","Input","defaultsDeep","get","omit","isNumber","some","every","first","last","reaction","computed","observable","action","compact","find","isString","isFunction","Injectable","__decorate","Component","ViewEncapsulation","throttle","ElementRef","NgZone","EventEmitter","includes","pick","ContentChild","ViewChild","Output","HostListener","mobxAction","mobxComputed","mobxObservable","Renderer2","DRAG_OVER_CLASS","NgModule","CommonModule"],"mappings":"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"}