/**
 * @fileoverview added by tsickle
 * Generated from: lib/models/tree-options.model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { KEYS } from '../constants/keys';
import { defaultsDeep, get, omit, isNumber } from 'lodash-es';
/**
 * @record
 */
export function IActionHandler() { }
const ɵ0 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node && node.toggleActivated(), ɵ1 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node && node.toggleActivated(true), ɵ2 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node && node.toggleSelected(), ɵ3 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.setIsActive(true), ɵ4 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.setIsActive(false), ɵ5 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.setIsSelected(true), ɵ6 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.setIsSelected(false), ɵ7 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.focus(), ɵ8 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.hasChildren && node.toggleExpanded(), ɵ9 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.expand(), ɵ10 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => node.collapse(), ɵ11 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => tree.focusDrillDown(), ɵ12 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => tree.focusDrillUp(), ɵ13 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => tree.focusNextNode(), ɵ14 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @return {?}
 */
(tree, node, $event) => tree.focusPreviousNode(), ɵ15 = /**
 * @param {?} tree
 * @param {?} node
 * @param {?} $event
 * @param {?} __3
 * @return {?}
 */
(tree, node, $event, { from, to }) => {
    // default action assumes from = node, to = {parent, index}
    if ($event.ctrlKey) {
        tree.copyNode(from, to);
    }
    else {
        tree.moveNode(from, to);
    }
};
/** @type {?} */
export const TREE_ACTIONS = {
    TOGGLE_ACTIVE: (ɵ0),
    TOGGLE_ACTIVE_MULTI: (ɵ1),
    TOGGLE_SELECTED: (ɵ2),
    ACTIVATE: (ɵ3),
    DEACTIVATE: (ɵ4),
    SELECT: (ɵ5),
    DESELECT: (ɵ6),
    FOCUS: (ɵ7),
    TOGGLE_EXPANDED: (ɵ8),
    EXPAND: (ɵ9),
    COLLAPSE: (ɵ10),
    DRILL_DOWN: (ɵ11),
    DRILL_UP: (ɵ12),
    NEXT_NODE: (ɵ13),
    PREVIOUS_NODE: (ɵ14),
    MOVE_NODE: (ɵ15)
};
/** @type {?} */
const defaultActionMapping = {
    mouse: {
        click: TREE_ACTIONS.TOGGLE_ACTIVE,
        dblClick: null,
        contextMenu: null,
        expanderClick: TREE_ACTIONS.TOGGLE_EXPANDED,
        checkboxClick: TREE_ACTIONS.TOGGLE_SELECTED,
        drop: TREE_ACTIONS.MOVE_NODE
    },
    keys: {
        [KEYS.RIGHT]: TREE_ACTIONS.DRILL_DOWN,
        [KEYS.LEFT]: TREE_ACTIONS.DRILL_UP,
        [KEYS.DOWN]: TREE_ACTIONS.NEXT_NODE,
        [KEYS.UP]: TREE_ACTIONS.PREVIOUS_NODE,
        [KEYS.SPACE]: TREE_ACTIONS.TOGGLE_ACTIVE,
        [KEYS.ENTER]: TREE_ACTIONS.TOGGLE_ACTIVE
    }
};
/**
 * @record
 */
export function IActionMapping() { }
if (false) {
    /** @type {?|undefined} */
    IActionMapping.prototype.mouse;
    /** @type {?|undefined} */
    IActionMapping.prototype.keys;
}
export class TreeOptions {
    /**
     * @param {?=} options
     */
    constructor(options = {}) {
        this.options = options;
        this.actionMapping = defaultsDeep({}, this.options.actionMapping, defaultActionMapping);
        if (options.rtl) {
            this.actionMapping.keys[KEYS.RIGHT] = (/** @type {?} */ (get(options, ['actionMapping', 'keys', KEYS.RIGHT]))) || TREE_ACTIONS.DRILL_UP;
            this.actionMapping.keys[KEYS.LEFT] = (/** @type {?} */ (get(options, ['actionMapping', 'keys', KEYS.LEFT]))) || TREE_ACTIONS.DRILL_DOWN;
        }
    }
    /**
     * @return {?}
     */
    get hasChildrenField() { return this.options.hasChildrenField || 'hasChildren'; }
    /**
     * @return {?}
     */
    get childrenField() { return this.options.childrenField || 'children'; }
    /**
     * @return {?}
     */
    get displayField() { return this.options.displayField || 'name'; }
    /**
     * @return {?}
     */
    get idField() { return this.options.idField || 'id'; }
    /**
     * @return {?}
     */
    get isExpandedField() { return this.options.isExpandedField || 'isExpanded'; }
    /**
     * @return {?}
     */
    get getChildren() { return this.options.getChildren; }
    /**
     * @return {?}
     */
    get levelPadding() { return this.options.levelPadding || 0; }
    /**
     * @return {?}
     */
    get useVirtualScroll() { return this.options.useVirtualScroll; }
    /**
     * @return {?}
     */
    get animateExpand() { return this.options.animateExpand; }
    /**
     * @return {?}
     */
    get animateSpeed() { return this.options.animateSpeed || 1; }
    /**
     * @return {?}
     */
    get animateAcceleration() { return this.options.animateAcceleration || 1.2; }
    /**
     * @return {?}
     */
    get scrollOnActivate() { return this.options.scrollOnActivate === undefined ? true : this.options.scrollOnActivate; }
    /**
     * @return {?}
     */
    get rtl() { return !!this.options.rtl; }
    /**
     * @return {?}
     */
    get rootId() { return this.options.rootId; }
    /**
     * @return {?}
     */
    get useCheckbox() { return this.options.useCheckbox; }
    /**
     * @return {?}
     */
    get useTriState() { return this.options.useTriState === undefined ? true : this.options.useTriState; }
    /**
     * @return {?}
     */
    get scrollContainer() { return this.options.scrollContainer; }
    /**
     * @return {?}
     */
    get allowDragoverStyling() { return this.options.allowDragoverStyling === undefined ? true : this.options.allowDragoverStyling; }
    /**
     * @param {?} node
     * @return {?}
     */
    getNodeClone(node) {
        if (this.options.getNodeClone) {
            return this.options.getNodeClone(node);
        }
        return omit(Object.assign({}, node.data), ['id']);
    }
    /**
     * @param {?} element
     * @param {?} to
     * @param {?=} $event
     * @return {?}
     */
    allowDrop(element, to, $event) {
        if (this.options.allowDrop instanceof Function) {
            return this.options.allowDrop(element, to, $event);
        }
        else {
            return this.options.allowDrop === undefined ? true : this.options.allowDrop;
        }
    }
    /**
     * @param {?} node
     * @return {?}
     */
    allowDrag(node) {
        if (this.options.allowDrag instanceof Function) {
            return this.options.allowDrag(node);
        }
        else {
            return this.options.allowDrag;
        }
    }
    /**
     * @param {?} node
     * @return {?}
     */
    nodeClass(node) {
        return this.options.nodeClass ? this.options.nodeClass(node) : '';
    }
    /**
     * @param {?} node
     * @return {?}
     */
    nodeHeight(node) {
        if (node.data.virtual) {
            return 0;
        }
        /** @type {?} */
        let nodeHeight = this.options.nodeHeight || 22;
        if (typeof nodeHeight === 'function') {
            nodeHeight = nodeHeight(node);
        }
        // account for drop slots:
        return nodeHeight + (node.index === 0 ? 2 : 1) * this.dropSlotHeight;
    }
    /**
     * @return {?}
     */
    get dropSlotHeight() {
        return isNumber(this.options.dropSlotHeight) ? this.options.dropSlotHeight : 2;
    }
}
if (false) {
    /** @type {?} */
    TreeOptions.prototype.actionMapping;
    /**
     * @type {?}
     * @private
     */
    TreeOptions.prototype.options;
}
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15 };
//# sourceMappingURL=data:application/json;base64,