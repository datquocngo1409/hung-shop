/**
 * @fileoverview added by tsickle
 * Generated from: lib/mobx-angular/mobx-proxy.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { action as mobxAction } from 'mobx';
import { computed as mobxComputed } from 'mobx';
import { observable as mobxObservable } from 'mobx';
// Re-export mobx operators to be able to use inside components with AOT:
/**
 * @param {...?} args
 * @return {?}
 */
export function actionInternal(...args) {
    return ((/** @type {?} */ (mobxAction)))(...args);
}
/** @type {?} */
export const action = (/** @type {?} */ (Object.assign(actionInternal, mobxAction)));
/**
 * @param {...?} args
 * @return {?}
 */
function computedInternal(...args) {
    return ((/** @type {?} */ (mobxComputed)))(...args);
}
/** @type {?} */
export const computed = (/** @type {?} */ (Object.assign(computedInternal, mobxComputed)));
/**
 * @param {...?} args
 * @return {?}
 */
function observableInternal(...args) {
    return ((/** @type {?} */ (mobxObservable)))(...args);
}
/** @type {?} */
export const observable = (/** @type {?} */ (Object.assign(observableInternal, mobxObservable)));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ieC1wcm94eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjaXJjbG9uL2FuZ3VsYXItdHJlZS1jb21wb25lbnQvIiwic291cmNlcyI6WyJsaWIvbW9ieC1hbmd1bGFyL21vYngtcHJveHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsTUFBTSxJQUFJLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM1QyxPQUFPLEVBQUUsUUFBUSxJQUFJLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNoRCxPQUFPLEVBQUUsVUFBVSxJQUFJLGNBQWMsRUFBRSxNQUFNLE1BQU0sQ0FBQzs7Ozs7O0FBR3BELE1BQU0sVUFBVSxjQUFjLENBQUMsR0FBRyxJQUFJO0lBQ3BDLE9BQU8sQ0FBQyxtQkFBQSxVQUFVLEVBQU8sQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDdEMsQ0FBQzs7QUFDRCxNQUFNLE9BQU8sTUFBTSxHQUFzQixtQkFBQSxNQUFNLENBQUMsTUFBTSxDQUNwRCxjQUFjLEVBQ2QsVUFBVSxDQUNYLEVBQU87Ozs7O0FBRVIsU0FBUyxnQkFBZ0IsQ0FBQyxHQUFHLElBQUk7SUFDL0IsT0FBTyxDQUFDLG1CQUFBLFlBQVksRUFBTyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUN4QyxDQUFDOztBQUNELE1BQU0sT0FBTyxRQUFRLEdBQXdCLG1CQUFBLE1BQU0sQ0FBQyxNQUFNLENBQ3hELGdCQUFnQixFQUNoQixZQUFZLENBQ2IsRUFBTzs7Ozs7QUFFUixTQUFTLGtCQUFrQixDQUFDLEdBQUcsSUFBSTtJQUNqQyxPQUFPLENBQUMsbUJBQUEsY0FBYyxFQUFPLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzFDLENBQUM7O0FBRUQsTUFBTSxPQUFPLFVBQVUsR0FBMEIsbUJBQUEsTUFBTSxDQUFDLE1BQU0sQ0FDNUQsa0JBQWtCLEVBQ2xCLGNBQWMsQ0FDZixFQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWN0aW9uIGFzIG1vYnhBY3Rpb24gfSBmcm9tICdtb2J4JztcclxuaW1wb3J0IHsgY29tcHV0ZWQgYXMgbW9ieENvbXB1dGVkIH0gZnJvbSAnbW9ieCc7XHJcbmltcG9ydCB7IG9ic2VydmFibGUgYXMgbW9ieE9ic2VydmFibGUgfSBmcm9tICdtb2J4JztcclxuXHJcbi8vIFJlLWV4cG9ydCBtb2J4IG9wZXJhdG9ycyB0byBiZSBhYmxlIHRvIHVzZSBpbnNpZGUgY29tcG9uZW50cyB3aXRoIEFPVDpcclxuZXhwb3J0IGZ1bmN0aW9uIGFjdGlvbkludGVybmFsKC4uLmFyZ3MpIHtcclxuICByZXR1cm4gKG1vYnhBY3Rpb24gYXMgYW55KSguLi5hcmdzKTtcclxufVxyXG5leHBvcnQgY29uc3QgYWN0aW9uOiB0eXBlb2YgbW9ieEFjdGlvbiA9IE9iamVjdC5hc3NpZ24oXHJcbiAgYWN0aW9uSW50ZXJuYWwsXHJcbiAgbW9ieEFjdGlvblxyXG4pIGFzIGFueTtcclxuXHJcbmZ1bmN0aW9uIGNvbXB1dGVkSW50ZXJuYWwoLi4uYXJncykge1xyXG4gIHJldHVybiAobW9ieENvbXB1dGVkIGFzIGFueSkoLi4uYXJncyk7XHJcbn1cclxuZXhwb3J0IGNvbnN0IGNvbXB1dGVkOiB0eXBlb2YgbW9ieENvbXB1dGVkID0gT2JqZWN0LmFzc2lnbihcclxuICBjb21wdXRlZEludGVybmFsLFxyXG4gIG1vYnhDb21wdXRlZFxyXG4pIGFzIGFueTtcclxuXHJcbmZ1bmN0aW9uIG9ic2VydmFibGVJbnRlcm5hbCguLi5hcmdzKSB7XHJcbiAgcmV0dXJuIChtb2J4T2JzZXJ2YWJsZSBhcyBhbnkpKC4uLmFyZ3MpO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3Qgb2JzZXJ2YWJsZTogdHlwZW9mIG1vYnhPYnNlcnZhYmxlID0gT2JqZWN0LmFzc2lnbihcclxuICBvYnNlcnZhYmxlSW50ZXJuYWwsXHJcbiAgbW9ieE9ic2VydmFibGVcclxuKSBhcyBhbnk7XHJcbiJdfQ==