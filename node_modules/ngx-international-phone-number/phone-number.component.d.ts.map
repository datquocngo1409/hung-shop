{"version":3,"file":"phone-number.component.d.ts","sources":["phone-number.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, OnInit, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, FormControl, Validator, ValidationErrors } from '@angular/forms';\nimport { Country } from './country.model';\nimport { CountryService } from './country.service';\nexport declare class PhoneNumberComponent implements OnInit, ControlValueAccessor, Validator {\n    private countryService;\n    placeholder: string;\n    maxlength: number;\n    defaultCountry: string;\n    required: boolean;\n    allowDropdown: boolean;\n    type: string;\n    onlyNumber: boolean;\n    allowedCountries: Country[];\n    onCountryCodeChanged: EventEmitter<any>;\n    phoneComponent: ElementRef;\n    onTouch: Function;\n    onModelChange: Function;\n    countries: Country[];\n    selectedCountry: Country;\n    countryFilter: string;\n    showDropdown: boolean;\n    phoneNumber: string;\n    value: string;\n    phoneNumberInput: ElementRef;\n    /**\n     * Util function to check if given text starts with plus sign\n     * @param text\n     */\n    private static startsWithPlus;\n    /**\n     * Reduced the prefixes\n     * @param foundPrefixes\n     */\n    private static reducePrefixes;\n    constructor(countryService: CountryService, phoneComponent: ElementRef);\n    ngOnInit(): void;\n    /**\n     * Opens the country selection dropdown\n     */\n    displayDropDown(): void;\n    /**\n     * Hides the country selection dropdown\n     * @param event\n     */\n    hideDropdown(event: Event): void;\n    /**\n     * Sets the selected country code to given country\n     * @param event\n     * @param countryCode\n     */\n    updateSelectedCountry(event: Event, countryCode: string): void;\n    /**\n     * Updates the phone number\n     * @param event\n     */\n    updatePhoneNumber(event: Event): void;\n    /**\n     * shows the dropdown with keyboard event\n     * @param event\n     */\n    handleKeyboardEvent(event: KeyboardEvent): void;\n    /**\n     * @param prefix\n     */\n    private findPrefix;\n    /**\n     * Sort countries by name\n     */\n    private orderCountriesByName;\n    /**\n     *\n     * @param fn\n     */\n    registerOnTouched(fn: Function): void;\n    /**\n     *\n     * @param fn\n     */\n    registerOnChange(fn: Function): void;\n    /**\n     *\n     * @param value\n     */\n    writeValue(value: string): void;\n    /**\n     * Validation\n     * @param c\n     */\n    validate(c: FormControl): ValidationErrors | null;\n    /**\n     * Updates the value and trigger changes\n     */\n    private updateValue;\n    /**\n     * Updates the input\n     * @param countryCode\n     */\n    private updatePhoneInput;\n    /**\n     * Returns the selected country's dialcode\n     */\n    getSelectedCountryDialCode(): string;\n}\n"]}