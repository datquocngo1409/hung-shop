{"version":3,"file":"bar-rating.component.js","sources":["../inlined/component/bar-rating.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,KAAA,EAAO,MAAA,EAAQ,uBAAA,EAAyB,YAAA,EAAc,UAAA,EACjE,iBAAiB,EAClB,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAqC,aAAA,EAAe,iBAAA,EAA6B,MAAO,gBAAA,CAAiB;AAEhH,qDAAqD;;;;;;;;;;;;;;;;;;;;;;;;AACrD,IAAM,qBAAA,GAAwB;AAC9B,IAAE,OAAO,EAAE,iBAAA;AAAE,IACX,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;AACnD,IAAE,KAAK,EAAE,IAAA;AAAC,CACT,CAAC;AAEF,+CAA+C;AAC/C,IAAM,sBAAA,GAAyB;AAC/B,IAAE,OAAO,EAAE,aAAA;AAAE,IACX,WAAW,EAAE,UAAA,CAAW,cAAM,OAAA,kBAAA,EAAA,CAAA,CAAmB;AACnD,IAAE,KAAK,EAAE,IAAA;AAAE,CACV,CAAC;AAGF;AAAwC,IAuCtC,4BAAoB,iBAAoC;AAC1D,QADsB,sBAAiB,GAAjB,iBAAiB,CAAmB;AAAC,QArCzD,aAAQ,GAAG,EAAE,CAAC;AAChB,QAME,0DAA0D;AAC5D,QAAG,QAAG,GAAG,CAAC,CAAC;AACX,QACE,kDAAkD;AACpD,QAAG,aAAQ,GAAG,KAAK,CAAC;AACpB,QACE,oBAAoB;AACtB,QAAG,UAAK,GAAG,SAAS,CAAC;AACrB,QACE,wBAAwB;AAC1B,QAAG,aAAQ,GAAG,KAAK,CAAC;AACpB,QACE,sCAAsC;AACxC,QAAG,WAAM,GAAG,EAAE,CAAC;AACf,QACE,mEAAmE;AACrE,QAAG,aAAQ,GAAG,KAAK,CAAC;AACpB,QACE;AACF,sEAAgE;AAChE,QAAG,UAAK,GAAG,IAAI,YAAY,EAAU,CAAC;AACtC,QACE;AACF,uFAAiF;AACjF,QAAG,UAAK,GAAG,IAAI,YAAY,EAAU,CAAC;AACtC,QACE;AACF,kEAA4D;AAC5D,QAAG,eAAU,GAAG,IAAI,YAAY,CAAS,IAAI,CAAC,CAAC;AAC/C,QAiFE,aAAQ,GAAG,UAAC,CAAM,IAAO,CAAC,CAAC;AAC7B,QAAE,cAAS,GAAG,cAAQ,CAAC,CAAC;AACxB,IAjFE,CAAC;AACH,IACE,wCAAW,GAAX,UAAY,OAAsB;AACpC,QAAI,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,YAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,QAAI,CAAC;AACL,IAAE,CAAC;AAEH,IAAE,qCAAQ,GAAR;AACD,QADC,iBASC;AACH,QATI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,UAAC,OAAO,EAAE,CAAC,IAAK,OAAA,CAAC;AACtE,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,QAAQ,EAAE,KAAK;AACrB,YAAM,KAAK,EAAE,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAA1B,CAA0B;AAC9C,YAAM,KAAK,EAAE,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,EAAvB,CAAuB;AAC1C,SAAK,CAAC,EAL+D,CAK/D,CAAC,CAAC;AACR,QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,IAAE,CAAC;AAEH,IAAE,mCAAM,GAAN,UAAO,OAAe,EAAE,cAAqB;AAAI,QAAzB,+BAAA,EAAA,qBAAqB;AAAI,QAC/C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;AACpE,YAAM,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;AAC1B,YAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,QAAI,CAAC;AACL,QAAI,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;AACzB,YAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAM,IAAI,CAAC,SAAS,EAAE,CAAC;AACvB,QAAI,CAAC;AACL,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,IAAE,CAAC;AAEH,IAAE,uBAAuB;AACzB,IAAE,kCAAK,GAAL;AACE,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACnC,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,IAAE,CAAC;AAEH,IAAU,wCAAW,GAAnB,UAAoB,SAAS;AAC/B,QADE,iBAUC;AACH,QAVI,6BAA6B;AACjC,QAAI,IAAI,CAAC,QAAQ,GAAG,SAAS,GAAG,CAAC,CAAC;AAClC,QAAI,qBAAqB;AACzB,QAAI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,UAAC,OAAO,EAAE,KAAK,IAAK,OAAA,CAAC;AAC1E,YAAM,QAAQ,EAAE,KAAK,GAAG,CAAC,IAAI,SAAS;AACtC,YAAM,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,SAAS,GAAG,CAAC,CAAC,IAAI,GAAG;AAC7E,YAAM,KAAK,EAAE,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,CAAC,EAAE,KAAK,CAAC,EAA1B,CAA0B;AAC9C,YAAM,KAAK,EAAE,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAvB,CAAuB;AAC1C,SAAK,CAAC,EALmE,CAKnE,CAAC,CAAC;AACR,IAAE,CAAC;AAEH,IAAU,wCAAW,GAAnB,UAAoB,CAAC,EAAE,KAAK;AAC9B,QAAI,6DAA6D;AACjE,QAAI,CAAC,CAAC,cAAc,EAAE,CAAC;AACvB,QAAI,CAAC,CAAC,eAAe,EAAE,CAAC;AACxB,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC3B,IAAE,CAAC;AAEH,IAAU,wCAAW,GAAnB,UAAoB,KAAK;AAC3B,QAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC3C,YAAM,0CAA0C;AAChD,YAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,CAAC;AAAI,gBAC/B,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC;AACpC,gBAAQ,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,gBAAQ,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;AACjC,YAAM,CAAC,CAAC,CAAC;AACT,YAAM,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC5B,YAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAI,CAAC;AACL,IAAE,CAAC;AAEH,IAAE,qDAAqD;AACvD,IAAE,uCAAU,GAAV,UAAW,KAAa;AAC1B,QAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AAC9B,QAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;AAC1C,IAAE,CAAC;AAEH,IAAE,qCAAQ,GAAR,UAAS,CAAc;AACzB,QAAI,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AACnE,IAAE,CAAC;AAEH,IAGE,6CAAgB,GAAhB,UAAiB,EAAuB;AAAI,QAC1C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACvB,IAAE,CAAC;AAEH,IAAE,8CAAiB,GAAjB,UAAkB,EAAa;AAAI,QACjC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACxB,IAAE,CAAC;AAEH,IAAE,6CAAgB,GAAhB,UAAiB,UAAmB;AACtC,QAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AAC/B,IAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBACH;AACA,IAyBA,yBAAC;AAAD,CA/JA,AA+JC;AAIA,8BArBC;AARK,AASP,kBAAkB;UATD,GAA0B,MAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,7CASnB,iCAAc,GAAmE,cAAM,OAAA;IAR5F,QAAQ,EAAE,YAAY,1BASxB,IAAA,EAAC,IAAI,EAAE,iBAAiB,GAAG;AAC3B,CAAC,EAF6F,CAE7F,CAAC;IATA,QAAQ,EAAE,dAUL,iCAAc,GAA2C;AAChE,IAAA,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC1B,IAAA,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AACzB,IAAA,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC9B,IAAA,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC3B,IAAA,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC9B,IAAA,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC5B,IAAA,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;AAC9B,IAAA,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;AAC5B,IAAA,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;AAC5B,IAAA,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;AACjC,CAAC,CAAC;4LArB0jB,kBAC1jB,MAAM,EAAE,CAAC,uTAAuT,CAAC,kBACjU,SAAS,EAAE,CAAC,qBAAqB,EAAE,sBAAsB,CAAC,kBAC1D,eAAe,EAAE,uBAAuB,CAAC,MAAM,cAChD,EAAG,EAAE,GACL,jrBAiBD","sourcesContent":["import {\n  Component, Input, Output, ChangeDetectionStrategy, EventEmitter, forwardRef, OnInit, SimpleChanges, OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, Validator } from '@angular/forms';\n\n/** This allows support [(ngModel)] and ngControl. */\nconst RATING_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BarRatingComponent),\n  multi: true\n};\n\n/** This allows control required validation. */\nconst RATING_VALUE_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => BarRatingComponent),\n  multi: true,\n};\n\n\nexport class BarRatingComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\n\n  contexts = [];\n  nextRate: number;\n  disabled: boolean;\n\n  /** Current rating. Can be a decimal value like 3.14 */\n   rate;\n\n  /** Maximal rating that can be given using this widget. */\n   max = 5;\n\n  /** A flag indicating if rating can be updated. */\n   readOnly = false;\n\n  /** Set the theme */\n   theme = 'default';\n\n  /** Show rating title */\n   showText = false;\n\n  /** Replace rate value with a title */\n   titles = [];\n\n  /** A flag indicating if rating is required for form validation. */\n   required = false;\n\n  /** An event fired when a user is hovering over a given rating.\n   * Event's payload equals to the rating being hovered over. */\n   hover = new EventEmitter<number>();\n\n  /** An event fired when a user stops hovering over a given rating.\n   * Event's payload equals to the rating of the last item being hovered over. */\n   leave = new EventEmitter<number>();\n\n  /** An event fired when a user selects a new rating.\n   * Event's payload equals to the newly selected rating. */\n   rateChange = new EventEmitter<number>(true);\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['rate']) {\n      this.update(this.rate);\n    }\n  }\n\n  ngOnInit() {\n    this.contexts = Array.from({ length: this.max }, (context, i) => ({\n      selected: false,\n      fraction: false,\n      click: (e) => this.handleClick(e, i + 1),\n      enter: () => this.handleEnter(i + 1)\n    }));\n\n    this.updateState(this.rate);\n  }\n\n  update(newRate: number, internalChange = true): void {\n    if (!this.readOnly && !this.disabled && this.rate !== newRate) {\n      this.rate = newRate;\n      this.rateChange.emit(this.rate);\n    }\n    if (internalChange) {\n      this.onChange(this.rate);\n      this.onTouched();\n    }\n    this.updateState(this.rate);\n  }\n\n  /** Reset rate value */\n  reset() {\n    this.leave.emit(this.nextRate);\n    this.updateState(this.rate);\n  }\n\n  private updateState(nextValue) {\n    /** Set rate value as text */\n    this.nextRate = nextValue - 1;\n    /** Set the rating */\n    this.contexts = Array.from({ length: this.max }, (context, index) => ({\n      selected: index + 1 <= nextValue,\n      fraction: (index + 1 === Math.round(nextValue) && nextValue % 1) >= 0.5,\n      click: (e) => this.handleClick(e, index),\n      enter: () => this.handleEnter(index)\n    }));\n  }\n\n  private handleClick(e, value) {\n    /** (NOT TESTED) Remove 300ms click delay on touch devices */\n    e.preventDefault();\n    e.stopPropagation();\n    this.update(value + 1);\n  }\n\n  private handleEnter(index) {\n    if (!this.disabled && !this.readOnly) {\n      /** Add selected class for rating hover */\n      this.contexts.map((context, i) => {\n        context.active = i <= index;\n        context.fraction = false;\n        context.selected = false;\n      });\n      this.nextRate = index;\n      this.hover.emit(index);\n    }\n  }\n\n  /** This is the initial value set to the component */\n  writeValue(value: number) {\n    this.update(value, false);\n    this.changeDetectorRef.markForCheck();\n  }\n\n  validate(c: FormControl) {\n    return (this.required && !c.value) ? { required: true } : null;\n  }\n\n  onChange = (_: any) => { };\n  onTouched = () => { };\n\n  registerOnChange(fn: (value: any) => any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bar-rating',\n  template: \"\\n    <div [class]=\\\"'br br-' + theme\\\" [class.br-readonly]=\\\"readOnly\\\" [class.br-disabled]=\\\"disabled\\\">\\n\\n      <div class=\\\"br-units\\\" (mouseleave)=\\\"reset()\\\">\\n\\n        <div class=\\\"br-unit\\\" *ngFor=\\\"let unit of contexts\\\" [class.br-fraction]=\\\"unit.fraction\\\"\\n            [class.br-selected]=\\\"unit.selected\\\" [class.br-active]=\\\"unit.active\\\"\\n            (click)=\\\"unit.click($event)\\\" (mouseenter)=\\\"unit.enter()\\\"></div>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"showText\\\" class=\\\"br-text\\\">{{ nextRate | rateTitle: titles}}</div>\\n    </div>\\n  \",\n  styles: [\"\\n    *{box-sizing:border-box}.br{position:relative;margin:15px 0}.br-units{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.br-unit{cursor:pointer;-webkit-font-smoothing:antialiased;text-rendering:auto}.br-disabled .br-unit,.br-readonly .br-unit{cursor:default}\\n  \"],\n  providers: [RATING_VALUE_ACCESSOR, RATING_VALUE_VALIDATOR],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rate': [{ type: Input },],\n'max': [{ type: Input },],\n'readOnly': [{ type: Input },],\n'theme': [{ type: Input },],\n'showText': [{ type: Input },],\n'titles': [{ type: Input },],\n'required': [{ type: Input },],\n'hover': [{ type: Output },],\n'leave': [{ type: Output },],\n'rateChange': [{ type: Output },],\n};\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}