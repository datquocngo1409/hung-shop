import { Injectable, Component, Input, ViewChild, RendererFactory2, Directive, ComponentFactoryResolver, Injector, ViewContainerRef, ElementRef, HostBinding, ContentChild, TemplateRef, NgModule } from '@angular/core';
import { TourService, TourState, TourHotkeyListenerComponent, TourModule } from 'ngx-tour-core';
import { MatMenu, MatMenuTrigger, MatMenuModule } from '@angular/material/menu';
import { CommonModule } from '@angular/common';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import withinviewport from 'withinviewport';
import { first } from 'rxjs/operators';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/material/menu';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/material/card';
import * as ɵngcc4 from '@angular/material/button';
import * as ɵngcc5 from '@angular/material/icon';

function TourStepTemplateComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function TourStepTemplateComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "mat-card", 3);
    ɵngcc0.ɵɵlistener("click", function TourStepTemplateComponent_ng_template_2_Template_mat_card_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(1, "mat-card-title");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "mat-card-content");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "mat-card-actions");
    ɵngcc0.ɵɵelementStart(6, "button", 4);
    ɵngcc0.ɵɵlistener("click", function TourStepTemplateComponent_ng_template_2_Template_button_click_6_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.tourService.prev(); });
    ɵngcc0.ɵɵelementStart(7, "mat-icon");
    ɵngcc0.ɵɵtext(8, "chevron_left");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(9, "button", 4);
    ɵngcc0.ɵɵlistener("click", function TourStepTemplateComponent_ng_template_2_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.tourService.next(); });
    ɵngcc0.ɵɵelementStart(10, "mat-icon");
    ɵngcc0.ɵɵtext(11, "chevron_right");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "button", 5);
    ɵngcc0.ɵɵlistener("click", function TourStepTemplateComponent_ng_template_2_Template_button_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.tourService.end(); });
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const step_r3 = ctx.step;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", step_r3 == null ? null : step_r3.title, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", step_r3 == null ? null : step_r3.content, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r2.tourService.hasPrev(step_r3));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("disabled", !ctx_r2.tourService.hasNext(step_r3));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", step_r3 == null ? null : step_r3.endBtnTitle, " ");
} }
const _c0 = function (a0) { return { step: a0 }; };
class NgxmTourService extends TourService {
}
NgxmTourService.ɵfac = function NgxmTourService_Factory(t) { return ɵNgxmTourService_BaseFactory(t || NgxmTourService); };
NgxmTourService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgxmTourService, factory: NgxmTourService.ɵfac });
const ɵNgxmTourService_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgxmTourService);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxmTourService, [{
        type: Injectable
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourAnchorOpenerComponent {
    constructor() {
        this.menu = new MatMenu(undefined, undefined, {
            xPosition: 'after',
            yPosition: 'below',
            overlapTrigger: true,
            backdropClass: ''
        });
    }
}
TourAnchorOpenerComponent.ɵfac = function TourAnchorOpenerComponent_Factory(t) { return new (t || TourAnchorOpenerComponent)(); };
TourAnchorOpenerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TourAnchorOpenerComponent, selectors: [["tourAnchorOpener"]], viewQuery: function TourAnchorOpenerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatMenuTrigger, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);
    } }, inputs: { menu: "menu" }, decls: 2, vars: 1, consts: [[3, "matMenuTriggerFor"], ["trigger", "matMenuTrigger"]], template: function TourAnchorOpenerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "span", 0, 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("matMenuTriggerFor", ctx.menu);
    } }, directives: [ɵngcc1.MatMenuTrigger], styles: ["[_nghost-%COMP%] {\n        display: none;\n      }"] });
TourAnchorOpenerComponent.propDecorators = {
    menu: [{ type: Input }],
    trigger: [{ type: ViewChild, args: [MatMenuTrigger, { static: false },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourAnchorOpenerComponent, [{
        type: Component,
        args: [{
                selector: 'tourAnchorOpener',
                template: `
    <span [matMenuTriggerFor]="menu" #trigger="matMenuTrigger"></span>
  `,
                styles: [`
      :host {
        display: none;
      }
    `]
            }]
    }], function () { return []; }, { menu: [{
            type: Input
        }], trigger: [{
            type: ViewChild,
            args: [MatMenuTrigger, { static: false }]
        }] }); })();
if (false) {
    /** @type {?} */
    TourAnchorOpenerComponent.prototype.menu;
    /** @type {?} */
    TourAnchorOpenerComponent.prototype.trigger;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourStepTemplateService {
}
TourStepTemplateService.ɵfac = function TourStepTemplateService_Factory(t) { return new (t || TourStepTemplateService)(); };
TourStepTemplateService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TourStepTemplateService, factory: TourStepTemplateService.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourStepTemplateService, [{
        type: Injectable
    }], null, null); })();
if (false) {
    /** @type {?} */
    TourStepTemplateService.prototype.templateComponent;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourBackdropService {
    /**
     * @param {?} rendererFactory
     */
    constructor(rendererFactory) {
        this.renderer = rendererFactory.createRenderer(null, null);
    }
    /**
     * @param {?} targetElement
     * @return {?}
     */
    show(targetElement) {
        /** @type {?} */
        const boundingRect = targetElement.nativeElement.getBoundingClientRect();
        if (!this.backdropElement) {
            this.backdropElement = this.renderer.createElement('div');
            this.renderer.addClass(this.backdropElement, 'ngx-tour_backdrop');
            this.renderer.appendChild(document.body, this.backdropElement);
        }
        this.setStyles(boundingRect);
    }
    /**
     * @return {?}
     */
    close() {
        if (this.backdropElement) {
            this.renderer.removeChild(document.body, this.backdropElement);
            this.backdropElement = null;
        }
    }
    /**
     * @private
     * @param {?} boundingRect
     * @return {?}
     */
    setStyles(boundingRect) {
        /** @type {?} */
        const styles = {
            position: 'fixed',
            width: boundingRect.width + 'px',
            height: boundingRect.height + 'px',
            top: boundingRect.top + 'px',
            left: boundingRect.left + 'px',
            'box-shadow': '0 0 0 9999px rgba(0, 0, 0, 0.7)',
            'z-index': '100'
        };
        for (const name of Object.keys(styles)) {
            this.renderer.setStyle(this.backdropElement, name, styles[name]);
        }
    }
}
TourBackdropService.ɵfac = function TourBackdropService_Factory(t) { return new (t || TourBackdropService)(ɵngcc0.ɵɵinject(RendererFactory2)); };
TourBackdropService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: TourBackdropService, factory: TourBackdropService.ɵfac });
/** @nocollapse */
TourBackdropService.ctorParameters = () => [
    { type: RendererFactory2 }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourBackdropService, [{
        type: Injectable
    }], function () { return [{ type: RendererFactory2 }]; }, null); })();
if (false) {
    /**
     * @type {?}
     * @private
     */
    TourBackdropService.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    TourBackdropService.prototype.backdropElement;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourAnchorMatMenuDirective {
    /**
     * @param {?} componentFactoryResolver
     * @param {?} injector
     * @param {?} viewContainer
     * @param {?} element
     * @param {?} tourService
     * @param {?} tourStepTemplate
     * @param {?} tourBackdrop
     */
    constructor(componentFactoryResolver, injector, viewContainer, element, tourService, tourStepTemplate, tourBackdrop) {
        this.componentFactoryResolver = componentFactoryResolver;
        this.injector = injector;
        this.viewContainer = viewContainer;
        this.element = element;
        this.tourService = tourService;
        this.tourStepTemplate = tourStepTemplate;
        this.tourBackdrop = tourBackdrop;
        this.opener = this.viewContainer.createComponent(this.componentFactoryResolver.resolveComponentFactory(TourAnchorOpenerComponent)).instance;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.tourService.register(this.tourAnchor, this);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.tourService.unregister(this.tourAnchor);
    }
    /**
     * @param {?} step
     * @return {?}
     */
    showTourStep(step) {
        this.isActive = true;
        this.tourStepTemplate.templateComponent.step = step;
        // Ignore step.placement
        if (!step.preventScrolling) {
            if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {
                ((/** @type {?} */ (this.element.nativeElement))).scrollIntoView(false);
            }
            else if (!withinviewport(this.element.nativeElement, { sides: 'left top right' })) {
                ((/** @type {?} */ (this.element.nativeElement))).scrollIntoView(true);
            }
        }
        ((/** @type {?} */ (this.opener.trigger)))._element = this.element;
        this.opener.trigger.menu = this.tourStepTemplate.templateComponent.tourStep;
        this.opener.trigger.ngAfterContentInit();
        this.opener.trigger.openMenu();
        if (step.enableBackdrop) {
            this.tourBackdrop.show(this.element);
        }
        else {
            this.tourBackdrop.close();
        }
        step.prevBtnTitle = step.prevBtnTitle || 'Prev';
        step.nextBtnTitle = step.nextBtnTitle || 'Next';
        step.endBtnTitle = step.endBtnTitle || 'End';
        if (this.menuCloseSubscription) {
            this.menuCloseSubscription.unsubscribe();
        }
        this.menuCloseSubscription = this.opener.trigger.menuClosed
            .pipe(first())
            .subscribe((/**
         * @return {?}
         */
        () => {
            if (this.tourService.getStatus() !== TourState.OFF) {
                this.tourService.end();
            }
            this.tourBackdrop.close();
        }));
    }
    /**
     * @return {?}
     */
    hideTourStep() {
        this.isActive = false;
        if (this.menuCloseSubscription) {
            this.menuCloseSubscription.unsubscribe();
        }
        this.opener.trigger.closeMenu();
        if (this.tourService.getStatus() === TourState.OFF) {
            this.tourBackdrop.close();
        }
    }
}
TourAnchorMatMenuDirective.ɵfac = function TourAnchorMatMenuDirective_Factory(t) { return new (t || TourAnchorMatMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgxmTourService), ɵngcc0.ɵɵdirectiveInject(TourStepTemplateService), ɵngcc0.ɵɵdirectiveInject(TourBackdropService)); };
TourAnchorMatMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TourAnchorMatMenuDirective, selectors: [["", "tourAnchor", ""]], hostVars: 2, hostBindings: function TourAnchorMatMenuDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("touranchor--is-active", ctx.isActive);
    } }, inputs: { tourAnchor: "tourAnchor" } });
/** @nocollapse */
TourAnchorMatMenuDirective.ctorParameters = () => [
    { type: ComponentFactoryResolver },
    { type: Injector },
    { type: ViewContainerRef },
    { type: ElementRef },
    { type: NgxmTourService },
    { type: TourStepTemplateService },
    { type: TourBackdropService }
];
TourAnchorMatMenuDirective.propDecorators = {
    tourAnchor: [{ type: Input }],
    isActive: [{ type: HostBinding, args: ['class.touranchor--is-active',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourAnchorMatMenuDirective, [{
        type: Directive,
        args: [{
                selector: '[tourAnchor]'
            }]
    }], function () { return [{ type: ComponentFactoryResolver }, { type: Injector }, { type: ViewContainerRef }, { type: ElementRef }, { type: NgxmTourService }, { type: TourStepTemplateService }, { type: TourBackdropService }]; }, { isActive: [{
            type: HostBinding,
            args: ['class.touranchor--is-active']
        }], tourAnchor: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    TourAnchorMatMenuDirective.prototype.tourAnchor;
    /** @type {?} */
    TourAnchorMatMenuDirective.prototype.opener;
    /** @type {?} */
    TourAnchorMatMenuDirective.prototype.menuCloseSubscription;
    /** @type {?} */
    TourAnchorMatMenuDirective.prototype.isActive;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.componentFactoryResolver;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.viewContainer;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.element;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.tourService;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.tourStepTemplate;
    /**
     * @type {?}
     * @private
     */
    TourAnchorMatMenuDirective.prototype.tourBackdrop;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourStepTemplateComponent extends TourHotkeyListenerComponent {
    /**
     * @param {?} tourStepTemplateService
     * @param {?} tourService
     */
    constructor(tourStepTemplateService, tourService) {
        super(tourService);
        this.tourStepTemplateService = tourStepTemplateService;
        this.tourService = tourService;
        this.step = {};
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.tourStepTemplateService.templateComponent = this;
    }
}
TourStepTemplateComponent.ɵfac = function TourStepTemplateComponent_Factory(t) { return new (t || TourStepTemplateComponent)(ɵngcc0.ɵɵdirectiveInject(TourStepTemplateService), ɵngcc0.ɵɵdirectiveInject(NgxmTourService)); };
TourStepTemplateComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TourStepTemplateComponent, selectors: [["tour-step-template"]], contentQueries: function TourStepTemplateComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepTemplateContent = _t.first);
    } }, viewQuery: function TourStepTemplateComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(MatMenu, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tourStep = _t.first);
    } }, inputs: { stepTemplate: "stepTemplate" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 5, consts: [[1, "tour-step", 3, "overlapTrigger"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["defaultTemplate", ""], [3, "click"], ["mat-icon-button", "", 3, "disabled", "click"], ["mat-button", "", 3, "click"]], template: function TourStepTemplateComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mat-menu", 0);
        ɵngcc0.ɵɵtemplate(1, TourStepTemplateComponent_ng_container_1_Template, 1, 0, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, TourStepTemplateComponent_ng_template_2_Template, 14, 5, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵproperty("overlapTrigger", false);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx.stepTemplate || ctx.stepTemplateContent || _r1)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.step));
    } }, directives: [ɵngcc1._MatMenu, ɵngcc2.NgTemplateOutlet, ɵngcc3.MatCard, ɵngcc3.MatCardTitle, ɵngcc3.MatCardContent, ɵngcc3.MatCardActions, ɵngcc4.MatButton, ɵngcc5.MatIcon], styles: [".tour-step .mat-menu-content {\n        padding: 0 !important;\n      }"] });
/** @nocollapse */
TourStepTemplateComponent.ctorParameters = () => [
    { type: TourStepTemplateService },
    { type: NgxmTourService }
];
TourStepTemplateComponent.propDecorators = {
    tourStep: [{ type: ViewChild, args: [MatMenu, { static: false },] }],
    stepTemplate: [{ type: Input }],
    stepTemplateContent: [{ type: ContentChild, args: [TemplateRef, { static: false },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourStepTemplateComponent, [{
        type: Component,
        args: [{
                selector: 'tour-step-template',
                template: `
    <mat-menu [overlapTrigger]="false" class="tour-step">
      <ng-container
        *ngTemplateOutlet="
          stepTemplate || stepTemplateContent || defaultTemplate;
          context: { step: step }
        "
      ></ng-container>
    </mat-menu>
    <ng-template #defaultTemplate let-step="step">
      <mat-card (click)="$event.stopPropagation()">
        <mat-card-title>
          {{ step?.title }}
        </mat-card-title>
        <mat-card-content>
          {{ step?.content }}
        </mat-card-content>
        <mat-card-actions>
          <button
            mat-icon-button
            [disabled]="!tourService.hasPrev(step)"
            (click)="tourService.prev()"
          >
            <mat-icon>chevron_left</mat-icon>
          </button>
          <button
            mat-icon-button
            [disabled]="!tourService.hasNext(step)"
            (click)="tourService.next()"
          >
            <mat-icon>chevron_right</mat-icon>
          </button>
          <button mat-button (click)="tourService.end()">
            {{ step?.endBtnTitle }}
          </button>
        </mat-card-actions>
      </mat-card>
    </ng-template>
  `,
                styles: [`
      ::ng-deep .tour-step .mat-menu-content {
        padding: 0 !important;
      }
    `]
            }]
    }], function () { return [{ type: TourStepTemplateService }, { type: NgxmTourService }]; }, { tourStep: [{
            type: ViewChild,
            args: [MatMenu, { static: false }]
        }], stepTemplate: [{
            type: Input
        }], stepTemplateContent: [{
            type: ContentChild,
            args: [TemplateRef, { static: false }]
        }] }); })();
if (false) {
    /** @type {?} */
    TourStepTemplateComponent.prototype.tourStep;
    /** @type {?} */
    TourStepTemplateComponent.prototype.stepTemplate;
    /** @type {?} */
    TourStepTemplateComponent.prototype.stepTemplateContent;
    /** @type {?} */
    TourStepTemplateComponent.prototype.step;
    /**
     * @type {?}
     * @private
     */
    TourStepTemplateComponent.prototype.tourStepTemplateService;
    /** @type {?} */
    TourStepTemplateComponent.prototype.tourService;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class TourMatMenuModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: TourMatMenuModule,
            providers: [
                TourStepTemplateService,
                TourBackdropService,
                ...TourModule.forRoot().providers,
                NgxmTourService
            ],
        };
    }
}
TourMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TourMatMenuModule });
TourMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TourMatMenuModule_Factory(t) { return new (t || TourMatMenuModule)(); }, imports: [[CommonModule, TourModule,
            MatMenuModule, MatCardModule, MatButtonModule, MatIconModule,
        ], TourModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TourMatMenuModule, { declarations: function () { return [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent]; }, imports: function () { return [CommonModule, TourModule,
        MatMenuModule, MatCardModule, MatButtonModule, MatIconModule]; }, exports: function () { return [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TourMatMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourAnchorOpenerComponent],
                entryComponents: [TourAnchorOpenerComponent],
                exports: [TourAnchorMatMenuDirective, TourStepTemplateComponent, TourModule],
                imports: [CommonModule, TourModule,
                    MatMenuModule, MatCardModule, MatButtonModule, MatIconModule,
                ]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { TourAnchorMatMenuDirective, TourMatMenuModule, NgxmTourService as TourService, TourStepTemplateComponent, NgxmTourService as ɵa, TourStepTemplateService as ɵb, TourBackdropService as ɵc, TourAnchorOpenerComponent as ɵd };

//# sourceMappingURL=ngx-tour-md-menu.js.map