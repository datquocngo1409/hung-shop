{"version":3,"file":"ngx-easypiechart.js.map","sources":["ng://ngx-easypiechart/lib/ngx-easypiechart.service.ts","ng://ngx-easypiechart/lib/ngx-easypiechart.component.ts","ng://ngx-easypiechart/lib/ngx-easypiechart.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEasypiechartService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\ndeclare var EasyPieChart: any;\n\n@Component({\n  selector: 'ngx-easypiechart',\n  template: `<div>Loading ngx-easypiechart...</div>`\n})\nexport class NgxEasypiechartComponent implements OnInit, OnChanges {\n\n  @Input()\n  options: any;\n\n  @Input()\n  percent: number;\n\n  private pieChart: any;\n\n  constructor(private element: ElementRef<HTMLDivElement>) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    let optionsChanged = false;\n    if (changes.percent) {\n      this.percent = changes.percent.currentValue;\n    }\n    if (changes.options) {\n      this.options = changes.options.currentValue;\n      optionsChanged = true;\n    }\n    this.loadChart(optionsChanged);\n  }\n\n  loadChart(optionsChanged: boolean) {\n    if (this.options && this.percent) {\n      if (optionsChanged) {\n        const node = this.element.nativeElement;\n        // TODO: For some reason , 'EasyPieChart' constructor creates a new chart / canvas everytime it is instantiated.\n        // wish there were a method to update options from an existing 'EasyPieChart' instance / object.\n        // Until then - we remove all existing children under the given div of the component and then recreate altogether if there are new options\n        while (node.hasChildNodes()) {\n          node.removeChild(node.lastChild);\n        }\n        this.pieChart = new EasyPieChart(node, this.options);\n      }\n      if (this.pieChart) {\n        this.pieChart.update(this.percent);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxEasypiechartComponent } from './ngx-easypiechart.component';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [NgxEasypiechartComponent],\n  exports: [NgxEasypiechartComponent]\n})\nexport class NgxEasypiechartModule { }\n"],"names":[],"mappings":";;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;iCAJD;CAQC;;;;;;ACRD;IAiBE,kCAAoB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;KACtD;;;;IAED,2CAAQ;;;IAAR;KACC;;;;;IAED,8CAAW;;;;IAAX,UAAY,OAAsB;;YAC5B,cAAc,GAAG,KAAK;QAC1B,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;SAC7C;QACD,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;YAC5C,cAAc,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;KAChC;;;;;IAED,4CAAS;;;;IAAT,UAAU,cAAuB;QAC/B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE;YAChC,IAAI,cAAc,EAAE;;oBACZ,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa;;;;gBAIvC,OAAO,IAAI,CAAC,aAAa,EAAE,EAAE;oBAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAClC;gBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACtD;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACpC;SACF;KACF;;gBAhDF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,wCAAwC;iBACnD;;;;gBAN4D,UAAU;;;0BASpE,KAAK;0BAGL,KAAK;;IAyCR,+BAAC;CAAA;;;;;;ACrDD;IAGA;KAMsC;;gBANrC,QAAQ,SAAC;oBACR,OAAO,EAAE,EACR;oBACD,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;iBACpC;;IACoC,4BAAC;CAAA;;;;;;;;;;;;;;"}
